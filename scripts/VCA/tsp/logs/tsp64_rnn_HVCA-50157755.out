ng10501
==== Thu 25 Sep 2025 09:59:09 AM EDT | job 50157755 | node ng10501 ====
model= instance= sa_anneal=
SLURM_JOB_GPUS=0
CUDA_VISIBLE_DEVICES=0
0, GPU-1bf9a923-c0f6-ce84-95d9-6ee8a59c931e, NVIDIA A100-SXM4-40GB
/home/idrissm/projects/def-mh541-ab/idrissm/neighborVCA/runs/tsp.py:49: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  model_opt.load_state_dict(torch.load("/home/idrissm/projects/def-mh541-ab/idrissm/neighborVCA/scripts/VCA/tsp/vca.pth", map_location=device), strict=True)
/home/idrissm/projects/def-mh541-ab/idrissm/neighborVCA/runs/tsp.py:62: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  heuristic_samples_idx = torch.load(heuristic_samples_file, map_location=device)
rnn.0.0.weight tensor(0.8602, device='cuda:0', dtype=torch.float64)
tensor([-2.3503, -3.4717, -4.1553, -4.9913, -5.9320], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(13.2644, device='cuda:0', dtype=torch.float64)
tensor([-42.6452, -28.9265, -22.1051, -64.0985, -33.9892], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(319.9290, device='cuda:0', dtype=torch.float64)
tensor([-2.9475, -5.7093, -5.3783, -4.9621, -7.5288], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(29.6667, device='cuda:0', dtype=torch.float64)
tensor([-38.3255, -18.3745, -16.5236, -32.0345, -35.1510], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(276.5202, device='cuda:0', dtype=torch.float64)
tensor([-20.1034, -16.3765, -12.0246, -33.0558, -30.2299], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(187.0802, device='cuda:0', dtype=torch.float64)
tensor([-3.1977, -7.9413, -5.4138, -8.8862, -8.8324], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(45.9571, device='cuda:0', dtype=torch.float64)
tensor([-2.7413, -6.3573, -4.7961, -5.6835, -6.6228], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(27.7776, device='cuda:0', dtype=torch.float64)
tensor([-2.5821, -4.3277, -5.6633, -6.2231, -8.2645], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(48.3915, device='cuda:0', dtype=torch.float64)
tensor([ -6.5294,  -3.7706,  -6.8765,  -7.2129, -11.1393], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(72.7997, device='cuda:0', dtype=torch.float64)
tensor([ -7.3564,  -4.2444,  -7.5003,  -8.0157, -12.6230], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(66.6350, device='cuda:0', dtype=torch.float64)
tensor([ -5.0949,  -5.0761,  -7.0932,  -7.7589, -12.4783], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(59.9688, device='cuda:0', dtype=torch.float64)
tensor([ -2.7685,  -5.6384,  -6.0852,  -6.6637, -10.6696], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(38.8276, device='cuda:0', dtype=torch.float64)
tensor([-2.6285, -5.4717, -5.2572, -5.7405, -8.6750], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(24.4412, device='cuda:0', dtype=torch.float64)
tensor([-2.6893, -4.9742, -4.8557, -5.3082, -7.5281], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(16.3427, device='cuda:0', dtype=torch.float64)
tensor([-2.8169, -4.7327, -4.7200, -5.2877, -6.9029], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(11.4626, device='cuda:0', dtype=torch.float64)
tensor([-2.9708, -4.9579, -4.7638, -5.6669, -6.5152], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(12.6627, device='cuda:0', dtype=torch.float64)
tensor([-3.0489, -5.5224, -4.9015, -6.5047, -6.3195], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(18.2999, device='cuda:0', dtype=torch.float64)
tensor([-3.0015, -6.3393, -4.9965, -7.2525, -6.3295], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(22.7863, device='cuda:0', dtype=torch.float64)
tensor([-2.9862, -6.4184, -4.9391, -7.2901, -6.5008], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(24.4143, device='cuda:0', dtype=torch.float64)
tensor([-2.9114, -5.7037, -4.7367, -6.8256, -6.6796], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(18.5006, device='cuda:0', dtype=torch.float64)
tensor([-2.7553, -5.1635, -4.5172, -6.3829, -6.7813], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(15.4688, device='cuda:0', dtype=torch.float64)
tensor([-2.6287, -4.8568, -4.3667, -5.9811, -6.7893], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(13.1524, device='cuda:0', dtype=torch.float64)
tensor([-2.5292, -4.5186, -4.3273, -5.6705, -6.7620], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(10.9914, device='cuda:0', dtype=torch.float64)
tensor([-2.4358, -4.1684, -4.4098, -5.4920, -6.7406], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(8.5134, device='cuda:0', dtype=torch.float64)
tensor([-2.3484, -3.8839, -4.5985, -5.4672, -6.7265], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(5.3501, device='cuda:0', dtype=torch.float64)
tensor([-2.2809, -3.6853, -4.8570, -5.6492, -6.7512], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(4.8339, device='cuda:0', dtype=torch.float64)
tensor([-2.2441, -3.5459, -5.1276, -5.9736, -6.8146], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(5.2337, device='cuda:0', dtype=torch.float64)
tensor([-2.2342, -3.4519, -5.3724, -6.2822, -6.9088], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(6.1580, device='cuda:0', dtype=torch.float64)
tensor([-2.2449, -3.3803, -5.5562, -6.4323, -7.0011], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(7.5641, device='cuda:0', dtype=torch.float64)
tensor([-2.2553, -3.3298, -5.6583, -6.3570, -7.0469], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(5.2327, device='cuda:0', dtype=torch.float64)
tensor([-2.2712, -3.3062, -5.7252, -6.1882, -7.0462], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(5.8806, device='cuda:0', dtype=torch.float64)
tensor([-2.2812, -3.3070, -5.7502, -5.9637, -6.9803], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(5.8266, device='cuda:0', dtype=torch.float64)
tensor([-2.2902, -3.3357, -5.7320, -5.7302, -6.8374], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(5.4777, device='cuda:0', dtype=torch.float64)
tensor([-2.3023, -3.3794, -5.6672, -5.5241, -6.6513], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(5.1103, device='cuda:0', dtype=torch.float64)
tensor([-2.3217, -3.4398, -5.5585, -5.3514, -6.4605], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.3609, device='cuda:0', dtype=torch.float64)
tensor([-2.3514, -3.5067, -5.4482, -5.2383, -6.3145], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0554, device='cuda:0', dtype=torch.float64)
tensor([-2.3956, -3.5800, -5.3391, -5.1612, -6.2070], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0493, device='cuda:0', dtype=torch.float64)
tensor([-2.4470, -3.6547, -5.2318, -5.1035, -6.1334], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7667, device='cuda:0', dtype=torch.float64)
tensor([-2.5082, -3.7275, -5.1252, -5.0541, -6.0877], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7790, device='cuda:0', dtype=torch.float64)
tensor([-2.5715, -3.7957, -5.0251, -5.0045, -6.0627], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3493, device='cuda:0', dtype=torch.float64)
tensor([-2.6403, -3.8728, -4.9420, -4.9795, -6.0555], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4366, device='cuda:0', dtype=torch.float64)
tensor([-2.7127, -3.9574, -4.8743, -4.9659, -6.0552], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4037, device='cuda:0', dtype=torch.float64)
tensor([-2.7876, -4.0447, -4.8306, -4.9677, -6.0690], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2417, device='cuda:0', dtype=torch.float64)
tensor([-2.8640, -4.1344, -4.7959, -4.9856, -6.0909], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1808, device='cuda:0', dtype=torch.float64)
tensor([-2.9435, -4.2265, -4.7704, -5.0107, -6.1178], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2550, device='cuda:0', dtype=torch.float64)
tensor([-3.0227, -4.3243, -4.7585, -5.0406, -6.1525], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0316, device='cuda:0', dtype=torch.float64)
tensor([-3.1033, -4.4233, -4.7538, -5.0800, -6.1915], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9945, device='cuda:0', dtype=torch.float64)
tensor([-3.1793, -4.5230, -4.7561, -5.1190, -6.2356], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8588, device='cuda:0', dtype=torch.float64)
tensor([-3.2534, -4.6298, -4.7620, -5.1644, -6.2805], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9110, device='cuda:0', dtype=torch.float64)
tensor([-3.3333, -4.7447, -4.7703, -5.2216, -6.3265], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7540, device='cuda:0', dtype=torch.float64)
tensor([-3.4127, -4.8595, -4.7869, -5.3021, -6.3720], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7124, device='cuda:0', dtype=torch.float64)
tensor([-3.4902, -4.9719, -4.8043, -5.3881, -6.4183], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8301, device='cuda:0', dtype=torch.float64)
tensor([-3.5676, -5.0802, -4.8239, -5.4729, -6.4614], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9090, device='cuda:0', dtype=torch.float64)
tensor([-3.6518, -5.1833, -4.8452, -5.5804, -6.5071], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8770, device='cuda:0', dtype=torch.float64)
tensor([-3.7442, -5.2780, -4.8671, -5.7056, -6.5501], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8809, device='cuda:0', dtype=torch.float64)
tensor([-3.8346, -5.3748, -4.8896, -5.8373, -6.5903], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8124, device='cuda:0', dtype=torch.float64)
tensor([-3.9268, -5.4716, -4.9153, -5.9729, -6.6282], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5821, device='cuda:0', dtype=torch.float64)
tensor([-4.0176, -5.5639, -4.9438, -6.1043, -6.6653], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7258, device='cuda:0', dtype=torch.float64)
tensor([-4.1002, -5.6510, -4.9740, -6.2118, -6.7028], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5798, device='cuda:0', dtype=torch.float64)
tensor([-4.1915, -5.7491, -5.0053, -6.3229, -6.7409], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5401, device='cuda:0', dtype=torch.float64)
tensor([-4.2856, -5.8474, -5.0360, -6.4330, -6.7743], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4871, device='cuda:0', dtype=torch.float64)
tensor([-4.3767, -5.9511, -5.0661, -6.5218, -6.8087], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5409, device='cuda:0', dtype=torch.float64)
tensor([-4.4656, -6.0602, -5.0931, -6.6015, -6.8448], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6129, device='cuda:0', dtype=torch.float64)
tensor([-4.5514, -6.1551, -5.1206, -6.6911, -6.8739], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5124, device='cuda:0', dtype=torch.float64)
tensor([-4.6422, -6.2547, -5.1479, -6.7846, -6.9040], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4308, device='cuda:0', dtype=torch.float64)
tensor([-4.7328, -6.3453, -5.1736, -6.8830, -6.9304], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3730, device='cuda:0', dtype=torch.float64)
tensor([-4.8263, -6.4321, -5.2005, -6.9834, -6.9562], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3598, device='cuda:0', dtype=torch.float64)
tensor([-4.9151, -6.5148, -5.2273, -7.0932, -6.9807], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4023, device='cuda:0', dtype=torch.float64)
tensor([-4.9985, -6.5923, -5.2544, -7.1958, -7.0072], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3739, device='cuda:0', dtype=torch.float64)
tensor([-5.0739, -6.6511, -5.2793, -7.2954, -7.0321], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2352, device='cuda:0', dtype=torch.float64)
tensor([-5.1382, -6.7012, -5.3021, -7.3817, -7.0549], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2569, device='cuda:0', dtype=torch.float64)
tensor([-5.1934, -6.7507, -5.3239, -7.4500, -7.0765], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3149, device='cuda:0', dtype=torch.float64)
tensor([-5.2382, -6.7998, -5.3438, -7.4974, -7.0940], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2684, device='cuda:0', dtype=torch.float64)
tensor([-5.2769, -6.8443, -5.3637, -7.5360, -7.1086], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3007, device='cuda:0', dtype=torch.float64)
tensor([-5.3132, -6.8909, -5.3825, -7.5742, -7.1218], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1759, device='cuda:0', dtype=torch.float64)
tensor([-5.3464, -6.9260, -5.3997, -7.6044, -7.1317], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1875, device='cuda:0', dtype=torch.float64)
tensor([-5.3752, -6.9563, -5.4142, -7.6242, -7.1397], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2127, device='cuda:0', dtype=torch.float64)
tensor([-5.3928, -6.9786, -5.4266, -7.6235, -7.1470], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2014, device='cuda:0', dtype=torch.float64)
tensor([-5.4070, -6.9962, -5.4368, -7.6171, -7.1521], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2032, device='cuda:0', dtype=torch.float64)
tensor([-5.4172, -7.0072, -5.4452, -7.6068, -7.1560], device='cuda:0',
       dtype=torch.float64)
Saved results to /home/idrissm/projects/def-mh541-ab/idrissm/neighborVCA/runs/results/tsp/tsp64_/home/idrissm/projects/def-mh541-ab/idrissm/neighborVCA/scripts/VCA/tsp/configHVCA64.json_20250925_100030.csv
rnn.0.0.weight tensor(0.8602, device='cuda:0', dtype=torch.float64)
tensor([-2.3503, -3.4717, -4.1553, -4.9913, -5.9320], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(13.2644, device='cuda:0', dtype=torch.float64)
tensor([-42.6452, -28.9265, -22.1051, -64.0985, -33.9892], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(319.9290, device='cuda:0', dtype=torch.float64)
tensor([-2.9475, -5.7093, -5.3783, -4.9621, -7.5288], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(29.6667, device='cuda:0', dtype=torch.float64)
tensor([-38.3255, -18.3745, -16.5236, -32.0345, -35.1510], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(276.5202, device='cuda:0', dtype=torch.float64)
tensor([-20.1034, -16.3765, -12.0246, -33.0558, -30.2299], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(200.4235, device='cuda:0', dtype=torch.float64)
tensor([-3.1403, -7.6435, -5.2953, -8.3739, -8.4269], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(45.4673, device='cuda:0', dtype=torch.float64)
tensor([-2.6626, -6.0895, -4.8141, -5.6613, -6.6303], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(31.3013, device='cuda:0', dtype=torch.float64)
tensor([-2.7388, -4.1546, -5.8065, -6.3422, -8.6399], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(55.8600, device='cuda:0', dtype=torch.float64)
tensor([ -7.1022,  -3.7811,  -7.0830,  -7.4608, -11.5648], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(81.2415, device='cuda:0', dtype=torch.float64)
tensor([ -7.3192,  -4.3598,  -7.5490,  -8.1452, -12.8388], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(78.9233, device='cuda:0', dtype=torch.float64)
tensor([ -4.2109,  -5.1698,  -6.8102,  -7.3805, -11.9668], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(64.8417, device='cuda:0', dtype=torch.float64)
tensor([-2.6182, -5.5492, -5.6721, -6.1387, -9.7200], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(37.9918, device='cuda:0', dtype=torch.float64)
tensor([-2.6040, -5.2409, -4.9579, -5.4051, -7.9456], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(23.1069, device='cuda:0', dtype=torch.float64)
tensor([-2.7220, -4.8256, -4.6946, -5.2361, -7.1395], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(17.1824, device='cuda:0', dtype=torch.float64)
tensor([-2.8782, -4.8344, -4.6858, -5.4783, -6.6540], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(15.3490, device='cuda:0', dtype=torch.float64)
tensor([-2.9893, -5.2673, -4.8092, -6.2352, -6.3643], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(22.0956, device='cuda:0', dtype=torch.float64)
tensor([-2.9741, -6.0899, -4.9212, -7.1008, -6.3061], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(29.0390, device='cuda:0', dtype=torch.float64)
tensor([-3.0190, -6.3806, -4.8680, -7.2036, -6.4555], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(32.5655, device='cuda:0', dtype=torch.float64)
tensor([-2.9208, -5.6100, -4.6472, -6.6491, -6.6194], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(29.3928, device='cuda:0', dtype=torch.float64)
tensor([-2.6667, -4.9328, -4.4041, -6.0397, -6.6644], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(20.6786, device='cuda:0', dtype=torch.float64)
tensor([-2.5246, -4.5545, -4.2923, -5.6190, -6.6591], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(15.9723, device='cuda:0', dtype=torch.float64)
tensor([-2.4121, -4.1756, -4.3541, -5.4279, -6.6762], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(12.4943, device='cuda:0', dtype=torch.float64)
tensor([-2.3078, -3.8597, -4.5825, -5.4599, -6.7121], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(10.3342, device='cuda:0', dtype=torch.float64)
tensor([-2.2195, -3.6293, -4.9116, -5.7232, -6.7708], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(10.1392, device='cuda:0', dtype=torch.float64)
tensor([-2.1676, -3.4663, -5.2424, -6.0938, -6.8681], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(10.8033, device='cuda:0', dtype=torch.float64)
tensor([-2.1612, -3.3550, -5.5065, -6.3067, -6.9859], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(13.3695, device='cuda:0', dtype=torch.float64)
tensor([-2.1653, -3.2838, -5.6506, -6.2256, -7.0338], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(15.3508, device='cuda:0', dtype=torch.float64)
tensor([-2.1530, -3.2575, -5.6767, -5.9263, -6.9182], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(15.2343, device='cuda:0', dtype=torch.float64)
tensor([-2.1376, -3.2822, -5.5949, -5.5961, -6.6351], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(13.3406, device='cuda:0', dtype=torch.float64)
tensor([-2.1424, -3.3585, -5.4291, -5.3438, -6.3273], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(9.7827, device='cuda:0', dtype=torch.float64)
tensor([-2.1803, -3.4667, -5.2178, -5.1838, -6.1179], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(7.2664, device='cuda:0', dtype=torch.float64)
tensor([-2.2443, -3.5829, -5.0003, -5.0792, -6.0173], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(5.9598, device='cuda:0', dtype=torch.float64)
tensor([-2.3155, -3.6897, -4.8050, -4.9848, -5.9927], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(5.9871, device='cuda:0', dtype=torch.float64)
tensor([-2.3778, -3.7780, -4.6392, -4.8895, -6.0150], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(6.7168, device='cuda:0', dtype=torch.float64)
tensor([-2.4229, -3.8377, -4.5051, -4.7986, -6.0471], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(6.8689, device='cuda:0', dtype=torch.float64)
tensor([-2.4556, -3.8741, -4.4010, -4.7171, -6.0739], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(7.2645, device='cuda:0', dtype=torch.float64)
tensor([-2.4762, -3.8891, -4.3242, -4.6308, -6.0855], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(6.3794, device='cuda:0', dtype=torch.float64)
tensor([-2.4867, -3.8868, -4.2744, -4.5424, -6.0838], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(5.6192, device='cuda:0', dtype=torch.float64)
tensor([-2.4891, -3.8724, -4.2487, -4.4650, -6.0727], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(4.2642, device='cuda:0', dtype=torch.float64)
tensor([-2.4853, -3.8515, -4.2466, -4.4145, -6.0556], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.8440, device='cuda:0', dtype=torch.float64)
tensor([-2.4786, -3.8292, -4.2652, -4.4005, -6.0375], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.6026, device='cuda:0', dtype=torch.float64)
tensor([-2.4705, -3.8093, -4.2947, -4.4217, -6.0214], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(3.0041, device='cuda:0', dtype=torch.float64)
tensor([-2.4584, -3.7942, -4.3366, -4.4702, -6.0090], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(3.6131, device='cuda:0', dtype=torch.float64)
tensor([-2.4427, -3.7900, -4.3634, -4.5306, -6.0021], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(3.8806, device='cuda:0', dtype=torch.float64)
tensor([-2.4221, -3.7933, -4.3668, -4.5930, -5.9952], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(3.3603, device='cuda:0', dtype=torch.float64)
tensor([-2.3997, -3.7983, -4.3492, -4.6573, -5.9868], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(3.5059, device='cuda:0', dtype=torch.float64)
tensor([-2.3809, -3.7995, -4.3221, -4.7163, -5.9730], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.8384, device='cuda:0', dtype=torch.float64)
tensor([-2.3672, -3.7988, -4.2980, -4.7748, -5.9588], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.6756, device='cuda:0', dtype=torch.float64)
tensor([-2.3571, -3.7942, -4.2808, -4.8361, -5.9397], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.5584, device='cuda:0', dtype=torch.float64)
tensor([-2.3547, -3.7914, -4.2761, -4.8951, -5.9192], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.2277, device='cuda:0', dtype=torch.float64)
tensor([-2.3603, -3.7927, -4.2806, -4.9548, -5.9035], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9774, device='cuda:0', dtype=torch.float64)
tensor([-2.3713, -3.7958, -4.2952, -5.0132, -5.8882], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0625, device='cuda:0', dtype=torch.float64)
tensor([-2.3807, -3.7951, -4.3191, -5.0693, -5.8814], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0762, device='cuda:0', dtype=torch.float64)
tensor([-2.3897, -3.7965, -4.3483, -5.1158, -5.8803], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8653, device='cuda:0', dtype=torch.float64)
tensor([-2.3958, -3.7964, -4.3822, -5.1532, -5.8767], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7809, device='cuda:0', dtype=torch.float64)
tensor([-2.3998, -3.7923, -4.4146, -5.1749, -5.8762], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0997, device='cuda:0', dtype=torch.float64)
tensor([-2.4035, -3.7838, -4.4440, -5.1750, -5.8737], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9730, device='cuda:0', dtype=torch.float64)
tensor([-2.4062, -3.7702, -4.4670, -5.1598, -5.8773], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7986, device='cuda:0', dtype=torch.float64)
tensor([-2.4106, -3.7590, -4.4834, -5.1294, -5.8785], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5997, device='cuda:0', dtype=torch.float64)
tensor([-2.4158, -3.7500, -4.4869, -5.0875, -5.8795], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5983, device='cuda:0', dtype=torch.float64)
tensor([-2.4276, -3.7464, -4.4765, -5.0317, -5.8814], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6330, device='cuda:0', dtype=torch.float64)
tensor([-2.4373, -3.7432, -4.4540, -4.9754, -5.8801], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4896, device='cuda:0', dtype=torch.float64)
tensor([-2.4442, -3.7422, -4.4212, -4.9212, -5.8769], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5294, device='cuda:0', dtype=torch.float64)
tensor([-2.4495, -3.7428, -4.3886, -4.8757, -5.8694], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6046, device='cuda:0', dtype=torch.float64)
tensor([-2.4560, -3.7486, -4.3595, -4.8330, -5.8625], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4137, device='cuda:0', dtype=torch.float64)
tensor([-2.4674, -3.7583, -4.3340, -4.7900, -5.8588], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3508, device='cuda:0', dtype=torch.float64)
tensor([-2.4787, -3.7733, -4.3131, -4.7571, -5.8552], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5387, device='cuda:0', dtype=torch.float64)
tensor([-2.4919, -3.7921, -4.2980, -4.7313, -5.8534], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2173, device='cuda:0', dtype=torch.float64)
tensor([-2.5058, -3.8092, -4.2881, -4.7108, -5.8513], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3348, device='cuda:0', dtype=torch.float64)
tensor([-2.5243, -3.8304, -4.2767, -4.6907, -5.8494], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3065, device='cuda:0', dtype=torch.float64)
tensor([-2.5433, -3.8486, -4.2682, -4.6797, -5.8489], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6268, device='cuda:0', dtype=torch.float64)
tensor([-2.5635, -3.8601, -4.2736, -4.6750, -5.8544], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5799, device='cuda:0', dtype=torch.float64)
tensor([-2.5899, -3.8753, -4.2791, -4.6661, -5.8601], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6437, device='cuda:0', dtype=torch.float64)
tensor([-2.6172, -3.8886, -4.2897, -4.6592, -5.8716], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3924, device='cuda:0', dtype=torch.float64)
tensor([-2.6435, -3.9031, -4.3098, -4.6545, -5.8850], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2795, device='cuda:0', dtype=torch.float64)
tensor([-2.6713, -3.9182, -4.3288, -4.6507, -5.8927], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2167, device='cuda:0', dtype=torch.float64)
tensor([-2.7046, -3.9362, -4.3433, -4.6489, -5.8970], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1896, device='cuda:0', dtype=torch.float64)
tensor([-2.7345, -3.9493, -4.3608, -4.6510, -5.9019], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2257, device='cuda:0', dtype=torch.float64)
tensor([-2.7633, -3.9601, -4.3707, -4.6577, -5.9006], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2145, device='cuda:0', dtype=torch.float64)
tensor([-2.7933, -3.9692, -4.3712, -4.6659, -5.8987], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3362, device='cuda:0', dtype=torch.float64)
tensor([-2.8255, -3.9864, -4.3820, -4.6732, -5.9000], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4266, device='cuda:0', dtype=torch.float64)
tensor([-2.8598, -4.0092, -4.3993, -4.6868, -5.8926], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2090, device='cuda:0', dtype=torch.float64)
tensor([-2.8929, -4.0370, -4.4235, -4.7088, -5.8849], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0738, device='cuda:0', dtype=torch.float64)
tensor([-2.9289, -4.0731, -4.4518, -4.7322, -5.8795], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2120, device='cuda:0', dtype=torch.float64)
tensor([-2.9693, -4.1169, -4.4785, -4.7616, -5.8774], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2070, device='cuda:0', dtype=torch.float64)
tensor([-3.0130, -4.1671, -4.5120, -4.8001, -5.8723], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9849, device='cuda:0', dtype=torch.float64)
tensor([-3.0570, -4.2251, -4.5438, -4.8422, -5.8687], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0599, device='cuda:0', dtype=torch.float64)
tensor([-3.1031, -4.2862, -4.5784, -4.8877, -5.8652], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0141, device='cuda:0', dtype=torch.float64)
tensor([-3.1516, -4.3448, -4.6205, -4.9353, -5.8618], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3038, device='cuda:0', dtype=torch.float64)
tensor([-3.1989, -4.4175, -4.6650, -4.9926, -5.8655], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9062, device='cuda:0', dtype=torch.float64)
tensor([-3.2488, -4.5098, -4.7194, -5.0533, -5.8726], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1632, device='cuda:0', dtype=torch.float64)
tensor([-3.2999, -4.6321, -4.7721, -5.1246, -5.8807], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0060, device='cuda:0', dtype=torch.float64)
tensor([-3.3493, -4.7888, -4.8224, -5.1968, -5.8918], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8990, device='cuda:0', dtype=torch.float64)
tensor([-3.3994, -4.9500, -4.8639, -5.2662, -5.8998], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1025, device='cuda:0', dtype=torch.float64)
tensor([-3.4496, -5.1796, -4.9024, -5.3433, -5.9081], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6999, device='cuda:0', dtype=torch.float64)
tensor([-3.5000, -5.4435, -4.9420, -5.4115, -5.9191], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0637, device='cuda:0', dtype=torch.float64)
tensor([-3.5496, -5.7957, -4.9830, -5.4874, -5.9355], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8102, device='cuda:0', dtype=torch.float64)
tensor([-3.5977, -6.1316, -5.0242, -5.5520, -5.9532], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8851, device='cuda:0', dtype=torch.float64)
tensor([-3.6401, -6.4713, -5.0648, -5.6171, -5.9680], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0053, device='cuda:0', dtype=torch.float64)
tensor([-3.6876, -6.8199, -5.1052, -5.6738, -5.9806], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7647, device='cuda:0', dtype=torch.float64)
tensor([-3.7337, -7.2011, -5.1452, -5.7223, -5.9982], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7217, device='cuda:0', dtype=torch.float64)
tensor([-3.7827, -7.5273, -5.1859, -5.7711, -6.0175], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9291, device='cuda:0', dtype=torch.float64)
tensor([-3.8287, -7.8586, -5.2240, -5.8228, -6.0358], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7302, device='cuda:0', dtype=torch.float64)
tensor([-3.8738, -8.1538, -5.2664, -5.8791, -6.0539], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8297, device='cuda:0', dtype=torch.float64)
tensor([-3.9231, -8.4151, -5.3168, -5.9375, -6.0722], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8794, device='cuda:0', dtype=torch.float64)
tensor([-3.9732, -8.6414, -5.3688, -5.9902, -6.0889], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8881, device='cuda:0', dtype=torch.float64)
tensor([-4.0253, -8.8544, -5.4243, -6.0460, -6.1121], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7874, device='cuda:0', dtype=torch.float64)
tensor([-4.0802, -9.0991, -5.4809, -6.0983, -6.1365], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7243, device='cuda:0', dtype=torch.float64)
tensor([-4.1302, -9.2566, -5.5371, -6.1486, -6.1581], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7862, device='cuda:0', dtype=torch.float64)
tensor([-4.1745, -9.3610, -5.5989, -6.2005, -6.1807], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5643, device='cuda:0', dtype=torch.float64)
tensor([-4.2181, -9.4664, -5.6611, -6.2510, -6.2052], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6508, device='cuda:0', dtype=torch.float64)
tensor([-4.2595, -9.5710, -5.7220, -6.3009, -6.2303], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5287, device='cuda:0', dtype=torch.float64)
tensor([-4.2967, -9.6564, -5.7829, -6.3532, -6.2572], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7437, device='cuda:0', dtype=torch.float64)
tensor([-4.3408, -9.7346, -5.8487, -6.4071, -6.2861], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6784, device='cuda:0', dtype=torch.float64)
tensor([-4.3801, -9.7807, -5.9114, -6.4620, -6.3161], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5918, device='cuda:0', dtype=torch.float64)
tensor([-4.4203, -9.8033, -5.9751, -6.5109, -6.3439], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5114, device='cuda:0', dtype=torch.float64)
tensor([-4.4597, -9.8050, -6.0392, -6.5533, -6.3731], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6189, device='cuda:0', dtype=torch.float64)
tensor([-4.5039, -9.8132, -6.0974, -6.5952, -6.4021], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6206, device='cuda:0', dtype=torch.float64)
tensor([-4.5585, -9.8583, -6.1561, -6.6430, -6.4295], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6806, device='cuda:0', dtype=torch.float64)
tensor([-4.6051, -9.8696, -6.2151, -6.6848, -6.4504], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4329, device='cuda:0', dtype=torch.float64)
tensor([-4.6533, -9.8781, -6.2715, -6.7172, -6.4757], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4999, device='cuda:0', dtype=torch.float64)
tensor([-4.7008, -9.8943, -6.3309, -6.7465, -6.5080], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6655, device='cuda:0', dtype=torch.float64)
tensor([-4.7492, -9.8770, -6.3734, -6.7604, -6.5419], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5452, device='cuda:0', dtype=torch.float64)
tensor([-4.7962, -9.8263, -6.4113, -6.7760, -6.5681], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6400, device='cuda:0', dtype=torch.float64)
tensor([-4.8348, -9.7467, -6.4501, -6.7926, -6.5933], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3957, device='cuda:0', dtype=torch.float64)
tensor([-4.8697, -9.6763, -6.4839, -6.8056, -6.6132], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4430, device='cuda:0', dtype=torch.float64)
tensor([-4.8966, -9.6168, -6.5144, -6.8252, -6.6264], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4248, device='cuda:0', dtype=torch.float64)
tensor([-4.9242, -9.5517, -6.5468, -6.8411, -6.6406], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4893, device='cuda:0', dtype=torch.float64)
tensor([-4.9504, -9.4995, -6.5797, -6.8610, -6.6552], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3964, device='cuda:0', dtype=torch.float64)
tensor([-4.9774, -9.4759, -6.6121, -6.8812, -6.6726], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3783, device='cuda:0', dtype=torch.float64)
tensor([-5.0013, -9.4584, -6.6451, -6.9034, -6.6890], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3346, device='cuda:0', dtype=torch.float64)
tensor([-5.0179, -9.3997, -6.6701, -6.9148, -6.7037], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4781, device='cuda:0', dtype=torch.float64)
tensor([-5.0350, -9.3882, -6.6953, -6.9317, -6.7219], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3015, device='cuda:0', dtype=torch.float64)
tensor([-5.0533, -9.3756, -6.7169, -6.9516, -6.7423], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4729, device='cuda:0', dtype=torch.float64)
tensor([-5.0702, -9.3531, -6.7293, -6.9691, -6.7655], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3170, device='cuda:0', dtype=torch.float64)
tensor([-5.0844, -9.3209, -6.7414, -6.9866, -6.7808], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3334, device='cuda:0', dtype=torch.float64)
tensor([-5.0989, -9.2931, -6.7598, -7.0096, -6.7938], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2880, device='cuda:0', dtype=torch.float64)
tensor([-5.1084, -9.2760, -6.7740, -7.0319, -6.8058], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3036, device='cuda:0', dtype=torch.float64)
tensor([-5.1215, -9.2573, -6.7868, -7.0554, -6.8186], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3244, device='cuda:0', dtype=torch.float64)
tensor([-5.1297, -9.2152, -6.7930, -7.0696, -6.8321], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2789, device='cuda:0', dtype=torch.float64)
tensor([-5.1416, -9.1843, -6.7981, -7.0786, -6.8424], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3110, device='cuda:0', dtype=torch.float64)
tensor([-5.1567, -9.1613, -6.8049, -7.0894, -6.8544], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2908, device='cuda:0', dtype=torch.float64)
tensor([-5.1705, -9.1391, -6.8056, -7.0926, -6.8621], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2497, device='cuda:0', dtype=torch.float64)
tensor([-5.1795, -9.1108, -6.8070, -7.0966, -6.8671], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2607, device='cuda:0', dtype=torch.float64)
tensor([-5.1865, -9.0923, -6.8082, -7.1015, -6.8743], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2342, device='cuda:0', dtype=torch.float64)
tensor([-5.1914, -9.0848, -6.8090, -7.1046, -6.8812], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2563, device='cuda:0', dtype=torch.float64)
tensor([-5.1964, -9.0658, -6.8067, -7.1070, -6.8849], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2210, device='cuda:0', dtype=torch.float64)
tensor([-5.1978, -9.0588, -6.8022, -7.1090, -6.8894], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2295, device='cuda:0', dtype=torch.float64)
tensor([-5.2001, -9.0594, -6.7996, -7.1068, -6.8929], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2189, device='cuda:0', dtype=torch.float64)
tensor([-5.2018, -9.0740, -6.7981, -7.1062, -6.8959], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1835, device='cuda:0', dtype=torch.float64)
tensor([-5.2040, -9.0804, -6.7976, -7.1059, -6.9004], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2454, device='cuda:0', dtype=torch.float64)
tensor([-5.2035, -9.0562, -6.7945, -7.1043, -6.9058], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1800, device='cuda:0', dtype=torch.float64)
tensor([-5.2047, -9.0270, -6.7915, -7.1020, -6.9072], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1996, device='cuda:0', dtype=torch.float64)
tensor([-5.2040, -9.0156, -6.7889, -7.1013, -6.9072], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1782, device='cuda:0', dtype=torch.float64)
tensor([-5.1996, -8.9935, -6.7830, -7.0946, -6.9069], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2395, device='cuda:0', dtype=torch.float64)
tensor([-5.1938, -8.9498, -6.7710, -7.0792, -6.9069], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2533, device='cuda:0', dtype=torch.float64)
tensor([-5.1845, -8.9076, -6.7545, -7.0617, -6.9068], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2221, device='cuda:0', dtype=torch.float64)
tensor([-5.1729, -8.8691, -6.7416, -7.0435, -6.9074], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2313, device='cuda:0', dtype=torch.float64)
tensor([-5.1628, -8.8536, -6.7322, -7.0266, -6.9075], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2002, device='cuda:0', dtype=torch.float64)
tensor([-5.1498, -8.8287, -6.7201, -7.0066, -6.9053], device='cuda:0',
       dtype=torch.float64)
Saved results to /home/idrissm/projects/def-mh541-ab/idrissm/neighborVCA/runs/results/tsp/tsp64_/home/idrissm/projects/def-mh541-ab/idrissm/neighborVCA/scripts/VCA/tsp/configHVCA64.json_20250925_100030.csv
rnn.0.0.weight tensor(0.8602, device='cuda:0', dtype=torch.float64)
tensor([-2.3503, -3.4717, -4.1553, -4.9913, -5.9320], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(13.2644, device='cuda:0', dtype=torch.float64)
tensor([-42.6452, -28.9265, -22.1051, -64.0985, -33.9892], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(319.9290, device='cuda:0', dtype=torch.float64)
tensor([-2.9475, -5.7093, -5.3783, -4.9621, -7.5288], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(29.6667, device='cuda:0', dtype=torch.float64)
tensor([-38.3255, -18.3745, -16.5236, -32.0345, -35.1510], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(276.5202, device='cuda:0', dtype=torch.float64)
tensor([-20.1034, -16.3765, -12.0246, -33.0558, -30.2299], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(207.0947, device='cuda:0', dtype=torch.float64)
tensor([-3.1179, -7.5098, -5.2420, -8.1494, -8.2448], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(45.2009, device='cuda:0', dtype=torch.float64)
tensor([-2.6253, -5.9675, -4.8272, -5.6571, -6.6372], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(33.2310, device='cuda:0', dtype=torch.float64)
tensor([-2.8606, -4.0868, -5.8795, -6.4076, -8.8311], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(60.2042, device='cuda:0', dtype=torch.float64)
tensor([ -7.2781,  -3.7931,  -7.1737,  -7.5800, -11.7446], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(85.3662, device='cuda:0', dtype=torch.float64)
tensor([ -7.1552,  -4.4175,  -7.5455,  -8.1703, -12.8819], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(84.7452, device='cuda:0', dtype=torch.float64)
tensor([ -3.7248,  -5.2096,  -6.6592,  -7.1827, -11.6669], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(65.4802, device='cuda:0', dtype=torch.float64)
tensor([-2.5790, -5.4928, -5.4992, -5.9359, -9.3025], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(37.3232, device='cuda:0', dtype=torch.float64)
tensor([-2.6017, -5.1344, -4.8513, -5.3084, -7.7007], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(22.8533, device='cuda:0', dtype=torch.float64)
tensor([-2.7425, -4.7888, -4.6541, -5.2486, -7.0005], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(17.8024, device='cuda:0', dtype=torch.float64)
tensor([-2.9035, -4.9143, -4.6993, -5.6373, -6.5621], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(18.9586, device='cuda:0', dtype=torch.float64)
tensor([-2.9782, -5.4378, -4.8385, -6.5283, -6.3241], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(27.2366, device='cuda:0', dtype=torch.float64)
tensor([-2.9524, -6.2697, -4.9077, -7.1986, -6.3396], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(34.3660, device='cuda:0', dtype=torch.float64)
tensor([-2.9998, -6.1076, -4.7724, -6.9609, -6.5142], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(35.7126, device='cuda:0', dtype=torch.float64)
tensor([-2.7715, -5.1890, -4.5108, -6.2919, -6.6222], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(28.6725, device='cuda:0', dtype=torch.float64)
tensor([-2.5695, -4.6704, -4.3126, -5.7395, -6.6229], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(20.7501, device='cuda:0', dtype=torch.float64)
tensor([-2.4402, -4.2783, -4.2953, -5.4436, -6.6329], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(15.6417, device='cuda:0', dtype=torch.float64)
tensor([-2.3253, -3.9295, -4.4749, -5.4112, -6.6794], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(12.3830, device='cuda:0', dtype=torch.float64)
tensor([-2.2251, -3.6689, -4.8071, -5.6439, -6.7502], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(11.6561, device='cuda:0', dtype=torch.float64)
tensor([-2.1593, -3.4862, -5.1835, -6.0549, -6.8662], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(13.4879, device='cuda:0', dtype=torch.float64)
tensor([-2.1393, -3.3587, -5.4838, -6.3101, -7.0005], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(16.5200, device='cuda:0', dtype=torch.float64)
tensor([-2.1350, -3.2789, -5.6452, -6.2161, -7.0533], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(18.7442, device='cuda:0', dtype=torch.float64)
tensor([-2.1138, -3.2499, -5.6598, -5.8841, -6.9048], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(18.3592, device='cuda:0', dtype=torch.float64)
tensor([-2.0964, -3.2795, -5.5524, -5.5450, -6.5740], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(15.5832, device='cuda:0', dtype=torch.float64)
tensor([-2.1092, -3.3694, -5.3546, -5.3144, -6.2518], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(12.0700, device='cuda:0', dtype=torch.float64)
tensor([-2.1599, -3.4918, -5.1118, -5.1734, -6.0615], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(8.5789, device='cuda:0', dtype=torch.float64)
tensor([-2.2361, -3.6152, -4.8770, -5.0676, -5.9933], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(7.6504, device='cuda:0', dtype=torch.float64)
tensor([-2.3109, -3.7197, -4.6752, -4.9574, -5.9997], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(8.5385, device='cuda:0', dtype=torch.float64)
tensor([-2.3667, -3.7943, -4.5151, -4.8536, -6.0374], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(9.7422, device='cuda:0', dtype=torch.float64)
tensor([-2.4011, -3.8331, -4.3917, -4.7530, -6.0731], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(10.2604, device='cuda:0', dtype=torch.float64)
tensor([-2.4185, -3.8401, -4.3010, -4.6406, -6.0863], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(9.1819, device='cuda:0', dtype=torch.float64)
tensor([-2.4231, -3.8281, -4.2448, -4.5249, -6.0806], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(7.4116, device='cuda:0', dtype=torch.float64)
tensor([-2.4178, -3.8079, -4.2239, -4.4317, -6.0628], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(5.2020, device='cuda:0', dtype=torch.float64)
tensor([-2.4073, -3.7856, -4.2409, -4.3864, -6.0419], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(3.9297, device='cuda:0', dtype=torch.float64)
tensor([-2.3939, -3.7674, -4.2871, -4.3966, -6.0223], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(4.6825, device='cuda:0', dtype=torch.float64)
tensor([-2.3760, -3.7589, -4.3412, -4.4488, -6.0073], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(5.5467, device='cuda:0', dtype=torch.float64)
tensor([-2.3545, -3.7643, -4.3727, -4.5202, -5.9980], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(6.2577, device='cuda:0', dtype=torch.float64)
tensor([-2.3304, -3.7783, -4.3634, -4.5919, -5.9926], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(5.7539, device='cuda:0', dtype=torch.float64)
tensor([-2.3037, -3.7845, -4.3258, -4.6697, -5.9839], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(5.0747, device='cuda:0', dtype=torch.float64)
tensor([-2.2804, -3.7733, -4.2808, -4.7554, -5.9676], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(4.2466, device='cuda:0', dtype=torch.float64)
tensor([-2.2637, -3.7517, -4.2522, -4.8510, -5.9438], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(3.3194, device='cuda:0', dtype=torch.float64)
tensor([-2.2550, -3.7321, -4.2454, -4.9530, -5.9198], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.9268, device='cuda:0', dtype=torch.float64)
tensor([-2.2543, -3.7235, -4.2607, -5.0533, -5.9002], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.7290, device='cuda:0', dtype=torch.float64)
tensor([-2.2572, -3.7234, -4.2915, -5.1382, -5.8893], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.7816, device='cuda:0', dtype=torch.float64)
tensor([-2.2595, -3.7214, -4.3311, -5.1972, -5.8833], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(3.1755, device='cuda:0', dtype=torch.float64)
tensor([-2.2606, -3.7110, -4.3685, -5.2197, -5.8790], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(3.0639, device='cuda:0', dtype=torch.float64)
tensor([-2.2613, -3.6934, -4.3973, -5.2070, -5.8768], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(3.1816, device='cuda:0', dtype=torch.float64)
tensor([-2.2618, -3.6682, -4.4117, -5.1635, -5.8779], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.9052, device='cuda:0', dtype=torch.float64)
tensor([-2.2594, -3.6447, -4.4138, -5.0999, -5.8824], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.6986, device='cuda:0', dtype=torch.float64)
tensor([-2.2558, -3.6260, -4.3996, -5.0219, -5.8880], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.4078, device='cuda:0', dtype=torch.float64)
tensor([-2.2505, -3.6159, -4.3678, -4.9422, -5.8906], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1832, device='cuda:0', dtype=torch.float64)
tensor([-2.2445, -3.6095, -4.3232, -4.8667, -5.8904], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0442, device='cuda:0', dtype=torch.float64)
tensor([-2.2386, -3.6072, -4.2749, -4.8010, -5.8856], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0335, device='cuda:0', dtype=torch.float64)
tensor([-2.2337, -3.6082, -4.2291, -4.7454, -5.8743], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.2066, device='cuda:0', dtype=torch.float64)
tensor([-2.2332, -3.6130, -4.1842, -4.6974, -5.8574], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0296, device='cuda:0', dtype=torch.float64)
tensor([-2.2383, -3.6206, -4.1428, -4.6582, -5.8373], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8255, device='cuda:0', dtype=torch.float64)
tensor([-2.2497, -3.6293, -4.1087, -4.6299, -5.8160], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7635, device='cuda:0', dtype=torch.float64)
tensor([-2.2631, -3.6393, -4.0863, -4.6137, -5.7921], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6799, device='cuda:0', dtype=torch.float64)
tensor([-2.2756, -3.6516, -4.0712, -4.6145, -5.7709], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5598, device='cuda:0', dtype=torch.float64)
tensor([-2.2889, -3.6619, -4.0679, -4.6283, -5.7480], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5593, device='cuda:0', dtype=torch.float64)
tensor([-2.3019, -3.6680, -4.0745, -4.6496, -5.7274], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8645, device='cuda:0', dtype=torch.float64)
tensor([-2.3138, -3.6695, -4.0900, -4.6781, -5.7109], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4715, device='cuda:0', dtype=torch.float64)
tensor([-2.3217, -3.6652, -4.1137, -4.7091, -5.6964], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4899, device='cuda:0', dtype=torch.float64)
tensor([-2.3278, -3.6571, -4.1426, -4.7358, -5.6855], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5360, device='cuda:0', dtype=torch.float64)
tensor([-2.3301, -3.6413, -4.1763, -4.7564, -5.6795], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5579, device='cuda:0', dtype=torch.float64)
tensor([-2.3330, -3.6253, -4.2043, -4.7661, -5.6770], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4446, device='cuda:0', dtype=torch.float64)
tensor([-2.3327, -3.6100, -4.2295, -4.7724, -5.6782], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5977, device='cuda:0', dtype=torch.float64)
tensor([-2.3309, -3.5979, -4.2510, -4.7780, -5.6812], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4870, device='cuda:0', dtype=torch.float64)
tensor([-2.3287, -3.5892, -4.2538, -4.7780, -5.6794], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3609, device='cuda:0', dtype=torch.float64)
tensor([-2.3258, -3.5847, -4.2461, -4.7771, -5.6766], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4558, device='cuda:0', dtype=torch.float64)
tensor([-2.3237, -3.5836, -4.2286, -4.7735, -5.6708], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1933, device='cuda:0', dtype=torch.float64)
tensor([-2.3236, -3.5841, -4.2059, -4.7650, -5.6645], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2698, device='cuda:0', dtype=torch.float64)
tensor([-2.3245, -3.5835, -4.1799, -4.7539, -5.6568], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4611, device='cuda:0', dtype=torch.float64)
tensor([-2.3245, -3.5803, -4.1586, -4.7373, -5.6550], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2590, device='cuda:0', dtype=torch.float64)
tensor([-2.3225, -3.5748, -4.1387, -4.7217, -5.6534], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3362, device='cuda:0', dtype=torch.float64)
tensor([-2.3210, -3.5704, -4.1275, -4.7091, -5.6546], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4562, device='cuda:0', dtype=torch.float64)
tensor([-2.3213, -3.5678, -4.1218, -4.6984, -5.6586], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3932, device='cuda:0', dtype=torch.float64)
tensor([-2.3213, -3.5675, -4.1210, -4.6906, -5.6607], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4536, device='cuda:0', dtype=torch.float64)
tensor([-2.3199, -3.5700, -4.1226, -4.6880, -5.6595], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3021, device='cuda:0', dtype=torch.float64)
tensor([-2.3202, -3.5782, -4.1278, -4.6832, -5.6574], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2262, device='cuda:0', dtype=torch.float64)
tensor([-2.3210, -3.5895, -4.1348, -4.6854, -5.6538], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2143, device='cuda:0', dtype=torch.float64)
tensor([-2.3247, -3.6024, -4.1482, -4.6870, -5.6488], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3010, device='cuda:0', dtype=torch.float64)
tensor([-2.3275, -3.6116, -4.1608, -4.6940, -5.6413], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2200, device='cuda:0', dtype=torch.float64)
tensor([-2.3304, -3.6143, -4.1739, -4.7074, -5.6366], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2154, device='cuda:0', dtype=torch.float64)
tensor([-2.3305, -3.6142, -4.1881, -4.7260, -5.6298], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3596, device='cuda:0', dtype=torch.float64)
tensor([-2.3306, -3.6118, -4.2004, -4.7410, -5.6248], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2147, device='cuda:0', dtype=torch.float64)
tensor([-2.3355, -3.6049, -4.2035, -4.7491, -5.6240], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1960, device='cuda:0', dtype=torch.float64)
tensor([-2.3406, -3.5973, -4.2037, -4.7521, -5.6259], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1151, device='cuda:0', dtype=torch.float64)
tensor([-2.3459, -3.5911, -4.1976, -4.7491, -5.6277], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2603, device='cuda:0', dtype=torch.float64)
tensor([-2.3520, -3.5863, -4.1843, -4.7371, -5.6322], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4192, device='cuda:0', dtype=torch.float64)
tensor([-2.3588, -3.5812, -4.1658, -4.7173, -5.6325], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3551, device='cuda:0', dtype=torch.float64)
tensor([-2.3662, -3.5831, -4.1459, -4.6961, -5.6343], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3700, device='cuda:0', dtype=torch.float64)
tensor([-2.3700, -3.5848, -4.1314, -4.6813, -5.6350], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1574, device='cuda:0', dtype=torch.float64)
tensor([-2.3715, -3.5855, -4.1187, -4.6758, -5.6301], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2351, device='cuda:0', dtype=torch.float64)
tensor([-2.3705, -3.5863, -4.1170, -4.6764, -5.6205], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2097, device='cuda:0', dtype=torch.float64)
tensor([-2.3723, -3.5862, -4.1193, -4.6824, -5.6133], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3737, device='cuda:0', dtype=torch.float64)
tensor([-2.3724, -3.5896, -4.1204, -4.6906, -5.6041], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4291, device='cuda:0', dtype=torch.float64)
tensor([-2.3766, -3.5979, -4.1289, -4.6958, -5.5931], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2252, device='cuda:0', dtype=torch.float64)
tensor([-2.3809, -3.6081, -4.1383, -4.7006, -5.5858], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5014, device='cuda:0', dtype=torch.float64)
tensor([-2.3870, -3.6249, -4.1448, -4.7076, -5.5801], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3538, device='cuda:0', dtype=torch.float64)
tensor([-2.3956, -3.6456, -4.1437, -4.7077, -5.5774], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1813, device='cuda:0', dtype=torch.float64)
tensor([-2.4072, -3.6647, -4.1395, -4.6975, -5.5782], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3197, device='cuda:0', dtype=torch.float64)
tensor([-2.4159, -3.6779, -4.1398, -4.6924, -5.5844], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3925, device='cuda:0', dtype=torch.float64)
tensor([-2.4225, -3.6809, -4.1424, -4.6895, -5.5893], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2454, device='cuda:0', dtype=torch.float64)
tensor([-2.4295, -3.6739, -4.1500, -4.6847, -5.5907], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3206, device='cuda:0', dtype=torch.float64)
tensor([-2.4325, -3.6637, -4.1538, -4.6910, -5.5899], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1348, device='cuda:0', dtype=torch.float64)
tensor([-2.4355, -3.6534, -4.1541, -4.7027, -5.5898], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3555, device='cuda:0', dtype=torch.float64)
tensor([-2.4397, -3.6422, -4.1601, -4.7198, -5.5908], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0579, device='cuda:0', dtype=torch.float64)
tensor([-2.4465, -3.6341, -4.1641, -4.7379, -5.5855], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2379, device='cuda:0', dtype=torch.float64)
tensor([-2.4549, -3.6296, -4.1676, -4.7631, -5.5754], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1276, device='cuda:0', dtype=torch.float64)
tensor([-2.4636, -3.6288, -4.1668, -4.7816, -5.5647], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3067, device='cuda:0', dtype=torch.float64)
tensor([-2.4729, -3.6285, -4.1641, -4.7948, -5.5501], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3353, device='cuda:0', dtype=torch.float64)
tensor([-2.4843, -3.6335, -4.1573, -4.7969, -5.5350], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1240, device='cuda:0', dtype=torch.float64)
tensor([-2.4936, -3.6356, -4.1528, -4.7934, -5.5260], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1625, device='cuda:0', dtype=torch.float64)
tensor([-2.5035, -3.6383, -4.1480, -4.7859, -5.5212], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1485, device='cuda:0', dtype=torch.float64)
tensor([-2.5096, -3.6464, -4.1414, -4.7756, -5.5227], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1872, device='cuda:0', dtype=torch.float64)
tensor([-2.5118, -3.6558, -4.1322, -4.7671, -5.5244], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4543, device='cuda:0', dtype=torch.float64)
tensor([-2.5118, -3.6657, -4.1216, -4.7542, -5.5375], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2390, device='cuda:0', dtype=torch.float64)
tensor([-2.5102, -3.6746, -4.1182, -4.7467, -5.5458], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2090, device='cuda:0', dtype=torch.float64)
tensor([-2.5053, -3.6867, -4.1176, -4.7387, -5.5547], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2718, device='cuda:0', dtype=torch.float64)
tensor([-2.4972, -3.7026, -4.1205, -4.7367, -5.5562], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4316, device='cuda:0', dtype=torch.float64)
tensor([-2.4873, -3.7096, -4.1286, -4.7448, -5.5586], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2302, device='cuda:0', dtype=torch.float64)
tensor([-2.4808, -3.7157, -4.1383, -4.7515, -5.5579], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4145, device='cuda:0', dtype=torch.float64)
tensor([-2.4770, -3.7247, -4.1442, -4.7617, -5.5556], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9602, device='cuda:0', dtype=torch.float64)
tensor([-2.4752, -3.7289, -4.1486, -4.7699, -5.5505], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5415, device='cuda:0', dtype=torch.float64)
tensor([-2.4768, -3.7327, -4.1590, -4.7715, -5.5467], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4559, device='cuda:0', dtype=torch.float64)
tensor([-2.4841, -3.7409, -4.1706, -4.7681, -5.5424], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4725, device='cuda:0', dtype=torch.float64)
tensor([-2.4944, -3.7469, -4.1781, -4.7648, -5.5467], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3554, device='cuda:0', dtype=torch.float64)
tensor([-2.5041, -3.7550, -4.1866, -4.7621, -5.5490], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0408, device='cuda:0', dtype=torch.float64)
tensor([-2.5163, -3.7653, -4.1925, -4.7536, -5.5507], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4281, device='cuda:0', dtype=torch.float64)
tensor([-2.5273, -3.7761, -4.1936, -4.7528, -5.5484], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2680, device='cuda:0', dtype=torch.float64)
tensor([-2.5395, -3.7887, -4.1895, -4.7520, -5.5506], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3455, device='cuda:0', dtype=torch.float64)
tensor([-2.5531, -3.7968, -4.1853, -4.7439, -5.5536], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2155, device='cuda:0', dtype=torch.float64)
tensor([-2.5660, -3.8019, -4.1807, -4.7354, -5.5533], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4329, device='cuda:0', dtype=torch.float64)
tensor([-2.5815, -3.8063, -4.1789, -4.7339, -5.5527], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4726, device='cuda:0', dtype=torch.float64)
tensor([-2.5987, -3.8118, -4.1781, -4.7409, -5.5529], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5936, device='cuda:0', dtype=torch.float64)
tensor([-2.6203, -3.8226, -4.1794, -4.7459, -5.5486], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2759, device='cuda:0', dtype=torch.float64)
tensor([-2.6416, -3.8348, -4.1837, -4.7592, -5.5472], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2481, device='cuda:0', dtype=torch.float64)
tensor([-2.6611, -3.8452, -4.1850, -4.7698, -5.5424], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1954, device='cuda:0', dtype=torch.float64)
tensor([-2.6830, -3.8565, -4.1856, -4.7817, -5.5407], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3187, device='cuda:0', dtype=torch.float64)
tensor([-2.7038, -3.8720, -4.1890, -4.7982, -5.5408], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2829, device='cuda:0', dtype=torch.float64)
tensor([-2.7245, -3.8816, -4.1943, -4.8246, -5.5397], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3571, device='cuda:0', dtype=torch.float64)
tensor([-2.7481, -3.8928, -4.2035, -4.8429, -5.5407], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0128, device='cuda:0', dtype=torch.float64)
tensor([-2.7680, -3.9077, -4.2150, -4.8670, -5.5408], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0814, device='cuda:0', dtype=torch.float64)
tensor([-2.7864, -3.9206, -4.2228, -4.8823, -5.5408], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1267, device='cuda:0', dtype=torch.float64)
tensor([-2.8046, -3.9333, -4.2350, -4.9056, -5.5479], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4965, device='cuda:0', dtype=torch.float64)
tensor([-2.8264, -3.9523, -4.2490, -4.9334, -5.5585], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1450, device='cuda:0', dtype=torch.float64)
tensor([-2.8471, -3.9706, -4.2696, -4.9584, -5.5677], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1218, device='cuda:0', dtype=torch.float64)
tensor([-2.8683, -3.9853, -4.2825, -4.9959, -5.5747], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0441, device='cuda:0', dtype=torch.float64)
tensor([-2.8932, -4.0015, -4.2972, -5.0122, -5.5804], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3761, device='cuda:0', dtype=torch.float64)
tensor([-2.9173, -4.0196, -4.3027, -5.0119, -5.5806], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3085, device='cuda:0', dtype=torch.float64)
tensor([-2.9435, -4.0373, -4.3182, -5.0076, -5.5857], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0980, device='cuda:0', dtype=torch.float64)
tensor([-2.9740, -4.0642, -4.3408, -5.0052, -5.5920], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1568, device='cuda:0', dtype=torch.float64)
tensor([-3.0004, -4.0895, -4.3547, -5.0016, -5.5951], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2430, device='cuda:0', dtype=torch.float64)
tensor([-3.0293, -4.1172, -4.3695, -5.0009, -5.5969], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2503, device='cuda:0', dtype=torch.float64)
tensor([-3.0589, -4.1420, -4.3874, -4.9900, -5.5974], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3500, device='cuda:0', dtype=torch.float64)
tensor([-3.0893, -4.1683, -4.4071, -4.9887, -5.6038], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0831, device='cuda:0', dtype=torch.float64)
tensor([-3.1260, -4.2030, -4.4280, -4.9871, -5.6096], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0691, device='cuda:0', dtype=torch.float64)
tensor([-3.1649, -4.2447, -4.4577, -4.9913, -5.6104], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0035, device='cuda:0', dtype=torch.float64)
tensor([-3.2014, -4.2895, -4.4853, -5.0031, -5.6089], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1492, device='cuda:0', dtype=torch.float64)
tensor([-3.2432, -4.3368, -4.5009, -5.0179, -5.5979], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2159, device='cuda:0', dtype=torch.float64)
tensor([-3.2905, -4.3865, -4.5141, -5.0277, -5.5905], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1216, device='cuda:0', dtype=torch.float64)
tensor([-3.3353, -4.4425, -4.5226, -5.0421, -5.5851], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0475, device='cuda:0', dtype=torch.float64)
tensor([-3.3810, -4.4966, -4.5404, -5.0679, -5.5831], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1657, device='cuda:0', dtype=torch.float64)
tensor([-3.4334, -4.5492, -4.5651, -5.1039, -5.5798], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2177, device='cuda:0', dtype=torch.float64)
tensor([-3.4882, -4.6089, -4.5927, -5.1407, -5.5818], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9519, device='cuda:0', dtype=torch.float64)
tensor([-3.5444, -4.6707, -4.6225, -5.1748, -5.5909], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0815, device='cuda:0', dtype=torch.float64)
tensor([-3.5997, -4.7386, -4.6644, -5.2239, -5.6006], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0493, device='cuda:0', dtype=torch.float64)
tensor([-3.6507, -4.8032, -4.7070, -5.2797, -5.6117], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9950, device='cuda:0', dtype=torch.float64)
tensor([-3.7088, -4.8736, -4.7444, -5.3333, -5.6258], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2514, device='cuda:0', dtype=torch.float64)
tensor([-3.7710, -4.9608, -4.7916, -5.4005, -5.6506], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1493, device='cuda:0', dtype=torch.float64)
tensor([-3.8367, -5.0578, -4.8421, -5.4691, -5.6755], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0586, device='cuda:0', dtype=torch.float64)
tensor([-3.9038, -5.1514, -4.9006, -5.5420, -5.7033], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9452, device='cuda:0', dtype=torch.float64)
tensor([-3.9697, -5.2499, -4.9528, -5.6110, -5.7308], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9126, device='cuda:0', dtype=torch.float64)
tensor([-4.0329, -5.3459, -5.0048, -5.6687, -5.7535], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2020, device='cuda:0', dtype=torch.float64)
tensor([-4.0925, -5.4624, -5.0703, -5.7459, -5.7721], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0918, device='cuda:0', dtype=torch.float64)
tensor([-4.1489, -5.5648, -5.1270, -5.8158, -5.7954], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9902, device='cuda:0', dtype=torch.float64)
tensor([-4.2044, -5.6945, -5.1816, -5.8766, -5.8201], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1659, device='cuda:0', dtype=torch.float64)
tensor([-4.2670, -5.8514, -5.2364, -5.9338, -5.8507], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8857, device='cuda:0', dtype=torch.float64)
tensor([-4.3367, -6.0132, -5.2966, -5.9773, -5.8824], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9107, device='cuda:0', dtype=torch.float64)
tensor([-4.4143, -6.1840, -5.3581, -6.0248, -5.9045], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1323, device='cuda:0', dtype=torch.float64)
tensor([-4.4969, -6.3705, -5.4249, -6.0788, -5.9270], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9656, device='cuda:0', dtype=torch.float64)
tensor([-4.5883, -6.5177, -5.4911, -6.1222, -5.9516], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0003, device='cuda:0', dtype=torch.float64)
tensor([-4.6989, -6.6182, -5.5739, -6.1756, -5.9828], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0512, device='cuda:0', dtype=torch.float64)
tensor([-4.8334, -6.7390, -5.6518, -6.2372, -6.0093], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0618, device='cuda:0', dtype=torch.float64)
tensor([-4.9970, -6.8627, -5.7472, -6.3092, -6.0382], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7529, device='cuda:0', dtype=torch.float64)
tensor([-5.1662, -6.9133, -5.8360, -6.3812, -6.0608], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8529, device='cuda:0', dtype=torch.float64)
tensor([-5.3664, -7.0914, -5.9342, -6.4586, -6.0859], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8614, device='cuda:0', dtype=torch.float64)
tensor([-5.5643, -7.2817, -6.0328, -6.5289, -6.1093], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8314, device='cuda:0', dtype=torch.float64)
tensor([-5.7632, -7.4381, -6.1478, -6.5992, -6.1384], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9829, device='cuda:0', dtype=torch.float64)
tensor([-6.0076, -7.5888, -6.2675, -6.6809, -6.1706], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7826, device='cuda:0', dtype=torch.float64)
tensor([-6.2465, -7.6968, -6.3854, -6.7658, -6.2045], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8520, device='cuda:0', dtype=torch.float64)
tensor([-6.4888, -7.7757, -6.5112, -6.8493, -6.2298], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7964, device='cuda:0', dtype=torch.float64)
tensor([-6.6506, -7.7599, -6.6353, -6.9170, -6.2513], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6626, device='cuda:0', dtype=torch.float64)
tensor([-6.7968, -7.7877, -6.7512, -6.9803, -6.2735], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7593, device='cuda:0', dtype=torch.float64)
tensor([-6.9936, -7.7272, -6.8681, -7.0388, -6.3055], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7513, device='cuda:0', dtype=torch.float64)
tensor([-7.1653, -7.7410, -6.9731, -7.1017, -6.3388], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8722, device='cuda:0', dtype=torch.float64)
tensor([-7.2726, -7.7473, -7.0534, -7.1534, -6.3695], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0465, device='cuda:0', dtype=torch.float64)
tensor([-7.3837, -7.8101, -7.1472, -7.2363, -6.4034], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9363, device='cuda:0', dtype=torch.float64)
tensor([-7.6207, -7.8984, -7.2494, -7.3230, -6.4423], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7478, device='cuda:0', dtype=torch.float64)
tensor([-7.8516, -7.9974, -7.3487, -7.3968, -6.4872], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8017, device='cuda:0', dtype=torch.float64)
tensor([-8.0704, -8.0795, -7.4249, -7.4596, -6.5302], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8374, device='cuda:0', dtype=torch.float64)
tensor([-8.2500, -8.1382, -7.4950, -7.5185, -6.5578], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7980, device='cuda:0', dtype=torch.float64)
tensor([-8.4007, -8.1706, -7.5841, -7.5792, -6.5851], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7904, device='cuda:0', dtype=torch.float64)
tensor([-8.4836, -8.2486, -7.6675, -7.6411, -6.6127], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6962, device='cuda:0', dtype=torch.float64)
tensor([-8.5738, -8.3382, -7.7546, -7.7132, -6.6251], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5975, device='cuda:0', dtype=torch.float64)
tensor([-8.6656, -8.4664, -7.8589, -7.7939, -6.6464], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6920, device='cuda:0', dtype=torch.float64)
tensor([-8.7607, -8.6540, -7.9604, -7.8835, -6.6689], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5799, device='cuda:0', dtype=torch.float64)
tensor([-8.9138, -8.8845, -8.0638, -7.9666, -6.6992], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7125, device='cuda:0', dtype=torch.float64)
tensor([-9.0345, -9.1329, -8.1568, -8.0456, -6.7293], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7082, device='cuda:0', dtype=torch.float64)
tensor([-9.1759, -9.3896, -8.2239, -8.1142, -6.7553], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6548, device='cuda:0', dtype=torch.float64)
tensor([-9.3394, -9.5767, -8.3036, -8.1726, -6.7918], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6774, device='cuda:0', dtype=torch.float64)
tensor([-9.4807, -9.6840, -8.3754, -8.2260, -6.8218], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6206, device='cuda:0', dtype=torch.float64)
tensor([-9.5814, -9.7506, -8.4367, -8.2819, -6.8490], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7243, device='cuda:0', dtype=torch.float64)
tensor([-9.6824, -9.7678, -8.5112, -8.3364, -6.8808], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6723, device='cuda:0', dtype=torch.float64)
tensor([-9.8587, -9.7412, -8.5752, -8.3915, -6.9213], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6794, device='cuda:0', dtype=torch.float64)
tensor([-9.9654, -9.6871, -8.6219, -8.4472, -6.9563], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6157, device='cuda:0', dtype=torch.float64)
tensor([-10.0550,  -9.6254,  -8.6535,  -8.4899,  -6.9774], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8227, device='cuda:0', dtype=torch.float64)
tensor([-10.1594,  -9.5388,  -8.6788,  -8.5165,  -6.9942], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6172, device='cuda:0', dtype=torch.float64)
tensor([-10.2263,  -9.4388,  -8.7120,  -8.5540,  -7.0234], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7853, device='cuda:0', dtype=torch.float64)
tensor([-10.2339,  -9.3009,  -8.7430,  -8.5820,  -7.0583], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5354, device='cuda:0', dtype=torch.float64)
tensor([-10.2583,  -9.2143,  -8.7726,  -8.6011,  -7.0965], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7301, device='cuda:0', dtype=torch.float64)
tensor([-10.2499,  -9.1914,  -8.8167,  -8.6381,  -7.1274], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6313, device='cuda:0', dtype=torch.float64)
tensor([-10.2063,  -9.1546,  -8.8570,  -8.6685,  -7.1430], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4998, device='cuda:0', dtype=torch.float64)
tensor([-10.2062,  -9.1534,  -8.9084,  -8.6875,  -7.1687], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5896, device='cuda:0', dtype=torch.float64)
tensor([-10.1901,  -9.1525,  -8.9776,  -8.6986,  -7.1900], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6265, device='cuda:0', dtype=torch.float64)
tensor([-10.2046,  -9.1869,  -9.0575,  -8.7390,  -7.2180], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5104, device='cuda:0', dtype=torch.float64)
tensor([-10.1732,  -9.1574,  -9.0862,  -8.7638,  -7.2337], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6409, device='cuda:0', dtype=torch.float64)
tensor([-10.1780,  -9.2169,  -9.1337,  -8.7975,  -7.2593], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7341, device='cuda:0', dtype=torch.float64)
tensor([-10.2012,  -9.3376,  -9.1863,  -8.8133,  -7.2835], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6083, device='cuda:0', dtype=torch.float64)
tensor([-10.3078,  -9.4251,  -9.2216,  -8.8130,  -7.3086], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4847, device='cuda:0', dtype=torch.float64)
tensor([-10.3673,  -9.5203,  -9.2465,  -8.8367,  -7.3275], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6526, device='cuda:0', dtype=torch.float64)
tensor([-10.4973,  -9.6692,  -9.3223,  -8.8671,  -7.3643], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5727, device='cuda:0', dtype=torch.float64)
tensor([-10.6365,  -9.9003,  -9.4101,  -8.8982,  -7.4013], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5164, device='cuda:0', dtype=torch.float64)
tensor([-10.7188, -10.1381,  -9.4787,  -8.9119,  -7.4360], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5661, device='cuda:0', dtype=torch.float64)
tensor([-10.7167, -10.3910,  -9.5260,  -8.9154,  -7.4590], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4939, device='cuda:0', dtype=torch.float64)
tensor([-10.7710, -10.6460,  -9.5684,  -8.9171,  -7.4895], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5677, device='cuda:0', dtype=torch.float64)
tensor([-10.8260, -10.8935,  -9.6046,  -8.9195,  -7.5125], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5161, device='cuda:0', dtype=torch.float64)
tensor([-10.8552, -11.0948,  -9.6634,  -8.9344,  -7.5360], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6111, device='cuda:0', dtype=torch.float64)
tensor([-10.8897, -11.3243,  -9.7180,  -8.9345,  -7.5545], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5129, device='cuda:0', dtype=torch.float64)
tensor([-10.9329, -11.6162,  -9.7955,  -8.9360,  -7.5722], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4384, device='cuda:0', dtype=torch.float64)
tensor([-10.9643, -11.9217,  -9.8905,  -8.9449,  -7.5942], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4678, device='cuda:0', dtype=torch.float64)
tensor([-11.0431, -12.2219,  -9.9851,  -8.9553,  -7.6074], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5635, device='cuda:0', dtype=torch.float64)
tensor([-11.0932, -12.5150, -10.0648,  -8.9657,  -7.6179], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5407, device='cuda:0', dtype=torch.float64)
tensor([-11.2020, -12.8420, -10.1728,  -9.0026,  -7.6471], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3838, device='cuda:0', dtype=torch.float64)
tensor([-11.2887, -13.2237, -10.2762,  -9.0467,  -7.6970], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3566, device='cuda:0', dtype=torch.float64)
tensor([-11.3480, -13.5732, -10.3978,  -9.0950,  -7.7475], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4312, device='cuda:0', dtype=torch.float64)
tensor([-11.3479, -13.7925, -10.4967,  -9.1514,  -7.7893], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4672, device='cuda:0', dtype=torch.float64)
tensor([-11.4084, -14.0269, -10.5983,  -9.2182,  -7.8397], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3638, device='cuda:0', dtype=torch.float64)
tensor([-11.4610, -14.1144, -10.6569,  -9.2643,  -7.8738], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5007, device='cuda:0', dtype=torch.float64)
tensor([-11.5507, -14.1278, -10.6913,  -9.3012,  -7.9023], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3602, device='cuda:0', dtype=torch.float64)
tensor([-11.6378, -14.0537, -10.7146,  -9.3218,  -7.9287], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3595, device='cuda:0', dtype=torch.float64)
tensor([-11.6872, -14.0434, -10.7228,  -9.3379,  -7.9525], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3824, device='cuda:0', dtype=torch.float64)
tensor([-11.7084, -13.9954, -10.7246,  -9.3527,  -7.9750], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4124, device='cuda:0', dtype=torch.float64)
tensor([-11.7342, -13.9431, -10.7407,  -9.3631,  -7.9862], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4545, device='cuda:0', dtype=torch.float64)
tensor([-11.7161, -13.8590, -10.7323,  -9.3653,  -8.0005], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4099, device='cuda:0', dtype=torch.float64)
tensor([-11.6715, -13.7161, -10.6954,  -9.3461,  -7.9859], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4010, device='cuda:0', dtype=torch.float64)
tensor([-11.6493, -13.5833, -10.6726,  -9.3367,  -7.9799], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3832, device='cuda:0', dtype=torch.float64)
tensor([-11.6324, -13.5312, -10.6643,  -9.3377,  -7.9829], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4383, device='cuda:0', dtype=torch.float64)
tensor([-11.5881, -13.4383, -10.6623,  -9.3422,  -7.9768], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4475, device='cuda:0', dtype=torch.float64)
tensor([-11.5446, -13.4101, -10.6761,  -9.3483,  -7.9756], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3382, device='cuda:0', dtype=torch.float64)
tensor([-11.4666, -13.3368, -10.6747,  -9.3487,  -7.9696], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3449, device='cuda:0', dtype=torch.float64)
tensor([-11.3742, -13.4024, -10.7011,  -9.3613,  -7.9796], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3836, device='cuda:0', dtype=torch.float64)
tensor([-11.2677, -13.4418, -10.7175,  -9.3647,  -7.9873], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3234, device='cuda:0', dtype=torch.float64)
tensor([-11.1264, -13.4925, -10.7337,  -9.3744,  -7.9947], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4190, device='cuda:0', dtype=torch.float64)
tensor([-11.0003, -13.5471, -10.7405,  -9.3689,  -7.9930], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3116, device='cuda:0', dtype=torch.float64)
tensor([-10.9168, -13.5963, -10.7432,  -9.3748,  -7.9981], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3185, device='cuda:0', dtype=torch.float64)
tensor([-10.8705, -13.6874, -10.7471,  -9.3883,  -8.0060], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3645, device='cuda:0', dtype=torch.float64)
tensor([-10.8103, -13.7446, -10.7292,  -9.3936,  -8.0053], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3510, device='cuda:0', dtype=torch.float64)
tensor([-10.7332, -13.7566, -10.7152,  -9.3865,  -7.9961], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3556, device='cuda:0', dtype=torch.float64)
tensor([-10.6465, -13.7776, -10.6916,  -9.3860,  -7.9932], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2849, device='cuda:0', dtype=torch.float64)
tensor([-10.5081, -13.7861, -10.6616,  -9.3842,  -7.9923], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3284, device='cuda:0', dtype=torch.float64)
tensor([-10.3950, -13.7542, -10.6158,  -9.3805,  -7.9903], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3159, device='cuda:0', dtype=torch.float64)
tensor([-10.2689, -13.7708, -10.5825,  -9.3777,  -7.9937], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2877, device='cuda:0', dtype=torch.float64)
tensor([-10.1715, -13.8363, -10.5449,  -9.3758,  -7.9923], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2728, device='cuda:0', dtype=torch.float64)
tensor([-10.1088, -13.9320, -10.5296,  -9.3765,  -7.9945], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2849, device='cuda:0', dtype=torch.float64)
tensor([-10.0683, -14.0082, -10.5091,  -9.3799,  -7.9956], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2972, device='cuda:0', dtype=torch.float64)
tensor([-10.0449, -14.0713, -10.5149,  -9.3971,  -8.0135], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2258, device='cuda:0', dtype=torch.float64)
tensor([ -9.9985, -14.0341, -10.5198,  -9.4158,  -8.0316], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3056, device='cuda:0', dtype=torch.float64)
tensor([ -9.9442, -13.9448, -10.5173,  -9.4241,  -8.0426], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3059, device='cuda:0', dtype=torch.float64)
tensor([ -9.9416, -13.8396, -10.5219,  -9.4231,  -8.0511], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2468, device='cuda:0', dtype=torch.float64)
tensor([ -9.9731, -13.7636, -10.5367,  -9.4229,  -8.0638], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2250, device='cuda:0', dtype=torch.float64)
tensor([ -9.9957, -13.6756, -10.5369,  -9.4051,  -8.0637], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2459, device='cuda:0', dtype=torch.float64)
tensor([ -9.9989, -13.5533, -10.5332,  -9.3706,  -8.0622], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2552, device='cuda:0', dtype=torch.float64)
tensor([-10.0177, -13.4896, -10.5342,  -9.3451,  -8.0516], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2292, device='cuda:0', dtype=torch.float64)
tensor([-10.0500, -13.4353, -10.5228,  -9.3184,  -8.0292], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2197, device='cuda:0', dtype=torch.float64)
tensor([-10.0998, -13.3667, -10.5181,  -9.2957,  -8.0118], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2575, device='cuda:0', dtype=torch.float64)
tensor([-10.1729, -13.3296, -10.5190,  -9.2721,  -7.9946], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2153, device='cuda:0', dtype=torch.float64)
tensor([-10.2232, -13.2790, -10.5052,  -9.2486,  -7.9805], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2497, device='cuda:0', dtype=torch.float64)
tensor([-10.2672, -13.2473, -10.4887,  -9.2248,  -7.9638], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2231, device='cuda:0', dtype=torch.float64)
tensor([-10.3009, -13.2007, -10.4765,  -9.2002,  -7.9589], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2675, device='cuda:0', dtype=torch.float64)
tensor([-10.3224, -13.0922, -10.4574,  -9.1633,  -7.9526], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2264, device='cuda:0', dtype=torch.float64)
tensor([-10.3141, -12.9601, -10.4372,  -9.1284,  -7.9492], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1941, device='cuda:0', dtype=torch.float64)
tensor([-10.2891, -12.8087, -10.4148,  -9.0961,  -7.9492], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2400, device='cuda:0', dtype=torch.float64)
tensor([-10.2841, -12.6728, -10.3913,  -9.0717,  -7.9492], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2637, device='cuda:0', dtype=torch.float64)
tensor([-10.3192, -12.5572, -10.3735,  -9.0394,  -7.9452], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2365, device='cuda:0', dtype=torch.float64)
tensor([-10.3641, -12.4377, -10.3668,  -9.0216,  -7.9428], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1881, device='cuda:0', dtype=torch.float64)
tensor([-10.4061, -12.2990, -10.3425,  -8.9966,  -7.9378], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2189, device='cuda:0', dtype=torch.float64)
tensor([-10.4837, -12.1527, -10.3278,  -8.9740,  -7.9346], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2133, device='cuda:0', dtype=torch.float64)
tensor([-10.5605, -12.0554, -10.3080,  -8.9488,  -7.9305], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2112, device='cuda:0', dtype=torch.float64)
tensor([-10.6470, -11.9518, -10.2965,  -8.9252,  -7.9292], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1670, device='cuda:0', dtype=torch.float64)
tensor([-10.7366, -11.8194, -10.2778,  -8.8953,  -7.9253], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2062, device='cuda:0', dtype=torch.float64)
tensor([-10.8065, -11.6732, -10.2572,  -8.8692,  -7.9252], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2137, device='cuda:0', dtype=torch.float64)
tensor([-10.8791, -11.5361, -10.2382,  -8.8512,  -7.9228], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2094, device='cuda:0', dtype=torch.float64)
tensor([-10.9247, -11.3993, -10.2080,  -8.8343,  -7.9144], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2156, device='cuda:0', dtype=torch.float64)
tensor([-10.9691, -11.2752, -10.1792,  -8.8164,  -7.9071], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2428, device='cuda:0', dtype=torch.float64)
tensor([-10.9917, -11.1257, -10.1514,  -8.7992,  -7.9007], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2274, device='cuda:0', dtype=torch.float64)
tensor([-11.0317, -10.9688, -10.1233,  -8.7789,  -7.8971], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2689, device='cuda:0', dtype=torch.float64)
tensor([-11.1270, -10.8494, -10.1043,  -8.7539,  -7.8979], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2543, device='cuda:0', dtype=torch.float64)
tensor([-11.1886, -10.7261, -10.0851,  -8.7216,  -7.8957], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2383, device='cuda:0', dtype=torch.float64)
tensor([-11.2204, -10.5788, -10.0354,  -8.6799,  -7.8871], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2124, device='cuda:0', dtype=torch.float64)
tensor([-11.2491, -10.4453,  -9.9829,  -8.6333,  -7.8805], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2515, device='cuda:0', dtype=torch.float64)
tensor([-11.2457, -10.3168,  -9.9299,  -8.5943,  -7.8761], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2209, device='cuda:0', dtype=torch.float64)
tensor([-11.2440, -10.1887,  -9.8765,  -8.5545,  -7.8730], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2466, device='cuda:0', dtype=torch.float64)
tensor([-11.2292, -10.0777,  -9.8247,  -8.5083,  -7.8634], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2178, device='cuda:0', dtype=torch.float64)
tensor([-11.2174,  -9.9776,  -9.7757,  -8.4597,  -7.8509], device='cuda:0',
       dtype=torch.float64)
Saved results to /home/idrissm/projects/def-mh541-ab/idrissm/neighborVCA/runs/results/tsp/tsp64_/home/idrissm/projects/def-mh541-ab/idrissm/neighborVCA/scripts/VCA/tsp/configHVCA64.json_20250925_100030.csv
rnn.0.0.weight tensor(0.8602, device='cuda:0', dtype=torch.float64)
tensor([-2.3503, -3.4717, -4.1553, -4.9913, -5.9320], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(13.2644, device='cuda:0', dtype=torch.float64)
tensor([-42.6452, -28.9265, -22.1051, -64.0985, -33.9892], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(319.9290, device='cuda:0', dtype=torch.float64)
tensor([-2.9475, -5.7093, -5.3783, -4.9621, -7.5288], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(29.6667, device='cuda:0', dtype=torch.float64)
tensor([-38.3255, -18.3745, -16.5236, -32.0345, -35.1510], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(276.5202, device='cuda:0', dtype=torch.float64)
tensor([-20.1034, -16.3765, -12.0246, -33.0558, -30.2299], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(210.4302, device='cuda:0', dtype=torch.float64)
tensor([-3.1079, -7.4464, -5.2167, -8.0442, -8.1586], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(45.0798, device='cuda:0', dtype=torch.float64)
tensor([-2.6079, -5.9091, -4.8346, -5.6567, -6.6415], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(34.2182, device='cuda:0', dtype=torch.float64)
tensor([-2.9343, -4.0558, -5.9168, -6.4420, -8.9274], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(62.5373, device='cuda:0', dtype=torch.float64)
tensor([ -7.3430,  -3.7999,  -7.2168,  -7.6376, -11.8291], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(87.4158, device='cuda:0', dtype=torch.float64)
tensor([ -7.0441,  -4.4465,  -7.5386,  -8.1717, -12.8931], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(87.5306, device='cuda:0', dtype=torch.float64)
tensor([ -3.5014,  -5.2291,  -6.5831,  -7.0834, -11.5185], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(65.3492, device='cuda:0', dtype=torch.float64)
tensor([-2.5648, -5.4639, -5.4209, -5.8460, -9.1153], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(36.9399, device='cuda:0', dtype=torch.float64)
tensor([-2.6024, -5.0843, -4.8057, -5.2733, -7.5998], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(22.7247, device='cuda:0', dtype=torch.float64)
tensor([-2.7522, -4.7769, -4.6398, -5.2640, -6.9382], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(18.1882, device='cuda:0', dtype=torch.float64)
tensor([-2.9131, -4.9569, -4.7078, -5.7282, -6.5202], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(21.1969, device='cuda:0', dtype=torch.float64)
tensor([-2.9685, -5.5304, -4.8504, -6.6616, -6.3100], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(29.8985, device='cuda:0', dtype=torch.float64)
tensor([-2.9491, -6.3101, -4.8924, -7.2051, -6.3606], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(36.8816, device='cuda:0', dtype=torch.float64)
tensor([-2.9706, -5.9271, -4.7196, -6.8225, -6.5344], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(36.8224, device='cuda:0', dtype=torch.float64)
tensor([-2.7094, -5.0232, -4.4512, -6.1363, -6.6135], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(28.1707, device='cuda:0', dtype=torch.float64)
tensor([-2.5293, -4.5560, -4.2863, -5.6292, -6.6076], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(20.6242, device='cuda:0', dtype=torch.float64)
tensor([-2.4015, -4.1627, -4.3211, -5.3958, -6.6315], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(15.4277, device='cuda:0', dtype=torch.float64)
tensor([-2.2863, -3.8346, -4.5586, -5.4424, -6.6892], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(12.7466, device='cuda:0', dtype=torch.float64)
tensor([-2.1923, -3.5986, -4.9274, -5.7659, -6.7791], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(12.6565, device='cuda:0', dtype=torch.float64)
tensor([-2.1421, -3.4344, -5.2999, -6.1825, -6.9179], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(15.9912, device='cuda:0', dtype=torch.float64)
tensor([-2.1324, -3.3218, -5.5589, -6.3182, -7.0415], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(19.3847, device='cuda:0', dtype=torch.float64)
tensor([-2.1169, -3.2587, -5.6622, -6.0882, -7.0172], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(20.7011, device='cuda:0', dtype=torch.float64)
tensor([-2.0886, -3.2537, -5.6167, -5.7133, -6.7592], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(18.7707, device='cuda:0', dtype=torch.float64)
tensor([-2.0807, -3.3138, -5.4548, -5.4155, -6.3950], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(14.8094, device='cuda:0', dtype=torch.float64)
tensor([-2.1128, -3.4255, -5.2203, -5.2376, -6.1263], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(11.0972, device='cuda:0', dtype=torch.float64)
tensor([-2.1809, -3.5551, -4.9700, -5.1212, -6.0036], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(8.7211, device='cuda:0', dtype=torch.float64)
tensor([-2.2609, -3.6733, -4.7468, -5.0086, -5.9843], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(9.0488, device='cuda:0', dtype=torch.float64)
tensor([-2.3264, -3.7619, -4.5646, -4.8925, -6.0169], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(10.6595, device='cuda:0', dtype=torch.float64)
tensor([-2.3690, -3.8137, -4.4236, -4.7822, -6.0568], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(11.4643, device='cuda:0', dtype=torch.float64)
tensor([-2.3906, -3.8291, -4.3189, -4.6615, -6.0772], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(11.0078, device='cuda:0', dtype=torch.float64)
tensor([-2.3958, -3.8186, -4.2506, -4.5328, -6.0732], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(8.7939, device='cuda:0', dtype=torch.float64)
tensor([-2.3902, -3.7966, -4.2229, -4.4294, -6.0568], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(6.1253, device='cuda:0', dtype=torch.float64)
tensor([-2.3792, -3.7713, -4.2375, -4.3810, -6.0347], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(4.3834, device='cuda:0', dtype=torch.float64)
tensor([-2.3654, -3.7504, -4.2861, -4.3952, -6.0142], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(5.4968, device='cuda:0', dtype=torch.float64)
tensor([-2.3485, -3.7417, -4.3419, -4.4513, -5.9996], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(6.8154, device='cuda:0', dtype=torch.float64)
tensor([-2.3262, -3.7503, -4.3677, -4.5237, -5.9914], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(7.2262, device='cuda:0', dtype=torch.float64)
tensor([-2.2996, -3.7667, -4.3476, -4.5989, -5.9868], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(6.7233, device='cuda:0', dtype=torch.float64)
tensor([-2.2719, -3.7716, -4.2959, -4.6821, -5.9779], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(5.6945, device='cuda:0', dtype=torch.float64)
tensor([-2.2482, -3.7571, -4.2488, -4.7812, -5.9590], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(4.6635, device='cuda:0', dtype=torch.float64)
tensor([-2.2328, -3.7365, -4.2251, -4.8944, -5.9328], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(3.8146, device='cuda:0', dtype=torch.float64)
tensor([-2.2269, -3.7211, -4.2299, -5.0092, -5.9082], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(3.4134, device='cuda:0', dtype=torch.float64)
tensor([-2.2273, -3.7138, -4.2578, -5.1139, -5.8924], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(3.4233, device='cuda:0', dtype=torch.float64)
tensor([-2.2295, -3.7095, -4.2984, -5.1918, -5.8858], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(3.5575, device='cuda:0', dtype=torch.float64)
tensor([-2.2295, -3.6971, -4.3418, -5.2302, -5.8826], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(3.7714, device='cuda:0', dtype=torch.float64)
tensor([-2.2262, -3.6724, -4.3791, -5.2255, -5.8803], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(3.8604, device='cuda:0', dtype=torch.float64)
tensor([-2.2219, -3.6405, -4.4016, -5.1816, -5.8803], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(3.5676, device='cuda:0', dtype=torch.float64)
tensor([-2.2177, -3.6129, -4.4034, -5.1102, -5.8847], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(3.2652, device='cuda:0', dtype=torch.float64)
tensor([-2.2139, -3.5942, -4.3783, -5.0201, -5.8913], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.8357, device='cuda:0', dtype=torch.float64)
tensor([-2.2087, -3.5839, -4.3336, -4.9276, -5.8965], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.4323, device='cuda:0', dtype=torch.float64)
tensor([-2.2028, -3.5794, -4.2780, -4.8440, -5.8959], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.2849, device='cuda:0', dtype=torch.float64)
tensor([-2.1966, -3.5793, -4.2207, -4.7734, -5.8870], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.3815, device='cuda:0', dtype=torch.float64)
tensor([-2.1929, -3.5823, -4.1699, -4.7147, -5.8724], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.5340, device='cuda:0', dtype=torch.float64)
tensor([-2.1935, -3.5887, -4.1300, -4.6659, -5.8524], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.4369, device='cuda:0', dtype=torch.float64)
tensor([-2.1988, -3.5971, -4.0988, -4.6284, -5.8288], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.2353, device='cuda:0', dtype=torch.float64)
tensor([-2.2103, -3.6071, -4.0727, -4.6044, -5.8023], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0090, device='cuda:0', dtype=torch.float64)
tensor([-2.2253, -3.6168, -4.0529, -4.5980, -5.7754], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8774, device='cuda:0', dtype=torch.float64)
tensor([-2.2413, -3.6224, -4.0412, -4.6066, -5.7510], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8029, device='cuda:0', dtype=torch.float64)
tensor([-2.2526, -3.6200, -4.0433, -4.6254, -5.7294], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9115, device='cuda:0', dtype=torch.float64)
tensor([-2.2581, -3.6123, -4.0578, -4.6519, -5.7109], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8333, device='cuda:0', dtype=torch.float64)
tensor([-2.2590, -3.5998, -4.0841, -4.6805, -5.6938], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7572, device='cuda:0', dtype=torch.float64)
tensor([-2.2570, -3.5846, -4.1184, -4.7082, -5.6803], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5884, device='cuda:0', dtype=torch.float64)
tensor([-2.2537, -3.5699, -4.1534, -4.7313, -5.6724], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4512, device='cuda:0', dtype=torch.float64)
tensor([-2.2486, -3.5560, -4.1873, -4.7469, -5.6673], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4125, device='cuda:0', dtype=torch.float64)
tensor([-2.2442, -3.5444, -4.2133, -4.7544, -5.6646], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4194, device='cuda:0', dtype=torch.float64)
tensor([-2.2392, -3.5350, -4.2250, -4.7549, -5.6623], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6418, device='cuda:0', dtype=torch.float64)
tensor([-2.2357, -3.5308, -4.2169, -4.7465, -5.6601], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5288, device='cuda:0', dtype=torch.float64)
tensor([-2.2321, -3.5277, -4.1898, -4.7352, -5.6576], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5139, device='cuda:0', dtype=torch.float64)
tensor([-2.2292, -3.5228, -4.1542, -4.7225, -5.6550], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4238, device='cuda:0', dtype=torch.float64)
tensor([-2.2285, -3.5188, -4.1139, -4.7067, -5.6497], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2825, device='cuda:0', dtype=torch.float64)
tensor([-2.2291, -3.5141, -4.0802, -4.6927, -5.6461], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2942, device='cuda:0', dtype=torch.float64)
tensor([-2.2311, -3.5098, -4.0569, -4.6806, -5.6444], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1498, device='cuda:0', dtype=torch.float64)
tensor([-2.2339, -3.5074, -4.0455, -4.6701, -5.6430], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2791, device='cuda:0', dtype=torch.float64)
tensor([-2.2376, -3.5063, -4.0474, -4.6641, -5.6410], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3267, device='cuda:0', dtype=torch.float64)
tensor([-2.2403, -3.5059, -4.0601, -4.6615, -5.6409], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1921, device='cuda:0', dtype=torch.float64)
tensor([-2.2412, -3.5053, -4.0786, -4.6619, -5.6414], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2398, device='cuda:0', dtype=torch.float64)
tensor([-2.2413, -3.5041, -4.0989, -4.6661, -5.6402], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3301, device='cuda:0', dtype=torch.float64)
tensor([-2.2429, -3.5057, -4.1126, -4.6735, -5.6393], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1395, device='cuda:0', dtype=torch.float64)
tensor([-2.2437, -3.5076, -4.1192, -4.6837, -5.6341], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1804, device='cuda:0', dtype=torch.float64)
tensor([-2.2434, -3.5089, -4.1176, -4.6958, -5.6252], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1565, device='cuda:0', dtype=torch.float64)
tensor([-2.2428, -3.5113, -4.1147, -4.7019, -5.6177], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1706, device='cuda:0', dtype=torch.float64)
tensor([-2.2425, -3.5128, -4.1074, -4.7041, -5.6109], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1841, device='cuda:0', dtype=torch.float64)
tensor([-2.2448, -3.5135, -4.0988, -4.6991, -5.6064], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1052, device='cuda:0', dtype=torch.float64)
tensor([-2.2470, -3.5116, -4.0893, -4.6940, -5.6023], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0095, device='cuda:0', dtype=torch.float64)
tensor([-2.2492, -3.5078, -4.0787, -4.6876, -5.6018], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0297, device='cuda:0', dtype=torch.float64)
tensor([-2.2506, -3.5043, -4.0716, -4.6836, -5.6015], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1463, device='cuda:0', dtype=torch.float64)
tensor([-2.2518, -3.5022, -4.0661, -4.6760, -5.6023], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0542, device='cuda:0', dtype=torch.float64)
tensor([-2.2541, -3.4994, -4.0613, -4.6679, -5.6034], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1864, device='cuda:0', dtype=torch.float64)
tensor([-2.2561, -3.4958, -4.0562, -4.6583, -5.6052], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0597, device='cuda:0', dtype=torch.float64)
tensor([-2.2568, -3.4924, -4.0542, -4.6490, -5.6027], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1140, device='cuda:0', dtype=torch.float64)
tensor([-2.2565, -3.4916, -4.0532, -4.6401, -5.5954], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0552, device='cuda:0', dtype=torch.float64)
tensor([-2.2537, -3.4907, -4.0574, -4.6328, -5.5841], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0594, device='cuda:0', dtype=torch.float64)
tensor([-2.2501, -3.4929, -4.0601, -4.6265, -5.5736], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0407, device='cuda:0', dtype=torch.float64)
tensor([-2.2444, -3.4945, -4.0646, -4.6251, -5.5637], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0407, device='cuda:0', dtype=torch.float64)
tensor([-2.2382, -3.4953, -4.0663, -4.6274, -5.5541], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0053, device='cuda:0', dtype=torch.float64)
tensor([-2.2316, -3.4955, -4.0684, -4.6348, -5.5467], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1182, device='cuda:0', dtype=torch.float64)
tensor([-2.2294, -3.4941, -4.0656, -4.6467, -5.5436], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0368, device='cuda:0', dtype=torch.float64)
tensor([-2.2289, -3.4939, -4.0603, -4.6558, -5.5421], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0496, device='cuda:0', dtype=torch.float64)
tensor([-2.2306, -3.4949, -4.0532, -4.6618, -5.5431], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0113, device='cuda:0', dtype=torch.float64)
tensor([-2.2340, -3.4955, -4.0460, -4.6674, -5.5463], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1786, device='cuda:0', dtype=torch.float64)
tensor([-2.2358, -3.4954, -4.0463, -4.6744, -5.5488], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9663, device='cuda:0', dtype=torch.float64)
tensor([-2.2372, -3.4950, -4.0463, -4.6794, -5.5512], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9778, device='cuda:0', dtype=torch.float64)
tensor([-2.2396, -3.4941, -4.0479, -4.6806, -5.5543], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1143, device='cuda:0', dtype=torch.float64)
tensor([-2.2413, -3.4929, -4.0532, -4.6844, -5.5585], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0156, device='cuda:0', dtype=torch.float64)
tensor([-2.2425, -3.4892, -4.0626, -4.6875, -5.5595], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0539, device='cuda:0', dtype=torch.float64)
tensor([-2.2448, -3.4866, -4.0664, -4.6883, -5.5554], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1114, device='cuda:0', dtype=torch.float64)
tensor([-2.2441, -3.4832, -4.0653, -4.6884, -5.5484], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0570, device='cuda:0', dtype=torch.float64)
tensor([-2.2445, -3.4816, -4.0604, -4.6884, -5.5389], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1397, device='cuda:0', dtype=torch.float64)
tensor([-2.2449, -3.4788, -4.0524, -4.6855, -5.5280], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9823, device='cuda:0', dtype=torch.float64)
tensor([-2.2451, -3.4762, -4.0475, -4.6840, -5.5115], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1361, device='cuda:0', dtype=torch.float64)
tensor([-2.2468, -3.4751, -4.0428, -4.6878, -5.4964], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0866, device='cuda:0', dtype=torch.float64)
tensor([-2.2497, -3.4771, -4.0358, -4.6883, -5.4859], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0621, device='cuda:0', dtype=torch.float64)
tensor([-2.2520, -3.4784, -4.0274, -4.6850, -5.4790], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1006, device='cuda:0', dtype=torch.float64)
tensor([-2.2563, -3.4819, -4.0197, -4.6761, -5.4764], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1160, device='cuda:0', dtype=torch.float64)
tensor([-2.2575, -3.4817, -4.0192, -4.6685, -5.4807], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0139, device='cuda:0', dtype=torch.float64)
tensor([-2.2571, -3.4787, -4.0225, -4.6598, -5.4904], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0996, device='cuda:0', dtype=torch.float64)
tensor([-2.2566, -3.4791, -4.0276, -4.6521, -5.4994], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9697, device='cuda:0', dtype=torch.float64)
tensor([-2.2543, -3.4810, -4.0310, -4.6471, -5.5034], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1684, device='cuda:0', dtype=torch.float64)
tensor([-2.2530, -3.4823, -4.0255, -4.6388, -5.5105], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2382, device='cuda:0', dtype=torch.float64)
tensor([-2.2517, -3.4860, -4.0191, -4.6321, -5.5122], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9942, device='cuda:0', dtype=torch.float64)
tensor([-2.2513, -3.4890, -4.0171, -4.6251, -5.5120], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0879, device='cuda:0', dtype=torch.float64)
tensor([-2.2515, -3.4924, -4.0144, -4.6174, -5.5052], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1550, device='cuda:0', dtype=torch.float64)
tensor([-2.2498, -3.4877, -4.0138, -4.6096, -5.4985], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1268, device='cuda:0', dtype=torch.float64)
tensor([-2.2508, -3.4831, -4.0126, -4.5989, -5.4908], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2427, device='cuda:0', dtype=torch.float64)
tensor([-2.2548, -3.4807, -4.0076, -4.5922, -5.4791], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0180, device='cuda:0', dtype=torch.float64)
tensor([-2.2608, -3.4789, -4.0004, -4.5905, -5.4718], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1651, device='cuda:0', dtype=torch.float64)
tensor([-2.2658, -3.4798, -4.0004, -4.5925, -5.4669], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2122, device='cuda:0', dtype=torch.float64)
tensor([-2.2677, -3.4839, -4.0054, -4.6035, -5.4634], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0497, device='cuda:0', dtype=torch.float64)
tensor([-2.2668, -3.4838, -4.0181, -4.6206, -5.4654], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2531, device='cuda:0', dtype=torch.float64)
tensor([-2.2618, -3.4808, -4.0284, -4.6397, -5.4657], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1235, device='cuda:0', dtype=torch.float64)
tensor([-2.2566, -3.4757, -4.0343, -4.6537, -5.4655], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0766, device='cuda:0', dtype=torch.float64)
tensor([-2.2507, -3.4713, -4.0390, -4.6689, -5.4629], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0688, device='cuda:0', dtype=torch.float64)
tensor([-2.2482, -3.4693, -4.0305, -4.6730, -5.4603], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1844, device='cuda:0', dtype=torch.float64)
tensor([-2.2501, -3.4667, -4.0174, -4.6686, -5.4609], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0279, device='cuda:0', dtype=torch.float64)
tensor([-2.2540, -3.4648, -4.0028, -4.6563, -5.4560], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0774, device='cuda:0', dtype=torch.float64)
tensor([-2.2595, -3.4653, -3.9905, -4.6405, -5.4515], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3107, device='cuda:0', dtype=torch.float64)
tensor([-2.2670, -3.4668, -3.9819, -4.6263, -5.4448], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1630, device='cuda:0', dtype=torch.float64)
tensor([-2.2767, -3.4720, -3.9760, -4.6088, -5.4371], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1709, device='cuda:0', dtype=torch.float64)
tensor([-2.2842, -3.4758, -3.9774, -4.5931, -5.4328], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1557, device='cuda:0', dtype=torch.float64)
tensor([-2.2910, -3.4804, -3.9814, -4.5842, -5.4288], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3162, device='cuda:0', dtype=torch.float64)
tensor([-2.2961, -3.4828, -3.9851, -4.5840, -5.4215], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0712, device='cuda:0', dtype=torch.float64)
tensor([-2.2977, -3.4885, -3.9880, -4.5919, -5.4165], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2336, device='cuda:0', dtype=torch.float64)
tensor([-2.2966, -3.4923, -3.9828, -4.5948, -5.4114], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3363, device='cuda:0', dtype=torch.float64)
tensor([-2.2956, -3.4932, -3.9759, -4.5915, -5.4051], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1538, device='cuda:0', dtype=torch.float64)
tensor([-2.2931, -3.4953, -3.9753, -4.5910, -5.4001], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1787, device='cuda:0', dtype=torch.float64)
tensor([-2.2893, -3.5007, -3.9795, -4.5934, -5.3919], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2647, device='cuda:0', dtype=torch.float64)
tensor([-2.2842, -3.5018, -3.9879, -4.6019, -5.3887], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2901, device='cuda:0', dtype=torch.float64)
tensor([-2.2776, -3.5039, -3.9997, -4.6115, -5.3893], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2462, device='cuda:0', dtype=torch.float64)
tensor([-2.2746, -3.5029, -4.0131, -4.6176, -5.3873], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2634, device='cuda:0', dtype=torch.float64)
tensor([-2.2725, -3.5009, -4.0215, -4.6208, -5.3886], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3236, device='cuda:0', dtype=torch.float64)
tensor([-2.2752, -3.4969, -4.0322, -4.6123, -5.3871], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1486, device='cuda:0', dtype=torch.float64)
tensor([-2.2757, -3.4904, -4.0370, -4.6062, -5.3875], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4621, device='cuda:0', dtype=torch.float64)
tensor([-2.2781, -3.4792, -4.0301, -4.6055, -5.3811], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2753, device='cuda:0', dtype=torch.float64)
tensor([-2.2804, -3.4769, -4.0182, -4.6035, -5.3716], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1376, device='cuda:0', dtype=torch.float64)
tensor([-2.2809, -3.4710, -4.0031, -4.5965, -5.3663], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2843, device='cuda:0', dtype=torch.float64)
tensor([-2.2829, -3.4740, -3.9862, -4.5857, -5.3655], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3883, device='cuda:0', dtype=torch.float64)
tensor([-2.2845, -3.4767, -3.9802, -4.5738, -5.3670], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1839, device='cuda:0', dtype=torch.float64)
tensor([-2.2857, -3.4793, -3.9797, -4.5603, -5.3729], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9983, device='cuda:0', dtype=torch.float64)
tensor([-2.2878, -3.4819, -3.9853, -4.5525, -5.3807], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3146, device='cuda:0', dtype=torch.float64)
tensor([-2.2868, -3.4841, -3.9962, -4.5493, -5.3883], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2375, device='cuda:0', dtype=torch.float64)
tensor([-2.2863, -3.4901, -4.0051, -4.5474, -5.3883], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1522, device='cuda:0', dtype=torch.float64)
tensor([-2.2852, -3.4924, -4.0132, -4.5495, -5.3845], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2239, device='cuda:0', dtype=torch.float64)
tensor([-2.2872, -3.4947, -4.0138, -4.5516, -5.3780], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2245, device='cuda:0', dtype=torch.float64)
tensor([-2.2861, -3.4898, -4.0103, -4.5479, -5.3711], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4671, device='cuda:0', dtype=torch.float64)
tensor([-2.2874, -3.4843, -3.9998, -4.5456, -5.3664], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3552, device='cuda:0', dtype=torch.float64)
tensor([-2.2885, -3.4812, -3.9955, -4.5470, -5.3634], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2584, device='cuda:0', dtype=torch.float64)
tensor([-2.2924, -3.4816, -3.9931, -4.5590, -5.3582], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4127, device='cuda:0', dtype=torch.float64)
tensor([-2.2993, -3.4850, -3.9833, -4.5695, -5.3614], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3119, device='cuda:0', dtype=torch.float64)
tensor([-2.3037, -3.4848, -3.9811, -4.5889, -5.3593], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2487, device='cuda:0', dtype=torch.float64)
tensor([-2.3025, -3.4786, -3.9800, -4.6075, -5.3566], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3239, device='cuda:0', dtype=torch.float64)
tensor([-2.3004, -3.4688, -3.9799, -4.6243, -5.3574], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2578, device='cuda:0', dtype=torch.float64)
tensor([-2.2969, -3.4616, -3.9805, -4.6307, -5.3595], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2543, device='cuda:0', dtype=torch.float64)
tensor([-2.2926, -3.4580, -3.9776, -4.6302, -5.3548], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5129, device='cuda:0', dtype=torch.float64)
tensor([-2.2925, -3.4547, -3.9749, -4.6205, -5.3474], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3381, device='cuda:0', dtype=torch.float64)
tensor([-2.2985, -3.4607, -3.9770, -4.5999, -5.3318], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4894, device='cuda:0', dtype=torch.float64)
tensor([-2.3044, -3.4766, -3.9779, -4.5744, -5.3137], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3815, device='cuda:0', dtype=torch.float64)
tensor([-2.3087, -3.4943, -3.9794, -4.5664, -5.2975], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3805, device='cuda:0', dtype=torch.float64)
tensor([-2.3165, -3.5108, -3.9861, -4.5557, -5.2886], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3236, device='cuda:0', dtype=torch.float64)
tensor([-2.3234, -3.5188, -3.9981, -4.5449, -5.2823], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3183, device='cuda:0', dtype=torch.float64)
tensor([-2.3292, -3.5245, -4.0177, -4.5378, -5.2809], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5082, device='cuda:0', dtype=torch.float64)
tensor([-2.3329, -3.5254, -4.0348, -4.5217, -5.2917], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3864, device='cuda:0', dtype=torch.float64)
tensor([-2.3327, -3.5173, -4.0346, -4.5111, -5.3016], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1605, device='cuda:0', dtype=torch.float64)
tensor([-2.3318, -3.5125, -4.0124, -4.4933, -5.3126], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2539, device='cuda:0', dtype=torch.float64)
tensor([-2.3357, -3.5112, -3.9813, -4.4736, -5.3184], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1871, device='cuda:0', dtype=torch.float64)
tensor([-2.3364, -3.5108, -3.9614, -4.4676, -5.3149], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3221, device='cuda:0', dtype=torch.float64)
tensor([-2.3340, -3.5148, -3.9510, -4.4703, -5.3093], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6643, device='cuda:0', dtype=torch.float64)
tensor([-2.3327, -3.5214, -3.9533, -4.4798, -5.2997], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3323, device='cuda:0', dtype=torch.float64)
tensor([-2.3349, -3.5210, -3.9620, -4.5007, -5.2876], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4524, device='cuda:0', dtype=torch.float64)
tensor([-2.3301, -3.5119, -3.9821, -4.5343, -5.2801], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1140, device='cuda:0', dtype=torch.float64)
tensor([-2.3267, -3.5035, -4.0001, -4.5660, -5.2794], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3322, device='cuda:0', dtype=torch.float64)
tensor([-2.3228, -3.4974, -4.0262, -4.5974, -5.2823], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3722, device='cuda:0', dtype=torch.float64)
tensor([-2.3209, -3.4969, -4.0495, -4.6213, -5.2842], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3160, device='cuda:0', dtype=torch.float64)
tensor([-2.3223, -3.4981, -4.0586, -4.6417, -5.2825], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1858, device='cuda:0', dtype=torch.float64)
tensor([-2.3225, -3.5030, -4.0571, -4.6565, -5.2804], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1632, device='cuda:0', dtype=torch.float64)
tensor([-2.3286, -3.5129, -4.0540, -4.6601, -5.2818], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2564, device='cuda:0', dtype=torch.float64)
tensor([-2.3378, -3.5233, -4.0501, -4.6465, -5.2846], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4169, device='cuda:0', dtype=torch.float64)
tensor([-2.3460, -3.5303, -4.0426, -4.6209, -5.2873], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4461, device='cuda:0', dtype=torch.float64)
tensor([-2.3544, -3.5330, -4.0363, -4.5954, -5.2859], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2039, device='cuda:0', dtype=torch.float64)
tensor([-2.3605, -3.5308, -4.0367, -4.5720, -5.2865], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3933, device='cuda:0', dtype=torch.float64)
tensor([-2.3674, -3.5375, -4.0369, -4.5536, -5.2876], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3420, device='cuda:0', dtype=torch.float64)
tensor([-2.3709, -3.5404, -4.0330, -4.5445, -5.2876], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2061, device='cuda:0', dtype=torch.float64)
tensor([-2.3736, -3.5357, -4.0216, -4.5319, -5.2847], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1662, device='cuda:0', dtype=torch.float64)
tensor([-2.3755, -3.5288, -4.0186, -4.5205, -5.2812], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3198, device='cuda:0', dtype=torch.float64)
tensor([-2.3731, -3.5239, -4.0202, -4.5092, -5.2797], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0892, device='cuda:0', dtype=torch.float64)
tensor([-2.3679, -3.5181, -4.0247, -4.5009, -5.2802], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2771, device='cuda:0', dtype=torch.float64)
tensor([-2.3608, -3.5119, -4.0323, -4.5021, -5.2853], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4773, device='cuda:0', dtype=torch.float64)
tensor([-2.3547, -3.5094, -4.0365, -4.5085, -5.2746], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4021, device='cuda:0', dtype=torch.float64)
tensor([-2.3505, -3.5021, -4.0482, -4.5237, -5.2652], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4575, device='cuda:0', dtype=torch.float64)
tensor([-2.3485, -3.4951, -4.0528, -4.5430, -5.2601], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1081, device='cuda:0', dtype=torch.float64)
tensor([-2.3471, -3.4854, -4.0652, -4.5602, -5.2560], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3741, device='cuda:0', dtype=torch.float64)
tensor([-2.3509, -3.4792, -4.0725, -4.5781, -5.2526], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0516, device='cuda:0', dtype=torch.float64)
tensor([-2.3561, -3.4788, -4.0809, -4.5969, -5.2510], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3838, device='cuda:0', dtype=torch.float64)
tensor([-2.3645, -3.4850, -4.0853, -4.6176, -5.2433], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3047, device='cuda:0', dtype=torch.float64)
tensor([-2.3691, -3.4932, -4.0798, -4.6204, -5.2455], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4301, device='cuda:0', dtype=torch.float64)
tensor([-2.3797, -3.5015, -4.0698, -4.6099, -5.2433], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2578, device='cuda:0', dtype=torch.float64)
tensor([-2.3858, -3.5131, -4.0616, -4.6030, -5.2401], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2432, device='cuda:0', dtype=torch.float64)
tensor([-2.3937, -3.5304, -4.0520, -4.5959, -5.2400], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0323, device='cuda:0', dtype=torch.float64)
tensor([-2.4022, -3.5462, -4.0484, -4.5882, -5.2409], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1589, device='cuda:0', dtype=torch.float64)
tensor([-2.4081, -3.5636, -4.0452, -4.5787, -5.2299], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0929, device='cuda:0', dtype=torch.float64)
tensor([-2.4148, -3.5769, -4.0426, -4.5724, -5.2132], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3104, device='cuda:0', dtype=torch.float64)
tensor([-2.4180, -3.5831, -4.0364, -4.5645, -5.2029], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3841, device='cuda:0', dtype=torch.float64)
tensor([-2.4163, -3.5758, -4.0450, -4.5661, -5.1998], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2962, device='cuda:0', dtype=torch.float64)
tensor([-2.4100, -3.5716, -4.0607, -4.5670, -5.1910], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0191, device='cuda:0', dtype=torch.float64)
tensor([-2.4046, -3.5602, -4.0680, -4.5718, -5.1922], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2236, device='cuda:0', dtype=torch.float64)
tensor([-2.3973, -3.5488, -4.0636, -4.5661, -5.1992], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3952, device='cuda:0', dtype=torch.float64)
tensor([-2.3920, -3.5386, -4.0517, -4.5643, -5.2042], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1449, device='cuda:0', dtype=torch.float64)
tensor([-2.3926, -3.5285, -4.0410, -4.5728, -5.2079], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2768, device='cuda:0', dtype=torch.float64)
tensor([-2.3916, -3.5213, -4.0304, -4.5875, -5.2181], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1792, device='cuda:0', dtype=torch.float64)
tensor([-2.3928, -3.5256, -4.0215, -4.5978, -5.2237], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2090, device='cuda:0', dtype=torch.float64)
tensor([-2.3958, -3.5357, -4.0236, -4.6067, -5.2264], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3898, device='cuda:0', dtype=torch.float64)
tensor([-2.4031, -3.5588, -4.0322, -4.6140, -5.2282], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2203, device='cuda:0', dtype=torch.float64)
tensor([-2.4106, -3.5739, -4.0524, -4.6284, -5.2301], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6443, device='cuda:0', dtype=torch.float64)
tensor([-2.4199, -3.5887, -4.0731, -4.6291, -5.2279], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3475, device='cuda:0', dtype=torch.float64)
tensor([-2.4364, -3.5973, -4.0860, -4.6269, -5.2200], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4676, device='cuda:0', dtype=torch.float64)
tensor([-2.4490, -3.5991, -4.0792, -4.6273, -5.2163], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3609, device='cuda:0', dtype=torch.float64)
tensor([-2.4616, -3.5937, -4.0612, -4.6343, -5.2060], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1811, device='cuda:0', dtype=torch.float64)
tensor([-2.4712, -3.5811, -4.0438, -4.6489, -5.2000], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3182, device='cuda:0', dtype=torch.float64)
tensor([-2.4801, -3.5703, -4.0280, -4.6544, -5.1990], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3483, device='cuda:0', dtype=torch.float64)
tensor([-2.4849, -3.5658, -4.0205, -4.6688, -5.1978], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4204, device='cuda:0', dtype=torch.float64)
tensor([-2.4922, -3.5617, -4.0129, -4.6725, -5.2026], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3876, device='cuda:0', dtype=torch.float64)
tensor([-2.4980, -3.5648, -4.0081, -4.6695, -5.2029], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1993, device='cuda:0', dtype=torch.float64)
tensor([-2.5008, -3.5667, -4.0105, -4.6593, -5.2032], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1079, device='cuda:0', dtype=torch.float64)
tensor([-2.5021, -3.5697, -4.0113, -4.6514, -5.1979], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2664, device='cuda:0', dtype=torch.float64)
tensor([-2.5008, -3.5701, -4.0159, -4.6555, -5.1929], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3403, device='cuda:0', dtype=torch.float64)
tensor([-2.4947, -3.5730, -4.0345, -4.6504, -5.1933], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3687, device='cuda:0', dtype=torch.float64)
tensor([-2.4927, -3.5683, -4.0615, -4.6399, -5.2068], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3526, device='cuda:0', dtype=torch.float64)
tensor([-2.4914, -3.5618, -4.0814, -4.6310, -5.2125], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4829, device='cuda:0', dtype=torch.float64)
tensor([-2.4976, -3.5585, -4.0865, -4.6192, -5.2088], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2092, device='cuda:0', dtype=torch.float64)
tensor([-2.4988, -3.5516, -4.0853, -4.6155, -5.2045], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1107, device='cuda:0', dtype=torch.float64)
tensor([-2.4982, -3.5423, -4.0784, -4.6150, -5.1935], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3807, device='cuda:0', dtype=torch.float64)
tensor([-2.4966, -3.5384, -4.0717, -4.6325, -5.1866], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2301, device='cuda:0', dtype=torch.float64)
tensor([-2.4964, -3.5340, -4.0769, -4.6563, -5.1795], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0898, device='cuda:0', dtype=torch.float64)
tensor([-2.4982, -3.5308, -4.0826, -4.6764, -5.1759], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3093, device='cuda:0', dtype=torch.float64)
tensor([-2.4990, -3.5291, -4.0926, -4.6984, -5.1683], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1495, device='cuda:0', dtype=torch.float64)
tensor([-2.5023, -3.5267, -4.1066, -4.7230, -5.1610], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0646, device='cuda:0', dtype=torch.float64)
tensor([-2.4977, -3.5292, -4.1188, -4.7467, -5.1492], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2251, device='cuda:0', dtype=torch.float64)
tensor([-2.4984, -3.5284, -4.1308, -4.7599, -5.1396], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1195, device='cuda:0', dtype=torch.float64)
tensor([-2.4981, -3.5235, -4.1424, -4.7734, -5.1384], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1798, device='cuda:0', dtype=torch.float64)
tensor([-2.4997, -3.5148, -4.1530, -4.7771, -5.1336], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4410, device='cuda:0', dtype=torch.float64)
tensor([-2.5007, -3.5078, -4.1585, -4.7760, -5.1315], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7939, device='cuda:0', dtype=torch.float64)
tensor([-2.5111, -3.5101, -4.1634, -4.7760, -5.1371], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1367, device='cuda:0', dtype=torch.float64)
tensor([-2.5250, -3.5211, -4.1677, -4.7737, -5.1511], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5181, device='cuda:0', dtype=torch.float64)
tensor([-2.5446, -3.5383, -4.1649, -4.7574, -5.1573], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4590, device='cuda:0', dtype=torch.float64)
tensor([-2.5664, -3.5569, -4.1560, -4.7198, -5.1702], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7067, device='cuda:0', dtype=torch.float64)
tensor([-2.5890, -3.5871, -4.1480, -4.6840, -5.1739], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2050, device='cuda:0', dtype=torch.float64)
tensor([-2.6087, -3.6122, -4.1276, -4.6452, -5.1829], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5057, device='cuda:0', dtype=torch.float64)
tensor([-2.6275, -3.6335, -4.1008, -4.6105, -5.1983], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4217, device='cuda:0', dtype=torch.float64)
tensor([-2.6391, -3.6555, -4.0856, -4.5818, -5.2301], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3051, device='cuda:0', dtype=torch.float64)
tensor([-2.6467, -3.6732, -4.0783, -4.5600, -5.2573], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4641, device='cuda:0', dtype=torch.float64)
tensor([-2.6511, -3.6855, -4.0716, -4.5510, -5.2755], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4981, device='cuda:0', dtype=torch.float64)
tensor([-2.6494, -3.6949, -4.0656, -4.5632, -5.2766], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4874, device='cuda:0', dtype=torch.float64)
tensor([-2.6464, -3.7072, -4.0734, -4.6052, -5.2663], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1585, device='cuda:0', dtype=torch.float64)
tensor([-2.6412, -3.7239, -4.0886, -4.6614, -5.2550], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2610, device='cuda:0', dtype=torch.float64)
tensor([-2.6418, -3.7485, -4.1055, -4.7042, -5.2449], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2083, device='cuda:0', dtype=torch.float64)
tensor([-2.6375, -3.7633, -4.1259, -4.7502, -5.2401], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6540, device='cuda:0', dtype=torch.float64)
tensor([-2.6367, -3.7743, -4.1481, -4.7720, -5.2334], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5062, device='cuda:0', dtype=torch.float64)
tensor([-2.6403, -3.7772, -4.1778, -4.7931, -5.2311], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1948, device='cuda:0', dtype=torch.float64)
tensor([-2.6467, -3.7804, -4.2220, -4.8165, -5.2400], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2896, device='cuda:0', dtype=torch.float64)
tensor([-2.6598, -3.7866, -4.2711, -4.8332, -5.2550], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2126, device='cuda:0', dtype=torch.float64)
tensor([-2.6729, -3.7954, -4.3183, -4.8484, -5.2672], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3767, device='cuda:0', dtype=torch.float64)
tensor([-2.6884, -3.7975, -4.3606, -4.8662, -5.2716], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2234, device='cuda:0', dtype=torch.float64)
tensor([-2.7024, -3.7964, -4.3830, -4.8729, -5.2704], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4575, device='cuda:0', dtype=torch.float64)
tensor([-2.7096, -3.7899, -4.4024, -4.8956, -5.2669], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4559, device='cuda:0', dtype=torch.float64)
tensor([-2.7191, -3.7884, -4.4162, -4.9122, -5.2606], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2400, device='cuda:0', dtype=torch.float64)
tensor([-2.7299, -3.7834, -4.4026, -4.9290, -5.2433], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3042, device='cuda:0', dtype=torch.float64)
tensor([-2.7375, -3.7862, -4.3765, -4.9405, -5.2283], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0722, device='cuda:0', dtype=torch.float64)
tensor([-2.7514, -3.7991, -4.3379, -4.9305, -5.2169], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3098, device='cuda:0', dtype=torch.float64)
tensor([-2.7716, -3.8138, -4.3070, -4.9068, -5.2145], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2686, device='cuda:0', dtype=torch.float64)
tensor([-2.7852, -3.8303, -4.2875, -4.8994, -5.2093], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6005, device='cuda:0', dtype=torch.float64)
tensor([-2.7928, -3.8349, -4.2741, -4.8914, -5.2035], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5738, device='cuda:0', dtype=torch.float64)
tensor([-2.8024, -3.8485, -4.2682, -4.8893, -5.1992], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1945, device='cuda:0', dtype=torch.float64)
tensor([-2.8155, -3.8547, -4.2639, -4.8790, -5.1952], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2386, device='cuda:0', dtype=torch.float64)
tensor([-2.8307, -3.8488, -4.2638, -4.8597, -5.1951], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3659, device='cuda:0', dtype=torch.float64)
tensor([-2.8513, -3.8540, -4.2563, -4.8349, -5.2057], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1489, device='cuda:0', dtype=torch.float64)
tensor([-2.8709, -3.8636, -4.2513, -4.8112, -5.2192], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0998, device='cuda:0', dtype=torch.float64)
tensor([-2.8942, -3.8755, -4.2435, -4.7861, -5.2378], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3219, device='cuda:0', dtype=torch.float64)
tensor([-2.9204, -3.8975, -4.2356, -4.7603, -5.2612], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3828, device='cuda:0', dtype=torch.float64)
tensor([-2.9529, -3.9234, -4.2387, -4.7369, -5.2873], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2638, device='cuda:0', dtype=torch.float64)
tensor([-2.9883, -3.9543, -4.2388, -4.7195, -5.3064], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1061, device='cuda:0', dtype=torch.float64)
tensor([-3.0246, -3.9861, -4.2469, -4.6973, -5.3279], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4766, device='cuda:0', dtype=torch.float64)
tensor([-3.0533, -4.0038, -4.2400, -4.6768, -5.3386], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0978, device='cuda:0', dtype=torch.float64)
tensor([-3.0813, -4.0218, -4.2304, -4.6591, -5.3439], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1754, device='cuda:0', dtype=torch.float64)
tensor([-3.1037, -4.0370, -4.2326, -4.6610, -5.3534], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4080, device='cuda:0', dtype=torch.float64)
tensor([-3.1254, -4.0570, -4.2353, -4.6680, -5.3641], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3203, device='cuda:0', dtype=torch.float64)
tensor([-3.1439, -4.0825, -4.2346, -4.6703, -5.3622], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1220, device='cuda:0', dtype=torch.float64)
tensor([-3.1526, -4.0970, -4.2315, -4.6810, -5.3642], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8959, device='cuda:0', dtype=torch.float64)
tensor([-3.1629, -4.1197, -4.2354, -4.7002, -5.3656], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1798, device='cuda:0', dtype=torch.float64)
tensor([-3.1738, -4.1412, -4.2477, -4.7295, -5.3709], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3043, device='cuda:0', dtype=torch.float64)
tensor([-3.1879, -4.1738, -4.2592, -4.7643, -5.3720], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3328, device='cuda:0', dtype=torch.float64)
tensor([-3.2128, -4.2153, -4.2748, -4.8127, -5.3764], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0940, device='cuda:0', dtype=torch.float64)
tensor([-3.2348, -4.2546, -4.2868, -4.8558, -5.3830], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2280, device='cuda:0', dtype=torch.float64)
tensor([-3.2596, -4.2962, -4.3052, -4.8932, -5.3869], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0915, device='cuda:0', dtype=torch.float64)
tensor([-3.2878, -4.3382, -4.3292, -4.9380, -5.3911], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3552, device='cuda:0', dtype=torch.float64)
tensor([-3.3212, -4.3850, -4.3667, -4.9902, -5.4004], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1155, device='cuda:0', dtype=torch.float64)
tensor([-3.3546, -4.3898, -4.4094, -5.0385, -5.4157], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9890, device='cuda:0', dtype=torch.float64)
tensor([-3.3897, -4.3984, -4.4495, -5.0674, -5.4363], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2151, device='cuda:0', dtype=torch.float64)
tensor([-3.4269, -4.4051, -4.4941, -5.1034, -5.4500], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2646, device='cuda:0', dtype=torch.float64)
tensor([-3.4759, -4.4353, -4.5368, -5.1476, -5.4624], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2797, device='cuda:0', dtype=torch.float64)
tensor([-3.5320, -4.4739, -4.5870, -5.1985, -5.4736], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3458, device='cuda:0', dtype=torch.float64)
tensor([-3.5894, -4.5163, -4.6458, -5.2595, -5.4777], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2501, device='cuda:0', dtype=torch.float64)
tensor([-3.6531, -4.5734, -4.7089, -5.3348, -5.4887], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0735, device='cuda:0', dtype=torch.float64)
tensor([-3.7186, -4.6386, -4.7833, -5.4285, -5.5128], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1092, device='cuda:0', dtype=torch.float64)
tensor([-3.7868, -4.6992, -4.8565, -5.5360, -5.5447], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1636, device='cuda:0', dtype=torch.float64)
tensor([-3.8623, -4.7819, -4.9406, -5.6474, -5.5850], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9360, device='cuda:0', dtype=torch.float64)
tensor([-3.9353, -4.8787, -5.0264, -5.7616, -5.6183], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1742, device='cuda:0', dtype=torch.float64)
tensor([-4.0107, -5.0386, -5.1325, -5.8893, -5.6503], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9983, device='cuda:0', dtype=torch.float64)
tensor([-4.0872, -5.1947, -5.2214, -6.0062, -5.6929], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0172, device='cuda:0', dtype=torch.float64)
tensor([-4.1791, -5.4072, -5.3035, -6.1314, -5.7417], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9801, device='cuda:0', dtype=torch.float64)
tensor([-4.2792, -5.7113, -5.3961, -6.2496, -5.7978], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0345, device='cuda:0', dtype=torch.float64)
tensor([-4.3876, -6.0985, -5.5007, -6.3731, -5.8545], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0153, device='cuda:0', dtype=torch.float64)
tensor([-4.4970, -6.5149, -5.6169, -6.5102, -5.9242], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9183, device='cuda:0', dtype=torch.float64)
tensor([-4.6093, -6.8129, -5.7292, -6.6444, -5.9867], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1230, device='cuda:0', dtype=torch.float64)
tensor([-4.7217, -7.1718, -5.8746, -6.8403, -6.0578], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1134, device='cuda:0', dtype=torch.float64)
tensor([-4.8187, -7.2568, -6.0209, -7.0213, -6.1250], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0707, device='cuda:0', dtype=torch.float64)
tensor([-4.9188, -7.4222, -6.1750, -7.2265, -6.2032], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2678, device='cuda:0', dtype=torch.float64)
tensor([-5.0163, -7.7390, -6.3451, -7.4451, -6.2877], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0987, device='cuda:0', dtype=torch.float64)
tensor([-5.1125, -8.0150, -6.4876, -7.6343, -6.3677], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0051, device='cuda:0', dtype=torch.float64)
tensor([-5.2505, -8.6155, -6.6481, -7.8729, -6.4553], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0090, device='cuda:0', dtype=torch.float64)
tensor([-5.4045, -9.1241, -6.8068, -8.0704, -6.5571], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0253, device='cuda:0', dtype=torch.float64)
tensor([-5.5595, -9.5979, -6.9615, -8.2616, -6.6595], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9251, device='cuda:0', dtype=torch.float64)
tensor([-5.7102, -9.9355, -7.0984, -8.3957, -6.7676], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1132, device='cuda:0', dtype=torch.float64)
tensor([ -5.8702, -10.3331,  -7.2672,  -8.5820,  -6.8820], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8925, device='cuda:0', dtype=torch.float64)
tensor([ -6.0275, -10.4961,  -7.4202,  -8.7457,  -6.9650], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0619, device='cuda:0', dtype=torch.float64)
tensor([ -6.1754, -10.5101,  -7.5633,  -8.8463,  -7.0442], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8165, device='cuda:0', dtype=torch.float64)
tensor([ -6.3198, -10.5424,  -7.7188,  -8.9394,  -7.1206], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9260, device='cuda:0', dtype=torch.float64)
tensor([ -6.4362, -10.5035,  -7.8428,  -9.0153,  -7.2034], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9539, device='cuda:0', dtype=torch.float64)
tensor([ -6.5688, -10.5565,  -7.9651,  -9.0921,  -7.2767], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0122, device='cuda:0', dtype=torch.float64)
tensor([ -6.7126, -10.5341,  -8.0761,  -9.2001,  -7.3533], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9524, device='cuda:0', dtype=torch.float64)
tensor([ -6.8291, -10.2893,  -8.1514,  -9.2949,  -7.4151], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9097, device='cuda:0', dtype=torch.float64)
tensor([ -6.9399, -10.0496,  -8.2234,  -9.4079,  -7.4914], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9851, device='cuda:0', dtype=torch.float64)
tensor([-7.0474, -9.7530, -8.2734, -9.5103, -7.5745], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1338, device='cuda:0', dtype=torch.float64)
tensor([-7.1692, -9.6361, -8.3435, -9.6303, -7.6681], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7959, device='cuda:0', dtype=torch.float64)
tensor([-7.3098, -9.5095, -8.4098, -9.7699, -7.7641], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8475, device='cuda:0', dtype=torch.float64)
tensor([-7.4794, -9.2917, -8.4531, -9.8833, -7.8495], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8939, device='cuda:0', dtype=torch.float64)
tensor([-7.6471, -8.9959, -8.4820, -9.9869, -7.9363], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8184, device='cuda:0', dtype=torch.float64)
tensor([ -7.8161,  -8.6525,  -8.5179, -10.0633,  -8.0178], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9918, device='cuda:0', dtype=torch.float64)
tensor([ -7.9931,  -8.4461,  -8.5542, -10.1233,  -8.0949], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6761, device='cuda:0', dtype=torch.float64)
tensor([ -8.1499,  -8.2753,  -8.5961, -10.1857,  -8.1613], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9469, device='cuda:0', dtype=torch.float64)
tensor([ -8.3086,  -8.1532,  -8.6594, -10.2773,  -8.2314], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9271, device='cuda:0', dtype=torch.float64)
tensor([ -8.4733,  -8.1374,  -8.7689, -10.4134,  -8.3157], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1101, device='cuda:0', dtype=torch.float64)
tensor([ -8.6207,  -8.1639,  -8.9229, -10.5212,  -8.4109], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9033, device='cuda:0', dtype=torch.float64)
tensor([ -8.7616,  -8.1827,  -9.0847, -10.6069,  -8.5187], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8970, device='cuda:0', dtype=torch.float64)
tensor([ -8.9870,  -8.3080,  -9.3369, -10.7196,  -8.6645], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8082, device='cuda:0', dtype=torch.float64)
tensor([ -9.2165,  -8.4023,  -9.5760, -10.7878,  -8.8121], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0430, device='cuda:0', dtype=torch.float64)
tensor([ -9.4466,  -8.5315,  -9.7864, -10.8854,  -8.9540], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2506, device='cuda:0', dtype=torch.float64)
tensor([ -9.6472,  -8.7035,  -9.9835, -10.9834,  -9.0925], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9423, device='cuda:0', dtype=torch.float64)
tensor([ -9.7743,  -8.8297, -10.2143, -11.0336,  -9.2194], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9146, device='cuda:0', dtype=torch.float64)
tensor([ -9.8731,  -8.9235, -10.4481, -11.0584,  -9.3683], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8847, device='cuda:0', dtype=torch.float64)
tensor([ -9.9422,  -9.0534, -10.7883, -11.1109,  -9.5271], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7749, device='cuda:0', dtype=torch.float64)
tensor([-10.0300,  -9.2223, -11.0975, -11.1778,  -9.6873], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8337, device='cuda:0', dtype=torch.float64)
tensor([-10.1337,  -9.4070, -11.5155, -11.2596,  -9.8627], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7698, device='cuda:0', dtype=torch.float64)
tensor([-10.2568,  -9.6346, -11.8732, -11.3204, -10.0333], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0549, device='cuda:0', dtype=torch.float64)
tensor([-10.4327,  -9.9750, -12.2040, -11.3773, -10.1807], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8345, device='cuda:0', dtype=torch.float64)
tensor([-10.5546, -10.2948, -12.3384, -11.4565, -10.3318], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0477, device='cuda:0', dtype=torch.float64)
tensor([-10.6785, -10.7671, -12.5777, -11.5385, -10.5136], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8514, device='cuda:0', dtype=torch.float64)
tensor([-10.7851, -11.1371, -12.7347, -11.6402, -10.7150], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0031, device='cuda:0', dtype=torch.float64)
tensor([-10.8678, -11.5102, -12.8999, -11.7705, -10.9008], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8947, device='cuda:0', dtype=torch.float64)
tensor([-10.9750, -11.9758, -13.0416, -11.8956, -11.0852], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9932, device='cuda:0', dtype=torch.float64)
tensor([-10.9867, -12.3529, -13.1917, -12.0242, -11.2662], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9197, device='cuda:0', dtype=torch.float64)
tensor([-10.9900, -12.6872, -13.3367, -12.1660, -11.4233], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7243, device='cuda:0', dtype=torch.float64)
tensor([-10.9793, -12.9447, -13.4099, -12.3244, -11.5981], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8970, device='cuda:0', dtype=torch.float64)
tensor([-10.9965, -13.5518, -13.6413, -12.5655, -11.7806], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7823, device='cuda:0', dtype=torch.float64)
tensor([-11.0479, -14.0891, -13.8342, -12.7753, -11.9622], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8459, device='cuda:0', dtype=torch.float64)
tensor([-11.1001, -14.5160, -14.0048, -12.9469, -12.1132], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7994, device='cuda:0', dtype=torch.float64)
tensor([-11.1648, -15.0197, -14.1678, -13.1978, -12.2504], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9326, device='cuda:0', dtype=torch.float64)
tensor([-11.2806, -15.9242, -14.4431, -13.5426, -12.4011], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8712, device='cuda:0', dtype=torch.float64)
tensor([-11.3782, -16.8919, -14.7798, -13.8824, -12.5700], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8188, device='cuda:0', dtype=torch.float64)
tensor([-11.3831, -17.5696, -15.0617, -14.1737, -12.6985], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9900, device='cuda:0', dtype=torch.float64)
tensor([-11.3385, -18.0281, -15.3945, -14.4951, -12.8427], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8524, device='cuda:0', dtype=torch.float64)
tensor([-11.3458, -18.6459, -15.8139, -14.8312, -12.9781], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0015, device='cuda:0', dtype=torch.float64)
tensor([-11.3275, -19.0106, -16.1371, -15.1503, -13.1001], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8503, device='cuda:0', dtype=torch.float64)
tensor([-11.3332, -19.4140, -16.6306, -15.4789, -13.2428], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7932, device='cuda:0', dtype=torch.float64)
tensor([-11.3208, -19.6138, -16.9267, -15.6827, -13.3665], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8007, device='cuda:0', dtype=torch.float64)
tensor([-11.2843, -19.4895, -17.0325, -15.8770, -13.5259], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7709, device='cuda:0', dtype=torch.float64)
tensor([-11.2642, -19.2465, -17.1656, -16.0401, -13.6921], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7953, device='cuda:0', dtype=torch.float64)
tensor([-11.2334, -18.9489, -17.3662, -16.1291, -13.8346], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8628, device='cuda:0', dtype=torch.float64)
tensor([-11.2299, -18.4445, -17.3521, -16.2534, -13.9441], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8513, device='cuda:0', dtype=torch.float64)
tensor([-11.2041, -18.1279, -17.3942, -16.3723, -14.0908], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8326, device='cuda:0', dtype=torch.float64)
tensor([-11.1588, -17.7927, -17.3593, -16.5081, -14.2229], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7940, device='cuda:0', dtype=torch.float64)
tensor([-11.1458, -17.4542, -17.2694, -16.5822, -14.3413], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8901, device='cuda:0', dtype=torch.float64)
tensor([-11.1004, -17.1750, -17.1854, -16.6997, -14.4380], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7866, device='cuda:0', dtype=torch.float64)
tensor([-11.0930, -16.8698, -17.1398, -16.8569, -14.5560], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7389, device='cuda:0', dtype=torch.float64)
tensor([-11.0883, -16.7605, -17.0615, -17.0265, -14.6502], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6807, device='cuda:0', dtype=torch.float64)
tensor([-11.0593, -16.6096, -16.9379, -17.1851, -14.7568], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8199, device='cuda:0', dtype=torch.float64)
tensor([-10.9753, -16.4422, -16.7417, -17.3709, -14.8663], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7588, device='cuda:0', dtype=torch.float64)
tensor([-10.8368, -16.2552, -16.6138, -17.5503, -14.9644], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6517, device='cuda:0', dtype=torch.float64)
tensor([-10.7828, -16.2357, -16.5970, -17.7128, -15.0506], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7322, device='cuda:0', dtype=torch.float64)
tensor([-10.7001, -16.2069, -16.5672, -17.7790, -15.1368], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6946, device='cuda:0', dtype=torch.float64)
tensor([-10.5995, -16.1797, -16.7565, -17.8850, -15.2852], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7605, device='cuda:0', dtype=torch.float64)
tensor([-10.5177, -16.2065, -16.9625, -18.0993, -15.4417], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9784, device='cuda:0', dtype=torch.float64)
tensor([-10.4196, -16.1714, -17.0473, -18.3007, -15.5968], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6913, device='cuda:0', dtype=torch.float64)
tensor([-10.3597, -16.1534, -17.0831, -18.5081, -15.7676], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7867, device='cuda:0', dtype=torch.float64)
tensor([-10.3202, -16.2106, -17.1466, -18.7356, -16.0056], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6319, device='cuda:0', dtype=torch.float64)
tensor([-10.2438, -16.2756, -17.2232, -18.9385, -16.2086], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8354, device='cuda:0', dtype=torch.float64)
tensor([-10.1671, -16.4432, -17.5172, -19.2111, -16.4129], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9365, device='cuda:0', dtype=torch.float64)
tensor([-10.0919, -16.5038, -17.6458, -19.3996, -16.5897], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6510, device='cuda:0', dtype=torch.float64)
tensor([-10.0254, -16.6038, -17.7639, -19.6323, -16.7449], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7419, device='cuda:0', dtype=torch.float64)
tensor([ -9.9756, -16.7355, -17.9559, -19.7929, -16.9056], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6844, device='cuda:0', dtype=torch.float64)
tensor([ -9.9374, -16.8182, -18.1020, -19.8706, -17.0259], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6370, device='cuda:0', dtype=torch.float64)
tensor([ -9.9142, -16.8434, -18.1187, -19.9622, -17.1636], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6615, device='cuda:0', dtype=torch.float64)
tensor([ -9.8827, -16.8303, -18.0661, -20.0081, -17.2746], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7128, device='cuda:0', dtype=torch.float64)
tensor([ -9.8857, -16.8162, -18.0101, -20.1244, -17.4334], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7368, device='cuda:0', dtype=torch.float64)
tensor([ -9.9550, -16.7690, -17.8676, -20.2471, -17.5769], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7857, device='cuda:0', dtype=torch.float64)
tensor([ -9.9928, -16.7482, -17.7286, -20.4655, -17.7796], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6779, device='cuda:0', dtype=torch.float64)
tensor([-10.0149, -16.7067, -17.5181, -20.6942, -17.9105], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6699, device='cuda:0', dtype=torch.float64)
tensor([-10.0677, -16.6840, -17.2483, -20.9642, -18.0752], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6420, device='cuda:0', dtype=torch.float64)
tensor([-10.1028, -16.5912, -16.9530, -21.1827, -18.1890], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7745, device='cuda:0', dtype=torch.float64)
tensor([-10.1369, -16.5223, -16.7540, -21.4518, -18.2926], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9054, device='cuda:0', dtype=torch.float64)
tensor([-10.2100, -16.5464, -16.6238, -21.7112, -18.4000], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7604, device='cuda:0', dtype=torch.float64)
tensor([-10.2554, -16.6243, -16.5050, -22.0253, -18.5278], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6198, device='cuda:0', dtype=torch.float64)
tensor([-10.2471, -16.6142, -16.3155, -22.3469, -18.6687], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5964, device='cuda:0', dtype=torch.float64)
tensor([-10.2524, -16.5836, -16.1221, -22.6726, -18.7845], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6684, device='cuda:0', dtype=torch.float64)
tensor([-10.2737, -16.5367, -15.9832, -22.9205, -18.8745], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7982, device='cuda:0', dtype=torch.float64)
tensor([-10.3061, -16.4944, -15.7783, -23.1390, -18.9145], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5951, device='cuda:0', dtype=torch.float64)
tensor([-10.3533, -16.4779, -15.5960, -23.3742, -18.9437], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6490, device='cuda:0', dtype=torch.float64)
tensor([-10.3613, -16.4503, -15.4267, -23.5602, -18.9989], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6778, device='cuda:0', dtype=torch.float64)
tensor([-10.3162, -16.2789, -15.1556, -23.6317, -18.9555], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6538, device='cuda:0', dtype=torch.float64)
tensor([-10.2708, -16.0922, -14.8077, -23.6217, -18.9205], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6931, device='cuda:0', dtype=torch.float64)
tensor([-10.2558, -16.0005, -14.4662, -23.5981, -18.9269], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6647, device='cuda:0', dtype=torch.float64)
tensor([-10.2383, -15.9432, -14.1627, -23.5512, -18.9156], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5965, device='cuda:0', dtype=torch.float64)
tensor([-10.1990, -15.8922, -13.9100, -23.4507, -18.8117], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5076, device='cuda:0', dtype=torch.float64)
tensor([-10.1711, -15.8736, -13.6853, -23.3460, -18.7261], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5978, device='cuda:0', dtype=torch.float64)
tensor([-10.1369, -15.9095, -13.4458, -23.2419, -18.6249], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4898, device='cuda:0', dtype=torch.float64)
tensor([-10.1154, -16.0333, -13.2751, -23.1485, -18.5542], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5923, device='cuda:0', dtype=torch.float64)
tensor([-10.0896, -16.1375, -13.1801, -23.1221, -18.5353], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7070, device='cuda:0', dtype=torch.float64)
tensor([-10.0770, -16.2934, -13.2505, -23.1924, -18.6263], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6485, device='cuda:0', dtype=torch.float64)
tensor([-10.0636, -16.4871, -13.2527, -23.2653, -18.7211], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6440, device='cuda:0', dtype=torch.float64)
tensor([-10.0001, -16.6998, -13.1630, -23.2894, -18.7780], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6247, device='cuda:0', dtype=torch.float64)
tensor([ -9.9573, -17.0054, -13.0942, -23.3459, -18.8527], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5647, device='cuda:0', dtype=torch.float64)
tensor([ -9.9422, -17.2945, -13.0215, -23.5137, -18.9832], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6104, device='cuda:0', dtype=torch.float64)
tensor([ -9.9287, -17.4932, -12.9669, -23.6044, -19.0485], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5674, device='cuda:0', dtype=torch.float64)
tensor([ -9.9080, -17.7182, -12.9609, -23.7235, -19.1673], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6514, device='cuda:0', dtype=torch.float64)
tensor([ -9.8810, -17.9025, -12.9436, -23.7991, -19.1971], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6242, device='cuda:0', dtype=torch.float64)
tensor([ -9.8554, -18.0937, -12.9403, -23.7491, -19.1879], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7209, device='cuda:0', dtype=torch.float64)
tensor([ -9.8699, -18.3570, -12.9618, -23.8039, -19.2282], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6283, device='cuda:0', dtype=torch.float64)
tensor([ -9.9015, -18.6665, -12.9838, -23.8728, -19.2645], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7154, device='cuda:0', dtype=torch.float64)
tensor([ -9.9375, -19.0424, -12.9813, -23.8128, -19.3136], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5256, device='cuda:0', dtype=torch.float64)
tensor([ -9.9764, -19.4490, -13.0505, -23.7992, -19.3330], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5414, device='cuda:0', dtype=torch.float64)
tensor([-10.0274, -19.8311, -13.0756, -23.8236, -19.3889], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5724, device='cuda:0', dtype=torch.float64)
tensor([-10.1152, -20.3028, -13.1882, -23.9004, -19.4785], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6080, device='cuda:0', dtype=torch.float64)
tensor([-10.2404, -20.9554, -13.2856, -23.9733, -19.6364], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5273, device='cuda:0', dtype=torch.float64)
tensor([-10.3495, -21.6151, -13.3642, -24.0461, -19.7597], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5314, device='cuda:0', dtype=torch.float64)
tensor([-10.4719, -22.2081, -13.4437, -24.0837, -19.8384], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6151, device='cuda:0', dtype=torch.float64)
tensor([-10.5808, -22.6975, -13.4793, -24.0378, -19.8588], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5474, device='cuda:0', dtype=torch.float64)
tensor([-10.7437, -23.1967, -13.5970, -23.9988, -19.8516], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5808, device='cuda:0', dtype=torch.float64)
tensor([-10.8925, -23.6978, -13.7103, -23.9584, -19.8243], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5488, device='cuda:0', dtype=torch.float64)
tensor([-11.0350, -24.0893, -13.8262, -23.9508, -19.7751], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5052, device='cuda:0', dtype=torch.float64)
tensor([-11.1774, -24.4712, -13.9434, -23.9543, -19.7637], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5257, device='cuda:0', dtype=torch.float64)
tensor([-11.3187, -24.8053, -14.0903, -23.9695, -19.7604], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5517, device='cuda:0', dtype=torch.float64)
tensor([-11.4474, -25.2085, -14.2047, -24.0355, -19.7741], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6291, device='cuda:0', dtype=torch.float64)
tensor([-11.5705, -25.6032, -14.3099, -24.1510, -19.7739], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5258, device='cuda:0', dtype=torch.float64)
tensor([-11.6423, -25.9552, -14.3389, -24.1817, -19.7618], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5358, device='cuda:0', dtype=torch.float64)
tensor([-11.7265, -26.4081, -14.4329, -24.2265, -19.7889], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5467, device='cuda:0', dtype=torch.float64)
tensor([-11.8734, -26.7315, -14.4974, -24.2420, -19.8080], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6168, device='cuda:0', dtype=torch.float64)
tensor([-12.0101, -27.0851, -14.5583, -24.2228, -19.7984], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5413, device='cuda:0', dtype=torch.float64)
tensor([-12.0980, -27.4535, -14.6048, -24.2223, -19.8240], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5852, device='cuda:0', dtype=torch.float64)
tensor([-12.1419, -27.7453, -14.5876, -24.2164, -19.8037], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5311, device='cuda:0', dtype=torch.float64)
tensor([-12.1722, -27.8424, -14.5008, -24.1448, -19.7669], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5983, device='cuda:0', dtype=torch.float64)
tensor([-12.1531, -27.9431, -14.4015, -24.1101, -19.7860], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4354, device='cuda:0', dtype=torch.float64)
tensor([-12.1214, -28.0038, -14.2636, -24.1113, -19.8180], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6594, device='cuda:0', dtype=torch.float64)
tensor([-12.1014, -27.7155, -14.0854, -23.8633, -19.7364], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5453, device='cuda:0', dtype=torch.float64)
tensor([-12.1127, -27.3034, -13.8818, -23.5894, -19.6321], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4873, device='cuda:0', dtype=torch.float64)
tensor([-12.1393, -27.1273, -13.7383, -23.3893, -19.6028], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4507, device='cuda:0', dtype=torch.float64)
tensor([-12.1529, -27.0745, -13.5748, -23.2258, -19.6371], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4441, device='cuda:0', dtype=torch.float64)
tensor([-12.1611, -27.0332, -13.4627, -23.1200, -19.6765], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4225, device='cuda:0', dtype=torch.float64)
tensor([-12.1673, -27.0891, -13.3926, -23.0347, -19.7241], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4855, device='cuda:0', dtype=torch.float64)
tensor([-12.0858, -27.0951, -13.2864, -22.9920, -19.7503], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4450, device='cuda:0', dtype=torch.float64)
tensor([-12.0619, -27.2424, -13.2466, -23.0864, -19.8323], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4571, device='cuda:0', dtype=torch.float64)
tensor([-12.0644, -27.3267, -13.2219, -23.1752, -19.8785], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4421, device='cuda:0', dtype=torch.float64)
tensor([-12.0762, -27.3938, -13.1931, -23.2318, -19.9411], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5448, device='cuda:0', dtype=torch.float64)
tensor([-12.0772, -27.5427, -13.1795, -23.2657, -20.0006], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4913, device='cuda:0', dtype=torch.float64)
tensor([-12.0683, -27.6973, -13.1542, -23.3493, -20.0799], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4533, device='cuda:0', dtype=torch.float64)
tensor([-12.0458, -27.9852, -13.1567, -23.5298, -20.2350], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4737, device='cuda:0', dtype=torch.float64)
tensor([-12.0382, -28.4111, -13.1569, -23.7481, -20.4398], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4026, device='cuda:0', dtype=torch.float64)
tensor([-12.0526, -28.8113, -13.1968, -23.9669, -20.6485], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5764, device='cuda:0', dtype=torch.float64)
tensor([-12.0300, -29.1161, -13.1906, -24.1012, -20.8527], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4462, device='cuda:0', dtype=torch.float64)
tensor([-11.9891, -29.3081, -13.1314, -24.1444, -21.0279], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4161, device='cuda:0', dtype=torch.float64)
tensor([-11.9536, -29.4744, -13.0657, -24.1492, -21.1884], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5435, device='cuda:0', dtype=torch.float64)
tensor([-11.8952, -29.7500, -12.9587, -24.2017, -21.3629], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4753, device='cuda:0', dtype=torch.float64)
tensor([-11.7986, -29.8538, -12.7826, -24.2158, -21.4960], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4632, device='cuda:0', dtype=torch.float64)
tensor([-11.7016, -30.0028, -12.6607, -24.2018, -21.5970], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4839, device='cuda:0', dtype=torch.float64)
tensor([-11.6227, -30.1412, -12.5720, -24.2155, -21.6942], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4764, device='cuda:0', dtype=torch.float64)
tensor([-11.5574, -30.1716, -12.4294, -24.1780, -21.7404], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5007, device='cuda:0', dtype=torch.float64)
tensor([-11.5187, -30.2272, -12.2998, -24.1238, -21.7512], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5183, device='cuda:0', dtype=torch.float64)
tensor([-11.5318, -30.4112, -12.2422, -24.2107, -21.8017], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4818, device='cuda:0', dtype=torch.float64)
tensor([-11.5385, -30.6921, -12.2322, -24.3241, -21.9073], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4617, device='cuda:0', dtype=torch.float64)
tensor([-11.5417, -31.0196, -12.2263, -24.4020, -22.0152], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5257, device='cuda:0', dtype=torch.float64)
tensor([-11.5544, -31.2408, -12.2253, -24.4461, -22.0723], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4904, device='cuda:0', dtype=torch.float64)
tensor([-11.5930, -31.5213, -12.2539, -24.4601, -22.1260], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3685, device='cuda:0', dtype=torch.float64)
tensor([-11.5910, -31.7774, -12.2193, -24.4375, -22.1571], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4226, device='cuda:0', dtype=torch.float64)
tensor([-11.5880, -32.0216, -12.2049, -24.3712, -22.1910], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3820, device='cuda:0', dtype=torch.float64)
tensor([-11.6206, -32.3075, -12.2306, -24.3720, -22.2443], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4522, device='cuda:0', dtype=torch.float64)
tensor([-11.6621, -32.4865, -12.2498, -24.3257, -22.2453], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4544, device='cuda:0', dtype=torch.float64)
tensor([-11.7034, -32.6069, -12.2797, -24.2405, -22.2044], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4444, device='cuda:0', dtype=torch.float64)
tensor([-11.7136, -32.5413, -12.2697, -24.1049, -22.1668], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3941, device='cuda:0', dtype=torch.float64)
tensor([-11.7602, -32.5962, -12.2758, -24.0485, -22.1649], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4514, device='cuda:0', dtype=torch.float64)
tensor([-11.8153, -32.5823, -12.2967, -24.0027, -22.1698], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3883, device='cuda:0', dtype=torch.float64)
tensor([-11.8740, -32.4595, -12.2688, -23.9308, -22.1320], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4024, device='cuda:0', dtype=torch.float64)
tensor([-11.9315, -32.3866, -12.2460, -23.8784, -22.1039], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3983, device='cuda:0', dtype=torch.float64)
tensor([-11.9925, -32.2871, -12.2112, -23.8025, -22.0695], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3253, device='cuda:0', dtype=torch.float64)
tensor([-12.0639, -32.2139, -12.2122, -23.7731, -22.0498], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3684, device='cuda:0', dtype=torch.float64)
tensor([-12.1605, -32.2011, -12.2319, -23.7719, -22.0354], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4645, device='cuda:0', dtype=torch.float64)
tensor([-12.2340, -32.2173, -12.2608, -23.8428, -22.0566], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4323, device='cuda:0', dtype=torch.float64)
tensor([-12.3257, -32.0516, -12.3221, -23.8550, -22.0328], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3860, device='cuda:0', dtype=torch.float64)
tensor([-12.4237, -31.8892, -12.3603, -23.8580, -21.9971], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3757, device='cuda:0', dtype=torch.float64)
tensor([-12.5049, -31.7669, -12.3943, -23.8836, -21.9788], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4400, device='cuda:0', dtype=torch.float64)
tensor([-12.5742, -31.7144, -12.3987, -23.9287, -21.9949], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4190, device='cuda:0', dtype=torch.float64)
tensor([-12.6521, -31.8287, -12.4522, -24.0596, -22.0675], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3942, device='cuda:0', dtype=torch.float64)
tensor([-12.7231, -31.9598, -12.5124, -24.2140, -22.1468], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2842, device='cuda:0', dtype=torch.float64)
tensor([-12.8109, -32.1448, -12.5662, -24.3823, -22.2449], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3562, device='cuda:0', dtype=torch.float64)
tensor([-12.8865, -32.3205, -12.6277, -24.5317, -22.3508], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4063, device='cuda:0', dtype=torch.float64)
tensor([-12.9082, -32.4558, -12.6404, -24.6798, -22.4466], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3314, device='cuda:0', dtype=torch.float64)
tensor([-12.9300, -32.6072, -12.6378, -24.7724, -22.5449], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3492, device='cuda:0', dtype=torch.float64)
tensor([-12.9115, -32.7164, -12.6439, -24.8161, -22.5921], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2898, device='cuda:0', dtype=torch.float64)
tensor([-12.9221, -32.7954, -12.6708, -24.8357, -22.6494], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3695, device='cuda:0', dtype=torch.float64)
tensor([-12.9119, -32.8628, -12.6923, -24.8270, -22.6867], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3037, device='cuda:0', dtype=torch.float64)
tensor([-12.8876, -32.9198, -12.7002, -24.8491, -22.6965], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3553, device='cuda:0', dtype=torch.float64)
tensor([-12.8507, -33.0346, -12.7140, -24.9279, -22.7323], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3712, device='cuda:0', dtype=torch.float64)
tensor([-12.8265, -33.1463, -12.7496, -24.9977, -22.7733], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3672, device='cuda:0', dtype=torch.float64)
tensor([-12.8236, -33.2955, -12.7837, -25.0220, -22.8234], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3755, device='cuda:0', dtype=torch.float64)
tensor([-12.8365, -33.3211, -12.8307, -25.0346, -22.8476], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3509, device='cuda:0', dtype=torch.float64)
tensor([-12.8512, -33.3506, -12.8916, -25.0948, -22.8876], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3699, device='cuda:0', dtype=torch.float64)
tensor([-12.8263, -33.3422, -12.8901, -25.1692, -22.9257], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3456, device='cuda:0', dtype=torch.float64)
tensor([-12.7911, -33.3439, -12.8850, -25.2184, -22.9346], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3052, device='cuda:0', dtype=torch.float64)
tensor([-12.7437, -33.3653, -12.8820, -25.2387, -22.9434], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3206, device='cuda:0', dtype=torch.float64)
tensor([-12.6575, -33.3770, -12.8768, -25.2359, -22.9374], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3080, device='cuda:0', dtype=torch.float64)
tensor([-12.5871, -33.2986, -12.8713, -25.1688, -22.8732], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3535, device='cuda:0', dtype=torch.float64)
tensor([-12.5121, -33.0980, -12.8653, -25.1085, -22.7732], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3358, device='cuda:0', dtype=torch.float64)
tensor([-12.4376, -32.8686, -12.8324, -25.0684, -22.6752], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3044, device='cuda:0', dtype=torch.float64)
tensor([-12.3695, -32.6455, -12.7820, -24.9730, -22.5721], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3769, device='cuda:0', dtype=torch.float64)
tensor([-12.3199, -32.4628, -12.7507, -24.8841, -22.4828], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3671, device='cuda:0', dtype=torch.float64)
tensor([-12.2394, -32.2913, -12.6827, -24.7892, -22.3840], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3233, device='cuda:0', dtype=torch.float64)
tensor([-12.1847, -32.0931, -12.6259, -24.6541, -22.2894], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3234, device='cuda:0', dtype=torch.float64)
tensor([-12.1338, -32.0565, -12.5909, -24.5661, -22.2701], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2705, device='cuda:0', dtype=torch.float64)
tensor([-12.0928, -32.0518, -12.5746, -24.5119, -22.2540], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3053, device='cuda:0', dtype=torch.float64)
tensor([-12.0560, -32.0322, -12.5695, -24.4519, -22.2077], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2913, device='cuda:0', dtype=torch.float64)
tensor([-12.0173, -31.9877, -12.5566, -24.4165, -22.1415], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3081, device='cuda:0', dtype=torch.float64)
tensor([-11.9764, -31.9848, -12.5500, -24.3524, -22.0822], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2915, device='cuda:0', dtype=torch.float64)
tensor([-11.9573, -32.0770, -12.5486, -24.3046, -22.0669], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3030, device='cuda:0', dtype=torch.float64)
tensor([-11.9422, -32.1275, -12.5302, -24.2926, -22.0390], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2972, device='cuda:0', dtype=torch.float64)
tensor([-11.9264, -32.1039, -12.5137, -24.2826, -21.9975], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2504, device='cuda:0', dtype=torch.float64)
tensor([-11.9056, -32.0550, -12.4957, -24.2623, -21.9447], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2908, device='cuda:0', dtype=torch.float64)
tensor([-11.9003, -31.9529, -12.4936, -24.2906, -21.8728], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2507, device='cuda:0', dtype=torch.float64)
tensor([-11.9142, -31.9034, -12.4912, -24.3345, -21.8168], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2825, device='cuda:0', dtype=torch.float64)
tensor([-11.9276, -31.8088, -12.4974, -24.3907, -21.7523], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3261, device='cuda:0', dtype=torch.float64)
tensor([-11.9298, -31.7435, -12.4831, -24.5086, -21.7259], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3267, device='cuda:0', dtype=torch.float64)
tensor([-11.9218, -31.7152, -12.4521, -24.6085, -21.7205], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2544, device='cuda:0', dtype=torch.float64)
tensor([-11.9103, -31.6257, -12.4105, -24.6500, -21.6906], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3260, device='cuda:0', dtype=torch.float64)
tensor([-11.9300, -31.6261, -12.3647, -24.6433, -21.6757], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3149, device='cuda:0', dtype=torch.float64)
tensor([-11.9568, -31.6143, -12.3344, -24.6230, -21.6644], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2063, device='cuda:0', dtype=torch.float64)
tensor([-11.9767, -31.4930, -12.3170, -24.5665, -21.6056], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3823, device='cuda:0', dtype=torch.float64)
tensor([-12.0129, -31.4591, -12.3462, -24.5935, -21.5930], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2690, device='cuda:0', dtype=torch.float64)
tensor([-12.0687, -31.4403, -12.3703, -24.6074, -21.5699], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2564, device='cuda:0', dtype=torch.float64)
tensor([-12.0816, -31.3962, -12.3570, -24.6415, -21.5546], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2393, device='cuda:0', dtype=torch.float64)
tensor([-12.1105, -31.4202, -12.3582, -24.7098, -21.5620], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2424, device='cuda:0', dtype=torch.float64)
tensor([-12.1157, -31.3945, -12.3165, -24.7221, -21.5508], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2343, device='cuda:0', dtype=torch.float64)
tensor([-12.1201, -31.3719, -12.2794, -24.7347, -21.5372], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2402, device='cuda:0', dtype=torch.float64)
tensor([-12.0996, -31.3268, -12.2333, -24.7223, -21.5195], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2779, device='cuda:0', dtype=torch.float64)
tensor([-12.0981, -31.3263, -12.1901, -24.7534, -21.5578], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2069, device='cuda:0', dtype=torch.float64)
tensor([-12.0896, -31.3375, -12.1527, -24.7431, -21.5806], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2519, device='cuda:0', dtype=torch.float64)
tensor([-12.0807, -31.2988, -12.1069, -24.6915, -21.5771], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2152, device='cuda:0', dtype=torch.float64)
tensor([-12.0594, -31.2577, -12.0419, -24.6281, -21.5824], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2144, device='cuda:0', dtype=torch.float64)
tensor([-12.0441, -31.2378, -11.9732, -24.5792, -21.6122], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2742, device='cuda:0', dtype=torch.float64)
tensor([-12.0121, -31.2206, -11.8961, -24.5318, -21.6618], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2200, device='cuda:0', dtype=torch.float64)
tensor([-11.9838, -31.2175, -11.8291, -24.4841, -21.7111], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2429, device='cuda:0', dtype=torch.float64)
tensor([-11.9560, -31.2036, -11.7560, -24.3712, -21.7457], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2389, device='cuda:0', dtype=torch.float64)
tensor([-11.9433, -31.1867, -11.6815, -24.2435, -21.7474], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2072, device='cuda:0', dtype=torch.float64)
tensor([-11.9349, -31.1881, -11.6222, -24.1685, -21.7685], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2143, device='cuda:0', dtype=torch.float64)
tensor([-11.9337, -31.1552, -11.5678, -24.0713, -21.7792], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2170, device='cuda:0', dtype=torch.float64)
tensor([-11.9265, -31.0883, -11.4967, -23.9660, -21.7881], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2246, device='cuda:0', dtype=torch.float64)
tensor([-11.9035, -31.0028, -11.4250, -23.8724, -21.7738], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2318, device='cuda:0', dtype=torch.float64)
tensor([-11.8780, -30.9431, -11.3605, -23.7607, -21.7466], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2088, device='cuda:0', dtype=torch.float64)
tensor([-11.8746, -30.9026, -11.3113, -23.6462, -21.7310], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2156, device='cuda:0', dtype=torch.float64)
tensor([-11.8725, -30.8715, -11.2691, -23.5476, -21.7094], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2349, device='cuda:0', dtype=torch.float64)
tensor([-11.8565, -30.7990, -11.2144, -23.4426, -21.6921], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1957, device='cuda:0', dtype=torch.float64)
tensor([-11.8547, -30.6945, -11.1633, -23.3240, -21.6448], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2111, device='cuda:0', dtype=torch.float64)
tensor([-11.8510, -30.6165, -11.1124, -23.2287, -21.5985], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2439, device='cuda:0', dtype=torch.float64)
tensor([-11.8477, -30.4586, -11.0334, -23.0649, -21.5159], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1871, device='cuda:0', dtype=torch.float64)
tensor([-11.8545, -30.2747, -10.9599, -22.9192, -21.4378], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2167, device='cuda:0', dtype=torch.float64)
tensor([-11.8498, -30.0671, -10.8767, -22.7469, -21.3374], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2076, device='cuda:0', dtype=torch.float64)
tensor([-11.8604, -29.8636, -10.8064, -22.6061, -21.2479], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1728, device='cuda:0', dtype=torch.float64)
tensor([-11.8664, -29.6740, -10.7461, -22.4892, -21.1569], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2022, device='cuda:0', dtype=torch.float64)
tensor([-11.8849, -29.5082, -10.6927, -22.4012, -21.0736], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1611, device='cuda:0', dtype=torch.float64)
tensor([-11.9113, -29.3652, -10.6283, -22.2900, -20.9996], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1848, device='cuda:0', dtype=torch.float64)
tensor([-11.9447, -29.2158, -10.5704, -22.1764, -20.9290], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2170, device='cuda:0', dtype=torch.float64)
tensor([-11.9562, -29.0136, -10.4744, -22.0545, -20.8290], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1683, device='cuda:0', dtype=torch.float64)
tensor([-11.9671, -28.7881, -10.3685, -21.9073, -20.7158], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1781, device='cuda:0', dtype=torch.float64)
tensor([-11.9953, -28.5928, -10.2725, -21.7551, -20.6151], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1944, device='cuda:0', dtype=torch.float64)
tensor([-12.0160, -28.3953, -10.1764, -21.6109, -20.5062], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1736, device='cuda:0', dtype=torch.float64)
tensor([-12.0399, -28.2279, -10.0690, -21.4711, -20.4118], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2040, device='cuda:0', dtype=torch.float64)
tensor([-12.0645, -28.0766,  -9.9876, -21.3495, -20.3186], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1525, device='cuda:0', dtype=torch.float64)
tensor([-12.1004, -27.9723,  -9.9224, -21.2282, -20.2211], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1670, device='cuda:0', dtype=torch.float64)
tensor([-12.1336, -27.8354,  -9.8681, -21.1236, -20.1136], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2004, device='cuda:0', dtype=torch.float64)
tensor([-12.1678, -27.7850,  -9.8027, -21.0522, -20.0458], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1835, device='cuda:0', dtype=torch.float64)
tensor([-12.2018, -27.7827,  -9.7451, -20.9970, -19.9949], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1979, device='cuda:0', dtype=torch.float64)
tensor([-12.2318, -27.7595,  -9.6779, -20.9227, -19.9279], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1553, device='cuda:0', dtype=torch.float64)
tensor([-12.2352, -27.7470,  -9.6147, -20.8586, -19.8588], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2284, device='cuda:0', dtype=torch.float64)
tensor([-12.2456, -27.6751,  -9.5493, -20.7487, -19.7576], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1597, device='cuda:0', dtype=torch.float64)
tensor([-12.2631, -27.6262,  -9.4936, -20.6366, -19.6608], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2087, device='cuda:0', dtype=torch.float64)
tensor([-12.3064, -27.6626,  -9.4597, -20.5417, -19.5821], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1953, device='cuda:0', dtype=torch.float64)
tensor([-12.3480, -27.7543,  -9.4144, -20.4499, -19.5189], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1742, device='cuda:0', dtype=torch.float64)
tensor([-12.3896, -27.8375,  -9.3826, -20.3757, -19.4600], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1240, device='cuda:0', dtype=torch.float64)
tensor([-12.4308, -27.9127,  -9.3517, -20.3123, -19.4065], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1735, device='cuda:0', dtype=torch.float64)
tensor([-12.4626, -27.9622,  -9.3281, -20.2451, -19.3555], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2296, device='cuda:0', dtype=torch.float64)
tensor([-12.4918, -27.9689,  -9.2957, -20.1402, -19.2790], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1572, device='cuda:0', dtype=torch.float64)
tensor([-12.5175, -27.9245,  -9.2571, -20.0146, -19.1938], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1954, device='cuda:0', dtype=torch.float64)
tensor([-12.5433, -27.8520,  -9.2265, -19.8980, -19.0940], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2196, device='cuda:0', dtype=torch.float64)
tensor([-12.5453, -27.7570,  -9.1830, -19.7961, -19.0232], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1956, device='cuda:0', dtype=torch.float64)
tensor([-12.5363, -27.5977,  -9.1182, -19.6687, -18.9501], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1634, device='cuda:0', dtype=torch.float64)
tensor([-12.5332, -27.4228,  -9.0640, -19.5370, -18.8654], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1387, device='cuda:0', dtype=torch.float64)
tensor([-12.5334, -27.2968,  -9.0111, -19.4158, -18.7901], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2111, device='cuda:0', dtype=torch.float64)
tensor([-12.5379, -27.1366,  -8.9620, -19.2702, -18.7117], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2113, device='cuda:0', dtype=torch.float64)
tensor([-12.5261, -26.9543,  -8.9095, -19.1109, -18.6180], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1771, device='cuda:0', dtype=torch.float64)
tensor([-12.5130, -26.7889,  -8.8641, -18.9568, -18.5350], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1655, device='cuda:0', dtype=torch.float64)
tensor([-12.5017, -26.6454,  -8.8179, -18.8103, -18.4701], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1809, device='cuda:0', dtype=torch.float64)
tensor([-12.4985, -26.5154,  -8.7949, -18.6846, -18.4182], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1699, device='cuda:0', dtype=torch.float64)
tensor([-12.4717, -26.3872,  -8.7671, -18.5658, -18.3733], device='cuda:0',
       dtype=torch.float64)
Saved results to /home/idrissm/projects/def-mh541-ab/idrissm/neighborVCA/runs/results/tsp/tsp64_/home/idrissm/projects/def-mh541-ab/idrissm/neighborVCA/scripts/VCA/tsp/configHVCA64.json_20250925_100030.csv
rnn.0.0.weight tensor(0.8602, device='cuda:0', dtype=torch.float64)
tensor([-2.3503, -3.4717, -4.1553, -4.9913, -5.9320], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(13.2644, device='cuda:0', dtype=torch.float64)
tensor([-42.6452, -28.9265, -22.1051, -64.0985, -33.9892], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(319.9290, device='cuda:0', dtype=torch.float64)
tensor([-2.9475, -5.7093, -5.3783, -4.9621, -7.5288], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(29.6667, device='cuda:0', dtype=torch.float64)
tensor([-38.3255, -18.3745, -16.5236, -32.0345, -35.1510], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(276.5202, device='cuda:0', dtype=torch.float64)
tensor([-20.1034, -16.3765, -12.0246, -33.0558, -30.2299], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(212.0979, device='cuda:0', dtype=torch.float64)
tensor([-3.1031, -7.4155, -5.2043, -7.9934, -8.1167], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(45.0185, device='cuda:0', dtype=torch.float64)
tensor([-2.5994, -5.8807, -4.8385, -5.6568, -6.6439], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(34.7175, device='cuda:0', dtype=torch.float64)
tensor([-2.9745, -4.0410, -5.9353, -6.4595, -8.9755], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(63.7382, device='cuda:0', dtype=torch.float64)
tensor([ -7.3699,  -3.8037,  -7.2369,  -7.6662, -11.8696], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(88.4326, device='cuda:0', dtype=torch.float64)
tensor([ -6.9814,  -4.4609,  -7.5328,  -8.1705, -12.8954], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(88.8928, device='cuda:0', dtype=torch.float64)
tensor([ -3.3975,  -5.2378,  -6.5447,  -7.0348, -11.4434], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(65.1996, device='cuda:0', dtype=torch.float64)
tensor([-2.5583, -5.4482, -5.3835, -5.8042, -9.0259], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(36.7378, device='cuda:0', dtype=torch.float64)
tensor([-2.6030, -5.0597, -4.7845, -5.2584, -7.5524], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(22.6698, device='cuda:0', dtype=torch.float64)
tensor([-2.7572, -4.7728, -4.6340, -5.2741, -6.9082], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(18.4283, device='cuda:0', dtype=torch.float64)
tensor([-2.9177, -4.9798, -4.7128, -5.7779, -6.5001], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(22.3563, device='cuda:0', dtype=torch.float64)
tensor([-2.9636, -5.5804, -4.8555, -6.7264, -6.3046], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(31.2602, device='cuda:0', dtype=torch.float64)
tensor([-2.9506, -6.3206, -4.8825, -7.2012, -6.3719], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(38.0701, device='cuda:0', dtype=torch.float64)
tensor([-2.9538, -5.8390, -4.6926, -6.7548, -6.5421], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(37.2863, device='cuda:0', dtype=torch.float64)
tensor([-2.6821, -4.9551, -4.4239, -6.0654, -6.6071], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(27.9471, device='cuda:0', dtype=torch.float64)
tensor([-2.5105, -4.5031, -4.2771, -5.5815, -6.6004], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(20.5222, device='cuda:0', dtype=torch.float64)
tensor([-2.3830, -4.1112, -4.3384, -5.3802, -6.6321], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(15.2771, device='cuda:0', dtype=torch.float64)
tensor([-2.2681, -3.7940, -4.6032, -5.4692, -6.6966], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(13.0213, device='cuda:0', dtype=torch.float64)
tensor([-2.1783, -3.5690, -4.9867, -5.8349, -6.7982], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(13.3916, device='cuda:0', dtype=torch.float64)
tensor([-2.1357, -3.4127, -5.3540, -6.2349, -6.9471], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(17.3080, device='cuda:0', dtype=torch.float64)
tensor([-2.1280, -3.3074, -5.5904, -6.3021, -7.0584], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(20.7722, device='cuda:0', dtype=torch.float64)
tensor([-2.1065, -3.2530, -5.6624, -6.0153, -6.9868], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(21.4204, device='cuda:0', dtype=torch.float64)
tensor([-2.0781, -3.2598, -5.5865, -5.6353, -6.6799], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(18.7533, device='cuda:0', dtype=torch.float64)
tensor([-2.0774, -3.3340, -5.3994, -5.3629, -6.3159], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(14.3634, device='cuda:0', dtype=torch.float64)
tensor([-2.1195, -3.4542, -5.1525, -5.2079, -6.0795], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(10.7049, device='cuda:0', dtype=torch.float64)
tensor([-2.1941, -3.5848, -4.9039, -5.0987, -5.9876], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(9.0574, device='cuda:0', dtype=torch.float64)
tensor([-2.2727, -3.6977, -4.6891, -4.9829, -5.9879], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(10.0517, device='cuda:0', dtype=torch.float64)
tensor([-2.3318, -3.7768, -4.5167, -4.8659, -6.0277], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(11.6611, device='cuda:0', dtype=torch.float64)
tensor([-2.3676, -3.8164, -4.3842, -4.7484, -6.0645], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(12.1696, device='cuda:0', dtype=torch.float64)
tensor([-2.3831, -3.8211, -4.2896, -4.6169, -6.0765], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(11.0301, device='cuda:0', dtype=torch.float64)
tensor([-2.3833, -3.8045, -4.2351, -4.4882, -6.0659], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(8.3445, device='cuda:0', dtype=torch.float64)
tensor([-2.3739, -3.7791, -4.2259, -4.4011, -6.0449], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(5.3620, device='cuda:0', dtype=torch.float64)
tensor([-2.3610, -3.7536, -4.2600, -4.3805, -6.0218], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(5.0170, device='cuda:0', dtype=torch.float64)
tensor([-2.3453, -3.7366, -4.3186, -4.4194, -6.0029], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(6.6247, device='cuda:0', dtype=torch.float64)
tensor([-2.3254, -3.7356, -4.3637, -4.4882, -5.9916], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(7.7971, device='cuda:0', dtype=torch.float64)
tensor([-2.3000, -3.7506, -4.3621, -4.5629, -5.9864], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(7.6674, device='cuda:0', dtype=torch.float64)
tensor([-2.2712, -3.7632, -4.3168, -4.6416, -5.9805], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(6.7051, device='cuda:0', dtype=torch.float64)
tensor([-2.2442, -3.7563, -4.2594, -4.7353, -5.9665], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(5.4738, device='cuda:0', dtype=torch.float64)
tensor([-2.2244, -3.7357, -4.2221, -4.8481, -5.9426], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(4.4018, device='cuda:0', dtype=torch.float64)
tensor([-2.2144, -3.7181, -4.2153, -4.9711, -5.9164], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(3.8249, device='cuda:0', dtype=torch.float64)
tensor([-2.2128, -3.7093, -4.2363, -5.0866, -5.8976], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(3.6632, device='cuda:0', dtype=torch.float64)
tensor([-2.2147, -3.7051, -4.2767, -5.1793, -5.8878], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(3.8310, device='cuda:0', dtype=torch.float64)
tensor([-2.2153, -3.6947, -4.3240, -5.2324, -5.8834], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(4.0786, device='cuda:0', dtype=torch.float64)
tensor([-2.2123, -3.6712, -4.3675, -5.2389, -5.8801], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(4.1988, device='cuda:0', dtype=torch.float64)
tensor([-2.2072, -3.6388, -4.3985, -5.2017, -5.8798], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(4.0933, device='cuda:0', dtype=torch.float64)
tensor([-2.2017, -3.6082, -4.4078, -5.1298, -5.8840], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(3.6296, device='cuda:0', dtype=torch.float64)
tensor([-2.1963, -3.5871, -4.3889, -5.0376, -5.8918], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(3.1572, device='cuda:0', dtype=torch.float64)
tensor([-2.1908, -3.5758, -4.3402, -4.9388, -5.8986], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.7138, device='cuda:0', dtype=torch.float64)
tensor([-2.1848, -3.5717, -4.2756, -4.8483, -5.9004], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.5535, device='cuda:0', dtype=torch.float64)
tensor([-2.1793, -3.5719, -4.2108, -4.7736, -5.8940], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.6386, device='cuda:0', dtype=torch.float64)
tensor([-2.1757, -3.5746, -4.1546, -4.7129, -5.8783], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.7942, device='cuda:0', dtype=torch.float64)
tensor([-2.1763, -3.5791, -4.1099, -4.6621, -5.8565], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.6860, device='cuda:0', dtype=torch.float64)
tensor([-2.1827, -3.5867, -4.0765, -4.6231, -5.8311], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.3644, device='cuda:0', dtype=torch.float64)
tensor([-2.1939, -3.5963, -4.0526, -4.6019, -5.8038], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1124, device='cuda:0', dtype=torch.float64)
tensor([-2.2084, -3.6054, -4.0358, -4.5992, -5.7755], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0715, device='cuda:0', dtype=torch.float64)
tensor([-2.2218, -3.6103, -4.0281, -4.6124, -5.7489], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0371, device='cuda:0', dtype=torch.float64)
tensor([-2.2321, -3.6073, -4.0331, -4.6343, -5.7261], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9289, device='cuda:0', dtype=torch.float64)
tensor([-2.2365, -3.5961, -4.0529, -4.6596, -5.7073], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9450, device='cuda:0', dtype=torch.float64)
tensor([-2.2358, -3.5795, -4.0845, -4.6856, -5.6935], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8232, device='cuda:0', dtype=torch.float64)
tensor([-2.2316, -3.5597, -4.1224, -4.7090, -5.6830], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6789, device='cuda:0', dtype=torch.float64)
tensor([-2.2257, -3.5405, -4.1614, -4.7279, -5.6757], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5302, device='cuda:0', dtype=torch.float64)
tensor([-2.2195, -3.5256, -4.1943, -4.7405, -5.6709], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4812, device='cuda:0', dtype=torch.float64)
tensor([-2.2129, -3.5157, -4.2145, -4.7459, -5.6655], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5947, device='cuda:0', dtype=torch.float64)
tensor([-2.2069, -3.5107, -4.2144, -4.7446, -5.6590], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7283, device='cuda:0', dtype=torch.float64)
tensor([-2.2018, -3.5079, -4.1892, -4.7382, -5.6513], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7771, device='cuda:0', dtype=torch.float64)
tensor([-2.1992, -3.5069, -4.1473, -4.7266, -5.6448], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5714, device='cuda:0', dtype=torch.float64)
tensor([-2.1981, -3.5048, -4.1008, -4.7125, -5.6404], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4559, device='cuda:0', dtype=torch.float64)
tensor([-2.1992, -3.5006, -4.0627, -4.6974, -5.6393], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3006, device='cuda:0', dtype=torch.float64)
tensor([-2.2017, -3.4959, -4.0372, -4.6836, -5.6393], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2446, device='cuda:0', dtype=torch.float64)
tensor([-2.2043, -3.4915, -4.0267, -4.6733, -5.6412], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4055, device='cuda:0', dtype=torch.float64)
tensor([-2.2069, -3.4883, -4.0300, -4.6663, -5.6440], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4445, device='cuda:0', dtype=torch.float64)
tensor([-2.2092, -3.4874, -4.0447, -4.6625, -5.6458], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3788, device='cuda:0', dtype=torch.float64)
tensor([-2.2117, -3.4876, -4.0660, -4.6627, -5.6450], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2695, device='cuda:0', dtype=torch.float64)
tensor([-2.2127, -3.4877, -4.0872, -4.6662, -5.6426], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1790, device='cuda:0', dtype=torch.float64)
tensor([-2.2119, -3.4853, -4.1013, -4.6719, -5.6392], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2686, device='cuda:0', dtype=torch.float64)
tensor([-2.2105, -3.4800, -4.1061, -4.6762, -5.6342], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1974, device='cuda:0', dtype=torch.float64)
tensor([-2.2098, -3.4746, -4.1022, -4.6778, -5.6298], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1333, device='cuda:0', dtype=torch.float64)
tensor([-2.2091, -3.4691, -4.0931, -4.6781, -5.6243], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1005, device='cuda:0', dtype=torch.float64)
tensor([-2.2082, -3.4641, -4.0816, -4.6780, -5.6181], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0464, device='cuda:0', dtype=torch.float64)
tensor([-2.2073, -3.4618, -4.0712, -4.6746, -5.6130], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0502, device='cuda:0', dtype=torch.float64)
tensor([-2.2073, -3.4620, -4.0605, -4.6696, -5.6090], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0354, device='cuda:0', dtype=torch.float64)
tensor([-2.2087, -3.4641, -4.0523, -4.6624, -5.6065], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0374, device='cuda:0', dtype=torch.float64)
tensor([-2.2102, -3.4657, -4.0457, -4.6560, -5.6025], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0282, device='cuda:0', dtype=torch.float64)
tensor([-2.2113, -3.4664, -4.0393, -4.6481, -5.5996], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0290, device='cuda:0', dtype=torch.float64)
tensor([-2.2110, -3.4661, -4.0361, -4.6415, -5.5952], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0576, device='cuda:0', dtype=torch.float64)
tensor([-2.2104, -3.4662, -4.0341, -4.6331, -5.5895], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0096, device='cuda:0', dtype=torch.float64)
tensor([-2.2101, -3.4650, -4.0329, -4.6242, -5.5825], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0071, device='cuda:0', dtype=torch.float64)
tensor([-2.2097, -3.4626, -4.0338, -4.6166, -5.5753], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9827, device='cuda:0', dtype=torch.float64)
tensor([-2.2087, -3.4606, -4.0364, -4.6117, -5.5674], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9625, device='cuda:0', dtype=torch.float64)
tensor([-2.2075, -3.4590, -4.0377, -4.6089, -5.5603], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9971, device='cuda:0', dtype=torch.float64)
tensor([-2.2043, -3.4564, -4.0396, -4.6103, -5.5521], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9479, device='cuda:0', dtype=torch.float64)
tensor([-2.2005, -3.4543, -4.0372, -4.6134, -5.5459], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9626, device='cuda:0', dtype=torch.float64)
tensor([-2.1948, -3.4511, -4.0324, -4.6193, -5.5412], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9634, device='cuda:0', dtype=torch.float64)
tensor([-2.1883, -3.4470, -4.0274, -4.6278, -5.5375], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9227, device='cuda:0', dtype=torch.float64)
tensor([-2.1818, -3.4434, -4.0239, -4.6392, -5.5336], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9439, device='cuda:0', dtype=torch.float64)
tensor([-2.1782, -3.4403, -4.0208, -4.6510, -5.5323], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9248, device='cuda:0', dtype=torch.float64)
tensor([-2.1770, -3.4383, -4.0184, -4.6568, -5.5316], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9243, device='cuda:0', dtype=torch.float64)
tensor([-2.1787, -3.4381, -4.0191, -4.6584, -5.5324], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9417, device='cuda:0', dtype=torch.float64)
tensor([-2.1819, -3.4386, -4.0209, -4.6571, -5.5335], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0066, device='cuda:0', dtype=torch.float64)
tensor([-2.1852, -3.4392, -4.0237, -4.6549, -5.5328], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9514, device='cuda:0', dtype=torch.float64)
tensor([-2.1884, -3.4397, -4.0235, -4.6513, -5.5300], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8763, device='cuda:0', dtype=torch.float64)
tensor([-2.1917, -3.4404, -4.0221, -4.6456, -5.5262], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9712, device='cuda:0', dtype=torch.float64)
tensor([-2.1943, -3.4414, -4.0186, -4.6403, -5.5237], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9114, device='cuda:0', dtype=torch.float64)
tensor([-2.1956, -3.4418, -4.0161, -4.6372, -5.5193], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9017, device='cuda:0', dtype=torch.float64)
tensor([-2.1964, -3.4421, -4.0106, -4.6343, -5.5134], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9237, device='cuda:0', dtype=torch.float64)
tensor([-2.1943, -3.4398, -4.0038, -4.6330, -5.5067], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8809, device='cuda:0', dtype=torch.float64)
tensor([-2.1916, -3.4369, -3.9952, -4.6337, -5.5006], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8715, device='cuda:0', dtype=torch.float64)
tensor([-2.1881, -3.4312, -3.9886, -4.6360, -5.4951], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8794, device='cuda:0', dtype=torch.float64)
tensor([-2.1848, -3.4249, -3.9864, -4.6390, -5.4872], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9352, device='cuda:0', dtype=torch.float64)
tensor([-2.1835, -3.4190, -3.9861, -4.6439, -5.4785], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9176, device='cuda:0', dtype=torch.float64)
tensor([-2.1839, -3.4150, -3.9865, -4.6447, -5.4723], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9429, device='cuda:0', dtype=torch.float64)
tensor([-2.1856, -3.4125, -3.9856, -4.6412, -5.4679], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9024, device='cuda:0', dtype=torch.float64)
tensor([-2.1889, -3.4118, -3.9834, -4.6328, -5.4644], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9214, device='cuda:0', dtype=torch.float64)
tensor([-2.1909, -3.4094, -3.9833, -4.6247, -5.4626], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8694, device='cuda:0', dtype=torch.float64)
tensor([-2.1916, -3.4065, -3.9856, -4.6179, -5.4619], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8968, device='cuda:0', dtype=torch.float64)
tensor([-2.1916, -3.4062, -3.9889, -4.6125, -5.4601], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8827, device='cuda:0', dtype=torch.float64)
tensor([-2.1908, -3.4075, -3.9887, -4.6078, -5.4564], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9781, device='cuda:0', dtype=torch.float64)
tensor([-2.1908, -3.4082, -3.9817, -4.6016, -5.4552], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9680, device='cuda:0', dtype=torch.float64)
tensor([-2.1916, -3.4107, -3.9728, -4.5949, -5.4527], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8600, device='cuda:0', dtype=torch.float64)
tensor([-2.1932, -3.4127, -3.9655, -4.5878, -5.4518], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9427, device='cuda:0', dtype=torch.float64)
tensor([-2.1945, -3.4142, -3.9600, -4.5800, -5.4486], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9314, device='cuda:0', dtype=torch.float64)
tensor([-2.1939, -3.4123, -3.9569, -4.5742, -5.4454], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9404, device='cuda:0', dtype=torch.float64)
tensor([-2.1930, -3.4100, -3.9556, -4.5708, -5.4393], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9764, device='cuda:0', dtype=torch.float64)
tensor([-2.1922, -3.4079, -3.9507, -4.5701, -5.4306], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8814, device='cuda:0', dtype=torch.float64)
tensor([-2.1923, -3.4045, -3.9471, -4.5699, -5.4245], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9203, device='cuda:0', dtype=torch.float64)
tensor([-2.1927, -3.4027, -3.9503, -4.5705, -5.4190], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9230, device='cuda:0', dtype=torch.float64)
tensor([-2.1925, -3.4026, -3.9554, -4.5727, -5.4144], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8915, device='cuda:0', dtype=torch.float64)
tensor([-2.1917, -3.3999, -3.9642, -4.5751, -5.4142], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9109, device='cuda:0', dtype=torch.float64)
tensor([-2.1879, -3.3955, -3.9715, -4.5806, -5.4130], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8664, device='cuda:0', dtype=torch.float64)
tensor([-2.1841, -3.3910, -3.9730, -4.5859, -5.4101], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9491, device='cuda:0', dtype=torch.float64)
tensor([-2.1796, -3.3882, -3.9699, -4.5916, -5.4047], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9599, device='cuda:0', dtype=torch.float64)
tensor([-2.1776, -3.3862, -3.9576, -4.5911, -5.3999], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9263, device='cuda:0', dtype=torch.float64)
tensor([-2.1783, -3.3832, -3.9445, -4.5870, -5.3972], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8857, device='cuda:0', dtype=torch.float64)
tensor([-2.1805, -3.3817, -3.9347, -4.5805, -5.3916], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9014, device='cuda:0', dtype=torch.float64)
tensor([-2.1837, -3.3821, -3.9270, -4.5736, -5.3867], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9728, device='cuda:0', dtype=torch.float64)
tensor([-2.1878, -3.3847, -3.9213, -4.5682, -5.3829], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9239, device='cuda:0', dtype=torch.float64)
tensor([-2.1922, -3.3891, -3.9187, -4.5620, -5.3789], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9401, device='cuda:0', dtype=torch.float64)
tensor([-2.1952, -3.3920, -3.9184, -4.5567, -5.3749], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9172, device='cuda:0', dtype=torch.float64)
tensor([-2.1972, -3.3950, -3.9177, -4.5536, -5.3704], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0074, device='cuda:0', dtype=torch.float64)
tensor([-2.1973, -3.3948, -3.9173, -4.5503, -5.3623], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8805, device='cuda:0', dtype=torch.float64)
tensor([-2.1957, -3.3961, -3.9189, -4.5485, -5.3557], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0493, device='cuda:0', dtype=torch.float64)
tensor([-2.1939, -3.3958, -3.9197, -4.5448, -5.3515], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9914, device='cuda:0', dtype=torch.float64)
tensor([-2.1915, -3.3951, -3.9226, -4.5407, -5.3479], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9739, device='cuda:0', dtype=torch.float64)
tensor([-2.1877, -3.3911, -3.9282, -4.5414, -5.3465], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9980, device='cuda:0', dtype=torch.float64)
tensor([-2.1831, -3.3886, -3.9341, -4.5454, -5.3443], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9952, device='cuda:0', dtype=torch.float64)
tensor([-2.1788, -3.3839, -3.9381, -4.5505, -5.3436], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0191, device='cuda:0', dtype=torch.float64)
tensor([-2.1747, -3.3826, -3.9382, -4.5545, -5.3426], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0085, device='cuda:0', dtype=torch.float64)
tensor([-2.1745, -3.3811, -3.9357, -4.5568, -5.3384], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9079, device='cuda:0', dtype=torch.float64)
tensor([-2.1760, -3.3824, -3.9289, -4.5555, -5.3337], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0150, device='cuda:0', dtype=torch.float64)
tensor([-2.1807, -3.3849, -3.9233, -4.5472, -5.3286], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9964, device='cuda:0', dtype=torch.float64)
tensor([-2.1843, -3.3862, -3.9175, -4.5371, -5.3255], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1085, device='cuda:0', dtype=torch.float64)
tensor([-2.1863, -3.3847, -3.9152, -4.5312, -5.3209], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9437, device='cuda:0', dtype=torch.float64)
tensor([-2.1872, -3.3856, -3.9135, -4.5270, -5.3150], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9817, device='cuda:0', dtype=torch.float64)
tensor([-2.1862, -3.3836, -3.9130, -4.5244, -5.3108], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1547, device='cuda:0', dtype=torch.float64)
tensor([-2.1860, -3.3810, -3.9144, -4.5212, -5.3100], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9485, device='cuda:0', dtype=torch.float64)
tensor([-2.1843, -3.3798, -3.9181, -4.5193, -5.3062], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9799, device='cuda:0', dtype=torch.float64)
tensor([-2.1824, -3.3771, -3.9177, -4.5171, -5.3034], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9934, device='cuda:0', dtype=torch.float64)
tensor([-2.1808, -3.3734, -3.9130, -4.5167, -5.2971], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0294, device='cuda:0', dtype=torch.float64)
tensor([-2.1781, -3.3688, -3.9074, -4.5217, -5.2902], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9681, device='cuda:0', dtype=torch.float64)
tensor([-2.1773, -3.3660, -3.9022, -4.5222, -5.2823], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0507, device='cuda:0', dtype=torch.float64)
tensor([-2.1773, -3.3593, -3.9001, -4.5221, -5.2763], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0203, device='cuda:0', dtype=torch.float64)
tensor([-2.1789, -3.3540, -3.8997, -4.5182, -5.2749], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9482, device='cuda:0', dtype=torch.float64)
tensor([-2.1771, -3.3478, -3.9026, -4.5166, -5.2746], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0248, device='cuda:0', dtype=torch.float64)
tensor([-2.1763, -3.3481, -3.9030, -4.5191, -5.2695], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9801, device='cuda:0', dtype=torch.float64)
tensor([-2.1767, -3.3535, -3.9046, -4.5214, -5.2641], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9278, device='cuda:0', dtype=torch.float64)
tensor([-2.1792, -3.3624, -3.9021, -4.5259, -5.2570], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9119, device='cuda:0', dtype=torch.float64)
tensor([-2.1834, -3.3703, -3.8987, -4.5257, -5.2566], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9406, device='cuda:0', dtype=torch.float64)
tensor([-2.1874, -3.3712, -3.8982, -4.5256, -5.2552], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8771, device='cuda:0', dtype=torch.float64)
tensor([-2.1886, -3.3639, -3.8983, -4.5239, -5.2559], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0060, device='cuda:0', dtype=torch.float64)
tensor([-2.1891, -3.3533, -3.8981, -4.5217, -5.2579], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0927, device='cuda:0', dtype=torch.float64)
tensor([-2.1862, -3.3438, -3.8966, -4.5194, -5.2559], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9399, device='cuda:0', dtype=torch.float64)
tensor([-2.1807, -3.3375, -3.8951, -4.5173, -5.2520], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0856, device='cuda:0', dtype=torch.float64)
tensor([-2.1761, -3.3334, -3.8944, -4.5139, -5.2457], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0263, device='cuda:0', dtype=torch.float64)
tensor([-2.1738, -3.3370, -3.8921, -4.5067, -5.2365], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1695, device='cuda:0', dtype=torch.float64)
tensor([-2.1727, -3.3443, -3.8839, -4.4926, -5.2312], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0030, device='cuda:0', dtype=torch.float64)
tensor([-2.1711, -3.3545, -3.8764, -4.4873, -5.2244], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0359, device='cuda:0', dtype=torch.float64)
tensor([-2.1724, -3.3612, -3.8696, -4.4862, -5.2199], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0442, device='cuda:0', dtype=torch.float64)
tensor([-2.1733, -3.3611, -3.8668, -4.4870, -5.2131], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9521, device='cuda:0', dtype=torch.float64)
tensor([-2.1762, -3.3601, -3.8677, -4.4892, -5.2083], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1283, device='cuda:0', dtype=torch.float64)
tensor([-2.1812, -3.3571, -3.8687, -4.4750, -5.2070], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0090, device='cuda:0', dtype=torch.float64)
tensor([-2.1856, -3.3494, -3.8677, -4.4584, -5.2037], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0232, device='cuda:0', dtype=torch.float64)
tensor([-2.1887, -3.3442, -3.8633, -4.4445, -5.2002], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0035, device='cuda:0', dtype=torch.float64)
tensor([-2.1927, -3.3437, -3.8564, -4.4349, -5.1965], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9774, device='cuda:0', dtype=torch.float64)
tensor([-2.1930, -3.3440, -3.8550, -4.4346, -5.1883], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9525, device='cuda:0', dtype=torch.float64)
tensor([-2.1903, -3.3473, -3.8595, -4.4443, -5.1845], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0920, device='cuda:0', dtype=torch.float64)
tensor([-2.1867, -3.3501, -3.8659, -4.4585, -5.1831], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9721, device='cuda:0', dtype=torch.float64)
tensor([-2.1823, -3.3485, -3.8743, -4.4800, -5.1845], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9483, device='cuda:0', dtype=torch.float64)
tensor([-2.1759, -3.3415, -3.8808, -4.5020, -5.1858], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0669, device='cuda:0', dtype=torch.float64)
tensor([-2.1708, -3.3399, -3.8818, -4.5182, -5.1911], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9379, device='cuda:0', dtype=torch.float64)
tensor([-2.1697, -3.3421, -3.8786, -4.5175, -5.1968], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1167, device='cuda:0', dtype=torch.float64)
tensor([-2.1716, -3.3454, -3.8722, -4.4994, -5.1988], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0576, device='cuda:0', dtype=torch.float64)
tensor([-2.1749, -3.3479, -3.8652, -4.4792, -5.1999], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1024, device='cuda:0', dtype=torch.float64)
tensor([-2.1758, -3.3488, -3.8571, -4.4658, -5.1974], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9458, device='cuda:0', dtype=torch.float64)
tensor([-2.1797, -3.3499, -3.8469, -4.4555, -5.1917], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9336, device='cuda:0', dtype=torch.float64)
tensor([-2.1836, -3.3509, -3.8416, -4.4510, -5.1814], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0113, device='cuda:0', dtype=torch.float64)
tensor([-2.1865, -3.3472, -3.8419, -4.4501, -5.1742], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9871, device='cuda:0', dtype=torch.float64)
tensor([-2.1903, -3.3423, -3.8476, -4.4517, -5.1712], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0945, device='cuda:0', dtype=torch.float64)
tensor([-2.1927, -3.3381, -3.8581, -4.4554, -5.1693], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0332, device='cuda:0', dtype=torch.float64)
tensor([-2.1940, -3.3397, -3.8640, -4.4606, -5.1682], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0320, device='cuda:0', dtype=torch.float64)
tensor([-2.1938, -3.3428, -3.8562, -4.4635, -5.1691], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0771, device='cuda:0', dtype=torch.float64)
tensor([-2.1921, -3.3426, -3.8463, -4.4650, -5.1699], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0758, device='cuda:0', dtype=torch.float64)
tensor([-2.1895, -3.3442, -3.8431, -4.4638, -5.1681], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9940, device='cuda:0', dtype=torch.float64)
tensor([-2.1865, -3.3401, -3.8493, -4.4576, -5.1648], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9610, device='cuda:0', dtype=torch.float64)
tensor([-2.1817, -3.3364, -3.8597, -4.4521, -5.1605], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0067, device='cuda:0', dtype=torch.float64)
tensor([-2.1748, -3.3303, -3.8706, -4.4488, -5.1585], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1022, device='cuda:0', dtype=torch.float64)
tensor([-2.1693, -3.3210, -3.8759, -4.4510, -5.1523], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0368, device='cuda:0', dtype=torch.float64)
tensor([-2.1673, -3.3111, -3.8763, -4.4543, -5.1487], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1113, device='cuda:0', dtype=torch.float64)
tensor([-2.1682, -3.3001, -3.8695, -4.4564, -5.1479], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1106, device='cuda:0', dtype=torch.float64)
tensor([-2.1686, -3.2904, -3.8670, -4.4571, -5.1483], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0371, device='cuda:0', dtype=torch.float64)
tensor([-2.1703, -3.2845, -3.8622, -4.4609, -5.1457], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9951, device='cuda:0', dtype=torch.float64)
tensor([-2.1732, -3.2865, -3.8561, -4.4623, -5.1452], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0806, device='cuda:0', dtype=torch.float64)
tensor([-2.1763, -3.2958, -3.8540, -4.4621, -5.1433], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9618, device='cuda:0', dtype=torch.float64)
tensor([-2.1751, -3.3053, -3.8549, -4.4562, -5.1433], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1210, device='cuda:0', dtype=torch.float64)
tensor([-2.1719, -3.3102, -3.8576, -4.4450, -5.1435], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0508, device='cuda:0', dtype=torch.float64)
tensor([-2.1666, -3.3152, -3.8660, -4.4388, -5.1398], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0729, device='cuda:0', dtype=torch.float64)
tensor([-2.1629, -3.3233, -3.8709, -4.4383, -5.1371], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0240, device='cuda:0', dtype=torch.float64)
tensor([-2.1647, -3.3278, -3.8746, -4.4355, -5.1304], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1585, device='cuda:0', dtype=torch.float64)
tensor([-2.1690, -3.3251, -3.8731, -4.4391, -5.1136], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9405, device='cuda:0', dtype=torch.float64)
tensor([-2.1772, -3.3171, -3.8635, -4.4379, -5.0952], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2987, device='cuda:0', dtype=torch.float64)
tensor([-2.1866, -3.3060, -3.8495, -4.4275, -5.0847], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0906, device='cuda:0', dtype=torch.float64)
tensor([-2.1971, -3.3031, -3.8334, -4.4195, -5.0842], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0545, device='cuda:0', dtype=torch.float64)
tensor([-2.2010, -3.3073, -3.8217, -4.4180, -5.0852], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1280, device='cuda:0', dtype=torch.float64)
tensor([-2.2019, -3.3162, -3.8073, -4.4244, -5.0856], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1486, device='cuda:0', dtype=torch.float64)
tensor([-2.1952, -3.3247, -3.7984, -4.4362, -5.0840], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1507, device='cuda:0', dtype=torch.float64)
tensor([-2.1854, -3.3272, -3.7975, -4.4503, -5.0778], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5635, device='cuda:0', dtype=torch.float64)
tensor([-2.1819, -3.3242, -3.7967, -4.4506, -5.0727], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3601, device='cuda:0', dtype=torch.float64)
tensor([-2.1824, -3.3216, -3.7997, -4.4418, -5.0760], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0298, device='cuda:0', dtype=torch.float64)
tensor([-2.1867, -3.3208, -3.8037, -4.4306, -5.0776], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4181, device='cuda:0', dtype=torch.float64)
tensor([-2.1881, -3.3186, -3.8161, -4.4293, -5.0676], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3026, device='cuda:0', dtype=torch.float64)
tensor([-2.1905, -3.3182, -3.8316, -4.4332, -5.0540], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1321, device='cuda:0', dtype=torch.float64)
tensor([-2.1943, -3.3117, -3.8441, -4.4366, -5.0466], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3836, device='cuda:0', dtype=torch.float64)
tensor([-2.1982, -3.3053, -3.8451, -4.4267, -5.0425], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2176, device='cuda:0', dtype=torch.float64)
tensor([-2.2028, -3.2995, -3.8362, -4.4174, -5.0384], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3544, device='cuda:0', dtype=torch.float64)
tensor([-2.2063, -3.3014, -3.8103, -4.4168, -5.0425], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3265, device='cuda:0', dtype=torch.float64)
tensor([-2.2057, -3.3079, -3.7898, -4.4241, -5.0432], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9859, device='cuda:0', dtype=torch.float64)
tensor([-2.2020, -3.3175, -3.7828, -4.4360, -5.0476], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0854, device='cuda:0', dtype=torch.float64)
tensor([-2.1953, -3.3207, -3.7882, -4.4426, -5.0461], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1573, device='cuda:0', dtype=torch.float64)
tensor([-2.1896, -3.3200, -3.8034, -4.4419, -5.0399], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0109, device='cuda:0', dtype=torch.float64)
tensor([-2.1877, -3.3174, -3.8128, -4.4288, -5.0348], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3276, device='cuda:0', dtype=torch.float64)
tensor([-2.1822, -3.3071, -3.8237, -4.4189, -5.0259], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1024, device='cuda:0', dtype=torch.float64)
tensor([-2.1743, -3.2894, -3.8287, -4.4173, -5.0139], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0492, device='cuda:0', dtype=torch.float64)
tensor([-2.1720, -3.2789, -3.8203, -4.4113, -5.0035], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0338, device='cuda:0', dtype=torch.float64)
tensor([-2.1724, -3.2745, -3.8094, -4.4073, -5.0003], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1368, device='cuda:0', dtype=torch.float64)
tensor([-2.1735, -3.2757, -3.8023, -4.4038, -4.9977], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1279, device='cuda:0', dtype=torch.float64)
tensor([-2.1799, -3.2749, -3.7973, -4.4019, -4.9994], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1531, device='cuda:0', dtype=torch.float64)
tensor([-2.1869, -3.2711, -3.7820, -4.3990, -4.9959], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1465, device='cuda:0', dtype=torch.float64)
tensor([-2.1924, -3.2704, -3.7785, -4.4005, -4.9909], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3268, device='cuda:0', dtype=torch.float64)
tensor([-2.1931, -3.2750, -3.7812, -4.4155, -4.9826], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0496, device='cuda:0', dtype=torch.float64)
tensor([-2.1936, -3.2806, -3.7913, -4.4344, -4.9746], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1139, device='cuda:0', dtype=torch.float64)
tensor([-2.1922, -3.2910, -3.7988, -4.4413, -4.9734], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2334, device='cuda:0', dtype=torch.float64)
tensor([-2.1905, -3.2971, -3.8145, -4.4420, -4.9756], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0251, device='cuda:0', dtype=torch.float64)
tensor([-2.1908, -3.2989, -3.8272, -4.4358, -4.9778], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0532, device='cuda:0', dtype=torch.float64)
tensor([-2.1903, -3.2984, -3.8223, -4.4223, -4.9736], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1015, device='cuda:0', dtype=torch.float64)
tensor([-2.1912, -3.2964, -3.8084, -4.4099, -4.9658], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1014, device='cuda:0', dtype=torch.float64)
tensor([-2.1871, -3.2927, -3.7955, -4.3998, -4.9580], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0312, device='cuda:0', dtype=torch.float64)
tensor([-2.1850, -3.2859, -3.7823, -4.3950, -4.9593], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1223, device='cuda:0', dtype=torch.float64)
tensor([-2.1823, -3.2871, -3.7726, -4.3886, -4.9709], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2286, device='cuda:0', dtype=torch.float64)
tensor([-2.1783, -3.2849, -3.7704, -4.3886, -4.9854], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0783, device='cuda:0', dtype=torch.float64)
tensor([-2.1753, -3.2796, -3.7714, -4.3871, -4.9966], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1808, device='cuda:0', dtype=torch.float64)
tensor([-2.1775, -3.2803, -3.7699, -4.3889, -4.9966], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2858, device='cuda:0', dtype=torch.float64)
tensor([-2.1788, -3.2822, -3.7743, -4.3980, -4.9827], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2428, device='cuda:0', dtype=torch.float64)
tensor([-2.1810, -3.2870, -3.7835, -4.3977, -4.9634], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3506, device='cuda:0', dtype=torch.float64)
tensor([-2.1860, -3.2951, -3.7907, -4.3844, -4.9455], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1218, device='cuda:0', dtype=torch.float64)
tensor([-2.1913, -3.3006, -3.7973, -4.3604, -4.9377], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2476, device='cuda:0', dtype=torch.float64)
tensor([-2.1901, -3.2991, -3.7981, -4.3404, -4.9358], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2865, device='cuda:0', dtype=torch.float64)
tensor([-2.1830, -3.2918, -3.8013, -4.3301, -4.9377], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2106, device='cuda:0', dtype=torch.float64)
tensor([-2.1719, -3.2826, -3.8078, -4.3328, -4.9474], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1329, device='cuda:0', dtype=torch.float64)
tensor([-2.1609, -3.2774, -3.8150, -4.3448, -4.9628], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3419, device='cuda:0', dtype=torch.float64)
tensor([-2.1527, -3.2744, -3.8136, -4.3477, -4.9841], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3239, device='cuda:0', dtype=torch.float64)
tensor([-2.1520, -3.2785, -3.7951, -4.3517, -4.9917], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1862, device='cuda:0', dtype=torch.float64)
tensor([-2.1576, -3.2861, -3.7777, -4.3608, -4.9855], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2426, device='cuda:0', dtype=torch.float64)
tensor([-2.1646, -3.2954, -3.7590, -4.3679, -4.9725], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1397, device='cuda:0', dtype=torch.float64)
tensor([-2.1707, -3.3009, -3.7522, -4.3679, -4.9556], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4469, device='cuda:0', dtype=torch.float64)
tensor([-2.1715, -3.2947, -3.7628, -4.3598, -4.9460], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2511, device='cuda:0', dtype=torch.float64)
tensor([-2.1710, -3.2898, -3.7869, -4.3592, -4.9373], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4221, device='cuda:0', dtype=torch.float64)
tensor([-2.1657, -3.2837, -3.8123, -4.3723, -4.9349], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9918, device='cuda:0', dtype=torch.float64)
tensor([-2.1645, -3.2787, -3.8183, -4.3810, -4.9373], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1123, device='cuda:0', dtype=torch.float64)
tensor([-2.1683, -3.2782, -3.8054, -4.3759, -4.9434], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4451, device='cuda:0', dtype=torch.float64)
tensor([-2.1808, -3.2861, -3.7747, -4.3574, -4.9456], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3385, device='cuda:0', dtype=torch.float64)
tensor([-2.1926, -3.2916, -3.7570, -4.3458, -4.9350], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0677, device='cuda:0', dtype=torch.float64)
tensor([-2.2011, -3.2947, -3.7525, -4.3508, -4.9221], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2669, device='cuda:0', dtype=torch.float64)
tensor([-2.2076, -3.2909, -3.7675, -4.3672, -4.9058], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4470, device='cuda:0', dtype=torch.float64)
tensor([-2.2092, -3.2905, -3.7895, -4.3958, -4.8864], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1514, device='cuda:0', dtype=torch.float64)
tensor([-2.2074, -3.2915, -3.8051, -4.4229, -4.8689], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2521, device='cuda:0', dtype=torch.float64)
tensor([-2.2035, -3.2914, -3.8135, -4.4316, -4.8682], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2045, device='cuda:0', dtype=torch.float64)
tensor([-2.2018, -3.2911, -3.8069, -4.4086, -4.8798], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0175, device='cuda:0', dtype=torch.float64)
tensor([-2.2012, -3.2932, -3.7911, -4.3778, -4.8882], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2379, device='cuda:0', dtype=torch.float64)
tensor([-2.1915, -3.2915, -3.7796, -4.3603, -4.8851], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2336, device='cuda:0', dtype=torch.float64)
tensor([-2.1845, -3.2905, -3.7753, -4.3509, -4.8706], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3782, device='cuda:0', dtype=torch.float64)
tensor([-2.1812, -3.2959, -3.7726, -4.3440, -4.8582], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2019, device='cuda:0', dtype=torch.float64)
tensor([-2.1839, -3.3012, -3.7691, -4.3390, -4.8519], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0917, device='cuda:0', dtype=torch.float64)
tensor([-2.1884, -3.3021, -3.7654, -4.3306, -4.8530], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1402, device='cuda:0', dtype=torch.float64)
tensor([-2.1958, -3.2969, -3.7562, -4.3108, -4.8690], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1236, device='cuda:0', dtype=torch.float64)
tensor([-2.1990, -3.2894, -3.7484, -4.2990, -4.8914], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2371, device='cuda:0', dtype=torch.float64)
tensor([-2.2010, -3.2835, -3.7415, -4.2934, -4.9064], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0308, device='cuda:0', dtype=torch.float64)
tensor([-2.2053, -3.2856, -3.7378, -4.2978, -4.9194], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9334, device='cuda:0', dtype=torch.float64)
tensor([-2.2046, -3.2888, -3.7462, -4.3084, -4.9245], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2806, device='cuda:0', dtype=torch.float64)
tensor([-2.2012, -3.3001, -3.7606, -4.3204, -4.9145], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0849, device='cuda:0', dtype=torch.float64)
tensor([-2.1955, -3.3115, -3.7766, -4.3368, -4.8984], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1919, device='cuda:0', dtype=torch.float64)
tensor([-2.1889, -3.3170, -3.7881, -4.3569, -4.8859], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1275, device='cuda:0', dtype=torch.float64)
tensor([-2.1800, -3.3171, -3.7942, -4.3713, -4.8746], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3385, device='cuda:0', dtype=torch.float64)
tensor([-2.1786, -3.3174, -3.8000, -4.3626, -4.8712], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3435, device='cuda:0', dtype=torch.float64)
tensor([-2.1817, -3.3090, -3.7852, -4.3343, -4.8769], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4534, device='cuda:0', dtype=torch.float64)
tensor([-2.1827, -3.2962, -3.7731, -4.3143, -4.8810], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3493, device='cuda:0', dtype=torch.float64)
tensor([-2.1799, -3.2807, -3.7542, -4.3134, -4.8790], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1396, device='cuda:0', dtype=torch.float64)
tensor([-2.1789, -3.2778, -3.7371, -4.3225, -4.8742], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2957, device='cuda:0', dtype=torch.float64)
tensor([-2.1782, -3.2783, -3.7290, -4.3343, -4.8589], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1516, device='cuda:0', dtype=torch.float64)
tensor([-2.1866, -3.2863, -3.7242, -4.3378, -4.8547], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7265, device='cuda:0', dtype=torch.float64)
tensor([-2.2058, -3.2994, -3.7304, -4.3355, -4.8639], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2260, device='cuda:0', dtype=torch.float64)
tensor([-2.2226, -3.3058, -3.7322, -4.3393, -4.8684], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4360, device='cuda:0', dtype=torch.float64)
tensor([-2.2378, -3.3083, -3.7175, -4.3351, -4.8666], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1985, device='cuda:0', dtype=torch.float64)
tensor([-2.2445, -3.3002, -3.7082, -4.3495, -4.8630], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4854, device='cuda:0', dtype=torch.float64)
tensor([-2.2420, -3.2886, -3.6998, -4.3702, -4.8505], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3833, device='cuda:0', dtype=torch.float64)
tensor([-2.2381, -3.2787, -3.6900, -4.3696, -4.8346], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4210, device='cuda:0', dtype=torch.float64)
tensor([-2.2347, -3.2766, -3.6797, -4.3495, -4.8317], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2043, device='cuda:0', dtype=torch.float64)
tensor([-2.2287, -3.2790, -3.6789, -4.3284, -4.8360], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5611, device='cuda:0', dtype=torch.float64)
tensor([-2.2190, -3.2830, -3.6837, -4.3168, -4.8523], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4451, device='cuda:0', dtype=torch.float64)
tensor([-2.2122, -3.2883, -3.6872, -4.3013, -4.8692], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4244, device='cuda:0', dtype=torch.float64)
tensor([-2.2018, -3.2872, -3.6993, -4.2968, -4.8626], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5921, device='cuda:0', dtype=torch.float64)
tensor([-2.1882, -3.2689, -3.7277, -4.2880, -4.8441], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5366, device='cuda:0', dtype=torch.float64)
tensor([-2.1852, -3.2559, -3.7495, -4.2656, -4.8280], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2112, device='cuda:0', dtype=torch.float64)
tensor([-2.1905, -3.2544, -3.7711, -4.2564, -4.8130], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2182, device='cuda:0', dtype=torch.float64)
tensor([-2.2013, -3.2616, -3.7843, -4.2620, -4.7938], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2880, device='cuda:0', dtype=torch.float64)
tensor([-2.2130, -3.2761, -3.7903, -4.2800, -4.7740], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5203, device='cuda:0', dtype=torch.float64)
tensor([-2.2166, -3.2874, -3.7915, -4.3041, -4.7653], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0730, device='cuda:0', dtype=torch.float64)
tensor([-2.2203, -3.2874, -3.7814, -4.3285, -4.7664], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3644, device='cuda:0', dtype=torch.float64)
tensor([-2.2274, -3.2782, -3.7696, -4.3229, -4.7868], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2357, device='cuda:0', dtype=torch.float64)
tensor([-2.2207, -3.2729, -3.7632, -4.3158, -4.8080], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4546, device='cuda:0', dtype=torch.float64)
tensor([-2.2138, -3.2758, -3.7532, -4.2953, -4.8249], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2307, device='cuda:0', dtype=torch.float64)
tensor([-2.2066, -3.2861, -3.7543, -4.2891, -4.8373], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1181, device='cuda:0', dtype=torch.float64)
tensor([-2.1994, -3.2979, -3.7674, -4.2864, -4.8334], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2677, device='cuda:0', dtype=torch.float64)
tensor([-2.1986, -3.3145, -3.7856, -4.2832, -4.8231], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3027, device='cuda:0', dtype=torch.float64)
tensor([-2.1989, -3.3204, -3.8027, -4.2779, -4.8086], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4232, device='cuda:0', dtype=torch.float64)
tensor([-2.2055, -3.3233, -3.7869, -4.2728, -4.7960], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1808, device='cuda:0', dtype=torch.float64)
tensor([-2.2100, -3.3084, -3.7594, -4.2777, -4.7888], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2390, device='cuda:0', dtype=torch.float64)
tensor([-2.2121, -3.2926, -3.7293, -4.2774, -4.7859], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4069, device='cuda:0', dtype=torch.float64)
tensor([-2.2140, -3.2788, -3.7089, -4.2647, -4.7787], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4210, device='cuda:0', dtype=torch.float64)
tensor([-2.2211, -3.2650, -3.7050, -4.2516, -4.7851], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4447, device='cuda:0', dtype=torch.float64)
tensor([-2.2267, -3.2616, -3.7130, -4.2472, -4.7981], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4799, device='cuda:0', dtype=torch.float64)
tensor([-2.2286, -3.2564, -3.7283, -4.2510, -4.8042], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2759, device='cuda:0', dtype=torch.float64)
tensor([-2.2276, -3.2470, -3.7437, -4.2628, -4.7911], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2342, device='cuda:0', dtype=torch.float64)
tensor([-2.2255, -3.2533, -3.7623, -4.2820, -4.7699], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2801, device='cuda:0', dtype=torch.float64)
tensor([-2.2202, -3.2631, -3.7765, -4.3031, -4.7490], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4883, device='cuda:0', dtype=torch.float64)
tensor([-2.2213, -3.2825, -3.7767, -4.3042, -4.7498], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4738, device='cuda:0', dtype=torch.float64)
tensor([-2.2305, -3.3068, -3.7606, -4.3056, -4.7559], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1757, device='cuda:0', dtype=torch.float64)
tensor([-2.2314, -3.3240, -3.7418, -4.3120, -4.7587], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3361, device='cuda:0', dtype=torch.float64)
tensor([-2.2232, -3.3214, -3.7242, -4.3253, -4.7575], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3533, device='cuda:0', dtype=torch.float64)
tensor([-2.2156, -3.3143, -3.7153, -4.3304, -4.7492], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0721, device='cuda:0', dtype=torch.float64)
tensor([-2.2129, -3.3017, -3.7220, -4.3237, -4.7458], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1071, device='cuda:0', dtype=torch.float64)
tensor([-2.2053, -3.2848, -3.7384, -4.3070, -4.7452], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2522, device='cuda:0', dtype=torch.float64)
tensor([-2.1983, -3.2677, -3.7615, -4.2959, -4.7488], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4499, device='cuda:0', dtype=torch.float64)
tensor([-2.2001, -3.2627, -3.7786, -4.2933, -4.7508], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3671, device='cuda:0', dtype=torch.float64)
tensor([-2.1986, -3.2576, -3.7943, -4.3096, -4.7539], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4165, device='cuda:0', dtype=torch.float64)
tensor([-2.2061, -3.2640, -3.8026, -4.3240, -4.7557], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4003, device='cuda:0', dtype=torch.float64)
tensor([-2.2182, -3.2711, -3.7967, -4.3307, -4.7589], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0472, device='cuda:0', dtype=torch.float64)
tensor([-2.2215, -3.2722, -3.7902, -4.3319, -4.7501], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0840, device='cuda:0', dtype=torch.float64)
tensor([-2.2267, -3.2727, -3.7783, -4.3109, -4.7498], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3097, device='cuda:0', dtype=torch.float64)
tensor([-2.2303, -3.2731, -3.7693, -4.2802, -4.7577], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2150, device='cuda:0', dtype=torch.float64)
tensor([-2.2344, -3.2785, -3.7624, -4.2554, -4.7680], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2141, device='cuda:0', dtype=torch.float64)
tensor([-2.2368, -3.2986, -3.7508, -4.2378, -4.7862], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0453, device='cuda:0', dtype=torch.float64)
tensor([-2.2376, -3.3164, -3.7424, -4.2406, -4.8040], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5417, device='cuda:0', dtype=torch.float64)
tensor([-2.2412, -3.3287, -3.7474, -4.2436, -4.8129], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2318, device='cuda:0', dtype=torch.float64)
tensor([-2.2432, -3.3388, -3.7667, -4.2490, -4.8075], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4252, device='cuda:0', dtype=torch.float64)
tensor([-2.2474, -3.3469, -3.7847, -4.2570, -4.7866], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2817, device='cuda:0', dtype=torch.float64)
tensor([-2.2445, -3.3482, -3.7609, -4.2555, -4.7502], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0968, device='cuda:0', dtype=torch.float64)
tensor([-2.2405, -3.3362, -3.7571, -4.2537, -4.7180], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3088, device='cuda:0', dtype=torch.float64)
tensor([-2.2392, -3.3119, -3.7605, -4.2523, -4.7035], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2287, device='cuda:0', dtype=torch.float64)
tensor([-2.2347, -3.2925, -3.7741, -4.2468, -4.7010], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1633, device='cuda:0', dtype=torch.float64)
tensor([-2.2309, -3.2773, -3.7829, -4.2353, -4.7090], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4701, device='cuda:0', dtype=torch.float64)
tensor([-2.2143, -3.2604, -3.8009, -4.2401, -4.7183], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5043, device='cuda:0', dtype=torch.float64)
tensor([-2.1927, -3.2427, -3.8256, -4.2638, -4.7255], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4376, device='cuda:0', dtype=torch.float64)
tensor([-2.1782, -3.2346, -3.8404, -4.2994, -4.7306], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2856, device='cuda:0', dtype=torch.float64)
tensor([-2.1672, -3.2461, -3.8345, -4.3414, -4.7284], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2335, device='cuda:0', dtype=torch.float64)
tensor([-2.1701, -3.2698, -3.8119, -4.3682, -4.7225], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6033, device='cuda:0', dtype=torch.float64)
tensor([-2.1855, -3.2905, -3.7880, -4.3540, -4.7234], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3245, device='cuda:0', dtype=torch.float64)
tensor([-2.2087, -3.3089, -3.7483, -4.3143, -4.7328], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2798, device='cuda:0', dtype=torch.float64)
tensor([-2.2220, -3.3260, -3.7271, -4.2736, -4.7401], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2170, device='cuda:0', dtype=torch.float64)
tensor([-2.2321, -3.3308, -3.7115, -4.2279, -4.7541], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4339, device='cuda:0', dtype=torch.float64)
tensor([-2.2408, -3.3387, -3.7007, -4.2044, -4.7630], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5050, device='cuda:0', dtype=torch.float64)
tensor([-2.2517, -3.3475, -3.6896, -4.1986, -4.7689], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3336, device='cuda:0', dtype=torch.float64)
tensor([-2.2529, -3.3498, -3.6916, -4.1982, -4.7697], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5266, device='cuda:0', dtype=torch.float64)
tensor([-2.2534, -3.3478, -3.7016, -4.1903, -4.7631], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3499, device='cuda:0', dtype=torch.float64)
tensor([-2.2499, -3.3408, -3.7207, -4.1913, -4.7424], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2248, device='cuda:0', dtype=torch.float64)
tensor([-2.2381, -3.3352, -3.7344, -4.2009, -4.7232], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1230, device='cuda:0', dtype=torch.float64)
tensor([-2.2240, -3.3302, -3.7407, -4.2169, -4.7103], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1604, device='cuda:0', dtype=torch.float64)
tensor([-2.2085, -3.3167, -3.7404, -4.2449, -4.7066], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1277, device='cuda:0', dtype=torch.float64)
tensor([-2.2024, -3.3131, -3.7274, -4.2724, -4.7049], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2134, device='cuda:0', dtype=torch.float64)
tensor([-2.2042, -3.3197, -3.7037, -4.2815, -4.7010], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3494, device='cuda:0', dtype=torch.float64)
tensor([-2.2083, -3.3302, -3.6971, -4.2939, -4.7045], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4077, device='cuda:0', dtype=torch.float64)
tensor([-2.2170, -3.3442, -3.6989, -4.3010, -4.7096], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5701, device='cuda:0', dtype=torch.float64)
tensor([-2.2226, -3.3526, -3.7213, -4.3026, -4.7053], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3388, device='cuda:0', dtype=torch.float64)
tensor([-2.2307, -3.3497, -3.7537, -4.2879, -4.6999], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0858, device='cuda:0', dtype=torch.float64)
tensor([-2.2439, -3.3412, -3.7822, -4.2633, -4.7037], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6314, device='cuda:0', dtype=torch.float64)
tensor([-2.2584, -3.3284, -3.7987, -4.2344, -4.7142], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2526, device='cuda:0', dtype=torch.float64)
tensor([-2.2616, -3.3074, -3.7957, -4.2056, -4.7318], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4595, device='cuda:0', dtype=torch.float64)
tensor([-2.2652, -3.2939, -3.7819, -4.1889, -4.7574], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6459, device='cuda:0', dtype=torch.float64)
tensor([-2.2664, -3.2993, -3.7831, -4.1859, -4.7626], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3633, device='cuda:0', dtype=torch.float64)
tensor([-2.2648, -3.3158, -3.7789, -4.1978, -4.7557], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4491, device='cuda:0', dtype=torch.float64)
tensor([-2.2599, -3.3321, -3.7686, -4.2208, -4.7476], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1811, device='cuda:0', dtype=torch.float64)
tensor([-2.2501, -3.3393, -3.7646, -4.2474, -4.7417], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2818, device='cuda:0', dtype=torch.float64)
tensor([-2.2435, -3.3402, -3.7745, -4.2656, -4.7273], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4838, device='cuda:0', dtype=torch.float64)
tensor([-2.2428, -3.3341, -3.7793, -4.2750, -4.7212], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4413, device='cuda:0', dtype=torch.float64)
tensor([-2.2485, -3.3136, -3.7899, -4.2715, -4.7106], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1648, device='cuda:0', dtype=torch.float64)
tensor([-2.2627, -3.2922, -3.7935, -4.2471, -4.7013], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2477, device='cuda:0', dtype=torch.float64)
tensor([-2.2822, -3.2829, -3.8032, -4.2167, -4.7004], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2855, device='cuda:0', dtype=torch.float64)
tensor([-2.2987, -3.2768, -3.7998, -4.2028, -4.6862], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6727, device='cuda:0', dtype=torch.float64)
tensor([-2.3174, -3.2834, -3.7863, -4.1990, -4.6721], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4605, device='cuda:0', dtype=torch.float64)
tensor([-2.3296, -3.2832, -3.7766, -4.2012, -4.6677], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1663, device='cuda:0', dtype=torch.float64)
tensor([-2.3272, -3.2823, -3.7643, -4.2262, -4.6605], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5723, device='cuda:0', dtype=torch.float64)
tensor([-2.3208, -3.2858, -3.7467, -4.2643, -4.6675], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3500, device='cuda:0', dtype=torch.float64)
tensor([-2.3035, -3.2967, -3.7408, -4.2989, -4.6826], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4760, device='cuda:0', dtype=torch.float64)
tensor([-2.2842, -3.3106, -3.7384, -4.3322, -4.7023], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3053, device='cuda:0', dtype=torch.float64)
tensor([-2.2689, -3.3386, -3.7414, -4.3777, -4.7295], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5924, device='cuda:0', dtype=torch.float64)
tensor([-2.2609, -3.3612, -3.7442, -4.3975, -4.7636], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4846, device='cuda:0', dtype=torch.float64)
tensor([-2.2568, -3.3809, -3.7601, -4.4104, -4.7742], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4102, device='cuda:0', dtype=torch.float64)
tensor([-2.2506, -3.3766, -3.7856, -4.4004, -4.7585], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3177, device='cuda:0', dtype=torch.float64)
tensor([-2.2453, -3.3602, -3.7802, -4.3710, -4.7210], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2050, device='cuda:0', dtype=torch.float64)
tensor([-2.2488, -3.3355, -3.7547, -4.3382, -4.6707], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2586, device='cuda:0', dtype=torch.float64)
tensor([-2.2521, -3.3178, -3.7340, -4.3118, -4.6280], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2952, device='cuda:0', dtype=torch.float64)
tensor([-2.2645, -3.3035, -3.7201, -4.2837, -4.5982], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2223, device='cuda:0', dtype=torch.float64)
tensor([-2.2810, -3.2903, -3.7151, -4.2484, -4.5823], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5490, device='cuda:0', dtype=torch.float64)
tensor([-2.3015, -3.2847, -3.7070, -4.2267, -4.5841], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3541, device='cuda:0', dtype=torch.float64)
tensor([-2.3234, -3.2931, -3.7120, -4.2082, -4.5977], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2871, device='cuda:0', dtype=torch.float64)
tensor([-2.3379, -3.3019, -3.7202, -4.2037, -4.6112], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4549, device='cuda:0', dtype=torch.float64)
tensor([-2.3435, -3.3081, -3.7223, -4.2065, -4.6126], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8240, device='cuda:0', dtype=torch.float64)
tensor([-2.3315, -3.3100, -3.7228, -4.2182, -4.5998], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4916, device='cuda:0', dtype=torch.float64)
tensor([-2.3181, -3.3087, -3.7201, -4.2450, -4.6037], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9801, device='cuda:0', dtype=torch.float64)
tensor([-2.3076, -3.3191, -3.7122, -4.2696, -4.6010], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6021, device='cuda:0', dtype=torch.float64)
tensor([-2.2896, -3.3276, -3.7107, -4.2789, -4.6003], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1014, device='cuda:0', dtype=torch.float64)
tensor([-2.2748, -3.3362, -3.7110, -4.2697, -4.6031], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1988, device='cuda:0', dtype=torch.float64)
tensor([-2.2637, -3.3341, -3.7123, -4.2611, -4.6184], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2808, device='cuda:0', dtype=torch.float64)
tensor([-2.2622, -3.3266, -3.7048, -4.2496, -4.6339], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3085, device='cuda:0', dtype=torch.float64)
tensor([-2.2657, -3.3246, -3.6981, -4.2554, -4.6417], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4797, device='cuda:0', dtype=torch.float64)
tensor([-2.2701, -3.3255, -3.6760, -4.2543, -4.6527], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6114, device='cuda:0', dtype=torch.float64)
tensor([-2.2726, -3.3311, -3.6741, -4.2559, -4.6790], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3106, device='cuda:0', dtype=torch.float64)
tensor([-2.2741, -3.3476, -3.6907, -4.2583, -4.7007], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7112, device='cuda:0', dtype=torch.float64)
tensor([-2.2717, -3.3548, -3.7138, -4.2629, -4.7180], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7738, device='cuda:0', dtype=torch.float64)
tensor([-2.2694, -3.3513, -3.7611, -4.2852, -4.7272], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3524, device='cuda:0', dtype=torch.float64)
tensor([-2.2725, -3.3456, -3.8063, -4.3057, -4.7177], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2406, device='cuda:0', dtype=torch.float64)
tensor([-2.2766, -3.3482, -3.8292, -4.3329, -4.7015], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4617, device='cuda:0', dtype=torch.float64)
tensor([-2.2891, -3.3520, -3.8230, -4.3366, -4.6756], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4701, device='cuda:0', dtype=torch.float64)
tensor([-2.3032, -3.3632, -3.7987, -4.3247, -4.6538], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3584, device='cuda:0', dtype=torch.float64)
tensor([-2.3211, -3.3698, -3.7613, -4.3107, -4.6393], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1702, device='cuda:0', dtype=torch.float64)
tensor([-2.3359, -3.3641, -3.7287, -4.2942, -4.6465], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4422, device='cuda:0', dtype=torch.float64)
tensor([-2.3393, -3.3391, -3.7120, -4.2797, -4.6465], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5030, device='cuda:0', dtype=torch.float64)
tensor([-2.3324, -3.3244, -3.7167, -4.2902, -4.6511], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3671, device='cuda:0', dtype=torch.float64)
tensor([-2.3210, -3.3155, -3.7410, -4.2974, -4.6558], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3113, device='cuda:0', dtype=torch.float64)
tensor([-2.3115, -3.3129, -3.7539, -4.2916, -4.6461], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2532, device='cuda:0', dtype=torch.float64)
tensor([-2.3085, -3.3135, -3.7610, -4.2809, -4.6419], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1774, device='cuda:0', dtype=torch.float64)
tensor([-2.3182, -3.3238, -3.7709, -4.2710, -4.6321], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3788, device='cuda:0', dtype=torch.float64)
tensor([-2.3273, -3.3511, -3.7962, -4.2595, -4.6059], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4160, device='cuda:0', dtype=torch.float64)
tensor([-2.3378, -3.3672, -3.7940, -4.2314, -4.5968], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7196, device='cuda:0', dtype=torch.float64)
tensor([-2.3508, -3.3813, -3.7745, -4.2183, -4.6002], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2896, device='cuda:0', dtype=torch.float64)
tensor([-2.3600, -3.3826, -3.7549, -4.2255, -4.6154], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4610, device='cuda:0', dtype=torch.float64)
tensor([-2.3640, -3.3742, -3.7528, -4.2369, -4.6351], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5568, device='cuda:0', dtype=torch.float64)
tensor([-2.3578, -3.3598, -3.7451, -4.2655, -4.6459], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5852, device='cuda:0', dtype=torch.float64)
tensor([-2.3425, -3.3482, -3.7490, -4.2960, -4.6457], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5483, device='cuda:0', dtype=torch.float64)
tensor([-2.3251, -3.3333, -3.7375, -4.3071, -4.6575], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4814, device='cuda:0', dtype=torch.float64)
tensor([-2.3117, -3.3171, -3.7325, -4.3099, -4.6577], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4607, device='cuda:0', dtype=torch.float64)
tensor([-2.3069, -3.3118, -3.7192, -4.3238, -4.6472], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5706, device='cuda:0', dtype=torch.float64)
tensor([-2.3048, -3.3264, -3.7038, -4.3225, -4.6332], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7730, device='cuda:0', dtype=torch.float64)
tensor([-2.3041, -3.3465, -3.6973, -4.3219, -4.6268], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5771, device='cuda:0', dtype=torch.float64)
tensor([-2.2984, -3.3551, -3.6977, -4.3066, -4.6310], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3501, device='cuda:0', dtype=torch.float64)
tensor([-2.3049, -3.3606, -3.7102, -4.2869, -4.6413], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6162, device='cuda:0', dtype=torch.float64)
tensor([-2.3101, -3.3561, -3.7362, -4.2726, -4.6479], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2669, device='cuda:0', dtype=torch.float64)
tensor([-2.3226, -3.3537, -3.7539, -4.2519, -4.6452], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6114, device='cuda:0', dtype=torch.float64)
tensor([-2.3416, -3.3499, -3.7704, -4.2304, -4.6407], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2045, device='cuda:0', dtype=torch.float64)
tensor([-2.3640, -3.3587, -3.7895, -4.2182, -4.6305], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4294, device='cuda:0', dtype=torch.float64)
tensor([-2.3825, -3.3757, -3.8070, -4.2055, -4.6367], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1938, device='cuda:0', dtype=torch.float64)
tensor([-2.3947, -3.3806, -3.8231, -4.1910, -4.6457], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4596, device='cuda:0', dtype=torch.float64)
tensor([-2.3997, -3.3707, -3.8300, -4.1681, -4.6487], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3496, device='cuda:0', dtype=torch.float64)
tensor([-2.3984, -3.3611, -3.8293, -4.1618, -4.6414], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2775, device='cuda:0', dtype=torch.float64)
tensor([-2.3848, -3.3519, -3.8125, -4.1608, -4.6210], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7346, device='cuda:0', dtype=torch.float64)
tensor([-2.3619, -3.3412, -3.8049, -4.1694, -4.5920], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6641, device='cuda:0', dtype=torch.float64)
tensor([-2.3446, -3.3304, -3.8089, -4.1755, -4.5618], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3357, device='cuda:0', dtype=torch.float64)
tensor([-2.3344, -3.3246, -3.8080, -4.1911, -4.5304], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6907, device='cuda:0', dtype=torch.float64)
tensor([-2.3243, -3.3299, -3.8124, -4.2052, -4.5149], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4053, device='cuda:0', dtype=torch.float64)
tensor([-2.3103, -3.3370, -3.8082, -4.2217, -4.5182], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6781, device='cuda:0', dtype=torch.float64)
tensor([-2.3160, -3.3483, -3.8034, -4.2242, -4.5461], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3427, device='cuda:0', dtype=torch.float64)
tensor([-2.3232, -3.3623, -3.8047, -4.2176, -4.5876], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5834, device='cuda:0', dtype=torch.float64)
tensor([-2.3353, -3.3830, -3.8234, -4.2261, -4.6211], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3840, device='cuda:0', dtype=torch.float64)
tensor([-2.3436, -3.3899, -3.8339, -4.2543, -4.6340], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3833, device='cuda:0', dtype=torch.float64)
tensor([-2.3490, -3.3818, -3.8194, -4.2636, -4.6302], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5765, device='cuda:0', dtype=torch.float64)
tensor([-2.3580, -3.3716, -3.8105, -4.2689, -4.6238], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4691, device='cuda:0', dtype=torch.float64)
tensor([-2.3604, -3.3618, -3.8252, -4.2814, -4.6141], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4749, device='cuda:0', dtype=torch.float64)
tensor([-2.3604, -3.3559, -3.8368, -4.2912, -4.6105], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3962, device='cuda:0', dtype=torch.float64)
tensor([-2.3506, -3.3436, -3.8533, -4.2913, -4.6132], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4116, device='cuda:0', dtype=torch.float64)
tensor([-2.3420, -3.3274, -3.8608, -4.2792, -4.6206], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7197, device='cuda:0', dtype=torch.float64)
tensor([-2.3352, -3.3184, -3.8719, -4.2754, -4.6286], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2996, device='cuda:0', dtype=torch.float64)
tensor([-2.3269, -3.3203, -3.8851, -4.2814, -4.6433], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5578, device='cuda:0', dtype=torch.float64)
tensor([-2.3181, -3.3183, -3.9174, -4.2917, -4.6517], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4768, device='cuda:0', dtype=torch.float64)
tensor([-2.3115, -3.3161, -3.9012, -4.2917, -4.6513], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3693, device='cuda:0', dtype=torch.float64)
tensor([-2.3172, -3.3174, -3.8467, -4.2977, -4.6518], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3798, device='cuda:0', dtype=torch.float64)
tensor([-2.3336, -3.3372, -3.7654, -4.2692, -4.6462], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5628, device='cuda:0', dtype=torch.float64)
tensor([-2.3651, -3.3647, -3.7212, -4.2317, -4.6291], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3360, device='cuda:0', dtype=torch.float64)
tensor([-2.3906, -3.3946, -3.6962, -4.1943, -4.6095], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3599, device='cuda:0', dtype=torch.float64)
tensor([-2.4024, -3.4036, -3.6947, -4.1699, -4.5881], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2938, device='cuda:0', dtype=torch.float64)
tensor([-2.4031, -3.4007, -3.7056, -4.1560, -4.5783], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4369, device='cuda:0', dtype=torch.float64)
tensor([-2.4010, -3.3943, -3.7235, -4.1574, -4.5724], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2805, device='cuda:0', dtype=torch.float64)
tensor([-2.4014, -3.3971, -3.7643, -4.1748, -4.5740], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5817, device='cuda:0', dtype=torch.float64)
tensor([-2.3956, -3.4026, -3.7829, -4.2034, -4.5782], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5676, device='cuda:0', dtype=torch.float64)
tensor([-2.3956, -3.4089, -3.7980, -4.2492, -4.5881], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3820, device='cuda:0', dtype=torch.float64)
tensor([-2.3976, -3.4083, -3.8019, -4.3136, -4.5918], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4794, device='cuda:0', dtype=torch.float64)
tensor([-2.4151, -3.4298, -3.7819, -4.3806, -4.6100], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6830, device='cuda:0', dtype=torch.float64)
tensor([-2.4386, -3.4476, -3.7705, -4.4138, -4.6341], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7072, device='cuda:0', dtype=torch.float64)
tensor([-2.4560, -3.4605, -3.7767, -4.4222, -4.6346], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6165, device='cuda:0', dtype=torch.float64)
tensor([-2.4653, -3.4732, -3.7866, -4.4365, -4.6245], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6307, device='cuda:0', dtype=torch.float64)
tensor([-2.4853, -3.4940, -3.7898, -4.4402, -4.6175], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6607, device='cuda:0', dtype=torch.float64)
tensor([-2.4867, -3.5017, -3.8150, -4.4523, -4.5880], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3556, device='cuda:0', dtype=torch.float64)
tensor([-2.4947, -3.5062, -3.8315, -4.4417, -4.5528], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3604, device='cuda:0', dtype=torch.float64)
tensor([-2.4942, -3.5145, -3.8549, -4.4138, -4.5264], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3618, device='cuda:0', dtype=torch.float64)
tensor([-2.4909, -3.5074, -3.8850, -4.3779, -4.5022], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4354, device='cuda:0', dtype=torch.float64)
tensor([-2.4899, -3.4950, -3.9085, -4.3351, -4.4804], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3706, device='cuda:0', dtype=torch.float64)
tensor([-2.4828, -3.4808, -3.9382, -4.3051, -4.4631], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2218, device='cuda:0', dtype=torch.float64)
tensor([-2.4747, -3.4602, -3.9705, -4.2872, -4.4515], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4422, device='cuda:0', dtype=torch.float64)
tensor([-2.4662, -3.4409, -4.0018, -4.2982, -4.4387], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3761, device='cuda:0', dtype=torch.float64)
tensor([-2.4534, -3.4228, -4.0234, -4.3217, -4.4332], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4948, device='cuda:0', dtype=torch.float64)
tensor([-2.4459, -3.4184, -4.0361, -4.3092, -4.4375], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1550, device='cuda:0', dtype=torch.float64)
tensor([-2.4398, -3.4157, -4.0026, -4.2809, -4.4480], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4465, device='cuda:0', dtype=torch.float64)
tensor([-2.4468, -3.4185, -3.9733, -4.2418, -4.4579], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5395, device='cuda:0', dtype=torch.float64)
tensor([-2.4561, -3.4154, -3.9386, -4.2230, -4.4665], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5380, device='cuda:0', dtype=torch.float64)
tensor([-2.4635, -3.4076, -3.9282, -4.2238, -4.4732], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5559, device='cuda:0', dtype=torch.float64)
tensor([-2.4588, -3.3980, -3.9215, -4.2470, -4.4908], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5446, device='cuda:0', dtype=torch.float64)
tensor([-2.4597, -3.4065, -3.9056, -4.2600, -4.5100], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1845, device='cuda:0', dtype=torch.float64)
tensor([-2.4732, -3.4373, -3.8974, -4.2870, -4.5384], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5941, device='cuda:0', dtype=torch.float64)
tensor([-2.4903, -3.4764, -3.9028, -4.3285, -4.5688], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1671, device='cuda:0', dtype=torch.float64)
tensor([-2.5062, -3.5167, -3.9110, -4.3573, -4.5776], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3478, device='cuda:0', dtype=torch.float64)
tensor([-2.5176, -3.5283, -3.9281, -4.3640, -4.5694], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3341, device='cuda:0', dtype=torch.float64)
tensor([-2.5299, -3.5365, -3.9513, -4.3687, -4.5637], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2608, device='cuda:0', dtype=torch.float64)
tensor([-2.5237, -3.5413, -3.9955, -4.3748, -4.5580], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2574, device='cuda:0', dtype=torch.float64)
tensor([-2.5130, -3.5368, -4.0367, -4.3777, -4.5687], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2453, device='cuda:0', dtype=torch.float64)
tensor([-2.4976, -3.5204, -4.0465, -4.3706, -4.5877], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3820, device='cuda:0', dtype=torch.float64)
tensor([-2.4744, -3.4978, -4.0502, -4.3616, -4.5995], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4383, device='cuda:0', dtype=torch.float64)
tensor([-2.4558, -3.4954, -4.0225, -4.3483, -4.6030], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2320, device='cuda:0', dtype=torch.float64)
tensor([-2.4531, -3.4953, -3.9983, -4.3477, -4.6240], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5015, device='cuda:0', dtype=torch.float64)
tensor([-2.4503, -3.4796, -3.9675, -4.3477, -4.6380], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3170, device='cuda:0', dtype=torch.float64)
tensor([-2.4516, -3.4625, -3.9432, -4.3575, -4.6362], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2048, device='cuda:0', dtype=torch.float64)
tensor([-2.4607, -3.4468, -3.9293, -4.3712, -4.6189], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3560, device='cuda:0', dtype=torch.float64)
tensor([-2.4685, -3.4205, -3.9324, -4.3861, -4.5995], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2595, device='cuda:0', dtype=torch.float64)
tensor([-2.4804, -3.4103, -3.9440, -4.3837, -4.5909], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4411, device='cuda:0', dtype=torch.float64)
tensor([-2.4950, -3.4215, -3.9542, -4.3668, -4.5968], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2979, device='cuda:0', dtype=torch.float64)
tensor([-2.5109, -3.4391, -3.9861, -4.3602, -4.6112], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4553, device='cuda:0', dtype=torch.float64)
tensor([-2.5247, -3.4631, -3.9938, -4.3458, -4.6424], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5008, device='cuda:0', dtype=torch.float64)
tensor([-2.5391, -3.4884, -3.9539, -4.3249, -4.6447], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3411, device='cuda:0', dtype=torch.float64)
tensor([-2.5454, -3.5161, -3.8945, -4.2950, -4.6507], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2332, device='cuda:0', dtype=torch.float64)
tensor([-2.5540, -3.5625, -3.8441, -4.2528, -4.6605], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3136, device='cuda:0', dtype=torch.float64)
tensor([-2.5688, -3.5995, -3.8001, -4.2186, -4.6671], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5022, device='cuda:0', dtype=torch.float64)
tensor([-2.5690, -3.5976, -3.7668, -4.2060, -4.6716], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3176, device='cuda:0', dtype=torch.float64)
tensor([-2.5713, -3.5750, -3.7470, -4.2075, -4.6713], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4418, device='cuda:0', dtype=torch.float64)
tensor([-2.5674, -3.5569, -3.7443, -4.2173, -4.6660], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2004, device='cuda:0', dtype=torch.float64)
tensor([-2.5776, -3.5531, -3.7480, -4.2472, -4.6640], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4013, device='cuda:0', dtype=torch.float64)
tensor([-2.5960, -3.5528, -3.7463, -4.2742, -4.6678], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3611, device='cuda:0', dtype=torch.float64)
tensor([-2.6160, -3.5533, -3.7540, -4.3016, -4.6774], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4490, device='cuda:0', dtype=torch.float64)
tensor([-2.6313, -3.5520, -3.7582, -4.3037, -4.6883], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9891, device='cuda:0', dtype=torch.float64)
tensor([-2.6265, -3.5457, -3.7527, -4.3036, -4.7062], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4223, device='cuda:0', dtype=torch.float64)
tensor([-2.6208, -3.5457, -3.7554, -4.3232, -4.7191], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2871, device='cuda:0', dtype=torch.float64)
tensor([-2.6094, -3.5504, -3.7664, -4.3369, -4.7244], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4727, device='cuda:0', dtype=torch.float64)
tensor([-2.5961, -3.5644, -3.7603, -4.3493, -4.7320], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3074, device='cuda:0', dtype=torch.float64)
tensor([-2.5835, -3.5740, -3.7708, -4.3573, -4.7373], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8300, device='cuda:0', dtype=torch.float64)
tensor([-2.5729, -3.6020, -3.7983, -4.3873, -4.7342], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3539, device='cuda:0', dtype=torch.float64)
tensor([-2.5586, -3.6000, -3.8316, -4.4180, -4.7219], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5293, device='cuda:0', dtype=torch.float64)
tensor([-2.5483, -3.5949, -3.8761, -4.4539, -4.7112], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3390, device='cuda:0', dtype=torch.float64)
tensor([-2.5471, -3.5960, -3.9147, -4.4727, -4.7081], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3122, device='cuda:0', dtype=torch.float64)
tensor([-2.5539, -3.6136, -3.9507, -4.4880, -4.7077], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2354, device='cuda:0', dtype=torch.float64)
tensor([-2.5762, -3.6405, -3.9883, -4.4975, -4.7210], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3322, device='cuda:0', dtype=torch.float64)
tensor([-2.6061, -3.6917, -4.0183, -4.5034, -4.7410], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2801, device='cuda:0', dtype=torch.float64)
tensor([-2.6369, -3.7377, -4.0480, -4.5063, -4.7480], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2079, device='cuda:0', dtype=torch.float64)
tensor([-2.6714, -3.7809, -4.0709, -4.5052, -4.7444], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3057, device='cuda:0', dtype=torch.float64)
tensor([-2.7069, -3.7912, -4.0916, -4.4786, -4.7545], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5916, device='cuda:0', dtype=torch.float64)
tensor([-2.7406, -3.7849, -4.0712, -4.4625, -4.7621], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2750, device='cuda:0', dtype=torch.float64)
tensor([-2.7649, -3.7787, -4.0320, -4.4712, -4.7703], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4490, device='cuda:0', dtype=torch.float64)
tensor([-2.7945, -3.7820, -3.9999, -4.4595, -4.7827], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2345, device='cuda:0', dtype=torch.float64)
tensor([-2.8242, -3.7944, -3.9750, -4.4505, -4.7997], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4846, device='cuda:0', dtype=torch.float64)
tensor([-2.8357, -3.8005, -3.9688, -4.4612, -4.8111], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3450, device='cuda:0', dtype=torch.float64)
tensor([-2.8323, -3.7771, -3.9747, -4.4641, -4.8210], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1953, device='cuda:0', dtype=torch.float64)
tensor([-2.8172, -3.7416, -3.9854, -4.4715, -4.8108], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2105, device='cuda:0', dtype=torch.float64)
tensor([-2.7958, -3.7141, -3.9933, -4.4929, -4.7959], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3452, device='cuda:0', dtype=torch.float64)
tensor([-2.7811, -3.7112, -4.0027, -4.5325, -4.7844], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2629, device='cuda:0', dtype=torch.float64)
tensor([-2.7636, -3.7138, -4.0226, -4.6120, -4.7732], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3918, device='cuda:0', dtype=torch.float64)
tensor([-2.7537, -3.7171, -4.0294, -4.6423, -4.7584], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4790, device='cuda:0', dtype=torch.float64)
tensor([-2.7420, -3.7235, -4.0275, -4.6477, -4.7485], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4505, device='cuda:0', dtype=torch.float64)
tensor([-2.7355, -3.7258, -4.0272, -4.6677, -4.7423], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3346, device='cuda:0', dtype=torch.float64)
tensor([-2.7259, -3.7362, -4.0276, -4.6764, -4.7242], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3007, device='cuda:0', dtype=torch.float64)
tensor([-2.7129, -3.7503, -4.0225, -4.6548, -4.7100], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0132, device='cuda:0', dtype=torch.float64)
tensor([-2.7048, -3.7697, -4.0152, -4.6188, -4.6994], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3708, device='cuda:0', dtype=torch.float64)
tensor([-2.7114, -3.7797, -4.0151, -4.6097, -4.6924], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2384, device='cuda:0', dtype=torch.float64)
tensor([-2.7251, -3.7901, -4.0065, -4.5934, -4.6992], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1053, device='cuda:0', dtype=torch.float64)
tensor([-2.7360, -3.7984, -4.0161, -4.5972, -4.7181], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2649, device='cuda:0', dtype=torch.float64)
tensor([-2.7479, -3.8035, -4.0200, -4.6225, -4.7425], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1999, device='cuda:0', dtype=torch.float64)
tensor([-2.7655, -3.8083, -4.0290, -4.6738, -4.7594], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3086, device='cuda:0', dtype=torch.float64)
tensor([-2.7842, -3.8149, -4.0547, -4.7292, -4.7484], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0124, device='cuda:0', dtype=torch.float64)
tensor([-2.8024, -3.8141, -4.0881, -4.7787, -4.7357], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2700, device='cuda:0', dtype=torch.float64)
tensor([-2.8201, -3.8098, -4.1331, -4.8275, -4.7223], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0922, device='cuda:0', dtype=torch.float64)
tensor([-2.8407, -3.8213, -4.1706, -4.8823, -4.7086], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2732, device='cuda:0', dtype=torch.float64)
tensor([-2.8576, -3.8334, -4.2041, -4.9109, -4.6999], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0380, device='cuda:0', dtype=torch.float64)
tensor([-2.8720, -3.8595, -4.2437, -4.9134, -4.6876], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2938, device='cuda:0', dtype=torch.float64)
tensor([-2.8893, -3.8955, -4.2845, -4.9212, -4.6718], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1471, device='cuda:0', dtype=torch.float64)
tensor([-2.9083, -3.9154, -4.2932, -4.9308, -4.6621], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2839, device='cuda:0', dtype=torch.float64)
tensor([-2.9482, -3.9515, -4.2636, -4.9001, -4.6549], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1864, device='cuda:0', dtype=torch.float64)
tensor([-2.9914, -3.9771, -4.2476, -4.8807, -4.6426], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3634, device='cuda:0', dtype=torch.float64)
tensor([-3.0301, -4.0040, -4.2333, -4.8502, -4.6355], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2063, device='cuda:0', dtype=torch.float64)
tensor([-3.0551, -4.0077, -4.2225, -4.8010, -4.6271], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2172, device='cuda:0', dtype=torch.float64)
tensor([-3.0631, -3.9959, -4.2207, -4.7279, -4.6212], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4427, device='cuda:0', dtype=torch.float64)
tensor([-3.0691, -3.9808, -4.2157, -4.6446, -4.6227], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9928, device='cuda:0', dtype=torch.float64)
tensor([-3.0553, -3.9763, -4.2137, -4.5974, -4.6191], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1178, device='cuda:0', dtype=torch.float64)
tensor([-3.0379, -3.9777, -4.2119, -4.5792, -4.6277], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4517, device='cuda:0', dtype=torch.float64)
tensor([-3.0330, -3.9838, -4.2036, -4.5671, -4.6558], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3525, device='cuda:0', dtype=torch.float64)
tensor([-3.0291, -3.9855, -4.2090, -4.5713, -4.6904], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1855, device='cuda:0', dtype=torch.float64)
tensor([-3.0372, -3.9848, -4.2163, -4.5821, -4.7235], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2078, device='cuda:0', dtype=torch.float64)
tensor([-3.0588, -3.9969, -4.2241, -4.5826, -4.7610], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0222, device='cuda:0', dtype=torch.float64)
tensor([-3.0827, -4.0055, -4.2410, -4.5879, -4.7747], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2208, device='cuda:0', dtype=torch.float64)
tensor([-3.1087, -4.0129, -4.2526, -4.6014, -4.8009], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2057, device='cuda:0', dtype=torch.float64)
tensor([-3.1509, -4.0388, -4.2595, -4.6090, -4.8343], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3876, device='cuda:0', dtype=torch.float64)
tensor([-3.2063, -4.0732, -4.2429, -4.6277, -4.8766], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9397, device='cuda:0', dtype=torch.float64)
tensor([-3.2506, -4.0994, -4.2177, -4.6477, -4.9115], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3627, device='cuda:0', dtype=torch.float64)
tensor([-3.3034, -4.1361, -4.1832, -4.6633, -4.9191], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6694, device='cuda:0', dtype=torch.float64)
tensor([-3.3558, -4.1753, -4.1927, -4.7345, -4.9312], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9545, device='cuda:0', dtype=torch.float64)
tensor([-3.4065, -4.2212, -4.2124, -4.8267, -4.9395], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4533, device='cuda:0', dtype=torch.float64)
tensor([-3.4495, -4.2803, -4.2329, -4.9159, -4.9482], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2692, device='cuda:0', dtype=torch.float64)
tensor([-3.4811, -4.3413, -4.2471, -4.9661, -4.9608], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4076, device='cuda:0', dtype=torch.float64)
tensor([-3.5183, -4.3761, -4.2503, -4.9784, -4.9799], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1749, device='cuda:0', dtype=torch.float64)
tensor([-3.5694, -4.4188, -4.2778, -5.0006, -5.0021], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4368, device='cuda:0', dtype=torch.float64)
tensor([-3.6047, -4.4734, -4.3157, -5.0035, -5.0233], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2015, device='cuda:0', dtype=torch.float64)
tensor([-3.6657, -4.5385, -4.3408, -4.9814, -5.0540], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2764, device='cuda:0', dtype=torch.float64)
tensor([-3.7693, -4.6060, -4.3639, -4.9619, -5.0892], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0566, device='cuda:0', dtype=torch.float64)
tensor([-3.8523, -4.6205, -4.3952, -4.9650, -5.1269], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0118, device='cuda:0', dtype=torch.float64)
tensor([-3.9221, -4.6391, -4.4302, -4.9921, -5.1689], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8747, device='cuda:0', dtype=torch.float64)
tensor([-3.9651, -4.6588, -4.4754, -5.0381, -5.2022], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0690, device='cuda:0', dtype=torch.float64)
tensor([-3.9575, -4.6624, -4.5108, -5.0957, -5.2308], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1782, device='cuda:0', dtype=torch.float64)
tensor([-3.9740, -4.6774, -4.5739, -5.2094, -5.2538], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0028, device='cuda:0', dtype=torch.float64)
tensor([-4.0054, -4.7127, -4.6393, -5.3311, -5.2935], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1274, device='cuda:0', dtype=torch.float64)
tensor([-4.0336, -4.7434, -4.7304, -5.4667, -5.3307], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1252, device='cuda:0', dtype=torch.float64)
tensor([-4.0675, -4.7879, -4.8083, -5.5991, -5.3676], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0734, device='cuda:0', dtype=torch.float64)
tensor([-4.1229, -4.8447, -4.8986, -5.7722, -5.4044], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0947, device='cuda:0', dtype=torch.float64)
tensor([-4.1893, -4.9121, -4.9837, -5.9452, -5.4446], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1305, device='cuda:0', dtype=torch.float64)
tensor([-4.2573, -4.9775, -5.0526, -6.1488, -5.4968], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1881, device='cuda:0', dtype=torch.float64)
tensor([-4.3265, -5.0833, -5.0944, -6.2893, -5.5530], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1355, device='cuda:0', dtype=torch.float64)
tensor([-4.4170, -5.1879, -5.1572, -6.4361, -5.6444], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1247, device='cuda:0', dtype=torch.float64)
tensor([-4.5243, -5.3047, -5.2158, -6.6660, -5.7565], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2098, device='cuda:0', dtype=torch.float64)
tensor([-4.6470, -5.4488, -5.2822, -6.8889, -5.8906], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9972, device='cuda:0', dtype=torch.float64)
tensor([-4.7989, -5.6175, -5.3699, -7.1742, -6.0373], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9347, device='cuda:0', dtype=torch.float64)
tensor([-4.9701, -5.8045, -5.4717, -7.6217, -6.1719], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3629, device='cuda:0', dtype=torch.float64)
tensor([-5.1975, -6.0521, -5.5574, -8.1854, -6.3185], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4006, device='cuda:0', dtype=torch.float64)
tensor([-5.4247, -6.3671, -5.6475, -8.6594, -6.4809], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0079, device='cuda:0', dtype=torch.float64)
tensor([-5.6697, -6.6801, -5.7448, -9.1096, -6.6379], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1105, device='cuda:0', dtype=torch.float64)
tensor([-5.9465, -7.0708, -5.8712, -9.5844, -6.7881], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0920, device='cuda:0', dtype=torch.float64)
tensor([ -6.2308,  -7.5747,  -6.0126, -10.0007,  -6.9526], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9798, device='cuda:0', dtype=torch.float64)
tensor([ -6.5606,  -8.1375,  -6.1570, -10.4802,  -7.1274], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0595, device='cuda:0', dtype=torch.float64)
tensor([ -6.9127,  -8.8102,  -6.2904, -11.0059,  -7.2949], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9934, device='cuda:0', dtype=torch.float64)
tensor([ -7.3537,  -9.4758,  -6.4446, -11.5458,  -7.5039], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2738, device='cuda:0', dtype=torch.float64)
tensor([ -7.8108, -10.1589,  -6.6085, -12.1192,  -7.6824], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1860, device='cuda:0', dtype=torch.float64)
tensor([ -8.1917, -10.7148,  -6.7761, -12.4590,  -7.9208], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0455, device='cuda:0', dtype=torch.float64)
tensor([ -8.5092, -11.1329,  -6.9697, -12.6213,  -8.1504], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1437, device='cuda:0', dtype=torch.float64)
tensor([ -8.8231, -11.5449,  -7.1924, -12.7426,  -8.3326], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1163, device='cuda:0', dtype=torch.float64)
tensor([ -9.0873, -11.8860,  -7.3984, -12.8468,  -8.5324], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1988, device='cuda:0', dtype=torch.float64)
tensor([ -9.4322, -12.5093,  -7.5996, -13.0188,  -8.7854], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9846, device='cuda:0', dtype=torch.float64)
tensor([ -9.8643, -13.1706,  -7.8472, -13.1885,  -9.0235], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1772, device='cuda:0', dtype=torch.float64)
tensor([-10.3760, -13.8254,  -8.1133, -13.5017,  -9.2308], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9119, device='cuda:0', dtype=torch.float64)
tensor([-11.0851, -14.5330,  -8.4389, -13.8591,  -9.4974], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2829, device='cuda:0', dtype=torch.float64)
tensor([-11.8175, -15.1108,  -8.7594, -14.3707,  -9.6927], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1553, device='cuda:0', dtype=torch.float64)
tensor([-12.3769, -15.4402,  -9.0407, -14.7349,  -9.8627], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9425, device='cuda:0', dtype=torch.float64)
tensor([-12.9358, -15.7349,  -9.2863, -15.0229,  -9.9789], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0902, device='cuda:0', dtype=torch.float64)
tensor([-13.5864, -16.0725,  -9.5927, -15.3310, -10.0955], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0960, device='cuda:0', dtype=torch.float64)
tensor([-14.2732, -16.3167,  -9.9067, -15.7212, -10.1775], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9143, device='cuda:0', dtype=torch.float64)
tensor([-14.7276, -16.2340, -10.1575, -15.8526, -10.2892], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9250, device='cuda:0', dtype=torch.float64)
tensor([-15.1228, -16.1949, -10.3955, -16.0638, -10.3621], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1778, device='cuda:0', dtype=torch.float64)
tensor([-15.5766, -16.3141, -10.7525, -16.5642, -10.3528], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0086, device='cuda:0', dtype=torch.float64)
tensor([-15.9571, -16.2620, -11.0972, -17.0864, -10.3515], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1043, device='cuda:0', dtype=torch.float64)
tensor([-16.3829, -16.1731, -11.5015, -17.6876, -10.3933], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2485, device='cuda:0', dtype=torch.float64)
tensor([-16.6399, -15.9272, -11.7920, -18.1787, -10.4896], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0987, device='cuda:0', dtype=torch.float64)
tensor([-16.8723, -15.6993, -12.0615, -18.6652, -10.5400], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1342, device='cuda:0', dtype=torch.float64)
tensor([-17.3308, -15.5351, -12.5294, -19.2923, -10.6194], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0581, device='cuda:0', dtype=torch.float64)
tensor([-17.7921, -15.3132, -12.9362, -19.9257, -10.7472], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9709, device='cuda:0', dtype=torch.float64)
tensor([-18.0162, -15.0269, -13.2324, -20.4769, -10.8475], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4483, device='cuda:0', dtype=torch.float64)
tensor([-17.9683, -14.6254, -13.3534, -20.8903, -11.0611], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8608, device='cuda:0', dtype=torch.float64)
tensor([-17.8931, -14.2873, -13.4646, -21.2642, -11.2752], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8997, device='cuda:0', dtype=torch.float64)
tensor([-17.7164, -13.9484, -13.4642, -21.7618, -11.4734], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0821, device='cuda:0', dtype=torch.float64)
tensor([-17.4289, -13.6419, -13.4008, -21.9635, -11.6792], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0331, device='cuda:0', dtype=torch.float64)
tensor([-17.1247, -13.3427, -13.3240, -22.0898, -11.9268], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2993, device='cuda:0', dtype=torch.float64)
tensor([-16.9429, -13.2075, -13.3529, -22.4335, -12.3633], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1688, device='cuda:0', dtype=torch.float64)
tensor([-16.6716, -13.2587, -13.3489, -22.4927, -12.7957], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0191, device='cuda:0', dtype=torch.float64)
tensor([-16.6099, -13.4284, -13.4081, -22.6985, -13.2182], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1315, device='cuda:0', dtype=torch.float64)
tensor([-16.4032, -13.6230, -13.4139, -22.9618, -13.6774], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8717, device='cuda:0', dtype=torch.float64)
tensor([-16.3810, -13.9665, -13.4491, -23.4410, -14.0115], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9388, device='cuda:0', dtype=torch.float64)
tensor([-16.5067, -14.4183, -13.5823, -24.1630, -14.4904], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1638, device='cuda:0', dtype=torch.float64)
tensor([-16.7013, -14.8568, -13.7041, -24.5322, -14.8381], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0474, device='cuda:0', dtype=torch.float64)
tensor([-17.0590, -15.1569, -13.9053, -24.9783, -15.0860], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1746, device='cuda:0', dtype=torch.float64)
tensor([-17.6942, -15.3045, -14.1519, -25.6202, -15.3537], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1813, device='cuda:0', dtype=torch.float64)
tensor([-18.0723, -15.4088, -14.2481, -26.0162, -15.6070], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0062, device='cuda:0', dtype=torch.float64)
tensor([-18.5483, -15.6224, -14.3367, -26.3757, -15.8402], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1615, device='cuda:0', dtype=torch.float64)
tensor([-19.0894, -15.9828, -14.4712, -26.8026, -16.2664], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8337, device='cuda:0', dtype=torch.float64)
tensor([-19.4067, -16.4337, -14.5273, -26.9526, -16.4820], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0571, device='cuda:0', dtype=torch.float64)
tensor([-19.7012, -16.7551, -14.6319, -27.2004, -16.4507], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1678, device='cuda:0', dtype=torch.float64)
tensor([-19.8958, -17.0933, -14.7277, -27.0185, -16.3708], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1008, device='cuda:0', dtype=torch.float64)
tensor([-19.9387, -17.3352, -14.7664, -26.8485, -16.4529], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0905, device='cuda:0', dtype=torch.float64)
tensor([-20.0557, -17.6234, -14.8116, -26.8185, -16.5383], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0969, device='cuda:0', dtype=torch.float64)
tensor([-20.0900, -17.9498, -14.8415, -26.9773, -16.4275], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9779, device='cuda:0', dtype=torch.float64)
tensor([-20.2183, -18.1613, -14.9386, -27.2088, -16.4377], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1252, device='cuda:0', dtype=torch.float64)
tensor([-20.3391, -18.5860, -15.0552, -27.6081, -16.6031], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0675, device='cuda:0', dtype=torch.float64)
tensor([-20.5169, -18.9271, -15.2622, -27.9422, -16.8690], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1493, device='cuda:0', dtype=torch.float64)
tensor([-20.7990, -19.0110, -15.5276, -28.6665, -17.1933], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0411, device='cuda:0', dtype=torch.float64)
tensor([-20.9907, -19.0928, -15.6919, -29.1094, -17.4055], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0807, device='cuda:0', dtype=torch.float64)
tensor([-20.9737, -19.1197, -15.6859, -29.0279, -17.5453], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0120, device='cuda:0', dtype=torch.float64)
tensor([-21.0275, -19.1159, -15.8253, -28.9686, -17.8766], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9820, device='cuda:0', dtype=torch.float64)
tensor([-20.9975, -19.3703, -15.9201, -28.5741, -18.2705], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0705, device='cuda:0', dtype=torch.float64)
tensor([-20.9149, -19.4361, -16.0075, -28.4058, -18.6143], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1593, device='cuda:0', dtype=torch.float64)
tensor([-20.7221, -19.7051, -16.1904, -28.3849, -19.0106], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1094, device='cuda:0', dtype=torch.float64)
tensor([-20.4455, -20.3488, -16.4614, -28.5190, -19.4719], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0978, device='cuda:0', dtype=torch.float64)
tensor([-20.2930, -21.2899, -16.7988, -28.7906, -19.8474], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9848, device='cuda:0', dtype=torch.float64)
tensor([-20.2657, -22.4279, -17.1887, -29.1323, -20.3368], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0035, device='cuda:0', dtype=torch.float64)
tensor([-20.1551, -23.4011, -17.5833, -29.4968, -20.6803], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8327, device='cuda:0', dtype=torch.float64)
tensor([-20.1183, -23.9658, -17.8304, -29.6902, -20.8913], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0962, device='cuda:0', dtype=torch.float64)
tensor([-20.2996, -24.9174, -18.1568, -30.3743, -21.2991], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9624, device='cuda:0', dtype=torch.float64)
tensor([-20.5262, -26.2234, -18.6321, -31.1473, -21.7433], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0374, device='cuda:0', dtype=torch.float64)
tensor([-20.8914, -27.7144, -19.0631, -31.8566, -22.3388], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9495, device='cuda:0', dtype=torch.float64)
tensor([-21.2493, -29.0862, -19.5280, -32.6995, -23.0540], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8978, device='cuda:0', dtype=torch.float64)
tensor([-21.6911, -30.2868, -19.8591, -33.3598, -23.7652], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9372, device='cuda:0', dtype=torch.float64)
tensor([-22.1798, -31.5301, -20.2849, -34.0360, -24.4602], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8575, device='cuda:0', dtype=torch.float64)
tensor([-22.5804, -32.5516, -20.5577, -34.5868, -25.2033], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0339, device='cuda:0', dtype=torch.float64)
tensor([-22.6558, -33.2279, -20.8883, -34.9236, -25.7524], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9729, device='cuda:0', dtype=torch.float64)
tensor([-22.8743, -34.3444, -21.3173, -35.6851, -26.5099], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8822, device='cuda:0', dtype=torch.float64)
tensor([-23.0446, -35.3271, -21.5426, -36.2027, -27.1110], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8892, device='cuda:0', dtype=torch.float64)
tensor([-23.2426, -35.8251, -21.8017, -36.5527, -27.5685], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7978, device='cuda:0', dtype=torch.float64)
tensor([-23.3598, -36.2851, -22.0648, -36.9741, -27.8838], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7854, device='cuda:0', dtype=torch.float64)
tensor([-23.3449, -36.3694, -22.2289, -37.3348, -28.0435], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8438, device='cuda:0', dtype=torch.float64)
tensor([-23.2028, -36.2119, -22.3469, -37.6371, -28.1792], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9808, device='cuda:0', dtype=torch.float64)
tensor([-22.9726, -35.7973, -22.5095, -37.4073, -28.1202], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9467, device='cuda:0', dtype=torch.float64)
tensor([-22.7072, -35.4031, -22.5895, -36.6769, -27.9979], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0667, device='cuda:0', dtype=torch.float64)
tensor([-22.4444, -34.9616, -22.5792, -35.8572, -27.9423], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8977, device='cuda:0', dtype=torch.float64)
tensor([-22.1373, -34.1598, -22.5903, -35.1939, -27.7633], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8692, device='cuda:0', dtype=torch.float64)
tensor([-21.9646, -33.4121, -22.8872, -34.6303, -27.6464], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0292, device='cuda:0', dtype=torch.float64)
tensor([-21.7666, -32.4405, -23.0719, -33.9524, -27.4444], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0395, device='cuda:0', dtype=torch.float64)
tensor([-21.5711, -31.7521, -23.0916, -33.4682, -27.3584], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8957, device='cuda:0', dtype=torch.float64)
tensor([-21.2964, -31.2212, -23.3648, -32.6907, -27.1793], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9761, device='cuda:0', dtype=torch.float64)
tensor([-21.1735, -31.2250, -23.7142, -32.3131, -27.1714], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9935, device='cuda:0', dtype=torch.float64)
tensor([-21.0698, -31.1596, -24.1876, -31.9838, -27.0585], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8984, device='cuda:0', dtype=torch.float64)
tensor([-20.8973, -30.7955, -24.7083, -31.4099, -26.7709], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9342, device='cuda:0', dtype=torch.float64)
tensor([-20.7661, -30.2719, -25.1967, -30.8473, -26.5159], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9681, device='cuda:0', dtype=torch.float64)
tensor([-20.6180, -29.6428, -25.6763, -30.1373, -26.2539], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9258, device='cuda:0', dtype=torch.float64)
tensor([-20.5711, -29.5161, -25.8865, -29.8023, -26.2774], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0124, device='cuda:0', dtype=torch.float64)
tensor([-20.3994, -29.4189, -25.9247, -29.4501, -26.4847], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8022, device='cuda:0', dtype=torch.float64)
tensor([-20.1239, -29.2382, -25.9542, -29.1906, -26.8049], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1170, device='cuda:0', dtype=torch.float64)
tensor([-19.7990, -28.6797, -25.6808, -28.8235, -26.8210], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0624, device='cuda:0', dtype=torch.float64)
tensor([-19.6396, -28.2678, -25.4468, -28.7907, -26.9029], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8334, device='cuda:0', dtype=torch.float64)
tensor([-19.4519, -28.0330, -25.3360, -28.6235, -26.9034], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7544, device='cuda:0', dtype=torch.float64)
tensor([-19.2069, -27.9541, -25.2571, -28.2636, -26.8548], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9359, device='cuda:0', dtype=torch.float64)
tensor([-18.9642, -27.8348, -25.0277, -27.7786, -26.8063], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1011, device='cuda:0', dtype=torch.float64)
tensor([-18.9662, -27.8701, -24.9620, -27.6519, -26.6661], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0325, device='cuda:0', dtype=torch.float64)
tensor([-18.9436, -28.0436, -24.7741, -27.6582, -26.4644], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8585, device='cuda:0', dtype=torch.float64)
tensor([-18.9909, -28.7165, -24.6193, -27.9747, -26.5478], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0688, device='cuda:0', dtype=torch.float64)
tensor([-19.1694, -29.2530, -24.5543, -28.8228, -26.7202], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8446, device='cuda:0', dtype=torch.float64)
tensor([-19.4614, -29.7827, -24.5940, -29.6324, -26.9012], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0052, device='cuda:0', dtype=torch.float64)
tensor([-19.9340, -29.9520, -24.5589, -30.2454, -27.0265], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9728, device='cuda:0', dtype=torch.float64)
tensor([-20.3470, -30.0854, -24.5067, -30.7760, -26.9966], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8291, device='cuda:0', dtype=torch.float64)
tensor([-20.7726, -30.3107, -24.4979, -31.3480, -26.9864], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0030, device='cuda:0', dtype=torch.float64)
tensor([-21.1297, -30.2874, -24.4374, -31.7663, -26.7262], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8269, device='cuda:0', dtype=torch.float64)
tensor([-21.5222, -30.2894, -24.5529, -32.2911, -26.4727], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0212, device='cuda:0', dtype=torch.float64)
tensor([-21.8748, -30.1587, -24.5689, -32.8171, -25.9694], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0520, device='cuda:0', dtype=torch.float64)
tensor([-22.1609, -30.0076, -24.5615, -33.4830, -25.4464], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7789, device='cuda:0', dtype=torch.float64)
tensor([-22.3725, -30.0691, -24.6679, -34.2642, -25.0061], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7992, device='cuda:0', dtype=torch.float64)
tensor([-22.5297, -30.3173, -24.8099, -34.8974, -24.5483], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8304, device='cuda:0', dtype=torch.float64)
tensor([-22.6555, -30.8913, -25.1025, -35.3498, -24.3863], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9131, device='cuda:0', dtype=torch.float64)
tensor([-22.9385, -31.4946, -25.6958, -35.8421, -24.3221], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9977, device='cuda:0', dtype=torch.float64)
tensor([-23.5252, -32.0641, -26.0086, -36.7940, -24.2666], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0556, device='cuda:0', dtype=torch.float64)
tensor([-23.9791, -32.5849, -26.2166, -37.3780, -24.0859], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9258, device='cuda:0', dtype=torch.float64)
tensor([-24.4411, -33.3133, -26.4830, -37.9566, -24.2304], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9296, device='cuda:0', dtype=torch.float64)
tensor([-25.1475, -34.0367, -26.8908, -38.7811, -24.6671], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9695, device='cuda:0', dtype=torch.float64)
tensor([-26.0016, -34.4813, -27.1511, -39.6605, -25.1587], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8671, device='cuda:0', dtype=torch.float64)
tensor([-26.8208, -34.8669, -27.3961, -40.6397, -26.0029], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8731, device='cuda:0', dtype=torch.float64)
tensor([-27.5294, -35.3591, -27.6388, -41.4260, -26.8705], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7188, device='cuda:0', dtype=torch.float64)
tensor([-28.4134, -35.9806, -27.9706, -42.3542, -27.7571], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9225, device='cuda:0', dtype=torch.float64)
tensor([-29.0634, -36.4142, -28.2324, -42.7369, -28.3738], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8077, device='cuda:0', dtype=torch.float64)
tensor([-29.6525, -36.8072, -28.5872, -43.1611, -28.9705], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8211, device='cuda:0', dtype=torch.float64)
tensor([-30.3164, -36.9771, -28.9045, -43.7204, -29.4926], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8310, device='cuda:0', dtype=torch.float64)
tensor([-30.8253, -37.0898, -29.0572, -44.2426, -30.0236], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8704, device='cuda:0', dtype=torch.float64)
tensor([-31.2476, -37.4122, -29.2644, -44.8264, -30.4919], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9634, device='cuda:0', dtype=torch.float64)
tensor([-31.7413, -37.9692, -29.4735, -45.8414, -31.1048], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9136, device='cuda:0', dtype=torch.float64)
tensor([-32.1651, -38.3966, -29.4868, -46.8023, -31.7220], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9359, device='cuda:0', dtype=torch.float64)
tensor([-32.6173, -38.9748, -29.5783, -47.7120, -32.4918], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7579, device='cuda:0', dtype=torch.float64)
tensor([-32.9765, -39.7333, -29.7665, -48.6560, -33.3816], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9204, device='cuda:0', dtype=torch.float64)
tensor([-33.1367, -40.3915, -29.8041, -49.5196, -34.0503], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8319, device='cuda:0', dtype=torch.float64)
tensor([-33.2186, -40.4793, -29.8190, -50.2635, -34.3997], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8915, device='cuda:0', dtype=torch.float64)
tensor([-33.2039, -40.4830, -29.6799, -50.7801, -34.4704], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7820, device='cuda:0', dtype=torch.float64)
tensor([-33.0847, -40.5845, -29.7626, -51.2693, -34.4211], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9017, device='cuda:0', dtype=torch.float64)
tensor([-33.2351, -40.9559, -30.0462, -52.0085, -34.4591], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9028, device='cuda:0', dtype=torch.float64)
tensor([-33.3625, -41.3018, -30.3706, -52.4590, -34.4292], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9650, device='cuda:0', dtype=torch.float64)
tensor([-33.1473, -41.2362, -30.3771, -52.4079, -34.3971], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8402, device='cuda:0', dtype=torch.float64)
tensor([-32.8017, -41.1938, -30.2607, -52.2201, -34.3425], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7732, device='cuda:0', dtype=torch.float64)
tensor([-32.4346, -40.9480, -30.2789, -52.1982, -34.2449], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8318, device='cuda:0', dtype=torch.float64)
tensor([-32.1890, -40.7348, -30.3134, -52.3216, -34.0486], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8336, device='cuda:0', dtype=torch.float64)
tensor([-32.0274, -40.8633, -30.3914, -52.4242, -33.7808], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9569, device='cuda:0', dtype=torch.float64)
tensor([-31.8262, -40.8888, -30.1929, -52.5778, -33.4792], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9614, device='cuda:0', dtype=torch.float64)
tensor([-31.3603, -40.6155, -29.9811, -52.3217, -33.0643], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8335, device='cuda:0', dtype=torch.float64)
tensor([-30.9930, -40.3183, -29.7434, -52.1034, -32.6989], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9105, device='cuda:0', dtype=torch.float64)
tensor([-30.7547, -40.1780, -29.6411, -52.0542, -32.4510], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8480, device='cuda:0', dtype=torch.float64)
tensor([-30.6759, -40.1049, -29.5609, -52.3220, -32.3190], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0140, device='cuda:0', dtype=torch.float64)
tensor([-31.0709, -39.5472, -29.4324, -53.0412, -32.0767], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8693, device='cuda:0', dtype=torch.float64)
tensor([-31.2696, -39.0864, -29.3782, -53.6143, -31.7550], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8908, device='cuda:0', dtype=torch.float64)
tensor([-31.4543, -38.8510, -29.4512, -54.2207, -31.3752], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9971, device='cuda:0', dtype=torch.float64)
tensor([-31.6044, -38.4042, -29.4809, -54.2684, -30.8639], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8806, device='cuda:0', dtype=torch.float64)
tensor([-31.6991, -38.0503, -29.4767, -53.8754, -30.4213], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0104, device='cuda:0', dtype=torch.float64)
tensor([-31.7453, -37.7459, -29.2959, -53.1991, -29.9427], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7017, device='cuda:0', dtype=torch.float64)
tensor([-31.6276, -37.4252, -29.0596, -52.5395, -29.6509], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8275, device='cuda:0', dtype=torch.float64)
tensor([-31.6987, -37.0090, -29.0106, -51.9244, -29.3108], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7817, device='cuda:0', dtype=torch.float64)
tensor([-31.7535, -36.4266, -28.9925, -51.4745, -29.1746], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8311, device='cuda:0', dtype=torch.float64)
tensor([-31.7859, -36.0855, -28.9274, -51.0047, -29.2923], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9298, device='cuda:0', dtype=torch.float64)
tensor([-31.9414, -35.8182, -28.9680, -50.5580, -29.4407], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8286, device='cuda:0', dtype=torch.float64)
tensor([-32.3057, -35.4291, -28.9967, -50.3897, -29.6001], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8441, device='cuda:0', dtype=torch.float64)
tensor([-32.5803, -35.1430, -28.9981, -50.2651, -29.7629], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7036, device='cuda:0', dtype=torch.float64)
tensor([-32.8161, -35.1342, -29.0104, -50.3276, -30.0982], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7041, device='cuda:0', dtype=torch.float64)
tensor([-32.9350, -34.9501, -28.9767, -50.1147, -30.3150], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7942, device='cuda:0', dtype=torch.float64)
tensor([-32.8360, -34.7426, -28.9376, -49.6707, -30.4638], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8390, device='cuda:0', dtype=torch.float64)
tensor([-32.9310, -34.9530, -29.1233, -49.7225, -30.7198], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7459, device='cuda:0', dtype=torch.float64)
tensor([-32.8863, -35.2697, -29.3009, -49.6611, -31.0853], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0008, device='cuda:0', dtype=torch.float64)
tensor([-32.9735, -35.5770, -29.2796, -49.8904, -31.5731], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9391, device='cuda:0', dtype=torch.float64)
tensor([-33.0552, -35.8359, -29.2147, -49.9271, -31.9152], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7948, device='cuda:0', dtype=torch.float64)
tensor([-33.3363, -36.0369, -29.2689, -50.3592, -32.3129], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8876, device='cuda:0', dtype=torch.float64)
tensor([-33.7111, -36.4015, -29.4671, -51.0434, -32.6711], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8619, device='cuda:0', dtype=torch.float64)
tensor([-34.1238, -37.1624, -29.5505, -51.8581, -33.1264], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6467, device='cuda:0', dtype=torch.float64)
tensor([-34.4897, -37.7255, -29.7262, -52.5362, -33.4720], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9565, device='cuda:0', dtype=torch.float64)
tensor([-34.5140, -38.0340, -29.6770, -52.7951, -33.6369], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5936, device='cuda:0', dtype=torch.float64)
tensor([-34.6378, -38.2400, -29.7803, -53.1184, -33.7953], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8520, device='cuda:0', dtype=torch.float64)
tensor([-34.8351, -38.6059, -29.8776, -53.6282, -34.0341], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7727, device='cuda:0', dtype=torch.float64)
tensor([-35.0580, -38.9958, -30.0180, -54.0563, -34.4091], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8108, device='cuda:0', dtype=torch.float64)
tensor([-35.2747, -39.0992, -30.1060, -54.4632, -34.4914], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8923, device='cuda:0', dtype=torch.float64)
tensor([-35.6723, -39.3877, -30.2426, -55.0554, -34.7617], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9423, device='cuda:0', dtype=torch.float64)
tensor([-36.1179, -39.3549, -30.4471, -55.4188, -35.0040], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8622, device='cuda:0', dtype=torch.float64)
tensor([-36.6549, -39.5122, -30.7842, -56.1482, -35.3909], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8532, device='cuda:0', dtype=torch.float64)
tensor([-37.0257, -39.5239, -31.0765, -56.6151, -35.7228], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7429, device='cuda:0', dtype=torch.float64)
tensor([-37.3999, -39.3264, -31.2968, -56.8105, -35.9647], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7673, device='cuda:0', dtype=torch.float64)
tensor([-37.8981, -39.1445, -31.6512, -56.9364, -36.2389], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7048, device='cuda:0', dtype=torch.float64)
tensor([-38.4041, -38.9682, -32.0420, -56.8852, -36.4633], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9573, device='cuda:0', dtype=torch.float64)
tensor([-38.8722, -38.5823, -32.4441, -56.8026, -36.5294], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8198, device='cuda:0', dtype=torch.float64)
tensor([-39.2325, -37.9573, -32.6396, -56.4163, -36.3953], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8491, device='cuda:0', dtype=torch.float64)
tensor([-39.4183, -37.4099, -32.8857, -55.9754, -36.4521], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7634, device='cuda:0', dtype=torch.float64)
tensor([-39.6939, -36.9205, -33.2163, -55.6104, -36.3993], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7192, device='cuda:0', dtype=torch.float64)
tensor([-40.0852, -36.2369, -33.4127, -55.3180, -36.3606], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8596, device='cuda:0', dtype=torch.float64)
tensor([-40.3985, -35.9769, -33.5625, -55.0424, -36.3979], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7314, device='cuda:0', dtype=torch.float64)
tensor([-40.7442, -35.3064, -33.5862, -54.7187, -36.1835], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9390, device='cuda:0', dtype=torch.float64)
tensor([-40.8917, -34.5073, -33.6624, -54.5289, -36.0126], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8417, device='cuda:0', dtype=torch.float64)
tensor([-41.1684, -33.7864, -33.9623, -54.6655, -35.9392], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7815, device='cuda:0', dtype=torch.float64)
tensor([-41.1088, -33.2790, -34.2517, -54.6977, -35.9261], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7378, device='cuda:0', dtype=torch.float64)
tensor([-41.0446, -32.7396, -34.4128, -54.6567, -35.7644], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9640, device='cuda:0', dtype=torch.float64)
tensor([-41.2071, -32.4583, -34.6845, -55.1072, -35.7169], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6809, device='cuda:0', dtype=torch.float64)
tensor([-41.2345, -32.2636, -34.8897, -55.2587, -35.6719], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6670, device='cuda:0', dtype=torch.float64)
tensor([-41.1447, -32.1013, -34.9661, -55.2913, -35.6633], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7509, device='cuda:0', dtype=torch.float64)
tensor([-40.9679, -32.0465, -35.0719, -55.5796, -35.5959], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8572, device='cuda:0', dtype=torch.float64)
tensor([-41.0751, -31.6596, -35.1892, -56.0859, -35.4134], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7668, device='cuda:0', dtype=torch.float64)
tensor([-41.4698, -31.2213, -35.4270, -56.9491, -35.2160], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7168, device='cuda:0', dtype=torch.float64)
tensor([-42.0827, -30.8149, -35.7226, -58.1776, -35.0841], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7196, device='cuda:0', dtype=torch.float64)
tensor([-42.7039, -30.4428, -36.0014, -59.3657, -35.0462], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7472, device='cuda:0', dtype=torch.float64)
tensor([-43.3296, -30.4435, -36.3045, -60.5426, -35.2234], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7093, device='cuda:0', dtype=torch.float64)
tensor([-44.1323, -30.2860, -36.4961, -61.8163, -35.3896], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8114, device='cuda:0', dtype=torch.float64)
tensor([-44.8897, -29.9528, -36.6389, -62.9718, -35.3754], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6154, device='cuda:0', dtype=torch.float64)
tensor([-45.6874, -29.9539, -36.8102, -64.0702, -35.4095], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6645, device='cuda:0', dtype=torch.float64)
tensor([-46.2218, -30.0187, -36.9520, -64.7527, -35.3332], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7939, device='cuda:0', dtype=torch.float64)
tensor([-46.5409, -30.1422, -37.1104, -65.0706, -35.1077], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8213, device='cuda:0', dtype=torch.float64)
tensor([-46.4968, -30.1650, -37.2474, -65.1365, -34.9500], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8492, device='cuda:0', dtype=torch.float64)
tensor([-46.7768, -30.7177, -37.5557, -65.9097, -35.0054], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7818, device='cuda:0', dtype=torch.float64)
tensor([-46.8081, -31.0058, -37.7604, -66.5075, -35.0822], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8481, device='cuda:0', dtype=torch.float64)
tensor([-46.8917, -31.3353, -38.0455, -67.2023, -35.1776], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7554, device='cuda:0', dtype=torch.float64)
tensor([-46.8099, -31.8265, -38.3071, -67.7920, -35.3108], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7794, device='cuda:0', dtype=torch.float64)
tensor([-46.5381, -32.1695, -38.3888, -68.2683, -35.4996], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0999, device='cuda:0', dtype=torch.float64)
tensor([-46.6908, -32.9016, -38.5059, -69.4643, -35.8317], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7443, device='cuda:0', dtype=torch.float64)
tensor([-46.6233, -33.5270, -38.5912, -70.3287, -36.1569], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7904, device='cuda:0', dtype=torch.float64)
tensor([-46.8187, -34.4200, -38.7106, -71.3707, -36.5905], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8402, device='cuda:0', dtype=torch.float64)
tensor([-47.0586, -35.7649, -38.7938, -72.5302, -37.2226], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6716, device='cuda:0', dtype=torch.float64)
tensor([-47.5586, -36.8414, -38.9124, -73.5863, -37.8772], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6356, device='cuda:0', dtype=torch.float64)
tensor([-48.4300, -38.0957, -39.2526, -74.8830, -38.7982], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8439, device='cuda:0', dtype=torch.float64)
tensor([-49.5347, -39.4778, -39.7020, -76.4657, -39.8363], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6020, device='cuda:0', dtype=torch.float64)
tensor([-50.9769, -40.9102, -40.2308, -78.1536, -41.0130], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8313, device='cuda:0', dtype=torch.float64)
tensor([-51.8985, -41.8712, -40.4555, -79.2805, -41.8290], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8135, device='cuda:0', dtype=torch.float64)
tensor([-52.0452, -42.5574, -40.2814, -79.6635, -42.3960], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7489, device='cuda:0', dtype=torch.float64)
tensor([-52.0164, -43.0430, -40.0523, -79.6957, -42.9411], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6868, device='cuda:0', dtype=torch.float64)
tensor([-51.6828, -43.2712, -39.8726, -79.0787, -43.2715], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7389, device='cuda:0', dtype=torch.float64)
tensor([-51.1684, -43.4733, -39.4395, -78.5123, -43.6771], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9267, device='cuda:0', dtype=torch.float64)
tensor([-50.2367, -43.6401, -38.8291, -77.7020, -43.9912], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4911, device='cuda:0', dtype=torch.float64)
tensor([-49.4575, -43.8040, -38.2910, -76.9724, -44.2015], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7422, device='cuda:0', dtype=torch.float64)
tensor([-48.6257, -44.0453, -37.6903, -76.0669, -44.5018], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7276, device='cuda:0', dtype=torch.float64)
tensor([-47.8869, -44.2043, -37.1944, -75.3360, -44.7545], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6252, device='cuda:0', dtype=torch.float64)
tensor([-47.4213, -44.2174, -36.8704, -74.7695, -44.8399], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6324, device='cuda:0', dtype=torch.float64)
tensor([-46.9855, -44.2796, -36.5560, -74.2451, -44.8286], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6561, device='cuda:0', dtype=torch.float64)
tensor([-46.7203, -44.1494, -36.2686, -73.5870, -44.6282], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7048, device='cuda:0', dtype=torch.float64)
tensor([-46.8450, -44.3031, -36.1246, -73.3398, -44.6010], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5791, device='cuda:0', dtype=torch.float64)
tensor([-46.5407, -44.4073, -35.9040, -72.7003, -44.5718], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6681, device='cuda:0', dtype=torch.float64)
tensor([-45.9305, -44.5372, -35.6671, -71.9401, -44.6874], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7230, device='cuda:0', dtype=torch.float64)
tensor([-45.6925, -44.7098, -35.4990, -71.4991, -44.8161], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6520, device='cuda:0', dtype=torch.float64)
tensor([-45.4255, -45.0247, -35.3059, -71.1332, -44.9721], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6801, device='cuda:0', dtype=torch.float64)
tensor([-45.3046, -45.9281, -35.2367, -71.1740, -45.3890], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7445, device='cuda:0', dtype=torch.float64)
tensor([-44.8838, -46.7294, -34.9125, -70.9057, -45.5709], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6686, device='cuda:0', dtype=torch.float64)
tensor([-44.5329, -47.4347, -34.7073, -70.6176, -45.6775], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6024, device='cuda:0', dtype=torch.float64)
tensor([-43.9680, -48.2266, -34.4173, -70.2078, -45.9497], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6111, device='cuda:0', dtype=torch.float64)
tensor([-43.3174, -49.0869, -34.1829, -69.8019, -46.3267], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7477, device='cuda:0', dtype=torch.float64)
tensor([-42.7503, -49.7636, -33.9333, -69.3320, -46.4017], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7019, device='cuda:0', dtype=torch.float64)
tensor([-42.1330, -50.3927, -33.6788, -68.8340, -46.6644], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6767, device='cuda:0', dtype=torch.float64)
tensor([-41.7989, -50.5659, -33.5820, -68.6903, -46.6727], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6991, device='cuda:0', dtype=torch.float64)
tensor([-41.6744, -50.5720, -33.4657, -68.7424, -46.5971], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6984, device='cuda:0', dtype=torch.float64)
tensor([-41.4096, -50.6107, -33.3503, -68.7466, -46.5274], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5544, device='cuda:0', dtype=torch.float64)
tensor([-41.1723, -50.6456, -33.2816, -68.6541, -46.4926], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6833, device='cuda:0', dtype=torch.float64)
tensor([-40.8348, -50.7161, -33.1436, -68.5542, -46.4444], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5777, device='cuda:0', dtype=torch.float64)
tensor([-40.5062, -50.5105, -33.2416, -68.4894, -46.3495], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7542, device='cuda:0', dtype=torch.float64)
tensor([-40.0178, -50.3663, -33.1847, -68.0266, -46.1090], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6097, device='cuda:0', dtype=torch.float64)
tensor([-39.7826, -50.2338, -33.2983, -67.7310, -45.9113], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5816, device='cuda:0', dtype=torch.float64)
tensor([-39.7615, -50.3238, -33.6449, -67.7783, -45.9482], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6200, device='cuda:0', dtype=torch.float64)
tensor([-40.0050, -50.1317, -34.1330, -68.1177, -45.6544], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7077, device='cuda:0', dtype=torch.float64)
tensor([-40.6599, -49.9602, -34.7210, -68.9631, -45.4003], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5947, device='cuda:0', dtype=torch.float64)
tensor([-41.2890, -49.5403, -35.3415, -69.8386, -44.9656], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7116, device='cuda:0', dtype=torch.float64)
tensor([-41.4861, -49.3088, -35.7673, -70.3798, -44.6547], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6035, device='cuda:0', dtype=torch.float64)
tensor([-41.9026, -49.3156, -36.1857, -71.0155, -44.3528], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6078, device='cuda:0', dtype=torch.float64)
tensor([-42.4792, -49.4425, -36.5224, -71.9406, -44.2369], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6801, device='cuda:0', dtype=torch.float64)
tensor([-42.9445, -49.5690, -36.7410, -72.6289, -44.1567], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7158, device='cuda:0', dtype=torch.float64)
tensor([-43.4555, -49.7718, -36.9846, -73.2960, -44.1867], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5504, device='cuda:0', dtype=torch.float64)
tensor([-43.9868, -49.7790, -37.1604, -73.9273, -44.1686], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7577, device='cuda:0', dtype=torch.float64)
tensor([-44.3345, -49.8536, -37.2894, -74.3191, -44.2049], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6506, device='cuda:0', dtype=torch.float64)
tensor([-44.6770, -49.8859, -37.3575, -74.5819, -44.3397], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6397, device='cuda:0', dtype=torch.float64)
tensor([-45.0499, -49.6789, -37.5847, -74.6152, -44.3899], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6745, device='cuda:0', dtype=torch.float64)
tensor([-45.4873, -49.6041, -37.9336, -74.8098, -44.6297], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7277, device='cuda:0', dtype=torch.float64)
tensor([-46.2314, -49.6457, -38.3195, -75.3849, -44.8585], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6210, device='cuda:0', dtype=torch.float64)
tensor([-46.7914, -49.6980, -38.7022, -75.4059, -45.0442], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6873, device='cuda:0', dtype=torch.float64)
tensor([-47.2383, -49.6617, -38.9381, -75.2755, -45.1443], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5469, device='cuda:0', dtype=torch.float64)
tensor([-47.6813, -49.8684, -39.1697, -75.1902, -45.2639], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5899, device='cuda:0', dtype=torch.float64)
tensor([-48.2933, -50.3936, -39.5103, -75.4144, -45.4812], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6114, device='cuda:0', dtype=torch.float64)
tensor([-48.4310, -51.0839, -39.6587, -75.4375, -45.7849], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5008, device='cuda:0', dtype=torch.float64)
tensor([-48.2068, -51.7308, -39.6603, -75.1839, -46.1253], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5924, device='cuda:0', dtype=torch.float64)
tensor([-48.2179, -52.3472, -39.7562, -75.0967, -46.5600], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6716, device='cuda:0', dtype=torch.float64)
tensor([-48.0296, -52.6450, -39.7116, -74.7587, -46.9037], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5696, device='cuda:0', dtype=torch.float64)
tensor([-47.8746, -52.9554, -39.4685, -74.6384, -47.2165], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5614, device='cuda:0', dtype=torch.float64)
tensor([-47.6462, -53.0674, -39.2889, -74.3967, -47.2927], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5366, device='cuda:0', dtype=torch.float64)
tensor([-47.3067, -53.2316, -38.9620, -73.8919, -47.3317], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5164, device='cuda:0', dtype=torch.float64)
tensor([-46.8012, -53.2848, -38.5553, -73.2773, -47.3281], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7250, device='cuda:0', dtype=torch.float64)
tensor([-46.1601, -53.2914, -37.9388, -72.4410, -47.0449], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6882, device='cuda:0', dtype=torch.float64)
tensor([-45.5971, -52.9912, -37.2990, -71.7721, -46.5915], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6178, device='cuda:0', dtype=torch.float64)
tensor([-45.1314, -52.5859, -36.6977, -71.0244, -46.0817], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5735, device='cuda:0', dtype=torch.float64)
tensor([-44.6519, -52.1123, -36.0318, -70.2235, -45.5060], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6065, device='cuda:0', dtype=torch.float64)
tensor([-44.2875, -51.5141, -35.5752, -69.5353, -44.9525], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6398, device='cuda:0', dtype=torch.float64)
tensor([-44.0769, -51.0896, -35.3082, -69.0503, -44.5770], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5934, device='cuda:0', dtype=torch.float64)
tensor([-43.8353, -50.9025, -35.0731, -68.5329, -44.3148], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5125, device='cuda:0', dtype=torch.float64)
tensor([-43.6910, -50.7663, -34.7330, -68.1341, -44.0962], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5995, device='cuda:0', dtype=torch.float64)
tensor([-43.5161, -50.6572, -34.4351, -67.7008, -43.9203], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6843, device='cuda:0', dtype=torch.float64)
tensor([-43.1537, -50.8089, -34.0754, -67.0926, -43.9008], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6445, device='cuda:0', dtype=torch.float64)
tensor([-43.1206, -50.8758, -33.9736, -66.6937, -43.8922], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5824, device='cuda:0', dtype=torch.float64)
tensor([-42.8724, -51.1685, -33.8460, -66.2537, -43.8902], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5949, device='cuda:0', dtype=torch.float64)
tensor([-42.6056, -51.2519, -33.6263, -66.0253, -43.8301], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4125, device='cuda:0', dtype=torch.float64)
tensor([-42.3193, -51.2183, -33.4019, -65.6956, -43.6447], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4626, device='cuda:0', dtype=torch.float64)
tensor([-41.9724, -51.1289, -33.1601, -65.3126, -43.5130], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6904, device='cuda:0', dtype=torch.float64)
tensor([-41.8042, -51.2345, -33.0544, -65.2766, -43.4126], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5115, device='cuda:0', dtype=torch.float64)
tensor([-41.9182, -51.2547, -33.0189, -65.3922, -43.2667], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6781, device='cuda:0', dtype=torch.float64)
tensor([-41.7698, -51.0110, -32.8190, -65.1695, -42.9121], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5747, device='cuda:0', dtype=torch.float64)
tensor([-41.6692, -50.9978, -32.6920, -64.9746, -42.7338], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4738, device='cuda:0', dtype=torch.float64)
tensor([-41.6093, -51.1257, -32.5917, -64.9174, -42.7106], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5658, device='cuda:0', dtype=torch.float64)
tensor([-41.8389, -51.5098, -32.6898, -65.1548, -42.8615], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6161, device='cuda:0', dtype=torch.float64)
tensor([-41.8398, -51.5480, -32.7431, -65.3207, -42.9224], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5441, device='cuda:0', dtype=torch.float64)
tensor([-41.9697, -51.5951, -32.8995, -65.5839, -42.9555], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5471, device='cuda:0', dtype=torch.float64)
tensor([-41.8414, -51.4597, -32.9581, -65.9073, -43.0293], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4607, device='cuda:0', dtype=torch.float64)
tensor([-41.8021, -51.5314, -33.0423, -66.3020, -43.1982], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5888, device='cuda:0', dtype=torch.float64)
tensor([-41.5165, -51.6395, -33.0262, -66.4432, -43.3653], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5311, device='cuda:0', dtype=torch.float64)
tensor([-41.4525, -51.8731, -32.9567, -66.5223, -43.5031], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5402, device='cuda:0', dtype=torch.float64)
tensor([-41.5474, -52.1873, -32.9522, -66.5255, -43.5917], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6973, device='cuda:0', dtype=torch.float64)
tensor([-41.7876, -52.1092, -33.0138, -66.5351, -43.4033], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5157, device='cuda:0', dtype=torch.float64)
tensor([-41.9875, -52.0158, -32.9246, -66.2780, -43.2256], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5350, device='cuda:0', dtype=torch.float64)
tensor([-42.3090, -51.7670, -32.9108, -66.0783, -43.0286], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4177, device='cuda:0', dtype=torch.float64)
tensor([-42.5865, -51.5213, -32.8110, -65.7698, -42.7912], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5213, device='cuda:0', dtype=torch.float64)
tensor([-42.5256, -51.2980, -32.6966, -65.3538, -42.5698], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6308, device='cuda:0', dtype=torch.float64)
tensor([-42.3689, -50.8751, -32.4358, -65.0708, -42.3000], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6052, device='cuda:0', dtype=torch.float64)
tensor([-42.3734, -50.2895, -32.3906, -65.0095, -42.0048], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5183, device='cuda:0', dtype=torch.float64)
tensor([-42.5918, -49.8173, -32.5632, -65.0646, -41.8420], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5773, device='cuda:0', dtype=torch.float64)
tensor([-42.6879, -49.4763, -32.6932, -65.0850, -41.6893], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5661, device='cuda:0', dtype=torch.float64)
tensor([-42.8581, -49.3185, -32.8861, -65.4297, -41.7361], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4662, device='cuda:0', dtype=torch.float64)
tensor([-43.1877, -49.4161, -33.1036, -65.8625, -41.9285], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5432, device='cuda:0', dtype=torch.float64)
tensor([-43.2825, -49.4842, -33.3208, -65.9896, -41.9601], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5689, device='cuda:0', dtype=torch.float64)
tensor([-43.5845, -49.7256, -33.6731, -66.4444, -42.1496], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4703, device='cuda:0', dtype=torch.float64)
tensor([-43.9074, -49.8640, -34.0586, -66.9447, -42.3313], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4687, device='cuda:0', dtype=torch.float64)
tensor([-44.2939, -50.1847, -34.6177, -67.4921, -42.4934], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5205, device='cuda:0', dtype=torch.float64)
tensor([-44.6831, -50.3066, -35.0849, -67.9474, -42.6535], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4678, device='cuda:0', dtype=torch.float64)
tensor([-44.9848, -50.2539, -35.4413, -68.3517, -42.6954], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4744, device='cuda:0', dtype=torch.float64)
tensor([-45.3379, -50.5189, -35.6938, -68.7452, -42.9195], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6058, device='cuda:0', dtype=torch.float64)
tensor([-45.6830, -50.8466, -35.9079, -69.1851, -43.0766], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5609, device='cuda:0', dtype=torch.float64)
tensor([-46.0421, -51.3178, -36.3115, -69.8512, -43.3315], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4537, device='cuda:0', dtype=torch.float64)
tensor([-46.5024, -51.7308, -36.7623, -70.4545, -43.7269], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5417, device='cuda:0', dtype=torch.float64)
tensor([-47.1087, -52.1011, -37.3209, -71.0830, -44.1159], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4619, device='cuda:0', dtype=torch.float64)
tensor([-47.5497, -52.4236, -37.8559, -71.4999, -44.3529], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5101, device='cuda:0', dtype=torch.float64)
tensor([-47.8898, -52.8890, -38.3125, -71.8172, -44.6668], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4948, device='cuda:0', dtype=torch.float64)
tensor([-48.0355, -53.3180, -38.5785, -72.0377, -44.9015], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4942, device='cuda:0', dtype=torch.float64)
tensor([-48.2410, -53.9125, -38.9308, -72.2902, -45.2521], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5271, device='cuda:0', dtype=torch.float64)
tensor([-48.2908, -54.4378, -39.1492, -72.4719, -45.6716], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5209, device='cuda:0', dtype=torch.float64)
tensor([-48.4786, -54.8189, -39.3677, -72.6150, -46.0476], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4436, device='cuda:0', dtype=torch.float64)
tensor([-48.5145, -55.2263, -39.5247, -72.7087, -46.4304], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5391, device='cuda:0', dtype=torch.float64)
tensor([-48.4376, -55.5402, -39.5983, -72.5297, -46.6740], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5460, device='cuda:0', dtype=torch.float64)
tensor([-48.1567, -55.9323, -39.4702, -72.2651, -46.9583], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6038, device='cuda:0', dtype=torch.float64)
tensor([-47.9193, -56.7685, -39.4634, -72.0019, -47.2858], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5991, device='cuda:0', dtype=torch.float64)
tensor([-47.8016, -57.4008, -39.5242, -72.0378, -47.5236], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6266, device='cuda:0', dtype=torch.float64)
tensor([-47.3427, -57.9632, -39.3836, -71.9473, -47.5527], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4546, device='cuda:0', dtype=torch.float64)
tensor([-46.8223, -58.4001, -39.1678, -71.8612, -47.4827], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5359, device='cuda:0', dtype=torch.float64)
tensor([-46.3025, -58.9853, -38.9230, -71.7580, -47.4918], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4225, device='cuda:0', dtype=torch.float64)
tensor([-45.8975, -59.5731, -38.8618, -71.6189, -47.4826], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4945, device='cuda:0', dtype=torch.float64)
tensor([-45.3777, -60.2311, -38.6583, -71.3096, -47.3709], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4517, device='cuda:0', dtype=torch.float64)
tensor([-44.9387, -60.7061, -38.5029, -71.1736, -47.0736], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4062, device='cuda:0', dtype=torch.float64)
tensor([-44.5615, -61.4571, -38.4064, -71.0188, -46.8970], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3911, device='cuda:0', dtype=torch.float64)
tensor([-44.0794, -62.1886, -38.1347, -70.9268, -46.6791], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4482, device='cuda:0', dtype=torch.float64)
tensor([-43.6630, -62.5871, -37.8658, -70.7534, -46.3952], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4922, device='cuda:0', dtype=torch.float64)
tensor([-43.1328, -62.8597, -37.3596, -70.2669, -46.0947], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5024, device='cuda:0', dtype=torch.float64)
tensor([-42.6678, -63.1338, -37.0614, -69.9469, -45.7119], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5907, device='cuda:0', dtype=torch.float64)
tensor([-42.1264, -63.0293, -36.6257, -69.4915, -45.1861], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4580, device='cuda:0', dtype=torch.float64)
tensor([-41.8280, -62.9475, -36.4259, -69.3248, -44.7985], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4990, device='cuda:0', dtype=torch.float64)
tensor([-41.6179, -62.6211, -36.2109, -69.1944, -44.3250], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5429, device='cuda:0', dtype=torch.float64)
tensor([-41.4334, -62.1624, -36.0947, -69.0779, -43.9196], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4414, device='cuda:0', dtype=torch.float64)
tensor([-41.0045, -61.8373, -35.8615, -68.6928, -43.5265], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4856, device='cuda:0', dtype=torch.float64)
tensor([-40.5929, -61.4208, -35.6115, -68.2610, -43.1085], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4404, device='cuda:0', dtype=torch.float64)
tensor([-40.3047, -60.9672, -35.4554, -67.9654, -42.7056], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4632, device='cuda:0', dtype=torch.float64)
tensor([-40.0313, -60.4858, -35.2035, -67.5966, -42.2442], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4663, device='cuda:0', dtype=torch.float64)
tensor([-39.5602, -60.2039, -34.8977, -67.2473, -41.7997], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3972, device='cuda:0', dtype=torch.float64)
tensor([-39.1309, -60.0083, -34.5768, -66.8806, -41.5075], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3862, device='cuda:0', dtype=torch.float64)
tensor([-38.6537, -59.7035, -34.3126, -66.3898, -41.2377], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4340, device='cuda:0', dtype=torch.float64)
tensor([-38.2837, -59.5494, -34.0663, -66.0139, -41.0480], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5354, device='cuda:0', dtype=torch.float64)
tensor([-37.8584, -59.2986, -33.8117, -65.6159, -40.9547], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4908, device='cuda:0', dtype=torch.float64)
tensor([-37.5122, -59.2664, -33.6539, -65.4175, -40.9571], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4407, device='cuda:0', dtype=torch.float64)
tensor([-37.0524, -59.3979, -33.3252, -65.2235, -40.8739], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4329, device='cuda:0', dtype=torch.float64)
tensor([-36.6658, -59.5169, -33.1069, -65.2117, -40.8883], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4604, device='cuda:0', dtype=torch.float64)
tensor([-36.2278, -59.8083, -32.8586, -65.2130, -40.9132], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3987, device='cuda:0', dtype=torch.float64)
tensor([-35.8399, -59.8391, -32.6406, -65.3533, -40.9233], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4228, device='cuda:0', dtype=torch.float64)
tensor([-35.4748, -59.9049, -32.4567, -65.3393, -40.9157], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4562, device='cuda:0', dtype=torch.float64)
tensor([-35.0451, -59.9859, -32.2553, -65.2085, -40.8204], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4578, device='cuda:0', dtype=torch.float64)
tensor([-34.5968, -60.1042, -32.1206, -65.0979, -40.7731], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4673, device='cuda:0', dtype=torch.float64)
tensor([-34.2424, -60.2316, -32.0349, -65.0139, -40.7099], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4564, device='cuda:0', dtype=torch.float64)
tensor([-33.9737, -60.0293, -32.1113, -65.0345, -40.6504], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3883, device='cuda:0', dtype=torch.float64)
tensor([-33.8455, -59.7242, -32.1728, -65.1458, -40.6354], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3669, device='cuda:0', dtype=torch.float64)
tensor([-33.7731, -59.3130, -32.2609, -65.3184, -40.6603], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4200, device='cuda:0', dtype=torch.float64)
tensor([-33.6815, -58.9758, -32.2698, -65.5098, -40.6828], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4260, device='cuda:0', dtype=torch.float64)
tensor([-33.4935, -58.5849, -32.1614, -65.5199, -40.7235], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4549, device='cuda:0', dtype=torch.float64)
tensor([-33.4783, -58.2913, -32.1809, -65.8228, -40.9065], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5421, device='cuda:0', dtype=torch.float64)
tensor([-33.1800, -58.0217, -32.0254, -65.8219, -41.0400], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3734, device='cuda:0', dtype=torch.float64)
tensor([-32.8027, -57.8293, -31.8536, -65.8008, -41.1479], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4292, device='cuda:0', dtype=torch.float64)
tensor([-32.5017, -57.8558, -31.7377, -65.7671, -41.1883], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4993, device='cuda:0', dtype=torch.float64)
tensor([-32.3232, -57.9853, -31.6351, -65.7742, -41.2728], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3710, device='cuda:0', dtype=torch.float64)
tensor([-32.2870, -58.0179, -31.5407, -65.9396, -41.3421], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4141, device='cuda:0', dtype=torch.float64)
tensor([-32.2179, -57.8442, -31.4404, -65.9612, -41.3459], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4469, device='cuda:0', dtype=torch.float64)
tensor([-32.1244, -57.4974, -31.3091, -66.0683, -41.4042], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3654, device='cuda:0', dtype=torch.float64)
tensor([-32.1947, -57.4189, -31.3418, -66.3914, -41.6060], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4323, device='cuda:0', dtype=torch.float64)
tensor([-32.2879, -57.1894, -31.3572, -66.7669, -41.7735], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4088, device='cuda:0', dtype=torch.float64)
tensor([-32.3691, -56.9728, -31.4023, -67.0563, -41.9366], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4771, device='cuda:0', dtype=torch.float64)
tensor([-32.5044, -56.7094, -31.4858, -67.4708, -42.0467], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3542, device='cuda:0', dtype=torch.float64)
tensor([-32.5621, -56.5614, -31.6082, -67.8047, -42.1825], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4209, device='cuda:0', dtype=torch.float64)
tensor([-32.4354, -56.4594, -31.5874, -67.8200, -42.3428], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3644, device='cuda:0', dtype=torch.float64)
tensor([-32.2538, -56.3940, -31.4291, -67.5611, -42.4436], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3931, device='cuda:0', dtype=torch.float64)
tensor([-31.9516, -56.5466, -31.2472, -67.1448, -42.5270], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4036, device='cuda:0', dtype=torch.float64)
tensor([-31.8467, -56.8344, -31.2534, -67.0581, -42.7291], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4366, device='cuda:0', dtype=torch.float64)
tensor([-31.9038, -57.2255, -31.3871, -67.2116, -43.0410], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3667, device='cuda:0', dtype=torch.float64)
tensor([-32.0880, -57.5774, -31.5530, -67.4168, -43.4674], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4018, device='cuda:0', dtype=torch.float64)
tensor([-32.3237, -58.0794, -31.7667, -67.6316, -43.9032], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4536, device='cuda:0', dtype=torch.float64)
tensor([-32.4642, -58.2253, -31.8419, -67.6322, -44.0927], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4170, device='cuda:0', dtype=torch.float64)
tensor([-32.6329, -58.3574, -31.9960, -67.7177, -44.3373], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3523, device='cuda:0', dtype=torch.float64)
tensor([-32.8797, -58.5087, -32.1600, -67.8852, -44.5985], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3642, device='cuda:0', dtype=torch.float64)
tensor([-33.1869, -58.6527, -32.3398, -68.0773, -44.8066], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3762, device='cuda:0', dtype=torch.float64)
tensor([-33.4475, -58.9410, -32.5645, -68.2874, -45.0180], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3613, device='cuda:0', dtype=torch.float64)
tensor([-33.6431, -59.2875, -32.8029, -68.4513, -45.1673], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3662, device='cuda:0', dtype=torch.float64)
tensor([-33.9186, -59.6559, -33.1460, -68.6551, -45.2426], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4046, device='cuda:0', dtype=torch.float64)
tensor([-34.2665, -59.9425, -33.3905, -68.8947, -45.4351], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3459, device='cuda:0', dtype=torch.float64)
tensor([-34.5613, -60.2063, -33.4642, -68.9532, -45.5545], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4556, device='cuda:0', dtype=torch.float64)
tensor([-34.9020, -60.5420, -33.5866, -69.2575, -45.6827], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2931, device='cuda:0', dtype=torch.float64)
tensor([-35.2811, -60.8755, -33.6971, -69.6231, -45.7846], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3719, device='cuda:0', dtype=torch.float64)
tensor([-35.5332, -61.1272, -33.7880, -69.8880, -45.8102], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3910, device='cuda:0', dtype=torch.float64)
tensor([-35.7833, -61.1950, -33.8731, -70.0063, -45.7698], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4068, device='cuda:0', dtype=torch.float64)
tensor([-36.0569, -61.0685, -33.8337, -70.0022, -45.6211], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3418, device='cuda:0', dtype=torch.float64)
tensor([-36.4487, -60.7876, -33.6966, -70.0743, -45.4827], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3476, device='cuda:0', dtype=torch.float64)
tensor([-36.8270, -60.4326, -33.5695, -70.1310, -45.3020], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3921, device='cuda:0', dtype=torch.float64)
tensor([-36.9385, -60.1100, -33.3891, -69.8936, -45.0657], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3171, device='cuda:0', dtype=torch.float64)
tensor([-36.9820, -59.9242, -33.1269, -69.6222, -44.9385], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3666, device='cuda:0', dtype=torch.float64)
tensor([-36.9916, -59.7161, -32.8748, -69.4450, -44.8560], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3281, device='cuda:0', dtype=torch.float64)
tensor([-37.1074, -59.6442, -32.7419, -69.4697, -44.8948], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2980, device='cuda:0', dtype=torch.float64)
tensor([-37.1669, -59.7385, -32.5652, -69.4899, -44.9357], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3444, device='cuda:0', dtype=torch.float64)
tensor([-37.0919, -59.8356, -32.3477, -69.4153, -45.0300], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3318, device='cuda:0', dtype=torch.float64)
tensor([-37.1270, -59.9371, -32.2281, -69.5326, -45.2076], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3788, device='cuda:0', dtype=torch.float64)
tensor([-36.9715, -60.2324, -32.0226, -69.3380, -45.3826], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3797, device='cuda:0', dtype=torch.float64)
tensor([-36.7796, -60.3585, -31.6869, -69.1260, -45.5233], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3518, device='cuda:0', dtype=torch.float64)
tensor([-36.5683, -60.3817, -31.2980, -68.9496, -45.5517], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4231, device='cuda:0', dtype=torch.float64)
tensor([-36.4791, -60.4606, -30.9394, -68.8976, -45.6183], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3561, device='cuda:0', dtype=torch.float64)
tensor([-36.4019, -60.8026, -30.6573, -68.8669, -45.8198], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3326, device='cuda:0', dtype=torch.float64)
tensor([-36.4147, -61.0848, -30.3557, -68.8361, -45.9645], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3049, device='cuda:0', dtype=torch.float64)
tensor([-36.5837, -61.2401, -30.1435, -68.9032, -46.1552], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4170, device='cuda:0', dtype=torch.float64)
tensor([-36.8332, -61.5010, -29.9333, -68.9271, -46.3291], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3426, device='cuda:0', dtype=torch.float64)
tensor([-37.0385, -61.7866, -29.6773, -68.7361, -46.3486], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3338, device='cuda:0', dtype=torch.float64)
tensor([-37.3892, -62.0163, -29.4731, -68.6887, -46.3617], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3776, device='cuda:0', dtype=torch.float64)
tensor([-37.6738, -62.2857, -29.2089, -68.4768, -46.3226], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3045, device='cuda:0', dtype=torch.float64)
tensor([-37.9521, -62.7149, -29.0162, -68.4550, -46.3718], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3109, device='cuda:0', dtype=torch.float64)
tensor([-38.3266, -63.2564, -28.9217, -68.6357, -46.5643], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3889, device='cuda:0', dtype=torch.float64)
tensor([-38.6263, -63.6512, -28.7562, -68.5810, -46.7030], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3639, device='cuda:0', dtype=torch.float64)
tensor([-38.8522, -64.0235, -28.5679, -68.4744, -46.8787], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3462, device='cuda:0', dtype=torch.float64)
tensor([-38.9073, -64.4959, -28.2611, -68.1399, -47.0489], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3106, device='cuda:0', dtype=torch.float64)
tensor([-39.0248, -64.7557, -27.9862, -67.7603, -47.0860], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3061, device='cuda:0', dtype=torch.float64)
tensor([-39.0326, -65.1060, -27.7191, -67.3380, -47.0831], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3167, device='cuda:0', dtype=torch.float64)
tensor([-38.9856, -65.6760, -27.4623, -66.9176, -47.1302], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3266, device='cuda:0', dtype=torch.float64)
tensor([-39.1414, -66.3153, -27.3320, -66.7333, -47.2744], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2793, device='cuda:0', dtype=torch.float64)
tensor([-39.3406, -67.0889, -27.3023, -66.6635, -47.4523], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3050, device='cuda:0', dtype=torch.float64)
tensor([-39.4762, -67.6409, -27.2035, -66.5415, -47.6310], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3181, device='cuda:0', dtype=torch.float64)
tensor([-39.6468, -68.0318, -27.1318, -66.4460, -47.7392], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3366, device='cuda:0', dtype=torch.float64)
tensor([-39.5690, -68.4559, -27.0219, -66.1486, -47.7928], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3581, device='cuda:0', dtype=torch.float64)
tensor([-39.4724, -68.9250, -26.9567, -65.8839, -47.8330], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2765, device='cuda:0', dtype=torch.float64)
tensor([-39.3304, -69.4618, -26.8797, -65.5292, -47.9156], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3094, device='cuda:0', dtype=torch.float64)
tensor([-39.0551, -70.0151, -26.7940, -65.1197, -48.0016], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3281, device='cuda:0', dtype=torch.float64)
tensor([-38.7358, -70.4924, -26.6848, -64.6582, -48.1073], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3445, device='cuda:0', dtype=torch.float64)
tensor([-38.5614, -71.0211, -26.6183, -64.3836, -48.2469], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2659, device='cuda:0', dtype=torch.float64)
tensor([-38.3995, -71.6143, -26.5372, -64.1335, -48.4446], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2972, device='cuda:0', dtype=torch.float64)
tensor([-38.4050, -72.1499, -26.5345, -64.1967, -48.6679], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2791, device='cuda:0', dtype=torch.float64)
tensor([-38.4268, -72.6243, -26.5741, -64.2705, -48.9241], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2950, device='cuda:0', dtype=torch.float64)
tensor([-38.3487, -73.0045, -26.5904, -64.2634, -49.0670], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2869, device='cuda:0', dtype=torch.float64)
tensor([-38.3709, -73.2744, -26.6354, -64.2464, -49.2036], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2559, device='cuda:0', dtype=torch.float64)
tensor([-38.3041, -73.5964, -26.6725, -64.1697, -49.3134], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2703, device='cuda:0', dtype=torch.float64)
tensor([-38.2256, -73.8875, -26.6885, -64.0113, -49.3295], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3131, device='cuda:0', dtype=torch.float64)
tensor([-38.1177, -74.1230, -26.6646, -63.8020, -49.2989], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2690, device='cuda:0', dtype=torch.float64)
tensor([-38.0418, -74.2969, -26.6234, -63.6361, -49.2478], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3580, device='cuda:0', dtype=torch.float64)
tensor([-38.0196, -74.3799, -26.6037, -63.6663, -49.1965], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2575, device='cuda:0', dtype=torch.float64)
tensor([-37.9014, -74.5022, -26.5440, -63.5636, -49.0752], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2220, device='cuda:0', dtype=torch.float64)
tensor([-37.8325, -74.6080, -26.4994, -63.4419, -48.9796], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2698, device='cuda:0', dtype=torch.float64)
tensor([-37.8208, -74.6268, -26.4367, -63.2920, -48.9067], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2690, device='cuda:0', dtype=torch.float64)
tensor([-37.7250, -74.6295, -26.3284, -63.0470, -48.8837], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2635, device='cuda:0', dtype=torch.float64)
tensor([-37.6625, -74.4211, -26.2019, -62.8328, -48.8567], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2241, device='cuda:0', dtype=torch.float64)
tensor([-37.6012, -74.1286, -26.0945, -62.6516, -48.8505], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2805, device='cuda:0', dtype=torch.float64)
tensor([-37.5412, -73.9012, -25.9954, -62.4540, -48.8264], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2606, device='cuda:0', dtype=torch.float64)
tensor([-37.4917, -73.7251, -25.8864, -62.2916, -48.8380], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2663, device='cuda:0', dtype=torch.float64)
tensor([-37.3742, -73.7176, -25.7949, -62.2022, -48.9196], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3090, device='cuda:0', dtype=torch.float64)
tensor([-37.2631, -73.7812, -25.7433, -62.2552, -49.1166], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2797, device='cuda:0', dtype=torch.float64)
tensor([-37.1625, -73.9966, -25.7119, -62.2463, -49.3236], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2565, device='cuda:0', dtype=torch.float64)
tensor([-37.0945, -74.3926, -25.7335, -62.2427, -49.5732], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2977, device='cuda:0', dtype=torch.float64)
tensor([-37.0726, -74.6561, -25.7448, -62.1173, -49.8050], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2177, device='cuda:0', dtype=torch.float64)
tensor([-36.9959, -74.8807, -25.7399, -61.8690, -49.9771], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2383, device='cuda:0', dtype=torch.float64)
tensor([-37.0035, -75.1842, -25.8244, -61.7085, -50.2248], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3163, device='cuda:0', dtype=torch.float64)
tensor([-37.0715, -75.5733, -25.9327, -61.7233, -50.4290], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2842, device='cuda:0', dtype=torch.float64)
tensor([-37.0456, -76.2037, -26.0541, -61.8254, -50.6754], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2471, device='cuda:0', dtype=torch.float64)
tensor([-37.0301, -76.9129, -26.2202, -61.9491, -50.8996], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2434, device='cuda:0', dtype=torch.float64)
tensor([-37.0944, -77.4271, -26.3967, -62.1847, -51.0992], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2679, device='cuda:0', dtype=torch.float64)
tensor([-37.1493, -77.7990, -26.5896, -62.3350, -51.1494], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2327, device='cuda:0', dtype=torch.float64)
tensor([-37.2324, -78.0457, -26.7509, -62.4435, -51.2270], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3140, device='cuda:0', dtype=torch.float64)
tensor([-37.2820, -78.1318, -26.9024, -62.4754, -51.2775], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2638, device='cuda:0', dtype=torch.float64)
tensor([-37.3341, -78.4325, -26.9579, -62.5033, -51.4150], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2321, device='cuda:0', dtype=torch.float64)
tensor([-37.3523, -78.8342, -27.0057, -62.4440, -51.5205], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2344, device='cuda:0', dtype=torch.float64)
tensor([-37.4040, -79.2969, -27.0494, -62.3299, -51.6365], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2277, device='cuda:0', dtype=torch.float64)
tensor([-37.4618, -79.8982, -27.0970, -62.2650, -51.6956], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2471, device='cuda:0', dtype=torch.float64)
tensor([-37.5923, -80.5440, -27.2324, -62.4440, -51.7846], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2461, device='cuda:0', dtype=torch.float64)
tensor([-37.7062, -81.3249, -27.3833, -62.6742, -51.8927], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2214, device='cuda:0', dtype=torch.float64)
tensor([-37.7712, -81.9199, -27.4912, -62.8243, -51.9914], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2592, device='cuda:0', dtype=torch.float64)
tensor([-37.7780, -82.5391, -27.5914, -62.9490, -52.0663], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2324, device='cuda:0', dtype=torch.float64)
tensor([-37.7916, -83.1514, -27.7103, -63.0537, -52.0934], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2164, device='cuda:0', dtype=torch.float64)
tensor([-37.7596, -83.8609, -27.7645, -63.1703, -52.2145], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2206, device='cuda:0', dtype=torch.float64)
tensor([-37.8008, -84.5572, -27.8101, -63.3015, -52.3693], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2731, device='cuda:0', dtype=torch.float64)
tensor([-37.8535, -85.2643, -27.8275, -63.5037, -52.5678], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2177, device='cuda:0', dtype=torch.float64)
tensor([-37.9384, -85.8501, -27.8323, -63.6758, -52.6149], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3048, device='cuda:0', dtype=torch.float64)
tensor([-38.0713, -86.2064, -27.8240, -63.8882, -52.5428], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2649, device='cuda:0', dtype=torch.float64)
tensor([-38.2658, -86.6438, -27.8846, -64.1876, -52.4770], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1962, device='cuda:0', dtype=torch.float64)
tensor([-38.5033, -87.0208, -27.8975, -64.4588, -52.3449], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1994, device='cuda:0', dtype=torch.float64)
tensor([-38.7511, -87.2702, -27.9240, -64.6751, -52.1931], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2280, device='cuda:0', dtype=torch.float64)
tensor([-39.0098, -87.5327, -27.9566, -64.9247, -52.1683], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1840, device='cuda:0', dtype=torch.float64)
tensor([-39.2969, -87.5391, -27.9516, -65.1687, -52.1232], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2106, device='cuda:0', dtype=torch.float64)
tensor([-39.5418, -87.4342, -27.9832, -65.3761, -52.0236], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2043, device='cuda:0', dtype=torch.float64)
tensor([-39.7549, -87.2856, -27.9821, -65.5616, -51.8928], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2383, device='cuda:0', dtype=torch.float64)
tensor([-39.9218, -87.2768, -28.0469, -65.8348, -51.8035], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2559, device='cuda:0', dtype=torch.float64)
tensor([-40.0017, -87.0772, -28.0971, -65.9555, -51.6190], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1904, device='cuda:0', dtype=torch.float64)
tensor([-40.0800, -86.9088, -28.1891, -66.1211, -51.4589], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2247, device='cuda:0', dtype=torch.float64)
tensor([-40.0642, -86.7242, -28.1824, -66.1095, -51.3189], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1845, device='cuda:0', dtype=torch.float64)
tensor([-39.9510, -86.5273, -28.1207, -65.9495, -51.1103], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2598, device='cuda:0', dtype=torch.float64)
tensor([-39.7812, -86.4958, -28.0458, -65.7657, -50.9557], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2471, device='cuda:0', dtype=torch.float64)
tensor([-39.7220, -86.5020, -27.9804, -65.6595, -50.8131], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2210, device='cuda:0', dtype=torch.float64)
tensor([-39.7268, -86.6069, -27.9599, -65.6660, -50.7632], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2157, device='cuda:0', dtype=torch.float64)
tensor([-39.6500, -86.6196, -27.8677, -65.5394, -50.7460], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2415, device='cuda:0', dtype=torch.float64)
tensor([-39.6560, -86.5898, -27.7690, -65.4110, -50.7353], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2105, device='cuda:0', dtype=torch.float64)
tensor([-39.6898, -86.7701, -27.6916, -65.4189, -50.8203], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1728, device='cuda:0', dtype=torch.float64)
tensor([-39.7982, -87.1756, -27.6841, -65.5827, -51.0277], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2047, device='cuda:0', dtype=torch.float64)
tensor([-39.8274, -87.6643, -27.6768, -65.6628, -51.2608], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2248, device='cuda:0', dtype=torch.float64)
tensor([-39.8291, -88.1279, -27.6317, -65.7601, -51.4808], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2031, device='cuda:0', dtype=torch.float64)
tensor([-39.8208, -88.4718, -27.5494, -65.8430, -51.7007], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1645, device='cuda:0', dtype=torch.float64)
tensor([-39.9119, -88.6841, -27.5189, -65.9829, -51.9344], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2215, device='cuda:0', dtype=torch.float64)
tensor([-39.9838, -88.8328, -27.4708, -66.1172, -52.1023], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1681, device='cuda:0', dtype=torch.float64)
tensor([-40.0887, -88.8455, -27.4220, -66.3013, -52.2473], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1943, device='cuda:0', dtype=torch.float64)
tensor([-40.1112, -88.9504, -27.2744, -66.3607, -52.4122], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1720, device='cuda:0', dtype=torch.float64)
tensor([-40.1345, -89.1579, -27.1419, -66.4196, -52.6023], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1796, device='cuda:0', dtype=torch.float64)
tensor([-40.1464, -89.3451, -27.0314, -66.4641, -52.8204], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2101, device='cuda:0', dtype=torch.float64)
tensor([-40.1976, -89.5819, -26.9905, -66.5925, -52.9595], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1977, device='cuda:0', dtype=torch.float64)
tensor([-40.3385, -89.9718, -27.0088, -66.8841, -53.2464], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1700, device='cuda:0', dtype=torch.float64)
tensor([-40.4254, -90.3786, -27.0188, -67.1776, -53.5616], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1592, device='cuda:0', dtype=torch.float64)
tensor([-40.5563, -90.6433, -27.0421, -67.4067, -53.8149], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1787, device='cuda:0', dtype=torch.float64)
tensor([-40.6960, -90.9277, -27.0376, -67.6468, -54.0849], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2392, device='cuda:0', dtype=torch.float64)
tensor([-40.7270, -90.9095, -26.9456, -67.7425, -54.2591], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1842, device='cuda:0', dtype=torch.float64)
tensor([-40.6993, -90.7623, -26.8386, -67.7452, -54.4069], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1793, device='cuda:0', dtype=torch.float64)
tensor([-40.6519, -90.4620, -26.7080, -67.6701, -54.4833], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1609, device='cuda:0', dtype=torch.float64)
tensor([-40.6838, -90.1645, -26.5958, -67.6352, -54.5960], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1672, device='cuda:0', dtype=torch.float64)
tensor([-40.5748, -89.9223, -26.4658, -67.4673, -54.6827], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1734, device='cuda:0', dtype=torch.float64)
tensor([-40.5964, -89.7635, -26.3641, -67.4310, -54.7862], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1807, device='cuda:0', dtype=torch.float64)
tensor([-40.5747, -89.7170, -26.2562, -67.3117, -54.8985], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1435, device='cuda:0', dtype=torch.float64)
tensor([-40.5361, -89.6796, -26.1207, -67.1398, -54.9724], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2063, device='cuda:0', dtype=torch.float64)
tensor([-40.4590, -89.7384, -25.9799, -66.8814, -55.0660], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1909, device='cuda:0', dtype=torch.float64)
tensor([-40.2967, -89.8925, -25.8140, -66.5571, -55.1304], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1585, device='cuda:0', dtype=torch.float64)
tensor([-40.1916, -90.0095, -25.6593, -66.2712, -55.1796], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1618, device='cuda:0', dtype=torch.float64)
tensor([-39.9964, -90.1986, -25.4809, -65.9286, -55.2409], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1880, device='cuda:0', dtype=torch.float64)
tensor([-39.9260, -90.3040, -25.3150, -65.7058, -55.3210], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1390, device='cuda:0', dtype=torch.float64)
tensor([-39.8203, -90.4099, -25.0986, -65.4832, -55.3904], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1524, device='cuda:0', dtype=torch.float64)
tensor([-39.6672, -90.5769, -24.8728, -65.2407, -55.4728], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1524, device='cuda:0', dtype=torch.float64)
tensor([-39.5048, -90.6031, -24.6726, -65.0286, -55.4908], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1735, device='cuda:0', dtype=torch.float64)
tensor([-39.3458, -90.6786, -24.5100, -64.9253, -55.5092], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1687, device='cuda:0', dtype=torch.float64)
tensor([-39.2123, -90.7049, -24.3775, -64.8685, -55.4892], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1746, device='cuda:0', dtype=torch.float64)
tensor([-39.0583, -90.6208, -24.2402, -64.7856, -55.3981], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1744, device='cuda:0', dtype=torch.float64)
tensor([-38.8563, -90.4548, -24.0777, -64.5455, -55.2132], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1460, device='cuda:0', dtype=torch.float64)
tensor([-38.7225, -90.2507, -23.9355, -64.3561, -55.0399], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1572, device='cuda:0', dtype=torch.float64)
tensor([-38.6360, -90.1912, -23.8141, -64.2575, -54.9294], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1760, device='cuda:0', dtype=torch.float64)
tensor([-38.4141, -90.1028, -23.6532, -63.9865, -54.8283], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1882, device='cuda:0', dtype=torch.float64)
tensor([-38.1814, -89.8233, -23.4705, -63.7580, -54.7032], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1478, device='cuda:0', dtype=torch.float64)
tensor([-37.9307, -89.4464, -23.2905, -63.4605, -54.5290], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1590, device='cuda:0', dtype=torch.float64)
tensor([-37.7554, -89.2041, -23.1386, -63.2587, -54.4201], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1158, device='cuda:0', dtype=torch.float64)
tensor([-37.5618, -88.9477, -22.9980, -63.0261, -54.3219], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1799, device='cuda:0', dtype=torch.float64)
tensor([-37.3243, -88.7023, -22.8526, -62.6929, -54.1950], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1413, device='cuda:0', dtype=torch.float64)
tensor([-37.0859, -88.4024, -22.7051, -62.3563, -54.0456], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1421, device='cuda:0', dtype=torch.float64)
tensor([-36.8666, -88.1733, -22.5894, -62.1197, -53.9807], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1723, device='cuda:0', dtype=torch.float64)
tensor([-36.7340, -88.0267, -22.4965, -62.0034, -53.9815], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1374, device='cuda:0', dtype=torch.float64)
tensor([-36.5637, -87.7191, -22.4150, -61.9117, -53.9382], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1804, device='cuda:0', dtype=torch.float64)
tensor([-36.4408, -87.5041, -22.3687, -61.8874, -53.9231], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1531, device='cuda:0', dtype=torch.float64)
tensor([-36.3371, -87.4334, -22.3083, -61.8871, -53.9598], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1260, device='cuda:0', dtype=torch.float64)
tensor([-36.2353, -87.4452, -22.2449, -61.8738, -54.0016], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1807, device='cuda:0', dtype=torch.float64)
tensor([-36.1290, -87.4563, -22.2054, -61.9048, -54.0201], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1652, device='cuda:0', dtype=torch.float64)
tensor([-36.0807, -87.5141, -22.1789, -61.9767, -54.0441], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1252, device='cuda:0', dtype=torch.float64)
tensor([-36.0110, -87.4954, -22.1113, -62.0055, -54.0262], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1292, device='cuda:0', dtype=torch.float64)
tensor([-35.9688, -87.3680, -22.0583, -62.0671, -54.0301], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1316, device='cuda:0', dtype=torch.float64)
tensor([-35.9048, -87.1446, -21.9956, -62.0656, -53.9786], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1519, device='cuda:0', dtype=torch.float64)
tensor([-35.8846, -87.0412, -21.9584, -62.1511, -53.9844], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1321, device='cuda:0', dtype=torch.float64)
tensor([-35.9385, -86.9203, -21.9171, -62.2487, -53.9848], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1501, device='cuda:0', dtype=torch.float64)
tensor([-35.9366, -86.6315, -21.8349, -62.2618, -53.8997], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1589, device='cuda:0', dtype=torch.float64)
tensor([-35.9344, -86.4765, -21.7534, -62.2453, -53.8138], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1327, device='cuda:0', dtype=torch.float64)
tensor([-35.8813, -86.3058, -21.6779, -62.1790, -53.7152], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1368, device='cuda:0', dtype=torch.float64)
tensor([-35.8865, -86.2411, -21.6155, -62.1271, -53.6622], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1235, device='cuda:0', dtype=torch.float64)
tensor([-35.8334, -86.1636, -21.5466, -62.0277, -53.5601], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1464, device='cuda:0', dtype=torch.float64)
tensor([-35.7468, -85.9734, -21.4589, -61.8677, -53.3843], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1461, device='cuda:0', dtype=torch.float64)
tensor([-35.5931, -85.7790, -21.3508, -61.5995, -53.1654], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1607, device='cuda:0', dtype=torch.float64)
tensor([-35.4139, -85.6432, -21.2567, -61.3166, -52.9292], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1905, device='cuda:0', dtype=torch.float64)
tensor([-35.2231, -85.5246, -21.1432, -61.0171, -52.7226], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1438, device='cuda:0', dtype=torch.float64)
tensor([-35.0672, -85.4351, -21.0419, -60.7755, -52.5602], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1632, device='cuda:0', dtype=torch.float64)
tensor([-34.9574, -85.4001, -20.9820, -60.6548, -52.4568], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1231, device='cuda:0', dtype=torch.float64)
tensor([-34.9311, -85.3416, -20.9425, -60.6738, -52.4321], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1485, device='cuda:0', dtype=torch.float64)
tensor([-34.8966, -85.3489, -20.9144, -60.6868, -52.4440], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1245, device='cuda:0', dtype=torch.float64)
tensor([-34.8289, -85.3101, -20.8672, -60.6188, -52.4208], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1215, device='cuda:0', dtype=torch.float64)
tensor([-34.7489, -85.2265, -20.8140, -60.4877, -52.3295], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1327, device='cuda:0', dtype=torch.float64)
tensor([-34.7632, -85.1860, -20.7928, -60.4518, -52.2890], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.0991, device='cuda:0', dtype=torch.float64)
tensor([-34.7799, -85.1468, -20.7877, -60.4348, -52.2782], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1456, device='cuda:0', dtype=torch.float64)
tensor([-34.8653, -85.1261, -20.8315, -60.5358, -52.3157], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1159, device='cuda:0', dtype=torch.float64)
tensor([-34.9321, -85.0501, -20.8788, -60.5979, -52.3163], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1923, device='cuda:0', dtype=torch.float64)
tensor([-34.9962, -84.9891, -20.9256, -60.6733, -52.3446], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1761, device='cuda:0', dtype=torch.float64)
tensor([-35.0350, -84.7961, -20.9494, -60.6674, -52.3697], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1520, device='cuda:0', dtype=torch.float64)
tensor([-35.1441, -84.8720, -21.0108, -60.7778, -52.4597], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1584, device='cuda:0', dtype=torch.float64)
tensor([-35.1584, -84.9688, -21.0569, -60.7660, -52.5262], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1232, device='cuda:0', dtype=torch.float64)
tensor([-35.1890, -85.0577, -21.1035, -60.8070, -52.6158], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1746, device='cuda:0', dtype=torch.float64)
tensor([-35.1744, -85.1923, -21.1437, -60.8358, -52.7253], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1404, device='cuda:0', dtype=torch.float64)
tensor([-35.1492, -85.3206, -21.1891, -60.8623, -52.8149], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1484, device='cuda:0', dtype=torch.float64)
tensor([-35.0533, -85.4350, -21.2101, -60.8127, -52.8704], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1529, device='cuda:0', dtype=torch.float64)
tensor([-35.0039, -85.5883, -21.2524, -60.7977, -52.9804], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1354, device='cuda:0', dtype=torch.float64)
tensor([-34.8913, -85.7358, -21.2692, -60.7725, -53.1133], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1792, device='cuda:0', dtype=torch.float64)
tensor([-34.8187, -85.9494, -21.2835, -60.8185, -53.3290], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1441, device='cuda:0', dtype=torch.float64)
tensor([-34.6620, -86.1328, -21.2716, -60.7944, -53.5076], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1274, device='cuda:0', dtype=torch.float64)
tensor([-34.4463, -86.3414, -21.2604, -60.7889, -53.6776], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1193, device='cuda:0', dtype=torch.float64)
tensor([-34.2307, -86.5043, -21.2379, -60.7366, -53.7957], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1445, device='cuda:0', dtype=torch.float64)
tensor([-33.9930, -86.6171, -21.2071, -60.7013, -53.8830], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1466, device='cuda:0', dtype=torch.float64)
tensor([-33.7940, -86.6867, -21.1843, -60.6573, -53.9703], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1401, device='cuda:0', dtype=torch.float64)
tensor([-33.6296, -86.8099, -21.1705, -60.6364, -54.0610], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1431, device='cuda:0', dtype=torch.float64)
tensor([-33.4614, -86.7946, -21.1527, -60.5492, -54.1293], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1122, device='cuda:0', dtype=torch.float64)
tensor([-33.3467, -86.8357, -21.1434, -60.5185, -54.2541], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1449, device='cuda:0', dtype=torch.float64)
tensor([-33.2934, -86.9706, -21.1332, -60.5231, -54.4011], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1452, device='cuda:0', dtype=torch.float64)
tensor([-33.2463, -87.1450, -21.1259, -60.5246, -54.5553], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1780, device='cuda:0', dtype=torch.float64)
tensor([-33.2315, -87.3303, -21.1281, -60.6058, -54.7322], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1588, device='cuda:0', dtype=torch.float64)
tensor([-33.2692, -87.4367, -21.1610, -60.7411, -54.9170], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1404, device='cuda:0', dtype=torch.float64)
tensor([-33.2689, -87.4813, -21.1574, -60.8251, -55.0322], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1429, device='cuda:0', dtype=torch.float64)
tensor([-33.2528, -87.6504, -21.1463, -60.8989, -55.1604], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1459, device='cuda:0', dtype=torch.float64)
tensor([-33.2931, -87.8150, -21.1420, -60.9742, -55.2818], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1475, device='cuda:0', dtype=torch.float64)
tensor([-33.3396, -87.9667, -21.1569, -61.0629, -55.3784], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1538, device='cuda:0', dtype=torch.float64)
tensor([-33.3092, -88.1422, -21.1515, -61.1549, -55.4511], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1513, device='cuda:0', dtype=torch.float64)
tensor([-33.2199, -88.3694, -21.1305, -61.1900, -55.5062], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1451, device='cuda:0', dtype=torch.float64)
tensor([-33.0485, -88.5601, -21.1044, -61.1688, -55.5340], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1379, device='cuda:0', dtype=torch.float64)
tensor([-32.9163, -88.7849, -21.1042, -61.2492, -55.5904], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1524, device='cuda:0', dtype=torch.float64)
tensor([-32.7587, -89.0251, -21.1036, -61.2640, -55.6314], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1355, device='cuda:0', dtype=torch.float64)
tensor([-32.6154, -89.3346, -21.1257, -61.3696, -55.6695], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1283, device='cuda:0', dtype=torch.float64)
tensor([-32.5235, -89.5623, -21.1235, -61.4551, -55.6899], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1361, device='cuda:0', dtype=torch.float64)
tensor([-32.4432, -89.7516, -21.1255, -61.5010, -55.6889], device='cuda:0',
       dtype=torch.float64)
Saved results to /home/idrissm/projects/def-mh541-ab/idrissm/neighborVCA/runs/results/tsp/tsp64_/home/idrissm/projects/def-mh541-ab/idrissm/neighborVCA/scripts/VCA/tsp/configHVCA64.json_20250925_100030.csv
rnn.0.0.weight tensor(0.8602, device='cuda:0', dtype=torch.float64)
tensor([-2.3503, -3.4717, -4.1553, -4.9913, -5.9320], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(13.2644, device='cuda:0', dtype=torch.float64)
tensor([-42.6452, -28.9265, -22.1051, -64.0985, -33.9892], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(319.9290, device='cuda:0', dtype=torch.float64)
tensor([-2.9475, -5.7093, -5.3783, -4.9621, -7.5288], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(29.6667, device='cuda:0', dtype=torch.float64)
tensor([-38.3255, -18.3745, -16.5236, -32.0345, -35.1510], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(276.5202, device='cuda:0', dtype=torch.float64)
tensor([-20.1034, -16.3765, -12.0246, -33.0558, -30.2299], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(212.9317, device='cuda:0', dtype=torch.float64)
tensor([-3.1008, -7.4002, -5.1983, -7.9684, -8.0960], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(44.9869, device='cuda:0', dtype=torch.float64)
tensor([-2.5953, -5.8665, -4.8405, -5.6569, -6.6451], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(34.9690, device='cuda:0', dtype=torch.float64)
tensor([-2.9954, -4.0338, -5.9446, -6.4683, -8.9995], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(64.3426, device='cuda:0', dtype=torch.float64)
tensor([ -7.3821,  -3.8057,  -7.2468,  -7.6801, -11.8896], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(88.9381, device='cuda:0', dtype=torch.float64)
tensor([ -6.9488,  -4.4682,  -7.5298,  -8.1693, -12.8962], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(89.5649, device='cuda:0', dtype=torch.float64)
tensor([ -3.3482,  -5.2421,  -6.5257,  -7.0107, -11.4060], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(65.1011, device='cuda:0', dtype=torch.float64)
tensor([-2.5554, -5.4401, -5.3654, -5.7841, -8.9825], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(36.6433, device='cuda:0', dtype=torch.float64)
tensor([-2.6035, -5.0475, -4.7744, -5.2518, -7.5296], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(22.6480, device='cuda:0', dtype=torch.float64)
tensor([-2.7597, -4.7712, -4.6315, -5.2798, -6.8935], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(18.5402, device='cuda:0', dtype=torch.float64)
tensor([-2.9198, -4.9916, -4.7155, -5.8032, -6.4904], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(22.9498, device='cuda:0', dtype=torch.float64)
tensor([-2.9610, -5.6057, -4.8581, -6.7576, -6.3024], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(31.9525, device='cuda:0', dtype=torch.float64)
tensor([-2.9521, -6.3220, -4.8775, -7.1969, -6.3777], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(38.6582, device='cuda:0', dtype=torch.float64)
tensor([-2.9446, -5.7933, -4.6792, -6.7201, -6.5454], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(37.4562, device='cuda:0', dtype=torch.float64)
tensor([-2.6693, -4.9231, -4.4112, -6.0308, -6.6037], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(27.8248, device='cuda:0', dtype=torch.float64)
tensor([-2.5014, -4.4771, -4.2738, -5.5596, -6.5974], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(20.4456, device='cuda:0', dtype=torch.float64)
tensor([-2.3738, -4.0863, -4.3484, -5.3747, -6.6331], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(15.2023, device='cuda:0', dtype=torch.float64)
tensor([-2.2592, -3.7745, -4.6263, -5.4849, -6.7011], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(13.1777, device='cuda:0', dtype=torch.float64)
tensor([-2.1717, -3.5548, -5.0161, -5.8693, -6.8087], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(13.8171, device='cuda:0', dtype=torch.float64)
tensor([-2.1329, -3.4022, -5.3790, -6.2576, -6.9614], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(17.9811, device='cuda:0', dtype=torch.float64)
tensor([-2.1252, -3.3006, -5.6029, -6.2904, -7.0635], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(21.4321, device='cuda:0', dtype=torch.float64)
tensor([-2.1007, -3.2508, -5.6595, -5.9790, -6.9661], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(21.7226, device='cuda:0', dtype=torch.float64)
tensor([-2.0730, -3.2641, -5.5690, -5.6003, -6.6382], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(18.7004, device='cuda:0', dtype=torch.float64)
tensor([-2.0763, -3.3455, -5.3708, -5.3411, -6.2790], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(14.1231, device='cuda:0', dtype=torch.float64)
tensor([-2.1233, -3.4695, -5.1196, -5.1963, -6.0600], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(10.5542, device='cuda:0', dtype=torch.float64)
tensor([-2.2004, -3.5997, -4.8727, -5.0886, -5.9825], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(9.3299, device='cuda:0', dtype=torch.float64)
tensor([-2.2775, -3.7091, -4.6623, -4.9708, -5.9913], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(10.6102, device='cuda:0', dtype=torch.float64)
tensor([-2.3335, -3.7827, -4.4944, -4.8525, -6.0335], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(12.1540, device='cuda:0', dtype=torch.float64)
tensor([-2.3662, -3.8161, -4.3662, -4.7302, -6.0678], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(12.4146, device='cuda:0', dtype=torch.float64)
tensor([-2.3790, -3.8160, -4.2766, -4.5938, -6.0755], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(10.9242, device='cuda:0', dtype=torch.float64)
tensor([-2.3770, -3.7968, -4.2293, -4.4673, -6.0621], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(8.0321, device='cuda:0', dtype=torch.float64)
tensor([-2.3665, -3.7702, -4.2290, -4.3904, -6.0397], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(5.0513, device='cuda:0', dtype=torch.float64)
tensor([-2.3528, -3.7452, -4.2719, -4.3838, -6.0162], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(5.4522, device='cuda:0', dtype=torch.float64)
tensor([-2.3359, -3.7309, -4.3332, -4.4326, -5.9981], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(7.2119, device='cuda:0', dtype=torch.float64)
tensor([-2.3144, -3.7345, -4.3704, -4.5047, -5.9883], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(8.1818, device='cuda:0', dtype=torch.float64)
tensor([-2.2873, -3.7513, -4.3550, -4.5800, -5.9839], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(7.7630, device='cuda:0', dtype=torch.float64)
tensor([-2.2579, -3.7598, -4.3001, -4.6623, -5.9767], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(6.6210, device='cuda:0', dtype=torch.float64)
tensor([-2.2320, -3.7476, -4.2432, -4.7631, -5.9597], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(5.3317, device='cuda:0', dtype=torch.float64)
tensor([-2.2148, -3.7264, -4.2124, -4.8833, -5.9340], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(4.3194, device='cuda:0', dtype=torch.float64)
tensor([-2.2076, -3.7118, -4.2139, -5.0097, -5.9091], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(3.8822, device='cuda:0', dtype=torch.float64)
tensor([-2.2077, -3.7064, -4.2423, -5.1227, -5.8937], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(3.8478, device='cuda:0', dtype=torch.float64)
tensor([-2.2095, -3.7020, -4.2873, -5.2050, -5.8865], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(4.1026, device='cuda:0', dtype=torch.float64)
tensor([-2.2085, -3.6873, -4.3358, -5.2423, -5.8827], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(4.3342, device='cuda:0', dtype=torch.float64)
tensor([-2.2042, -3.6584, -4.3771, -5.2315, -5.8803], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(4.3634, device='cuda:0', dtype=torch.float64)
tensor([-2.1982, -3.6238, -4.4030, -5.1789, -5.8815], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(4.1293, device='cuda:0', dtype=torch.float64)
tensor([-2.1917, -3.5945, -4.4038, -5.0959, -5.8874], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(3.6091, device='cuda:0', dtype=torch.float64)
tensor([-2.1853, -3.5760, -4.3735, -4.9975, -5.8957], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(3.0764, device='cuda:0', dtype=torch.float64)
tensor([-2.1790, -3.5669, -4.3154, -4.8990, -5.9013], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.7205, device='cuda:0', dtype=torch.float64)
tensor([-2.1731, -3.5645, -4.2461, -4.8133, -5.9004], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.7061, device='cuda:0', dtype=torch.float64)
tensor([-2.1686, -3.5659, -4.1808, -4.7435, -5.8903], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.8762, device='cuda:0', dtype=torch.float64)
tensor([-2.1671, -3.5696, -4.1265, -4.6860, -5.8714], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.9264, device='cuda:0', dtype=torch.float64)
tensor([-2.1706, -3.5758, -4.0848, -4.6396, -5.8465], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.6734, device='cuda:0', dtype=torch.float64)
tensor([-2.1802, -3.5852, -4.0546, -4.6082, -5.8188], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.3152, device='cuda:0', dtype=torch.float64)
tensor([-2.1939, -3.5957, -4.0338, -4.5969, -5.7902], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1441, device='cuda:0', dtype=torch.float64)
tensor([-2.2086, -3.6034, -4.0220, -4.6038, -5.7622], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1305, device='cuda:0', dtype=torch.float64)
tensor([-2.2202, -3.6043, -4.0220, -4.6226, -5.7369], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0892, device='cuda:0', dtype=torch.float64)
tensor([-2.2269, -3.5964, -4.0366, -4.6470, -5.7159], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0324, device='cuda:0', dtype=torch.float64)
tensor([-2.2277, -3.5805, -4.0652, -4.6727, -5.6994], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9771, device='cuda:0', dtype=torch.float64)
tensor([-2.2241, -3.5600, -4.1025, -4.6973, -5.6880], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8167, device='cuda:0', dtype=torch.float64)
tensor([-2.2178, -3.5383, -4.1430, -4.7181, -5.6805], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6597, device='cuda:0', dtype=torch.float64)
tensor([-2.2103, -3.5193, -4.1806, -4.7334, -5.6755], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6016, device='cuda:0', dtype=torch.float64)
tensor([-2.2027, -3.5063, -4.2065, -4.7418, -5.6710], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6759, device='cuda:0', dtype=torch.float64)
tensor([-2.1954, -3.4995, -4.2123, -4.7430, -5.6639], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7962, device='cuda:0', dtype=torch.float64)
tensor([-2.1897, -3.4973, -4.1924, -4.7375, -5.6550], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8362, device='cuda:0', dtype=torch.float64)
tensor([-2.1859, -3.4969, -4.1509, -4.7271, -5.6459], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7583, device='cuda:0', dtype=torch.float64)
tensor([-2.1848, -3.4963, -4.1015, -4.7126, -5.6389], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5265, device='cuda:0', dtype=torch.float64)
tensor([-2.1856, -3.4936, -4.0576, -4.6974, -5.6348], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3580, device='cuda:0', dtype=torch.float64)
tensor([-2.1877, -3.4889, -4.0277, -4.6841, -5.6340], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3168, device='cuda:0', dtype=torch.float64)
tensor([-2.1904, -3.4841, -4.0144, -4.6738, -5.6352], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4610, device='cuda:0', dtype=torch.float64)
tensor([-2.1930, -3.4805, -4.0168, -4.6668, -5.6379], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5681, device='cuda:0', dtype=torch.float64)
tensor([-2.1951, -3.4782, -4.0320, -4.6624, -5.6412], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4673, device='cuda:0', dtype=torch.float64)
tensor([-2.1967, -3.4774, -4.0546, -4.6610, -5.6431], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3007, device='cuda:0', dtype=torch.float64)
tensor([-2.1978, -3.4767, -4.0772, -4.6626, -5.6423], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2242, device='cuda:0', dtype=torch.float64)
tensor([-2.1980, -3.4747, -4.0925, -4.6658, -5.6394], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2654, device='cuda:0', dtype=torch.float64)
tensor([-2.1969, -3.4696, -4.0969, -4.6686, -5.6350], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2935, device='cuda:0', dtype=torch.float64)
tensor([-2.1955, -3.4623, -4.0921, -4.6694, -5.6298], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1936, device='cuda:0', dtype=torch.float64)
tensor([-2.1944, -3.4554, -4.0812, -4.6678, -5.6248], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1399, device='cuda:0', dtype=torch.float64)
tensor([-2.1934, -3.4499, -4.0685, -4.6657, -5.6198], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1121, device='cuda:0', dtype=torch.float64)
tensor([-2.1926, -3.4461, -4.0556, -4.6637, -5.6146], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0739, device='cuda:0', dtype=torch.float64)
tensor([-2.1924, -3.4456, -4.0452, -4.6595, -5.6103], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0701, device='cuda:0', dtype=torch.float64)
tensor([-2.1929, -3.4474, -4.0367, -4.6536, -5.6062], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0645, device='cuda:0', dtype=torch.float64)
tensor([-2.1938, -3.4499, -4.0315, -4.6455, -5.6022], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0882, device='cuda:0', dtype=torch.float64)
tensor([-2.1942, -3.4510, -4.0281, -4.6370, -5.5971], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0609, device='cuda:0', dtype=torch.float64)
tensor([-2.1937, -3.4506, -4.0255, -4.6282, -5.5918], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0575, device='cuda:0', dtype=torch.float64)
tensor([-2.1921, -3.4496, -4.0247, -4.6213, -5.5850], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0473, device='cuda:0', dtype=torch.float64)
tensor([-2.1903, -3.4486, -4.0248, -4.6147, -5.5779], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9979, device='cuda:0', dtype=torch.float64)
tensor([-2.1892, -3.4475, -4.0257, -4.6089, -5.5709], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0085, device='cuda:0', dtype=torch.float64)
tensor([-2.1884, -3.4460, -4.0272, -4.6048, -5.5650], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0313, device='cuda:0', dtype=torch.float64)
tensor([-2.1872, -3.4442, -4.0286, -4.6036, -5.5592], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0040, device='cuda:0', dtype=torch.float64)
tensor([-2.1853, -3.4419, -4.0278, -4.6055, -5.5536], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9903, device='cuda:0', dtype=torch.float64)
tensor([-2.1818, -3.4383, -4.0250, -4.6116, -5.5472], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9386, device='cuda:0', dtype=torch.float64)
tensor([-2.1772, -3.4348, -4.0181, -4.6201, -5.5414], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9536, device='cuda:0', dtype=torch.float64)
tensor([-2.1713, -3.4307, -4.0105, -4.6300, -5.5363], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9523, device='cuda:0', dtype=torch.float64)
tensor([-2.1653, -3.4272, -4.0051, -4.6399, -5.5327], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9150, device='cuda:0', dtype=torch.float64)
tensor([-2.1602, -3.4243, -4.0035, -4.6478, -5.5303], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9167, device='cuda:0', dtype=torch.float64)
tensor([-2.1576, -3.4218, -4.0046, -4.6522, -5.5295], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9192, device='cuda:0', dtype=torch.float64)
tensor([-2.1572, -3.4200, -4.0072, -4.6509, -5.5288], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9124, device='cuda:0', dtype=torch.float64)
tensor([-2.1589, -3.4191, -4.0103, -4.6463, -5.5277], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9185, device='cuda:0', dtype=torch.float64)
tensor([-2.1618, -3.4185, -4.0111, -4.6401, -5.5250], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9293, device='cuda:0', dtype=torch.float64)
tensor([-2.1650, -3.4176, -4.0098, -4.6347, -5.5202], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9083, device='cuda:0', dtype=torch.float64)
tensor([-2.1679, -3.4165, -4.0050, -4.6293, -5.5140], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8753, device='cuda:0', dtype=torch.float64)
tensor([-2.1706, -3.4158, -3.9984, -4.6231, -5.5085], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9130, device='cuda:0', dtype=torch.float64)
tensor([-2.1727, -3.4158, -3.9907, -4.6178, -5.5047], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8929, device='cuda:0', dtype=torch.float64)
tensor([-2.1734, -3.4150, -3.9852, -4.6147, -5.5017], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8877, device='cuda:0', dtype=torch.float64)
tensor([-2.1736, -3.4137, -3.9802, -4.6122, -5.4987], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8688, device='cuda:0', dtype=torch.float64)
tensor([-2.1714, -3.4108, -3.9764, -4.6123, -5.4950], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8665, device='cuda:0', dtype=torch.float64)
tensor([-2.1680, -3.4068, -3.9725, -4.6145, -5.4901], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8546, device='cuda:0', dtype=torch.float64)
tensor([-2.1640, -3.4011, -3.9695, -4.6177, -5.4843], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8515, device='cuda:0', dtype=torch.float64)
tensor([-2.1607, -3.3953, -3.9684, -4.6201, -5.4764], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8825, device='cuda:0', dtype=torch.float64)
tensor([-2.1594, -3.3908, -3.9681, -4.6208, -5.4676], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8781, device='cuda:0', dtype=torch.float64)
tensor([-2.1600, -3.3885, -3.9681, -4.6172, -5.4610], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8835, device='cuda:0', dtype=torch.float64)
tensor([-2.1619, -3.3878, -3.9675, -4.6110, -5.4562], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8433, device='cuda:0', dtype=torch.float64)
tensor([-2.1646, -3.3879, -3.9660, -4.6035, -5.4520], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8660, device='cuda:0', dtype=torch.float64)
tensor([-2.1660, -3.3863, -3.9658, -4.5980, -5.4492], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8531, device='cuda:0', dtype=torch.float64)
tensor([-2.1661, -3.3834, -3.9657, -4.5944, -5.4470], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8650, device='cuda:0', dtype=torch.float64)
tensor([-2.1651, -3.3813, -3.9650, -4.5931, -5.4440], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8451, device='cuda:0', dtype=torch.float64)
tensor([-2.1640, -3.3802, -3.9614, -4.5924, -5.4401], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8737, device='cuda:0', dtype=torch.float64)
tensor([-2.1637, -3.3795, -3.9541, -4.5903, -5.4381], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8522, device='cuda:0', dtype=torch.float64)
tensor([-2.1643, -3.3803, -3.9469, -4.5861, -5.4359], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8431, device='cuda:0', dtype=torch.float64)
tensor([-2.1651, -3.3809, -3.9418, -4.5802, -5.4342], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8591, device='cuda:0', dtype=torch.float64)
tensor([-2.1656, -3.3807, -3.9391, -4.5734, -5.4306], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8412, device='cuda:0', dtype=torch.float64)
tensor([-2.1647, -3.3787, -3.9383, -4.5681, -5.4264], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8662, device='cuda:0', dtype=torch.float64)
tensor([-2.1632, -3.3760, -3.9386, -4.5646, -5.4201], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8651, device='cuda:0', dtype=torch.float64)
tensor([-2.1616, -3.3733, -3.9365, -4.5628, -5.4127], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8296, device='cuda:0', dtype=torch.float64)
tensor([-2.1606, -3.3709, -3.9341, -4.5610, -5.4073], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8734, device='cuda:0', dtype=torch.float64)
tensor([-2.1601, -3.3697, -3.9341, -4.5590, -5.4029], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8466, device='cuda:0', dtype=torch.float64)
tensor([-2.1594, -3.3694, -3.9350, -4.5581, -5.3997], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8463, device='cuda:0', dtype=torch.float64)
tensor([-2.1583, -3.3680, -3.9378, -4.5583, -5.3985], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8668, device='cuda:0', dtype=torch.float64)
tensor([-2.1557, -3.3653, -3.9394, -4.5612, -5.3958], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8260, device='cuda:0', dtype=torch.float64)
tensor([-2.1534, -3.3626, -3.9375, -4.5638, -5.3910], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8850, device='cuda:0', dtype=torch.float64)
tensor([-2.1509, -3.3605, -3.9324, -4.5659, -5.3839], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8614, device='cuda:0', dtype=torch.float64)
tensor([-2.1503, -3.3591, -3.9227, -4.5634, -5.3773], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8582, device='cuda:0', dtype=torch.float64)
tensor([-2.1514, -3.3571, -3.9132, -4.5577, -5.3725], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8414, device='cuda:0', dtype=torch.float64)
tensor([-2.1532, -3.3559, -3.9064, -4.5506, -5.3665], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8522, device='cuda:0', dtype=torch.float64)
tensor([-2.1546, -3.3551, -3.9023, -4.5448, -5.3606], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8656, device='cuda:0', dtype=torch.float64)
tensor([-2.1553, -3.3550, -3.9001, -4.5413, -5.3547], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8685, device='cuda:0', dtype=torch.float64)
tensor([-2.1555, -3.3553, -3.8998, -4.5380, -5.3481], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8656, device='cuda:0', dtype=torch.float64)
tensor([-2.1551, -3.3549, -3.9001, -4.5349, -5.3428], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8751, device='cuda:0', dtype=torch.float64)
tensor([-2.1547, -3.3551, -3.8995, -4.5335, -5.3383], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9115, device='cuda:0', dtype=torch.float64)
tensor([-2.1541, -3.3547, -3.8987, -4.5324, -5.3333], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8646, device='cuda:0', dtype=torch.float64)
tensor([-2.1534, -3.3561, -3.8985, -4.5321, -5.3300], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9023, device='cuda:0', dtype=torch.float64)
tensor([-2.1532, -3.3569, -3.8966, -4.5302, -5.3271], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9349, device='cuda:0', dtype=torch.float64)
tensor([-2.1524, -3.3564, -3.8955, -4.5274, -5.3236], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8636, device='cuda:0', dtype=torch.float64)
tensor([-2.1510, -3.3541, -3.8959, -4.5267, -5.3200], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8562, device='cuda:0', dtype=torch.float64)
tensor([-2.1486, -3.3508, -3.8973, -4.5271, -5.3160], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8562, device='cuda:0', dtype=torch.float64)
tensor([-2.1461, -3.3460, -3.8976, -4.5281, -5.3121], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8960, device='cuda:0', dtype=torch.float64)
tensor([-2.1438, -3.3425, -3.8963, -4.5278, -5.3079], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8602, device='cuda:0', dtype=torch.float64)
tensor([-2.1439, -3.3390, -3.8935, -4.5266, -5.3030], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8488, device='cuda:0', dtype=torch.float64)
tensor([-2.1453, -3.3377, -3.8884, -4.5231, -5.2987], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8608, device='cuda:0', dtype=torch.float64)
tensor([-2.1475, -3.3381, -3.8832, -4.5169, -5.2949], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8277, device='cuda:0', dtype=torch.float64)
tensor([-2.1486, -3.3383, -3.8789, -4.5112, -5.2917], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8956, device='cuda:0', dtype=torch.float64)
tensor([-2.1483, -3.3371, -3.8769, -4.5078, -5.2877], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8302, device='cuda:0', dtype=torch.float64)
tensor([-2.1477, -3.3377, -3.8766, -4.5060, -5.2826], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8640, device='cuda:0', dtype=torch.float64)
tensor([-2.1460, -3.3364, -3.8775, -4.5046, -5.2788], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9250, device='cuda:0', dtype=torch.float64)
tensor([-2.1449, -3.3337, -3.8784, -4.5021, -5.2767], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8587, device='cuda:0', dtype=torch.float64)
tensor([-2.1432, -3.3312, -3.8785, -4.5013, -5.2733], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8339, device='cuda:0', dtype=torch.float64)
tensor([-2.1420, -3.3281, -3.8744, -4.4996, -5.2702], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8220, device='cuda:0', dtype=torch.float64)
tensor([-2.1419, -3.3252, -3.8674, -4.4974, -5.2663], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8214, device='cuda:0', dtype=torch.float64)
tensor([-2.1411, -3.3215, -3.8623, -4.4978, -5.2617], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8485, device='cuda:0', dtype=torch.float64)
tensor([-2.1406, -3.3186, -3.8591, -4.4972, -5.2567], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8711, device='cuda:0', dtype=torch.float64)
tensor([-2.1404, -3.3154, -3.8593, -4.4979, -5.2528], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8552, device='cuda:0', dtype=torch.float64)
tensor([-2.1408, -3.3142, -3.8602, -4.4975, -5.2509], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8124, device='cuda:0', dtype=torch.float64)
tensor([-2.1396, -3.3128, -3.8601, -4.4969, -5.2480], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8152, device='cuda:0', dtype=torch.float64)
tensor([-2.1389, -3.3134, -3.8581, -4.4944, -5.2435], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8398, device='cuda:0', dtype=torch.float64)
tensor([-2.1390, -3.3159, -3.8566, -4.4896, -5.2385], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8174, device='cuda:0', dtype=torch.float64)
tensor([-2.1403, -3.3177, -3.8545, -4.4852, -5.2349], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7931, device='cuda:0', dtype=torch.float64)
tensor([-2.1415, -3.3188, -3.8542, -4.4831, -5.2332], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8794, device='cuda:0', dtype=torch.float64)
tensor([-2.1412, -3.3151, -3.8569, -4.4856, -5.2300], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8081, device='cuda:0', dtype=torch.float64)
tensor([-2.1397, -3.3082, -3.8585, -4.4883, -5.2269], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8459, device='cuda:0', dtype=torch.float64)
tensor([-2.1385, -3.3015, -3.8580, -4.4887, -5.2235], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7844, device='cuda:0', dtype=torch.float64)
tensor([-2.1367, -3.2975, -3.8542, -4.4854, -5.2187], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8163, device='cuda:0', dtype=torch.float64)
tensor([-2.1341, -3.2958, -3.8476, -4.4799, -5.2128], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8585, device='cuda:0', dtype=torch.float64)
tensor([-2.1315, -3.2947, -3.8403, -4.4744, -5.2050], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7883, device='cuda:0', dtype=torch.float64)
tensor([-2.1294, -3.2950, -3.8350, -4.4706, -5.1966], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8193, device='cuda:0', dtype=torch.float64)
tensor([-2.1282, -3.2967, -3.8311, -4.4633, -5.1924], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8424, device='cuda:0', dtype=torch.float64)
tensor([-2.1269, -3.2993, -3.8309, -4.4584, -5.1896], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8239, device='cuda:0', dtype=torch.float64)
tensor([-2.1279, -3.3014, -3.8304, -4.4547, -5.1881], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7922, device='cuda:0', dtype=torch.float64)
tensor([-2.1294, -3.3010, -3.8301, -4.4524, -5.1835], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8461, device='cuda:0', dtype=torch.float64)
tensor([-2.1324, -3.3008, -3.8298, -4.4505, -5.1790], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9011, device='cuda:0', dtype=torch.float64)
tensor([-2.1366, -3.2997, -3.8280, -4.4408, -5.1748], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8497, device='cuda:0', dtype=torch.float64)
tensor([-2.1391, -3.2957, -3.8250, -4.4330, -5.1680], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8685, device='cuda:0', dtype=torch.float64)
tensor([-2.1393, -3.2928, -3.8214, -4.4293, -5.1614], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8282, device='cuda:0', dtype=torch.float64)
tensor([-2.1396, -3.2923, -3.8171, -4.4267, -5.1586], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8706, device='cuda:0', dtype=torch.float64)
tensor([-2.1374, -3.2916, -3.8170, -4.4273, -5.1552], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8030, device='cuda:0', dtype=torch.float64)
tensor([-2.1338, -3.2916, -3.8185, -4.4321, -5.1540], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8121, device='cuda:0', dtype=torch.float64)
tensor([-2.1288, -3.2908, -3.8206, -4.4394, -5.1518], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8523, device='cuda:0', dtype=torch.float64)
tensor([-2.1239, -3.2878, -3.8241, -4.4489, -5.1481], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8720, device='cuda:0', dtype=torch.float64)
tensor([-2.1193, -3.2824, -3.8271, -4.4574, -5.1426], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8516, device='cuda:0', dtype=torch.float64)
tensor([-2.1178, -3.2802, -3.8278, -4.4600, -5.1402], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8938, device='cuda:0', dtype=torch.float64)
tensor([-2.1195, -3.2798, -3.8265, -4.4522, -5.1399], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9291, device='cuda:0', dtype=torch.float64)
tensor([-2.1234, -3.2800, -3.8227, -4.4371, -5.1390], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8866, device='cuda:0', dtype=torch.float64)
tensor([-2.1268, -3.2802, -3.8173, -4.4263, -5.1375], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9541, device='cuda:0', dtype=torch.float64)
tensor([-2.1284, -3.2805, -3.8085, -4.4218, -5.1335], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7655, device='cuda:0', dtype=torch.float64)
tensor([-2.1315, -3.2813, -3.7993, -4.4208, -5.1271], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8709, device='cuda:0', dtype=torch.float64)
tensor([-2.1344, -3.2826, -3.7938, -4.4189, -5.1192], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9285, device='cuda:0', dtype=torch.float64)
tensor([-2.1361, -3.2838, -3.7932, -4.4146, -5.1155], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7960, device='cuda:0', dtype=torch.float64)
tensor([-2.1375, -3.2831, -3.7953, -4.4091, -5.1127], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8156, device='cuda:0', dtype=torch.float64)
tensor([-2.1350, -3.2800, -3.8009, -4.4086, -5.1093], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8829, device='cuda:0', dtype=torch.float64)
tensor([-2.1314, -3.2772, -3.8039, -4.4112, -5.1036], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8009, device='cuda:0', dtype=torch.float64)
tensor([-2.1272, -3.2742, -3.7999, -4.4129, -5.0999], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8671, device='cuda:0', dtype=torch.float64)
tensor([-2.1249, -3.2702, -3.7955, -4.4129, -5.0963], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8869, device='cuda:0', dtype=torch.float64)
tensor([-2.1253, -3.2675, -3.7940, -4.4103, -5.0920], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8966, device='cuda:0', dtype=torch.float64)
tensor([-2.1261, -3.2623, -3.7977, -4.4062, -5.0883], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8576, device='cuda:0', dtype=torch.float64)
tensor([-2.1259, -3.2583, -3.7996, -4.4054, -5.0863], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0237, device='cuda:0', dtype=torch.float64)
tensor([-2.1226, -3.2545, -3.8014, -4.4111, -5.0867], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8909, device='cuda:0', dtype=torch.float64)
tensor([-2.1190, -3.2494, -3.8006, -4.4166, -5.0835], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0112, device='cuda:0', dtype=torch.float64)
tensor([-2.1162, -3.2432, -3.7980, -4.4164, -5.0811], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9357, device='cuda:0', dtype=torch.float64)
tensor([-2.1152, -3.2373, -3.7940, -4.4107, -5.0809], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8546, device='cuda:0', dtype=torch.float64)
tensor([-2.1154, -3.2363, -3.7914, -4.4050, -5.0799], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8798, device='cuda:0', dtype=torch.float64)
tensor([-2.1178, -3.2404, -3.7838, -4.4002, -5.0746], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7759, device='cuda:0', dtype=torch.float64)
tensor([-2.1207, -3.2499, -3.7761, -4.3972, -5.0667], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8498, device='cuda:0', dtype=torch.float64)
tensor([-2.1243, -3.2617, -3.7719, -4.3956, -5.0578], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8811, device='cuda:0', dtype=torch.float64)
tensor([-2.1242, -3.2661, -3.7719, -4.3900, -5.0512], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9053, device='cuda:0', dtype=torch.float64)
tensor([-2.1218, -3.2611, -3.7765, -4.3849, -5.0470], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8713, device='cuda:0', dtype=torch.float64)
tensor([-2.1164, -3.2537, -3.7822, -4.3852, -5.0410], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8849, device='cuda:0', dtype=torch.float64)
tensor([-2.1125, -3.2514, -3.7833, -4.3871, -5.0340], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7991, device='cuda:0', dtype=torch.float64)
tensor([-2.1125, -3.2509, -3.7811, -4.3850, -5.0267], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9030, device='cuda:0', dtype=torch.float64)
tensor([-2.1152, -3.2498, -3.7737, -4.3826, -5.0178], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8742, device='cuda:0', dtype=torch.float64)
tensor([-2.1194, -3.2447, -3.7655, -4.3769, -5.0104], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7857, device='cuda:0', dtype=torch.float64)
tensor([-2.1223, -3.2389, -3.7603, -4.3739, -5.0072], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8854, device='cuda:0', dtype=torch.float64)
tensor([-2.1227, -3.2381, -3.7571, -4.3783, -5.0080], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9188, device='cuda:0', dtype=torch.float64)
tensor([-2.1204, -3.2408, -3.7580, -4.3879, -5.0064], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7686, device='cuda:0', dtype=torch.float64)
tensor([-2.1191, -3.2448, -3.7561, -4.3938, -5.0032], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9231, device='cuda:0', dtype=torch.float64)
tensor([-2.1168, -3.2489, -3.7525, -4.3895, -4.9993], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9603, device='cuda:0', dtype=torch.float64)
tensor([-2.1161, -3.2496, -3.7500, -4.3771, -4.9958], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8855, device='cuda:0', dtype=torch.float64)
tensor([-2.1186, -3.2469, -3.7431, -4.3615, -4.9943], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8781, device='cuda:0', dtype=torch.float64)
tensor([-2.1202, -3.2429, -3.7362, -4.3520, -4.9956], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8517, device='cuda:0', dtype=torch.float64)
tensor([-2.1224, -3.2383, -3.7313, -4.3488, -4.9986], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8484, device='cuda:0', dtype=torch.float64)
tensor([-2.1229, -3.2355, -3.7340, -4.3503, -4.9953], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8215, device='cuda:0', dtype=torch.float64)
tensor([-2.1241, -3.2357, -3.7426, -4.3507, -4.9889], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0012, device='cuda:0', dtype=torch.float64)
tensor([-2.1247, -3.2329, -3.7535, -4.3478, -4.9819], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8851, device='cuda:0', dtype=torch.float64)
tensor([-2.1236, -3.2335, -3.7561, -4.3448, -4.9742], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9053, device='cuda:0', dtype=torch.float64)
tensor([-2.1214, -3.2375, -3.7517, -4.3450, -4.9622], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8107, device='cuda:0', dtype=torch.float64)
tensor([-2.1179, -3.2392, -3.7420, -4.3462, -4.9570], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9662, device='cuda:0', dtype=torch.float64)
tensor([-2.1135, -3.2368, -3.7389, -4.3472, -4.9515], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9431, device='cuda:0', dtype=torch.float64)
tensor([-2.1091, -3.2321, -3.7400, -4.3445, -4.9525], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8169, device='cuda:0', dtype=torch.float64)
tensor([-2.1051, -3.2242, -3.7459, -4.3414, -4.9531], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8518, device='cuda:0', dtype=torch.float64)
tensor([-2.1027, -3.2173, -3.7495, -4.3427, -4.9521], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9764, device='cuda:0', dtype=torch.float64)
tensor([-2.1022, -3.2133, -3.7474, -4.3446, -4.9485], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8855, device='cuda:0', dtype=torch.float64)
tensor([-2.1041, -3.2118, -3.7441, -4.3459, -4.9425], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8898, device='cuda:0', dtype=torch.float64)
tensor([-2.1072, -3.2120, -3.7442, -4.3419, -4.9342], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9552, device='cuda:0', dtype=torch.float64)
tensor([-2.1130, -3.2166, -3.7422, -4.3273, -4.9288], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8475, device='cuda:0', dtype=torch.float64)
tensor([-2.1185, -3.2207, -3.7402, -4.3138, -4.9247], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8409, device='cuda:0', dtype=torch.float64)
tensor([-2.1201, -3.2248, -3.7351, -4.3096, -4.9189], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8744, device='cuda:0', dtype=torch.float64)
tensor([-2.1187, -3.2250, -3.7270, -4.3143, -4.9118], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8923, device='cuda:0', dtype=torch.float64)
tensor([-2.1167, -3.2198, -3.7193, -4.3178, -4.9069], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9049, device='cuda:0', dtype=torch.float64)
tensor([-2.1134, -3.2144, -3.7197, -4.3203, -4.9025], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8348, device='cuda:0', dtype=torch.float64)
tensor([-2.1100, -3.2111, -3.7224, -4.3218, -4.8963], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8327, device='cuda:0', dtype=torch.float64)
tensor([-2.1075, -3.2080, -3.7263, -4.3202, -4.8880], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8050, device='cuda:0', dtype=torch.float64)
tensor([-2.1058, -3.2087, -3.7292, -4.3180, -4.8836], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8865, device='cuda:0', dtype=torch.float64)
tensor([-2.1047, -3.2076, -3.7374, -4.3164, -4.8816], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8183, device='cuda:0', dtype=torch.float64)
tensor([-2.1030, -3.2035, -3.7440, -4.3170, -4.8815], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8211, device='cuda:0', dtype=torch.float64)
tensor([-2.1013, -3.1982, -3.7411, -4.3163, -4.8845], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8808, device='cuda:0', dtype=torch.float64)
tensor([-2.1024, -3.1942, -3.7283, -4.3176, -4.8875], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7872, device='cuda:0', dtype=torch.float64)
tensor([-2.1022, -3.1947, -3.7139, -4.3203, -4.8875], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8429, device='cuda:0', dtype=torch.float64)
tensor([-2.1040, -3.1979, -3.7017, -4.3201, -4.8845], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7996, device='cuda:0', dtype=torch.float64)
tensor([-2.1041, -3.2029, -3.6959, -4.3193, -4.8814], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8363, device='cuda:0', dtype=torch.float64)
tensor([-2.1022, -3.2042, -3.6992, -4.3211, -4.8755], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8486, device='cuda:0', dtype=torch.float64)
tensor([-2.0997, -3.2012, -3.7068, -4.3205, -4.8681], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8714, device='cuda:0', dtype=torch.float64)
tensor([-2.0990, -3.1972, -3.7119, -4.3143, -4.8646], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9419, device='cuda:0', dtype=torch.float64)
tensor([-2.1002, -3.1965, -3.7140, -4.3062, -4.8590], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9168, device='cuda:0', dtype=torch.float64)
tensor([-2.1029, -3.1991, -3.7138, -4.2936, -4.8514], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8230, device='cuda:0', dtype=torch.float64)
tensor([-2.1061, -3.1995, -3.7145, -4.2833, -4.8444], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8645, device='cuda:0', dtype=torch.float64)
tensor([-2.1082, -3.1968, -3.7124, -4.2767, -4.8410], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9080, device='cuda:0', dtype=torch.float64)
tensor([-2.1058, -3.1935, -3.7091, -4.2799, -4.8408], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8477, device='cuda:0', dtype=torch.float64)
tensor([-2.1019, -3.1915, -3.7059, -4.2824, -4.8444], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8617, device='cuda:0', dtype=torch.float64)
tensor([-2.0975, -3.1927, -3.7010, -4.2833, -4.8481], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8397, device='cuda:0', dtype=torch.float64)
tensor([-2.0919, -3.1975, -3.6917, -4.2855, -4.8508], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9093, device='cuda:0', dtype=torch.float64)
tensor([-2.0866, -3.1997, -3.6859, -4.2854, -4.8531], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8128, device='cuda:0', dtype=torch.float64)
tensor([-2.0836, -3.1988, -3.6824, -4.2907, -4.8483], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9618, device='cuda:0', dtype=torch.float64)
tensor([-2.0837, -3.1945, -3.6895, -4.2984, -4.8389], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8891, device='cuda:0', dtype=torch.float64)
tensor([-2.0868, -3.1914, -3.6973, -4.2977, -4.8313], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7596, device='cuda:0', dtype=torch.float64)
tensor([-2.0914, -3.1860, -3.6998, -4.2919, -4.8265], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8393, device='cuda:0', dtype=torch.float64)
tensor([-2.0925, -3.1814, -3.6989, -4.2843, -4.8265], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0368, device='cuda:0', dtype=torch.float64)
tensor([-2.0910, -3.1808, -3.6904, -4.2825, -4.8208], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8682, device='cuda:0', dtype=torch.float64)
tensor([-2.0903, -3.1818, -3.6736, -4.2844, -4.8117], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0254, device='cuda:0', dtype=torch.float64)
tensor([-2.0895, -3.1816, -3.6611, -4.2845, -4.8029], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9250, device='cuda:0', dtype=torch.float64)
tensor([-2.0892, -3.1832, -3.6601, -4.2828, -4.7926], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9124, device='cuda:0', dtype=torch.float64)
tensor([-2.0940, -3.1888, -3.6629, -4.2774, -4.7889], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0137, device='cuda:0', dtype=torch.float64)
tensor([-2.0979, -3.1897, -3.6710, -4.2768, -4.7878], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8078, device='cuda:0', dtype=torch.float64)
tensor([-2.1007, -3.1845, -3.6782, -4.2794, -4.7865], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9512, device='cuda:0', dtype=torch.float64)
tensor([-2.1041, -3.1749, -3.6830, -4.2797, -4.7871], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9624, device='cuda:0', dtype=torch.float64)
tensor([-2.1065, -3.1694, -3.6851, -4.2767, -4.7845], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7816, device='cuda:0', dtype=torch.float64)
tensor([-2.1063, -3.1668, -3.6828, -4.2733, -4.7812], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8279, device='cuda:0', dtype=torch.float64)
tensor([-2.1036, -3.1685, -3.6756, -4.2688, -4.7814], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9304, device='cuda:0', dtype=torch.float64)
tensor([-2.1007, -3.1743, -3.6624, -4.2601, -4.7802], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8700, device='cuda:0', dtype=torch.float64)
tensor([-2.0992, -3.1820, -3.6548, -4.2526, -4.7724], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9514, device='cuda:0', dtype=torch.float64)
tensor([-2.0946, -3.1857, -3.6584, -4.2520, -4.7616], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9447, device='cuda:0', dtype=torch.float64)
tensor([-2.0927, -3.1835, -3.6641, -4.2517, -4.7490], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9180, device='cuda:0', dtype=torch.float64)
tensor([-2.0940, -3.1826, -3.6653, -4.2478, -4.7420], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8076, device='cuda:0', dtype=torch.float64)
tensor([-2.0951, -3.1803, -3.6591, -4.2389, -4.7416], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8901, device='cuda:0', dtype=torch.float64)
tensor([-2.0938, -3.1755, -3.6532, -4.2332, -4.7470], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8484, device='cuda:0', dtype=torch.float64)
tensor([-2.0942, -3.1713, -3.6511, -4.2285, -4.7530], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8940, device='cuda:0', dtype=torch.float64)
tensor([-2.0919, -3.1690, -3.6582, -4.2291, -4.7502], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8068, device='cuda:0', dtype=torch.float64)
tensor([-2.0922, -3.1719, -3.6634, -4.2302, -4.7395], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9725, device='cuda:0', dtype=torch.float64)
tensor([-2.0951, -3.1815, -3.6593, -4.2323, -4.7267], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8555, device='cuda:0', dtype=torch.float64)
tensor([-2.0947, -3.1861, -3.6566, -4.2365, -4.7144], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8986, device='cuda:0', dtype=torch.float64)
tensor([-2.0909, -3.1859, -3.6554, -4.2423, -4.7092], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8554, device='cuda:0', dtype=torch.float64)
tensor([-2.0856, -3.1798, -3.6551, -4.2401, -4.7121], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8399, device='cuda:0', dtype=torch.float64)
tensor([-2.0815, -3.1745, -3.6551, -4.2388, -4.7240], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9001, device='cuda:0', dtype=torch.float64)
tensor([-2.0787, -3.1725, -3.6543, -4.2391, -4.7359], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0248, device='cuda:0', dtype=torch.float64)
tensor([-2.0820, -3.1714, -3.6544, -4.2310, -4.7468], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0502, device='cuda:0', dtype=torch.float64)
tensor([-2.0855, -3.1694, -3.6454, -4.2297, -4.7468], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9525, device='cuda:0', dtype=torch.float64)
tensor([-2.0863, -3.1670, -3.6382, -4.2326, -4.7368], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0050, device='cuda:0', dtype=torch.float64)
tensor([-2.0858, -3.1601, -3.6361, -4.2388, -4.7270], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9062, device='cuda:0', dtype=torch.float64)
tensor([-2.0874, -3.1597, -3.6371, -4.2385, -4.7148], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0240, device='cuda:0', dtype=torch.float64)
tensor([-2.0887, -3.1636, -3.6398, -4.2302, -4.7037], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9406, device='cuda:0', dtype=torch.float64)
tensor([-2.0900, -3.1690, -3.6389, -4.2233, -4.7023], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9918, device='cuda:0', dtype=torch.float64)
tensor([-2.0915, -3.1739, -3.6317, -4.2204, -4.7051], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8852, device='cuda:0', dtype=torch.float64)
tensor([-2.0903, -3.1724, -3.6205, -4.2245, -4.7027], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0067, device='cuda:0', dtype=torch.float64)
tensor([-2.0918, -3.1663, -3.6070, -4.2190, -4.6954], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8907, device='cuda:0', dtype=torch.float64)
tensor([-2.0944, -3.1585, -3.5981, -4.2118, -4.6896], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8965, device='cuda:0', dtype=torch.float64)
tensor([-2.0976, -3.1559, -3.5915, -4.1982, -4.6872], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8557, device='cuda:0', dtype=torch.float64)
tensor([-2.0998, -3.1612, -3.5876, -4.1859, -4.6833], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9292, device='cuda:0', dtype=torch.float64)
tensor([-2.0971, -3.1667, -3.5844, -4.1805, -4.6827], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9781, device='cuda:0', dtype=torch.float64)
tensor([-2.0902, -3.1668, -3.5896, -4.1898, -4.6814], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0511, device='cuda:0', dtype=torch.float64)
tensor([-2.0835, -3.1581, -3.6014, -4.1983, -4.6846], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9734, device='cuda:0', dtype=torch.float64)
tensor([-2.0826, -3.1489, -3.6130, -4.1915, -4.6827], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0211, device='cuda:0', dtype=torch.float64)
tensor([-2.0844, -3.1414, -3.6240, -4.1841, -4.6677], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9422, device='cuda:0', dtype=torch.float64)
tensor([-2.0852, -3.1373, -3.6351, -4.1740, -4.6486], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0975, device='cuda:0', dtype=torch.float64)
tensor([-2.0903, -3.1393, -3.6388, -4.1675, -4.6391], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8817, device='cuda:0', dtype=torch.float64)
tensor([-2.0933, -3.1422, -3.6421, -4.1687, -4.6386], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0093, device='cuda:0', dtype=torch.float64)
tensor([-2.0894, -3.1443, -3.6419, -4.1779, -4.6405], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8795, device='cuda:0', dtype=torch.float64)
tensor([-2.0821, -3.1477, -3.6382, -4.1930, -4.6387], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9849, device='cuda:0', dtype=torch.float64)
tensor([-2.0745, -3.1490, -3.6311, -4.2066, -4.6401], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0463, device='cuda:0', dtype=torch.float64)
tensor([-2.0726, -3.1504, -3.6194, -4.2098, -4.6439], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0413, device='cuda:0', dtype=torch.float64)
tensor([-2.0781, -3.1506, -3.6168, -4.2038, -4.6475], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8206, device='cuda:0', dtype=torch.float64)
tensor([-2.0860, -3.1522, -3.6159, -4.1951, -4.6503], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0221, device='cuda:0', dtype=torch.float64)
tensor([-2.0919, -3.1448, -3.6133, -4.1910, -4.6492], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8489, device='cuda:0', dtype=torch.float64)
tensor([-2.0971, -3.1367, -3.6123, -4.1943, -4.6467], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8844, device='cuda:0', dtype=torch.float64)
tensor([-2.1005, -3.1296, -3.6099, -4.1925, -4.6429], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9724, device='cuda:0', dtype=torch.float64)
tensor([-2.1044, -3.1298, -3.6051, -4.1820, -4.6429], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9843, device='cuda:0', dtype=torch.float64)
tensor([-2.1039, -3.1298, -3.5978, -4.1703, -4.6412], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1651, device='cuda:0', dtype=torch.float64)
tensor([-2.0993, -3.1331, -3.5884, -4.1694, -4.6428], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0451, device='cuda:0', dtype=torch.float64)
tensor([-2.0899, -3.1300, -3.5877, -4.1860, -4.6339], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0284, device='cuda:0', dtype=torch.float64)
tensor([-2.0828, -3.1255, -3.5959, -4.1884, -4.6211], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8942, device='cuda:0', dtype=torch.float64)
tensor([-2.0797, -3.1265, -3.6016, -4.1772, -4.6008], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0912, device='cuda:0', dtype=torch.float64)
tensor([-2.0855, -3.1307, -3.6024, -4.1584, -4.5938], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0596, device='cuda:0', dtype=torch.float64)
tensor([-2.0954, -3.1347, -3.5940, -4.1467, -4.5979], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1546, device='cuda:0', dtype=torch.float64)
tensor([-2.1003, -3.1346, -3.5909, -4.1549, -4.6042], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0338, device='cuda:0', dtype=torch.float64)
tensor([-2.1009, -3.1279, -3.5958, -4.1776, -4.6058], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2412, device='cuda:0', dtype=torch.float64)
tensor([-2.1004, -3.1247, -3.6032, -4.1916, -4.5990], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1644, device='cuda:0', dtype=torch.float64)
tensor([-2.1004, -3.1292, -3.6063, -4.1921, -4.5912], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1279, device='cuda:0', dtype=torch.float64)
tensor([-2.0979, -3.1347, -3.5996, -4.1869, -4.5885], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9373, device='cuda:0', dtype=torch.float64)
tensor([-2.0948, -3.1408, -3.5844, -4.1842, -4.5857], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9444, device='cuda:0', dtype=torch.float64)
tensor([-2.0858, -3.1364, -3.5786, -4.1839, -4.5807], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9668, device='cuda:0', dtype=torch.float64)
tensor([-2.0722, -3.1226, -3.5819, -4.1807, -4.5797], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8702, device='cuda:0', dtype=torch.float64)
tensor([-2.0613, -3.1188, -3.5878, -4.1743, -4.5810], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9574, device='cuda:0', dtype=torch.float64)
tensor([-2.0567, -3.1256, -3.5939, -4.1673, -4.5861], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9936, device='cuda:0', dtype=torch.float64)
tensor([-2.0537, -3.1362, -3.5962, -4.1684, -4.5872], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9725, device='cuda:0', dtype=torch.float64)
tensor([-2.0562, -3.1445, -3.5957, -4.1690, -4.5839], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5410, device='cuda:0', dtype=torch.float64)
tensor([-2.0679, -3.1498, -3.5973, -4.1465, -4.5765], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8241, device='cuda:0', dtype=torch.float64)
tensor([-2.0784, -3.1494, -3.6054, -4.1324, -4.5713], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4117, device='cuda:0', dtype=torch.float64)
tensor([-2.0890, -3.1422, -3.6063, -4.1303, -4.5728], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1461, device='cuda:0', dtype=torch.float64)
tensor([-2.0969, -3.1333, -3.5990, -4.1369, -4.5817], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9102, device='cuda:0', dtype=torch.float64)
tensor([-2.0957, -3.1238, -3.5892, -4.1404, -4.5837], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9813, device='cuda:0', dtype=torch.float64)
tensor([-2.0906, -3.1191, -3.5810, -4.1314, -4.5809], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0389, device='cuda:0', dtype=torch.float64)
tensor([-2.0792, -3.1245, -3.5778, -4.1279, -4.5693], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8876, device='cuda:0', dtype=torch.float64)
tensor([-2.0671, -3.1345, -3.5775, -4.1319, -4.5557], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9251, device='cuda:0', dtype=torch.float64)
tensor([-2.0566, -3.1464, -3.5788, -4.1365, -4.5458], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3308, device='cuda:0', dtype=torch.float64)
tensor([-2.0508, -3.1459, -3.5867, -4.1329, -4.5401], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9387, device='cuda:0', dtype=torch.float64)
tensor([-2.0550, -3.1429, -3.5877, -4.1319, -4.5408], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9990, device='cuda:0', dtype=torch.float64)
tensor([-2.0613, -3.1378, -3.5861, -4.1365, -4.5414], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9822, device='cuda:0', dtype=torch.float64)
tensor([-2.0736, -3.1349, -3.5786, -4.1345, -4.5436], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9488, device='cuda:0', dtype=torch.float64)
tensor([-2.0830, -3.1295, -3.5629, -4.1209, -4.5453], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0205, device='cuda:0', dtype=torch.float64)
tensor([-2.0875, -3.1209, -3.5691, -4.1116, -4.5490], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9530, device='cuda:0', dtype=torch.float64)
tensor([-2.0833, -3.1111, -3.5788, -4.1194, -4.5489], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9873, device='cuda:0', dtype=torch.float64)
tensor([-2.0739, -3.1074, -3.5889, -4.1422, -4.5486], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0547, device='cuda:0', dtype=torch.float64)
tensor([-2.0684, -3.1103, -3.5893, -4.1519, -4.5495], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0615, device='cuda:0', dtype=torch.float64)
tensor([-2.0631, -3.1132, -3.5876, -4.1486, -4.5532], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0355, device='cuda:0', dtype=torch.float64)
tensor([-2.0677, -3.1152, -3.5802, -4.1320, -4.5589], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0168, device='cuda:0', dtype=torch.float64)
tensor([-2.0727, -3.1138, -3.5740, -4.1218, -4.5482], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0083, device='cuda:0', dtype=torch.float64)
tensor([-2.0743, -3.1168, -3.5722, -4.1154, -4.5343], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9646, device='cuda:0', dtype=torch.float64)
tensor([-2.0752, -3.1225, -3.5735, -4.1109, -4.5194], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0575, device='cuda:0', dtype=torch.float64)
tensor([-2.0792, -3.1290, -3.5739, -4.1003, -4.5081], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0737, device='cuda:0', dtype=torch.float64)
tensor([-2.0807, -3.1249, -3.5779, -4.0811, -4.5021], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0788, device='cuda:0', dtype=torch.float64)
tensor([-2.0776, -3.1213, -3.5844, -4.0836, -4.4989], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9687, device='cuda:0', dtype=torch.float64)
tensor([-2.0754, -3.1213, -3.5747, -4.0954, -4.4939], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1201, device='cuda:0', dtype=torch.float64)
tensor([-2.0826, -3.1249, -3.5584, -4.0952, -4.4871], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1426, device='cuda:0', dtype=torch.float64)
tensor([-2.0906, -3.1216, -3.5461, -4.0965, -4.4831], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9991, device='cuda:0', dtype=torch.float64)
tensor([-2.0934, -3.1120, -3.5414, -4.0953, -4.4796], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9568, device='cuda:0', dtype=torch.float64)
tensor([-2.0932, -3.1139, -3.5448, -4.0931, -4.4800], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1263, device='cuda:0', dtype=torch.float64)
tensor([-2.0838, -3.1177, -3.5516, -4.1020, -4.4790], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0949, device='cuda:0', dtype=torch.float64)
tensor([-2.0715, -3.1238, -3.5543, -4.1103, -4.4799], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0493, device='cuda:0', dtype=torch.float64)
tensor([-2.0604, -3.1315, -3.5579, -4.1119, -4.4792], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2816, device='cuda:0', dtype=torch.float64)
tensor([-2.0539, -3.1319, -3.5512, -4.0990, -4.4776], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0212, device='cuda:0', dtype=torch.float64)
tensor([-2.0574, -3.1247, -3.5364, -4.0825, -4.4767], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0024, device='cuda:0', dtype=torch.float64)
tensor([-2.0654, -3.1191, -3.5213, -4.0762, -4.4631], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1639, device='cuda:0', dtype=torch.float64)
tensor([-2.0712, -3.1165, -3.5186, -4.0800, -4.4565], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0899, device='cuda:0', dtype=torch.float64)
tensor([-2.0782, -3.1098, -3.5267, -4.0745, -4.4561], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2958, device='cuda:0', dtype=torch.float64)
tensor([-2.0836, -3.1040, -3.5383, -4.0572, -4.4572], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9624, device='cuda:0', dtype=torch.float64)
tensor([-2.0852, -3.1035, -3.5441, -4.0490, -4.4574], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9780, device='cuda:0', dtype=torch.float64)
tensor([-2.0874, -3.1048, -3.5401, -4.0545, -4.4542], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0362, device='cuda:0', dtype=torch.float64)
tensor([-2.0922, -3.1085, -3.5342, -4.0600, -4.4509], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2721, device='cuda:0', dtype=torch.float64)
tensor([-2.0916, -3.1034, -3.5383, -4.0608, -4.4495], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0399, device='cuda:0', dtype=torch.float64)
tensor([-2.0878, -3.0971, -3.5456, -4.0715, -4.4537], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1541, device='cuda:0', dtype=torch.float64)
tensor([-2.0821, -3.0927, -3.5441, -4.0834, -4.4524], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9671, device='cuda:0', dtype=torch.float64)
tensor([-2.0757, -3.0874, -3.5560, -4.1043, -4.4416], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0101, device='cuda:0', dtype=torch.float64)
tensor([-2.0704, -3.0842, -3.5685, -4.1048, -4.4330], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9834, device='cuda:0', dtype=torch.float64)
tensor([-2.0665, -3.0815, -3.5799, -4.0921, -4.4325], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0838, device='cuda:0', dtype=torch.float64)
tensor([-2.0670, -3.0854, -3.5761, -4.0667, -4.4326], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0225, device='cuda:0', dtype=torch.float64)
tensor([-2.0707, -3.0918, -3.5605, -4.0546, -4.4381], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9853, device='cuda:0', dtype=torch.float64)
tensor([-2.0711, -3.0916, -3.5474, -4.0610, -4.4356], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9574, device='cuda:0', dtype=torch.float64)
tensor([-2.0742, -3.0900, -3.5357, -4.0617, -4.4350], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0551, device='cuda:0', dtype=torch.float64)
tensor([-2.0756, -3.0931, -3.5254, -4.0519, -4.4424], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0687, device='cuda:0', dtype=torch.float64)
tensor([-2.0770, -3.0950, -3.5150, -4.0435, -4.4416], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2147, device='cuda:0', dtype=torch.float64)
tensor([-2.0739, -3.0928, -3.5096, -4.0405, -4.4400], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0915, device='cuda:0', dtype=torch.float64)
tensor([-2.0664, -3.0913, -3.5052, -4.0496, -4.4422], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1572, device='cuda:0', dtype=torch.float64)
tensor([-2.0572, -3.0908, -3.5008, -4.0783, -4.4318], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3670, device='cuda:0', dtype=torch.float64)
tensor([-2.0569, -3.0953, -3.4977, -4.0913, -4.4185], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2050, device='cuda:0', dtype=torch.float64)
tensor([-2.0591, -3.1005, -3.5115, -4.0953, -4.3981], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2058, device='cuda:0', dtype=torch.float64)
tensor([-2.0708, -3.1102, -3.5173, -4.0922, -4.3822], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2590, device='cuda:0', dtype=torch.float64)
tensor([-2.0819, -3.1216, -3.5165, -4.0847, -4.3766], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1973, device='cuda:0', dtype=torch.float64)
tensor([-2.0937, -3.1211, -3.5040, -4.0752, -4.3852], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0418, device='cuda:0', dtype=torch.float64)
tensor([-2.0977, -3.1179, -3.4964, -4.0591, -4.3932], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3802, device='cuda:0', dtype=torch.float64)
tensor([-2.0918, -3.1045, -3.4970, -4.0266, -4.3910], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9768, device='cuda:0', dtype=torch.float64)
tensor([-2.0802, -3.0957, -3.5030, -4.0141, -4.3741], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0148, device='cuda:0', dtype=torch.float64)
tensor([-2.0718, -3.0914, -3.5113, -4.0067, -4.3507], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0068, device='cuda:0', dtype=torch.float64)
tensor([-2.0685, -3.0937, -3.5241, -4.0065, -4.3425], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0886, device='cuda:0', dtype=torch.float64)
tensor([-2.0689, -3.0956, -3.5451, -3.9999, -4.3536], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0486, device='cuda:0', dtype=torch.float64)
tensor([-2.0722, -3.0953, -3.5610, -3.9967, -4.3673], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2409, device='cuda:0', dtype=torch.float64)
tensor([-2.0707, -3.0905, -3.5688, -4.0157, -4.3858], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0676, device='cuda:0', dtype=torch.float64)
tensor([-2.0687, -3.0926, -3.5617, -4.0401, -4.3937], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9934, device='cuda:0', dtype=torch.float64)
tensor([-2.0712, -3.0906, -3.5464, -4.0472, -4.3935], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1357, device='cuda:0', dtype=torch.float64)
tensor([-2.0798, -3.0952, -3.5204, -4.0339, -4.3830], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2449, device='cuda:0', dtype=torch.float64)
tensor([-2.0802, -3.0879, -3.5109, -4.0224, -4.3605], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9991, device='cuda:0', dtype=torch.float64)
tensor([-2.0746, -3.0702, -3.5059, -4.0349, -4.3420], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8127, device='cuda:0', dtype=torch.float64)
tensor([-2.0647, -3.0522, -3.5061, -4.0554, -4.3319], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1219, device='cuda:0', dtype=torch.float64)
tensor([-2.0555, -3.0421, -3.5100, -4.0570, -4.3382], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1860, device='cuda:0', dtype=torch.float64)
tensor([-2.0528, -3.0421, -3.5171, -4.0356, -4.3511], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9962, device='cuda:0', dtype=torch.float64)
tensor([-2.0561, -3.0507, -3.5284, -4.0109, -4.3683], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2261, device='cuda:0', dtype=torch.float64)
tensor([-2.0615, -3.0655, -3.5293, -4.0028, -4.3782], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2334, device='cuda:0', dtype=torch.float64)
tensor([-2.0697, -3.0818, -3.5151, -4.0221, -4.3661], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1928, device='cuda:0', dtype=torch.float64)
tensor([-2.0813, -3.0994, -3.4891, -4.0355, -4.3482], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7755, device='cuda:0', dtype=torch.float64)
tensor([-2.0968, -3.1102, -3.4703, -4.0350, -4.3331], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0179, device='cuda:0', dtype=torch.float64)
tensor([-2.1017, -3.1134, -3.4608, -4.0354, -4.3229], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1844, device='cuda:0', dtype=torch.float64)
tensor([-2.0934, -3.1036, -3.4675, -4.0471, -4.3308], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4790, device='cuda:0', dtype=torch.float64)
tensor([-2.0716, -3.0832, -3.4895, -4.0752, -4.3445], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0263, device='cuda:0', dtype=torch.float64)
tensor([-2.0512, -3.0546, -3.5055, -4.0871, -4.3571], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1029, device='cuda:0', dtype=torch.float64)
tensor([-2.0377, -3.0335, -3.5072, -4.0832, -4.3624], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3618, device='cuda:0', dtype=torch.float64)
tensor([-2.0347, -3.0259, -3.4949, -4.0510, -4.3643], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1067, device='cuda:0', dtype=torch.float64)
tensor([-2.0359, -3.0291, -3.4956, -4.0264, -4.3545], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2852, device='cuda:0', dtype=torch.float64)
tensor([-2.0436, -3.0460, -3.4926, -4.0224, -4.3428], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1237, device='cuda:0', dtype=torch.float64)
tensor([-2.0585, -3.0701, -3.4920, -4.0280, -4.3372], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2722, device='cuda:0', dtype=torch.float64)
tensor([-2.0741, -3.0927, -3.5018, -4.0142, -4.3433], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0398, device='cuda:0', dtype=torch.float64)
tensor([-2.0814, -3.1022, -3.5207, -3.9982, -4.3552], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2674, device='cuda:0', dtype=torch.float64)
tensor([-2.0823, -3.1024, -3.5226, -3.9908, -4.3602], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1813, device='cuda:0', dtype=torch.float64)
tensor([-2.0823, -3.0881, -3.4979, -3.9932, -4.3584], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0317, device='cuda:0', dtype=torch.float64)
tensor([-2.0820, -3.0674, -3.4770, -3.9987, -4.3590], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1927, device='cuda:0', dtype=torch.float64)
tensor([-2.0769, -3.0480, -3.4717, -4.0028, -4.3512], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9933, device='cuda:0', dtype=torch.float64)
tensor([-2.0693, -3.0404, -3.4903, -4.0144, -4.3402], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1919, device='cuda:0', dtype=torch.float64)
tensor([-2.0625, -3.0516, -3.5130, -4.0247, -4.3265], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0229, device='cuda:0', dtype=torch.float64)
tensor([-2.0558, -3.0688, -3.5310, -4.0311, -4.3136], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1149, device='cuda:0', dtype=torch.float64)
tensor([-2.0550, -3.0745, -3.5325, -4.0223, -4.3031], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3126, device='cuda:0', dtype=torch.float64)
tensor([-2.0514, -3.0706, -3.5313, -4.0063, -4.2936], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0719, device='cuda:0', dtype=torch.float64)
tensor([-2.0477, -3.0675, -3.5171, -3.9960, -4.2944], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2599, device='cuda:0', dtype=torch.float64)
tensor([-2.0447, -3.0685, -3.5027, -3.9984, -4.2975], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9300, device='cuda:0', dtype=torch.float64)
tensor([-2.0505, -3.0693, -3.4905, -4.0020, -4.3076], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9049, device='cuda:0', dtype=torch.float64)
tensor([-2.0609, -3.0787, -3.4906, -3.9993, -4.3113], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2646, device='cuda:0', dtype=torch.float64)
tensor([-2.0743, -3.0940, -3.4913, -3.9850, -4.3153], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1688, device='cuda:0', dtype=torch.float64)
tensor([-2.0811, -3.1006, -3.4825, -3.9730, -4.3172], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3572, device='cuda:0', dtype=torch.float64)
tensor([-2.0863, -3.0927, -3.4734, -3.9836, -4.3208], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1788, device='cuda:0', dtype=torch.float64)
tensor([-2.0867, -3.0744, -3.4656, -3.9902, -4.3273], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1284, device='cuda:0', dtype=torch.float64)
tensor([-2.0856, -3.0574, -3.4554, -4.0021, -4.3325], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2291, device='cuda:0', dtype=torch.float64)
tensor([-2.0752, -3.0465, -3.4562, -4.0089, -4.3392], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5561, device='cuda:0', dtype=torch.float64)
tensor([-2.0667, -3.0483, -3.4728, -4.0075, -4.3267], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2800, device='cuda:0', dtype=torch.float64)
tensor([-2.0544, -3.0546, -3.4949, -4.0283, -4.2971], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1622, device='cuda:0', dtype=torch.float64)
tensor([-2.0455, -3.0609, -3.5038, -4.0485, -4.2682], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1712, device='cuda:0', dtype=torch.float64)
tensor([-2.0434, -3.0642, -3.5057, -4.0391, -4.2567], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5805, device='cuda:0', dtype=torch.float64)
tensor([-2.0435, -3.0562, -3.4962, -4.0109, -4.2551], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1687, device='cuda:0', dtype=torch.float64)
tensor([-2.0522, -3.0445, -3.4815, -3.9857, -4.2673], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2788, device='cuda:0', dtype=torch.float64)
tensor([-2.0572, -3.0330, -3.4788, -3.9875, -4.2685], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1329, device='cuda:0', dtype=torch.float64)
tensor([-2.0586, -3.0232, -3.4662, -3.9909, -4.2644], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2423, device='cuda:0', dtype=torch.float64)
tensor([-2.0612, -3.0283, -3.4481, -3.9853, -4.2589], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2253, device='cuda:0', dtype=torch.float64)
tensor([-2.0656, -3.0394, -3.4360, -3.9834, -4.2646], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9956, device='cuda:0', dtype=torch.float64)
tensor([-2.0649, -3.0469, -3.4376, -3.9978, -4.2632], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3200, device='cuda:0', dtype=torch.float64)
tensor([-2.0581, -3.0483, -3.4571, -4.0139, -4.2595], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0454, device='cuda:0', dtype=torch.float64)
tensor([-2.0537, -3.0444, -3.4679, -4.0205, -4.2639], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2882, device='cuda:0', dtype=torch.float64)
tensor([-2.0729, -3.0430, -3.4760, -4.0205, -4.2780], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0207, device='cuda:0', dtype=torch.float64)
tensor([-2.0860, -3.0507, -3.4750, -4.0025, -4.2856], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2718, device='cuda:0', dtype=torch.float64)
tensor([-2.0953, -3.0597, -3.4673, -3.9759, -4.2859], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2789, device='cuda:0', dtype=torch.float64)
tensor([-2.0812, -3.0627, -3.4680, -3.9763, -4.2679], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2716, device='cuda:0', dtype=torch.float64)
tensor([-2.0568, -3.0577, -3.4596, -3.9765, -4.2536], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0467, device='cuda:0', dtype=torch.float64)
tensor([-2.0425, -3.0581, -3.4410, -3.9630, -4.2462], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0312, device='cuda:0', dtype=torch.float64)
tensor([-2.0377, -3.0584, -3.4213, -3.9402, -4.2408], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1574, device='cuda:0', dtype=torch.float64)
tensor([-2.0379, -3.0584, -3.4166, -3.9156, -4.2404], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0107, device='cuda:0', dtype=torch.float64)
tensor([-2.0366, -3.0537, -3.4242, -3.9167, -4.2491], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0779, device='cuda:0', dtype=torch.float64)
tensor([-2.0342, -3.0383, -3.4428, -3.9422, -4.2622], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2980, device='cuda:0', dtype=torch.float64)
tensor([-2.0387, -3.0310, -3.4686, -3.9716, -4.2661], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9880, device='cuda:0', dtype=torch.float64)
tensor([-2.0424, -3.0306, -3.4843, -3.9853, -4.2643], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1747, device='cuda:0', dtype=torch.float64)
tensor([-2.0441, -3.0347, -3.4914, -3.9859, -4.2509], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1681, device='cuda:0', dtype=torch.float64)
tensor([-2.0417, -3.0473, -3.4896, -3.9817, -4.2373], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2763, device='cuda:0', dtype=torch.float64)
tensor([-2.0404, -3.0567, -3.4818, -3.9872, -4.2194], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4198, device='cuda:0', dtype=torch.float64)
tensor([-2.0482, -3.0638, -3.4656, -3.9759, -4.2081], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2685, device='cuda:0', dtype=torch.float64)
tensor([-2.0619, -3.0647, -3.4560, -3.9574, -4.1965], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1614, device='cuda:0', dtype=torch.float64)
tensor([-2.0715, -3.0597, -3.4529, -3.9568, -4.1869], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3083, device='cuda:0', dtype=torch.float64)
tensor([-2.0723, -3.0496, -3.4615, -3.9735, -4.1764], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2343, device='cuda:0', dtype=torch.float64)
tensor([-2.0756, -3.0387, -3.4674, -3.9672, -4.1712], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3006, device='cuda:0', dtype=torch.float64)
tensor([-2.0769, -3.0295, -3.4675, -3.9584, -4.1732], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2996, device='cuda:0', dtype=torch.float64)
tensor([-2.0724, -3.0120, -3.4712, -3.9430, -4.1924], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2236, device='cuda:0', dtype=torch.float64)
tensor([-2.0637, -3.0031, -3.4665, -3.9412, -4.2112], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1993, device='cuda:0', dtype=torch.float64)
tensor([-2.0564, -3.0012, -3.4641, -3.9634, -4.2218], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0943, device='cuda:0', dtype=torch.float64)
tensor([-2.0541, -3.0152, -3.4585, -3.9867, -4.2177], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3206, device='cuda:0', dtype=torch.float64)
tensor([-2.0595, -3.0414, -3.4452, -3.9718, -4.2169], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1941, device='cuda:0', dtype=torch.float64)
tensor([-2.0624, -3.0631, -3.4466, -3.9705, -4.2098], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2308, device='cuda:0', dtype=torch.float64)
tensor([-2.0649, -3.0703, -3.4484, -3.9613, -4.2053], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2480, device='cuda:0', dtype=torch.float64)
tensor([-2.0616, -3.0620, -3.4588, -3.9602, -4.2101], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2259, device='cuda:0', dtype=torch.float64)
tensor([-2.0708, -3.0496, -3.4606, -3.9391, -4.2156], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4122, device='cuda:0', dtype=torch.float64)
tensor([-2.0830, -3.0348, -3.4422, -3.8962, -4.2118], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2951, device='cuda:0', dtype=torch.float64)
tensor([-2.0911, -3.0257, -3.4109, -3.8687, -4.1984], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3298, device='cuda:0', dtype=torch.float64)
tensor([-2.0846, -3.0206, -3.3992, -3.8669, -4.1857], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2895, device='cuda:0', dtype=torch.float64)
tensor([-2.0805, -3.0324, -3.3970, -3.8868, -4.1725], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2354, device='cuda:0', dtype=torch.float64)
tensor([-2.0765, -3.0490, -3.4119, -3.9022, -4.1649], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3531, device='cuda:0', dtype=torch.float64)
tensor([-2.0674, -3.0575, -3.4489, -3.9191, -4.1611], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1241, device='cuda:0', dtype=torch.float64)
tensor([-2.0584, -3.0476, -3.4868, -3.9284, -4.1606], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1489, device='cuda:0', dtype=torch.float64)
tensor([-2.0540, -3.0305, -3.4923, -3.9322, -4.1617], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1163, device='cuda:0', dtype=torch.float64)
tensor([-2.0591, -3.0170, -3.4761, -3.9354, -4.1658], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2278, device='cuda:0', dtype=torch.float64)
tensor([-2.0654, -3.0109, -3.4361, -3.9300, -4.1724], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2661, device='cuda:0', dtype=torch.float64)
tensor([-2.0656, -3.0209, -3.4020, -3.9222, -4.1709], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2878, device='cuda:0', dtype=torch.float64)
tensor([-2.0565, -3.0284, -3.4012, -3.9284, -4.1639], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2720, device='cuda:0', dtype=torch.float64)
tensor([-2.0427, -3.0294, -3.4243, -3.9270, -4.1489], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9923, device='cuda:0', dtype=torch.float64)
tensor([-2.0283, -3.0206, -3.4459, -3.9338, -4.1466], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1737, device='cuda:0', dtype=torch.float64)
tensor([-2.0188, -3.0131, -3.4630, -3.9302, -4.1504], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2546, device='cuda:0', dtype=torch.float64)
tensor([-2.0245, -3.0055, -3.4803, -3.9194, -4.1573], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0115, device='cuda:0', dtype=torch.float64)
tensor([-2.0334, -3.0028, -3.4806, -3.9133, -4.1670], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9998, device='cuda:0', dtype=torch.float64)
tensor([-2.0455, -3.0120, -3.4707, -3.9176, -4.1748], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1207, device='cuda:0', dtype=torch.float64)
tensor([-2.0550, -3.0216, -3.4557, -3.9299, -4.1716], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3266, device='cuda:0', dtype=torch.float64)
tensor([-2.0563, -3.0319, -3.4488, -3.9294, -4.1604], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5207, device='cuda:0', dtype=torch.float64)
tensor([-2.0606, -3.0336, -3.4456, -3.9067, -4.1513], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1367, device='cuda:0', dtype=torch.float64)
tensor([-2.0610, -3.0390, -3.4532, -3.8954, -4.1412], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1255, device='cuda:0', dtype=torch.float64)
tensor([-2.0593, -3.0344, -3.4533, -3.9055, -4.1459], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3483, device='cuda:0', dtype=torch.float64)
tensor([-2.0538, -3.0260, -3.4559, -3.9405, -4.1458], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4534, device='cuda:0', dtype=torch.float64)
tensor([-2.0451, -3.0103, -3.4707, -3.9734, -4.1431], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4725, device='cuda:0', dtype=torch.float64)
tensor([-2.0446, -3.0034, -3.4796, -3.9690, -4.1364], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4857, device='cuda:0', dtype=torch.float64)
tensor([-2.0497, -2.9946, -3.4754, -3.9352, -4.1371], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2710, device='cuda:0', dtype=torch.float64)
tensor([-2.0585, -2.9894, -3.4555, -3.9081, -4.1410], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5990, device='cuda:0', dtype=torch.float64)
tensor([-2.0668, -2.9936, -3.4220, -3.9102, -4.1440], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3054, device='cuda:0', dtype=torch.float64)
tensor([-2.0664, -2.9997, -3.4065, -3.9261, -4.1610], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6307, device='cuda:0', dtype=torch.float64)
tensor([-2.0621, -2.9995, -3.4142, -3.9037, -4.1683], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3582, device='cuda:0', dtype=torch.float64)
tensor([-2.0706, -3.0165, -3.4118, -3.8704, -4.1711], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8993, device='cuda:0', dtype=torch.float64)
tensor([-2.0731, -3.0257, -3.3918, -3.8730, -4.1671], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2878, device='cuda:0', dtype=torch.float64)
tensor([-2.0662, -3.0313, -3.3818, -3.9044, -4.1688], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9164, device='cuda:0', dtype=torch.float64)
tensor([-2.0596, -3.0216, -3.3812, -3.9144, -4.1633], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5605, device='cuda:0', dtype=torch.float64)
tensor([-2.0504, -3.0235, -3.3922, -3.9060, -4.1511], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5087, device='cuda:0', dtype=torch.float64)
tensor([-2.0493, -3.0280, -3.3912, -3.9018, -4.1399], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3230, device='cuda:0', dtype=torch.float64)
tensor([-2.0446, -3.0342, -3.3804, -3.8969, -4.1368], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2465, device='cuda:0', dtype=torch.float64)
tensor([-2.0446, -3.0429, -3.3703, -3.8915, -4.1335], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4008, device='cuda:0', dtype=torch.float64)
tensor([-2.0337, -3.0414, -3.3769, -3.9059, -4.1305], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3957, device='cuda:0', dtype=torch.float64)
tensor([-2.0267, -3.0351, -3.3875, -3.9323, -4.1219], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0661, device='cuda:0', dtype=torch.float64)
tensor([-2.0248, -3.0413, -3.3841, -3.9601, -4.1116], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0975, device='cuda:0', dtype=torch.float64)
tensor([-2.0295, -3.0507, -3.3747, -3.9833, -4.1056], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2741, device='cuda:0', dtype=torch.float64)
tensor([-2.0522, -3.0622, -3.3574, -3.9602, -4.1090], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2575, device='cuda:0', dtype=torch.float64)
tensor([-2.0741, -3.0688, -3.3634, -3.9322, -4.1094], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2376, device='cuda:0', dtype=torch.float64)
tensor([-2.0855, -3.0639, -3.3832, -3.9176, -4.1223], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1749, device='cuda:0', dtype=torch.float64)
tensor([-2.0838, -3.0521, -3.4026, -3.9237, -4.1386], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4877, device='cuda:0', dtype=torch.float64)
tensor([-2.0839, -3.0495, -3.3955, -3.9279, -4.1439], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4313, device='cuda:0', dtype=torch.float64)
tensor([-2.0827, -3.0547, -3.3878, -3.9058, -4.1415], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3260, device='cuda:0', dtype=torch.float64)
tensor([-2.0751, -3.0452, -3.3960, -3.8824, -4.1261], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2030, device='cuda:0', dtype=torch.float64)
tensor([-2.0660, -3.0269, -3.4048, -3.8579, -4.1003], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4124, device='cuda:0', dtype=torch.float64)
tensor([-2.0523, -3.0145, -3.4166, -3.8479, -4.0886], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1238, device='cuda:0', dtype=torch.float64)
tensor([-2.0317, -3.0016, -3.4169, -3.8309, -4.1049], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3592, device='cuda:0', dtype=torch.float64)
tensor([-2.0169, -2.9920, -3.4182, -3.8033, -4.1365], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2622, device='cuda:0', dtype=torch.float64)
tensor([-2.0201, -2.9908, -3.4148, -3.7767, -4.1661], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3766, device='cuda:0', dtype=torch.float64)
tensor([-2.0428, -2.9935, -3.4068, -3.7771, -4.1700], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1822, device='cuda:0', dtype=torch.float64)
tensor([-2.0639, -2.9953, -3.3911, -3.7996, -4.1481], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6627, device='cuda:0', dtype=torch.float64)
tensor([-2.0799, -3.0077, -3.3841, -3.8314, -4.1228], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1326, device='cuda:0', dtype=torch.float64)
tensor([-2.0801, -3.0233, -3.3699, -3.8472, -4.1129], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3110, device='cuda:0', dtype=torch.float64)
tensor([-2.0680, -3.0335, -3.3555, -3.8467, -4.1121], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2584, device='cuda:0', dtype=torch.float64)
tensor([-2.0419, -3.0319, -3.3691, -3.8516, -4.1228], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0671, device='cuda:0', dtype=torch.float64)
tensor([-2.0185, -3.0209, -3.3990, -3.8624, -4.1317], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3704, device='cuda:0', dtype=torch.float64)
tensor([-2.0109, -3.0085, -3.4196, -3.8845, -4.1304], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1750, device='cuda:0', dtype=torch.float64)
tensor([-2.0182, -2.9982, -3.4294, -3.8855, -4.1236], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2456, device='cuda:0', dtype=torch.float64)
tensor([-2.0347, -2.9962, -3.4263, -3.8857, -4.1115], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3623, device='cuda:0', dtype=torch.float64)
tensor([-2.0441, -2.9916, -3.4226, -3.8943, -4.0941], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1786, device='cuda:0', dtype=torch.float64)
tensor([-2.0532, -2.9896, -3.4128, -3.9053, -4.0851], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0748, device='cuda:0', dtype=torch.float64)
tensor([-2.0546, -2.9963, -3.3973, -3.9028, -4.0811], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2555, device='cuda:0', dtype=torch.float64)
tensor([-2.0576, -3.0109, -3.3853, -3.8961, -4.0682], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2317, device='cuda:0', dtype=torch.float64)
tensor([-2.0548, -3.0271, -3.3709, -3.9014, -4.0567], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2270, device='cuda:0', dtype=torch.float64)
tensor([-2.0457, -3.0404, -3.3590, -3.9323, -4.0562], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2563, device='cuda:0', dtype=torch.float64)
tensor([-2.0326, -3.0355, -3.3510, -3.9399, -4.0622], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2267, device='cuda:0', dtype=torch.float64)
tensor([-2.0259, -3.0251, -3.3525, -3.9355, -4.0717], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1929, device='cuda:0', dtype=torch.float64)
tensor([-2.0290, -3.0159, -3.3515, -3.9424, -4.0829], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2841, device='cuda:0', dtype=torch.float64)
tensor([-2.0353, -3.0030, -3.3452, -3.9424, -4.0805], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3879, device='cuda:0', dtype=torch.float64)
tensor([-2.0418, -3.0115, -3.3530, -3.9529, -4.0715], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9880, device='cuda:0', dtype=torch.float64)
tensor([-2.0527, -3.0200, -3.3572, -3.9042, -4.0637], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3126, device='cuda:0', dtype=torch.float64)
tensor([-2.0614, -3.0057, -3.3683, -3.8573, -4.0517], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4232, device='cuda:0', dtype=torch.float64)
tensor([-2.0669, -2.9901, -3.3833, -3.8411, -4.0493], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7821, device='cuda:0', dtype=torch.float64)
tensor([-2.0642, -2.9730, -3.3932, -3.8528, -4.0412], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2528, device='cuda:0', dtype=torch.float64)
tensor([-2.0686, -2.9678, -3.3827, -3.8518, -4.0359], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6491, device='cuda:0', dtype=torch.float64)
tensor([-2.0807, -2.9731, -3.3773, -3.8210, -4.0325], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1242, device='cuda:0', dtype=torch.float64)
tensor([-2.0909, -2.9832, -3.3847, -3.8058, -4.0367], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7553, device='cuda:0', dtype=torch.float64)
tensor([-2.0785, -2.9867, -3.3908, -3.8436, -4.0261], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0693, device='cuda:0', dtype=torch.float64)
tensor([-2.0648, -2.9874, -3.3946, -3.9033, -4.0165], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7550, device='cuda:0', dtype=torch.float64)
tensor([-2.0741, -2.9941, -3.3875, -3.9103, -4.0338], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5727, device='cuda:0', dtype=torch.float64)
tensor([-2.0889, -2.9937, -3.3936, -3.8737, -4.0451], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4984, device='cuda:0', dtype=torch.float64)
tensor([-2.0985, -2.9817, -3.4116, -3.8490, -4.0641], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7070, device='cuda:0', dtype=torch.float64)
tensor([-2.0971, -2.9761, -3.4134, -3.8547, -4.0699], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2668, device='cuda:0', dtype=torch.float64)
tensor([-2.0839, -2.9662, -3.4149, -3.8821, -4.0602], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9399, device='cuda:0', dtype=torch.float64)
tensor([-2.0719, -2.9584, -3.4051, -3.8800, -4.0434], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3686, device='cuda:0', dtype=torch.float64)
tensor([-2.0543, -2.9559, -3.4187, -3.8878, -4.0285], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5781, device='cuda:0', dtype=torch.float64)
tensor([-2.0333, -2.9636, -3.4202, -3.8797, -4.0199], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3081, device='cuda:0', dtype=torch.float64)
tensor([-2.0230, -2.9813, -3.4158, -3.8582, -4.0194], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3171, device='cuda:0', dtype=torch.float64)
tensor([-2.0293, -3.0057, -3.3927, -3.8229, -4.0250], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9329, device='cuda:0', dtype=torch.float64)
tensor([-2.0339, -3.0077, -3.3887, -3.7791, -4.0237], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5053, device='cuda:0', dtype=torch.float64)
tensor([-2.0288, -3.0146, -3.3833, -3.7840, -4.0171], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6492, device='cuda:0', dtype=torch.float64)
tensor([-2.0284, -3.0171, -3.3628, -3.8020, -4.0189], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5975, device='cuda:0', dtype=torch.float64)
tensor([-2.0495, -3.0318, -3.3324, -3.8068, -4.0373], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4676, device='cuda:0', dtype=torch.float64)
tensor([-2.0620, -3.0547, -3.3167, -3.8140, -4.0491], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6330, device='cuda:0', dtype=torch.float64)
tensor([-2.0683, -3.0584, -3.3168, -3.8164, -4.0533], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4326, device='cuda:0', dtype=torch.float64)
tensor([-2.0690, -3.0520, -3.3234, -3.8434, -4.0692], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7847, device='cuda:0', dtype=torch.float64)
tensor([-2.0719, -3.0375, -3.3099, -3.8586, -4.0638], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2562, device='cuda:0', dtype=torch.float64)
tensor([-2.0815, -3.0243, -3.3050, -3.8579, -4.0704], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8927, device='cuda:0', dtype=torch.float64)
tensor([-2.0834, -3.0100, -3.3266, -3.7981, -4.0464], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3772, device='cuda:0', dtype=torch.float64)
tensor([-2.0818, -2.9965, -3.3532, -3.7557, -4.0377], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3871, device='cuda:0', dtype=torch.float64)
tensor([-2.0679, -2.9796, -3.3751, -3.7635, -4.0356], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7093, device='cuda:0', dtype=torch.float64)
tensor([-2.0531, -2.9722, -3.3715, -3.8063, -4.0392], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2809, device='cuda:0', dtype=torch.float64)
tensor([-2.0445, -2.9695, -3.3517, -3.8458, -4.0424], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4396, device='cuda:0', dtype=torch.float64)
tensor([-2.0426, -2.9802, -3.3490, -3.8450, -4.0383], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3028, device='cuda:0', dtype=torch.float64)
tensor([-2.0513, -2.9893, -3.3560, -3.8353, -4.0282], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3244, device='cuda:0', dtype=torch.float64)
tensor([-2.0567, -2.9897, -3.3728, -3.8424, -4.0165], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1596, device='cuda:0', dtype=torch.float64)
tensor([-2.0688, -2.9760, -3.3885, -3.8578, -4.0250], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2554, device='cuda:0', dtype=torch.float64)
tensor([-2.0854, -2.9720, -3.4049, -3.8710, -4.0484], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5089, device='cuda:0', dtype=torch.float64)
tensor([-2.1043, -2.9719, -3.4284, -3.8553, -4.0745], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4205, device='cuda:0', dtype=torch.float64)
tensor([-2.1207, -2.9857, -3.4336, -3.8177, -4.0984], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7909, device='cuda:0', dtype=torch.float64)
tensor([-2.1198, -3.0060, -3.3935, -3.7957, -4.1003], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3790, device='cuda:0', dtype=torch.float64)
tensor([-2.0949, -3.0184, -3.3760, -3.7939, -4.0765], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2299, device='cuda:0', dtype=torch.float64)
tensor([-2.0727, -3.0267, -3.3703, -3.8067, -4.0424], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3525, device='cuda:0', dtype=torch.float64)
tensor([-2.0519, -3.0244, -3.3690, -3.8171, -4.0137], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2977, device='cuda:0', dtype=torch.float64)
tensor([-2.0353, -3.0089, -3.3629, -3.8364, -3.9929], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4841, device='cuda:0', dtype=torch.float64)
tensor([-2.0235, -2.9853, -3.3745, -3.8562, -3.9831], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4691, device='cuda:0', dtype=torch.float64)
tensor([-2.0266, -2.9597, -3.3585, -3.8703, -3.9962], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3443, device='cuda:0', dtype=torch.float64)
tensor([-2.0330, -2.9501, -3.3347, -3.8686, -4.0158], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4994, device='cuda:0', dtype=torch.float64)
tensor([-2.0350, -2.9615, -3.3400, -3.8424, -4.0358], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4457, device='cuda:0', dtype=torch.float64)
tensor([-2.0321, -2.9722, -3.3617, -3.8093, -4.0462], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1100, device='cuda:0', dtype=torch.float64)
tensor([-2.0346, -2.9999, -3.3764, -3.7906, -4.0581], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7910, device='cuda:0', dtype=torch.float64)
tensor([-2.0299, -3.0388, -3.3630, -3.7970, -4.0668], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1062, device='cuda:0', dtype=torch.float64)
tensor([-2.0260, -3.0719, -3.3559, -3.8083, -4.0591], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7862, device='cuda:0', dtype=torch.float64)
tensor([-2.0203, -3.0753, -3.3668, -3.8007, -4.0375], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2690, device='cuda:0', dtype=torch.float64)
tensor([-2.0227, -3.0669, -3.3785, -3.7892, -4.0338], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9094, device='cuda:0', dtype=torch.float64)
tensor([-2.0302, -3.0553, -3.3931, -3.8080, -4.0436], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3362, device='cuda:0', dtype=torch.float64)
tensor([-2.0468, -3.0572, -3.3970, -3.8218, -4.0593], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5046, device='cuda:0', dtype=torch.float64)
tensor([-2.0532, -3.0431, -3.4140, -3.8254, -4.0642], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8140, device='cuda:0', dtype=torch.float64)
tensor([-2.0508, -3.0245, -3.4422, -3.8076, -4.0632], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4701, device='cuda:0', dtype=torch.float64)
tensor([-2.0505, -3.0184, -3.4506, -3.8113, -4.0540], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9750, device='cuda:0', dtype=torch.float64)
tensor([-2.0430, -3.0097, -3.4293, -3.8420, -4.0488], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8017, device='cuda:0', dtype=torch.float64)
tensor([-2.0496, -3.0259, -3.3915, -3.8395, -4.0529], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3907, device='cuda:0', dtype=torch.float64)
tensor([-2.0610, -3.0520, -3.3545, -3.8031, -4.0610], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6878, device='cuda:0', dtype=torch.float64)
tensor([-2.0652, -3.0510, -3.3480, -3.7815, -4.0482], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6601, device='cuda:0', dtype=torch.float64)
tensor([-2.0484, -3.0378, -3.3546, -3.7963, -4.0187], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5119, device='cuda:0', dtype=torch.float64)
tensor([-2.0333, -3.0330, -3.3536, -3.8359, -3.9982], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4483, device='cuda:0', dtype=torch.float64)
tensor([-2.0281, -3.0239, -3.3376, -3.8377, -3.9896], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7717, device='cuda:0', dtype=torch.float64)
tensor([-2.0349, -3.0147, -3.3094, -3.7932, -3.9821], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2591, device='cuda:0', dtype=torch.float64)
tensor([-2.0545, -3.0177, -3.2875, -3.7619, -3.9826], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6661, device='cuda:0', dtype=torch.float64)
tensor([-2.0723, -3.0104, -3.2778, -3.7698, -3.9874], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5024, device='cuda:0', dtype=torch.float64)
tensor([-2.0972, -3.0057, -3.2698, -3.8068, -4.0051], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9158, device='cuda:0', dtype=torch.float64)
tensor([-2.1125, -3.0070, -3.2667, -3.7951, -4.0301], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6430, device='cuda:0', dtype=torch.float64)
tensor([-2.1117, -3.0154, -3.2805, -3.7438, -4.0598], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4763, device='cuda:0', dtype=torch.float64)
tensor([-2.0991, -3.0184, -3.2944, -3.7164, -4.0723], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.2895, device='cuda:0', dtype=torch.float64)
tensor([-2.0711, -3.0080, -3.3123, -3.7134, -4.0526], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0976, device='cuda:0', dtype=torch.float64)
tensor([-2.0414, -3.0161, -3.3332, -3.7490, -4.0351], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0305, device='cuda:0', dtype=torch.float64)
tensor([-2.0291, -2.9937, -3.3441, -3.7223, -4.0422], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4524, device='cuda:0', dtype=torch.float64)
tensor([-2.0329, -2.9890, -3.3380, -3.6861, -4.0586], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3683, device='cuda:0', dtype=torch.float64)
tensor([-2.0473, -2.9951, -3.3489, -3.6833, -4.0705], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1944, device='cuda:0', dtype=torch.float64)
tensor([-2.0579, -2.9979, -3.3571, -3.7461, -4.0632], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4850, device='cuda:0', dtype=torch.float64)
tensor([-2.0744, -3.0113, -3.3737, -3.8154, -4.0385], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.2046, device='cuda:0', dtype=torch.float64)
tensor([-2.0821, -3.0013, -3.3963, -3.7974, -4.0016], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1857, device='cuda:0', dtype=torch.float64)
tensor([-2.0852, -2.9908, -3.4098, -3.7808, -3.9845], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6095, device='cuda:0', dtype=torch.float64)
tensor([-2.0912, -2.9765, -3.4042, -3.7587, -3.9764], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0231, device='cuda:0', dtype=torch.float64)
tensor([-2.0829, -2.9660, -3.4065, -3.7663, -3.9695], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4721, device='cuda:0', dtype=torch.float64)
tensor([-2.0652, -2.9712, -3.4158, -3.7938, -3.9827], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1962, device='cuda:0', dtype=torch.float64)
tensor([-2.0553, -2.9709, -3.4169, -3.7510, -3.9896], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6856, device='cuda:0', dtype=torch.float64)
tensor([-2.0643, -2.9807, -3.3864, -3.7138, -4.0017], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8399, device='cuda:0', dtype=torch.float64)
tensor([-2.0664, -2.9990, -3.3222, -3.7356, -4.0073], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.4600, device='cuda:0', dtype=torch.float64)
tensor([-2.0660, -2.9902, -3.2830, -3.8024, -4.0089], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9393, device='cuda:0', dtype=torch.float64)
tensor([-2.0698, -2.9710, -3.2938, -3.8449, -3.9928], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8935, device='cuda:0', dtype=torch.float64)
tensor([-2.0830, -2.9563, -3.3370, -3.8168, -3.9729], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4261, device='cuda:0', dtype=torch.float64)
tensor([-2.0955, -2.9570, -3.3698, -3.8154, -3.9645], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8662, device='cuda:0', dtype=torch.float64)
tensor([-2.1079, -2.9659, -3.3725, -3.8129, -3.9638], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6262, device='cuda:0', dtype=torch.float64)
tensor([-2.0904, -2.9680, -3.3848, -3.8492, -3.9710], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5876, device='cuda:0', dtype=torch.float64)
tensor([-2.0727, -2.9616, -3.4010, -3.8588, -3.9590], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6454, device='cuda:0', dtype=torch.float64)
tensor([-2.0720, -2.9747, -3.3969, -3.7943, -3.9387], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1915, device='cuda:0', dtype=torch.float64)
tensor([-2.0668, -2.9992, -3.3778, -3.7430, -3.9300], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6301, device='cuda:0', dtype=torch.float64)
tensor([-2.0624, -3.0046, -3.3368, -3.7241, -3.9466], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3616, device='cuda:0', dtype=torch.float64)
tensor([-2.0634, -3.0172, -3.3042, -3.7365, -3.9754], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.2777, device='cuda:0', dtype=torch.float64)
tensor([-2.0644, -2.9880, -3.3119, -3.7296, -3.9869], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4682, device='cuda:0', dtype=torch.float64)
tensor([-2.0700, -2.9566, -3.3400, -3.7266, -4.0002], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5497, device='cuda:0', dtype=torch.float64)
tensor([-2.0840, -2.9450, -3.3597, -3.7396, -3.9998], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4838, device='cuda:0', dtype=torch.float64)
tensor([-2.1019, -2.9612, -3.3750, -3.7554, -3.9935], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3101, device='cuda:0', dtype=torch.float64)
tensor([-2.1165, -2.9879, -3.3705, -3.7553, -3.9924], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7172, device='cuda:0', dtype=torch.float64)
tensor([-2.1158, -3.0130, -3.3521, -3.7414, -3.9877], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7260, device='cuda:0', dtype=torch.float64)
tensor([-2.0875, -3.0237, -3.3324, -3.7298, -3.9856], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7504, device='cuda:0', dtype=torch.float64)
tensor([-2.0640, -3.0400, -3.2986, -3.7162, -3.9911], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5812, device='cuda:0', dtype=torch.float64)
tensor([-2.0617, -3.0512, -3.2700, -3.7018, -3.9945], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5961, device='cuda:0', dtype=torch.float64)
tensor([-2.0738, -3.0521, -3.2667, -3.6939, -4.0034], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9116, device='cuda:0', dtype=torch.float64)
tensor([-2.0764, -3.0332, -3.2960, -3.6714, -3.9905], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5126, device='cuda:0', dtype=torch.float64)
tensor([-2.0665, -3.0153, -3.3395, -3.6989, -3.9688], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5316, device='cuda:0', dtype=torch.float64)
tensor([-2.0508, -3.0026, -3.3784, -3.7586, -3.9538], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4137, device='cuda:0', dtype=torch.float64)
tensor([-2.0475, -2.9955, -3.4099, -3.8057, -3.9509], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8192, device='cuda:0', dtype=torch.float64)
tensor([-2.0616, -3.0061, -3.4029, -3.7886, -3.9634], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4218, device='cuda:0', dtype=torch.float64)
tensor([-2.0737, -3.0174, -3.3924, -3.7454, -3.9774], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5135, device='cuda:0', dtype=torch.float64)
tensor([-2.0672, -3.0154, -3.3960, -3.7317, -3.9763], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7483, device='cuda:0', dtype=torch.float64)
tensor([-2.0502, -2.9900, -3.4058, -3.7442, -3.9816], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5740, device='cuda:0', dtype=torch.float64)
tensor([-2.0418, -2.9664, -3.3979, -3.7742, -3.9980], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0547, device='cuda:0', dtype=torch.float64)
tensor([-2.0455, -2.9623, -3.3670, -3.7637, -4.0160], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5124, device='cuda:0', dtype=torch.float64)
tensor([-2.0454, -2.9717, -3.3562, -3.7556, -4.0213], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3754, device='cuda:0', dtype=torch.float64)
tensor([-2.0273, -2.9757, -3.3613, -3.7762, -3.9967], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0547, device='cuda:0', dtype=torch.float64)
tensor([-2.0019, -2.9682, -3.3784, -3.7951, -3.9619], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3680, device='cuda:0', dtype=torch.float64)
tensor([-1.9952, -2.9717, -3.3975, -3.8101, -3.9415], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8406, device='cuda:0', dtype=torch.float64)
tensor([-2.0215, -2.9827, -3.3912, -3.7577, -3.9302], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7488, device='cuda:0', dtype=torch.float64)
tensor([-2.0617, -2.9854, -3.3760, -3.6892, -3.9351], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4952, device='cuda:0', dtype=torch.float64)
tensor([-2.1041, -2.9906, -3.3632, -3.6824, -3.9658], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7695, device='cuda:0', dtype=torch.float64)
tensor([-2.1069, -2.9736, -3.3701, -3.7395, -3.9873], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5151, device='cuda:0', dtype=torch.float64)
tensor([-2.0846, -2.9651, -3.3776, -3.8573, -4.0086], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.4068, device='cuda:0', dtype=torch.float64)
tensor([-2.0747, -2.9569, -3.3567, -3.8519, -4.0181], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7724, device='cuda:0', dtype=torch.float64)
tensor([-2.0861, -2.9601, -3.3111, -3.7743, -4.0264], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5331, device='cuda:0', dtype=torch.float64)
tensor([-2.1039, -2.9755, -3.2771, -3.7160, -4.0208], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.6138, device='cuda:0', dtype=torch.float64)
tensor([-2.0989, -2.9782, -3.2706, -3.7140, -3.9862], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4701, device='cuda:0', dtype=torch.float64)
tensor([-2.0962, -2.9832, -3.2869, -3.7563, -3.9700], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.2809, device='cuda:0', dtype=torch.float64)
tensor([-2.1067, -2.9832, -3.2979, -3.7232, -3.9608], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7586, device='cuda:0', dtype=torch.float64)
tensor([-2.1099, -2.9853, -3.2919, -3.6732, -3.9517], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5333, device='cuda:0', dtype=torch.float64)
tensor([-2.0906, -2.9789, -3.3029, -3.6697, -3.9497], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1918, device='cuda:0', dtype=torch.float64)
tensor([-2.0702, -2.9611, -3.3385, -3.7017, -3.9414], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4485, device='cuda:0', dtype=torch.float64)
tensor([-2.0567, -2.9549, -3.3691, -3.7781, -3.9356], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6952, device='cuda:0', dtype=torch.float64)
tensor([-2.0569, -2.9680, -3.3789, -3.8055, -3.9377], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8873, device='cuda:0', dtype=torch.float64)
tensor([-2.0629, -2.9945, -3.3756, -3.7623, -3.9349], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6839, device='cuda:0', dtype=torch.float64)
tensor([-2.0749, -3.0250, -3.3555, -3.7217, -3.9352], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4964, device='cuda:0', dtype=torch.float64)
tensor([-2.0719, -3.0321, -3.3385, -3.6909, -3.9163], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2945, device='cuda:0', dtype=torch.float64)
tensor([-2.0574, -3.0234, -3.3430, -3.6998, -3.9083], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1986, device='cuda:0', dtype=torch.float64)
tensor([-2.0482, -3.0199, -3.3361, -3.7183, -3.9142], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4652, device='cuda:0', dtype=torch.float64)
tensor([-2.0434, -3.0228, -3.3455, -3.7250, -3.9190], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6098, device='cuda:0', dtype=torch.float64)
tensor([-2.0455, -3.0247, -3.3424, -3.7312, -3.9441], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3319, device='cuda:0', dtype=torch.float64)
tensor([-2.0566, -3.0327, -3.3357, -3.7290, -3.9700], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7409, device='cuda:0', dtype=torch.float64)
tensor([-2.0584, -3.0242, -3.3351, -3.7337, -3.9585], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6226, device='cuda:0', dtype=torch.float64)
tensor([-2.0596, -3.0002, -3.3431, -3.7571, -3.9150], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6495, device='cuda:0', dtype=torch.float64)
tensor([-2.0528, -2.9844, -3.3563, -3.7611, -3.8833], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5600, device='cuda:0', dtype=torch.float64)
tensor([-2.0500, -2.9707, -3.3584, -3.7770, -3.8630], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8136, device='cuda:0', dtype=torch.float64)
tensor([-2.0553, -2.9681, -3.3487, -3.7827, -3.8572], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2921, device='cuda:0', dtype=torch.float64)
tensor([-2.0690, -2.9857, -3.3351, -3.7732, -3.8809], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6522, device='cuda:0', dtype=torch.float64)
tensor([-2.0699, -2.9785, -3.3389, -3.7556, -3.8923], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6690, device='cuda:0', dtype=torch.float64)
tensor([-2.0587, -2.9599, -3.3512, -3.7551, -3.8933], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6117, device='cuda:0', dtype=torch.float64)
tensor([-2.0505, -2.9527, -3.3375, -3.7603, -3.8967], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5328, device='cuda:0', dtype=torch.float64)
tensor([-2.0403, -2.9532, -3.3043, -3.7902, -3.9009], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6438, device='cuda:0', dtype=torch.float64)
tensor([-2.0555, -2.9737, -3.2686, -3.7938, -3.9236], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7150, device='cuda:0', dtype=torch.float64)
tensor([-2.0726, -2.9933, -3.2423, -3.7850, -3.9331], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6653, device='cuda:0', dtype=torch.float64)
tensor([-2.0850, -3.0062, -3.2392, -3.7855, -3.9365], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4279, device='cuda:0', dtype=torch.float64)
tensor([-2.1003, -3.0131, -3.2347, -3.7766, -3.9373], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4919, device='cuda:0', dtype=torch.float64)
tensor([-2.1137, -3.0386, -3.2287, -3.7659, -3.9347], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5653, device='cuda:0', dtype=torch.float64)
tensor([-2.1062, -3.0344, -3.2592, -3.7558, -3.9205], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6209, device='cuda:0', dtype=torch.float64)
tensor([-2.0851, -3.0221, -3.3008, -3.7425, -3.9124], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6285, device='cuda:0', dtype=torch.float64)
tensor([-2.0732, -3.0094, -3.3263, -3.7176, -3.9117], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8623, device='cuda:0', dtype=torch.float64)
tensor([-2.0644, -3.0069, -3.3279, -3.6995, -3.9137], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3848, device='cuda:0', dtype=torch.float64)
tensor([-2.0695, -3.0208, -3.3318, -3.7043, -3.9190], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6134, device='cuda:0', dtype=torch.float64)
tensor([-2.0607, -3.0124, -3.3508, -3.7386, -3.9100], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5553, device='cuda:0', dtype=torch.float64)
tensor([-2.0464, -3.0045, -3.3805, -3.7731, -3.9028], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5701, device='cuda:0', dtype=torch.float64)
tensor([-2.0425, -3.0025, -3.3958, -3.7803, -3.9015], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3897, device='cuda:0', dtype=torch.float64)
tensor([-2.0583, -3.0105, -3.3979, -3.8099, -3.9188], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5348, device='cuda:0', dtype=torch.float64)
tensor([-2.0670, -3.0070, -3.4124, -3.8368, -3.9436], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5664, device='cuda:0', dtype=torch.float64)
tensor([-2.0923, -2.9987, -3.4234, -3.8043, -3.9544], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4280, device='cuda:0', dtype=torch.float64)
tensor([-2.1193, -2.9810, -3.4050, -3.7732, -3.9386], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4718, device='cuda:0', dtype=torch.float64)
tensor([-2.1328, -2.9630, -3.3580, -3.7463, -3.9119], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4799, device='cuda:0', dtype=torch.float64)
tensor([-2.1392, -2.9718, -3.3060, -3.7396, -3.8952], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3757, device='cuda:0', dtype=torch.float64)
tensor([-2.1378, -2.9902, -3.2716, -3.7343, -3.9095], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4034, device='cuda:0', dtype=torch.float64)
tensor([-2.1359, -3.0121, -3.2439, -3.7140, -3.9365], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3750, device='cuda:0', dtype=torch.float64)
tensor([-2.1248, -3.0253, -3.2594, -3.7078, -3.9547], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4644, device='cuda:0', dtype=torch.float64)
tensor([-2.1202, -3.0225, -3.2745, -3.6772, -3.9462], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8558, device='cuda:0', dtype=torch.float64)
tensor([-2.1019, -3.0028, -3.2819, -3.6843, -3.9248], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6324, device='cuda:0', dtype=torch.float64)
tensor([-2.0950, -2.9848, -3.2749, -3.7059, -3.9070], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4091, device='cuda:0', dtype=torch.float64)
tensor([-2.0971, -2.9709, -3.2696, -3.7011, -3.8976], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3363, device='cuda:0', dtype=torch.float64)
tensor([-2.1022, -2.9746, -3.2700, -3.6763, -3.9037], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5528, device='cuda:0', dtype=torch.float64)
tensor([-2.1111, -2.9948, -3.2754, -3.6452, -3.9133], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4731, device='cuda:0', dtype=torch.float64)
tensor([-2.1000, -3.0132, -3.2896, -3.6843, -3.9055], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5828, device='cuda:0', dtype=torch.float64)
tensor([-2.0955, -3.0270, -3.2930, -3.7595, -3.9111], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5203, device='cuda:0', dtype=torch.float64)
tensor([-2.1104, -3.0397, -3.2985, -3.8026, -3.9091], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6479, device='cuda:0', dtype=torch.float64)
tensor([-2.1141, -3.0282, -3.3021, -3.8025, -3.9001], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6590, device='cuda:0', dtype=torch.float64)
tensor([-2.1151, -2.9974, -3.3001, -3.7502, -3.8855], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4606, device='cuda:0', dtype=torch.float64)
tensor([-2.1037, -2.9623, -3.2877, -3.7207, -3.8812], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5720, device='cuda:0', dtype=torch.float64)
tensor([-2.0699, -2.9164, -3.2890, -3.7140, -3.8780], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3554, device='cuda:0', dtype=torch.float64)
tensor([-2.0290, -2.8843, -3.2931, -3.7216, -3.8729], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3105, device='cuda:0', dtype=torch.float64)
tensor([-2.0190, -2.8904, -3.2996, -3.6992, -3.8639], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5363, device='cuda:0', dtype=torch.float64)
tensor([-2.0466, -2.9211, -3.2929, -3.6380, -3.8807], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3019, device='cuda:0', dtype=torch.float64)
tensor([-2.0897, -2.9598, -3.2866, -3.5782, -3.8992], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3363, device='cuda:0', dtype=torch.float64)
tensor([-2.1255, -3.0056, -3.2857, -3.5720, -3.9215], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2510, device='cuda:0', dtype=torch.float64)
tensor([-2.1498, -3.0419, -3.2805, -3.6036, -3.9185], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4126, device='cuda:0', dtype=torch.float64)
tensor([-2.1387, -3.0425, -3.2888, -3.6409, -3.9168], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5522, device='cuda:0', dtype=torch.float64)
tensor([-2.1328, -3.0278, -3.2914, -3.7037, -3.9283], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4509, device='cuda:0', dtype=torch.float64)
tensor([-2.1187, -3.0173, -3.2977, -3.7693, -3.9574], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3237, device='cuda:0', dtype=torch.float64)
tensor([-2.0948, -3.0008, -3.3219, -3.8132, -3.9718], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3494, device='cuda:0', dtype=torch.float64)
tensor([-2.0830, -2.9867, -3.3214, -3.8174, -3.9749], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5862, device='cuda:0', dtype=torch.float64)
tensor([-2.0670, -2.9747, -3.3172, -3.8138, -3.9730], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7621, device='cuda:0', dtype=torch.float64)
tensor([-2.0483, -2.9523, -3.3183, -3.7840, -3.9544], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7132, device='cuda:0', dtype=torch.float64)
tensor([-2.0295, -2.9644, -3.3384, -3.7724, -3.9350], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7708, device='cuda:0', dtype=torch.float64)
tensor([-2.0368, -2.9963, -3.3437, -3.7580, -3.9138], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6610, device='cuda:0', dtype=torch.float64)
tensor([-2.0617, -3.0164, -3.3156, -3.7735, -3.9041], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5319, device='cuda:0', dtype=torch.float64)
tensor([-2.0888, -3.0139, -3.2939, -3.7924, -3.8979], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7075, device='cuda:0', dtype=torch.float64)
tensor([-2.1200, -3.0069, -3.2817, -3.7888, -3.8968], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5136, device='cuda:0', dtype=torch.float64)
tensor([-2.1474, -3.0021, -3.2719, -3.7635, -3.8890], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5577, device='cuda:0', dtype=torch.float64)
tensor([-2.1503, -2.9880, -3.2733, -3.7649, -3.8838], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2743, device='cuda:0', dtype=torch.float64)
tensor([-2.1416, -2.9616, -3.2772, -3.7630, -3.8846], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7294, device='cuda:0', dtype=torch.float64)
tensor([-2.1124, -2.9417, -3.2790, -3.7668, -3.8977], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6204, device='cuda:0', dtype=torch.float64)
tensor([-2.0792, -2.9350, -3.2953, -3.7691, -3.9065], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3458, device='cuda:0', dtype=torch.float64)
tensor([-2.0502, -2.9604, -3.3021, -3.7755, -3.9195], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7727, device='cuda:0', dtype=torch.float64)
tensor([-2.0289, -2.9911, -3.3284, -3.8098, -3.9453], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5441, device='cuda:0', dtype=torch.float64)
tensor([-2.0235, -2.9879, -3.3456, -3.8204, -3.9574], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0540, device='cuda:0', dtype=torch.float64)
tensor([-2.0597, -2.9812, -3.3433, -3.7994, -3.9638], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5903, device='cuda:0', dtype=torch.float64)
tensor([-2.1056, -2.9655, -3.3425, -3.7477, -3.9581], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9701, device='cuda:0', dtype=torch.float64)
tensor([-2.1528, -2.9740, -3.3350, -3.7293, -3.9335], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5128, device='cuda:0', dtype=torch.float64)
tensor([-2.1971, -3.0068, -3.3098, -3.7572, -3.9229], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5902, device='cuda:0', dtype=torch.float64)
tensor([-2.1973, -3.0193, -3.2907, -3.7843, -3.9054], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8384, device='cuda:0', dtype=torch.float64)
tensor([-2.1804, -3.0211, -3.2896, -3.7705, -3.8834], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5057, device='cuda:0', dtype=torch.float64)
tensor([-2.1556, -3.0236, -3.2748, -3.7651, -3.8687], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6142, device='cuda:0', dtype=torch.float64)
tensor([-2.1059, -2.9893, -3.2856, -3.7789, -3.8460], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3954, device='cuda:0', dtype=torch.float64)
tensor([-2.0594, -2.9523, -3.3000, -3.7891, -3.8355], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4138, device='cuda:0', dtype=torch.float64)
tensor([-2.0552, -2.9449, -3.3026, -3.7724, -3.8291], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5444, device='cuda:0', dtype=torch.float64)
tensor([-2.0684, -2.9534, -3.3058, -3.7287, -3.8327], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7033, device='cuda:0', dtype=torch.float64)
tensor([-2.0951, -2.9698, -3.3221, -3.6684, -3.8436], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3942, device='cuda:0', dtype=torch.float64)
tensor([-2.1134, -2.9900, -3.3320, -3.6457, -3.8593], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6912, device='cuda:0', dtype=torch.float64)
tensor([-2.1150, -3.0124, -3.3469, -3.6579, -3.8705], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8805, device='cuda:0', dtype=torch.float64)
tensor([-2.1117, -3.0312, -3.3505, -3.7141, -3.8835], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7833, device='cuda:0', dtype=torch.float64)
tensor([-2.1092, -3.0342, -3.3556, -3.7626, -3.8967], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5449, device='cuda:0', dtype=torch.float64)
tensor([-2.1126, -3.0273, -3.3638, -3.7494, -3.8955], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5801, device='cuda:0', dtype=torch.float64)
tensor([-2.1093, -3.0316, -3.3600, -3.6967, -3.9012], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3556, device='cuda:0', dtype=torch.float64)
tensor([-2.1061, -3.0198, -3.3587, -3.6819, -3.8961], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7658, device='cuda:0', dtype=torch.float64)
tensor([-2.1063, -3.0067, -3.3464, -3.7145, -3.8982], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4628, device='cuda:0', dtype=torch.float64)
tensor([-2.1095, -3.0307, -3.3196, -3.7255, -3.9076], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0261, device='cuda:0', dtype=torch.float64)
tensor([-2.1184, -3.0345, -3.3085, -3.6742, -3.8998], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5224, device='cuda:0', dtype=torch.float64)
tensor([-2.1251, -3.0285, -3.3131, -3.6634, -3.8996], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8956, device='cuda:0', dtype=torch.float64)
tensor([-2.1079, -3.0204, -3.3239, -3.6952, -3.9113], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4991, device='cuda:0', dtype=torch.float64)
tensor([-2.0887, -3.0143, -3.3281, -3.7574, -3.9278], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4657, device='cuda:0', dtype=torch.float64)
tensor([-2.0877, -3.0150, -3.3205, -3.7900, -3.9455], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2505, device='cuda:0', dtype=torch.float64)
tensor([-2.1030, -3.0129, -3.2927, -3.7912, -3.9410], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5634, device='cuda:0', dtype=torch.float64)
tensor([-2.1247, -3.0094, -3.2652, -3.8006, -3.9188], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2595, device='cuda:0', dtype=torch.float64)
tensor([-2.1551, -3.0018, -3.2502, -3.8132, -3.8825], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3668, device='cuda:0', dtype=torch.float64)
tensor([-2.1608, -2.9892, -3.2511, -3.8073, -3.8431], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7570, device='cuda:0', dtype=torch.float64)
tensor([-2.1492, -2.9754, -3.2579, -3.7714, -3.8344], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2953, device='cuda:0', dtype=torch.float64)
tensor([-2.1230, -2.9787, -3.2825, -3.7434, -3.8439], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1461, device='cuda:0', dtype=torch.float64)
tensor([-2.0827, -2.9617, -3.3049, -3.7335, -3.8610], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3961, device='cuda:0', dtype=torch.float64)
tensor([-2.0397, -2.9370, -3.3027, -3.7439, -3.8922], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6174, device='cuda:0', dtype=torch.float64)
tensor([-2.0120, -2.9191, -3.3174, -3.7837, -3.9236], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2029, device='cuda:0', dtype=torch.float64)
tensor([-2.0128, -2.9223, -3.3238, -3.8164, -3.9523], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7443, device='cuda:0', dtype=torch.float64)
tensor([-2.0426, -2.9501, -3.3245, -3.8136, -3.9670], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2699, device='cuda:0', dtype=torch.float64)
tensor([-2.0919, -2.9849, -3.3053, -3.7811, -3.9622], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4040, device='cuda:0', dtype=torch.float64)
tensor([-2.1388, -3.0238, -3.2716, -3.7389, -3.9511], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4483, device='cuda:0', dtype=torch.float64)
tensor([-2.1542, -3.0480, -3.2594, -3.7118, -3.9423], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3102, device='cuda:0', dtype=torch.float64)
tensor([-2.1468, -3.0671, -3.2659, -3.6821, -3.9290], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5485, device='cuda:0', dtype=torch.float64)
tensor([-2.1276, -3.0772, -3.3056, -3.6561, -3.9164], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7032, device='cuda:0', dtype=torch.float64)
tensor([-2.1035, -3.0597, -3.3501, -3.6275, -3.9131], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4590, device='cuda:0', dtype=torch.float64)
tensor([-2.0791, -3.0390, -3.3705, -3.5990, -3.9198], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8217, device='cuda:0', dtype=torch.float64)
tensor([-2.0754, -3.0310, -3.3664, -3.6099, -3.9456], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4172, device='cuda:0', dtype=torch.float64)
tensor([-2.0758, -3.0261, -3.3537, -3.6591, -3.9597], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6197, device='cuda:0', dtype=torch.float64)
tensor([-2.0912, -3.0064, -3.3384, -3.6826, -3.9349], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5420, device='cuda:0', dtype=torch.float64)
tensor([-2.1018, -2.9967, -3.3316, -3.6820, -3.8791], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6146, device='cuda:0', dtype=torch.float64)
tensor([-2.1062, -3.0099, -3.3274, -3.6987, -3.8297], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3039, device='cuda:0', dtype=torch.float64)
tensor([-2.1101, -3.0237, -3.3169, -3.7086, -3.8020], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5897, device='cuda:0', dtype=torch.float64)
tensor([-2.1149, -3.0404, -3.3088, -3.6977, -3.8121], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1143, device='cuda:0', dtype=torch.float64)
tensor([-2.1163, -3.0411, -3.3263, -3.7035, -3.8298], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6303, device='cuda:0', dtype=torch.float64)
tensor([-2.1181, -3.0555, -3.3539, -3.7087, -3.8519], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3495, device='cuda:0', dtype=torch.float64)
tensor([-2.1127, -3.0710, -3.3652, -3.7448, -3.8925], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9168, device='cuda:0', dtype=torch.float64)
tensor([-2.1228, -3.0721, -3.3442, -3.7484, -3.9310], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4731, device='cuda:0', dtype=torch.float64)
tensor([-2.1373, -3.0805, -3.3079, -3.7253, -3.9738], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7825, device='cuda:0', dtype=torch.float64)
tensor([-2.1376, -3.0715, -3.2918, -3.7056, -3.9791], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4984, device='cuda:0', dtype=torch.float64)
tensor([-2.1250, -3.0302, -3.3095, -3.7009, -3.9540], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.2634, device='cuda:0', dtype=torch.float64)
tensor([-2.1116, -3.0045, -3.3270, -3.7184, -3.9279], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8165, device='cuda:0', dtype=torch.float64)
tensor([-2.1173, -2.9913, -3.3245, -3.7285, -3.9248], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8224, device='cuda:0', dtype=torch.float64)
tensor([-2.1149, -2.9886, -3.3006, -3.6762, -3.9360], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3476, device='cuda:0', dtype=torch.float64)
tensor([-2.1018, -2.9995, -3.2813, -3.6343, -3.9531], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6738, device='cuda:0', dtype=torch.float64)
tensor([-2.0735, -2.9955, -3.3006, -3.6401, -3.9538], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7793, device='cuda:0', dtype=torch.float64)
tensor([-2.0319, -2.9835, -3.3194, -3.6669, -3.9305], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7813, device='cuda:0', dtype=torch.float64)
tensor([-2.0206, -2.9927, -3.3181, -3.7550, -3.9114], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8735, device='cuda:0', dtype=torch.float64)
tensor([-2.0351, -3.0084, -3.3090, -3.7728, -3.8845], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.7328, device='cuda:0', dtype=torch.float64)
tensor([-2.0903, -3.0368, -3.2755, -3.7029, -3.8751], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6579, device='cuda:0', dtype=torch.float64)
tensor([-2.1444, -3.0531, -3.2698, -3.6704, -3.8824], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0684, device='cuda:0', dtype=torch.float64)
tensor([-2.1883, -3.0457, -3.2800, -3.6653, -3.9000], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9310, device='cuda:0', dtype=torch.float64)
tensor([-2.1950, -3.0243, -3.2775, -3.6608, -3.9092], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7599, device='cuda:0', dtype=torch.float64)
tensor([-2.1750, -3.0079, -3.2731, -3.7087, -3.9110], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0776, device='cuda:0', dtype=torch.float64)
tensor([-2.1354, -2.9583, -3.2572, -3.6867, -3.9250], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.2414, device='cuda:0', dtype=torch.float64)
tensor([-2.1074, -2.9334, -3.2237, -3.6190, -3.9355], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5877, device='cuda:0', dtype=torch.float64)
tensor([-2.0774, -2.9547, -3.2159, -3.6090, -3.9609], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8361, device='cuda:0', dtype=torch.float64)
tensor([-2.0445, -2.9517, -3.2491, -3.6463, -3.9609], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.3672, device='cuda:0', dtype=torch.float64)
tensor([-2.0165, -2.9466, -3.3082, -3.7270, -3.9378], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6493, device='cuda:0', dtype=torch.float64)
tensor([-2.0234, -2.9745, -3.3552, -3.7671, -3.9121], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7130, device='cuda:0', dtype=torch.float64)
tensor([-2.0498, -3.0142, -3.3694, -3.7619, -3.8794], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8550, device='cuda:0', dtype=torch.float64)
tensor([-2.1118, -3.0659, -3.3764, -3.7137, -3.8540], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5238, device='cuda:0', dtype=torch.float64)
tensor([-2.1921, -3.1082, -3.3573, -3.6786, -3.8488], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9965, device='cuda:0', dtype=torch.float64)
tensor([-2.2500, -3.1305, -3.3235, -3.6813, -3.8597], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6917, device='cuda:0', dtype=torch.float64)
tensor([-2.2644, -3.1287, -3.3166, -3.7756, -3.8824], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.4559, device='cuda:0', dtype=torch.float64)
tensor([-2.2479, -3.0910, -3.2893, -3.7507, -3.9152], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4974, device='cuda:0', dtype=torch.float64)
tensor([-2.2141, -3.0506, -3.2621, -3.7172, -3.9383], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1050, device='cuda:0', dtype=torch.float64)
tensor([-2.1674, -3.0239, -3.2514, -3.7164, -3.9533], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1749, device='cuda:0', dtype=torch.float64)
tensor([-2.1266, -3.0283, -3.2311, -3.7824, -3.9710], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4998, device='cuda:0', dtype=torch.float64)
tensor([-2.1016, -3.0393, -3.2276, -3.8903, -3.9767], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1946, device='cuda:0', dtype=torch.float64)
tensor([-2.1002, -3.0095, -3.2190, -3.7083, -3.9388], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1076, device='cuda:0', dtype=torch.float64)
tensor([-2.1154, -2.9801, -3.2242, -3.6187, -3.9193], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7777, device='cuda:0', dtype=torch.float64)
tensor([-2.1413, -2.9830, -3.2277, -3.6034, -3.9017], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9478, device='cuda:0', dtype=torch.float64)
tensor([-2.1696, -2.9979, -3.2279, -3.5978, -3.8856], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5112, device='cuda:0', dtype=torch.float64)
tensor([-2.1977, -3.0326, -3.2328, -3.6184, -3.8778], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6415, device='cuda:0', dtype=torch.float64)
tensor([-2.1993, -3.0401, -3.2511, -3.6354, -3.8768], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8360, device='cuda:0', dtype=torch.float64)
tensor([-2.1614, -2.9842, -3.3224, -3.6564, -3.8568], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3948, device='cuda:0', dtype=torch.float64)
tensor([-2.1156, -2.9658, -3.4425, -3.7283, -3.8494], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6684, device='cuda:0', dtype=torch.float64)
tensor([-2.0854, -2.9600, -3.4136, -3.7998, -3.8468], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6255, device='cuda:0', dtype=torch.float64)
tensor([-2.0816, -2.9609, -3.3595, -3.8381, -3.8419], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4265, device='cuda:0', dtype=torch.float64)
tensor([-2.1093, -2.9742, -3.3274, -3.8319, -3.8601], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3059, device='cuda:0', dtype=torch.float64)
tensor([-2.1301, -2.9933, -3.3072, -3.7996, -3.8693], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5512, device='cuda:0', dtype=torch.float64)
tensor([-2.1566, -3.0080, -3.2713, -3.7429, -3.8620], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6124, device='cuda:0', dtype=torch.float64)
tensor([-2.1675, -3.0012, -3.2759, -3.7311, -3.8383], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4354, device='cuda:0', dtype=torch.float64)
tensor([-2.1672, -3.0040, -3.2863, -3.7408, -3.8282], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6273, device='cuda:0', dtype=torch.float64)
tensor([-2.1459, -3.0025, -3.2972, -3.7676, -3.8011], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4448, device='cuda:0', dtype=torch.float64)
tensor([-2.1358, -3.0275, -3.3099, -3.7735, -3.7940], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4616, device='cuda:0', dtype=torch.float64)
tensor([-2.1282, -3.0351, -3.3162, -3.7283, -3.8072], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5587, device='cuda:0', dtype=torch.float64)
tensor([-2.1182, -3.0159, -3.3277, -3.7080, -3.8123], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5157, device='cuda:0', dtype=torch.float64)
tensor([-2.1293, -2.9914, -3.3266, -3.6767, -3.8197], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0529, device='cuda:0', dtype=torch.float64)
tensor([-2.1559, -2.9614, -3.2987, -3.6813, -3.8423], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5798, device='cuda:0', dtype=torch.float64)
tensor([-2.1931, -2.9445, -3.2690, -3.7370, -3.8693], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3947, device='cuda:0', dtype=torch.float64)
tensor([-2.2057, -2.9634, -3.2758, -3.8426, -3.8935], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.5309, device='cuda:0', dtype=torch.float64)
tensor([-2.1982, -2.9972, -3.2647, -3.7854, -3.9019], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5071, device='cuda:0', dtype=torch.float64)
tensor([-2.1646, -3.0302, -3.2768, -3.7428, -3.8822], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5377, device='cuda:0', dtype=torch.float64)
tensor([-2.1266, -3.0501, -3.2998, -3.7532, -3.8500], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7265, device='cuda:0', dtype=torch.float64)
tensor([-2.0950, -3.0497, -3.3395, -3.7779, -3.8348], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6168, device='cuda:0', dtype=torch.float64)
tensor([-2.0819, -3.0754, -3.3738, -3.8304, -3.8155], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9915, device='cuda:0', dtype=torch.float64)
tensor([-2.0779, -3.0271, -3.3838, -3.7973, -3.7915], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0878, device='cuda:0', dtype=torch.float64)
tensor([-2.1014, -2.9739, -3.3830, -3.6616, -3.7868], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6629, device='cuda:0', dtype=torch.float64)
tensor([-2.1487, -2.9614, -3.3680, -3.5853, -3.8115], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1108, device='cuda:0', dtype=torch.float64)
tensor([-2.1786, -2.9504, -3.3678, -3.5519, -3.8243], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7062, device='cuda:0', dtype=torch.float64)
tensor([-2.1914, -2.9544, -3.3726, -3.5851, -3.8389], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3545, device='cuda:0', dtype=torch.float64)
tensor([-2.2043, -3.0003, -3.3700, -3.6720, -3.8510], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.5428, device='cuda:0', dtype=torch.float64)
tensor([-2.2162, -3.0513, -3.3854, -3.6917, -3.8793], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1024, device='cuda:0', dtype=torch.float64)
tensor([-2.2102, -3.0943, -3.4235, -3.6647, -3.9134], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4562, device='cuda:0', dtype=torch.float64)
tensor([-2.2052, -3.1394, -3.4537, -3.6667, -3.9549], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5749, device='cuda:0', dtype=torch.float64)
tensor([-2.2035, -3.1402, -3.4637, -3.6647, -3.9927], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9751, device='cuda:0', dtype=torch.float64)
tensor([-2.2015, -3.1155, -3.4488, -3.6652, -4.0158], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4121, device='cuda:0', dtype=torch.float64)
tensor([-2.2075, -3.1153, -3.4282, -3.6646, -4.0426], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9997, device='cuda:0', dtype=torch.float64)
tensor([-2.1889, -3.0800, -3.3977, -3.6270, -4.0264], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0710, device='cuda:0', dtype=torch.float64)
tensor([-2.1445, -3.0463, -3.3694, -3.6366, -3.9830], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5238, device='cuda:0', dtype=torch.float64)
tensor([-2.0914, -3.0365, -3.3528, -3.7148, -3.9520], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.2277, device='cuda:0', dtype=torch.float64)
tensor([-2.0614, -3.0444, -3.3079, -3.7990, -3.9598], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8500, device='cuda:0', dtype=torch.float64)
tensor([-2.0672, -3.0570, -3.2670, -3.8395, -3.9617], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0087, device='cuda:0', dtype=torch.float64)
tensor([-2.1096, -3.0842, -3.2181, -3.8063, -3.9614], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3546, device='cuda:0', dtype=torch.float64)
tensor([-2.1609, -3.1279, -3.1787, -3.7655, -3.9843], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7910, device='cuda:0', dtype=torch.float64)
tensor([-2.1960, -3.1088, -3.1814, -3.7497, -3.9844], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9438, device='cuda:0', dtype=torch.float64)
tensor([-2.2014, -3.0627, -3.2390, -3.7650, -3.9548], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7968, device='cuda:0', dtype=torch.float64)
tensor([-2.2004, -3.0397, -3.2952, -3.8054, -3.9316], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8659, device='cuda:0', dtype=torch.float64)
tensor([-2.1787, -3.0137, -3.2996, -3.8589, -3.9194], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6460, device='cuda:0', dtype=torch.float64)
tensor([-2.1549, -2.9948, -3.2787, -3.9118, -3.9126], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9346, device='cuda:0', dtype=torch.float64)
tensor([-2.1134, -2.9907, -3.2901, -3.8654, -3.8980], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7280, device='cuda:0', dtype=torch.float64)
tensor([-2.0885, -2.9839, -3.2920, -3.8012, -3.8731], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5941, device='cuda:0', dtype=torch.float64)
tensor([-2.0785, -2.9719, -3.3137, -3.7756, -3.8465], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6206, device='cuda:0', dtype=torch.float64)
tensor([-2.0747, -2.9592, -3.3342, -3.7662, -3.8205], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4944, device='cuda:0', dtype=torch.float64)
tensor([-2.0833, -2.9684, -3.3463, -3.7872, -3.8061], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8669, device='cuda:0', dtype=torch.float64)
tensor([-2.1290, -3.0008, -3.3462, -3.8001, -3.7875], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3164, device='cuda:0', dtype=torch.float64)
tensor([-2.1752, -3.0397, -3.3456, -3.7852, -3.7766], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6407, device='cuda:0', dtype=torch.float64)
tensor([-2.2333, -3.0932, -3.3162, -3.7805, -3.7870], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3309, device='cuda:0', dtype=torch.float64)
tensor([-2.2782, -3.1328, -3.2882, -3.7766, -3.8086], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6498, device='cuda:0', dtype=torch.float64)
tensor([-2.3030, -3.1566, -3.2574, -3.7588, -3.8293], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5872, device='cuda:0', dtype=torch.float64)
tensor([-2.3014, -3.1620, -3.2443, -3.7236, -3.8412], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3599, device='cuda:0', dtype=torch.float64)
tensor([-2.2717, -3.1434, -3.2442, -3.7211, -3.8575], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3508, device='cuda:0', dtype=torch.float64)
tensor([-2.2292, -3.1179, -3.2538, -3.7370, -3.8901], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3715, device='cuda:0', dtype=torch.float64)
tensor([-2.1933, -3.0805, -3.2822, -3.7410, -3.9069], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3449, device='cuda:0', dtype=torch.float64)
tensor([-2.1473, -3.0349, -3.3163, -3.7355, -3.9207], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3753, device='cuda:0', dtype=torch.float64)
tensor([-2.0985, -2.9872, -3.3721, -3.7465, -3.9425], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5440, device='cuda:0', dtype=torch.float64)
tensor([-2.0653, -2.9436, -3.4239, -3.7758, -3.9466], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6921, device='cuda:0', dtype=torch.float64)
tensor([-2.0579, -2.9272, -3.4277, -3.7688, -3.9457], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4957, device='cuda:0', dtype=torch.float64)
tensor([-2.0679, -2.9449, -3.4037, -3.7436, -3.9501], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5243, device='cuda:0', dtype=torch.float64)
tensor([-2.1127, -2.9711, -3.3927, -3.6855, -3.9573], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7253, device='cuda:0', dtype=torch.float64)
tensor([-2.1576, -2.9981, -3.3834, -3.6604, -3.9503], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7425, device='cuda:0', dtype=torch.float64)
tensor([-2.2008, -3.0008, -3.3640, -3.7031, -3.9438], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0214, device='cuda:0', dtype=torch.float64)
tensor([-2.2254, -3.0007, -3.3519, -3.7869, -3.9339], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5397, device='cuda:0', dtype=torch.float64)
tensor([-2.2350, -3.0181, -3.3440, -3.8183, -3.9279], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5277, device='cuda:0', dtype=torch.float64)
tensor([-2.2341, -3.0273, -3.3446, -3.7743, -3.9084], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6110, device='cuda:0', dtype=torch.float64)
tensor([-2.2393, -3.0284, -3.3374, -3.6650, -3.8972], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8282, device='cuda:0', dtype=torch.float64)
tensor([-2.2400, -3.0337, -3.3550, -3.6528, -3.8913], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1098, device='cuda:0', dtype=torch.float64)
tensor([-2.2212, -3.0366, -3.3456, -3.6136, -3.8695], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6139, device='cuda:0', dtype=torch.float64)
tensor([-2.1959, -3.0630, -3.3228, -3.6098, -3.8630], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6392, device='cuda:0', dtype=torch.float64)
tensor([-2.1594, -3.0800, -3.2925, -3.6047, -3.8756], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.2651, device='cuda:0', dtype=torch.float64)
tensor([-2.1160, -3.0502, -3.2865, -3.5723, -3.8736], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3257, device='cuda:0', dtype=torch.float64)
tensor([-2.0858, -3.0295, -3.2940, -3.5874, -3.8754], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.3437, device='cuda:0', dtype=torch.float64)
tensor([-2.0539, -3.0070, -3.3235, -3.6412, -3.8744], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7589, device='cuda:0', dtype=torch.float64)
tensor([-2.0310, -2.9859, -3.3539, -3.7201, -3.8938], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5033, device='cuda:0', dtype=torch.float64)
tensor([-2.0444, -2.9875, -3.3804, -3.7876, -3.9078], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0048, device='cuda:0', dtype=torch.float64)
tensor([-2.1008, -2.9804, -3.3980, -3.7886, -3.9162], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5699, device='cuda:0', dtype=torch.float64)
tensor([-2.1996, -3.0042, -3.4094, -3.7659, -3.9280], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5847, device='cuda:0', dtype=torch.float64)
tensor([-2.2973, -3.0455, -3.4284, -3.7500, -3.9311], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6198, device='cuda:0', dtype=torch.float64)
tensor([-2.3752, -3.0709, -3.4313, -3.7499, -3.9270], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6056, device='cuda:0', dtype=torch.float64)
tensor([-2.4117, -3.0809, -3.4092, -3.7532, -3.9089], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8022, device='cuda:0', dtype=torch.float64)
tensor([-2.3978, -3.0957, -3.4226, -3.7844, -3.8854], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3176, device='cuda:0', dtype=torch.float64)
tensor([-2.3388, -3.0959, -3.4459, -3.8157, -3.8627], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4491, device='cuda:0', dtype=torch.float64)
tensor([-2.2519, -3.0783, -3.4759, -3.8528, -3.8567], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2657, device='cuda:0', dtype=torch.float64)
tensor([-2.1614, -3.0729, -3.4845, -3.8912, -3.8771], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9006, device='cuda:0', dtype=torch.float64)
tensor([-2.1069, -3.0591, -3.4502, -3.8957, -3.8940], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6623, device='cuda:0', dtype=torch.float64)
tensor([-2.0960, -3.0458, -3.3874, -3.8651, -3.9102], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8278, device='cuda:0', dtype=torch.float64)
tensor([-2.1197, -3.0499, -3.3062, -3.7662, -3.9172], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4240, device='cuda:0', dtype=torch.float64)
tensor([-2.1578, -3.0470, -3.2542, -3.7156, -3.9306], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8721, device='cuda:0', dtype=torch.float64)
tensor([-2.1826, -3.0252, -3.2402, -3.7078, -3.9304], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7325, device='cuda:0', dtype=torch.float64)
tensor([-2.1979, -3.0341, -3.2442, -3.7216, -3.9480], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4344, device='cuda:0', dtype=torch.float64)
tensor([-2.2252, -3.0321, -3.2512, -3.7260, -3.9849], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5378, device='cuda:0', dtype=torch.float64)
tensor([-2.2483, -3.0438, -3.2677, -3.6762, -4.0047], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6824, device='cuda:0', dtype=torch.float64)
tensor([-2.2484, -3.0664, -3.3116, -3.6324, -4.0044], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5052, device='cuda:0', dtype=torch.float64)
tensor([-2.2509, -3.0757, -3.3765, -3.6134, -3.9948], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7221, device='cuda:0', dtype=torch.float64)
tensor([-2.2600, -3.0806, -3.3850, -3.5876, -3.9756], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6821, device='cuda:0', dtype=torch.float64)
tensor([-2.2363, -3.0510, -3.3842, -3.6177, -3.9624], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3187, device='cuda:0', dtype=torch.float64)
tensor([-2.2359, -3.0544, -3.4004, -3.7021, -3.9456], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8930, device='cuda:0', dtype=torch.float64)
tensor([-2.2278, -3.0218, -3.4377, -3.6990, -3.9168], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4625, device='cuda:0', dtype=torch.float64)
tensor([-2.2298, -3.0015, -3.4612, -3.6197, -3.9064], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7180, device='cuda:0', dtype=torch.float64)
tensor([-2.2550, -3.0124, -3.4544, -3.5542, -3.9004], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9531, device='cuda:0', dtype=torch.float64)
tensor([-2.2724, -3.0324, -3.4118, -3.5488, -3.8577], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8646, device='cuda:0', dtype=torch.float64)
tensor([-2.2884, -3.0809, -3.3741, -3.6069, -3.8189], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6343, device='cuda:0', dtype=torch.float64)
tensor([-2.3047, -3.1337, -3.3559, -3.6700, -3.7979], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6935, device='cuda:0', dtype=torch.float64)
tensor([-2.3151, -3.1282, -3.3667, -3.6698, -3.7891], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6926, device='cuda:0', dtype=torch.float64)
tensor([-2.3171, -3.1091, -3.3902, -3.6289, -3.8132], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4078, device='cuda:0', dtype=torch.float64)
tensor([-2.3044, -3.1082, -3.4019, -3.6413, -3.8459], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4944, device='cuda:0', dtype=torch.float64)
tensor([-2.2992, -3.0904, -3.3981, -3.6541, -3.8555], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0618, device='cuda:0', dtype=torch.float64)
tensor([-2.2711, -3.0676, -3.3931, -3.7204, -3.8619], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8011, device='cuda:0', dtype=torch.float64)
tensor([-2.2473, -3.0668, -3.3913, -3.7628, -3.8733], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8209, device='cuda:0', dtype=torch.float64)
tensor([-2.2204, -3.0673, -3.3893, -3.7322, -3.8814], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6617, device='cuda:0', dtype=torch.float64)
tensor([-2.2128, -3.0650, -3.4026, -3.7131, -3.8554], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7221, device='cuda:0', dtype=torch.float64)
tensor([-2.2075, -3.0733, -3.4453, -3.7562, -3.8141], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8482, device='cuda:0', dtype=torch.float64)
tensor([-2.1781, -3.0483, -3.4743, -3.8066, -3.7878], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7299, device='cuda:0', dtype=torch.float64)
tensor([-2.1679, -3.0136, -3.4610, -3.8913, -3.7732], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4658, device='cuda:0', dtype=torch.float64)
tensor([-2.1846, -3.0098, -3.4265, -3.9406, -3.7565], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5233, device='cuda:0', dtype=torch.float64)
tensor([-2.2132, -3.0312, -3.3825, -3.9011, -3.7729], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3077, device='cuda:0', dtype=torch.float64)
tensor([-2.2566, -3.0609, -3.3366, -3.8301, -3.8132], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6434, device='cuda:0', dtype=torch.float64)
tensor([-2.3060, -3.0791, -3.3195, -3.7687, -3.8469], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5529, device='cuda:0', dtype=torch.float64)
tensor([-2.3133, -3.0753, -3.3521, -3.7542, -3.8539], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8465, device='cuda:0', dtype=torch.float64)
tensor([-2.3143, -3.0680, -3.4071, -3.8108, -3.8448], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3536, device='cuda:0', dtype=torch.float64)
tensor([-2.2960, -3.0835, -3.4397, -3.9241, -3.8384], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0425, device='cuda:0', dtype=torch.float64)
tensor([-2.2859, -3.0975, -3.4496, -3.8855, -3.8370], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5767, device='cuda:0', dtype=torch.float64)
tensor([-2.2985, -3.1224, -3.4304, -3.8042, -3.8431], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4899, device='cuda:0', dtype=torch.float64)
tensor([-2.3063, -3.1384, -3.4053, -3.7494, -3.8397], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7396, device='cuda:0', dtype=torch.float64)
tensor([-2.3054, -3.1503, -3.3919, -3.7078, -3.8284], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5179, device='cuda:0', dtype=torch.float64)
tensor([-2.2796, -3.1276, -3.3860, -3.7223, -3.8139], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5224, device='cuda:0', dtype=torch.float64)
tensor([-2.2548, -3.0954, -3.3724, -3.8328, -3.8149], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8856, device='cuda:0', dtype=torch.float64)
tensor([-2.2378, -3.1120, -3.3390, -3.8909, -3.8260], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6863, device='cuda:0', dtype=torch.float64)
tensor([-2.2164, -3.1232, -3.3196, -3.8074, -3.8106], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4632, device='cuda:0', dtype=torch.float64)
tensor([-2.2266, -3.1482, -3.3043, -3.7019, -3.7751], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5525, device='cuda:0', dtype=torch.float64)
tensor([-2.2237, -3.1715, -3.3256, -3.6902, -3.7405], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6133, device='cuda:0', dtype=torch.float64)
tensor([-2.2021, -3.1788, -3.3449, -3.7339, -3.7128], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5018, device='cuda:0', dtype=torch.float64)
tensor([-2.1765, -3.1784, -3.3635, -3.7839, -3.7074], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5887, device='cuda:0', dtype=torch.float64)
tensor([-2.1536, -3.1729, -3.3927, -3.8064, -3.7199], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4833, device='cuda:0', dtype=torch.float64)
tensor([-2.1601, -3.1513, -3.4089, -3.8025, -3.7444], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3375, device='cuda:0', dtype=torch.float64)
tensor([-2.1605, -3.1234, -3.4486, -3.7899, -3.7784], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4506, device='cuda:0', dtype=torch.float64)
tensor([-2.1951, -3.0988, -3.4736, -3.7705, -3.8141], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8162, device='cuda:0', dtype=torch.float64)
tensor([-2.2474, -3.0902, -3.4841, -3.7578, -3.8475], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5636, device='cuda:0', dtype=torch.float64)
tensor([-2.2978, -3.1121, -3.4905, -3.7578, -3.8869], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5589, device='cuda:0', dtype=torch.float64)
tensor([-2.3383, -3.1476, -3.4860, -3.7475, -3.9088], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7610, device='cuda:0', dtype=torch.float64)
tensor([-2.3522, -3.1579, -3.4792, -3.7008, -3.9106], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6273, device='cuda:0', dtype=torch.float64)
tensor([-2.3543, -3.1918, -3.4950, -3.6785, -3.9136], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1755, device='cuda:0', dtype=torch.float64)
tensor([-2.3514, -3.2377, -3.4977, -3.6786, -3.9284], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7827, device='cuda:0', dtype=torch.float64)
tensor([-2.3360, -3.2353, -3.4286, -3.6829, -3.9246], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6681, device='cuda:0', dtype=torch.float64)
tensor([-2.3060, -3.1913, -3.3573, -3.7205, -3.9130], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7453, device='cuda:0', dtype=torch.float64)
tensor([-2.2663, -3.1513, -3.3436, -3.8119, -3.9080], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6691, device='cuda:0', dtype=torch.float64)
tensor([-2.2454, -3.1241, -3.3543, -3.8361, -3.8955], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8529, device='cuda:0', dtype=torch.float64)
tensor([-2.2390, -3.1165, -3.3750, -3.8094, -3.8774], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5905, device='cuda:0', dtype=torch.float64)
tensor([-2.2361, -3.1110, -3.4150, -3.7888, -3.8605], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5231, device='cuda:0', dtype=torch.float64)
tensor([-2.2412, -3.1049, -3.4705, -3.8184, -3.8619], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7088, device='cuda:0', dtype=torch.float64)
tensor([-2.2571, -3.1166, -3.5037, -3.8452, -3.8830], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5368, device='cuda:0', dtype=torch.float64)
tensor([-2.2893, -3.1530, -3.5341, -3.8728, -3.8999], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7980, device='cuda:0', dtype=torch.float64)
tensor([-2.3465, -3.1825, -3.5082, -3.8055, -3.9081], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4993, device='cuda:0', dtype=torch.float64)
tensor([-2.3910, -3.2003, -3.4688, -3.6907, -3.9272], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6162, device='cuda:0', dtype=torch.float64)
tensor([-2.4283, -3.2106, -3.4196, -3.5863, -3.9621], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7658, device='cuda:0', dtype=torch.float64)
tensor([-2.4250, -3.1633, -3.4033, -3.5458, -3.9718], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7746, device='cuda:0', dtype=torch.float64)
tensor([-2.4083, -3.1033, -3.4366, -3.5747, -3.9596], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5089, device='cuda:0', dtype=torch.float64)
tensor([-2.3654, -3.0633, -3.4707, -3.6833, -3.9580], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7338, device='cuda:0', dtype=torch.float64)
tensor([-2.3226, -3.0579, -3.4930, -3.8075, -3.9468], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8560, device='cuda:0', dtype=torch.float64)
tensor([-2.2822, -3.0535, -3.4817, -3.8627, -3.9248], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6622, device='cuda:0', dtype=torch.float64)
tensor([-2.2553, -3.0763, -3.4530, -3.8259, -3.9104], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4780, device='cuda:0', dtype=torch.float64)
tensor([-2.2347, -3.1244, -3.4350, -3.8093, -3.9026], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2689, device='cuda:0', dtype=torch.float64)
tensor([-2.2499, -3.1772, -3.4302, -3.7897, -3.9013], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9330, device='cuda:0', dtype=torch.float64)
tensor([-2.2617, -3.1775, -3.4464, -3.7727, -3.8716], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0882, device='cuda:0', dtype=torch.float64)
tensor([-2.2710, -3.1679, -3.4672, -3.7952, -3.8555], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2234, device='cuda:0', dtype=torch.float64)
tensor([-2.2756, -3.1664, -3.4968, -3.8710, -3.8621], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4750, device='cuda:0', dtype=torch.float64)
tensor([-2.3086, -3.1902, -3.5007, -3.9268, -3.8957], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.2465, device='cuda:0', dtype=torch.float64)
tensor([-2.3474, -3.1991, -3.4790, -3.8904, -3.9039], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7980, device='cuda:0', dtype=torch.float64)
tensor([-2.3684, -3.1569, -3.4621, -3.8094, -3.9095], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5134, device='cuda:0', dtype=torch.float64)
tensor([-2.3902, -3.1624, -3.4873, -3.7730, -3.9180], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5470, device='cuda:0', dtype=torch.float64)
tensor([-2.4022, -3.1897, -3.5319, -3.7527, -3.9389], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6510, device='cuda:0', dtype=torch.float64)
tensor([-2.3735, -3.1948, -3.5412, -3.7799, -3.9460], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8049, device='cuda:0', dtype=torch.float64)
tensor([-2.3242, -3.1542, -3.5142, -3.8396, -3.9425], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2532, device='cuda:0', dtype=torch.float64)
tensor([-2.2727, -3.1256, -3.5287, -3.9255, -3.9462], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9025, device='cuda:0', dtype=torch.float64)
tensor([-2.2560, -3.1383, -3.5631, -3.9805, -3.9469], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9395, device='cuda:0', dtype=torch.float64)
tensor([-2.2713, -3.1584, -3.5832, -3.9886, -3.9765], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9696, device='cuda:0', dtype=torch.float64)
tensor([-2.2929, -3.1971, -3.5620, -3.9064, -4.0002], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4892, device='cuda:0', dtype=torch.float64)
tensor([-2.3482, -3.2680, -3.5142, -3.8028, -4.0329], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4908, device='cuda:0', dtype=torch.float64)
tensor([-2.3931, -3.3357, -3.4671, -3.7385, -4.0677], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7112, device='cuda:0', dtype=torch.float64)
tensor([-2.4113, -3.3438, -3.4692, -3.7068, -4.0685], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9839, device='cuda:0', dtype=torch.float64)
tensor([-2.4020, -3.2947, -3.4944, -3.6682, -4.0267], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4941, device='cuda:0', dtype=torch.float64)
tensor([-2.3888, -3.2656, -3.5272, -3.6035, -3.9940], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3124, device='cuda:0', dtype=torch.float64)
tensor([-2.3787, -3.2652, -3.5611, -3.5439, -3.9605], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5004, device='cuda:0', dtype=torch.float64)
tensor([-2.3715, -3.2839, -3.5815, -3.5497, -3.9568], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4653, device='cuda:0', dtype=torch.float64)
tensor([-2.3763, -3.2883, -3.5743, -3.6078, -3.9872], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5953, device='cuda:0', dtype=torch.float64)
tensor([-2.3623, -3.2497, -3.5273, -3.6442, -3.9995], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4708, device='cuda:0', dtype=torch.float64)
tensor([-2.3506, -3.2385, -3.4923, -3.6626, -4.0319], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7090, device='cuda:0', dtype=torch.float64)
tensor([-2.3456, -3.2470, -3.4648, -3.6564, -4.0718], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3694, device='cuda:0', dtype=torch.float64)
tensor([-2.3356, -3.2583, -3.4513, -3.6881, -4.1054], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7855, device='cuda:0', dtype=torch.float64)
tensor([-2.3228, -3.2463, -3.4601, -3.7490, -4.0927], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6584, device='cuda:0', dtype=torch.float64)
tensor([-2.2851, -3.1719, -3.4789, -3.8735, -4.0765], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2927, device='cuda:0', dtype=torch.float64)
tensor([-2.2686, -3.0927, -3.4987, -4.0229, -4.0667], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5758, device='cuda:0', dtype=torch.float64)
tensor([-2.2583, -3.0572, -3.5356, -4.1551, -4.0491], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3045, device='cuda:0', dtype=torch.float64)
tensor([-2.2655, -3.0724, -3.5346, -4.1743, -4.0203], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8333, device='cuda:0', dtype=torch.float64)
tensor([-2.2806, -3.1255, -3.4910, -4.0550, -3.9839], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2729, device='cuda:0', dtype=torch.float64)
tensor([-2.2984, -3.1936, -3.4681, -3.9321, -3.9746], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4996, device='cuda:0', dtype=torch.float64)
tensor([-2.3337, -3.2653, -3.4390, -3.8175, -4.0247], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3739, device='cuda:0', dtype=torch.float64)
tensor([-2.3813, -3.3150, -3.4137, -3.7282, -4.0654], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7483, device='cuda:0', dtype=torch.float64)
tensor([-2.4164, -3.3163, -3.4021, -3.7017, -4.0437], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6092, device='cuda:0', dtype=torch.float64)
tensor([-2.4277, -3.3099, -3.3934, -3.7533, -4.0070], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3971, device='cuda:0', dtype=torch.float64)
tensor([-2.4452, -3.3225, -3.3707, -3.8479, -3.9941], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4208, device='cuda:0', dtype=torch.float64)
tensor([-2.4536, -3.3241, -3.3673, -3.8740, -3.9774], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3909, device='cuda:0', dtype=torch.float64)
tensor([-2.4342, -3.3159, -3.3552, -3.8249, -3.9711], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3540, device='cuda:0', dtype=torch.float64)
tensor([-2.4184, -3.3107, -3.3652, -3.7575, -3.9648], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3766, device='cuda:0', dtype=torch.float64)
tensor([-2.4160, -3.3067, -3.4002, -3.7355, -3.9774], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3506, device='cuda:0', dtype=torch.float64)
tensor([-2.4087, -3.2801, -3.4187, -3.7233, -4.0104], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5984, device='cuda:0', dtype=torch.float64)
tensor([-2.4083, -3.2183, -3.4339, -3.7336, -4.0350], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5289, device='cuda:0', dtype=torch.float64)
tensor([-2.4034, -3.1604, -3.4417, -3.7407, -4.0493], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5280, device='cuda:0', dtype=torch.float64)
tensor([-2.3880, -3.1196, -3.4609, -3.7781, -4.0508], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6434, device='cuda:0', dtype=torch.float64)
tensor([-2.3804, -3.0986, -3.4833, -3.8245, -4.0420], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7695, device='cuda:0', dtype=torch.float64)
tensor([-2.3855, -3.0856, -3.5006, -3.7998, -4.0356], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4797, device='cuda:0', dtype=torch.float64)
tensor([-2.4217, -3.0841, -3.5505, -3.7868, -4.0169], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6587, device='cuda:0', dtype=torch.float64)
tensor([-2.4075, -3.0574, -3.5702, -3.8307, -3.9791], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2559, device='cuda:0', dtype=torch.float64)
tensor([-2.4037, -3.0610, -3.5657, -3.8931, -3.9464], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4481, device='cuda:0', dtype=torch.float64)
tensor([-2.3979, -3.0799, -3.5773, -3.9381, -3.9218], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2150, device='cuda:0', dtype=torch.float64)
tensor([-2.3930, -3.1094, -3.6088, -3.9527, -3.9062], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2734, device='cuda:0', dtype=torch.float64)
tensor([-2.3725, -3.1487, -3.6229, -4.0062, -3.9348], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5813, device='cuda:0', dtype=torch.float64)
tensor([-2.3554, -3.1894, -3.6167, -4.0041, -3.9315], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3763, device='cuda:0', dtype=torch.float64)
tensor([-2.3480, -3.2343, -3.6084, -4.0024, -3.8800], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5316, device='cuda:0', dtype=torch.float64)
tensor([-2.3228, -3.2722, -3.5898, -4.0656, -3.8581], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6055, device='cuda:0', dtype=torch.float64)
tensor([-2.3272, -3.3285, -3.5593, -4.1091, -3.8733], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4848, device='cuda:0', dtype=torch.float64)
tensor([-2.3529, -3.4206, -3.5183, -4.0878, -3.9215], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8151, device='cuda:0', dtype=torch.float64)
tensor([-2.3831, -3.4769, -3.4726, -4.0799, -3.9637], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4651, device='cuda:0', dtype=torch.float64)
tensor([-2.3994, -3.4858, -3.4514, -4.0419, -3.9949], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4898, device='cuda:0', dtype=torch.float64)
tensor([-2.4196, -3.4851, -3.4463, -3.9910, -4.0394], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4200, device='cuda:0', dtype=torch.float64)
tensor([-2.4533, -3.4436, -3.4552, -3.9640, -4.0827], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2325, device='cuda:0', dtype=torch.float64)
tensor([-2.4698, -3.3861, -3.4659, -3.9930, -4.1266], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2416, device='cuda:0', dtype=torch.float64)
tensor([-2.5019, -3.3752, -3.4738, -4.0141, -4.1480], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1814, device='cuda:0', dtype=torch.float64)
tensor([-2.5265, -3.3861, -3.4948, -4.0212, -4.1436], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4119, device='cuda:0', dtype=torch.float64)
tensor([-2.5453, -3.3909, -3.5416, -3.8866, -4.1141], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4123, device='cuda:0', dtype=torch.float64)
tensor([-2.5543, -3.4026, -3.5703, -3.8253, -4.0900], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3294, device='cuda:0', dtype=torch.float64)
tensor([-2.5508, -3.4108, -3.5790, -3.8205, -4.0804], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3693, device='cuda:0', dtype=torch.float64)
tensor([-2.5287, -3.3689, -3.5950, -3.8330, -4.0682], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1703, device='cuda:0', dtype=torch.float64)
tensor([-2.5035, -3.3182, -3.6138, -3.8642, -4.0652], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2787, device='cuda:0', dtype=torch.float64)
tensor([-2.4607, -3.2425, -3.6422, -3.9246, -4.0673], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2734, device='cuda:0', dtype=torch.float64)
tensor([-2.4122, -3.1854, -3.6717, -4.0481, -4.0902], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3518, device='cuda:0', dtype=torch.float64)
tensor([-2.3640, -3.1490, -3.6817, -4.1512, -4.1223], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6113, device='cuda:0', dtype=torch.float64)
tensor([-2.3372, -3.1638, -3.6632, -4.1625, -4.1360], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3509, device='cuda:0', dtype=torch.float64)
tensor([-2.3261, -3.1943, -3.6338, -4.1408, -4.1395], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4879, device='cuda:0', dtype=torch.float64)
tensor([-2.3361, -3.2610, -3.6070, -4.1396, -4.1544], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3601, device='cuda:0', dtype=torch.float64)
tensor([-2.3694, -3.3323, -3.5978, -4.1293, -4.1723], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1739, device='cuda:0', dtype=torch.float64)
tensor([-2.4076, -3.4090, -3.5989, -4.0900, -4.1574], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1824, device='cuda:0', dtype=torch.float64)
tensor([-2.4472, -3.4752, -3.5967, -4.0314, -4.1313], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5619, device='cuda:0', dtype=torch.float64)
tensor([-2.4728, -3.5201, -3.5941, -3.9799, -4.1056], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6276, device='cuda:0', dtype=torch.float64)
tensor([-2.5117, -3.5460, -3.5857, -3.9671, -4.0923], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2770, device='cuda:0', dtype=torch.float64)
tensor([-2.5494, -3.5741, -3.5666, -3.9241, -4.0714], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2757, device='cuda:0', dtype=torch.float64)
tensor([-2.5645, -3.5796, -3.5914, -3.9150, -4.0664], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4064, device='cuda:0', dtype=torch.float64)
tensor([-2.5562, -3.5488, -3.6030, -3.9099, -4.0849], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4995, device='cuda:0', dtype=torch.float64)
tensor([-2.5269, -3.5057, -3.5840, -3.9057, -4.0887], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3990, device='cuda:0', dtype=torch.float64)
tensor([-2.4962, -3.4481, -3.5691, -3.9150, -4.0870], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4724, device='cuda:0', dtype=torch.float64)
tensor([-2.4285, -3.4055, -3.5847, -3.9502, -4.0805], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3461, device='cuda:0', dtype=torch.float64)
tensor([-2.3298, -3.3759, -3.6213, -4.0056, -4.0809], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3119, device='cuda:0', dtype=torch.float64)
tensor([-2.2737, -3.3720, -3.6642, -4.0611, -4.0797], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5360, device='cuda:0', dtype=torch.float64)
tensor([-2.2596, -3.3742, -3.7052, -4.0662, -4.0893], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5401, device='cuda:0', dtype=torch.float64)
tensor([-2.2752, -3.3539, -3.7247, -4.0432, -4.1067], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3643, device='cuda:0', dtype=torch.float64)
tensor([-2.3328, -3.3599, -3.7108, -4.0037, -4.1240], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5239, device='cuda:0', dtype=torch.float64)
tensor([-2.4354, -3.3715, -3.6845, -3.9644, -4.1669], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4111, device='cuda:0', dtype=torch.float64)
tensor([-2.5437, -3.3975, -3.6528, -3.9337, -4.1985], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5402, device='cuda:0', dtype=torch.float64)
tensor([-2.6626, -3.4188, -3.6136, -3.9071, -4.2002], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2430, device='cuda:0', dtype=torch.float64)
tensor([-2.7443, -3.4218, -3.5879, -3.9125, -4.2147], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1632, device='cuda:0', dtype=torch.float64)
tensor([-2.7753, -3.4103, -3.5384, -3.9516, -4.1858], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0982, device='cuda:0', dtype=torch.float64)
tensor([-2.7696, -3.3909, -3.4940, -4.0781, -4.1672], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9944, device='cuda:0', dtype=torch.float64)
tensor([-2.7520, -3.3878, -3.4627, -4.2029, -4.1445], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2965, device='cuda:0', dtype=torch.float64)
tensor([-2.7193, -3.3929, -3.4236, -4.2068, -4.1395], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2670, device='cuda:0', dtype=torch.float64)
tensor([-2.6837, -3.3870, -3.3812, -4.1614, -4.1479], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3759, device='cuda:0', dtype=torch.float64)
tensor([-2.6219, -3.3648, -3.3674, -4.1355, -4.1438], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5254, device='cuda:0', dtype=torch.float64)
tensor([-2.5789, -3.3399, -3.3986, -4.1042, -4.1318], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4312, device='cuda:0', dtype=torch.float64)
tensor([-2.5690, -3.3293, -3.4499, -4.0470, -4.1492], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2487, device='cuda:0', dtype=torch.float64)
tensor([-2.5653, -3.3357, -3.5025, -3.9936, -4.1678], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4840, device='cuda:0', dtype=torch.float64)
tensor([-2.5717, -3.3603, -3.5557, -3.9174, -4.1890], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4475, device='cuda:0', dtype=torch.float64)
tensor([-2.5860, -3.4101, -3.5911, -3.8583, -4.2167], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3384, device='cuda:0', dtype=torch.float64)
tensor([-2.5983, -3.4408, -3.6284, -3.8016, -4.2334], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1172, device='cuda:0', dtype=torch.float64)
tensor([-2.6008, -3.4086, -3.6671, -3.7764, -4.2535], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1470, device='cuda:0', dtype=torch.float64)
tensor([-2.6035, -3.3751, -3.6986, -3.7911, -4.2750], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4222, device='cuda:0', dtype=torch.float64)
tensor([-2.6001, -3.3650, -3.7060, -3.8000, -4.2849], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5133, device='cuda:0', dtype=torch.float64)
tensor([-2.6331, -3.3600, -3.6926, -3.8407, -4.2875], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1389, device='cuda:0', dtype=torch.float64)
tensor([-2.6468, -3.3553, -3.6906, -3.9708, -4.3095], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7844, device='cuda:0', dtype=torch.float64)
tensor([-2.6871, -3.3492, -3.6812, -4.1106, -4.2859], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2569, device='cuda:0', dtype=torch.float64)
tensor([-2.7544, -3.3678, -3.6549, -4.1278, -4.2554], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9631, device='cuda:0', dtype=torch.float64)
tensor([-2.8254, -3.4058, -3.6021, -4.0335, -4.2322], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5597, device='cuda:0', dtype=torch.float64)
tensor([-2.9047, -3.4489, -3.5373, -3.9275, -4.1954], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3850, device='cuda:0', dtype=torch.float64)
tensor([-2.9659, -3.4683, -3.4910, -3.9052, -4.2063], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3136, device='cuda:0', dtype=torch.float64)
tensor([-2.9872, -3.4900, -3.4508, -3.9239, -4.2263], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2146, device='cuda:0', dtype=torch.float64)
tensor([-2.9933, -3.4909, -3.4355, -3.9476, -4.2464], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6681, device='cuda:0', dtype=torch.float64)
tensor([-2.9736, -3.4784, -3.4373, -3.9863, -4.2645], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2319, device='cuda:0', dtype=torch.float64)
tensor([-2.9131, -3.4682, -3.4398, -4.0557, -4.2874], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4115, device='cuda:0', dtype=torch.float64)
tensor([-2.8212, -3.4498, -3.4549, -4.1741, -4.3076], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5601, device='cuda:0', dtype=torch.float64)
tensor([-2.7726, -3.4111, -3.4749, -4.2588, -4.3019], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6759, device='cuda:0', dtype=torch.float64)
tensor([-2.7496, -3.3519, -3.5386, -4.3037, -4.2607], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5652, device='cuda:0', dtype=torch.float64)
tensor([-2.7436, -3.3284, -3.6512, -4.3434, -4.2237], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7220, device='cuda:0', dtype=torch.float64)
tensor([-2.7482, -3.3819, -3.7848, -4.4280, -4.2264], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6164, device='cuda:0', dtype=torch.float64)
tensor([-2.7494, -3.4376, -3.8911, -4.4371, -4.2471], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5166, device='cuda:0', dtype=torch.float64)
tensor([-2.7586, -3.4735, -3.8474, -4.4296, -4.2402], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5699, device='cuda:0', dtype=torch.float64)
tensor([-2.7730, -3.4816, -3.7685, -4.3611, -4.2314], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2771, device='cuda:0', dtype=torch.float64)
tensor([-2.7948, -3.5457, -3.7301, -4.2880, -4.2430], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0967, device='cuda:0', dtype=torch.float64)
tensor([-2.8415, -3.6587, -3.7261, -4.2399, -4.2870], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4187, device='cuda:0', dtype=torch.float64)
tensor([-2.9136, -3.7845, -3.7151, -4.2003, -4.3251], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3808, device='cuda:0', dtype=torch.float64)
tensor([-2.9808, -3.8339, -3.7267, -4.1385, -4.3335], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2792, device='cuda:0', dtype=torch.float64)
tensor([-3.0368, -3.8217, -3.7448, -4.0888, -4.3432], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3824, device='cuda:0', dtype=torch.float64)
tensor([-3.0326, -3.7635, -3.7757, -4.0615, -4.3278], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3799, device='cuda:0', dtype=torch.float64)
tensor([-2.9930, -3.7083, -3.8185, -4.0480, -4.3096], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2367, device='cuda:0', dtype=torch.float64)
tensor([-2.9378, -3.6993, -3.8633, -4.0667, -4.2874], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2187, device='cuda:0', dtype=torch.float64)
tensor([-2.8717, -3.6727, -3.9247, -4.1176, -4.2595], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3609, device='cuda:0', dtype=torch.float64)
tensor([-2.8242, -3.6355, -3.9813, -4.1658, -4.2374], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3432, device='cuda:0', dtype=torch.float64)
tensor([-2.7772, -3.5982, -4.0270, -4.2394, -4.2156], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1642, device='cuda:0', dtype=torch.float64)
tensor([-2.7480, -3.6059, -4.0535, -4.2980, -4.2190], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5306, device='cuda:0', dtype=torch.float64)
tensor([-2.7363, -3.6369, -4.0897, -4.3337, -4.2432], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3030, device='cuda:0', dtype=torch.float64)
tensor([-2.7491, -3.6955, -4.1406, -4.4003, -4.3071], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3155, device='cuda:0', dtype=torch.float64)
tensor([-2.7641, -3.7520, -4.1966, -4.4173, -4.3891], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5388, device='cuda:0', dtype=torch.float64)
tensor([-2.7527, -3.7382, -4.2519, -4.4544, -4.3894], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3341, device='cuda:0', dtype=torch.float64)
tensor([-2.7553, -3.7022, -4.2961, -4.4624, -4.3716], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3008, device='cuda:0', dtype=torch.float64)
tensor([-2.7701, -3.6500, -4.3312, -4.4812, -4.2672], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4827, device='cuda:0', dtype=torch.float64)
tensor([-2.8073, -3.6244, -4.3693, -4.4636, -4.2037], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5978, device='cuda:0', dtype=torch.float64)
tensor([-2.8606, -3.6241, -4.3959, -4.4651, -4.1499], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3300, device='cuda:0', dtype=torch.float64)
tensor([-2.9248, -3.6734, -4.4025, -4.4219, -4.1388], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3285, device='cuda:0', dtype=torch.float64)
tensor([-2.9965, -3.7180, -4.3146, -4.4065, -4.1541], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4301, device='cuda:0', dtype=torch.float64)
tensor([-3.0650, -3.7353, -4.2510, -4.3652, -4.1729], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2951, device='cuda:0', dtype=torch.float64)
tensor([-3.1152, -3.7432, -4.2183, -4.3142, -4.1758], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2516, device='cuda:0', dtype=torch.float64)
tensor([-3.1408, -3.7682, -4.1688, -4.2321, -4.1942], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3766, device='cuda:0', dtype=torch.float64)
tensor([-3.1504, -3.7584, -4.1094, -4.1325, -4.2108], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1317, device='cuda:0', dtype=torch.float64)
tensor([-3.1739, -3.7532, -4.0849, -4.0581, -4.2472], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9753, device='cuda:0', dtype=torch.float64)
tensor([-3.1995, -3.7521, -4.1016, -4.0500, -4.2964], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2771, device='cuda:0', dtype=torch.float64)
tensor([-3.2087, -3.7681, -4.0922, -4.0718, -4.3201], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5207, device='cuda:0', dtype=torch.float64)
tensor([-3.1901, -3.7895, -4.1000, -4.1198, -4.3245], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0707, device='cuda:0', dtype=torch.float64)
tensor([-3.1957, -3.8220, -4.1243, -4.2294, -4.3629], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3025, device='cuda:0', dtype=torch.float64)
tensor([-3.2497, -3.8457, -4.1778, -4.4109, -4.4461], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2829, device='cuda:0', dtype=torch.float64)
tensor([-3.3374, -3.8678, -4.2597, -4.6524, -4.6188], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2303, device='cuda:0', dtype=torch.float64)
tensor([-3.4234, -3.9115, -4.3654, -4.7650, -4.5780], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3313, device='cuda:0', dtype=torch.float64)
tensor([-3.4919, -3.9374, -4.4298, -4.7236, -4.4734], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4424, device='cuda:0', dtype=torch.float64)
tensor([-3.5560, -3.9706, -4.5371, -4.5765, -4.3783], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4505, device='cuda:0', dtype=torch.float64)
tensor([-3.5895, -3.9968, -4.6568, -4.5814, -4.3811], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3734, device='cuda:0', dtype=torch.float64)
tensor([-3.5829, -4.0377, -4.9161, -4.6503, -4.3821], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1521, device='cuda:0', dtype=torch.float64)
tensor([-3.5467, -4.0547, -5.0636, -4.7431, -4.3917], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3735, device='cuda:0', dtype=torch.float64)
tensor([-3.5158, -4.1035, -4.9443, -4.7662, -4.4130], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0960, device='cuda:0', dtype=torch.float64)
tensor([-3.5081, -4.1999, -4.7203, -4.7663, -4.4363], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2541, device='cuda:0', dtype=torch.float64)
tensor([-3.5058, -4.2964, -4.5300, -4.7919, -4.4752], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3098, device='cuda:0', dtype=torch.float64)
tensor([-3.5059, -4.3569, -4.4050, -4.7859, -4.5142], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3751, device='cuda:0', dtype=torch.float64)
tensor([-3.5409, -4.3750, -4.3218, -4.6915, -4.5584], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0019, device='cuda:0', dtype=torch.float64)
tensor([-3.5115, -4.3359, -4.2694, -4.6394, -4.6110], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3046, device='cuda:0', dtype=torch.float64)
tensor([-3.4794, -4.2931, -4.2423, -4.6333, -4.6490], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3329, device='cuda:0', dtype=torch.float64)
tensor([-3.4049, -4.2337, -4.2464, -4.7224, -4.6706], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2578, device='cuda:0', dtype=torch.float64)
tensor([-3.3282, -4.1411, -4.3080, -4.7241, -4.6638], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1847, device='cuda:0', dtype=torch.float64)
tensor([-3.2587, -4.0821, -4.4149, -4.8655, -4.6555], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6247, device='cuda:0', dtype=torch.float64)
tensor([-3.2241, -4.0624, -4.5094, -5.1072, -4.6704], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1697, device='cuda:0', dtype=torch.float64)
tensor([-3.2139, -4.0718, -4.5990, -5.3479, -4.7033], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2761, device='cuda:0', dtype=torch.float64)
tensor([-3.2039, -4.1089, -4.7226, -5.4885, -4.7559], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2817, device='cuda:0', dtype=torch.float64)
tensor([-3.2047, -4.2065, -4.8669, -5.5726, -4.7936], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4448, device='cuda:0', dtype=torch.float64)
tensor([-3.2047, -4.2618, -4.9523, -5.5194, -4.8047], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1843, device='cuda:0', dtype=torch.float64)
tensor([-3.2334, -4.3072, -5.0383, -5.4262, -4.8081], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1485, device='cuda:0', dtype=torch.float64)
tensor([-3.3037, -4.3359, -5.0743, -5.3528, -4.7863], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1461, device='cuda:0', dtype=torch.float64)
tensor([-3.3560, -4.4049, -5.0596, -5.3722, -4.7574], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3114, device='cuda:0', dtype=torch.float64)
tensor([-3.4153, -4.4182, -5.0147, -5.2940, -4.7263], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1704, device='cuda:0', dtype=torch.float64)
tensor([-3.4646, -4.4249, -4.9311, -5.1617, -4.7013], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0983, device='cuda:0', dtype=torch.float64)
tensor([-3.5325, -4.4465, -4.8073, -4.9631, -4.7577], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8706, device='cuda:0', dtype=torch.float64)
tensor([-3.6175, -4.5091, -4.7118, -4.8188, -4.8498], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3779, device='cuda:0', dtype=torch.float64)
tensor([-3.6940, -4.6148, -4.6711, -4.5051, -4.7241], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9971, device='cuda:0', dtype=torch.float64)
tensor([-3.7645, -4.7738, -4.6644, -4.3163, -4.6483], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2004, device='cuda:0', dtype=torch.float64)
tensor([-3.8248, -4.9289, -4.6664, -4.2323, -4.6107], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0838, device='cuda:0', dtype=torch.float64)
tensor([-3.9316, -5.0901, -4.6999, -4.2051, -4.5970], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0456, device='cuda:0', dtype=torch.float64)
tensor([-4.1093, -5.2738, -4.7579, -4.2478, -4.6153], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2043, device='cuda:0', dtype=torch.float64)
tensor([-4.2369, -5.5043, -4.8429, -4.3679, -4.6582], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2236, device='cuda:0', dtype=torch.float64)
tensor([-4.2860, -5.7004, -4.8556, -4.5609, -4.7093], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9718, device='cuda:0', dtype=torch.float64)
tensor([-4.2324, -5.8213, -4.8059, -4.8611, -4.7832], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2179, device='cuda:0', dtype=torch.float64)
tensor([-4.2189, -5.7688, -4.8029, -5.2963, -4.9333], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4305, device='cuda:0', dtype=torch.float64)
tensor([-4.2080, -5.7512, -4.8458, -5.9774, -5.1829], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1321, device='cuda:0', dtype=torch.float64)
tensor([-4.2182, -5.7527, -4.9375, -6.9450, -5.5314], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3999, device='cuda:0', dtype=torch.float64)
tensor([-4.2809, -5.8555, -5.0901, -7.9675, -5.6805], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9845, device='cuda:0', dtype=torch.float64)
tensor([-4.3161, -5.9077, -5.2180, -8.6280, -5.8061], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5426, device='cuda:0', dtype=torch.float64)
tensor([-4.3261, -6.0142, -5.3539, -8.8099, -5.9078], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3368, device='cuda:0', dtype=torch.float64)
tensor([-4.3916, -6.2812, -5.5198, -9.2363, -6.1105], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1931, device='cuda:0', dtype=torch.float64)
tensor([-4.4453, -6.3091, -5.6461, -9.6255, -6.3386], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3355, device='cuda:0', dtype=torch.float64)
tensor([-4.4666, -6.1368, -5.7699, -9.8833, -6.5487], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8569, device='cuda:0', dtype=torch.float64)
tensor([ -4.4883,  -6.1593,  -5.8843, -10.1263,  -6.7863], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9806, device='cuda:0', dtype=torch.float64)
tensor([ -4.5484,  -6.2878,  -5.9518, -10.1770,  -7.1150], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9066, device='cuda:0', dtype=torch.float64)
tensor([ -4.6493,  -6.4246,  -6.0512, -10.4199,  -7.4580], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1214, device='cuda:0', dtype=torch.float64)
tensor([ -4.8375,  -6.5687,  -6.1260, -10.5933,  -7.7662], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2233, device='cuda:0', dtype=torch.float64)
tensor([ -5.1494,  -6.7691,  -6.1438, -10.4383,  -7.8646], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1329, device='cuda:0', dtype=torch.float64)
tensor([ -5.6043,  -6.9800,  -6.2006, -10.5388,  -8.0766], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1139, device='cuda:0', dtype=torch.float64)
tensor([ -6.1568,  -7.2632,  -6.2950, -10.9604,  -8.4193], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2639, device='cuda:0', dtype=torch.float64)
tensor([ -6.7034,  -7.5307,  -6.3781, -11.3503,  -8.8002], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0892, device='cuda:0', dtype=torch.float64)
tensor([ -7.2513,  -7.8034,  -6.4907, -11.7419,  -9.0518], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0783, device='cuda:0', dtype=torch.float64)
tensor([ -8.1406,  -8.4550,  -6.6326, -11.9933,  -9.3182], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2308, device='cuda:0', dtype=torch.float64)
tensor([ -8.9253, -10.0550,  -6.8194, -12.9229,  -9.9222], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3570, device='cuda:0', dtype=torch.float64)
tensor([ -9.4828, -11.6463,  -7.0164, -14.4500, -10.5500], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8850, device='cuda:0', dtype=torch.float64)
tensor([-10.1771, -14.3597,  -7.2074, -16.3348, -11.1550], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0568, device='cuda:0', dtype=torch.float64)
tensor([-10.5401, -16.0580,  -7.3692, -18.0040, -11.4953], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2841, device='cuda:0', dtype=torch.float64)
tensor([-11.6927, -17.7405,  -7.5718, -19.7730, -11.6866], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9542, device='cuda:0', dtype=torch.float64)
tensor([-13.0421, -20.6016,  -7.8813, -22.3978, -12.1140], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1295, device='cuda:0', dtype=torch.float64)
tensor([-12.8770, -23.3787,  -8.2912, -25.6099, -12.7529], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9759, device='cuda:0', dtype=torch.float64)
tensor([-12.3257, -26.8487,  -8.7142, -29.0856, -13.7993], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9427, device='cuda:0', dtype=torch.float64)
tensor([-12.1189, -30.7691,  -9.2963, -32.6587, -14.6834], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1150, device='cuda:0', dtype=torch.float64)
tensor([-12.0318, -33.7832,  -9.8486, -35.7033, -15.1755], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2377, device='cuda:0', dtype=torch.float64)
tensor([-12.1020, -36.9011, -10.3531, -38.9371, -15.5668], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1904, device='cuda:0', dtype=torch.float64)
tensor([-12.4704, -40.3987, -10.9604, -42.1097, -16.1571], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0601, device='cuda:0', dtype=torch.float64)
tensor([-12.1509, -42.3702, -11.3320, -44.0365, -16.5938], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4764, device='cuda:0', dtype=torch.float64)
tensor([-11.6107, -43.5676, -11.4681, -45.8506, -17.1735], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9826, device='cuda:0', dtype=torch.float64)
tensor([-11.3599, -44.5955, -11.6825, -47.7867, -17.5858], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8882, device='cuda:0', dtype=torch.float64)
tensor([-11.2819, -45.6254, -11.8535, -49.1400, -17.9325], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2920, device='cuda:0', dtype=torch.float64)
tensor([-11.3826, -45.6828, -11.8746, -49.7878, -18.0086], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2793, device='cuda:0', dtype=torch.float64)
tensor([-11.4938, -44.4462, -11.9090, -49.4518, -18.0430], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1398, device='cuda:0', dtype=torch.float64)
tensor([-11.8534, -43.6707, -12.0151, -48.9428, -18.1523], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3560, device='cuda:0', dtype=torch.float64)
tensor([-12.1495, -43.2699, -12.2155, -48.2650, -18.3601], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4151, device='cuda:0', dtype=torch.float64)
tensor([-12.6619, -44.1133, -12.7196, -48.4561, -19.0333], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1797, device='cuda:0', dtype=torch.float64)
tensor([-13.6170, -45.1204, -13.2651, -49.5374, -19.9914], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0047, device='cuda:0', dtype=torch.float64)
tensor([-14.8957, -46.9272, -13.9723, -51.2423, -21.0319], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2679, device='cuda:0', dtype=torch.float64)
tensor([-16.2826, -48.5832, -14.6839, -52.1821, -22.0056], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8929, device='cuda:0', dtype=torch.float64)
tensor([-17.6551, -50.6412, -15.4368, -53.4159, -22.7159], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0173, device='cuda:0', dtype=torch.float64)
tensor([-18.8777, -53.5131, -16.2119, -55.0973, -23.2219], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1396, device='cuda:0', dtype=torch.float64)
tensor([-19.8994, -55.3667, -17.0797, -56.9014, -23.4263], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4828, device='cuda:0', dtype=torch.float64)
tensor([-20.6587, -55.0382, -17.6121, -57.8488, -23.1739], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0704, device='cuda:0', dtype=torch.float64)
tensor([-21.4514, -57.4904, -18.4711, -59.8202, -23.4547], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1639, device='cuda:0', dtype=torch.float64)
tensor([-21.0664, -57.7743, -18.9546, -59.7142, -23.0847], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9380, device='cuda:0', dtype=torch.float64)
tensor([-20.6242, -57.5068, -19.4636, -59.5282, -22.7621], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1002, device='cuda:0', dtype=torch.float64)
tensor([-20.0704, -55.9315, -19.9693, -59.0673, -22.0635], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0996, device='cuda:0', dtype=torch.float64)
tensor([-19.8104, -54.2564, -20.1606, -58.1133, -21.3092], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1172, device='cuda:0', dtype=torch.float64)
tensor([-20.1432, -53.2480, -20.4301, -57.2426, -20.6344], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9662, device='cuda:0', dtype=torch.float64)
tensor([-20.4759, -52.6666, -20.5968, -56.3099, -19.9680], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9175, device='cuda:0', dtype=torch.float64)
tensor([-20.6237, -51.8274, -20.8129, -55.0756, -19.2301], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9682, device='cuda:0', dtype=torch.float64)
tensor([-20.6010, -50.8937, -21.0872, -53.4266, -18.5890], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9834, device='cuda:0', dtype=torch.float64)
tensor([-20.7005, -50.4600, -21.4682, -52.2051, -18.3880], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0729, device='cuda:0', dtype=torch.float64)
tensor([-20.8202, -50.8172, -21.9444, -51.5504, -18.4336], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1854, device='cuda:0', dtype=torch.float64)
tensor([-20.9948, -51.6852, -22.3836, -51.3763, -18.6101], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0740, device='cuda:0', dtype=torch.float64)
tensor([-20.9552, -52.2313, -22.7980, -51.2378, -18.9193], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2536, device='cuda:0', dtype=torch.float64)
tensor([-20.9628, -52.1305, -23.3056, -51.9785, -19.3050], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1328, device='cuda:0', dtype=torch.float64)
tensor([-20.7507, -52.1898, -23.6989, -52.7919, -19.8005], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0864, device='cuda:0', dtype=torch.float64)
tensor([-20.7940, -52.9343, -24.1830, -53.1078, -20.3749], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1791, device='cuda:0', dtype=torch.float64)
tensor([-21.0216, -54.7682, -24.8971, -54.4252, -21.3489], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1616, device='cuda:0', dtype=torch.float64)
tensor([-21.3633, -56.3442, -25.6223, -55.6369, -22.6371], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2080, device='cuda:0', dtype=torch.float64)
tensor([-21.7954, -57.0152, -26.2917, -56.6157, -23.4868], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0299, device='cuda:0', dtype=torch.float64)
tensor([-22.2887, -58.3719, -27.5454, -57.8650, -24.8756], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1035, device='cuda:0', dtype=torch.float64)
tensor([-22.8231, -59.0163, -28.1992, -58.8433, -25.9467], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0095, device='cuda:0', dtype=torch.float64)
tensor([-23.3284, -59.3175, -28.4711, -59.4614, -27.2775], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9781, device='cuda:0', dtype=torch.float64)
tensor([-23.7640, -60.0276, -28.6656, -59.7991, -28.4938], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1971, device='cuda:0', dtype=torch.float64)
tensor([-24.5678, -61.3415, -29.0205, -60.8482, -30.0354], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9529, device='cuda:0', dtype=torch.float64)
tensor([-25.4157, -61.7121, -29.3585, -61.5091, -31.3426], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9997, device='cuda:0', dtype=torch.float64)
tensor([-26.2908, -62.2505, -29.6944, -62.2655, -32.6579], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1403, device='cuda:0', dtype=torch.float64)
tensor([-27.0102, -62.3373, -29.7869, -63.0506, -33.4283], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2429, device='cuda:0', dtype=torch.float64)
tensor([-27.7444, -62.1234, -29.6286, -62.9262, -33.7925], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1122, device='cuda:0', dtype=torch.float64)
tensor([-28.5595, -62.9334, -29.6952, -63.7500, -34.2798], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0872, device='cuda:0', dtype=torch.float64)
tensor([-29.0165, -62.7326, -29.9266, -64.4127, -34.3115], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1405, device='cuda:0', dtype=torch.float64)
tensor([-29.1023, -62.1313, -29.9117, -64.5018, -33.8267], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0042, device='cuda:0', dtype=torch.float64)
tensor([-29.2084, -62.0600, -29.9091, -64.8040, -33.3131], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2669, device='cuda:0', dtype=torch.float64)
tensor([-29.4180, -61.3124, -29.6646, -64.6863, -32.2629], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9905, device='cuda:0', dtype=torch.float64)
tensor([-29.9268, -60.9103, -29.4957, -65.1088, -31.6089], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0066, device='cuda:0', dtype=torch.float64)
tensor([-30.3780, -61.4225, -29.4067, -65.8801, -31.1717], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8905, device='cuda:0', dtype=torch.float64)
tensor([-30.9825, -61.7426, -29.6034, -66.5026, -30.7752], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8776, device='cuda:0', dtype=torch.float64)
tensor([-31.4554, -63.0630, -29.7543, -67.2515, -30.7076], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9660, device='cuda:0', dtype=torch.float64)
tensor([-32.1349, -64.8460, -30.0008, -68.9350, -30.8147], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2291, device='cuda:0', dtype=torch.float64)
tensor([-32.7206, -66.4615, -30.3630, -69.9950, -30.8996], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9912, device='cuda:0', dtype=torch.float64)
tensor([-33.0089, -67.8886, -30.6164, -70.6503, -31.0276], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0424, device='cuda:0', dtype=torch.float64)
tensor([-32.9005, -68.2577, -30.7079, -70.2222, -30.7808], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9011, device='cuda:0', dtype=torch.float64)
tensor([-32.6532, -69.3519, -30.8336, -70.2515, -30.8977], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2021, device='cuda:0', dtype=torch.float64)
tensor([-32.5911, -72.2033, -31.2321, -71.2707, -31.4942], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0711, device='cuda:0', dtype=torch.float64)
tensor([-32.5452, -75.5404, -31.6608, -72.9065, -32.4889], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0490, device='cuda:0', dtype=torch.float64)
tensor([-32.6922, -78.5820, -32.3408, -73.7953, -33.5022], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1070, device='cuda:0', dtype=torch.float64)
tensor([-33.0717, -83.4508, -33.4003, -75.4224, -34.9626], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0923, device='cuda:0', dtype=torch.float64)
tensor([-33.3919, -89.7471, -34.5782, -77.4308, -36.3755], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3649, device='cuda:0', dtype=torch.float64)
tensor([ -34.0558, -100.6648,  -36.2192,  -80.1868,  -38.5431],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.2570, device='cuda:0', dtype=torch.float64)
tensor([ -35.2434, -110.3157,  -38.2177,  -82.9246,  -40.7359],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0038, device='cuda:0', dtype=torch.float64)
tensor([ -36.8205, -119.0476,  -40.1995,  -85.0317,  -43.5077],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0861, device='cuda:0', dtype=torch.float64)
tensor([ -38.0450, -126.6666,  -42.0417,  -87.4684,  -46.1065],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9204, device='cuda:0', dtype=torch.float64)
tensor([ -38.9493, -133.6542,  -43.3335,  -89.3352,  -48.6684],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0661, device='cuda:0', dtype=torch.float64)
tensor([ -39.7558, -136.4590,  -43.9594,  -90.4102,  -50.1490],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.2324, device='cuda:0', dtype=torch.float64)
tensor([ -41.0061, -138.3184,  -44.4366,  -91.3188,  -51.5436],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0463, device='cuda:0', dtype=torch.float64)
tensor([ -41.2794, -133.8854,  -44.1629,  -90.5245,  -50.9578],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9511, device='cuda:0', dtype=torch.float64)
tensor([ -41.2253, -128.8546,  -43.9509,  -89.5813,  -50.2000],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.1854, device='cuda:0', dtype=torch.float64)
tensor([ -41.3581, -127.3582,  -43.5612,  -89.7133,  -50.0768],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0160, device='cuda:0', dtype=torch.float64)
tensor([ -41.9328, -126.9123,  -43.2408,  -90.7939,  -50.0404],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.1962, device='cuda:0', dtype=torch.float64)
tensor([ -42.7059, -125.1998,  -43.0042,  -91.2470,  -49.3738],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.1333, device='cuda:0', dtype=torch.float64)
tensor([ -44.0140, -125.5448,  -42.9604,  -91.7976,  -49.1003],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.2336, device='cuda:0', dtype=torch.float64)
tensor([ -45.6025, -127.6602,  -43.4758,  -92.2674,  -49.1420],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0797, device='cuda:0', dtype=torch.float64)
tensor([ -46.9182, -128.3869,  -44.3180,  -91.2261,  -48.7193],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9540, device='cuda:0', dtype=torch.float64)
tensor([ -47.5286, -129.2160,  -44.8250,  -90.9228,  -47.9252],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0856, device='cuda:0', dtype=torch.float64)
tensor([ -47.0304, -128.8333,  -44.9399,  -90.2833,  -47.0697],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9147, device='cuda:0', dtype=torch.float64)
tensor([ -46.8513, -128.6179,  -46.0106,  -89.7283,  -46.5648],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9716, device='cuda:0', dtype=torch.float64)
tensor([ -47.1677, -128.6035,  -47.0028,  -89.4749,  -45.9316],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.1857, device='cuda:0', dtype=torch.float64)
tensor([ -48.1752, -128.8776,  -48.3508,  -89.2374,  -45.6029],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0363, device='cuda:0', dtype=torch.float64)
tensor([ -50.6872, -133.7853,  -50.4268,  -90.3676,  -46.4621],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.1978, device='cuda:0', dtype=torch.float64)
tensor([ -53.9819, -141.0717,  -53.3572,  -92.4620,  -48.5712],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.1770, device='cuda:0', dtype=torch.float64)
tensor([ -57.1284, -147.1413,  -56.3764,  -95.1715,  -50.5056],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7110, device='cuda:0', dtype=torch.float64)
tensor([ -60.7673, -153.4390,  -59.4477,  -97.9907,  -52.9357],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.2141, device='cuda:0', dtype=torch.float64)
tensor([ -63.6326, -158.3569,  -61.5618, -100.8541,  -55.4339],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0817, device='cuda:0', dtype=torch.float64)
tensor([ -66.1490, -161.4417,  -63.2170, -102.5093,  -57.0166],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0599, device='cuda:0', dtype=torch.float64)
tensor([ -68.2615, -164.4442,  -64.0003, -105.0163,  -58.4735],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.2148, device='cuda:0', dtype=torch.float64)
tensor([ -69.8903, -168.1771,  -64.7087, -107.2147,  -60.0467],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9068, device='cuda:0', dtype=torch.float64)
tensor([ -70.8704, -169.7342,  -65.4538, -108.5405,  -60.4443],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9784, device='cuda:0', dtype=torch.float64)
tensor([ -71.0262, -171.2550,  -65.9657, -109.9408,  -60.9156],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8526, device='cuda:0', dtype=torch.float64)
tensor([ -71.3213, -171.9871,  -66.0129, -111.2192,  -61.0589],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.1365, device='cuda:0', dtype=torch.float64)
tensor([ -72.0609, -172.2266,  -66.3010, -112.2518,  -61.0432],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9864, device='cuda:0', dtype=torch.float64)
tensor([ -73.0143, -172.2057,  -66.4532, -113.2363,  -61.0220],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9254, device='cuda:0', dtype=torch.float64)
tensor([ -74.9306, -174.0679,  -68.2507, -114.8551,  -62.0004],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9937, device='cuda:0', dtype=torch.float64)
tensor([ -76.5313, -175.0540,  -69.6878, -115.7543,  -62.5835],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9364, device='cuda:0', dtype=torch.float64)
tensor([ -77.2843, -175.5490,  -70.5894, -116.6121,  -63.4070],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0247, device='cuda:0', dtype=torch.float64)
tensor([ -79.0556, -175.9538,  -71.6098, -117.4125,  -64.4614],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9211, device='cuda:0', dtype=torch.float64)
tensor([ -80.4371, -176.7862,  -72.6437, -118.4526,  -65.7946],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0067, device='cuda:0', dtype=torch.float64)
tensor([ -81.7735, -177.8187,  -73.3902, -119.2549,  -67.1829],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.1197, device='cuda:0', dtype=torch.float64)
tensor([ -83.8156, -181.1767,  -75.9006, -120.3384,  -69.2011],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9363, device='cuda:0', dtype=torch.float64)
tensor([ -86.1394, -183.7666,  -78.6312, -121.2724,  -70.8064],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0921, device='cuda:0', dtype=torch.float64)
tensor([ -88.3423, -185.3262,  -81.0935, -121.3051,  -71.7963],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.1017, device='cuda:0', dtype=torch.float64)
tensor([ -89.9327, -186.2816,  -83.3556, -121.5215,  -72.3845],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9400, device='cuda:0', dtype=torch.float64)
tensor([ -91.3463, -185.9229,  -86.6069, -120.7725,  -72.0185],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0108, device='cuda:0', dtype=torch.float64)
tensor([ -93.1116, -184.6986,  -88.7902, -120.3882,  -71.8944],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9753, device='cuda:0', dtype=torch.float64)
tensor([ -94.1804, -183.1455,  -90.9567, -119.8882,  -71.5141],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0057, device='cuda:0', dtype=torch.float64)
tensor([ -94.9346, -182.1754,  -93.0059, -119.4208,  -71.4860],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9112, device='cuda:0', dtype=torch.float64)
tensor([ -97.4867, -182.9182,  -96.8317, -119.6472,  -72.2382],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.1762, device='cuda:0', dtype=torch.float64)
tensor([ -97.4475, -179.9437,  -97.3556, -117.8238,  -70.6859],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9051, device='cuda:0', dtype=torch.float64)
tensor([ -97.8212, -178.7612,  -99.4593, -116.7366,  -70.3494],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.2163, device='cuda:0', dtype=torch.float64)
tensor([ -97.6955, -176.9705, -100.7345, -116.0004,  -69.9599],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9553, device='cuda:0', dtype=torch.float64)
tensor([ -97.2849, -177.3649, -103.1728, -116.0084,  -70.8897],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0024, device='cuda:0', dtype=torch.float64)
tensor([ -98.0997, -177.1834, -106.6488, -115.4946,  -71.0078],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0684, device='cuda:0', dtype=torch.float64)
tensor([ -96.8945, -174.8402, -107.2924, -113.5636,  -70.0681],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9638, device='cuda:0', dtype=torch.float64)
tensor([ -95.9973, -173.5730, -108.2305, -112.8503,  -70.4275],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0212, device='cuda:0', dtype=torch.float64)
tensor([ -94.8261, -170.4645, -108.8505, -111.3054,  -69.9694],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8008, device='cuda:0', dtype=torch.float64)
tensor([ -93.6695, -168.3168, -109.1103, -110.0273,  -69.6423],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0631, device='cuda:0', dtype=torch.float64)
tensor([ -90.9465, -164.9494, -107.0991, -108.5300,  -68.3484],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8665, device='cuda:0', dtype=torch.float64)
tensor([ -87.9293, -161.6636, -106.4877, -106.2199,  -66.4170],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9234, device='cuda:0', dtype=torch.float64)
tensor([ -85.1655, -158.5696, -106.2012, -104.2538,  -64.7356],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9073, device='cuda:0', dtype=torch.float64)
tensor([ -82.4082, -155.1991, -105.4517, -102.4175,  -63.1316],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0150, device='cuda:0', dtype=torch.float64)
tensor([ -78.5774, -152.1048, -103.4556, -100.9313,  -62.1236],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0778, device='cuda:0', dtype=torch.float64)
tensor([ -75.0317, -148.2456, -100.5737,  -99.0943,  -60.8231],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8280, device='cuda:0', dtype=torch.float64)
tensor([ -72.1646, -142.9448,  -97.8198,  -97.5506,  -59.3268],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7499, device='cuda:0', dtype=torch.float64)
tensor([ -69.8094, -138.7958,  -95.6939,  -96.6630,  -58.6617],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0073, device='cuda:0', dtype=torch.float64)
tensor([ -67.6641, -133.2026,  -93.4328,  -95.4894,  -57.1133],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9569, device='cuda:0', dtype=torch.float64)
tensor([ -66.3444, -129.3360,  -92.4611,  -95.4165,  -56.7191],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9156, device='cuda:0', dtype=torch.float64)
tensor([ -65.0332, -124.9815,  -92.1175,  -95.4601,  -55.9615],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9026, device='cuda:0', dtype=torch.float64)
tensor([ -63.9327, -121.3713,  -91.1284,  -95.7766,  -55.2837],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9470, device='cuda:0', dtype=torch.float64)
tensor([ -63.0925, -118.2438,  -90.3628,  -96.1266,  -55.0493],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.1873, device='cuda:0', dtype=torch.float64)
tensor([ -62.4279, -115.8085,  -89.7005,  -96.7485,  -55.4910],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0441, device='cuda:0', dtype=torch.float64)
tensor([ -61.5775, -112.5545,  -88.3174,  -96.5875,  -55.1897],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.1002, device='cuda:0', dtype=torch.float64)
tensor([ -60.9728, -110.0999,  -86.7873,  -96.1965,  -55.4179],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8199, device='cuda:0', dtype=torch.float64)
tensor([ -60.6261, -107.8154,  -84.6638,  -95.5122,  -55.6129],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9997, device='cuda:0', dtype=torch.float64)
tensor([ -60.4149, -104.9084,  -82.0654,  -94.8432,  -56.0314],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9516, device='cuda:0', dtype=torch.float64)
tensor([ -60.1371, -101.8007,  -80.5352,  -93.9747,  -55.9540],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0389, device='cuda:0', dtype=torch.float64)
tensor([ -59.8701, -102.4699,  -78.7918,  -93.9396,  -56.6939],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8391, device='cuda:0', dtype=torch.float64)
tensor([ -60.2852, -104.0457,  -77.2056,  -94.6980,  -57.7212],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7680, device='cuda:0', dtype=torch.float64)
tensor([ -61.1447, -106.3704,  -75.9008,  -95.3327,  -59.0469],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7989, device='cuda:0', dtype=torch.float64)
tensor([ -61.9758, -110.0447,  -75.7654,  -96.4901,  -60.2604],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8248, device='cuda:0', dtype=torch.float64)
tensor([ -62.4420, -109.5651,  -74.0970,  -96.7330,  -60.0516],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7784, device='cuda:0', dtype=torch.float64)
tensor([ -62.9652, -110.8922,  -72.4296,  -96.6655,  -60.5705],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8330, device='cuda:0', dtype=torch.float64)
tensor([ -63.3943, -113.0942,  -70.3925,  -96.9487,  -61.3278],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0553, device='cuda:0', dtype=torch.float64)
tensor([ -63.3665, -113.7636,  -68.0122,  -97.0549,  -61.6864],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7291, device='cuda:0', dtype=torch.float64)
tensor([ -63.5963, -117.1141,  -66.6367,  -97.2954,  -62.7916],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9652, device='cuda:0', dtype=torch.float64)
tensor([ -63.8655, -120.8677,  -65.7801,  -98.0054,  -64.1264],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.2766, device='cuda:0', dtype=torch.float64)
tensor([ -63.9982, -123.5685,  -64.7333,  -98.5341,  -64.8760],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9089, device='cuda:0', dtype=torch.float64)
tensor([ -64.1763, -127.1670,  -64.4783,  -99.1946,  -65.6759],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8511, device='cuda:0', dtype=torch.float64)
tensor([ -64.8553, -132.5694,  -64.4849, -100.2503,  -66.9776],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8966, device='cuda:0', dtype=torch.float64)
tensor([ -65.3199, -137.1324,  -64.1517, -101.1318,  -68.0736],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8574, device='cuda:0', dtype=torch.float64)
tensor([ -65.5680, -145.2689,  -63.9656, -102.3206,  -69.8454],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8553, device='cuda:0', dtype=torch.float64)
tensor([ -65.9237, -152.7347,  -64.1580, -103.3996,  -71.5796],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0429, device='cuda:0', dtype=torch.float64)
tensor([ -66.1814, -161.3661,  -64.2384, -104.6531,  -73.9373],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8701, device='cuda:0', dtype=torch.float64)
tensor([ -66.5318, -170.0234,  -64.5129, -106.4294,  -76.5200],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0491, device='cuda:0', dtype=torch.float64)
tensor([ -66.8677, -175.0100,  -64.8400, -107.5117,  -77.9874],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8622, device='cuda:0', dtype=torch.float64)
tensor([ -67.1475, -180.9758,  -65.1675, -108.9385,  -79.6187],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9929, device='cuda:0', dtype=torch.float64)
tensor([ -67.3918, -186.3957,  -65.4994, -109.4032,  -81.0581],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.1733, device='cuda:0', dtype=torch.float64)
tensor([ -67.8631, -191.9346,  -66.2919, -110.2663,  -83.0297],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9869, device='cuda:0', dtype=torch.float64)
tensor([ -67.8978, -197.9904,  -67.0654, -111.2397,  -85.1299],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9594, device='cuda:0', dtype=torch.float64)
tensor([ -68.0893, -204.9314,  -68.2976, -112.8919,  -87.7383],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9429, device='cuda:0', dtype=torch.float64)
tensor([ -68.2930, -212.7689,  -69.4835, -114.8504,  -90.7534],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9869, device='cuda:0', dtype=torch.float64)
tensor([ -68.6477, -216.3109,  -70.0959, -117.3621,  -92.7555],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0231, device='cuda:0', dtype=torch.float64)
tensor([ -69.3920, -220.8154,  -70.3737, -120.2842,  -94.9214],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8075, device='cuda:0', dtype=torch.float64)
tensor([ -70.0117, -225.7731,  -70.7058, -122.8513,  -97.1113],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9455, device='cuda:0', dtype=torch.float64)
tensor([ -71.0661, -230.1451,  -71.1665, -125.3594,  -98.8692],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0001, device='cuda:0', dtype=torch.float64)
tensor([ -71.8980, -231.2916,  -71.2534, -126.7922,  -99.6966],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0281, device='cuda:0', dtype=torch.float64)
tensor([ -72.8081, -230.9425,  -71.5530, -127.5171, -100.4113],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9827, device='cuda:0', dtype=torch.float64)
tensor([ -73.4428, -227.6227,  -70.7268, -127.7743, -100.3573],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9942, device='cuda:0', dtype=torch.float64)
tensor([ -73.7939, -224.3023,  -69.5344, -126.9417, -100.3822],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9063, device='cuda:0', dtype=torch.float64)
tensor([ -74.1658, -223.2086,  -68.3045, -126.7333, -101.4054],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0500, device='cuda:0', dtype=torch.float64)
tensor([ -74.4158, -218.9636,  -67.8263, -125.9221, -101.5083],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7328, device='cuda:0', dtype=torch.float64)
tensor([ -74.6212, -217.1223,  -67.5236, -125.3145, -102.4206],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0229, device='cuda:0', dtype=torch.float64)
tensor([ -74.8462, -216.9694,  -67.9239, -125.5555, -103.1884],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7567, device='cuda:0', dtype=torch.float64)
tensor([ -75.0031, -216.4562,  -68.1909, -125.5995, -103.6922],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9051, device='cuda:0', dtype=torch.float64)
tensor([ -75.0374, -214.8285,  -68.2894, -125.4655, -103.5294],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9950, device='cuda:0', dtype=torch.float64)
tensor([ -75.1382, -209.9201,  -68.8579, -125.5008, -102.8168],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.2252, device='cuda:0', dtype=torch.float64)
tensor([ -75.1453, -202.2204,  -68.8557, -125.0651, -101.0863],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0356, device='cuda:0', dtype=torch.float64)
tensor([ -75.2561, -195.2452,  -68.9155, -125.1881,  -99.5392],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0027, device='cuda:0', dtype=torch.float64)
tensor([ -75.3978, -186.1521,  -69.4829, -124.7228,  -97.2545],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9838, device='cuda:0', dtype=torch.float64)
tensor([ -75.3873, -180.0247,  -70.2569, -124.8443,  -96.0401],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8466, device='cuda:0', dtype=torch.float64)
tensor([ -75.5149, -174.2415,  -71.1006, -125.1613,  -94.6536],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9451, device='cuda:0', dtype=torch.float64)
tensor([ -75.6470, -164.1834,  -70.8949, -124.8205,  -91.7535],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8155, device='cuda:0', dtype=torch.float64)
tensor([ -75.9366, -158.7088,  -71.5221, -125.2812,  -90.6819],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8457, device='cuda:0', dtype=torch.float64)
tensor([ -75.9742, -154.7186,  -72.3124, -125.7504,  -89.9877],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0185, device='cuda:0', dtype=torch.float64)
tensor([ -75.9049, -154.1212,  -72.8258, -125.8512,  -90.0400],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8763, device='cuda:0', dtype=torch.float64)
tensor([ -75.9401, -153.4199,  -73.0506, -125.9903,  -89.7829],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9446, device='cuda:0', dtype=torch.float64)
tensor([ -75.8671, -152.8928,  -73.7717, -125.7906,  -89.8342],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0451, device='cuda:0', dtype=torch.float64)
tensor([ -75.9548, -155.0974,  -74.6975, -126.8521,  -90.8195],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9508, device='cuda:0', dtype=torch.float64)
tensor([ -76.3803, -157.4011,  -75.7188, -127.9135,  -91.7723],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0301, device='cuda:0', dtype=torch.float64)
tensor([ -76.9145, -158.7438,  -77.0860, -129.3783,  -92.7659],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9557, device='cuda:0', dtype=torch.float64)
tensor([ -76.9350, -162.9611,  -79.2511, -131.1431,  -94.6056],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9260, device='cuda:0', dtype=torch.float64)
tensor([ -76.5094, -164.6488,  -80.1057, -132.2469,  -95.2706],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.1015, device='cuda:0', dtype=torch.float64)
tensor([ -76.5534, -165.7698,  -80.8598, -133.0421,  -95.4893],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9757, device='cuda:0', dtype=torch.float64)
tensor([ -76.5224, -167.6301,  -81.2214, -133.8020,  -95.8484],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.1690, device='cuda:0', dtype=torch.float64)
tensor([ -76.7527, -169.9282,  -81.1269, -135.0144,  -96.2463],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9729, device='cuda:0', dtype=torch.float64)
tensor([ -77.2537, -171.3777,  -80.1578, -135.5320,  -96.1086],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9199, device='cuda:0', dtype=torch.float64)
tensor([ -78.3969, -175.0459,  -79.2221, -136.5463,  -96.5492],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7622, device='cuda:0', dtype=torch.float64)
tensor([ -79.1926, -176.9044,  -78.1617, -136.8240,  -97.0383],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0689, device='cuda:0', dtype=torch.float64)
tensor([ -79.6445, -176.4744,  -76.8972, -136.3526,  -96.1985],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9656, device='cuda:0', dtype=torch.float64)
tensor([ -79.9475, -175.3690,  -75.3636, -135.4437,  -95.3677],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9633, device='cuda:0', dtype=torch.float64)
tensor([ -80.7288, -176.3131,  -73.9636, -134.6629,  -95.0412],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8501, device='cuda:0', dtype=torch.float64)
tensor([ -81.4531, -174.9657,  -73.1087, -133.6188,  -94.6508],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9041, device='cuda:0', dtype=torch.float64)
tensor([ -82.2197, -175.0312,  -72.2345, -132.7306,  -94.6457],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0575, device='cuda:0', dtype=torch.float64)
tensor([ -83.0263, -177.7298,  -71.7804, -131.5591,  -95.4879],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0836, device='cuda:0', dtype=torch.float64)
tensor([ -83.9589, -181.3070,  -71.3465, -130.2783,  -96.7074],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8520, device='cuda:0', dtype=torch.float64)
tensor([ -84.5893, -182.8530,  -70.8175, -129.5674,  -97.5633],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0307, device='cuda:0', dtype=torch.float64)
tensor([ -85.2721, -183.6992,  -70.6443, -128.6460,  -97.7196],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9567, device='cuda:0', dtype=torch.float64)
tensor([ -85.9950, -185.5758,  -70.8764, -128.1435,  -98.1446],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8469, device='cuda:0', dtype=torch.float64)
tensor([ -86.3590, -185.9041,  -70.2136, -127.5146,  -97.8993],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7303, device='cuda:0', dtype=torch.float64)
tensor([ -87.2951, -189.6934,  -69.8531, -126.9230,  -98.2794],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9304, device='cuda:0', dtype=torch.float64)
tensor([ -88.2937, -192.5738,  -69.4287, -126.5593,  -97.9553],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7954, device='cuda:0', dtype=torch.float64)
tensor([ -88.6042, -194.1645,  -68.7742, -125.8623,  -97.6816],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0126, device='cuda:0', dtype=torch.float64)
tensor([ -88.3037, -197.2331,  -67.5762, -124.5925,  -97.7030],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8613, device='cuda:0', dtype=torch.float64)
tensor([ -87.4887, -194.9626,  -66.8576, -122.9988,  -96.6611],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8362, device='cuda:0', dtype=torch.float64)
tensor([ -86.3933, -191.6492,  -66.2312, -121.1678,  -95.3264],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8448, device='cuda:0', dtype=torch.float64)
tensor([ -85.5300, -190.4115,  -65.5892, -119.6073,  -94.9328],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8018, device='cuda:0', dtype=torch.float64)
tensor([ -84.7984, -187.8165,  -65.6471, -117.8853,  -93.7016],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7872, device='cuda:0', dtype=torch.float64)
tensor([ -84.6646, -190.9023,  -66.5377, -116.6483,  -94.2223],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9234, device='cuda:0', dtype=torch.float64)
tensor([ -84.7614, -188.6461,  -67.1229, -115.9001,  -93.3513],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7145, device='cuda:0', dtype=torch.float64)
tensor([ -84.7272, -184.2755,  -67.8915, -114.9688,  -91.7695],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0990, device='cuda:0', dtype=torch.float64)
tensor([ -84.3109, -174.8070,  -68.1798, -113.4101,  -88.8791],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7728, device='cuda:0', dtype=torch.float64)
tensor([ -84.2942, -163.6281,  -69.5543, -112.3296,  -86.0632],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9820, device='cuda:0', dtype=torch.float64)
tensor([ -84.1684, -156.8560,  -72.1855, -111.4221,  -84.6142],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9533, device='cuda:0', dtype=torch.float64)
tensor([ -83.7361, -150.1663,  -75.1394, -110.5144,  -82.5534],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9877, device='cuda:0', dtype=torch.float64)
tensor([ -83.4923, -144.9334,  -77.9953, -110.1065,  -81.2617],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8049, device='cuda:0', dtype=torch.float64)
tensor([ -83.7322, -146.5606,  -81.2888, -109.9589,  -80.7998],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7555, device='cuda:0', dtype=torch.float64)
tensor([ -84.0058, -149.9616,  -83.8939, -110.6176,  -80.7764],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9953, device='cuda:0', dtype=torch.float64)
tensor([ -84.8001, -155.6313,  -86.2105, -112.5388,  -81.5715],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9744, device='cuda:0', dtype=torch.float64)
tensor([ -84.9340, -156.0981,  -87.0421, -113.7860,  -81.7003],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9032, device='cuda:0', dtype=torch.float64)
tensor([ -85.3464, -161.4484,  -86.9352, -115.3493,  -82.6111],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7764, device='cuda:0', dtype=torch.float64)
tensor([ -86.3318, -167.6905,  -87.1222, -117.3091,  -84.0837],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8602, device='cuda:0', dtype=torch.float64)
tensor([ -86.6156, -165.3819,  -86.2178, -118.5813,  -84.5594],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9983, device='cuda:0', dtype=torch.float64)
tensor([ -87.9557, -165.4279,  -85.9609, -121.0944,  -85.7759],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7833, device='cuda:0', dtype=torch.float64)
tensor([ -90.0247, -167.6201,  -86.0716, -124.2774,  -87.8492],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8783, device='cuda:0', dtype=torch.float64)
tensor([ -91.7422, -168.9634,  -85.8506, -127.0507,  -90.1398],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8348, device='cuda:0', dtype=torch.float64)
tensor([ -92.4057, -166.8964,  -84.8822, -128.9436,  -91.7693],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7734, device='cuda:0', dtype=torch.float64)
tensor([ -92.8697, -166.3057,  -83.7752, -130.7804,  -93.9207],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9038, device='cuda:0', dtype=torch.float64)
tensor([ -93.7474, -164.0534,  -82.9500, -133.1914,  -94.8404],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8994, device='cuda:0', dtype=torch.float64)
tensor([ -93.8129, -161.4126,  -82.3702, -135.3454,  -95.9486],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8754, device='cuda:0', dtype=torch.float64)
tensor([ -94.6176, -160.4438,  -82.4100, -138.1191,  -96.9275],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9624, device='cuda:0', dtype=torch.float64)
tensor([ -95.6619, -157.2281,  -83.0175, -140.4471,  -97.2817],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9030, device='cuda:0', dtype=torch.float64)
tensor([ -97.0994, -151.5842,  -84.3919, -142.1417,  -96.6254],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8345, device='cuda:0', dtype=torch.float64)
tensor([ -98.3201, -147.1449,  -85.6979, -143.3929,  -95.9464],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8831, device='cuda:0', dtype=torch.float64)
tensor([ -99.3581, -143.1188,  -87.0362, -144.8778,  -95.6299],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9288, device='cuda:0', dtype=torch.float64)
tensor([-101.5434, -139.3622,  -88.4276, -146.9095,  -95.0787],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8884, device='cuda:0', dtype=torch.float64)
tensor([-103.6829, -136.1648,  -89.7800, -148.8416,  -94.5364],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9171, device='cuda:0', dtype=torch.float64)
tensor([-106.4482, -133.8039,  -91.6588, -151.6497,  -93.8001],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9323, device='cuda:0', dtype=torch.float64)
tensor([-109.4256, -131.5902,  -93.6421, -154.2468,  -92.5769],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8582, device='cuda:0', dtype=torch.float64)
tensor([-112.4603, -130.2098,  -96.0650, -157.0881,  -91.8011],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9092, device='cuda:0', dtype=torch.float64)
tensor([-115.0296, -129.6539,  -98.0847, -159.3780,  -91.3557],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0539, device='cuda:0', dtype=torch.float64)
tensor([-116.6517, -128.8541,  -99.4346, -160.7290,  -90.4404],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8482, device='cuda:0', dtype=torch.float64)
tensor([-118.9134, -128.1426, -101.8509, -163.3696,  -90.0181],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8978, device='cuda:0', dtype=torch.float64)
tensor([-120.6487, -126.1619, -103.8872, -165.3760,  -89.6152],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0156, device='cuda:0', dtype=torch.float64)
tensor([-121.9658, -122.7251, -106.0666, -166.6074,  -88.6945],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9847, device='cuda:0', dtype=torch.float64)
tensor([-123.5069, -119.3782, -108.4744, -167.7916,  -87.8042],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8653, device='cuda:0', dtype=torch.float64)
tensor([-125.6756, -117.2870, -110.9599, -168.5840,  -86.9628],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0777, device='cuda:0', dtype=torch.float64)
tensor([-127.9328, -117.3520, -112.1051, -168.2563,  -86.6675],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9551, device='cuda:0', dtype=torch.float64)
tensor([-130.3278, -118.5016, -114.0867, -168.5614,  -86.9115],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8263, device='cuda:0', dtype=torch.float64)
tensor([-131.9701, -120.7154, -114.6998, -167.5789,  -87.3731],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0004, device='cuda:0', dtype=torch.float64)
tensor([-133.2945, -124.3803, -115.2641, -166.7573,  -88.0223],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9541, device='cuda:0', dtype=torch.float64)
tensor([-133.9743, -128.1355, -115.6315, -165.4839,  -88.7130],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8341, device='cuda:0', dtype=torch.float64)
tensor([-134.8358, -134.6029, -116.1330, -164.7145,  -90.4263],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9669, device='cuda:0', dtype=torch.float64)
tensor([-136.7407, -140.4563, -117.2865, -165.4554,  -91.8549],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9987, device='cuda:0', dtype=torch.float64)
tensor([-138.2247, -147.7213, -118.2531, -165.7454,  -93.2991],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8563, device='cuda:0', dtype=torch.float64)
tensor([-138.6454, -150.6740, -118.9562, -165.4496,  -93.2165],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9563, device='cuda:0', dtype=torch.float64)
tensor([-139.1147, -154.8311, -119.2600, -165.6353,  -94.0536],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7189, device='cuda:0', dtype=torch.float64)
tensor([-139.2378, -159.8599, -119.1578, -165.9405,  -95.3117],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0415, device='cuda:0', dtype=torch.float64)
tensor([-138.4420, -159.4163, -119.1388, -165.2906,  -95.6592],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9048, device='cuda:0', dtype=torch.float64)
tensor([-138.8418, -162.2574, -120.0698, -165.5615,  -96.7939],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0420, device='cuda:0', dtype=torch.float64)
tensor([-138.5304, -163.9113, -119.8979, -165.9210,  -97.8724],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6439, device='cuda:0', dtype=torch.float64)
tensor([-138.1479, -165.6592, -118.9118, -166.8029,  -98.7642],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8243, device='cuda:0', dtype=torch.float64)
tensor([-137.5070, -168.6765, -118.0750, -167.9036,  -99.8797],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0191, device='cuda:0', dtype=torch.float64)
tensor([-135.6351, -170.8687, -116.5469, -167.9912, -100.7257],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0629, device='cuda:0', dtype=torch.float64)
tensor([-133.8450, -173.3945, -114.7838, -167.9638, -102.6825],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9543, device='cuda:0', dtype=torch.float64)
tensor([-132.1627, -174.8849, -112.8719, -167.9419, -104.5727],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9643, device='cuda:0', dtype=torch.float64)
tensor([-131.8774, -177.5615, -111.2215, -168.4602, -106.6026],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8650, device='cuda:0', dtype=torch.float64)
tensor([-131.5318, -179.1012, -109.6120, -169.3918, -108.6289],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8292, device='cuda:0', dtype=torch.float64)
tensor([-131.8583, -181.1491, -108.8754, -170.6828, -110.5073],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7815, device='cuda:0', dtype=torch.float64)
tensor([-133.1270, -182.4470, -109.1811, -172.2559, -111.9520],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8171, device='cuda:0', dtype=torch.float64)
tensor([-134.5390, -182.2329, -110.1792, -173.6508, -113.6012],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8727, device='cuda:0', dtype=torch.float64)
tensor([-136.3930, -183.6782, -111.2927, -174.3401, -116.6913],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8366, device='cuda:0', dtype=torch.float64)
tensor([-137.7078, -185.8595, -112.2265, -174.6016, -119.9158],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8291, device='cuda:0', dtype=torch.float64)
tensor([-138.2631, -187.1086, -111.9115, -174.2127, -122.5938],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7669, device='cuda:0', dtype=torch.float64)
tensor([-137.8435, -187.3044, -111.4380, -173.7017, -125.0751],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9106, device='cuda:0', dtype=torch.float64)
tensor([-137.9854, -189.3889, -111.4767, -172.7160, -127.0324],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7751, device='cuda:0', dtype=torch.float64)
tensor([-137.9587, -192.9043, -111.5553, -171.6651, -130.0900],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8172, device='cuda:0', dtype=torch.float64)
tensor([-138.2056, -196.5437, -112.0887, -170.0127, -133.0699],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9062, device='cuda:0', dtype=torch.float64)
tensor([-138.5899, -199.8995, -111.4625, -168.2065, -135.5243],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8347, device='cuda:0', dtype=torch.float64)
tensor([-138.8037, -203.1381, -110.7366, -167.1452, -138.3517],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7509, device='cuda:0', dtype=torch.float64)
tensor([-138.9942, -206.5554, -109.8780, -165.6256, -141.0491],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7162, device='cuda:0', dtype=torch.float64)
tensor([-138.8624, -208.9509, -108.9749, -164.1558, -142.5915],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8079, device='cuda:0', dtype=torch.float64)
tensor([-138.5297, -212.8868, -108.0779, -161.8805, -143.9259],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6979, device='cuda:0', dtype=torch.float64)
tensor([-137.3625, -217.7475, -106.7779, -158.6315, -145.6192],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8080, device='cuda:0', dtype=torch.float64)
tensor([-136.2725, -224.9651, -105.5984, -155.8840, -148.1983],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9410, device='cuda:0', dtype=torch.float64)
tensor([-135.8654, -230.9427, -104.7853, -154.3605, -150.1101],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8354, device='cuda:0', dtype=torch.float64)
tensor([-135.2244, -237.1452, -104.9099, -152.9990, -152.7477],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9132, device='cuda:0', dtype=torch.float64)
tensor([-133.6973, -240.8710, -104.4813, -151.6869, -154.5638],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8727, device='cuda:0', dtype=torch.float64)
tensor([-131.5486, -244.7611, -103.5343, -150.4996, -156.9500],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8894, device='cuda:0', dtype=torch.float64)
tensor([-129.4364, -249.0575, -102.8801, -149.1023, -160.1219],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8213, device='cuda:0', dtype=torch.float64)
tensor([-127.0248, -249.8946, -101.8767, -147.8183, -161.5773],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0187, device='cuda:0', dtype=torch.float64)
tensor([-124.6287, -246.9350, -101.2899, -146.8553, -161.1264],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8605, device='cuda:0', dtype=torch.float64)
tensor([-123.3686, -245.4525, -100.9660, -146.6723, -162.1478],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0430, device='cuda:0', dtype=torch.float64)
tensor([-121.6952, -240.3263, -101.2420, -145.7430, -161.2807],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9677, device='cuda:0', dtype=torch.float64)
tensor([-119.8642, -233.1552, -101.5645, -143.8626, -158.0751],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7925, device='cuda:0', dtype=torch.float64)
tensor([-118.2505, -228.7877, -102.8400, -142.5109, -155.7973],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9694, device='cuda:0', dtype=torch.float64)
tensor([-117.6315, -228.9129, -104.3894, -142.3214, -155.5291],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7621, device='cuda:0', dtype=torch.float64)
tensor([-117.2312, -233.2027, -106.5554, -142.8173, -158.1534],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8569, device='cuda:0', dtype=torch.float64)
tensor([-117.3207, -236.9937, -109.2460, -143.7110, -160.0083],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8151, device='cuda:0', dtype=torch.float64)
tensor([-118.0608, -242.4636, -111.7050, -145.0360, -163.2181],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7932, device='cuda:0', dtype=torch.float64)
tensor([-118.3601, -248.5685, -112.2312, -145.5894, -166.1803],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5993, device='cuda:0', dtype=torch.float64)
tensor([-119.1792, -255.0892, -111.8249, -146.3731, -169.6212],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8351, device='cuda:0', dtype=torch.float64)
tensor([-119.9145, -259.9531, -111.0362, -146.5364, -171.7890],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6768, device='cuda:0', dtype=torch.float64)
tensor([-121.0278, -268.5305, -109.8409, -146.8096, -175.2806],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8649, device='cuda:0', dtype=torch.float64)
tensor([-122.2560, -274.0277, -108.5773, -147.7407, -179.4881],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9036, device='cuda:0', dtype=torch.float64)
tensor([-124.0663, -279.5067, -106.5609, -149.7008, -184.1971],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9747, device='cuda:0', dtype=torch.float64)
tensor([-125.4958, -286.2472, -104.6356, -151.3467, -190.1567],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7386, device='cuda:0', dtype=torch.float64)
tensor([-127.4759, -292.7039, -103.6580, -152.9176, -196.9862],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7110, device='cuda:0', dtype=torch.float64)
tensor([-129.0943, -297.1988, -103.4646, -153.6952, -202.3953],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7254, device='cuda:0', dtype=torch.float64)
tensor([-130.8142, -300.8469, -103.5151, -154.7399, -206.4118],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6830, device='cuda:0', dtype=torch.float64)
tensor([-131.9308, -303.2489, -102.8814, -155.0362, -208.2236],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6104, device='cuda:0', dtype=torch.float64)
tensor([-132.9236, -305.2548, -102.6356, -155.0177, -210.1443],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7330, device='cuda:0', dtype=torch.float64)
tensor([-133.4098, -307.2303, -102.1243, -154.3644, -210.2672],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7448, device='cuda:0', dtype=torch.float64)
tensor([-133.6402, -308.3140, -101.5479, -154.2186, -208.9934],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6561, device='cuda:0', dtype=torch.float64)
tensor([-133.4835, -309.9082, -101.3606, -154.2633, -208.2331],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6632, device='cuda:0', dtype=torch.float64)
tensor([-133.4502, -309.7835, -100.7898, -154.2552, -207.1354],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7795, device='cuda:0', dtype=torch.float64)
tensor([-132.8640, -310.2355, -100.0212, -153.3292, -206.0825],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7585, device='cuda:0', dtype=torch.float64)
tensor([-132.2368, -310.1341,  -99.0839, -152.1638, -205.2360],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6968, device='cuda:0', dtype=torch.float64)
tensor([-131.9812, -312.1949,  -98.4507, -152.1990, -206.7076],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8185, device='cuda:0', dtype=torch.float64)
tensor([-131.3557, -313.3345,  -97.9185, -151.8810, -206.4214],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7776, device='cuda:0', dtype=torch.float64)
tensor([-130.4585, -314.9742,  -97.6389, -151.3236, -206.4865],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7307, device='cuda:0', dtype=torch.float64)
tensor([-130.2064, -316.5207,  -97.7128, -150.8411, -207.7042],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6409, device='cuda:0', dtype=torch.float64)
tensor([-129.4940, -315.1261,  -97.5578, -149.7561, -207.3097],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6724, device='cuda:0', dtype=torch.float64)
tensor([-129.0188, -314.6998,  -97.5788, -149.0664, -207.7970],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4830, device='cuda:0', dtype=torch.float64)
tensor([-128.3947, -314.1192,  -97.7556, -147.9996, -207.7080],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7600, device='cuda:0', dtype=torch.float64)
tensor([-127.5544, -314.1180,  -97.8899, -146.8611, -207.5508],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7620, device='cuda:0', dtype=torch.float64)
tensor([-126.3954, -311.3347,  -97.9390, -145.3807, -205.5140],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7303, device='cuda:0', dtype=torch.float64)
tensor([-125.1814, -308.0734,  -97.5027, -144.1422, -202.4709],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7634, device='cuda:0', dtype=torch.float64)
tensor([-123.8052, -305.2289,  -97.4356, -143.1720, -202.6915],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6222, device='cuda:0', dtype=torch.float64)
tensor([-122.7428, -302.7448,  -97.4282, -142.9861, -203.6611],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6482, device='cuda:0', dtype=torch.float64)
tensor([-122.0530, -301.3648,  -97.4730, -142.6779, -205.2523],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6308, device='cuda:0', dtype=torch.float64)
tensor([-121.7511, -301.6388,  -98.0433, -142.8543, -208.7326],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5872, device='cuda:0', dtype=torch.float64)
tensor([-121.6738, -300.3026,  -99.1847, -143.0793, -211.3236],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7299, device='cuda:0', dtype=torch.float64)
tensor([-122.1897, -297.8267, -100.9971, -143.2356, -213.2941],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6321, device='cuda:0', dtype=torch.float64)
tensor([-122.9762, -297.5790, -102.8054, -143.3196, -215.9782],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7338, device='cuda:0', dtype=torch.float64)
tensor([-123.7979, -297.8778, -105.3042, -143.7976, -217.7058],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7029, device='cuda:0', dtype=torch.float64)
tensor([-124.6596, -299.1848, -107.2266, -144.7877, -220.6858],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7883, device='cuda:0', dtype=torch.float64)
tensor([-125.9445, -300.5377, -108.2517, -146.9209, -224.3971],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6793, device='cuda:0', dtype=torch.float64)
tensor([-127.9571, -303.4011, -109.7267, -149.7320, -229.3314],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6484, device='cuda:0', dtype=torch.float64)
tensor([-129.2780, -304.4798, -110.4486, -152.0890, -233.0843],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7252, device='cuda:0', dtype=torch.float64)
tensor([-130.0202, -303.1621, -111.1455, -153.6991, -235.1397],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6394, device='cuda:0', dtype=torch.float64)
tensor([-130.6782, -301.4022, -111.6012, -155.2670, -236.3565],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6411, device='cuda:0', dtype=torch.float64)
tensor([-131.2231, -300.9695, -111.8403, -156.8293, -238.1989],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5318, device='cuda:0', dtype=torch.float64)
tensor([-132.2460, -301.2940, -112.2473, -158.7565, -240.4336],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6267, device='cuda:0', dtype=torch.float64)
tensor([-133.0119, -303.2114, -112.4312, -160.4311, -244.2294],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7306, device='cuda:0', dtype=torch.float64)
tensor([-133.0754, -301.8003, -112.1861, -161.2484, -244.1162],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5674, device='cuda:0', dtype=torch.float64)
tensor([-133.2012, -301.2200, -111.2057, -161.8107, -243.1653],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6452, device='cuda:0', dtype=torch.float64)
tensor([-133.5454, -299.4719, -110.4451, -161.9363, -240.6948],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6870, device='cuda:0', dtype=torch.float64)
tensor([-134.1917, -300.7315, -110.1423, -162.4972, -241.3021],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7204, device='cuda:0', dtype=torch.float64)
tensor([-134.5618, -301.3294, -109.8862, -163.0835, -243.0113],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7934, device='cuda:0', dtype=torch.float64)
tensor([-134.2155, -301.9202, -108.9890, -163.1987, -244.2702],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6727, device='cuda:0', dtype=torch.float64)
tensor([-133.6361, -302.6854, -107.3802, -162.8450, -245.6897],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5761, device='cuda:0', dtype=torch.float64)
tensor([-133.2445, -304.3066, -106.2742, -162.5285, -248.1451],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7306, device='cuda:0', dtype=torch.float64)
tensor([-132.6539, -306.5185, -105.5478, -162.1110, -251.0587],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5202, device='cuda:0', dtype=torch.float64)
tensor([-132.3681, -308.1250, -104.5367, -161.6217, -253.1810],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6127, device='cuda:0', dtype=torch.float64)
tensor([-132.2361, -309.7614, -103.9599, -161.0415, -255.0826],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6611, device='cuda:0', dtype=torch.float64)
tensor([-131.3856, -307.5575, -103.3802, -158.9339, -253.2083],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5827, device='cuda:0', dtype=torch.float64)
tensor([-130.5834, -304.1114, -102.9456, -156.5169, -250.1300],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5971, device='cuda:0', dtype=torch.float64)
tensor([-129.8402, -299.1205, -102.5260, -154.7669, -245.3692],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6478, device='cuda:0', dtype=torch.float64)
tensor([-129.5146, -295.6154, -102.4274, -153.2798, -241.8162],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6805, device='cuda:0', dtype=torch.float64)
tensor([-128.8177, -294.3972, -102.3473, -151.9590, -240.3834],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5270, device='cuda:0', dtype=torch.float64)
tensor([-128.0301, -292.3637, -102.1304, -150.8093, -238.2313],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6545, device='cuda:0', dtype=torch.float64)
tensor([-127.6382, -289.0475, -102.0355, -149.8081, -234.2182],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6796, device='cuda:0', dtype=torch.float64)
tensor([-127.3118, -284.1068, -102.0683, -149.1550, -228.8219],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7086, device='cuda:0', dtype=torch.float64)
tensor([-126.4178, -280.6562, -102.3076, -148.7832, -225.3301],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7164, device='cuda:0', dtype=torch.float64)
tensor([-126.0378, -278.5716, -102.8795, -149.1717, -224.9362],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6552, device='cuda:0', dtype=torch.float64)
tensor([-125.7411, -275.1180, -103.2913, -149.2874, -223.2623],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6277, device='cuda:0', dtype=torch.float64)
tensor([-125.3623, -271.5391, -103.6600, -149.9753, -223.1237],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6227, device='cuda:0', dtype=torch.float64)
tensor([-124.8323, -266.9210, -103.9118, -150.8917, -223.4287],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5413, device='cuda:0', dtype=torch.float64)
tensor([-124.4155, -263.5560, -104.2760, -151.9731, -223.8249],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7367, device='cuda:0', dtype=torch.float64)
tensor([-124.7406, -261.3750, -105.2907, -152.6410, -223.5407],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6540, device='cuda:0', dtype=torch.float64)
tensor([-125.9483, -261.6386, -106.3857, -153.2926, -223.4096],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6922, device='cuda:0', dtype=torch.float64)
tensor([-127.5740, -264.3210, -107.3344, -154.9284, -225.8081],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6088, device='cuda:0', dtype=torch.float64)
tensor([-128.8431, -268.1121, -108.1497, -156.5830, -228.9510],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6132, device='cuda:0', dtype=torch.float64)
tensor([-130.4715, -270.1581, -108.4787, -158.5566, -229.5604],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6973, device='cuda:0', dtype=torch.float64)
tensor([-131.5219, -272.5859, -108.1897, -159.7367, -229.8751],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5838, device='cuda:0', dtype=torch.float64)
tensor([-132.5982, -276.0233, -108.3016, -161.2513, -230.8893],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6646, device='cuda:0', dtype=torch.float64)
tensor([-133.5994, -276.7658, -108.9360, -162.5825, -230.2030],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7587, device='cuda:0', dtype=torch.float64)
tensor([-134.1183, -274.3534, -109.2710, -163.1025, -225.9240],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5323, device='cuda:0', dtype=torch.float64)
tensor([-134.5194, -268.7095, -109.2843, -163.3189, -218.9467],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5857, device='cuda:0', dtype=torch.float64)
tensor([-134.3248, -261.1750, -109.0184, -162.5564, -210.2551],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6269, device='cuda:0', dtype=torch.float64)
tensor([-134.3262, -255.5502, -109.0042, -162.4593, -204.0137],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5666, device='cuda:0', dtype=torch.float64)
tensor([-134.2966, -250.3320, -109.0945, -162.4217, -198.1919],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6242, device='cuda:0', dtype=torch.float64)
tensor([-134.6182, -245.9895, -109.6389, -163.0006, -194.4237],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6493, device='cuda:0', dtype=torch.float64)
tensor([-134.8942, -242.0750, -110.2176, -163.3364, -191.0075],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6785, device='cuda:0', dtype=torch.float64)
tensor([-134.6103, -237.7094, -110.4716, -163.1444, -186.9008],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7822, device='cuda:0', dtype=torch.float64)
tensor([-134.4046, -237.0174, -110.6295, -163.3651, -185.9008],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5412, device='cuda:0', dtype=torch.float64)
tensor([-134.5452, -238.6518, -111.0969, -164.2327, -186.8731],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6803, device='cuda:0', dtype=torch.float64)
tensor([-135.0042, -242.6491, -111.7010, -165.9304, -190.9939],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6394, device='cuda:0', dtype=torch.float64)
tensor([-135.5576, -248.7002, -112.4770, -167.4594, -197.0028],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7539, device='cuda:0', dtype=torch.float64)
tensor([-135.7862, -256.8242, -113.3192, -169.3526, -204.6868],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6168, device='cuda:0', dtype=torch.float64)
tensor([-136.1808, -265.8119, -114.3396, -171.5784, -211.1019],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5734, device='cuda:0', dtype=torch.float64)
tensor([-136.9313, -275.1942, -115.5203, -174.6303, -218.0133],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5619, device='cuda:0', dtype=torch.float64)
tensor([-137.8357, -283.7543, -116.7493, -177.5155, -224.2389],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6831, device='cuda:0', dtype=torch.float64)
tensor([-138.4681, -291.1144, -118.1677, -179.7501, -230.8593],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6349, device='cuda:0', dtype=torch.float64)
tensor([-139.5005, -299.5491, -120.3566, -181.8885, -237.9596],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5907, device='cuda:0', dtype=torch.float64)
tensor([-140.6328, -306.1487, -122.8111, -184.1611, -244.8610],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6642, device='cuda:0', dtype=torch.float64)
tensor([-141.2570, -311.1915, -124.6595, -185.6520, -250.2335],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4983, device='cuda:0', dtype=torch.float64)
tensor([-141.8993, -315.6805, -126.7635, -186.7097, -256.3251],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5026, device='cuda:0', dtype=torch.float64)
tensor([-142.1920, -320.1366, -128.3189, -187.3259, -261.8317],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5379, device='cuda:0', dtype=torch.float64)
tensor([-142.2110, -322.4341, -130.1412, -187.3280, -265.5122],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5361, device='cuda:0', dtype=torch.float64)
tensor([-141.9629, -323.8067, -131.8877, -187.5926, -268.6281],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6110, device='cuda:0', dtype=torch.float64)
tensor([-140.9947, -322.3284, -133.1167, -186.7970, -269.0274],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5115, device='cuda:0', dtype=torch.float64)
tensor([-140.1315, -322.2888, -133.9407, -186.3275, -270.0483],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6140, device='cuda:0', dtype=torch.float64)
tensor([-139.5256, -324.2976, -134.4461, -186.4480, -272.4661],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5961, device='cuda:0', dtype=torch.float64)
tensor([-138.7300, -327.8702, -134.8328, -186.3486, -277.4001],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5857, device='cuda:0', dtype=torch.float64)
tensor([-138.2247, -334.0772, -135.0138, -186.7038, -283.2370],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5187, device='cuda:0', dtype=torch.float64)
tensor([-137.6724, -337.6680, -134.8542, -186.7362, -287.3109],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5403, device='cuda:0', dtype=torch.float64)
tensor([-137.2479, -340.1332, -134.5705, -186.4521, -291.0052],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6674, device='cuda:0', dtype=torch.float64)
tensor([-136.7401, -340.7314, -133.9939, -185.0851, -292.0337],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5965, device='cuda:0', dtype=torch.float64)
tensor([-136.2065, -339.4696, -133.3747, -183.2279, -291.3704],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5742, device='cuda:0', dtype=torch.float64)
tensor([-136.1340, -341.8677, -132.9986, -181.7284, -293.5558],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5002, device='cuda:0', dtype=torch.float64)
tensor([-136.2190, -342.8118, -132.9967, -179.9573, -293.8091],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6031, device='cuda:0', dtype=torch.float64)
tensor([-136.2716, -343.9527, -133.4745, -178.4421, -293.2553],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5209, device='cuda:0', dtype=torch.float64)
tensor([-136.2296, -344.4883, -133.6753, -176.9483, -292.7392],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5334, device='cuda:0', dtype=torch.float64)
tensor([-136.4671, -341.8810, -133.6934, -175.7053, -289.9030],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5737, device='cuda:0', dtype=torch.float64)
tensor([-136.8704, -337.5560, -133.9040, -173.9948, -285.6325],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5711, device='cuda:0', dtype=torch.float64)
tensor([-137.1831, -331.5585, -133.9213, -172.2752, -280.0925],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5879, device='cuda:0', dtype=torch.float64)
tensor([-137.2625, -322.2083, -133.5784, -170.2127, -272.6405],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5174, device='cuda:0', dtype=torch.float64)
tensor([-137.5613, -315.3887, -133.1198, -168.7787, -266.5062],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4762, device='cuda:0', dtype=torch.float64)
tensor([-138.1200, -309.2756, -132.9149, -167.4528, -260.5369],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5323, device='cuda:0', dtype=torch.float64)
tensor([-138.7373, -304.4763, -132.3657, -166.3147, -254.9279],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7053, device='cuda:0', dtype=torch.float64)
tensor([-139.4788, -301.0429, -131.7546, -165.2531, -252.3286],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5756, device='cuda:0', dtype=torch.float64)
tensor([-140.8291, -301.5838, -131.8381, -164.7037, -252.9493],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6869, device='cuda:0', dtype=torch.float64)
tensor([-142.7525, -304.6872, -132.0428, -164.7361, -254.4843],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5436, device='cuda:0', dtype=torch.float64)
tensor([-144.5871, -307.7315, -132.1998, -164.9443, -255.8042],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5915, device='cuda:0', dtype=torch.float64)
tensor([-146.5817, -311.1746, -132.6299, -165.7662, -258.4457],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7492, device='cuda:0', dtype=torch.float64)
tensor([-148.8398, -312.9399, -133.6593, -167.2878, -259.8863],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6104, device='cuda:0', dtype=torch.float64)
tensor([-151.2033, -315.5161, -135.0210, -169.5063, -263.9410],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7365, device='cuda:0', dtype=torch.float64)
tensor([-153.6127, -319.6494, -136.4068, -172.1955, -269.6838],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5396, device='cuda:0', dtype=torch.float64)
tensor([-155.4202, -325.0141, -137.5865, -174.5566, -275.7301],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5203, device='cuda:0', dtype=torch.float64)
tensor([-157.1191, -330.2385, -138.3568, -176.5856, -280.9675],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4906, device='cuda:0', dtype=torch.float64)
tensor([-159.0495, -334.0249, -139.2747, -179.3317, -285.7518],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5503, device='cuda:0', dtype=torch.float64)
tensor([-160.7064, -335.7928, -139.6000, -181.4993, -290.6625],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5677, device='cuda:0', dtype=torch.float64)
tensor([-162.2570, -335.0196, -140.0308, -183.9271, -293.2466],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5806, device='cuda:0', dtype=torch.float64)
tensor([-163.8541, -334.2666, -140.8290, -185.7874, -296.0096],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5532, device='cuda:0', dtype=torch.float64)
tensor([-164.9549, -331.7957, -141.1876, -186.9051, -297.2527],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5048, device='cuda:0', dtype=torch.float64)
tensor([-165.9616, -328.1529, -141.4511, -187.6278, -296.5632],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5429, device='cuda:0', dtype=torch.float64)
tensor([-166.4981, -323.8052, -141.7878, -188.0137, -295.2499],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5917, device='cuda:0', dtype=torch.float64)
tensor([-166.8229, -322.0150, -141.8999, -188.3268, -293.5807],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4969, device='cuda:0', dtype=torch.float64)
tensor([-166.9800, -321.9187, -142.0021, -188.6014, -292.9783],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5363, device='cuda:0', dtype=torch.float64)
tensor([-166.8199, -319.4978, -141.9367, -188.7540, -290.6208],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4921, device='cuda:0', dtype=torch.float64)
tensor([-166.4534, -314.6620, -141.6065, -188.5450, -286.7321],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5439, device='cuda:0', dtype=torch.float64)
tensor([-166.8090, -311.7444, -141.4469, -188.9996, -283.9913],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5826, device='cuda:0', dtype=torch.float64)
tensor([-167.4229, -308.4470, -141.0667, -189.6072, -282.1602],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5720, device='cuda:0', dtype=torch.float64)
tensor([-168.3155, -306.1118, -140.8409, -189.6944, -279.9583],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6595, device='cuda:0', dtype=torch.float64)
tensor([-169.2070, -305.0675, -140.6715, -189.3102, -277.3404],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6620, device='cuda:0', dtype=torch.float64)
tensor([-169.7308, -306.3309, -139.9835, -188.7161, -276.0837],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5481, device='cuda:0', dtype=torch.float64)
tensor([-170.4563, -311.5490, -139.5374, -188.5430, -277.5421],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6038, device='cuda:0', dtype=torch.float64)
tensor([-171.6382, -317.3793, -139.3990, -188.9554, -280.0592],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5487, device='cuda:0', dtype=torch.float64)
tensor([-172.8846, -321.8623, -139.3173, -189.2765, -281.5279],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5184, device='cuda:0', dtype=torch.float64)
tensor([-174.7061, -328.3530, -140.0498, -189.8777, -285.8554],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4876, device='cuda:0', dtype=torch.float64)
tensor([-176.4399, -332.5811, -140.8563, -190.4179, -290.0311],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4830, device='cuda:0', dtype=torch.float64)
tensor([-177.9745, -336.8567, -141.5026, -191.0449, -293.8747],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5480, device='cuda:0', dtype=torch.float64)
tensor([-178.9862, -340.2422, -141.6493, -191.0452, -297.8745],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6546, device='cuda:0', dtype=torch.float64)
tensor([-180.0187, -342.9390, -141.8783, -191.0471, -300.5427],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5363, device='cuda:0', dtype=torch.float64)
tensor([-180.3950, -342.5079, -141.8472, -190.2989, -301.1678],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6301, device='cuda:0', dtype=torch.float64)
tensor([-181.1589, -339.0621, -142.1061, -190.4625, -299.7109],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5741, device='cuda:0', dtype=torch.float64)
tensor([-181.6291, -335.4942, -142.1783, -190.8586, -299.5999],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5558, device='cuda:0', dtype=torch.float64)
tensor([-182.3579, -334.8484, -142.5945, -191.8105, -301.2027],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5539, device='cuda:0', dtype=torch.float64)
tensor([-183.1597, -335.3940, -143.1946, -192.9339, -304.7884],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5476, device='cuda:0', dtype=torch.float64)
tensor([-184.3701, -337.6784, -144.0081, -194.4604, -309.6966],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6244, device='cuda:0', dtype=torch.float64)
tensor([-185.1700, -338.1020, -144.7795, -195.7867, -312.8846],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4830, device='cuda:0', dtype=torch.float64)
tensor([-186.2402, -341.4725, -145.4202, -197.4156, -317.0581],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5031, device='cuda:0', dtype=torch.float64)
tensor([-186.8558, -345.2786, -145.8290, -198.5917, -321.6564],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4048, device='cuda:0', dtype=torch.float64)
tensor([-187.0685, -348.8447, -146.3883, -199.1249, -325.2351],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5321, device='cuda:0', dtype=torch.float64)
tensor([-186.8858, -351.5383, -146.3312, -198.9530, -328.0854],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5035, device='cuda:0', dtype=torch.float64)
tensor([-187.1226, -360.3112, -146.5213, -199.4117, -333.3063],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4969, device='cuda:0', dtype=torch.float64)
tensor([-187.1429, -366.6867, -146.7419, -199.4976, -337.5675],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5295, device='cuda:0', dtype=torch.float64)
tensor([-186.7380, -373.8045, -146.7333, -198.9279, -341.7836],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5832, device='cuda:0', dtype=torch.float64)
tensor([-186.1036, -380.7820, -146.6884, -197.9649, -347.2846],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4681, device='cuda:0', dtype=torch.float64)
tensor([-185.4519, -388.2477, -146.3494, -197.4687, -352.7642],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4729, device='cuda:0', dtype=torch.float64)
tensor([-184.4995, -392.1907, -146.0616, -197.1269, -355.0726],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6077, device='cuda:0', dtype=torch.float64)
tensor([-183.6102, -392.0203, -145.6611, -196.2294, -354.8925],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5201, device='cuda:0', dtype=torch.float64)
tensor([-183.1322, -389.0598, -145.6028, -195.2339, -354.4141],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5691, device='cuda:0', dtype=torch.float64)
tensor([-182.5473, -383.5124, -145.3005, -194.3133, -353.4989],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4884, device='cuda:0', dtype=torch.float64)
tensor([-182.7216, -384.1971, -145.3634, -194.2771, -356.5238],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5321, device='cuda:0', dtype=torch.float64)
tensor([-182.9941, -380.4506, -145.6178, -194.1011, -358.9560],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5658, device='cuda:0', dtype=torch.float64)
tensor([-183.3784, -376.3569, -146.0394, -194.0854, -361.3038],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5952, device='cuda:0', dtype=torch.float64)
tensor([-183.5547, -375.4193, -146.2123, -194.3744, -366.7850],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5854, device='cuda:0', dtype=torch.float64)
tensor([-184.0343, -374.7287, -146.5658, -195.0619, -372.8660],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4731, device='cuda:0', dtype=torch.float64)
tensor([-184.6380, -373.5457, -146.9601, -196.1434, -379.9625],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5285, device='cuda:0', dtype=torch.float64)
tensor([-185.4068, -374.8084, -148.1321, -197.4823, -387.4540],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4519, device='cuda:0', dtype=torch.float64)
tensor([-186.2156, -376.6124, -149.9056, -198.4734, -395.3306],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5950, device='cuda:0', dtype=torch.float64)
tensor([-186.1598, -374.0016, -151.2550, -198.0837, -398.3643],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4997, device='cuda:0', dtype=torch.float64)
tensor([-185.9462, -370.2907, -152.3893, -197.7810, -398.4895],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4464, device='cuda:0', dtype=torch.float64)
tensor([-185.3284, -365.7704, -152.9686, -197.0785, -396.6826],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5661, device='cuda:0', dtype=torch.float64)
tensor([-185.0226, -366.1602, -153.9448, -196.3614, -397.0099],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4981, device='cuda:0', dtype=torch.float64)
tensor([-184.5780, -367.2631, -155.0243, -196.4444, -398.8651],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4484, device='cuda:0', dtype=torch.float64)
tensor([-184.0312, -367.5600, -156.0742, -196.1129, -399.5678],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4736, device='cuda:0', dtype=torch.float64)
tensor([-184.1257, -369.1014, -157.5733, -196.4444, -401.0572],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5335, device='cuda:0', dtype=torch.float64)
tensor([-184.2205, -373.5679, -158.9734, -197.2131, -403.4655],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5144, device='cuda:0', dtype=torch.float64)
tensor([-184.9763, -382.2896, -160.7059, -198.7714, -408.7869],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3554, device='cuda:0', dtype=torch.float64)
tensor([-185.9863, -392.3176, -162.2402, -200.1897, -414.2253],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4764, device='cuda:0', dtype=torch.float64)
tensor([-186.9321, -401.4699, -163.4772, -201.4171, -417.9294],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4602, device='cuda:0', dtype=torch.float64)
tensor([-188.0177, -413.7218, -165.2435, -203.1944, -424.9966],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5202, device='cuda:0', dtype=torch.float64)
tensor([-188.4554, -425.3747, -166.3015, -204.3113, -430.3316],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4933, device='cuda:0', dtype=torch.float64)
tensor([-188.8020, -438.7432, -167.3612, -205.4083, -437.3493],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4711, device='cuda:0', dtype=torch.float64)
tensor([-189.2002, -453.1530, -168.2941, -206.5729, -444.2997],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4003, device='cuda:0', dtype=torch.float64)
tensor([-189.1604, -463.9659, -168.3783, -207.3492, -448.9644],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4495, device='cuda:0', dtype=torch.float64)
tensor([-189.2804, -474.7547, -168.6630, -208.4690, -454.0585],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3840, device='cuda:0', dtype=torch.float64)
tensor([-189.1535, -483.5872, -168.6902, -209.2488, -458.2577],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4974, device='cuda:0', dtype=torch.float64)
tensor([-188.2360, -481.1565, -168.0102, -208.7643, -457.6641],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4911, device='cuda:0', dtype=torch.float64)
tensor([-187.6799, -483.0981, -167.4996, -208.8303, -458.9735],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4602, device='cuda:0', dtype=torch.float64)
tensor([-186.8644, -475.0102, -166.6330, -207.6185, -454.9034],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4338, device='cuda:0', dtype=torch.float64)
tensor([-186.2838, -468.6504, -166.0083, -207.0502, -451.8509],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4386, device='cuda:0', dtype=torch.float64)
tensor([-185.7593, -466.2205, -165.4271, -206.6966, -450.1011],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4368, device='cuda:0', dtype=torch.float64)
tensor([-185.4834, -465.3197, -164.5453, -206.6738, -448.8228],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4735, device='cuda:0', dtype=torch.float64)
tensor([-185.4474, -462.3371, -163.7731, -206.7042, -446.9992],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4771, device='cuda:0', dtype=torch.float64)
tensor([-185.5880, -461.9830, -163.3310, -207.5547, -447.5334],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4095, device='cuda:0', dtype=torch.float64)
tensor([-185.8030, -466.5850, -162.9586, -208.6813, -449.9125],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4542, device='cuda:0', dtype=torch.float64)
tensor([-186.1142, -473.3400, -162.6706, -210.2454, -453.4532],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3999, device='cuda:0', dtype=torch.float64)
tensor([-186.1686, -472.6561, -162.3471, -211.1588, -453.3151],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4207, device='cuda:0', dtype=torch.float64)
tensor([-186.1049, -472.3102, -161.9225, -211.8797, -452.6768],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5104, device='cuda:0', dtype=torch.float64)
tensor([-186.4123, -477.8276, -161.7614, -213.0268, -453.9811],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4609, device='cuda:0', dtype=torch.float64)
tensor([-186.6448, -481.3497, -161.9458, -214.2589, -455.1827],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4333, device='cuda:0', dtype=torch.float64)
tensor([-187.0572, -482.7708, -162.0780, -215.5161, -455.8001],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3910, device='cuda:0', dtype=torch.float64)
tensor([-187.3445, -481.1113, -162.1515, -216.4423, -454.8411],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4108, device='cuda:0', dtype=torch.float64)
tensor([-187.7418, -476.6270, -162.0280, -217.0892, -452.3786],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4432, device='cuda:0', dtype=torch.float64)
tensor([-187.6895, -473.4631, -161.4675, -217.0981, -449.7445],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4654, device='cuda:0', dtype=torch.float64)
tensor([-187.6649, -472.5322, -161.1523, -217.3376, -447.7831],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4262, device='cuda:0', dtype=torch.float64)
tensor([-187.5825, -474.3190, -161.1265, -217.4108, -447.0849],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4561, device='cuda:0', dtype=torch.float64)
tensor([-187.7871, -478.3119, -161.3767, -218.0463, -448.9862],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3802, device='cuda:0', dtype=torch.float64)
tensor([-187.8940, -481.6041, -161.5360, -218.5853, -450.3363],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4704, device='cuda:0', dtype=torch.float64)
tensor([-188.3740, -483.1270, -161.7931, -219.4591, -452.4548],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4929, device='cuda:0', dtype=torch.float64)
tensor([-189.0907, -481.8327, -162.3953, -220.5777, -453.4699],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5039, device='cuda:0', dtype=torch.float64)
tensor([-190.0863, -479.6373, -163.2211, -221.9538, -453.8011],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4889, device='cuda:0', dtype=torch.float64)
tensor([-191.0985, -482.3981, -164.0783, -223.5710, -456.5132],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3720, device='cuda:0', dtype=torch.float64)
tensor([-192.2059, -484.6732, -165.0110, -225.2150, -459.3373],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4666, device='cuda:0', dtype=torch.float64)
tensor([-192.6279, -484.5311, -165.2813, -225.5789, -459.7671],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3328, device='cuda:0', dtype=torch.float64)
tensor([-193.2849, -487.1767, -166.0086, -226.6695, -461.9440],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4019, device='cuda:0', dtype=torch.float64)
tensor([-193.5210, -489.2834, -166.2422, -227.1398, -462.7043],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4791, device='cuda:0', dtype=torch.float64)
tensor([-193.9218, -485.0785, -166.5161, -227.7738, -461.6046],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4056, device='cuda:0', dtype=torch.float64)
tensor([-193.9786, -485.3856, -166.4407, -228.0442, -460.7958],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4770, device='cuda:0', dtype=torch.float64)
tensor([-193.9909, -485.1641, -166.5190, -228.0263, -459.2091],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4745, device='cuda:0', dtype=torch.float64)
tensor([-194.2727, -485.8256, -166.8729, -228.5624, -459.0323],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4860, device='cuda:0', dtype=torch.float64)
tensor([-195.1145, -491.2266, -167.7925, -229.8466, -462.7861],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4262, device='cuda:0', dtype=torch.float64)
tensor([-196.2062, -495.0203, -168.9862, -231.2619, -466.5605],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3695, device='cuda:0', dtype=torch.float64)
tensor([-197.4649, -499.0181, -170.1685, -233.0152, -470.9533],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4343, device='cuda:0', dtype=torch.float64)
tensor([-199.1964, -505.4744, -171.8380, -235.5834, -477.3778],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4684, device='cuda:0', dtype=torch.float64)
tensor([-201.0088, -513.3240, -173.6359, -238.0605, -484.2350],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4526, device='cuda:0', dtype=torch.float64)
tensor([-202.7193, -520.8542, -175.6130, -240.8283, -491.2849],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3903, device='cuda:0', dtype=torch.float64)
tensor([-204.6809, -530.9392, -178.1401, -244.0959, -500.4536],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5170, device='cuda:0', dtype=torch.float64)
tensor([-206.2181, -540.9423, -180.5749, -247.3638, -510.0411],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4171, device='cuda:0', dtype=torch.float64)
tensor([-207.3099, -544.7470, -182.2982, -249.1253, -514.5482],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4101, device='cuda:0', dtype=torch.float64)
tensor([-208.3217, -547.9640, -183.6919, -250.8873, -518.1253],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3631, device='cuda:0', dtype=torch.float64)
tensor([-209.2448, -551.6356, -185.0357, -253.0387, -522.7423],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4459, device='cuda:0', dtype=torch.float64)
tensor([-209.6739, -549.4478, -185.8546, -254.1734, -523.5840],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4593, device='cuda:0', dtype=torch.float64)
tensor([-209.6195, -547.4350, -185.8912, -254.4371, -522.6095],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3798, device='cuda:0', dtype=torch.float64)
tensor([-209.6890, -547.0209, -185.8783, -254.7855, -522.8288],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5254, device='cuda:0', dtype=torch.float64)
tensor([-209.7699, -550.1836, -185.9910, -255.4740, -525.0602],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4282, device='cuda:0', dtype=torch.float64)
tensor([-210.0382, -552.7654, -186.1473, -256.0028, -526.7344],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3618, device='cuda:0', dtype=torch.float64)
tensor([-210.1920, -559.3404, -186.2522, -256.5821, -530.0963],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4349, device='cuda:0', dtype=torch.float64)
tensor([-210.4922, -567.9470, -186.4371, -257.7171, -534.8814],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3799, device='cuda:0', dtype=torch.float64)
tensor([-210.5499, -575.2035, -186.2726, -258.0860, -537.9207],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4290, device='cuda:0', dtype=torch.float64)
tensor([-210.1807, -586.3417, -185.7516, -257.9766, -540.4578],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4179, device='cuda:0', dtype=torch.float64)
tensor([-209.8114, -597.5309, -185.5115, -258.2613, -544.2202],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4388, device='cuda:0', dtype=torch.float64)
tensor([-209.5406, -602.2325, -185.0439, -257.7604, -543.7274],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4880, device='cuda:0', dtype=torch.float64)
tensor([-209.1139, -603.0918, -184.0523, -256.9966, -540.3978],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4347, device='cuda:0', dtype=torch.float64)
tensor([-208.8055, -603.9647, -183.3320, -256.3054, -537.6385],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4160, device='cuda:0', dtype=torch.float64)
tensor([-209.0296, -602.2864, -183.5390, -256.6166, -536.0322],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5933, device='cuda:0', dtype=torch.float64)
tensor([-209.3451, -596.3937, -183.7874, -256.9808, -531.9377],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4888, device='cuda:0', dtype=torch.float64)
tensor([-209.8301, -588.7113, -184.1223, -257.2823, -526.5135],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3937, device='cuda:0', dtype=torch.float64)
tensor([-210.2197, -578.1511, -184.2467, -257.0084, -518.7063],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5252, device='cuda:0', dtype=torch.float64)
tensor([-210.5183, -565.2400, -184.2264, -255.9136, -509.5182],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4118, device='cuda:0', dtype=torch.float64)
tensor([-211.0645, -554.7792, -184.4723, -255.7501, -503.2221],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3461, device='cuda:0', dtype=torch.float64)
tensor([-211.6192, -545.5112, -184.6900, -255.6894, -497.6385],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3670, device='cuda:0', dtype=torch.float64)
tensor([-212.3791, -540.8362, -185.3434, -256.3746, -495.5864],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3702, device='cuda:0', dtype=torch.float64)
tensor([-212.9844, -539.0646, -186.0676, -257.6825, -495.8783],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3088, device='cuda:0', dtype=torch.float64)
tensor([-213.7334, -541.8116, -186.9615, -259.7708, -499.5151],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3592, device='cuda:0', dtype=torch.float64)
tensor([-214.5163, -543.6920, -187.8880, -262.0917, -502.9034],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3672, device='cuda:0', dtype=torch.float64)
tensor([-215.0326, -545.1121, -188.4238, -263.7792, -505.2833],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4617, device='cuda:0', dtype=torch.float64)
tensor([-215.6306, -554.6148, -189.4074, -266.1648, -512.2095],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3502, device='cuda:0', dtype=torch.float64)
tensor([-216.0559, -565.9266, -190.1672, -268.1573, -519.8869],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3722, device='cuda:0', dtype=torch.float64)
tensor([-216.3135, -576.4727, -190.5995, -269.5028, -526.4532],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3155, device='cuda:0', dtype=torch.float64)
tensor([-216.2325, -585.8669, -190.7408, -270.3707, -531.9056],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4135, device='cuda:0', dtype=torch.float64)
tensor([-216.1043, -592.7276, -190.9618, -270.8430, -536.3161],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4648, device='cuda:0', dtype=torch.float64)
tensor([-215.5196, -597.9798, -190.2073, -269.4020, -535.6982],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4335, device='cuda:0', dtype=torch.float64)
tensor([-214.7267, -598.3035, -188.9474, -267.2444, -530.9849],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3940, device='cuda:0', dtype=torch.float64)
tensor([-214.3046, -602.3147, -188.3882, -266.2086, -531.1660],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4746, device='cuda:0', dtype=torch.float64)
tensor([-213.6655, -607.2528, -187.3947, -265.4793, -532.1513],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4886, device='cuda:0', dtype=torch.float64)
tensor([-213.2235, -614.1373, -186.9106, -265.8805, -536.2134],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3641, device='cuda:0', dtype=torch.float64)
tensor([-213.0594, -619.7821, -186.4358, -266.7991, -540.9115],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3905, device='cuda:0', dtype=torch.float64)
tensor([-213.1113, -625.9303, -186.4367, -268.6243, -547.0082],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4174, device='cuda:0', dtype=torch.float64)
tensor([-213.5570, -631.6351, -186.9288, -271.1003, -553.4045],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3887, device='cuda:0', dtype=torch.float64)
tensor([-213.9850, -630.9302, -187.6948, -273.1229, -555.5504],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3798, device='cuda:0', dtype=torch.float64)
tensor([-214.3624, -630.6564, -188.6300, -275.0549, -557.3265],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3834, device='cuda:0', dtype=torch.float64)
tensor([-215.0242, -631.4098, -189.6897, -277.7905, -560.4420],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3334, device='cuda:0', dtype=torch.float64)
tensor([-215.5671, -627.5735, -190.6444, -279.4114, -559.7794],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4120, device='cuda:0', dtype=torch.float64)
tensor([-215.9389, -618.0199, -191.1737, -279.7649, -554.8899],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3715, device='cuda:0', dtype=torch.float64)
tensor([-216.2756, -610.9550, -191.7226, -280.4254, -551.2859],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3589, device='cuda:0', dtype=torch.float64)
tensor([-216.8661, -609.2358, -192.5619, -281.8968, -551.3746],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3205, device='cuda:0', dtype=torch.float64)
tensor([-217.4130, -612.8737, -193.4714, -283.7978, -554.0959],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3431, device='cuda:0', dtype=torch.float64)
tensor([-217.7349, -614.1895, -194.0691, -284.7835, -554.9526],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3579, device='cuda:0', dtype=torch.float64)
tensor([-218.0939, -617.2887, -194.3181, -285.8825, -556.3790],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4311, device='cuda:0', dtype=torch.float64)
tensor([-218.9851, -625.9233, -195.3952, -287.8000, -561.1441],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4199, device='cuda:0', dtype=torch.float64)
tensor([-219.6572, -627.5122, -196.5014, -289.0320, -562.6046],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4274, device='cuda:0', dtype=torch.float64)
tensor([-220.0016, -629.6965, -196.3233, -289.3324, -563.2807],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3961, device='cuda:0', dtype=torch.float64)
tensor([-220.4207, -631.5703, -195.9932, -289.6554, -564.2843],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3053, device='cuda:0', dtype=torch.float64)
tensor([-220.6699, -634.8434, -195.5851, -290.0971, -565.7396],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4052, device='cuda:0', dtype=torch.float64)
tensor([-221.0819, -636.3142, -195.5156, -291.1012, -566.8493],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3751, device='cuda:0', dtype=torch.float64)
tensor([-221.1899, -631.8503, -195.1957, -290.9893, -564.6517],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3570, device='cuda:0', dtype=torch.float64)
tensor([-221.3964, -624.7660, -194.7361, -290.5874, -561.0090],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3566, device='cuda:0', dtype=torch.float64)
tensor([-221.7200, -620.3898, -195.1792, -291.2758, -559.7765],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2963, device='cuda:0', dtype=torch.float64)
tensor([-221.9567, -616.1908, -195.3532, -291.5310, -557.9471],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3042, device='cuda:0', dtype=torch.float64)
tensor([-222.1110, -613.3864, -195.6574, -291.7440, -556.7002],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3304, device='cuda:0', dtype=torch.float64)
tensor([-222.2031, -609.3035, -195.8083, -291.5437, -554.4389],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3830, device='cuda:0', dtype=torch.float64)
tensor([-222.5298, -609.7477, -196.6032, -292.7611, -555.6470],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4100, device='cuda:0', dtype=torch.float64)
tensor([-223.1270, -617.5816, -198.4935, -295.8817, -561.9203],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3668, device='cuda:0', dtype=torch.float64)
tensor([-223.6123, -624.1969, -199.9552, -298.2724, -566.3046],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3588, device='cuda:0', dtype=torch.float64)
tensor([-223.7616, -628.4053, -200.6110, -299.5084, -568.3400],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3524, device='cuda:0', dtype=torch.float64)
tensor([-224.1711, -631.7736, -201.7765, -301.1098, -570.6177],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3821, device='cuda:0', dtype=torch.float64)
tensor([-224.7936, -633.8029, -202.8935, -302.6316, -572.6032],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3724, device='cuda:0', dtype=torch.float64)
tensor([-225.1275, -635.8881, -203.5818, -303.8044, -573.8681],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3473, device='cuda:0', dtype=torch.float64)
tensor([-225.1605, -635.4931, -203.3395, -304.2340, -573.4312],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3648, device='cuda:0', dtype=torch.float64)
tensor([-225.2862, -637.9187, -203.9132, -305.7767, -574.8082],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3513, device='cuda:0', dtype=torch.float64)
tensor([-225.9135, -642.7066, -206.2073, -308.9205, -578.1975],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4132, device='cuda:0', dtype=torch.float64)
tensor([-226.2392, -641.8283, -207.3295, -310.2470, -578.3734],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3719, device='cuda:0', dtype=torch.float64)
tensor([-226.6097, -644.2403, -209.3855, -312.2438, -580.0474],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3723, device='cuda:0', dtype=torch.float64)
tensor([-227.0106, -642.1243, -210.1611, -313.2442, -579.6788],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3558, device='cuda:0', dtype=torch.float64)
tensor([-227.0916, -639.5304, -209.6551, -313.3740, -578.5587],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3531, device='cuda:0', dtype=torch.float64)
tensor([-227.1375, -636.5068, -208.8458, -313.5413, -577.2791],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3176, device='cuda:0', dtype=torch.float64)
tensor([-227.0135, -633.4798, -206.9458, -312.9283, -575.6600],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3887, device='cuda:0', dtype=torch.float64)
tensor([-226.5102, -634.4461, -205.3017, -312.0770, -574.6097],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3931, device='cuda:0', dtype=torch.float64)
tensor([-225.8253, -639.4508, -203.9080, -311.3627, -574.7890],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4164, device='cuda:0', dtype=torch.float64)
tensor([-225.4551, -641.5514, -201.4953, -310.6984, -574.1809],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3553, device='cuda:0', dtype=torch.float64)
tensor([-224.8982, -638.7671, -198.5794, -309.3749, -570.8139],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4402, device='cuda:0', dtype=torch.float64)
tensor([-224.2399, -629.4697, -195.3705, -306.6213, -563.6819],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3820, device='cuda:0', dtype=torch.float64)
tensor([-223.6542, -617.3411, -192.6062, -303.0910, -553.9351],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2773, device='cuda:0', dtype=torch.float64)
tensor([-223.0439, -608.2001, -190.2303, -300.4912, -544.9301],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3146, device='cuda:0', dtype=torch.float64)
tensor([-222.8087, -600.1650, -188.3761, -298.6136, -536.9057],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3853, device='cuda:0', dtype=torch.float64)
tensor([-222.4429, -593.1704, -186.9446, -297.2669, -530.1547],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3015, device='cuda:0', dtype=torch.float64)
tensor([-222.6319, -585.5502, -186.2315, -296.5967, -524.6585],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3813, device='cuda:0', dtype=torch.float64)
tensor([-223.1712, -577.5949, -186.1111, -296.3889, -519.6332],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3731, device='cuda:0', dtype=torch.float64)
tensor([-223.8456, -570.3930, -186.2819, -296.2581, -515.2534],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3643, device='cuda:0', dtype=torch.float64)
tensor([-224.9766, -565.9576, -186.7111, -296.9806, -514.1655],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3482, device='cuda:0', dtype=torch.float64)
tensor([-226.3347, -561.6112, -187.6857, -298.2685, -513.9113],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3229, device='cuda:0', dtype=torch.float64)
tensor([-227.8069, -558.4726, -188.8421, -299.6651, -514.5982],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3031, device='cuda:0', dtype=torch.float64)
tensor([-229.0690, -559.0507, -189.9117, -301.4556, -517.3620],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3071, device='cuda:0', dtype=torch.float64)
tensor([-230.0173, -561.2152, -190.8571, -302.9037, -520.5283],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3064, device='cuda:0', dtype=torch.float64)
tensor([-230.8498, -564.6462, -191.4687, -304.3616, -523.7150],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3575, device='cuda:0', dtype=torch.float64)
tensor([-231.6460, -572.3089, -191.7294, -306.2131, -529.3861],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3719, device='cuda:0', dtype=torch.float64)
tensor([-232.9387, -583.9604, -192.7871, -309.4406, -538.5552],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3104, device='cuda:0', dtype=torch.float64)
tensor([-234.6796, -595.9519, -194.0059, -313.0563, -547.1816],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3736, device='cuda:0', dtype=torch.float64)
tensor([-236.1404, -605.0799, -195.0415, -315.7438, -552.8184],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3374, device='cuda:0', dtype=torch.float64)
tensor([-237.3116, -612.7683, -195.8116, -318.4521, -557.4897],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3002, device='cuda:0', dtype=torch.float64)
tensor([-238.2029, -618.0540, -196.1277, -320.7984, -560.7702],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3128, device='cuda:0', dtype=torch.float64)
tensor([-239.3132, -622.7995, -197.3598, -323.9037, -564.4412],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3762, device='cuda:0', dtype=torch.float64)
tensor([-240.1746, -630.0628, -198.8870, -327.4750, -569.1394],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3462, device='cuda:0', dtype=torch.float64)
tensor([-240.6807, -637.9817, -200.3034, -330.4534, -573.1615],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3038, device='cuda:0', dtype=torch.float64)
tensor([-240.9002, -643.1014, -201.3896, -332.5958, -575.0597],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3536, device='cuda:0', dtype=torch.float64)
tensor([-240.8747, -650.6772, -202.8505, -334.1225, -577.5694],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3333, device='cuda:0', dtype=torch.float64)
tensor([-240.6817, -653.5007, -203.5205, -334.4070, -577.4130],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3531, device='cuda:0', dtype=torch.float64)
tensor([-240.1987, -655.1307, -203.4581, -334.0087, -576.1940],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2317, device='cuda:0', dtype=torch.float64)
tensor([-239.5855, -657.6068, -202.8115, -333.2204, -575.1869],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3670, device='cuda:0', dtype=torch.float64)
tensor([-239.3451, -660.2219, -202.2675, -333.0736, -574.7712],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3133, device='cuda:0', dtype=torch.float64)
tensor([-239.1204, -662.6929, -201.3149, -332.8815, -574.6062],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3215, device='cuda:0', dtype=torch.float64)
tensor([-238.7942, -662.5605, -199.7240, -332.1241, -573.1899],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3684, device='cuda:0', dtype=torch.float64)
tensor([-238.6290, -664.7950, -199.8985, -332.3880, -573.1404],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3007, device='cuda:0', dtype=torch.float64)
tensor([-238.8174, -665.7104, -200.5463, -333.2538, -573.1212],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3236, device='cuda:0', dtype=torch.float64)
tensor([-239.2377, -662.6797, -200.6213, -333.4678, -571.3272],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3144, device='cuda:0', dtype=torch.float64)
tensor([-240.0413, -660.1758, -202.0967, -335.0623, -570.5504],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3096, device='cuda:0', dtype=torch.float64)
tensor([-240.8479, -655.9134, -202.4669, -335.8090, -569.2899],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3417, device='cuda:0', dtype=torch.float64)
tensor([-241.3876, -651.4114, -201.2152, -335.2449, -567.4637],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3657, device='cuda:0', dtype=torch.float64)
tensor([-242.0997, -643.6020, -198.3818, -334.2545, -564.1132],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3694, device='cuda:0', dtype=torch.float64)
tensor([-242.5636, -635.1233, -194.4939, -332.6017, -559.3437],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2857, device='cuda:0', dtype=torch.float64)
tensor([-242.6668, -626.0297, -190.8632, -330.5156, -553.5140],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2578, device='cuda:0', dtype=torch.float64)
tensor([-242.7449, -617.0763, -188.6782, -328.7755, -548.1745],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4250, device='cuda:0', dtype=torch.float64)
tensor([-242.8395, -611.0380, -187.5704, -327.6022, -544.5990],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3304, device='cuda:0', dtype=torch.float64)
tensor([-243.1522, -602.7284, -186.5864, -326.3849, -540.1898],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3020, device='cuda:0', dtype=torch.float64)
tensor([-243.5898, -599.6112, -186.2871, -326.2625, -538.8736],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2264, device='cuda:0', dtype=torch.float64)
tensor([-243.8014, -598.8917, -186.4231, -326.2038, -538.7809],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3372, device='cuda:0', dtype=torch.float64)
tensor([-243.8438, -597.2901, -186.3897, -326.1428, -537.7512],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2986, device='cuda:0', dtype=torch.float64)
tensor([-243.6789, -596.0158, -186.6436, -326.1023, -536.9440],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2672, device='cuda:0', dtype=torch.float64)
tensor([-243.4359, -594.1155, -186.5787, -325.5209, -535.4988],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3320, device='cuda:0', dtype=torch.float64)
tensor([-243.5287, -593.0157, -186.7144, -325.4970, -535.0271],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3122, device='cuda:0', dtype=torch.float64)
tensor([-243.4596, -595.4490, -187.0179, -325.7790, -536.7394],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2914, device='cuda:0', dtype=torch.float64)
tensor([-243.5539, -597.4864, -187.5588, -326.4285, -538.4351],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3448, device='cuda:0', dtype=torch.float64)
tensor([-243.7056, -598.1532, -188.5720, -327.8802, -540.4326],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3578, device='cuda:0', dtype=torch.float64)
tensor([-244.5892, -598.0787, -189.8143, -330.0659, -543.4421],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2867, device='cuda:0', dtype=torch.float64)
tensor([-245.3197, -599.2318, -191.5124, -332.7040, -547.0720],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2700, device='cuda:0', dtype=torch.float64)
tensor([-245.8627, -600.3287, -193.3049, -335.4006, -550.6142],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2542, device='cuda:0', dtype=torch.float64)
tensor([-246.1730, -601.1897, -194.1688, -336.9751, -552.5621],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3580, device='cuda:0', dtype=torch.float64)
tensor([-246.2075, -602.5120, -195.1266, -338.3014, -553.8672],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2760, device='cuda:0', dtype=torch.float64)
tensor([-246.2357, -602.8494, -195.9371, -339.4014, -554.2336],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4042, device='cuda:0', dtype=torch.float64)
tensor([-245.7779, -607.2598, -196.7629, -340.1445, -555.5542],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3850, device='cuda:0', dtype=torch.float64)
tensor([-245.4312, -612.0303, -198.8568, -341.5495, -557.0497],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3171, device='cuda:0', dtype=torch.float64)
tensor([-245.0852, -616.7325, -201.7608, -343.1093, -558.1287],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3492, device='cuda:0', dtype=torch.float64)
tensor([-244.2563, -622.1132, -204.4392, -343.5516, -558.8632],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2710, device='cuda:0', dtype=torch.float64)
tensor([-243.5207, -631.0635, -208.2453, -345.2008, -561.4675],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3219, device='cuda:0', dtype=torch.float64)
tensor([-242.7750, -637.7487, -211.4868, -346.2755, -562.5329],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2922, device='cuda:0', dtype=torch.float64)
tensor([-241.8013, -642.3918, -212.2675, -346.0400, -562.8054],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2437, device='cuda:0', dtype=torch.float64)
tensor([-240.9400, -647.9322, -213.7951, -346.1641, -563.3772],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3023, device='cuda:0', dtype=torch.float64)
tensor([-240.0987, -648.7067, -212.6691, -344.6207, -561.6360],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2649, device='cuda:0', dtype=torch.float64)
tensor([-239.2318, -650.9463, -211.9365, -343.1892, -560.3953],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2921, device='cuda:0', dtype=torch.float64)
tensor([-238.3616, -651.5211, -209.4320, -340.8383, -558.5370],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2434, device='cuda:0', dtype=torch.float64)
tensor([-237.6197, -654.8600, -208.5399, -339.5091, -557.7806],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3124, device='cuda:0', dtype=torch.float64)
tensor([-237.4350, -654.4629, -206.8648, -338.3245, -556.4876],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2667, device='cuda:0', dtype=torch.float64)
tensor([-237.2111, -653.1550, -205.2149, -337.0413, -555.0240],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2829, device='cuda:0', dtype=torch.float64)
tensor([-237.1425, -652.4669, -205.0324, -336.5894, -553.7480],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2414, device='cuda:0', dtype=torch.float64)
tensor([-237.2087, -646.8992, -203.0290, -334.8504, -550.9047],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2919, device='cuda:0', dtype=torch.float64)
tensor([-237.3935, -643.1564, -202.5214, -334.1528, -548.9921],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3239, device='cuda:0', dtype=torch.float64)
tensor([-237.9260, -639.4529, -202.4604, -334.1645, -547.8753],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2400, device='cuda:0', dtype=torch.float64)
tensor([-238.6636, -636.8904, -204.0087, -335.1429, -547.4407],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2652, device='cuda:0', dtype=torch.float64)
tensor([-239.1426, -636.1193, -205.5367, -335.6665, -547.4030],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3694, device='cuda:0', dtype=torch.float64)
tensor([-240.1140, -633.2248, -206.6702, -336.5343, -546.8578],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2494, device='cuda:0', dtype=torch.float64)
tensor([-240.9749, -631.9362, -209.0539, -337.9376, -546.6130],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2774, device='cuda:0', dtype=torch.float64)
tensor([-241.4931, -632.4501, -211.7334, -339.6045, -546.6633],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2814, device='cuda:0', dtype=torch.float64)
tensor([-242.1417, -631.2678, -213.5076, -340.9364, -546.9497],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3286, device='cuda:0', dtype=torch.float64)
tensor([-242.6273, -626.9639, -213.7131, -341.2202, -545.9917],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2826, device='cuda:0', dtype=torch.float64)
tensor([-243.0147, -625.0157, -214.2704, -341.9248, -546.0810],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2489, device='cuda:0', dtype=torch.float64)
tensor([-243.2942, -623.5522, -214.7999, -342.5093, -546.2509],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2919, device='cuda:0', dtype=torch.float64)
tensor([-243.5988, -618.9987, -213.4932, -342.0213, -544.9362],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2642, device='cuda:0', dtype=torch.float64)
tensor([-244.1419, -620.0420, -214.9690, -343.9412, -546.2771],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2142, device='cuda:0', dtype=torch.float64)
tensor([-244.5235, -620.3032, -215.5153, -345.1510, -546.7691],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3061, device='cuda:0', dtype=torch.float64)
tensor([-244.9770, -615.3652, -214.0194, -345.1576, -545.1934],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2485, device='cuda:0', dtype=torch.float64)
tensor([-245.2768, -609.7218, -211.6374, -344.4874, -543.0364],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2710, device='cuda:0', dtype=torch.float64)
tensor([-245.3958, -603.7808, -209.4664, -343.9372, -540.2599],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2808, device='cuda:0', dtype=torch.float64)
tensor([-245.9262, -602.8426, -210.6630, -346.0697, -540.0462],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2756, device='cuda:0', dtype=torch.float64)
tensor([-246.2858, -601.9992, -211.5371, -348.2078, -539.5114],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3173, device='cuda:0', dtype=torch.float64)
tensor([-246.7799, -598.0546, -210.0032, -349.2283, -537.9923],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2614, device='cuda:0', dtype=torch.float64)
tensor([-247.0837, -595.5522, -209.4708, -350.6235, -536.5291],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2075, device='cuda:0', dtype=torch.float64)
tensor([-247.1679, -593.5684, -208.0646, -350.9297, -534.8311],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3356, device='cuda:0', dtype=torch.float64)
tensor([-247.1386, -591.9810, -206.9964, -351.1260, -532.9560],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2269, device='cuda:0', dtype=torch.float64)
tensor([-247.2047, -588.3875, -205.1064, -350.7069, -530.4736],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2784, device='cuda:0', dtype=torch.float64)
tensor([-247.0600, -585.4287, -203.7383, -350.1653, -528.1596],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2684, device='cuda:0', dtype=torch.float64)
tensor([-247.2768, -584.8230, -204.3796, -351.0849, -527.9361],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2999, device='cuda:0', dtype=torch.float64)
tensor([-247.5513, -587.8304, -207.4350, -353.2257, -529.1539],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2362, device='cuda:0', dtype=torch.float64)
tensor([-247.8239, -591.4676, -210.4466, -355.3500, -530.9636],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3292, device='cuda:0', dtype=torch.float64)
tensor([-248.1994, -592.1847, -211.7308, -356.4451, -531.8707],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2410, device='cuda:0', dtype=torch.float64)
tensor([-248.3020, -593.4304, -211.9445, -356.8842, -532.8422],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2566, device='cuda:0', dtype=torch.float64)
tensor([-248.4708, -598.9020, -214.6720, -358.7017, -535.2090],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2434, device='cuda:0', dtype=torch.float64)
tensor([-248.8893, -605.8483, -218.8863, -361.6681, -538.4390],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2478, device='cuda:0', dtype=torch.float64)
tensor([-249.1393, -613.8560, -223.8964, -364.4379, -541.5014],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2991, device='cuda:0', dtype=torch.float64)
tensor([-248.9869, -619.2875, -227.7573, -365.8001, -542.9416],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2499, device='cuda:0', dtype=torch.float64)
tensor([-249.0538, -622.6669, -230.7456, -366.7822, -543.8132],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2366, device='cuda:0', dtype=torch.float64)
tensor([-249.4078, -626.1601, -236.0058, -368.7217, -544.8795],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3505, device='cuda:0', dtype=torch.float64)
tensor([-249.4072, -638.6342, -245.5909, -371.5259, -548.1831],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2774, device='cuda:0', dtype=torch.float64)
tensor([-249.8228, -656.3367, -260.1297, -376.2731, -552.7709],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2588, device='cuda:0', dtype=torch.float64)
tensor([-249.9095, -672.4112, -269.8259, -379.3262, -557.1293],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3142, device='cuda:0', dtype=torch.float64)
tensor([-250.0304, -703.9885, -286.3750, -385.0257, -564.9052],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3052, device='cuda:0', dtype=torch.float64)
tensor([-249.9245, -719.5103, -293.5295, -386.6553, -567.1827],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2909, device='cuda:0', dtype=torch.float64)
tensor([-249.5098, -729.7950, -297.6825, -386.8920, -568.1042],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2839, device='cuda:0', dtype=torch.float64)
tensor([-249.0798, -742.4367, -303.7340, -387.8236, -569.5118],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2667, device='cuda:0', dtype=torch.float64)
tensor([-248.6101, -747.7485, -306.1680, -387.8117, -569.2446],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2967, device='cuda:0', dtype=torch.float64)
tensor([-248.2506, -748.5029, -306.0066, -387.3546, -567.8421],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2402, device='cuda:0', dtype=torch.float64)
tensor([-248.0345, -743.4206, -303.3506, -386.3142, -564.7319],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2854, device='cuda:0', dtype=torch.float64)
tensor([-247.7620, -734.9791, -300.4323, -385.0933, -560.4810],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2457, device='cuda:0', dtype=torch.float64)
tensor([-247.6355, -718.0694, -294.6148, -382.8345, -554.4304],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3417, device='cuda:0', dtype=torch.float64)
tensor([-247.4001, -714.3767, -294.6612, -382.4195, -551.6825],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2442, device='cuda:0', dtype=torch.float64)
tensor([-247.0741, -715.7685, -296.5150, -382.5845, -550.2616],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2456, device='cuda:0', dtype=torch.float64)
tensor([-246.8040, -712.4832, -296.0593, -382.0133, -547.7157],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2756, device='cuda:0', dtype=torch.float64)
tensor([-246.4792, -706.6959, -293.2611, -380.7796, -545.4163],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2836, device='cuda:0', dtype=torch.float64)
tensor([-246.0708, -706.2210, -292.5475, -380.5312, -544.3108],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2808, device='cuda:0', dtype=torch.float64)
tensor([-245.8372, -711.8197, -294.1907, -381.4915, -545.0298],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3500, device='cuda:0', dtype=torch.float64)
tensor([-245.5553, -722.6538, -297.6351, -382.9617, -547.3818],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2558, device='cuda:0', dtype=torch.float64)
tensor([-245.4451, -733.3669, -301.2112, -384.8546, -550.1789],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2330, device='cuda:0', dtype=torch.float64)
tensor([-245.3194, -740.3287, -303.0757, -386.1390, -552.1157],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2797, device='cuda:0', dtype=torch.float64)
tensor([-245.2164, -749.9972, -306.9769, -387.8531, -554.8260],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3659, device='cuda:0', dtype=torch.float64)
tensor([-244.4959, -739.7315, -297.7686, -385.0513, -551.6555],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2868, device='cuda:0', dtype=torch.float64)
tensor([-243.6888, -732.6473, -291.2571, -383.0344, -549.4763],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2745, device='cuda:0', dtype=torch.float64)
tensor([-243.3077, -715.8230, -282.0688, -380.1773, -545.4314],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2463, device='cuda:0', dtype=torch.float64)
tensor([-243.0671, -695.0334, -272.7761, -376.9740, -540.0025],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3239, device='cuda:0', dtype=torch.float64)
tensor([-243.0122, -687.4882, -268.9033, -376.1092, -537.7419],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2562, device='cuda:0', dtype=torch.float64)
tensor([-243.0566, -684.5847, -267.4614, -376.2701, -536.7243],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2731, device='cuda:0', dtype=torch.float64)
tensor([-243.2965, -673.8702, -263.1829, -375.3275, -533.4630],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2840, device='cuda:0', dtype=torch.float64)
tensor([-243.8526, -673.7821, -265.2205, -376.9199, -533.0482],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2440, device='cuda:0', dtype=torch.float64)
tensor([-244.3565, -666.6332, -263.6933, -377.0348, -530.6870],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1993, device='cuda:0', dtype=torch.float64)
tensor([-244.7492, -657.1389, -260.8463, -376.3311, -527.7083],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2944, device='cuda:0', dtype=torch.float64)
tensor([-244.9240, -646.7411, -256.4993, -374.9481, -524.7816],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2122, device='cuda:0', dtype=torch.float64)
tensor([-245.2530, -642.9292, -254.8148, -374.9631, -524.1998],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1886, device='cuda:0', dtype=torch.float64)
tensor([-245.5524, -642.0903, -254.5924, -375.3924, -524.0837],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2782, device='cuda:0', dtype=torch.float64)
tensor([-245.7540, -645.0556, -256.6142, -376.8281, -525.0266],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2424, device='cuda:0', dtype=torch.float64)
tensor([-245.9999, -655.0795, -262.1139, -379.7774, -527.8105],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2997, device='cuda:0', dtype=torch.float64)
tensor([-246.2255, -682.4923, -274.3219, -385.1083, -533.9164],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3087, device='cuda:0', dtype=torch.float64)
tensor([-246.5656, -717.1658, -290.8757, -391.4693, -542.4429],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3125, device='cuda:0', dtype=torch.float64)
tensor([-246.9271, -730.6598, -299.5275, -394.6873, -546.3929],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2355, device='cuda:0', dtype=torch.float64)
tensor([-247.0831, -747.5589, -309.2746, -398.3683, -551.4348],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2741, device='cuda:0', dtype=torch.float64)
tensor([-246.9014, -757.8851, -315.5475, -400.3319, -553.7686],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2480, device='cuda:0', dtype=torch.float64)
tensor([-246.7901, -762.1880, -319.7690, -401.5821, -553.8757],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2971, device='cuda:0', dtype=torch.float64)
tensor([-246.6694, -769.4401, -323.8650, -403.0017, -555.4965],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2303, device='cuda:0', dtype=torch.float64)
tensor([-246.6003, -778.3844, -327.9821, -404.8101, -557.8423],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2088, device='cuda:0', dtype=torch.float64)
tensor([-246.5124, -788.0585, -330.8356, -406.5032, -560.6312],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2744, device='cuda:0', dtype=torch.float64)
tensor([-246.5941, -803.8290, -334.2003, -409.4543, -565.3622],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2634, device='cuda:0', dtype=torch.float64)
tensor([-246.4221, -811.6166, -334.9253, -409.8227, -567.7269],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2174, device='cuda:0', dtype=torch.float64)
tensor([-246.3517, -810.2285, -334.1408, -408.4186, -567.4720],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2294, device='cuda:0', dtype=torch.float64)
tensor([-245.9330, -806.8664, -332.7370, -406.1447, -566.1346],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2169, device='cuda:0', dtype=torch.float64)
tensor([-245.4546, -801.0334, -330.7430, -403.1716, -563.7928],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2561, device='cuda:0', dtype=torch.float64)
tensor([-245.1740, -792.6623, -328.3627, -400.3900, -560.3641],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2414, device='cuda:0', dtype=torch.float64)
tensor([-245.3667, -786.1852, -326.6435, -398.6892, -557.8410],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2536, device='cuda:0', dtype=torch.float64)
tensor([-245.2355, -765.4039, -317.4972, -393.2730, -550.5456],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2517, device='cuda:0', dtype=torch.float64)
tensor([-245.2626, -744.4322, -307.4646, -388.4436, -543.3813],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2104, device='cuda:0', dtype=torch.float64)
tensor([-245.3766, -719.7404, -294.3956, -383.3593, -535.2155],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2493, device='cuda:0', dtype=torch.float64)
tensor([-245.7050, -690.8919, -280.7283, -378.7485, -526.4276],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2085, device='cuda:0', dtype=torch.float64)
tensor([-246.4568, -670.1962, -273.2139, -376.2497, -520.8206],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2264, device='cuda:0', dtype=torch.float64)
tensor([-247.4007, -652.4018, -267.3324, -374.5947, -516.2819],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2875, device='cuda:0', dtype=torch.float64)
tensor([-248.5286, -646.9120, -266.7365, -375.3296, -514.6702],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3145, device='cuda:0', dtype=torch.float64)
tensor([-250.1924, -656.2539, -272.4860, -378.6421, -516.8955],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2564, device='cuda:0', dtype=torch.float64)
tensor([-252.0052, -680.4926, -285.1350, -384.8603, -523.4062],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2664, device='cuda:0', dtype=torch.float64)
tensor([-253.5578, -711.1809, -302.1711, -391.8861, -532.8905],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2198, device='cuda:0', dtype=torch.float64)
tensor([-254.8585, -747.3825, -320.6557, -400.3488, -544.5097],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2817, device='cuda:0', dtype=torch.float64)
tensor([-256.0771, -765.5170, -328.1236, -405.6060, -550.3465],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2343, device='cuda:0', dtype=torch.float64)
tensor([-257.2301, -769.8867, -329.8966, -407.9237, -551.7847],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2831, device='cuda:0', dtype=torch.float64)
tensor([-258.2888, -781.3942, -332.9806, -411.6136, -554.9140],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2477, device='cuda:0', dtype=torch.float64)
tensor([-259.0264, -786.6258, -334.4752, -414.0050, -556.3414],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2384, device='cuda:0', dtype=torch.float64)
tensor([-259.0704, -781.3955, -333.5251, -413.6016, -553.5273],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2767, device='cuda:0', dtype=torch.float64)
tensor([-258.6386, -768.9967, -330.7676, -411.3193, -548.3496],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1890, device='cuda:0', dtype=torch.float64)
tensor([-258.3754, -757.8373, -328.6999, -409.4256, -543.8496],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1953, device='cuda:0', dtype=torch.float64)
tensor([-257.8457, -748.0723, -326.5843, -407.6675, -539.5916],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1993, device='cuda:0', dtype=torch.float64)
tensor([-257.3537, -735.1499, -322.9249, -405.1761, -534.2582],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3320, device='cuda:0', dtype=torch.float64)
tensor([-256.4196, -719.1433, -316.7986, -401.7095, -527.6310],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2433, device='cuda:0', dtype=torch.float64)
tensor([-255.7770, -714.5708, -314.3681, -400.5630, -524.8935],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2075, device='cuda:0', dtype=torch.float64)
tensor([-255.3128, -719.1680, -316.0918, -401.2885, -525.3030],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2056, device='cuda:0', dtype=torch.float64)
tensor([-254.7713, -716.5573, -314.1006, -400.3699, -523.8026],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2439, device='cuda:0', dtype=torch.float64)
tensor([-254.8052, -722.6966, -317.0236, -401.6709, -525.1782],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2220, device='cuda:0', dtype=torch.float64)
tensor([-254.5031, -722.2081, -316.8373, -401.5526, -524.3342],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2956, device='cuda:0', dtype=torch.float64)
tensor([-254.2739, -713.0721, -312.7285, -399.9200, -521.1647],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2361, device='cuda:0', dtype=torch.float64)
tensor([-253.9498, -700.9691, -306.6912, -397.4154, -516.7887],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1866, device='cuda:0', dtype=torch.float64)
tensor([-253.8702, -689.9061, -301.3766, -395.5002, -512.9516],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3300, device='cuda:0', dtype=torch.float64)
tensor([-253.7064, -695.0528, -303.7021, -396.0958, -514.0466],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2350, device='cuda:0', dtype=torch.float64)
tensor([-253.5889, -690.4778, -301.7004, -395.0631, -512.2826],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2341, device='cuda:0', dtype=torch.float64)
tensor([-253.7039, -687.2213, -300.3882, -394.3379, -510.8962],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2189, device='cuda:0', dtype=torch.float64)
tensor([-254.2554, -689.9133, -302.5626, -395.3273, -511.4008],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2114, device='cuda:0', dtype=torch.float64)
tensor([-254.8020, -691.6204, -304.5960, -396.3579, -511.4532],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2177, device='cuda:0', dtype=torch.float64)
tensor([-254.9741, -689.8687, -304.1970, -396.2450, -510.6127],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2139, device='cuda:0', dtype=torch.float64)
tensor([-254.6453, -685.8204, -301.1014, -394.8773, -509.1197],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2330, device='cuda:0', dtype=torch.float64)
tensor([-254.1703, -672.6609, -292.9839, -391.4061, -504.8389],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3215, device='cuda:0', dtype=torch.float64)
tensor([-254.0178, -681.8037, -296.1512, -392.3064, -507.5043],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3252, device='cuda:0', dtype=torch.float64)
tensor([-253.9911, -710.7681, -308.0621, -396.9691, -516.3478],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2012, device='cuda:0', dtype=torch.float64)
tensor([-253.9936, -739.3077, -316.4059, -401.3503, -524.9135],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1925, device='cuda:0', dtype=torch.float64)
tensor([-254.0321, -759.7549, -319.7173, -404.0417, -530.7423],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2048, device='cuda:0', dtype=torch.float64)
tensor([-254.0386, -781.1456, -322.7929, -406.5701, -537.3964],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2255, device='cuda:0', dtype=torch.float64)
tensor([-254.7070, -800.7503, -327.1804, -410.7762, -544.8879],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1734, device='cuda:0', dtype=torch.float64)
tensor([-255.9983, -818.7431, -332.6417, -421.7016, -553.0642],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1677, device='cuda:0', dtype=torch.float64)
tensor([-257.7274, -832.7006, -338.6643, -438.5198, -559.8907],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1790, device='cuda:0', dtype=torch.float64)
tensor([-259.1798, -840.8050, -342.4691, -453.9111, -563.5211],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2079, device='cuda:0', dtype=torch.float64)
tensor([-260.0089, -845.1408, -344.5730, -464.8825, -565.1760],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1768, device='cuda:0', dtype=torch.float64)
tensor([-260.7908, -848.6850, -346.5343, -475.4419, -566.5338],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1260, device='cuda:0', dtype=torch.float64)
tensor([-260.8526, -850.6608, -347.1880, -480.5777, -566.5400],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1644, device='cuda:0', dtype=torch.float64)
tensor([-260.5862, -852.3751, -346.9620, -482.6699, -566.1399],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1703, device='cuda:0', dtype=torch.float64)
tensor([-260.0449, -853.9059, -346.1609, -482.9137, -565.6024],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1437, device='cuda:0', dtype=torch.float64)
tensor([-259.2103, -854.9513, -344.9473, -481.9587, -564.6388],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1776, device='cuda:0', dtype=torch.float64)
tensor([-258.0350, -854.9121, -342.8727, -478.1351, -563.2446],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1658, device='cuda:0', dtype=torch.float64)
tensor([-256.5005, -854.3888, -340.3812, -472.3915, -561.4644],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1461, device='cuda:0', dtype=torch.float64)
tensor([-254.8583, -852.3690, -337.5599, -464.9902, -559.2272],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1609, device='cuda:0', dtype=torch.float64)
tensor([-253.6463, -849.7906, -335.0795, -458.9065, -557.2743],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1775, device='cuda:0', dtype=torch.float64)
tensor([-252.6593, -845.8275, -332.5759, -452.4239, -554.9061],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1586, device='cuda:0', dtype=torch.float64)
tensor([-251.6018, -841.4023, -329.7592, -446.0955, -552.0312],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1877, device='cuda:0', dtype=torch.float64)
tensor([-250.9387, -835.3891, -327.1348, -440.3152, -548.7041],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2457, device='cuda:0', dtype=torch.float64)
tensor([-249.6725, -830.1933, -323.2289, -432.5485, -545.3020],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1615, device='cuda:0', dtype=torch.float64)
tensor([-248.9322, -824.8714, -320.3421, -427.9755, -542.1237],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1528, device='cuda:0', dtype=torch.float64)
tensor([-248.6185, -818.5552, -318.2265, -425.2693, -538.8435],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1927, device='cuda:0', dtype=torch.float64)
tensor([-248.6830, -811.7072, -316.6880, -423.6327, -535.3779],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2388, device='cuda:0', dtype=torch.float64)
tensor([-249.1806, -802.7635, -315.5139, -421.7339, -531.3378],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2444, device='cuda:0', dtype=torch.float64)
tensor([-250.2233, -792.2024, -314.9449, -420.6164, -527.1671],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1960, device='cuda:0', dtype=torch.float64)
tensor([-251.3116, -784.2368, -314.5882, -420.4462, -524.3497],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2175, device='cuda:0', dtype=torch.float64)
tensor([-252.0692, -774.7735, -313.2190, -418.7432, -520.8211],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2165, device='cuda:0', dtype=torch.float64)
tensor([-252.6487, -760.4748, -310.6430, -414.0426, -515.3907],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2548, device='cuda:0', dtype=torch.float64)
tensor([-253.4946, -743.7457, -308.3461, -410.3200, -509.2906],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1897, device='cuda:0', dtype=torch.float64)
tensor([-254.7106, -731.3221, -307.2032, -409.7915, -505.3547],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1634, device='cuda:0', dtype=torch.float64)
tensor([-255.6550, -721.6781, -306.1203, -409.9127, -502.4223],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2918, device='cuda:0', dtype=torch.float64)
tensor([-256.9407, -714.8718, -305.7131, -410.8815, -500.7388],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1707, device='cuda:0', dtype=torch.float64)
tensor([-258.5825, -709.6998, -306.0467, -412.4556, -499.7647],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1837, device='cuda:0', dtype=torch.float64)
tensor([-259.9613, -702.1429, -305.4540, -413.4114, -497.8663],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1777, device='cuda:0', dtype=torch.float64)
tensor([-261.1692, -696.2934, -305.1660, -414.4772, -496.2466],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2522, device='cuda:0', dtype=torch.float64)
tensor([-261.9403, -683.4914, -302.8155, -414.6582, -492.7101],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1703, device='cuda:0', dtype=torch.float64)
tensor([-262.4596, -671.3428, -300.1796, -414.7142, -489.5473],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1874, device='cuda:0', dtype=torch.float64)
tensor([-262.7835, -661.2382, -297.8127, -414.6641, -486.9983],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1787, device='cuda:0', dtype=torch.float64)
tensor([-262.7048, -650.8506, -294.6140, -414.0423, -484.5359],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1843, device='cuda:0', dtype=torch.float64)
tensor([-262.1018, -639.5203, -289.8386, -412.3036, -481.5421],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2149, device='cuda:0', dtype=torch.float64)
tensor([-262.2005, -640.7751, -288.7412, -412.5560, -482.5415],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1676, device='cuda:0', dtype=torch.float64)
tensor([-262.6523, -647.5440, -289.6540, -413.9245, -485.1908],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1586, device='cuda:0', dtype=torch.float64)
tensor([-262.8134, -651.4022, -289.2700, -414.6565, -487.0344],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1870, device='cuda:0', dtype=torch.float64)
tensor([-263.2540, -656.4706, -289.5495, -415.7692, -489.3004],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1926, device='cuda:0', dtype=torch.float64)
tensor([-263.4656, -659.4529, -289.3096, -416.5173, -490.5894],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1493, device='cuda:0', dtype=torch.float64)
tensor([-263.6409, -663.3338, -289.3967, -417.2044, -492.0249],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2235, device='cuda:0', dtype=torch.float64)
tensor([-263.5955, -659.8181, -287.8072, -416.7121, -491.2059],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1556, device='cuda:0', dtype=torch.float64)
tensor([-263.6710, -660.1864, -287.4053, -416.8666, -491.2999],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1742, device='cuda:0', dtype=torch.float64)
tensor([-263.9969, -667.3741, -288.8886, -417.9423, -493.1902],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1943, device='cuda:0', dtype=torch.float64)
tensor([-264.3546, -677.2879, -290.6790, -419.2301, -495.9078],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1473, device='cuda:0', dtype=torch.float64)
tensor([-265.0336, -686.1925, -292.5284, -420.5826, -498.2218],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1849, device='cuda:0', dtype=torch.float64)
tensor([-265.2035, -688.2365, -292.7192, -420.9404, -498.5105],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1560, device='cuda:0', dtype=torch.float64)
tensor([-265.4945, -687.2470, -292.6673, -420.8893, -497.6897],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2185, device='cuda:0', dtype=torch.float64)
tensor([-266.1128, -691.8284, -293.5270, -421.8903, -498.6947],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1717, device='cuda:0', dtype=torch.float64)
tensor([-266.7018, -697.1734, -294.6540, -423.1423, -500.0439],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1392, device='cuda:0', dtype=torch.float64)
tensor([-267.3716, -699.7697, -295.4340, -424.2982, -500.9105],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1393, device='cuda:0', dtype=torch.float64)
tensor([-267.6061, -700.4283, -295.5856, -424.7814, -501.1510],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1863, device='cuda:0', dtype=torch.float64)
tensor([-267.3589, -699.4543, -294.7935, -424.4787, -500.4464],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1438, device='cuda:0', dtype=torch.float64)
tensor([-266.8687, -699.1754, -293.7683, -424.0148, -500.0098],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1949, device='cuda:0', dtype=torch.float64)
tensor([-265.8615, -698.1237, -291.8734, -422.7782, -499.1450],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1373, device='cuda:0', dtype=torch.float64)
tensor([-264.4688, -696.2500, -289.5867, -421.2467, -498.2008],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1533, device='cuda:0', dtype=torch.float64)
tensor([-263.4694, -696.9997, -288.1823, -420.6707, -498.0279],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1391, device='cuda:0', dtype=torch.float64)
tensor([-262.1575, -697.9346, -286.6438, -419.8241, -497.7220],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1588, device='cuda:0', dtype=torch.float64)
tensor([-260.8782, -694.1810, -284.3312, -418.6878, -496.2832],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1732, device='cuda:0', dtype=torch.float64)
tensor([-259.7930, -689.2816, -281.8444, -418.0122, -495.0503],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1724, device='cuda:0', dtype=torch.float64)
tensor([-258.8660, -687.7310, -280.0735, -417.5781, -494.6335],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1459, device='cuda:0', dtype=torch.float64)
tensor([-257.6190, -681.6493, -277.1068, -416.7840, -493.0607],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2595, device='cuda:0', dtype=torch.float64)
tensor([-257.0925, -693.8575, -278.3699, -417.9368, -496.2542],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1366, device='cuda:0', dtype=torch.float64)
tensor([-256.6249, -704.9390, -279.3535, -419.1783, -499.1222],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2276, device='cuda:0', dtype=torch.float64)
tensor([-256.3841, -709.2860, -279.5756, -419.9347, -500.2012],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1622, device='cuda:0', dtype=torch.float64)
tensor([-256.5791, -713.8603, -280.3559, -421.1054, -501.2280],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1521, device='cuda:0', dtype=torch.float64)
tensor([-257.0565, -716.6295, -281.2690, -422.1731, -501.6760],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1458, device='cuda:0', dtype=torch.float64)
tensor([-257.3915, -719.0265, -282.0060, -423.1853, -502.0529],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1460, device='cuda:0', dtype=torch.float64)
tensor([-257.6497, -720.5094, -282.5971, -423.8553, -502.1369],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1441, device='cuda:0', dtype=torch.float64)
tensor([-258.2266, -721.4427, -283.5218, -424.8840, -501.9900],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1873, device='cuda:0', dtype=torch.float64)
tensor([-258.5438, -719.5100, -283.6312, -425.1545, -500.9159],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1745, device='cuda:0', dtype=torch.float64)
tensor([-258.9298, -716.9141, -283.8591, -425.4572, -499.4872],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1403, device='cuda:0', dtype=torch.float64)
tensor([-259.5295, -714.8058, -284.3365, -426.2372, -498.4167],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2842, device='cuda:0', dtype=torch.float64)
tensor([-259.8938, -709.0137, -283.5095, -425.6571, -496.3860],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1526, device='cuda:0', dtype=torch.float64)
tensor([-260.5409, -702.9173, -282.8661, -425.3915, -494.2643],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1618, device='cuda:0', dtype=torch.float64)
tensor([-261.5285, -699.5172, -283.0602, -426.2083, -493.0392],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2196, device='cuda:0', dtype=torch.float64)
tensor([-263.3569, -700.3221, -285.1915, -429.3598, -493.2753],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1441, device='cuda:0', dtype=torch.float64)
tensor([-265.0283, -699.4502, -287.0152, -432.6248, -493.1624],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1642, device='cuda:0', dtype=torch.float64)
tensor([-266.2063, -697.0482, -287.5681, -434.3646, -492.8268],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1450, device='cuda:0', dtype=torch.float64)
tensor([-267.4080, -696.1441, -288.6486, -436.9578, -493.2241],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1698, device='cuda:0', dtype=torch.float64)
tensor([-267.5553, -696.1815, -288.2560, -437.3054, -493.3351],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1638, device='cuda:0', dtype=torch.float64)
tensor([-267.0600, -694.3042, -286.1610, -434.8321, -492.2095],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1422, device='cuda:0', dtype=torch.float64)
tensor([-266.7096, -689.3856, -283.8326, -431.9120, -490.1742],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1474, device='cuda:0', dtype=torch.float64)
tensor([-266.0880, -683.7680, -281.1411, -429.2541, -488.0889],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1667, device='cuda:0', dtype=torch.float64)
tensor([-265.0477, -671.9123, -277.2514, -426.0909, -484.5385],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1554, device='cuda:0', dtype=torch.float64)
tensor([-264.0188, -654.0126, -273.1824, -423.2838, -479.5807],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1742, device='cuda:0', dtype=torch.float64)
tensor([-263.4293, -640.2276, -270.0254, -421.8531, -475.8367],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1477, device='cuda:0', dtype=torch.float64)
tensor([-262.6459, -625.2016, -265.6030, -420.0685, -471.4158],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1461, device='cuda:0', dtype=torch.float64)
tensor([-261.9813, -611.9497, -260.7050, -418.3220, -467.2688],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1312, device='cuda:0', dtype=torch.float64)
tensor([-261.8223, -604.3054, -257.6993, -417.3675, -464.8277],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1697, device='cuda:0', dtype=torch.float64)
tensor([-262.0904, -602.7878, -257.5063, -417.5139, -464.0895],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1859, device='cuda:0', dtype=torch.float64)
tensor([-262.4474, -611.7332, -260.6288, -418.8916, -466.5469],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1335, device='cuda:0', dtype=torch.float64)
tensor([-262.7570, -619.1256, -262.8802, -419.8701, -468.6730],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1697, device='cuda:0', dtype=torch.float64)
tensor([-263.4500, -631.2512, -266.4692, -421.4045, -472.0309],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1233, device='cuda:0', dtype=torch.float64)
tensor([-264.1299, -642.2326, -269.2127, -422.7239, -474.7677],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1487, device='cuda:0', dtype=torch.float64)
tensor([-264.6265, -647.8821, -270.4932, -423.4467, -475.9783],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1662, device='cuda:0', dtype=torch.float64)
tensor([-265.5097, -657.0590, -272.7166, -424.7990, -478.0147],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1513, device='cuda:0', dtype=torch.float64)
tensor([-265.8499, -662.8172, -274.2894, -425.6330, -479.1897],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1588, device='cuda:0', dtype=torch.float64)
tensor([-266.4353, -669.0019, -276.2668, -427.1844, -480.7587],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1292, device='cuda:0', dtype=torch.float64)
tensor([-267.0975, -675.9460, -278.7052, -429.7572, -482.9830],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1671, device='cuda:0', dtype=torch.float64)
tensor([-267.4876, -678.7170, -280.3175, -431.5945, -483.7047],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1658, device='cuda:0', dtype=torch.float64)
tensor([-267.5823, -678.6580, -280.6967, -431.8107, -483.3353],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1023, device='cuda:0', dtype=torch.float64)
tensor([-267.5405, -678.9925, -280.8005, -431.9633, -483.1737],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1446, device='cuda:0', dtype=torch.float64)
tensor([-267.4039, -678.9842, -280.4485, -431.6083, -482.9027],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1057, device='cuda:0', dtype=torch.float64)
tensor([-267.1039, -677.4481, -279.5671, -430.3131, -481.9837],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1442, device='cuda:0', dtype=torch.float64)
tensor([-266.8430, -678.0374, -279.4174, -429.9739, -481.8092],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1643, device='cuda:0', dtype=torch.float64)
tensor([-266.3078, -676.9165, -278.8322, -428.6219, -480.8344],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1243, device='cuda:0', dtype=torch.float64)
tensor([-266.2557, -677.7296, -279.1203, -428.6356, -480.7443],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1143, device='cuda:0', dtype=torch.float64)
tensor([-266.1903, -678.3020, -279.1229, -428.5756, -480.6288],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2076, device='cuda:0', dtype=torch.float64)
tensor([-265.3772, -672.8840, -276.7587, -425.6071, -478.4872],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1446, device='cuda:0', dtype=torch.float64)
tensor([-264.7063, -666.6550, -274.7063, -423.7273, -476.4616],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1222, device='cuda:0', dtype=torch.float64)
tensor([-264.2195, -660.6817, -273.0930, -422.5465, -474.6975],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1226, device='cuda:0', dtype=torch.float64)
tensor([-263.8286, -655.5017, -271.6653, -421.8318, -473.4270],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1346, device='cuda:0', dtype=torch.float64)
tensor([-263.3024, -651.6854, -270.2436, -421.1246, -472.5873],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1566, device='cuda:0', dtype=torch.float64)
tensor([-262.8344, -651.9738, -269.2916, -420.9012, -473.0428],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1213, device='cuda:0', dtype=torch.float64)
tensor([-262.0033, -648.8391, -267.4052, -420.3200, -472.7499],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1351, device='cuda:0', dtype=torch.float64)
tensor([-261.4860, -648.2696, -266.2436, -420.3576, -473.2071],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1486, device='cuda:0', dtype=torch.float64)
tensor([-261.4312, -650.7880, -266.0636, -420.9124, -474.1950],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1476, device='cuda:0', dtype=torch.float64)
tensor([-261.7437, -654.8952, -266.5864, -421.7126, -475.3956],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1219, device='cuda:0', dtype=torch.float64)
tensor([-261.8203, -660.2525, -266.8389, -422.6794, -477.1510],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1496, device='cuda:0', dtype=torch.float64)
tensor([-261.5714, -664.0335, -266.5504, -423.3180, -478.5975],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1435, device='cuda:0', dtype=torch.float64)
tensor([-261.3374, -667.3880, -265.9912, -423.9334, -480.0269],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1477, device='cuda:0', dtype=torch.float64)
tensor([-261.0661, -668.2579, -265.1008, -424.4815, -480.5722],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1258, device='cuda:0', dtype=torch.float64)
tensor([-260.8222, -669.1434, -264.2897, -424.9987, -481.2322],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1314, device='cuda:0', dtype=torch.float64)
tensor([-260.8025, -672.2682, -264.1614, -425.6688, -482.1731],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1447, device='cuda:0', dtype=torch.float64)
tensor([-260.5727, -670.8134, -263.3136, -425.7837, -481.8628],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1263, device='cuda:0', dtype=torch.float64)
tensor([-260.5721, -672.4915, -263.3628, -426.2917, -482.2501],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1113, device='cuda:0', dtype=torch.float64)
tensor([-260.5952, -673.8085, -263.2623, -426.8120, -482.7118],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1223, device='cuda:0', dtype=torch.float64)
tensor([-260.3913, -672.4899, -262.6217, -426.8965, -482.4547],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1521, device='cuda:0', dtype=torch.float64)
tensor([-260.4121, -676.0409, -262.8055, -427.5698, -483.4221],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1109, device='cuda:0', dtype=torch.float64)
tensor([-260.5511, -678.6750, -263.0929, -428.3151, -483.9595],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1184, device='cuda:0', dtype=torch.float64)
tensor([-260.7014, -676.2781, -262.7427, -428.4502, -483.0768],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1104, device='cuda:0', dtype=torch.float64)
tensor([-261.1538, -673.0376, -262.6488, -428.8025, -481.8718],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1632, device='cuda:0', dtype=torch.float64)
tensor([-261.6770, -670.5691, -262.9702, -429.2561, -480.6409],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1012, device='cuda:0', dtype=torch.float64)
tensor([-262.3247, -669.4390, -263.4785, -429.9439, -479.8586],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1060, device='cuda:0', dtype=torch.float64)
tensor([-262.8897, -667.3954, -263.6306, -430.6095, -479.0590],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1265, device='cuda:0', dtype=torch.float64)
tensor([-263.3949, -662.1319, -263.3939, -430.7919, -477.4186],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1169, device='cuda:0', dtype=torch.float64)
tensor([-263.9987, -660.9018, -263.6024, -431.7731, -476.8917],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0935, device='cuda:0', dtype=torch.float64)
tensor([-264.7264, -660.4548, -264.0441, -433.0329, -476.5365],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1392, device='cuda:0', dtype=torch.float64)
tensor([-265.5217, -662.3405, -264.9053, -434.3946, -476.8257],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1404, device='cuda:0', dtype=torch.float64)
tensor([-266.0641, -660.6394, -265.1375, -435.1164, -476.1793],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1084, device='cuda:0', dtype=torch.float64)
tensor([-266.6141, -660.0192, -265.4430, -436.0628, -476.1049],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1323, device='cuda:0', dtype=torch.float64)
tensor([-267.2560, -662.6528, -266.2143, -437.2897, -476.8298],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1041, device='cuda:0', dtype=torch.float64)
tensor([-267.8459, -663.5295, -266.7052, -438.1597, -477.0141],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1396, device='cuda:0', dtype=torch.float64)
tensor([-268.0784, -664.8776, -267.0329, -439.0034, -477.3207],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1168, device='cuda:0', dtype=torch.float64)
tensor([-268.1225, -665.7053, -266.9660, -439.7010, -477.7383],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1151, device='cuda:0', dtype=torch.float64)
tensor([-267.8532, -667.0543, -266.7392, -440.0513, -478.1974],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0859, device='cuda:0', dtype=torch.float64)
tensor([-267.6323, -668.7250, -266.6230, -440.4405, -478.7321],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1359, device='cuda:0', dtype=torch.float64)
tensor([-267.2630, -669.2076, -265.9212, -440.4184, -479.0460],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1085, device='cuda:0', dtype=torch.float64)
tensor([-266.6943, -670.8570, -265.2327, -440.4595, -479.7189],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2522, device='cuda:0', dtype=torch.float64)
tensor([-266.0243, -671.7248, -264.5025, -440.3204, -480.1582],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1131, device='cuda:0', dtype=torch.float64)
tensor([-265.1928, -671.4707, -263.4769, -439.8235, -480.1114],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1365, device='cuda:0', dtype=torch.float64)
tensor([-263.9456, -664.0585, -261.0948, -437.9349, -477.9667],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1118, device='cuda:0', dtype=torch.float64)
tensor([-262.7657, -655.2705, -258.6991, -436.1703, -475.8798],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0942, device='cuda:0', dtype=torch.float64)
tensor([-262.0577, -646.2529, -256.7673, -434.7462, -473.6484],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1046, device='cuda:0', dtype=torch.float64)
tensor([-261.1887, -637.9999, -254.5420, -433.3010, -471.7017],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1428, device='cuda:0', dtype=torch.float64)
tensor([-260.7655, -632.5306, -252.9173, -432.4922, -470.2930],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1034, device='cuda:0', dtype=torch.float64)
tensor([-260.5860, -629.2883, -251.9661, -431.9913, -469.3621],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1441, device='cuda:0', dtype=torch.float64)
tensor([-260.6486, -629.0339, -251.9262, -432.0950, -469.2351],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1227, device='cuda:0', dtype=torch.float64)
tensor([-261.0053, -629.5161, -252.0301, -432.4940, -469.5015],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1142, device='cuda:0', dtype=torch.float64)
tensor([-261.2959, -628.3967, -251.7062, -432.6440, -469.3739],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1395, device='cuda:0', dtype=torch.float64)
tensor([-261.2552, -623.4272, -250.4027, -432.1709, -468.2047],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1246, device='cuda:0', dtype=torch.float64)
tensor([-261.1864, -613.4938, -247.7510, -430.9865, -465.6625],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1059, device='cuda:0', dtype=torch.float64)
tensor([-261.0950, -602.1171, -244.1580, -429.6416, -462.7101],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0986, device='cuda:0', dtype=torch.float64)
tensor([-260.9650, -589.0025, -239.9599, -428.0222, -459.1590],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1121, device='cuda:0', dtype=torch.float64)
tensor([-261.1554, -579.9967, -237.4689, -427.0530, -456.6650],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1154, device='cuda:0', dtype=torch.float64)
tensor([-261.6120, -572.1585, -235.6886, -426.4433, -454.4496],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1177, device='cuda:0', dtype=torch.float64)
tensor([-262.1859, -566.9215, -234.9463, -426.3154, -452.9679],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1093, device='cuda:0', dtype=torch.float64)
tensor([-262.6611, -560.3740, -233.7648, -426.0883, -451.1766],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1144, device='cuda:0', dtype=torch.float64)
tensor([-263.2445, -559.8185, -234.2546, -426.7656, -451.0888],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1775, device='cuda:0', dtype=torch.float64)
tensor([-264.1091, -571.3244, -238.6058, -429.0025, -454.0942],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1480, device='cuda:0', dtype=torch.float64)
tensor([-264.3638, -576.5513, -240.1516, -430.1208, -455.6441],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1152, device='cuda:0', dtype=torch.float64)
tensor([-264.3123, -578.8814, -240.3955, -430.6288, -456.4674],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1087, device='cuda:0', dtype=torch.float64)
tensor([-264.3056, -581.0879, -240.6878, -431.0356, -457.1978],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1254, device='cuda:0', dtype=torch.float64)
tensor([-264.3240, -589.6819, -243.1870, -432.0848, -459.4144],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1116, device='cuda:0', dtype=torch.float64)
tensor([-264.6144, -596.7096, -245.4367, -433.2178, -461.4351],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0963, device='cuda:0', dtype=torch.float64)
tensor([-264.7036, -601.8388, -246.6167, -433.8730, -463.0333],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1117, device='cuda:0', dtype=torch.float64)
tensor([-265.0085, -609.8540, -248.8310, -434.8575, -465.2397],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1103, device='cuda:0', dtype=torch.float64)
tensor([-264.9359, -612.9951, -249.2831, -435.0172, -466.0680],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0914, device='cuda:0', dtype=torch.float64)
tensor([-264.7889, -616.2604, -249.7755, -435.1734, -466.8372],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0989, device='cuda:0', dtype=torch.float64)
tensor([-264.7722, -622.7832, -251.0234, -435.8444, -468.2858],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0986, device='cuda:0', dtype=torch.float64)
tensor([-264.8795, -631.9052, -252.7531, -436.8588, -470.3022],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1141, device='cuda:0', dtype=torch.float64)
tensor([-265.0865, -642.9289, -254.5810, -438.0183, -472.5581],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1137, device='cuda:0', dtype=torch.float64)
tensor([-265.4595, -656.1954, -256.5981, -439.5172, -475.3326],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1342, device='cuda:0', dtype=torch.float64)
tensor([-265.9764, -669.1478, -259.1211, -441.0205, -478.0907],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1866, device='cuda:0', dtype=torch.float64)
tensor([-266.5833, -678.9675, -262.0323, -442.8489, -480.2742],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1485, device='cuda:0', dtype=torch.float64)
tensor([-266.6845, -682.9967, -263.3628, -443.8592, -481.2511],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0818, device='cuda:0', dtype=torch.float64)
tensor([-266.7728, -686.3125, -264.5241, -444.9241, -482.0325],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0901, device='cuda:0', dtype=torch.float64)
tensor([-266.5714, -687.4204, -264.7445, -444.9356, -482.0046],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1120, device='cuda:0', dtype=torch.float64)
tensor([-265.9415, -686.6519, -263.8489, -444.0021, -481.3126],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1096, device='cuda:0', dtype=torch.float64)
tensor([-264.9471, -683.7946, -262.1486, -442.3236, -479.9010],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1393, device='cuda:0', dtype=torch.float64)
tensor([-263.6065, -676.4194, -259.1340, -440.0150, -477.7455],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0864, device='cuda:0', dtype=torch.float64)
tensor([-262.3499, -665.0590, -256.1773, -437.8708, -474.9892],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1255, device='cuda:0', dtype=torch.float64)
tensor([-261.4253, -652.0893, -253.6233, -435.9192, -472.0535],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1273, device='cuda:0', dtype=torch.float64)
tensor([-260.6684, -637.5400, -250.9411, -434.0426, -468.6378],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0924, device='cuda:0', dtype=torch.float64)
tensor([-259.8582, -619.9156, -246.5391, -431.5926, -464.1334],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1005, device='cuda:0', dtype=torch.float64)
tensor([-259.1594, -598.8445, -240.0064, -428.5914, -458.4406],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1078, device='cuda:0', dtype=torch.float64)
tensor([-258.8216, -583.8335, -235.3215, -426.4416, -454.4235],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1064, device='cuda:0', dtype=torch.float64)
tensor([-258.7106, -573.7567, -232.2336, -425.0078, -451.7782],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0839, device='cuda:0', dtype=torch.float64)
tensor([-258.7772, -566.1152, -230.1191, -424.0675, -449.8781],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0847, device='cuda:0', dtype=torch.float64)
tensor([-258.8329, -559.7133, -228.4035, -423.2656, -448.3637],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0923, device='cuda:0', dtype=torch.float64)
tensor([-258.9007, -554.0715, -227.0845, -422.6350, -447.0794],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1011, device='cuda:0', dtype=torch.float64)
tensor([-259.1987, -553.8337, -227.2434, -422.8862, -447.2314],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1006, device='cuda:0', dtype=torch.float64)
tensor([-259.5241, -558.7125, -228.6169, -423.9276, -448.7259],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1010, device='cuda:0', dtype=torch.float64)
tensor([-260.0200, -568.9672, -231.7573, -425.6973, -451.5890],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1056, device='cuda:0', dtype=torch.float64)
tensor([-260.5369, -582.3906, -235.9713, -427.7141, -455.4112],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0860, device='cuda:0', dtype=torch.float64)
tensor([-261.2104, -598.5838, -240.9887, -430.1245, -460.1124],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1163, device='cuda:0', dtype=torch.float64)
tensor([-261.6773, -611.4456, -244.5226, -432.0903, -464.1771],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0872, device='cuda:0', dtype=torch.float64)
tensor([-261.9716, -623.1760, -247.0651, -433.7831, -467.8853],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1216, device='cuda:0', dtype=torch.float64)
tensor([-262.1151, -632.6840, -248.6784, -435.0699, -470.8398],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1076, device='cuda:0', dtype=torch.float64)
tensor([-262.5491, -641.8311, -250.2990, -436.2417, -473.3265],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0930, device='cuda:0', dtype=torch.float64)
tensor([-263.1916, -651.8600, -251.9431, -437.7770, -475.8720],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1189, device='cuda:0', dtype=torch.float64)
tensor([-263.9141, -664.7551, -254.0444, -439.6620, -478.9412],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1047, device='cuda:0', dtype=torch.float64)
tensor([-264.4321, -673.2834, -255.4385, -441.1102, -481.2209],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1080, device='cuda:0', dtype=torch.float64)
tensor([-264.4823, -678.3090, -256.1452, -441.8167, -482.5931],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1058, device='cuda:0', dtype=torch.float64)
tensor([-264.1149, -680.3754, -256.1495, -441.7977, -483.1436],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1366, device='cuda:0', dtype=torch.float64)
tensor([-263.0595, -673.7536, -254.1795, -440.2941, -481.8138],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0881, device='cuda:0', dtype=torch.float64)
tensor([-261.6796, -663.7056, -251.6296, -438.3147, -479.7711],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1115, device='cuda:0', dtype=torch.float64)
tensor([-260.3766, -656.8902, -249.6313, -436.8555, -478.4948],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0930, device='cuda:0', dtype=torch.float64)
tensor([-259.0985, -647.1922, -246.9962, -435.1359, -476.4853],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0948, device='cuda:0', dtype=torch.float64)
tensor([-258.0486, -638.2624, -244.2229, -433.5710, -474.3545],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1039, device='cuda:0', dtype=torch.float64)
tensor([-257.3112, -630.8172, -241.8537, -432.3200, -472.2337],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1091, device='cuda:0', dtype=torch.float64)
tensor([-256.6903, -629.0598, -240.7979, -431.7387, -471.5375],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0916, device='cuda:0', dtype=torch.float64)
tensor([-255.8064, -624.8781, -238.6412, -430.6979, -470.2408],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1027, device='cuda:0', dtype=torch.float64)
tensor([-254.9965, -623.0443, -237.1302, -429.9588, -469.4205],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1176, device='cuda:0', dtype=torch.float64)
tensor([-254.5826, -626.1998, -237.3630, -430.2331, -469.9697],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1116, device='cuda:0', dtype=torch.float64)
tensor([-254.3445, -622.8234, -236.2873, -429.8524, -468.7668],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1066, device='cuda:0', dtype=torch.float64)
tensor([-254.2358, -619.5140, -235.4708, -429.4233, -467.4959],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0711, device='cuda:0', dtype=torch.float64)
tensor([-254.2686, -617.5022, -235.2289, -429.1936, -466.5613],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0973, device='cuda:0', dtype=torch.float64)
tensor([-254.5379, -615.0497, -235.3578, -428.9549, -465.4277],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0810, device='cuda:0', dtype=torch.float64)
tensor([-254.8200, -613.1975, -235.5652, -428.7350, -464.5825],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1204, device='cuda:0', dtype=torch.float64)
tensor([-254.8997, -605.4453, -233.9958, -427.8359, -462.3081],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0971, device='cuda:0', dtype=torch.float64)
tensor([-254.9375, -594.9461, -231.6643, -426.4750, -459.3576],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0755, device='cuda:0', dtype=torch.float64)
tensor([-255.1779, -585.1085, -229.7619, -425.1788, -456.5164],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0678, device='cuda:0', dtype=torch.float64)
tensor([-255.5706, -577.0455, -228.4575, -424.2938, -454.2373],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1015, device='cuda:0', dtype=torch.float64)
tensor([-256.0790, -571.4313, -227.9507, -423.8265, -452.5941],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0947, device='cuda:0', dtype=torch.float64)
tensor([-256.8943, -567.7966, -228.5291, -423.7288, -451.3424],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0692, device='cuda:0', dtype=torch.float64)
tensor([-257.6811, -567.4078, -229.7427, -424.0296, -450.9935],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0829, device='cuda:0', dtype=torch.float64)
tensor([-258.3261, -566.5145, -230.4784, -424.2779, -450.6803],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0988, device='cuda:0', dtype=torch.float64)
tensor([-259.0669, -566.6552, -231.5225, -424.8409, -450.7270],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0696, device='cuda:0', dtype=torch.float64)
tensor([-259.8078, -567.4301, -232.7420, -425.4403, -450.9273],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0734, device='cuda:0', dtype=torch.float64)
tensor([-260.5947, -571.5758, -234.9089, -426.4214, -452.0817],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0854, device='cuda:0', dtype=torch.float64)
tensor([-261.2813, -579.5152, -237.9849, -427.7619, -454.2112],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0782, device='cuda:0', dtype=torch.float64)
tensor([-261.8189, -588.2860, -240.9208, -429.1543, -456.7175],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1156, device='cuda:0', dtype=torch.float64)
tensor([-262.1696, -594.6625, -243.0572, -430.1762, -458.6443],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0843, device='cuda:0', dtype=torch.float64)
tensor([-262.5111, -600.9903, -244.8611, -431.2008, -460.5079],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0783, device='cuda:0', dtype=torch.float64)
tensor([-262.5403, -605.1497, -245.7119, -431.9299, -461.8689],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0744, device='cuda:0', dtype=torch.float64)
tensor([-262.5061, -609.0960, -246.3598, -432.5514, -463.0703],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0730, device='cuda:0', dtype=torch.float64)
tensor([-262.3523, -610.1126, -246.3114, -432.7806, -463.5212],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0638, device='cuda:0', dtype=torch.float64)
tensor([-261.9885, -610.0749, -245.8389, -432.8313, -463.6894],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0683, device='cuda:0', dtype=torch.float64)
tensor([-261.5753, -610.4813, -245.4132, -432.8989, -463.9656],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0715, device='cuda:0', dtype=torch.float64)
tensor([-261.0194, -608.8269, -244.5699, -432.5297, -463.5586],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0959, device='cuda:0', dtype=torch.float64)
tensor([-260.4406, -603.2681, -242.8777, -431.6400, -462.0170],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0693, device='cuda:0', dtype=torch.float64)
tensor([-259.8401, -598.5748, -241.2108, -430.8265, -460.7208],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0917, device='cuda:0', dtype=torch.float64)
tensor([-259.2951, -588.5803, -238.0630, -429.4641, -458.1019],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0926, device='cuda:0', dtype=torch.float64)
tensor([-258.4945, -578.2476, -234.4977, -427.9051, -455.4279],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0717, device='cuda:0', dtype=torch.float64)
tensor([-257.8622, -571.7451, -232.1508, -426.8217, -453.7019],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0849, device='cuda:0', dtype=torch.float64)
tensor([-257.2859, -566.2054, -230.1646, -425.9056, -452.2032],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1280, device='cuda:0', dtype=torch.float64)
tensor([-256.5115, -554.6826, -226.2677, -424.0751, -449.2958],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0762, device='cuda:0', dtype=torch.float64)
tensor([-255.7773, -545.6701, -223.3164, -422.5019, -447.2922],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0777, device='cuda:0', dtype=torch.float64)
tensor([-255.1942, -539.2727, -221.3090, -421.3165, -446.0290],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0899, device='cuda:0', dtype=torch.float64)
tensor([-254.8425, -533.4811, -219.7239, -420.3530, -445.0694],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1343, device='cuda:0', dtype=torch.float64)
tensor([-254.1797, -524.2064, -217.3173, -418.7303, -443.5120],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0733, device='cuda:0', dtype=torch.float64)
tensor([-253.7894, -519.7860, -216.0694, -417.9062, -442.8554],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0783, device='cuda:0', dtype=torch.float64)
tensor([-253.2966, -511.8281, -213.8308, -416.3271, -441.5363],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0885, device='cuda:0', dtype=torch.float64)
tensor([-253.0587, -510.2668, -213.3868, -415.9367, -441.2054],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0606, device='cuda:0', dtype=torch.float64)
tensor([-252.7812, -508.8598, -212.8598, -415.6445, -441.0566],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0825, device='cuda:0', dtype=torch.float64)
tensor([-252.5700, -510.6473, -213.1612, -415.9209, -441.5441],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0908, device='cuda:0', dtype=torch.float64)
tensor([-252.3433, -514.7863, -213.8839, -416.6521, -442.6031],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0687, device='cuda:0', dtype=torch.float64)
tensor([-252.0822, -520.6951, -214.8953, -417.7010, -444.1251],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0939, device='cuda:0', dtype=torch.float64)
tensor([-252.0635, -532.5947, -217.3081, -419.7283, -446.6375],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0791, device='cuda:0', dtype=torch.float64)
tensor([-252.1623, -546.6191, -220.1838, -422.0168, -449.7242],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1162, device='cuda:0', dtype=torch.float64)
tensor([-251.9407, -553.3594, -221.4917, -422.9915, -451.3000],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1017, device='cuda:0', dtype=torch.float64)
tensor([-251.7373, -563.0436, -223.5371, -424.5045, -453.8405],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0815, device='cuda:0', dtype=torch.float64)
tensor([-251.2973, -569.1954, -224.4613, -425.2927, -455.6787],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0732, device='cuda:0', dtype=torch.float64)
tensor([-250.8701, -575.1441, -225.5020, -426.0329, -457.4269],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1396, device='cuda:0', dtype=torch.float64)
tensor([-251.0014, -589.6459, -229.5341, -428.1644, -461.1863],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0718, device='cuda:0', dtype=torch.float64)
tensor([-251.1657, -600.6534, -232.4948, -429.6976, -464.1834],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0568, device='cuda:0', dtype=torch.float64)
tensor([-251.3503, -609.6573, -234.7637, -430.8885, -466.6385],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0643, device='cuda:0', dtype=torch.float64)
tensor([-251.5466, -616.9725, -236.7466, -431.8751, -468.6443],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0646, device='cuda:0', dtype=torch.float64)
tensor([-251.4664, -618.9683, -237.0891, -432.0087, -469.3339],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0870, device='cuda:0', dtype=torch.float64)
tensor([-251.3113, -623.7712, -237.8299, -432.4664, -470.9003],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1124, device='cuda:0', dtype=torch.float64)
tensor([-251.2191, -626.7435, -238.2846, -432.8823, -471.9806],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0842, device='cuda:0', dtype=torch.float64)
tensor([-251.0110, -627.0017, -237.9698, -432.9319, -472.3989],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0783, device='cuda:0', dtype=torch.float64)
tensor([-250.8145, -626.8056, -237.6261, -432.7994, -472.4746],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0745, device='cuda:0', dtype=torch.float64)
tensor([-250.4547, -625.1956, -236.7169, -432.4268, -472.2642],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0766, device='cuda:0', dtype=torch.float64)
tensor([-250.0678, -622.2414, -235.4273, -431.9630, -471.7304],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0582, device='cuda:0', dtype=torch.float64)
tensor([-249.7259, -619.1242, -234.2149, -431.4638, -471.0321],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0699, device='cuda:0', dtype=torch.float64)
tensor([-249.2786, -615.8582, -232.7654, -430.9254, -470.3976],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0668, device='cuda:0', dtype=torch.float64)
tensor([-248.6649, -609.1437, -230.2937, -429.8413, -468.8897],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0688, device='cuda:0', dtype=torch.float64)
tensor([-248.1665, -601.6141, -227.6411, -428.7185, -467.2607],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0651, device='cuda:0', dtype=torch.float64)
tensor([-247.8457, -594.6241, -225.2371, -427.6776, -465.7708],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0664, device='cuda:0', dtype=torch.float64)
tensor([-247.3704, -588.8741, -222.8079, -426.6370, -464.6993],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0904, device='cuda:0', dtype=torch.float64)
tensor([-247.1101, -589.7813, -222.3745, -426.6446, -465.3152],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0492, device='cuda:0', dtype=torch.float64)
tensor([-246.7654, -590.1619, -221.6676, -426.5627, -465.8648],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0554, device='cuda:0', dtype=torch.float64)
tensor([-246.6126, -592.9154, -221.8069, -426.9197, -466.9596],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0627, device='cuda:0', dtype=torch.float64)
tensor([-246.5790, -596.7170, -222.3780, -427.6591, -468.3602],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0742, device='cuda:0', dtype=torch.float64)
tensor([-246.7013, -602.3089, -223.5943, -428.7280, -470.2468],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0857, device='cuda:0', dtype=torch.float64)
tensor([-246.7043, -604.4930, -223.8773, -429.2643, -471.1983],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0709, device='cuda:0', dtype=torch.float64)
tensor([-246.5931, -604.9484, -223.6693, -429.5282, -471.6552],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0763, device='cuda:0', dtype=torch.float64)
tensor([-246.4539, -606.3097, -223.7069, -429.9729, -472.3827],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1438, device='cuda:0', dtype=torch.float64)
tensor([-245.9486, -598.3551, -221.0959, -428.9819, -470.8242],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0670, device='cuda:0', dtype=torch.float64)
tensor([-245.4882, -590.9918, -218.6992, -428.0705, -469.6610],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0738, device='cuda:0', dtype=torch.float64)
tensor([-245.3122, -589.6555, -218.1523, -428.1060, -469.8041],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0797, device='cuda:0', dtype=torch.float64)
tensor([-245.1421, -590.6261, -218.2294, -428.3833, -470.3445],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0944, device='cuda:0', dtype=torch.float64)
tensor([-244.8349, -584.8031, -216.8016, -427.6814, -469.3059],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0615, device='cuda:0', dtype=torch.float64)
tensor([-244.3944, -578.0093, -215.0733, -426.5841, -468.1843],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0879, device='cuda:0', dtype=torch.float64)
tensor([-243.9475, -566.7908, -212.5751, -424.7960, -466.4137],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0880, device='cuda:0', dtype=torch.float64)
tensor([-243.6501, -562.8651, -211.6877, -424.0940, -465.9714],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0673, device='cuda:0', dtype=torch.float64)
tensor([-243.1922, -557.8452, -210.3950, -423.1213, -465.4422],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0750, device='cuda:0', dtype=torch.float64)
tensor([-242.6937, -549.6888, -208.4581, -421.5428, -464.5237],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0650, device='cuda:0', dtype=torch.float64)
tensor([-242.1796, -543.9788, -206.7972, -420.3454, -464.2544],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0670, device='cuda:0', dtype=torch.float64)
tensor([-241.5829, -537.3270, -204.5803, -418.7597, -464.0017],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0647, device='cuda:0', dtype=torch.float64)
tensor([-240.9682, -533.5295, -202.9060, -417.5999, -464.1217],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0980, device='cuda:0', dtype=torch.float64)
tensor([-240.4747, -532.6048, -202.1818, -417.1244, -464.4221],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0757, device='cuda:0', dtype=torch.float64)
tensor([-239.8198, -530.1991, -200.8774, -416.0786, -464.3901],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0503, device='cuda:0', dtype=torch.float64)
tensor([-239.2599, -528.3742, -199.8420, -415.1647, -464.3675],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0768, device='cuda:0', dtype=torch.float64)
tensor([-238.9218, -528.4281, -199.7396, -414.9259, -464.3735],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0994, device='cuda:0', dtype=torch.float64)
tensor([-238.8048, -533.1878, -201.2943, -416.2562, -465.0518],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0727, device='cuda:0', dtype=torch.float64)
tensor([-238.7799, -540.4656, -203.4750, -418.0665, -466.1554],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0604, device='cuda:0', dtype=torch.float64)
tensor([-238.8551, -551.4555, -206.3886, -420.4061, -467.7490],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0703, device='cuda:0', dtype=torch.float64)
tensor([-238.7918, -559.2822, -208.2452, -421.7282, -468.8007],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0611, device='cuda:0', dtype=torch.float64)
tensor([-238.8742, -567.1213, -210.1440, -423.1687, -469.9657],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0879, device='cuda:0', dtype=torch.float64)
tensor([-239.0789, -577.8462, -212.6678, -425.0310, -471.8508],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0928, device='cuda:0', dtype=torch.float64)
tensor([-239.4519, -592.2844, -216.1168, -427.4780, -474.8740],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0718, device='cuda:0', dtype=torch.float64)
tensor([-239.8581, -606.4207, -220.1602, -429.7005, -477.9956],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0615, device='cuda:0', dtype=torch.float64)
tensor([-240.2548, -619.0324, -224.0121, -431.5992, -481.0243],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0610, device='cuda:0', dtype=torch.float64)
tensor([-240.4494, -626.6222, -226.2951, -432.6220, -482.9408],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0797, device='cuda:0', dtype=torch.float64)
tensor([-240.7517, -637.3083, -229.4113, -434.1248, -485.6775],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0738, device='cuda:0', dtype=torch.float64)
tensor([-240.9412, -645.4309, -231.7873, -435.2150, -487.6639],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0566, device='cuda:0', dtype=torch.float64)
tensor([-240.8897, -650.8473, -233.2731, -435.8383, -489.0390],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0487, device='cuda:0', dtype=torch.float64)
tensor([-240.8689, -655.0762, -234.6699, -436.2429, -489.9578],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0635, device='cuda:0', dtype=torch.float64)
tensor([-240.8309, -659.4094, -235.9641, -436.6000, -490.9197],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0665, device='cuda:0', dtype=torch.float64)
tensor([-240.8016, -663.2899, -237.0790, -436.8053, -491.8207],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0676, device='cuda:0', dtype=torch.float64)
tensor([-240.5609, -664.6128, -237.4230, -436.7123, -492.1250],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0745, device='cuda:0', dtype=torch.float64)
tensor([-240.0721, -663.0224, -236.8366, -436.3324, -491.7136],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0561, device='cuda:0', dtype=torch.float64)
tensor([-239.5484, -659.8222, -235.8483, -435.7185, -490.9411],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0580, device='cuda:0', dtype=torch.float64)
tensor([-239.0651, -655.3858, -234.5727, -435.0314, -489.9122],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0628, device='cuda:0', dtype=torch.float64)
tensor([-238.5153, -650.1918, -232.8573, -434.2549, -488.9130],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0698, device='cuda:0', dtype=torch.float64)
tensor([-238.0646, -642.3312, -230.7113, -433.0470, -487.0131],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0829, device='cuda:0', dtype=torch.float64)
tensor([-237.6470, -630.8229, -227.6225, -431.2976, -484.1981],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0643, device='cuda:0', dtype=torch.float64)
tensor([-237.2330, -618.8738, -224.3889, -429.4987, -481.4053],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0989, device='cuda:0', dtype=torch.float64)
tensor([-236.9179, -611.4857, -222.2815, -428.3445, -479.7770],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0598, device='cuda:0', dtype=torch.float64)
tensor([-236.6366, -603.6708, -220.1085, -427.1608, -478.0414],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0524, device='cuda:0', dtype=torch.float64)
tensor([-236.2396, -595.7301, -217.8046, -425.9323, -476.4617],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0573, device='cuda:0', dtype=torch.float64)
tensor([-235.9165, -590.3079, -216.3618, -425.0409, -475.4233],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0580, device='cuda:0', dtype=torch.float64)
tensor([-235.6852, -588.4870, -215.8794, -424.7324, -475.1949],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0486, device='cuda:0', dtype=torch.float64)
tensor([-235.3335, -586.5609, -215.2489, -424.3818, -474.9818],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0513, device='cuda:0', dtype=torch.float64)
tensor([-234.9756, -583.2478, -214.3026, -423.6761, -474.4319],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0590, device='cuda:0', dtype=torch.float64)
tensor([-234.6386, -582.9351, -213.9917, -423.4724, -474.5457],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0616, device='cuda:0', dtype=torch.float64)
tensor([-234.4554, -583.7408, -214.1090, -423.5825, -474.8278],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0493, device='cuda:0', dtype=torch.float64)
tensor([-234.2720, -583.7317, -213.9891, -423.6187, -475.0146],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0943, device='cuda:0', dtype=torch.float64)
tensor([-233.9277, -578.2656, -212.4626, -422.6279, -474.1781],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0746, device='cuda:0', dtype=torch.float64)
tensor([-233.4533, -569.7997, -210.2185, -420.9270, -472.7855],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0599, device='cuda:0', dtype=torch.float64)
tensor([-232.9901, -564.6900, -208.6113, -419.8423, -472.2167],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0664, device='cuda:0', dtype=torch.float64)
tensor([-232.3566, -560.2701, -206.8909, -418.6425, -471.9490],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0749, device='cuda:0', dtype=torch.float64)
tensor([-231.6595, -554.7396, -204.7032, -417.0713, -471.6367],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0787, device='cuda:0', dtype=torch.float64)
tensor([-231.0794, -555.1366, -204.0088, -416.8930, -472.3961],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0622, device='cuda:0', dtype=torch.float64)
tensor([-230.4447, -555.6221, -203.1904, -416.7064, -473.3184],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0832, device='cuda:0', dtype=torch.float64)
tensor([-229.6580, -558.6762, -202.8516, -416.9759, -474.8571],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0902, device='cuda:0', dtype=torch.float64)
tensor([-228.9298, -565.7926, -203.6647, -418.1680, -476.9250],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0731, device='cuda:0', dtype=torch.float64)
tensor([-228.4256, -575.4277, -205.4409, -419.8788, -478.9860],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0656, device='cuda:0', dtype=torch.float64)
tensor([-228.0032, -586.4419, -207.5690, -421.8469, -481.2345],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0581, device='cuda:0', dtype=torch.float64)
tensor([-227.7110, -598.6297, -210.0955, -424.0701, -483.7688],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0587, device='cuda:0', dtype=torch.float64)
tensor([-227.3978, -611.1038, -212.6432, -426.2607, -486.7630],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0627, device='cuda:0', dtype=torch.float64)
tensor([-227.1150, -622.8058, -215.2530, -428.1718, -489.7849],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0616, device='cuda:0', dtype=torch.float64)
tensor([-226.9256, -632.8898, -217.6272, -429.8225, -492.5414],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0515, device='cuda:0', dtype=torch.float64)
tensor([-226.6214, -640.1535, -219.0355, -431.0272, -494.8183],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0605, device='cuda:0', dtype=torch.float64)
tensor([-226.3102, -645.4634, -219.7635, -431.9204, -496.6930],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0480, device='cuda:0', dtype=torch.float64)
tensor([-225.9814, -651.0595, -220.6176, -432.8034, -498.5727],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0687, device='cuda:0', dtype=torch.float64)
tensor([-225.6604, -654.2478, -221.0076, -433.3125, -499.7850],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0501, device='cuda:0', dtype=torch.float64)
tensor([-225.3231, -654.8541, -220.7771, -433.4497, -500.3763],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1002, device='cuda:0', dtype=torch.float64)
tensor([-224.9609, -653.2845, -219.9999, -433.1863, -500.4475],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0946, device='cuda:0', dtype=torch.float64)
tensor([-224.5181, -644.8861, -217.2380, -431.6829, -499.0689],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0603, device='cuda:0', dtype=torch.float64)
tensor([-224.2934, -638.2511, -215.1273, -430.4632, -497.9646],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0512, device='cuda:0', dtype=torch.float64)
tensor([-224.0425, -630.3740, -212.6917, -428.9204, -496.5179],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0972, device='cuda:0', dtype=torch.float64)
tensor([-223.9927, -623.4453, -210.7199, -427.7170, -495.4929],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0964, device='cuda:0', dtype=torch.float64)
tensor([-224.0473, -617.0003, -209.2804, -426.5011, -494.2313],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1047, device='cuda:0', dtype=torch.float64)
tensor([-223.9964, -613.5351, -208.4393, -425.7764, -493.6607],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0826, device='cuda:0', dtype=torch.float64)
tensor([-223.9997, -612.3350, -208.0700, -425.5147, -493.6439],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0471, device='cuda:0', dtype=torch.float64)
tensor([-223.9900, -610.5102, -207.5456, -425.1247, -493.5982],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0717, device='cuda:0', dtype=torch.float64)
tensor([-224.0569, -610.2227, -207.4997, -425.0832, -493.7054],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0620, device='cuda:0', dtype=torch.float64)
tensor([-224.1164, -611.2755, -207.6672, -425.3420, -494.2176],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0506, device='cuda:0', dtype=torch.float64)
tensor([-224.2093, -611.9424, -207.7746, -425.5782, -494.6259],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0602, device='cuda:0', dtype=torch.float64)
tensor([-224.2431, -615.1860, -208.3945, -426.2603, -495.5517],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0486, device='cuda:0', dtype=torch.float64)
tensor([-224.2020, -618.9516, -209.0724, -427.0002, -496.6133],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0556, device='cuda:0', dtype=torch.float64)
tensor([-224.2763, -622.5705, -209.8649, -427.7149, -497.5692],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0668, device='cuda:0', dtype=torch.float64)
tensor([-224.2353, -626.5512, -210.5533, -428.4286, -498.7810],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0713, device='cuda:0', dtype=torch.float64)
tensor([-224.2355, -629.6006, -211.1210, -428.9337, -499.7159],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0780, device='cuda:0', dtype=torch.float64)
tensor([-224.0808, -629.2336, -210.6936, -428.7522, -500.0206],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0610, device='cuda:0', dtype=torch.float64)
tensor([-223.9236, -632.0165, -211.0502, -429.2589, -501.1011],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0689, device='cuda:0', dtype=torch.float64)
tensor([-223.7795, -631.7834, -210.7183, -429.2226, -501.5007],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0454, device='cuda:0', dtype=torch.float64)
tensor([-223.5633, -630.7275, -210.2257, -428.9270, -501.6165],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0597, device='cuda:0', dtype=torch.float64)
tensor([-223.3001, -630.7067, -209.8635, -428.7364, -501.9682],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0762, device='cuda:0', dtype=torch.float64)
tensor([-223.2706, -632.3247, -210.2359, -428.9458, -502.3975],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0549, device='cuda:0', dtype=torch.float64)
tensor([-223.2259, -631.2154, -209.9330, -428.6622, -502.3282],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0487, device='cuda:0', dtype=torch.float64)
tensor([-223.2555, -629.9173, -209.6904, -428.4448, -502.1218],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0733, device='cuda:0', dtype=torch.float64)
tensor([-223.3284, -627.6038, -209.3490, -427.8980, -501.5545],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0777, device='cuda:0', dtype=torch.float64)
tensor([-223.4922, -625.0667, -209.0816, -427.3343, -500.8553],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0571, device='cuda:0', dtype=torch.float64)
tensor([-223.4531, -622.8320, -208.5368, -426.6626, -500.5063],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0531, device='cuda:0', dtype=torch.float64)
tensor([-223.4359, -620.1783, -207.8740, -425.8526, -500.1249],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0914, device='cuda:0', dtype=torch.float64)
tensor([-223.6016, -623.4332, -208.8609, -426.5048, -500.6940],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0591, device='cuda:0', dtype=torch.float64)
tensor([-223.7510, -625.6484, -209.5352, -427.0131, -501.1687],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0980, device='cuda:0', dtype=torch.float64)
tensor([-224.2372, -632.5423, -211.7766, -428.5237, -502.2689],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0525, device='cuda:0', dtype=torch.float64)
tensor([-224.7130, -637.9009, -213.7634, -429.6861, -503.0931],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0563, device='cuda:0', dtype=torch.float64)
tensor([-225.0382, -641.8833, -215.1765, -430.5662, -503.9410],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0649, device='cuda:0', dtype=torch.float64)
tensor([-225.3555, -647.2056, -217.0292, -431.5888, -505.0595],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0423, device='cuda:0', dtype=torch.float64)
tensor([-225.6130, -650.5899, -218.2954, -432.1808, -505.7706],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0649, device='cuda:0', dtype=torch.float64)
tensor([-225.8029, -653.7796, -219.4594, -432.6077, -506.4445],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0762, device='cuda:0', dtype=torch.float64)
tensor([-225.8314, -652.9131, -219.2529, -432.2671, -506.2546],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0612, device='cuda:0', dtype=torch.float64)
tensor([-225.9656, -651.7229, -219.1715, -431.9158, -505.8666],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0463, device='cuda:0', dtype=torch.float64)
tensor([-226.0743, -648.8472, -218.7199, -431.2143, -504.9909],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0603, device='cuda:0', dtype=torch.float64)
tensor([-226.0916, -645.6237, -218.0675, -430.2575, -504.0637],
       device='cuda:0', dtype=torch.float64)
Saved results to /home/idrissm/projects/def-mh541-ab/idrissm/neighborVCA/runs/results/tsp/tsp64_/home/idrissm/projects/def-mh541-ab/idrissm/neighborVCA/scripts/VCA/tsp/configHVCA64.json_20250925_100030.csv
rnn.0.0.weight tensor(0.8602, device='cuda:0', dtype=torch.float64)
tensor([-2.3503, -3.4717, -4.1553, -4.9913, -5.9320], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(13.2644, device='cuda:0', dtype=torch.float64)
tensor([-42.6452, -28.9265, -22.1051, -64.0985, -33.9892], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(319.9290, device='cuda:0', dtype=torch.float64)
tensor([-2.9475, -5.7093, -5.3783, -4.9621, -7.5288], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(29.6667, device='cuda:0', dtype=torch.float64)
tensor([-38.3255, -18.3745, -16.5236, -32.0345, -35.1510], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(276.5202, device='cuda:0', dtype=torch.float64)
tensor([-20.1034, -16.3765, -12.0246, -33.0558, -30.2299], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(213.3486, device='cuda:0', dtype=torch.float64)
tensor([-3.0997, -7.3926, -5.1952, -7.9560, -8.0858], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(44.9704, device='cuda:0', dtype=torch.float64)
tensor([-2.5933, -5.8595, -4.8415, -5.6570, -6.6457], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(35.0952, device='cuda:0', dtype=torch.float64)
tensor([-3.0060, -4.0302, -5.9492, -6.4727, -9.0114], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(64.6466, device='cuda:0', dtype=torch.float64)
tensor([ -7.3879,  -3.8067,  -7.2518,  -7.6870, -11.8995], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(89.1897, device='cuda:0', dtype=torch.float64)
tensor([ -6.9322,  -4.4718,  -7.5283,  -8.1687, -12.8964], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(89.9021, device='cuda:0', dtype=torch.float64)
tensor([ -3.3241,  -5.2442,  -6.5162,  -6.9988, -11.3873], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(65.0497, device='cuda:0', dtype=torch.float64)
tensor([-2.5539, -5.4362, -5.3565, -5.7743, -8.9610], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(36.5944, device='cuda:0', dtype=torch.float64)
tensor([-2.6037, -5.0416, -4.7694, -5.2488, -7.5185], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(22.6381, device='cuda:0', dtype=torch.float64)
tensor([-2.7610, -4.7703, -4.6302, -5.2828, -6.8863], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(18.5987, device='cuda:0', dtype=torch.float64)
tensor([-2.9208, -4.9974, -4.7168, -5.8159, -6.4855], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(23.2457, device='cuda:0', dtype=torch.float64)
tensor([-2.9597, -5.6184, -4.8594, -6.7727, -6.3014], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(32.2985, device='cuda:0', dtype=torch.float64)
tensor([-2.9530, -6.3219, -4.8748, -7.1940, -6.3805], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(38.9496, device='cuda:0', dtype=torch.float64)
tensor([-2.9397, -5.7702, -4.6725, -6.7022, -6.5469], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(37.5207, device='cuda:0', dtype=torch.float64)
tensor([-2.6630, -4.9076, -4.4050, -6.0137, -6.6018], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(27.7600, device='cuda:0', dtype=torch.float64)
tensor([-2.4968, -4.4641, -4.2724, -5.5491, -6.5960], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(20.3995, device='cuda:0', dtype=torch.float64)
tensor([-2.3693, -4.0740, -4.3538, -5.3726, -6.6336], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(15.1644, device='cuda:0', dtype=torch.float64)
tensor([-2.2548, -3.7649, -4.6381, -5.4934, -6.7035], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(13.2561, device='cuda:0', dtype=torch.float64)
tensor([-2.1685, -3.5477, -5.0307, -5.8863, -6.8141], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(14.0460, device='cuda:0', dtype=torch.float64)
tensor([-2.1314, -3.3969, -5.3909, -6.2675, -6.9682], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(18.3183, device='cuda:0', dtype=torch.float64)
tensor([-2.1237, -3.2972, -5.6084, -6.2831, -7.0652], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(21.7534, device='cuda:0', dtype=torch.float64)
tensor([-2.0978, -3.2499, -5.6572, -5.9605, -6.9547], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(21.8594, device='cuda:0', dtype=torch.float64)
tensor([-2.0705, -3.2665, -5.5597, -5.5832, -6.6172], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(18.6508, device='cuda:0', dtype=torch.float64)
tensor([-2.0760, -3.3514, -5.3563, -5.3307, -6.2615], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(14.0029, device='cuda:0', dtype=torch.float64)
tensor([-2.1253, -3.4770, -5.1033, -5.1906, -6.0511], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(10.4876, device='cuda:0', dtype=torch.float64)
tensor([-2.2035, -3.6069, -4.8577, -5.0834, -5.9805], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(9.4779, device='cuda:0', dtype=torch.float64)
tensor([-2.2797, -3.7145, -4.6495, -4.9647, -5.9933], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(10.8969, device='cuda:0', dtype=torch.float64)
tensor([-2.3343, -3.7853, -4.4838, -4.8456, -6.0363], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(12.3942, device='cuda:0', dtype=torch.float64)
tensor([-2.3653, -3.8156, -4.3575, -4.7207, -6.0690], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(12.5244, device='cuda:0', dtype=torch.float64)
tensor([-2.3768, -3.8133, -4.2704, -4.5821, -6.0747], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(10.8549, device='cuda:0', dtype=torch.float64)
tensor([-2.3738, -3.7931, -4.2268, -4.4574, -6.0600], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(7.8569, device='cuda:0', dtype=torch.float64)
tensor([-2.3628, -3.7661, -4.2310, -4.3863, -6.0369], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(4.9757, device='cuda:0', dtype=torch.float64)
tensor([-2.3486, -3.7416, -4.2779, -4.3866, -6.0134], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(5.6980, device='cuda:0', dtype=torch.float64)
tensor([-2.3312, -3.7287, -4.3397, -4.4399, -5.9956], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(7.5005, device='cuda:0', dtype=torch.float64)
tensor([-2.3089, -3.7346, -4.3722, -4.5130, -5.9864], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(8.3477, device='cuda:0', dtype=torch.float64)
tensor([-2.2812, -3.7520, -4.3502, -4.5885, -5.9822], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(7.7873, device='cuda:0', dtype=torch.float64)
tensor([-2.2517, -3.7581, -4.2916, -4.6727, -5.9742], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(6.5633, device='cuda:0', dtype=torch.float64)
tensor([-2.2265, -3.7433, -4.2358, -4.7772, -5.9558], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(5.2617, device='cuda:0', dtype=torch.float64)
tensor([-2.2105, -3.7220, -4.2085, -4.9007, -5.9295], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(4.3079, device='cuda:0', dtype=torch.float64)
tensor([-2.2045, -3.7087, -4.2140, -5.0283, -5.9057], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(3.9236, device='cuda:0', dtype=torch.float64)
tensor([-2.2051, -3.7043, -4.2457, -5.1394, -5.8920], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(3.9557, device='cuda:0', dtype=torch.float64)
tensor([-2.2065, -3.6991, -4.2925, -5.2159, -5.8861], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(4.2392, device='cuda:0', dtype=torch.float64)
tensor([-2.2047, -3.6818, -4.3413, -5.2450, -5.8827], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(4.4547, device='cuda:0', dtype=torch.float64)
tensor([-2.1997, -3.6506, -4.3814, -5.2257, -5.8807], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(4.4355, device='cuda:0', dtype=torch.float64)
tensor([-2.1934, -3.6157, -4.4045, -5.1663, -5.8828], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(4.1324, device='cuda:0', dtype=torch.float64)
tensor([-2.1867, -3.5881, -4.4007, -5.0786, -5.8894], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(3.5898, device='cuda:0', dtype=torch.float64)
tensor([-2.1800, -3.5714, -4.3640, -4.9782, -5.8976], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(3.0413, device='cuda:0', dtype=torch.float64)
tensor([-2.1736, -3.5638, -4.3014, -4.8810, -5.9022], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.7369, device='cuda:0', dtype=torch.float64)
tensor([-2.1678, -3.5621, -4.2305, -4.7980, -5.8994], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.8119, device='cuda:0', dtype=torch.float64)
tensor([-2.1638, -3.5641, -4.1658, -4.7302, -5.8873], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.9949, device='cuda:0', dtype=torch.float64)
tensor([-2.1635, -3.5684, -4.1133, -4.6740, -5.8667], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.9697, device='cuda:0', dtype=torch.float64)
tensor([-2.1686, -3.5754, -4.0735, -4.6296, -5.8408], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.6459, device='cuda:0', dtype=torch.float64)
tensor([-2.1796, -3.5853, -4.0448, -4.6025, -5.8123], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.2863, device='cuda:0', dtype=torch.float64)
tensor([-2.1941, -3.5956, -4.0255, -4.5962, -5.7834], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1768, device='cuda:0', dtype=torch.float64)
tensor([-2.2083, -3.6018, -4.0164, -4.6070, -5.7558], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1608, device='cuda:0', dtype=torch.float64)
tensor([-2.2185, -3.6001, -4.0206, -4.6279, -5.7312], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1210, device='cuda:0', dtype=torch.float64)
tensor([-2.2232, -3.5894, -4.0399, -4.6528, -5.7110], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0796, device='cuda:0', dtype=torch.float64)
tensor([-2.2222, -3.5712, -4.0722, -4.6782, -5.6956], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9927, device='cuda:0', dtype=torch.float64)
tensor([-2.2173, -3.5490, -4.1119, -4.7018, -5.6854], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8102, device='cuda:0', dtype=torch.float64)
tensor([-2.2102, -3.5271, -4.1530, -4.7211, -5.6790], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6682, device='cuda:0', dtype=torch.float64)
tensor([-2.2021, -3.5091, -4.1888, -4.7346, -5.6743], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6718, device='cuda:0', dtype=torch.float64)
tensor([-2.1942, -3.4975, -4.2096, -4.7411, -5.6689], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7876, device='cuda:0', dtype=torch.float64)
tensor([-2.1869, -3.4922, -4.2066, -4.7406, -5.6610], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8870, device='cuda:0', dtype=torch.float64)
tensor([-2.1815, -3.4912, -4.1772, -4.7336, -5.6514], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8661, device='cuda:0', dtype=torch.float64)
tensor([-2.1787, -3.4914, -4.1302, -4.7214, -5.6425], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7340, device='cuda:0', dtype=torch.float64)
tensor([-2.1784, -3.4906, -4.0805, -4.7057, -5.6361], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4960, device='cuda:0', dtype=torch.float64)
tensor([-2.1800, -3.4877, -4.0401, -4.6902, -5.6327], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3413, device='cuda:0', dtype=torch.float64)
tensor([-2.1826, -3.4833, -4.0156, -4.6775, -5.6328], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4093, device='cuda:0', dtype=torch.float64)
tensor([-2.1853, -3.4789, -4.0081, -4.6681, -5.6351], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5791, device='cuda:0', dtype=torch.float64)
tensor([-2.1877, -3.4758, -4.0162, -4.6620, -5.6387], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5960, device='cuda:0', dtype=torch.float64)
tensor([-2.1895, -3.4740, -4.0355, -4.6588, -5.6423], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4400, device='cuda:0', dtype=torch.float64)
tensor([-2.1907, -3.4731, -4.0595, -4.6589, -5.6441], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2761, device='cuda:0', dtype=torch.float64)
tensor([-2.1913, -3.4715, -4.0802, -4.6617, -5.6429], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2632, device='cuda:0', dtype=torch.float64)
tensor([-2.1910, -3.4677, -4.0910, -4.6649, -5.6393], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3049, device='cuda:0', dtype=torch.float64)
tensor([-2.1899, -3.4613, -4.0908, -4.6669, -5.6340], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2796, device='cuda:0', dtype=torch.float64)
tensor([-2.1885, -3.4536, -4.0825, -4.6665, -5.6282], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1925, device='cuda:0', dtype=torch.float64)
tensor([-2.1873, -3.4467, -4.0699, -4.6642, -5.6228], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1534, device='cuda:0', dtype=torch.float64)
tensor([-2.1863, -3.4417, -4.0565, -4.6614, -5.6177], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1343, device='cuda:0', dtype=torch.float64)
tensor([-2.1857, -3.4391, -4.0440, -4.6583, -5.6127], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1021, device='cuda:0', dtype=torch.float64)
tensor([-2.1856, -3.4394, -4.0344, -4.6536, -5.6085], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0926, device='cuda:0', dtype=torch.float64)
tensor([-2.1860, -3.4415, -4.0273, -4.6469, -5.6042], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0983, device='cuda:0', dtype=torch.float64)
tensor([-2.1863, -3.4437, -4.0232, -4.6383, -5.5995], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1084, device='cuda:0', dtype=torch.float64)
tensor([-2.1859, -3.4446, -4.0206, -4.6293, -5.5936], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0818, device='cuda:0', dtype=torch.float64)
tensor([-2.1846, -3.4442, -4.0190, -4.6207, -5.5869], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0692, device='cuda:0', dtype=torch.float64)
tensor([-2.1827, -3.4429, -4.0189, -4.6142, -5.5791], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0378, device='cuda:0', dtype=torch.float64)
tensor([-2.1809, -3.4415, -4.0199, -4.6087, -5.5713], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0168, device='cuda:0', dtype=torch.float64)
tensor([-2.1796, -3.4397, -4.0215, -4.6046, -5.5642], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0425, device='cuda:0', dtype=torch.float64)
tensor([-2.1784, -3.4377, -4.0230, -4.6024, -5.5586], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0496, device='cuda:0', dtype=torch.float64)
tensor([-2.1768, -3.4352, -4.0232, -4.6033, -5.5537], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0138, device='cuda:0', dtype=torch.float64)
tensor([-2.1742, -3.4323, -4.0204, -4.6075, -5.5492], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9970, device='cuda:0', dtype=torch.float64)
tensor([-2.1701, -3.4283, -4.0152, -4.6156, -5.5444], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9640, device='cuda:0', dtype=torch.float64)
tensor([-2.1649, -3.4244, -4.0074, -4.6255, -5.5397], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9615, device='cuda:0', dtype=torch.float64)
tensor([-2.1592, -3.4205, -4.0005, -4.6356, -5.5354], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9452, device='cuda:0', dtype=torch.float64)
tensor([-2.1540, -3.4173, -3.9965, -4.6437, -5.5321], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9310, device='cuda:0', dtype=torch.float64)
tensor([-2.1500, -3.4148, -3.9966, -4.6482, -5.5297], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9302, device='cuda:0', dtype=torch.float64)
tensor([-2.1484, -3.4128, -3.9992, -4.6483, -5.5279], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9314, device='cuda:0', dtype=torch.float64)
tensor([-2.1488, -3.4114, -4.0025, -4.6440, -5.5257], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9241, device='cuda:0', dtype=torch.float64)
tensor([-2.1508, -3.4104, -4.0046, -4.6375, -5.5225], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9223, device='cuda:0', dtype=torch.float64)
tensor([-2.1536, -3.4093, -4.0034, -4.6305, -5.5178], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9224, device='cuda:0', dtype=torch.float64)
tensor([-2.1565, -3.4081, -3.9992, -4.6244, -5.5120], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9067, device='cuda:0', dtype=torch.float64)
tensor([-2.1590, -3.4065, -3.9925, -4.6190, -5.5060], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8927, device='cuda:0', dtype=torch.float64)
tensor([-2.1610, -3.4052, -3.9851, -4.6140, -5.5012], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9046, device='cuda:0', dtype=torch.float64)
tensor([-2.1621, -3.4040, -3.9782, -4.6104, -5.4979], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8944, device='cuda:0', dtype=torch.float64)
tensor([-2.1618, -3.4024, -3.9736, -4.6088, -5.4952], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8905, device='cuda:0', dtype=torch.float64)
tensor([-2.1608, -3.4003, -3.9702, -4.6084, -5.4922], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8828, device='cuda:0', dtype=torch.float64)
tensor([-2.1584, -3.3970, -3.9679, -4.6091, -5.4882], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8719, device='cuda:0', dtype=torch.float64)
tensor([-2.1556, -3.3930, -3.9655, -4.6099, -5.4830], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8709, device='cuda:0', dtype=torch.float64)
tensor([-2.1528, -3.3881, -3.9632, -4.6097, -5.4767], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8629, device='cuda:0', dtype=torch.float64)
tensor([-2.1508, -3.3833, -3.9617, -4.6078, -5.4692], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8721, device='cuda:0', dtype=torch.float64)
tensor([-2.1502, -3.3796, -3.9605, -4.6045, -5.4615], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8709, device='cuda:0', dtype=torch.float64)
tensor([-2.1507, -3.3775, -3.9601, -4.5997, -5.4550], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8702, device='cuda:0', dtype=torch.float64)
tensor([-2.1518, -3.3765, -3.9596, -4.5950, -5.4502], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8507, device='cuda:0', dtype=torch.float64)
tensor([-2.1531, -3.3759, -3.9586, -4.5906, -5.4462], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8592, device='cuda:0', dtype=torch.float64)
tensor([-2.1536, -3.3743, -3.9579, -4.5878, -5.4435], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8536, device='cuda:0', dtype=torch.float64)
tensor([-2.1532, -3.3718, -3.9563, -4.5863, -5.4411], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8590, device='cuda:0', dtype=torch.float64)
tensor([-2.1523, -3.3700, -3.9533, -4.5856, -5.4385], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8500, device='cuda:0', dtype=torch.float64)
tensor([-2.1515, -3.3689, -3.9484, -4.5846, -5.4353], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8499, device='cuda:0', dtype=torch.float64)
tensor([-2.1510, -3.3680, -3.9419, -4.5820, -5.4324], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8496, device='cuda:0', dtype=torch.float64)
tensor([-2.1509, -3.3676, -3.9362, -4.5778, -5.4288], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8491, device='cuda:0', dtype=torch.float64)
tensor([-2.1508, -3.3668, -3.9326, -4.5727, -5.4251], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8568, device='cuda:0', dtype=torch.float64)
tensor([-2.1504, -3.3656, -3.9307, -4.5674, -5.4200], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8493, device='cuda:0', dtype=torch.float64)
tensor([-2.1490, -3.3635, -3.9301, -4.5634, -5.4145], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8491, device='cuda:0', dtype=torch.float64)
tensor([-2.1472, -3.3610, -3.9295, -4.5609, -5.4082], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8518, device='cuda:0', dtype=torch.float64)
tensor([-2.1456, -3.3587, -3.9270, -4.5592, -5.4018], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8362, device='cuda:0', dtype=torch.float64)
tensor([-2.1445, -3.3569, -3.9239, -4.5572, -5.3966], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8539, device='cuda:0', dtype=torch.float64)
tensor([-2.1438, -3.3556, -3.9219, -4.5549, -5.3921], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8402, device='cuda:0', dtype=torch.float64)
tensor([-2.1432, -3.3546, -3.9209, -4.5529, -5.3886], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8432, device='cuda:0', dtype=torch.float64)
tensor([-2.1424, -3.3528, -3.9212, -4.5519, -5.3858], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8536, device='cuda:0', dtype=torch.float64)
tensor([-2.1408, -3.3501, -3.9205, -4.5526, -5.3817], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8357, device='cuda:0', dtype=torch.float64)
tensor([-2.1393, -3.3476, -3.9175, -4.5527, -5.3764], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8460, device='cuda:0', dtype=torch.float64)
tensor([-2.1379, -3.3457, -3.9127, -4.5520, -5.3702], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8446, device='cuda:0', dtype=torch.float64)
tensor([-2.1374, -3.3445, -3.9063, -4.5486, -5.3647], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8452, device='cuda:0', dtype=torch.float64)
tensor([-2.1378, -3.3432, -3.9004, -4.5434, -5.3603], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8383, device='cuda:0', dtype=torch.float64)
tensor([-2.1384, -3.3424, -3.8965, -4.5377, -5.3552], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8499, device='cuda:0', dtype=torch.float64)
tensor([-2.1388, -3.3413, -3.8940, -4.5330, -5.3500], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8540, device='cuda:0', dtype=torch.float64)
tensor([-2.1386, -3.3405, -3.8926, -4.5301, -5.3444], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8588, device='cuda:0', dtype=torch.float64)
tensor([-2.1382, -3.3398, -3.8914, -4.5281, -5.3384], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8617, device='cuda:0', dtype=torch.float64)
tensor([-2.1375, -3.3386, -3.8899, -4.5260, -5.3329], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8732, device='cuda:0', dtype=torch.float64)
tensor([-2.1369, -3.3378, -3.8878, -4.5246, -5.3278], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8791, device='cuda:0', dtype=torch.float64)
tensor([-2.1363, -3.3369, -3.8859, -4.5233, -5.3225], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8540, device='cuda:0', dtype=torch.float64)
tensor([-2.1356, -3.3366, -3.8848, -4.5222, -5.3183], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8571, device='cuda:0', dtype=torch.float64)
tensor([-2.1350, -3.3356, -3.8834, -4.5202, -5.3142], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8710, device='cuda:0', dtype=torch.float64)
tensor([-2.1341, -3.3337, -3.8823, -4.5179, -5.3097], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8410, device='cuda:0', dtype=torch.float64)
tensor([-2.1328, -3.3311, -3.8816, -4.5166, -5.3053], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8428, device='cuda:0', dtype=torch.float64)
tensor([-2.1314, -3.3285, -3.8813, -4.5153, -5.3009], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8404, device='cuda:0', dtype=torch.float64)
tensor([-2.1303, -3.3258, -3.8804, -4.5138, -5.2966], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8553, device='cuda:0', dtype=torch.float64)
tensor([-2.1296, -3.3237, -3.8784, -4.5115, -5.2923], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8361, device='cuda:0', dtype=torch.float64)
tensor([-2.1298, -3.3215, -3.8759, -4.5093, -5.2872], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8319, device='cuda:0', dtype=torch.float64)
tensor([-2.1304, -3.3200, -3.8724, -4.5064, -5.2820], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8409, device='cuda:0', dtype=torch.float64)
tensor([-2.1310, -3.3189, -3.8688, -4.5024, -5.2776], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8176, device='cuda:0', dtype=torch.float64)
tensor([-2.1308, -3.3178, -3.8656, -4.4984, -5.2744], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8260, device='cuda:0', dtype=torch.float64)
tensor([-2.1300, -3.3159, -3.8636, -4.4955, -5.2713], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8196, device='cuda:0', dtype=torch.float64)
tensor([-2.1291, -3.3149, -3.8624, -4.4928, -5.2677], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8171, device='cuda:0', dtype=torch.float64)
tensor([-2.1276, -3.3132, -3.8613, -4.4902, -5.2638], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8228, device='cuda:0', dtype=torch.float64)
tensor([-2.1264, -3.3109, -3.8599, -4.4877, -5.2601], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8146, device='cuda:0', dtype=torch.float64)
tensor([-2.1250, -3.3083, -3.8581, -4.4871, -5.2557], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7959, device='cuda:0', dtype=torch.float64)
tensor([-2.1237, -3.3056, -3.8548, -4.4870, -5.2518], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7942, device='cuda:0', dtype=torch.float64)
tensor([-2.1233, -3.3031, -3.8506, -4.4866, -5.2483], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8013, device='cuda:0', dtype=torch.float64)
tensor([-2.1226, -3.3003, -3.8471, -4.4866, -5.2452], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8049, device='cuda:0', dtype=torch.float64)
tensor([-2.1224, -3.2979, -3.8436, -4.4849, -5.2419], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8044, device='cuda:0', dtype=torch.float64)
tensor([-2.1222, -3.2959, -3.8418, -4.4832, -5.2384], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8112, device='cuda:0', dtype=torch.float64)
tensor([-2.1224, -3.2949, -3.8402, -4.4803, -5.2352], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7899, device='cuda:0', dtype=torch.float64)
tensor([-2.1219, -3.2945, -3.8380, -4.4775, -5.2315], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7872, device='cuda:0', dtype=torch.float64)
tensor([-2.1215, -3.2948, -3.8356, -4.4740, -5.2271], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8005, device='cuda:0', dtype=torch.float64)
tensor([-2.1212, -3.2955, -3.8339, -4.4702, -5.2231], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7845, device='cuda:0', dtype=torch.float64)
tensor([-2.1212, -3.2954, -3.8321, -4.4677, -5.2199], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7818, device='cuda:0', dtype=torch.float64)
tensor([-2.1209, -3.2944, -3.8315, -4.4673, -5.2175], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8017, device='cuda:0', dtype=torch.float64)
tensor([-2.1198, -3.2909, -3.8315, -4.4693, -5.2144], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7841, device='cuda:0', dtype=torch.float64)
tensor([-2.1182, -3.2856, -3.8316, -4.4706, -5.2104], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8103, device='cuda:0', dtype=torch.float64)
tensor([-2.1171, -3.2809, -3.8301, -4.4690, -5.2059], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7785, device='cuda:0', dtype=torch.float64)
tensor([-2.1158, -3.2779, -3.8272, -4.4645, -5.2003], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7807, device='cuda:0', dtype=torch.float64)
tensor([-2.1142, -3.2759, -3.8230, -4.4590, -5.1942], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7849, device='cuda:0', dtype=torch.float64)
tensor([-2.1125, -3.2744, -3.8186, -4.4543, -5.1876], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7719, device='cuda:0', dtype=torch.float64)
tensor([-2.1112, -3.2737, -3.8153, -4.4506, -5.1811], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7856, device='cuda:0', dtype=torch.float64)
tensor([-2.1103, -3.2738, -3.8129, -4.4453, -5.1771], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7876, device='cuda:0', dtype=torch.float64)
tensor([-2.1095, -3.2746, -3.8119, -4.4418, -5.1734], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7779, device='cuda:0', dtype=torch.float64)
tensor([-2.1101, -3.2756, -3.8103, -4.4388, -5.1698], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7692, device='cuda:0', dtype=torch.float64)
tensor([-2.1111, -3.2752, -3.8084, -4.4367, -5.1641], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7916, device='cuda:0', dtype=torch.float64)
tensor([-2.1127, -3.2747, -3.8064, -4.4344, -5.1586], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7913, device='cuda:0', dtype=torch.float64)
tensor([-2.1148, -3.2738, -3.8035, -4.4287, -5.1533], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7782, device='cuda:0', dtype=torch.float64)
tensor([-2.1156, -3.2713, -3.8006, -4.4248, -5.1473], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7692, device='cuda:0', dtype=torch.float64)
tensor([-2.1149, -3.2691, -3.7982, -4.4225, -5.1431], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7824, device='cuda:0', dtype=torch.float64)
tensor([-2.1141, -3.2674, -3.7964, -4.4199, -5.1411], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7790, device='cuda:0', dtype=torch.float64)
tensor([-2.1120, -3.2657, -3.7966, -4.4181, -5.1387], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7645, device='cuda:0', dtype=torch.float64)
tensor([-2.1088, -3.2644, -3.7968, -4.4191, -5.1350], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7536, device='cuda:0', dtype=torch.float64)
tensor([-2.1056, -3.2632, -3.7963, -4.4201, -5.1302], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7774, device='cuda:0', dtype=torch.float64)
tensor([-2.1031, -3.2609, -3.7960, -4.4218, -5.1244], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7790, device='cuda:0', dtype=torch.float64)
tensor([-2.1007, -3.2570, -3.7962, -4.4231, -5.1186], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7731, device='cuda:0', dtype=torch.float64)
tensor([-2.0999, -3.2547, -3.7958, -4.4224, -5.1153], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7753, device='cuda:0', dtype=torch.float64)
tensor([-2.1005, -3.2535, -3.7943, -4.4181, -5.1136], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7817, device='cuda:0', dtype=torch.float64)
tensor([-2.1021, -3.2529, -3.7910, -4.4116, -5.1117], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7745, device='cuda:0', dtype=torch.float64)
tensor([-2.1040, -3.2521, -3.7864, -4.4066, -5.1090], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7745, device='cuda:0', dtype=torch.float64)
tensor([-2.1051, -3.2520, -3.7816, -4.4047, -5.1045], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7478, device='cuda:0', dtype=torch.float64)
tensor([-2.1067, -3.2517, -3.7768, -4.4040, -5.0979], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7753, device='cuda:0', dtype=torch.float64)
tensor([-2.1079, -3.2519, -3.7741, -4.4019, -5.0904], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7762, device='cuda:0', dtype=torch.float64)
tensor([-2.1082, -3.2522, -3.7738, -4.3986, -5.0853], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7468, device='cuda:0', dtype=torch.float64)
tensor([-2.1078, -3.2516, -3.7739, -4.3950, -5.0813], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7473, device='cuda:0', dtype=torch.float64)
tensor([-2.1052, -3.2492, -3.7744, -4.3936, -5.0775], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7704, device='cuda:0', dtype=torch.float64)
tensor([-2.1025, -3.2465, -3.7734, -4.3925, -5.0732], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7502, device='cuda:0', dtype=torch.float64)
tensor([-2.1003, -3.2439, -3.7700, -4.3909, -5.0694], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7755, device='cuda:0', dtype=torch.float64)
tensor([-2.0993, -3.2407, -3.7666, -4.3889, -5.0655], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7678, device='cuda:0', dtype=torch.float64)
tensor([-2.0995, -3.2387, -3.7660, -4.3863, -5.0608], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7765, device='cuda:0', dtype=torch.float64)
tensor([-2.0996, -3.2354, -3.7691, -4.3833, -5.0563], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7459, device='cuda:0', dtype=torch.float64)
tensor([-2.0991, -3.2328, -3.7709, -4.3816, -5.0528], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7611, device='cuda:0', dtype=torch.float64)
tensor([-2.0970, -3.2307, -3.7713, -4.3829, -5.0502], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7814, device='cuda:0', dtype=torch.float64)
tensor([-2.0948, -3.2278, -3.7682, -4.3837, -5.0457], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8068, device='cuda:0', dtype=torch.float64)
tensor([-2.0928, -3.2251, -3.7626, -4.3825, -5.0414], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7627, device='cuda:0', dtype=torch.float64)
tensor([-2.0912, -3.2222, -3.7563, -4.3799, -5.0376], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7781, device='cuda:0', dtype=torch.float64)
tensor([-2.0905, -3.2218, -3.7520, -4.3774, -5.0335], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7475, device='cuda:0', dtype=torch.float64)
tensor([-2.0916, -3.2232, -3.7483, -4.3734, -5.0288], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7353, device='cuda:0', dtype=torch.float64)
tensor([-2.0934, -3.2262, -3.7466, -4.3688, -5.0238], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7638, device='cuda:0', dtype=torch.float64)
tensor([-2.0955, -3.2289, -3.7470, -4.3649, -5.0187], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7342, device='cuda:0', dtype=torch.float64)
tensor([-2.0957, -3.2281, -3.7469, -4.3604, -5.0147], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7498, device='cuda:0', dtype=torch.float64)
tensor([-2.0946, -3.2241, -3.7467, -4.3586, -5.0103], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7334, device='cuda:0', dtype=torch.float64)
tensor([-2.0924, -3.2209, -3.7461, -4.3580, -5.0053], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7399, device='cuda:0', dtype=torch.float64)
tensor([-2.0907, -3.2199, -3.7443, -4.3573, -5.0006], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7571, device='cuda:0', dtype=torch.float64)
tensor([-2.0902, -3.2196, -3.7423, -4.3549, -4.9944], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7676, device='cuda:0', dtype=torch.float64)
tensor([-2.0899, -3.2180, -3.7401, -4.3532, -4.9866], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7508, device='cuda:0', dtype=torch.float64)
tensor([-2.0897, -3.2141, -3.7382, -4.3519, -4.9796], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7273, device='cuda:0', dtype=torch.float64)
tensor([-2.0891, -3.2104, -3.7360, -4.3509, -4.9756], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7534, device='cuda:0', dtype=torch.float64)
tensor([-2.0887, -3.2097, -3.7331, -4.3502, -4.9756], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7267, device='cuda:0', dtype=torch.float64)
tensor([-2.0881, -3.2106, -3.7303, -4.3482, -4.9745], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7549, device='cuda:0', dtype=torch.float64)
tensor([-2.0882, -3.2108, -3.7278, -4.3465, -4.9712], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7689, device='cuda:0', dtype=torch.float64)
tensor([-2.0879, -3.2112, -3.7255, -4.3438, -4.9650], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7900, device='cuda:0', dtype=torch.float64)
tensor([-2.0887, -3.2103, -3.7241, -4.3390, -4.9589], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7550, device='cuda:0', dtype=torch.float64)
tensor([-2.0908, -3.2096, -3.7208, -4.3322, -4.9543], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7652, device='cuda:0', dtype=torch.float64)
tensor([-2.0919, -3.2084, -3.7167, -4.3281, -4.9518], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7400, device='cuda:0', dtype=torch.float64)
tensor([-2.0920, -3.2065, -3.7133, -4.3268, -4.9505], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7757, device='cuda:0', dtype=torch.float64)
tensor([-2.0901, -3.2044, -3.7132, -4.3269, -4.9468], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7678, device='cuda:0', dtype=torch.float64)
tensor([-2.0880, -3.2033, -3.7160, -4.3269, -4.9422], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8049, device='cuda:0', dtype=torch.float64)
tensor([-2.0870, -3.2007, -3.7206, -4.3253, -4.9371], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7523, device='cuda:0', dtype=torch.float64)
tensor([-2.0859, -3.1991, -3.7219, -4.3234, -4.9307], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7373, device='cuda:0', dtype=torch.float64)
tensor([-2.0856, -3.1995, -3.7184, -4.3205, -4.9231], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7128, device='cuda:0', dtype=torch.float64)
tensor([-2.0849, -3.1992, -3.7121, -4.3168, -4.9197], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7850, device='cuda:0', dtype=torch.float64)
tensor([-2.0835, -3.1970, -3.7085, -4.3134, -4.9161], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7571, device='cuda:0', dtype=torch.float64)
tensor([-2.0810, -3.1938, -3.7072, -4.3113, -4.9146], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7027, device='cuda:0', dtype=torch.float64)
tensor([-2.0784, -3.1903, -3.7076, -4.3114, -4.9111], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7766, device='cuda:0', dtype=torch.float64)
tensor([-2.0762, -3.1873, -3.7076, -4.3138, -4.9061], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7570, device='cuda:0', dtype=torch.float64)
tensor([-2.0758, -3.1854, -3.7065, -4.3131, -4.9017], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7419, device='cuda:0', dtype=torch.float64)
tensor([-2.0768, -3.1832, -3.7046, -4.3086, -4.8980], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7425, device='cuda:0', dtype=torch.float64)
tensor([-2.0783, -3.1817, -3.7041, -4.3009, -4.8944], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7358, device='cuda:0', dtype=torch.float64)
tensor([-2.0806, -3.1812, -3.7027, -4.2922, -4.8917], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7280, device='cuda:0', dtype=torch.float64)
tensor([-2.0821, -3.1817, -3.7002, -4.2877, -4.8874], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7146, device='cuda:0', dtype=torch.float64)
tensor([-2.0821, -3.1834, -3.6953, -4.2860, -4.8806], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7162, device='cuda:0', dtype=torch.float64)
tensor([-2.0812, -3.1844, -3.6892, -4.2860, -4.8736], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7578, device='cuda:0', dtype=torch.float64)
tensor([-2.0800, -3.1827, -3.6842, -4.2856, -4.8693], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7140, device='cuda:0', dtype=torch.float64)
tensor([-2.0779, -3.1804, -3.6832, -4.2872, -4.8660], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7411, device='cuda:0', dtype=torch.float64)
tensor([-2.0754, -3.1775, -3.6841, -4.2898, -4.8618], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7276, device='cuda:0', dtype=torch.float64)
tensor([-2.0735, -3.1737, -3.6868, -4.2906, -4.8572], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7168, device='cuda:0', dtype=torch.float64)
tensor([-2.0724, -3.1720, -3.6894, -4.2897, -4.8549], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7416, device='cuda:0', dtype=torch.float64)
tensor([-2.0721, -3.1698, -3.6935, -4.2858, -4.8528], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7234, device='cuda:0', dtype=torch.float64)
tensor([-2.0717, -3.1677, -3.6955, -4.2829, -4.8503], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7051, device='cuda:0', dtype=torch.float64)
tensor([-2.0710, -3.1659, -3.6907, -4.2821, -4.8480], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7238, device='cuda:0', dtype=torch.float64)
tensor([-2.0710, -3.1657, -3.6820, -4.2838, -4.8448], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7163, device='cuda:0', dtype=torch.float64)
tensor([-2.0697, -3.1673, -3.6744, -4.2874, -4.8398], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7324, device='cuda:0', dtype=torch.float64)
tensor([-2.0695, -3.1692, -3.6697, -4.2868, -4.8342], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7059, device='cuda:0', dtype=torch.float64)
tensor([-2.0697, -3.1710, -3.6671, -4.2820, -4.8310], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7051, device='cuda:0', dtype=torch.float64)
tensor([-2.0693, -3.1701, -3.6660, -4.2771, -4.8274], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7166, device='cuda:0', dtype=torch.float64)
tensor([-2.0684, -3.1663, -3.6660, -4.2708, -4.8229], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7474, device='cuda:0', dtype=torch.float64)
tensor([-2.0684, -3.1619, -3.6658, -4.2627, -4.8193], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7508, device='cuda:0', dtype=torch.float64)
tensor([-2.0694, -3.1597, -3.6656, -4.2551, -4.8143], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7159, device='cuda:0', dtype=torch.float64)
tensor([-2.0702, -3.1592, -3.6665, -4.2514, -4.8082], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7229, device='cuda:0', dtype=torch.float64)
tensor([-2.0705, -3.1594, -3.6664, -4.2520, -4.8018], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7287, device='cuda:0', dtype=torch.float64)
tensor([-2.0703, -3.1599, -3.6646, -4.2528, -4.7978], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7573, device='cuda:0', dtype=torch.float64)
tensor([-2.0683, -3.1603, -3.6609, -4.2543, -4.7958], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7439, device='cuda:0', dtype=torch.float64)
tensor([-2.0655, -3.1600, -3.6570, -4.2537, -4.7948], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7571, device='cuda:0', dtype=torch.float64)
tensor([-2.0620, -3.1596, -3.6544, -4.2543, -4.7923], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7214, device='cuda:0', dtype=torch.float64)
tensor([-2.0594, -3.1600, -3.6492, -4.2545, -4.7898], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7549, device='cuda:0', dtype=torch.float64)
tensor([-2.0580, -3.1590, -3.6471, -4.2513, -4.7883], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7518, device='cuda:0', dtype=torch.float64)
tensor([-2.0585, -3.1566, -3.6467, -4.2466, -4.7852], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7996, device='cuda:0', dtype=torch.float64)
tensor([-2.0591, -3.1521, -3.6509, -4.2464, -4.7792], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7063, device='cuda:0', dtype=torch.float64)
tensor([-2.0593, -3.1497, -3.6524, -4.2468, -4.7733], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6951, device='cuda:0', dtype=torch.float64)
tensor([-2.0604, -3.1483, -3.6496, -4.2458, -4.7686], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7399, device='cuda:0', dtype=torch.float64)
tensor([-2.0603, -3.1485, -3.6464, -4.2395, -4.7658], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7131, device='cuda:0', dtype=torch.float64)
tensor([-2.0591, -3.1506, -3.6427, -4.2368, -4.7599], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7079, device='cuda:0', dtype=torch.float64)
tensor([-2.0584, -3.1514, -3.6385, -4.2371, -4.7529], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7042, device='cuda:0', dtype=torch.float64)
tensor([-2.0576, -3.1505, -3.6352, -4.2377, -4.7455], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7130, device='cuda:0', dtype=torch.float64)
tensor([-2.0573, -3.1497, -3.6339, -4.2372, -4.7396], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7844, device='cuda:0', dtype=torch.float64)
tensor([-2.0588, -3.1502, -3.6324, -4.2320, -4.7386], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7169, device='cuda:0', dtype=torch.float64)
tensor([-2.0601, -3.1470, -3.6317, -4.2286, -4.7406], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6875, device='cuda:0', dtype=torch.float64)
tensor([-2.0611, -3.1428, -3.6291, -4.2280, -4.7413], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7316, device='cuda:0', dtype=torch.float64)
tensor([-2.0618, -3.1388, -3.6287, -4.2282, -4.7388], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7267, device='cuda:0', dtype=torch.float64)
tensor([-2.0626, -3.1374, -3.6285, -4.2256, -4.7352], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6983, device='cuda:0', dtype=torch.float64)
tensor([-2.0630, -3.1369, -3.6269, -4.2207, -4.7307], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7038, device='cuda:0', dtype=torch.float64)
tensor([-2.0619, -3.1373, -3.6248, -4.2154, -4.7275], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7027, device='cuda:0', dtype=torch.float64)
tensor([-2.0599, -3.1379, -3.6215, -4.2102, -4.7248], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7743, device='cuda:0', dtype=torch.float64)
tensor([-2.0575, -3.1370, -3.6211, -4.2091, -4.7151], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7312, device='cuda:0', dtype=torch.float64)
tensor([-2.0542, -3.1360, -3.6236, -4.2123, -4.7050], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7748, device='cuda:0', dtype=torch.float64)
tensor([-2.0542, -3.1343, -3.6250, -4.2105, -4.6982], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7663, device='cuda:0', dtype=torch.float64)
tensor([-2.0570, -3.1350, -3.6213, -4.2045, -4.6940], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6804, device='cuda:0', dtype=torch.float64)
tensor([-2.0589, -3.1343, -3.6136, -4.1985, -4.6925], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7983, device='cuda:0', dtype=torch.float64)
tensor([-2.0568, -3.1303, -3.6088, -4.1992, -4.6900], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7752, device='cuda:0', dtype=torch.float64)
tensor([-2.0543, -3.1271, -3.6087, -4.2003, -4.6864], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7203, device='cuda:0', dtype=torch.float64)
tensor([-2.0520, -3.1275, -3.6095, -4.1995, -4.6803], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7576, device='cuda:0', dtype=torch.float64)
tensor([-2.0529, -3.1323, -3.6078, -4.1943, -4.6729], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7292, device='cuda:0', dtype=torch.float64)
tensor([-2.0549, -3.1379, -3.6012, -4.1880, -4.6656], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7616, device='cuda:0', dtype=torch.float64)
tensor([-2.0535, -3.1364, -3.6006, -4.1875, -4.6598], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7283, device='cuda:0', dtype=torch.float64)
tensor([-2.0497, -3.1306, -3.6028, -4.1919, -4.6580], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6852, device='cuda:0', dtype=torch.float64)
tensor([-2.0468, -3.1245, -3.6051, -4.1941, -4.6618], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7123, device='cuda:0', dtype=torch.float64)
tensor([-2.0467, -3.1236, -3.6043, -4.1941, -4.6685], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7389, device='cuda:0', dtype=torch.float64)
tensor([-2.0483, -3.1272, -3.5996, -4.1909, -4.6717], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7383, device='cuda:0', dtype=torch.float64)
tensor([-2.0510, -3.1291, -3.5946, -4.1840, -4.6702], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7872, device='cuda:0', dtype=torch.float64)
tensor([-2.0511, -3.1238, -3.5912, -4.1845, -4.6641], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7880, device='cuda:0', dtype=torch.float64)
tensor([-2.0483, -3.1151, -3.5913, -4.1838, -4.6585], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7692, device='cuda:0', dtype=torch.float64)
tensor([-2.0462, -3.1082, -3.5923, -4.1825, -4.6582], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7020, device='cuda:0', dtype=torch.float64)
tensor([-2.0462, -3.1081, -3.5915, -4.1787, -4.6551], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8082, device='cuda:0', dtype=torch.float64)
tensor([-2.0472, -3.1129, -3.5887, -4.1731, -4.6457], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7016, device='cuda:0', dtype=torch.float64)
tensor([-2.0487, -3.1177, -3.5830, -4.1699, -4.6367], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8198, device='cuda:0', dtype=torch.float64)
tensor([-2.0502, -3.1202, -3.5757, -4.1659, -4.6295], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7297, device='cuda:0', dtype=torch.float64)
tensor([-2.0507, -3.1200, -3.5699, -4.1651, -4.6244], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8449, device='cuda:0', dtype=torch.float64)
tensor([-2.0529, -3.1182, -3.5651, -4.1636, -4.6193], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6651, device='cuda:0', dtype=torch.float64)
tensor([-2.0537, -3.1141, -3.5628, -4.1624, -4.6180], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7577, device='cuda:0', dtype=torch.float64)
tensor([-2.0536, -3.1114, -3.5636, -4.1566, -4.6164], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6960, device='cuda:0', dtype=torch.float64)
tensor([-2.0524, -3.1122, -3.5655, -4.1480, -4.6128], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7573, device='cuda:0', dtype=torch.float64)
tensor([-2.0481, -3.1128, -3.5655, -4.1438, -4.6103], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7202, device='cuda:0', dtype=torch.float64)
tensor([-2.0429, -3.1119, -3.5700, -4.1506, -4.6085], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7530, device='cuda:0', dtype=torch.float64)
tensor([-2.0399, -3.1100, -3.5754, -4.1573, -4.6074], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7874, device='cuda:0', dtype=torch.float64)
tensor([-2.0413, -3.1099, -3.5766, -4.1551, -4.6019], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7771, device='cuda:0', dtype=torch.float64)
tensor([-2.0420, -3.1085, -3.5775, -4.1528, -4.5912], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7350, device='cuda:0', dtype=torch.float64)
tensor([-2.0412, -3.1048, -3.5792, -4.1495, -4.5799], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7837, device='cuda:0', dtype=torch.float64)
tensor([-2.0420, -3.1017, -3.5775, -4.1444, -4.5749], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7153, device='cuda:0', dtype=torch.float64)
tensor([-2.0425, -3.0974, -3.5782, -4.1434, -4.5768], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7506, device='cuda:0', dtype=torch.float64)
tensor([-2.0410, -3.0948, -3.5803, -4.1453, -4.5806], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7700, device='cuda:0', dtype=torch.float64)
tensor([-2.0409, -3.0973, -3.5776, -4.1468, -4.5776], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7315, device='cuda:0', dtype=torch.float64)
tensor([-2.0421, -3.0998, -3.5708, -4.1448, -4.5745], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7512, device='cuda:0', dtype=torch.float64)
tensor([-2.0456, -3.1007, -3.5624, -4.1428, -4.5714], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7344, device='cuda:0', dtype=torch.float64)
tensor([-2.0480, -3.0974, -3.5605, -4.1418, -4.5682], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7057, device='cuda:0', dtype=torch.float64)
tensor([-2.0460, -3.0927, -3.5603, -4.1433, -4.5678], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7120, device='cuda:0', dtype=torch.float64)
tensor([-2.0436, -3.0872, -3.5591, -4.1449, -4.5687], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6931, device='cuda:0', dtype=torch.float64)
tensor([-2.0425, -3.0843, -3.5590, -4.1463, -4.5678], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7472, device='cuda:0', dtype=torch.float64)
tensor([-2.0421, -3.0833, -3.5601, -4.1391, -4.5623], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7967, device='cuda:0', dtype=torch.float64)
tensor([-2.0434, -3.0850, -3.5604, -4.1285, -4.5550], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7752, device='cuda:0', dtype=torch.float64)
tensor([-2.0427, -3.0834, -3.5550, -4.1232, -4.5446], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7518, device='cuda:0', dtype=torch.float64)
tensor([-2.0419, -3.0818, -3.5439, -4.1237, -4.5391], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7836, device='cuda:0', dtype=torch.float64)
tensor([-2.0402, -3.0778, -3.5376, -4.1326, -4.5318], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7772, device='cuda:0', dtype=torch.float64)
tensor([-2.0395, -3.0758, -3.5393, -4.1312, -4.5266], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6830, device='cuda:0', dtype=torch.float64)
tensor([-2.0404, -3.0779, -3.5433, -4.1222, -4.5211], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7602, device='cuda:0', dtype=torch.float64)
tensor([-2.0434, -3.0821, -3.5455, -4.1119, -4.5227], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7833, device='cuda:0', dtype=torch.float64)
tensor([-2.0454, -3.0842, -3.5439, -4.1080, -4.5235], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7914, device='cuda:0', dtype=torch.float64)
tensor([-2.0450, -3.0818, -3.5440, -4.1077, -4.5204], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7087, device='cuda:0', dtype=torch.float64)
tensor([-2.0443, -3.0770, -3.5452, -4.1082, -4.5163], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7511, device='cuda:0', dtype=torch.float64)
tensor([-2.0431, -3.0767, -3.5447, -4.1081, -4.5107], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7741, device='cuda:0', dtype=torch.float64)
tensor([-2.0409, -3.0785, -3.5437, -4.1091, -4.5058], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7476, device='cuda:0', dtype=torch.float64)
tensor([-2.0346, -3.0790, -3.5391, -4.1126, -4.5042], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7749, device='cuda:0', dtype=torch.float64)
tensor([-2.0294, -3.0779, -3.5328, -4.1151, -4.5051], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7669, device='cuda:0', dtype=torch.float64)
tensor([-2.0249, -3.0736, -3.5326, -4.1095, -4.5050], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7285, device='cuda:0', dtype=torch.float64)
tensor([-2.0217, -3.0703, -3.5346, -4.1062, -4.5045], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7060, device='cuda:0', dtype=torch.float64)
tensor([-2.0221, -3.0730, -3.5348, -4.1025, -4.4985], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7875, device='cuda:0', dtype=torch.float64)
tensor([-2.0263, -3.0802, -3.5317, -4.0982, -4.4905], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7694, device='cuda:0', dtype=torch.float64)
tensor([-2.0286, -3.0846, -3.5291, -4.0960, -4.4856], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7541, device='cuda:0', dtype=torch.float64)
tensor([-2.0302, -3.0822, -3.5286, -4.0938, -4.4844], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7138, device='cuda:0', dtype=torch.float64)
tensor([-2.0337, -3.0804, -3.5292, -4.0840, -4.4847], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7912, device='cuda:0', dtype=torch.float64)
tensor([-2.0343, -3.0759, -3.5323, -4.0754, -4.4882], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7453, device='cuda:0', dtype=torch.float64)
tensor([-2.0348, -3.0730, -3.5328, -4.0733, -4.4925], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9019, device='cuda:0', dtype=torch.float64)
tensor([-2.0338, -3.0711, -3.5281, -4.0714, -4.4912], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7159, device='cuda:0', dtype=torch.float64)
tensor([-2.0292, -3.0696, -3.5223, -4.0749, -4.4816], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7158, device='cuda:0', dtype=torch.float64)
tensor([-2.0259, -3.0712, -3.5198, -4.0769, -4.4723], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8239, device='cuda:0', dtype=torch.float64)
tensor([-2.0237, -3.0771, -3.5180, -4.0802, -4.4649], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6757, device='cuda:0', dtype=torch.float64)
tensor([-2.0243, -3.0807, -3.5148, -4.0805, -4.4604], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7506, device='cuda:0', dtype=torch.float64)
tensor([-2.0256, -3.0789, -3.5119, -4.0782, -4.4593], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7885, device='cuda:0', dtype=torch.float64)
tensor([-2.0239, -3.0704, -3.5141, -4.0799, -4.4581], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8243, device='cuda:0', dtype=torch.float64)
tensor([-2.0238, -3.0641, -3.5179, -4.0855, -4.4586], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7592, device='cuda:0', dtype=torch.float64)
tensor([-2.0246, -3.0624, -3.5220, -4.0898, -4.4596], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8454, device='cuda:0', dtype=torch.float64)
tensor([-2.0298, -3.0648, -3.5185, -4.0825, -4.4606], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7869, device='cuda:0', dtype=torch.float64)
tensor([-2.0333, -3.0647, -3.5063, -4.0690, -4.4542], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9059, device='cuda:0', dtype=torch.float64)
tensor([-2.0328, -3.0622, -3.5052, -4.0633, -4.4433], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7731, device='cuda:0', dtype=torch.float64)
tensor([-2.0293, -3.0589, -3.5041, -4.0646, -4.4355], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7544, device='cuda:0', dtype=torch.float64)
tensor([-2.0253, -3.0582, -3.5051, -4.0662, -4.4341], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9537, device='cuda:0', dtype=torch.float64)
tensor([-2.0224, -3.0591, -3.5054, -4.0577, -4.4399], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7754, device='cuda:0', dtype=torch.float64)
tensor([-2.0185, -3.0583, -3.5075, -4.0548, -4.4428], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8501, device='cuda:0', dtype=torch.float64)
tensor([-2.0183, -3.0558, -3.5030, -4.0617, -4.4417], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7438, device='cuda:0', dtype=torch.float64)
tensor([-2.0207, -3.0520, -3.4998, -4.0663, -4.4280], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8245, device='cuda:0', dtype=torch.float64)
tensor([-2.0251, -3.0539, -3.4996, -4.0502, -4.4109], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6970, device='cuda:0', dtype=torch.float64)
tensor([-2.0293, -3.0569, -3.5005, -4.0286, -4.4022], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9316, device='cuda:0', dtype=torch.float64)
tensor([-2.0289, -3.0572, -3.5018, -4.0248, -4.3978], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7218, device='cuda:0', dtype=torch.float64)
tensor([-2.0243, -3.0537, -3.5035, -4.0295, -4.3967], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7683, device='cuda:0', dtype=torch.float64)
tensor([-2.0218, -3.0523, -3.5011, -4.0338, -4.3987], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8487, device='cuda:0', dtype=torch.float64)
tensor([-2.0225, -3.0555, -3.4903, -4.0260, -4.3993], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7483, device='cuda:0', dtype=torch.float64)
tensor([-2.0257, -3.0591, -3.4828, -4.0223, -4.3950], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8770, device='cuda:0', dtype=torch.float64)
tensor([-2.0262, -3.0556, -3.4854, -4.0328, -4.3890], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8049, device='cuda:0', dtype=torch.float64)
tensor([-2.0226, -3.0455, -3.4997, -4.0469, -4.3824], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8032, device='cuda:0', dtype=torch.float64)
tensor([-2.0216, -3.0419, -3.5088, -4.0502, -4.3796], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7511, device='cuda:0', dtype=torch.float64)
tensor([-2.0191, -3.0425, -3.5103, -4.0484, -4.3786], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7821, device='cuda:0', dtype=torch.float64)
tensor([-2.0159, -3.0460, -3.5034, -4.0440, -4.3815], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7891, device='cuda:0', dtype=torch.float64)
tensor([-2.0144, -3.0499, -3.4958, -4.0340, -4.3803], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8082, device='cuda:0', dtype=torch.float64)
tensor([-2.0112, -3.0490, -3.4888, -4.0284, -4.3772], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7473, device='cuda:0', dtype=torch.float64)
tensor([-2.0080, -3.0470, -3.4797, -4.0284, -4.3724], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7866, device='cuda:0', dtype=torch.float64)
tensor([-2.0112, -3.0472, -3.4639, -4.0291, -4.3653], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7249, device='cuda:0', dtype=torch.float64)
tensor([-2.0168, -3.0439, -3.4538, -4.0268, -4.3622], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9538, device='cuda:0', dtype=torch.float64)
tensor([-2.0237, -3.0363, -3.4528, -4.0163, -4.3568], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8006, device='cuda:0', dtype=torch.float64)
tensor([-2.0263, -3.0305, -3.4584, -4.0073, -4.3524], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8984, device='cuda:0', dtype=torch.float64)
tensor([-2.0245, -3.0284, -3.4659, -4.0097, -4.3513], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7602, device='cuda:0', dtype=torch.float64)
tensor([-2.0231, -3.0312, -3.4696, -4.0150, -4.3508], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8676, device='cuda:0', dtype=torch.float64)
tensor([-2.0220, -3.0335, -3.4714, -4.0145, -4.3493], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8460, device='cuda:0', dtype=torch.float64)
tensor([-2.0180, -3.0315, -3.4740, -4.0112, -4.3443], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8675, device='cuda:0', dtype=torch.float64)
tensor([-2.0126, -3.0291, -3.4740, -4.0190, -4.3440], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7405, device='cuda:0', dtype=torch.float64)
tensor([-2.0121, -3.0308, -3.4668, -4.0250, -4.3433], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8557, device='cuda:0', dtype=torch.float64)
tensor([-2.0157, -3.0322, -3.4635, -4.0200, -4.3393], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8096, device='cuda:0', dtype=torch.float64)
tensor([-2.0185, -3.0310, -3.4687, -4.0037, -4.3363], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7973, device='cuda:0', dtype=torch.float64)
tensor([-2.0172, -3.0276, -3.4763, -3.9951, -4.3395], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7520, device='cuda:0', dtype=torch.float64)
tensor([-2.0140, -3.0267, -3.4769, -3.9943, -4.3418], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7958, device='cuda:0', dtype=torch.float64)
tensor([-2.0134, -3.0289, -3.4681, -3.9985, -4.3445], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8768, device='cuda:0', dtype=torch.float64)
tensor([-2.0139, -3.0254, -3.4573, -3.9977, -4.3468], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7296, device='cuda:0', dtype=torch.float64)
tensor([-2.0153, -3.0214, -3.4524, -3.9926, -4.3445], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8153, device='cuda:0', dtype=torch.float64)
tensor([-2.0140, -3.0199, -3.4535, -3.9903, -4.3391], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6975, device='cuda:0', dtype=torch.float64)
tensor([-2.0125, -3.0217, -3.4546, -3.9926, -4.3270], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8319, device='cuda:0', dtype=torch.float64)
tensor([-2.0108, -3.0246, -3.4599, -3.9919, -4.3190], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8050, device='cuda:0', dtype=torch.float64)
tensor([-2.0120, -3.0294, -3.4597, -3.9889, -4.3172], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7947, device='cuda:0', dtype=torch.float64)
tensor([-2.0118, -3.0315, -3.4560, -3.9926, -4.3106], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7871, device='cuda:0', dtype=torch.float64)
tensor([-2.0120, -3.0298, -3.4566, -3.9948, -4.3021], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7833, device='cuda:0', dtype=torch.float64)
tensor([-2.0110, -3.0285, -3.4651, -3.9914, -4.2892], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8398, device='cuda:0', dtype=torch.float64)
tensor([-2.0130, -3.0315, -3.4648, -3.9902, -4.2817], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7041, device='cuda:0', dtype=torch.float64)
tensor([-2.0147, -3.0379, -3.4632, -3.9855, -4.2801], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8765, device='cuda:0', dtype=torch.float64)
tensor([-2.0160, -3.0361, -3.4573, -3.9737, -4.2856], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7798, device='cuda:0', dtype=torch.float64)
tensor([-2.0136, -3.0301, -3.4493, -3.9587, -4.2906], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7664, device='cuda:0', dtype=torch.float64)
tensor([-2.0094, -3.0236, -3.4438, -3.9436, -4.2906], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8656, device='cuda:0', dtype=torch.float64)
tensor([-2.0052, -3.0200, -3.4434, -3.9421, -4.2849], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7917, device='cuda:0', dtype=torch.float64)
tensor([-2.0043, -3.0187, -3.4490, -3.9402, -4.2778], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9377, device='cuda:0', dtype=torch.float64)
tensor([-2.0031, -3.0170, -3.4605, -3.9434, -4.2747], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6623, device='cuda:0', dtype=torch.float64)
tensor([-2.0043, -3.0184, -3.4683, -3.9444, -4.2772], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8296, device='cuda:0', dtype=torch.float64)
tensor([-2.0060, -3.0212, -3.4641, -3.9484, -4.2798], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6792, device='cuda:0', dtype=torch.float64)
tensor([-2.0096, -3.0215, -3.4515, -3.9568, -4.2812], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8482, device='cuda:0', dtype=torch.float64)
tensor([-2.0133, -3.0198, -3.4355, -3.9529, -4.2780], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7488, device='cuda:0', dtype=torch.float64)
tensor([-2.0128, -3.0151, -3.4260, -3.9491, -4.2712], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9249, device='cuda:0', dtype=torch.float64)
tensor([-2.0114, -3.0134, -3.4169, -3.9532, -4.2634], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7717, device='cuda:0', dtype=torch.float64)
tensor([-2.0048, -3.0058, -3.4125, -3.9607, -4.2541], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9016, device='cuda:0', dtype=torch.float64)
tensor([-1.9986, -2.9942, -3.4111, -3.9632, -4.2495], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7990, device='cuda:0', dtype=torch.float64)
tensor([-1.9973, -2.9891, -3.4160, -3.9541, -4.2489], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8986, device='cuda:0', dtype=torch.float64)
tensor([-1.9993, -2.9914, -3.4210, -3.9491, -4.2565], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8443, device='cuda:0', dtype=torch.float64)
tensor([-2.0026, -2.9974, -3.4304, -3.9490, -4.2601], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7767, device='cuda:0', dtype=torch.float64)
tensor([-2.0061, -2.9999, -3.4392, -3.9479, -4.2579], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8897, device='cuda:0', dtype=torch.float64)
tensor([-2.0099, -2.9999, -3.4306, -3.9443, -4.2529], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8116, device='cuda:0', dtype=torch.float64)
tensor([-2.0132, -3.0001, -3.4117, -3.9468, -4.2488], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7815, device='cuda:0', dtype=torch.float64)
tensor([-2.0141, -3.0040, -3.3915, -3.9535, -4.2490], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1154, device='cuda:0', dtype=torch.float64)
tensor([-2.0126, -3.0045, -3.3899, -3.9519, -4.2480], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7308, device='cuda:0', dtype=torch.float64)
tensor([-2.0065, -3.0015, -3.3992, -3.9502, -4.2422], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9365, device='cuda:0', dtype=torch.float64)
tensor([-1.9969, -2.9975, -3.4105, -3.9582, -4.2371], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7699, device='cuda:0', dtype=torch.float64)
tensor([-1.9884, -2.9930, -3.4211, -3.9657, -4.2349], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7871, device='cuda:0', dtype=torch.float64)
tensor([-1.9830, -2.9879, -3.4297, -3.9656, -4.2318], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7197, device='cuda:0', dtype=torch.float64)
tensor([-1.9832, -2.9849, -3.4333, -3.9622, -4.2317], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7649, device='cuda:0', dtype=torch.float64)
tensor([-1.9892, -2.9861, -3.4235, -3.9535, -4.2353], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7227, device='cuda:0', dtype=torch.float64)
tensor([-1.9949, -2.9926, -3.4170, -3.9411, -4.2352], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7625, device='cuda:0', dtype=torch.float64)
tensor([-2.0006, -3.0016, -3.4074, -3.9282, -4.2291], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7854, device='cuda:0', dtype=torch.float64)
tensor([-2.0043, -3.0103, -3.3990, -3.9220, -4.2220], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7973, device='cuda:0', dtype=torch.float64)
tensor([-2.0065, -3.0124, -3.4002, -3.9247, -4.2183], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7771, device='cuda:0', dtype=torch.float64)
tensor([-2.0045, -3.0068, -3.4087, -3.9259, -4.2193], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9077, device='cuda:0', dtype=torch.float64)
tensor([-2.0050, -2.9989, -3.4155, -3.9203, -4.2212], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8580, device='cuda:0', dtype=torch.float64)
tensor([-2.0065, -2.9904, -3.4119, -3.9174, -4.2148], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6955, device='cuda:0', dtype=torch.float64)
tensor([-2.0051, -2.9807, -3.4075, -3.9199, -4.2038], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9289, device='cuda:0', dtype=torch.float64)
tensor([-2.0024, -2.9770, -3.4117, -3.9252, -4.1974], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7627, device='cuda:0', dtype=torch.float64)
tensor([-1.9985, -2.9798, -3.4122, -3.9282, -4.2000], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9334, device='cuda:0', dtype=torch.float64)
tensor([-1.9934, -2.9867, -3.4092, -3.9232, -4.2065], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8419, device='cuda:0', dtype=torch.float64)
tensor([-1.9874, -2.9847, -3.4042, -3.9178, -4.2060], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9744, device='cuda:0', dtype=torch.float64)
tensor([-1.9873, -2.9792, -3.3956, -3.9132, -4.1975], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7351, device='cuda:0', dtype=torch.float64)
tensor([-1.9904, -2.9808, -3.3867, -3.9055, -4.1875], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0071, device='cuda:0', dtype=torch.float64)
tensor([-1.9998, -2.9912, -3.3730, -3.8929, -4.1837], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8756, device='cuda:0', dtype=torch.float64)
tensor([-2.0077, -2.9981, -3.3656, -3.8947, -4.1859], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9313, device='cuda:0', dtype=torch.float64)
tensor([-2.0080, -2.9928, -3.3722, -3.9013, -4.1877], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8647, device='cuda:0', dtype=torch.float64)
tensor([-2.0014, -2.9843, -3.3847, -3.9089, -4.1849], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9508, device='cuda:0', dtype=torch.float64)
tensor([-1.9935, -2.9811, -3.3863, -3.9118, -4.1827], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9032, device='cuda:0', dtype=torch.float64)
tensor([-1.9869, -2.9810, -3.3811, -3.9087, -4.1833], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8628, device='cuda:0', dtype=torch.float64)
tensor([-1.9874, -2.9787, -3.3737, -3.8987, -4.1829], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7675, device='cuda:0', dtype=torch.float64)
tensor([-1.9900, -2.9750, -3.3729, -3.8942, -4.1785], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7637, device='cuda:0', dtype=torch.float64)
tensor([-1.9927, -2.9715, -3.3708, -3.8945, -4.1730], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8727, device='cuda:0', dtype=torch.float64)
tensor([-1.9943, -2.9694, -3.3725, -3.8852, -4.1666], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9318, device='cuda:0', dtype=torch.float64)
tensor([-1.9957, -2.9733, -3.3801, -3.8725, -4.1568], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0199, device='cuda:0', dtype=torch.float64)
tensor([-1.9948, -2.9774, -3.3853, -3.8796, -4.1460], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7893, device='cuda:0', dtype=torch.float64)
tensor([-1.9902, -2.9793, -3.3932, -3.9001, -4.1415], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0625, device='cuda:0', dtype=torch.float64)
tensor([-1.9861, -2.9712, -3.4006, -3.9038, -4.1443], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9817, device='cuda:0', dtype=torch.float64)
tensor([-1.9841, -2.9591, -3.3989, -3.8931, -4.1463], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2402, device='cuda:0', dtype=torch.float64)
tensor([-1.9807, -2.9492, -3.3857, -3.8971, -4.1364], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8970, device='cuda:0', dtype=torch.float64)
tensor([-1.9783, -2.9489, -3.3816, -3.9075, -4.1186], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2791, device='cuda:0', dtype=torch.float64)
tensor([-1.9827, -2.9530, -3.3702, -3.8921, -4.1163], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8123, device='cuda:0', dtype=torch.float64)
tensor([-1.9910, -2.9649, -3.3572, -3.8795, -4.1269], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2097, device='cuda:0', dtype=torch.float64)
tensor([-1.9960, -2.9692, -3.3509, -3.8818, -4.1420], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8527, device='cuda:0', dtype=torch.float64)
tensor([-1.9961, -2.9665, -3.3502, -3.8938, -4.1492], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2205, device='cuda:0', dtype=torch.float64)
tensor([-1.9968, -2.9658, -3.3526, -3.8851, -4.1533], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7375, device='cuda:0', dtype=torch.float64)
tensor([-1.9975, -2.9672, -3.3477, -3.8724, -4.1531], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1404, device='cuda:0', dtype=torch.float64)
tensor([-1.9981, -2.9716, -3.3484, -3.8839, -4.1491], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7940, device='cuda:0', dtype=torch.float64)
tensor([-1.9952, -2.9724, -3.3531, -3.8881, -4.1402], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0499, device='cuda:0', dtype=torch.float64)
tensor([-1.9936, -2.9687, -3.3583, -3.8745, -4.1335], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8503, device='cuda:0', dtype=torch.float64)
tensor([-1.9837, -2.9627, -3.3624, -3.8694, -4.1319], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0362, device='cuda:0', dtype=torch.float64)
tensor([-1.9744, -2.9599, -3.3527, -3.8725, -4.1322], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8712, device='cuda:0', dtype=torch.float64)
tensor([-1.9703, -2.9628, -3.3420, -3.8682, -4.1287], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0899, device='cuda:0', dtype=torch.float64)
tensor([-1.9687, -2.9684, -3.3449, -3.8619, -4.1157], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9263, device='cuda:0', dtype=torch.float64)
tensor([-1.9659, -2.9725, -3.3583, -3.8627, -4.1075], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9495, device='cuda:0', dtype=torch.float64)
tensor([-1.9658, -2.9765, -3.3699, -3.8751, -4.1073], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9988, device='cuda:0', dtype=torch.float64)
tensor([-1.9757, -2.9775, -3.3684, -3.8742, -4.1143], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9782, device='cuda:0', dtype=torch.float64)
tensor([-1.9914, -2.9766, -3.3598, -3.8580, -4.1162], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9602, device='cuda:0', dtype=torch.float64)
tensor([-1.9997, -2.9713, -3.3445, -3.8521, -4.1063], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1227, device='cuda:0', dtype=torch.float64)
tensor([-1.9928, -2.9621, -3.3423, -3.8604, -4.0910], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9978, device='cuda:0', dtype=torch.float64)
tensor([-1.9845, -2.9594, -3.3431, -3.8619, -4.0828], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1657, device='cuda:0', dtype=torch.float64)
tensor([-1.9839, -2.9604, -3.3426, -3.8506, -4.0790], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9301, device='cuda:0', dtype=torch.float64)
tensor([-1.9836, -2.9606, -3.3449, -3.8512, -4.0782], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1853, device='cuda:0', dtype=torch.float64)
tensor([-1.9852, -2.9588, -3.3535, -3.8618, -4.0793], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8615, device='cuda:0', dtype=torch.float64)
tensor([-1.9923, -2.9585, -3.3531, -3.8559, -4.0854], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0201, device='cuda:0', dtype=torch.float64)
tensor([-1.9974, -2.9561, -3.3453, -3.8346, -4.0911], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9205, device='cuda:0', dtype=torch.float64)
tensor([-1.9980, -2.9520, -3.3421, -3.8277, -4.0898], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8484, device='cuda:0', dtype=torch.float64)
tensor([-1.9898, -2.9438, -3.3530, -3.8385, -4.0851], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9767, device='cuda:0', dtype=torch.float64)
tensor([-1.9779, -2.9303, -3.3727, -3.8536, -4.0898], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7348, device='cuda:0', dtype=torch.float64)
tensor([-1.9716, -2.9220, -3.3796, -3.8587, -4.0987], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8035, device='cuda:0', dtype=torch.float64)
tensor([-1.9742, -2.9233, -3.3656, -3.8497, -4.0968], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7184, device='cuda:0', dtype=torch.float64)
tensor([-1.9828, -2.9329, -3.3418, -3.8322, -4.0864], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8014, device='cuda:0', dtype=torch.float64)
tensor([-1.9914, -2.9452, -3.3243, -3.8104, -4.0766], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8345, device='cuda:0', dtype=torch.float64)
tensor([-1.9969, -2.9562, -3.3209, -3.7970, -4.0672], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6778, device='cuda:0', dtype=torch.float64)
tensor([-1.9972, -2.9588, -3.3289, -3.7904, -4.0642], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8175, device='cuda:0', dtype=torch.float64)
tensor([-1.9907, -2.9567, -3.3396, -3.7964, -4.0682], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8189, device='cuda:0', dtype=torch.float64)
tensor([-1.9879, -2.9505, -3.3466, -3.8071, -4.0670], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0742, device='cuda:0', dtype=torch.float64)
tensor([-1.9857, -2.9402, -3.3500, -3.8131, -4.0596], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0104, device='cuda:0', dtype=torch.float64)
tensor([-1.9829, -2.9334, -3.3537, -3.8310, -4.0499], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7745, device='cuda:0', dtype=torch.float64)
tensor([-1.9824, -2.9342, -3.3568, -3.8436, -4.0424], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1581, device='cuda:0', dtype=torch.float64)
tensor([-1.9863, -2.9425, -3.3469, -3.8292, -4.0409], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9274, device='cuda:0', dtype=torch.float64)
tensor([-1.9938, -2.9514, -3.3304, -3.8111, -4.0447], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0732, device='cuda:0', dtype=torch.float64)
tensor([-1.9922, -2.9507, -3.3168, -3.8109, -4.0498], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8917, device='cuda:0', dtype=torch.float64)
tensor([-1.9879, -2.9424, -3.3102, -3.8218, -4.0547], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7527, device='cuda:0', dtype=torch.float64)
tensor([-1.9805, -2.9353, -3.3065, -3.8254, -4.0537], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8394, device='cuda:0', dtype=torch.float64)
tensor([-1.9772, -2.9299, -3.3078, -3.8123, -4.0472], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8797, device='cuda:0', dtype=torch.float64)
tensor([-1.9723, -2.9218, -3.3134, -3.8144, -4.0401], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0036, device='cuda:0', dtype=torch.float64)
tensor([-1.9647, -2.9195, -3.3202, -3.8307, -4.0285], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0398, device='cuda:0', dtype=torch.float64)
tensor([-1.9597, -2.9190, -3.3306, -3.8300, -4.0245], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1757, device='cuda:0', dtype=torch.float64)
tensor([-1.9615, -2.9234, -3.3323, -3.8039, -4.0270], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8753, device='cuda:0', dtype=torch.float64)
tensor([-1.9669, -2.9289, -3.3262, -3.7990, -4.0294], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9025, device='cuda:0', dtype=torch.float64)
tensor([-1.9725, -2.9296, -3.3194, -3.8123, -4.0250], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0849, device='cuda:0', dtype=torch.float64)
tensor([-1.9848, -2.9248, -3.3152, -3.7936, -4.0217], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8282, device='cuda:0', dtype=torch.float64)
tensor([-1.9944, -2.9206, -3.3143, -3.7764, -4.0185], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3078, device='cuda:0', dtype=torch.float64)
tensor([-1.9900, -2.9204, -3.3195, -3.7898, -4.0132], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7107, device='cuda:0', dtype=torch.float64)
tensor([-1.9791, -2.9211, -3.3306, -3.8093, -4.0064], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0972, device='cuda:0', dtype=torch.float64)
tensor([-1.9693, -2.9228, -3.3376, -3.8066, -4.0021], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8265, device='cuda:0', dtype=torch.float64)
tensor([-1.9653, -2.9213, -3.3360, -3.8002, -3.9989], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9009, device='cuda:0', dtype=torch.float64)
tensor([-1.9615, -2.9164, -3.3357, -3.8079, -3.9988], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7568, device='cuda:0', dtype=torch.float64)
tensor([-1.9636, -2.9126, -3.3297, -3.8154, -4.0036], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8950, device='cuda:0', dtype=torch.float64)
tensor([-1.9686, -2.9087, -3.3114, -3.8102, -4.0048], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9210, device='cuda:0', dtype=torch.float64)
tensor([-1.9722, -2.9070, -3.2995, -3.7927, -4.0040], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8826, device='cuda:0', dtype=torch.float64)
tensor([-1.9760, -2.9133, -3.2960, -3.7832, -4.0003], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9492, device='cuda:0', dtype=torch.float64)
tensor([-1.9765, -2.9153, -3.3053, -3.7947, -3.9966], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2256, device='cuda:0', dtype=torch.float64)
tensor([-1.9792, -2.9173, -3.3051, -3.7919, -3.9944], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0608, device='cuda:0', dtype=torch.float64)
tensor([-1.9850, -2.9251, -3.2918, -3.7827, -3.9982], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2240, device='cuda:0', dtype=torch.float64)
tensor([-1.9836, -2.9313, -3.2802, -3.7883, -4.0047], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9745, device='cuda:0', dtype=torch.float64)
tensor([-1.9762, -2.9239, -3.2820, -3.7953, -4.0064], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8807, device='cuda:0', dtype=torch.float64)
tensor([-1.9743, -2.9142, -3.2807, -3.7987, -4.0006], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7853, device='cuda:0', dtype=torch.float64)
tensor([-1.9761, -2.9066, -3.2700, -3.7927, -3.9939], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8557, device='cuda:0', dtype=torch.float64)
tensor([-1.9791, -2.9044, -3.2515, -3.7814, -3.9912], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8963, device='cuda:0', dtype=torch.float64)
tensor([-1.9787, -2.9116, -3.2462, -3.7660, -3.9899], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8206, device='cuda:0', dtype=torch.float64)
tensor([-1.9733, -2.9234, -3.2596, -3.7641, -3.9875], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8726, device='cuda:0', dtype=torch.float64)
tensor([-1.9697, -2.9278, -3.2778, -3.7726, -3.9885], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9062, device='cuda:0', dtype=torch.float64)
tensor([-1.9641, -2.9215, -3.2979, -3.7829, -3.9878], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7558, device='cuda:0', dtype=torch.float64)
tensor([-1.9674, -2.9176, -3.2951, -3.7762, -3.9858], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8661, device='cuda:0', dtype=torch.float64)
tensor([-1.9691, -2.9160, -3.2861, -3.7767, -3.9794], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0115, device='cuda:0', dtype=torch.float64)
tensor([-1.9696, -2.9135, -3.2829, -3.7755, -3.9690], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7495, device='cuda:0', dtype=torch.float64)
tensor([-1.9675, -2.9164, -3.2817, -3.7739, -3.9573], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8338, device='cuda:0', dtype=torch.float64)
tensor([-1.9663, -2.9233, -3.2763, -3.7646, -3.9586], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7280, device='cuda:0', dtype=torch.float64)
tensor([-1.9682, -2.9287, -3.2722, -3.7527, -3.9698], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8257, device='cuda:0', dtype=torch.float64)
tensor([-1.9709, -2.9288, -3.2810, -3.7585, -3.9775], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8351, device='cuda:0', dtype=torch.float64)
tensor([-1.9734, -2.9236, -3.2872, -3.7704, -3.9811], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9020, device='cuda:0', dtype=torch.float64)
tensor([-1.9752, -2.9193, -3.2853, -3.7763, -3.9795], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9789, device='cuda:0', dtype=torch.float64)
tensor([-1.9823, -2.9220, -3.2738, -3.7703, -3.9770], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0387, device='cuda:0', dtype=torch.float64)
tensor([-1.9842, -2.9208, -3.2703, -3.7478, -3.9722], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0801, device='cuda:0', dtype=torch.float64)
tensor([-1.9747, -2.9089, -3.2817, -3.7530, -3.9634], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9013, device='cuda:0', dtype=torch.float64)
tensor([-1.9643, -2.9009, -3.2922, -3.7572, -3.9571], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9575, device='cuda:0', dtype=torch.float64)
tensor([-1.9597, -2.9020, -3.2914, -3.7539, -3.9622], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9815, device='cuda:0', dtype=torch.float64)
tensor([-1.9621, -2.9075, -3.2792, -3.7293, -3.9731], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8389, device='cuda:0', dtype=torch.float64)
tensor([-1.9632, -2.9093, -3.2709, -3.7298, -3.9783], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1033, device='cuda:0', dtype=torch.float64)
tensor([-1.9621, -2.9054, -3.2706, -3.7431, -3.9717], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9822, device='cuda:0', dtype=torch.float64)
tensor([-1.9698, -2.9070, -3.2717, -3.7364, -3.9622], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8721, device='cuda:0', dtype=torch.float64)
tensor([-1.9787, -2.9122, -3.2650, -3.7230, -3.9540], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9567, device='cuda:0', dtype=torch.float64)
tensor([-1.9786, -2.9052, -3.2625, -3.7213, -3.9482], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9133, device='cuda:0', dtype=torch.float64)
tensor([-1.9713, -2.8908, -3.2650, -3.7377, -3.9462], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8908, device='cuda:0', dtype=torch.float64)
tensor([-1.9615, -2.8837, -3.2684, -3.7484, -3.9450], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7892, device='cuda:0', dtype=torch.float64)
tensor([-1.9552, -2.8882, -3.2720, -3.7414, -3.9480], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8044, device='cuda:0', dtype=torch.float64)
tensor([-1.9560, -2.8998, -3.2747, -3.7273, -3.9440], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0503, device='cuda:0', dtype=torch.float64)
tensor([-1.9614, -2.9044, -3.2691, -3.7255, -3.9420], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8445, device='cuda:0', dtype=torch.float64)
tensor([-1.9651, -2.9015, -3.2652, -3.7268, -3.9383], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0742, device='cuda:0', dtype=torch.float64)
tensor([-1.9764, -2.9036, -3.2487, -3.7189, -3.9464], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8930, device='cuda:0', dtype=torch.float64)
tensor([-1.9812, -2.8995, -3.2472, -3.7100, -3.9576], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9568, device='cuda:0', dtype=torch.float64)
tensor([-1.9701, -2.8902, -3.2596, -3.7223, -3.9516], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9012, device='cuda:0', dtype=torch.float64)
tensor([-1.9509, -2.8832, -3.2663, -3.7395, -3.9389], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9105, device='cuda:0', dtype=torch.float64)
tensor([-1.9426, -2.8765, -3.2566, -3.7443, -3.9346], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8219, device='cuda:0', dtype=torch.float64)
tensor([-1.9426, -2.8745, -3.2368, -3.7370, -3.9346], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8367, device='cuda:0', dtype=torch.float64)
tensor([-1.9450, -2.8798, -3.2282, -3.7365, -3.9289], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8347, device='cuda:0', dtype=torch.float64)
tensor([-1.9518, -2.8915, -3.2315, -3.7298, -3.9195], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8143, device='cuda:0', dtype=torch.float64)
tensor([-1.9609, -2.9045, -3.2375, -3.7279, -3.9098], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7464, device='cuda:0', dtype=torch.float64)
tensor([-1.9743, -2.9059, -3.2403, -3.7272, -3.9131], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7450, device='cuda:0', dtype=torch.float64)
tensor([-1.9829, -2.8965, -3.2459, -3.7275, -3.9221], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9153, device='cuda:0', dtype=torch.float64)
tensor([-1.9789, -2.8813, -3.2561, -3.7370, -3.9293], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8794, device='cuda:0', dtype=torch.float64)
tensor([-1.9669, -2.8792, -3.2651, -3.7375, -3.9257], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8802, device='cuda:0', dtype=torch.float64)
tensor([-1.9604, -2.8796, -3.2636, -3.7266, -3.9163], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8646, device='cuda:0', dtype=torch.float64)
tensor([-1.9581, -2.8858, -3.2602, -3.7169, -3.9060], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9689, device='cuda:0', dtype=torch.float64)
tensor([-1.9534, -2.8829, -3.2631, -3.7171, -3.8956], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8878, device='cuda:0', dtype=torch.float64)
tensor([-1.9568, -2.8766, -3.2619, -3.7203, -3.8882], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1771, device='cuda:0', dtype=torch.float64)
tensor([-1.9750, -2.8772, -3.2540, -3.7066, -3.8976], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9349, device='cuda:0', dtype=torch.float64)
tensor([-1.9886, -2.8801, -3.2588, -3.6985, -3.9096], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2357, device='cuda:0', dtype=torch.float64)
tensor([-1.9816, -2.8833, -3.2700, -3.7129, -3.9143], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9624, device='cuda:0', dtype=torch.float64)
tensor([-1.9690, -2.8939, -3.2725, -3.7280, -3.9053], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2871, device='cuda:0', dtype=torch.float64)
tensor([-1.9660, -2.9079, -3.2624, -3.7089, -3.9053], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9795, device='cuda:0', dtype=torch.float64)
tensor([-1.9707, -2.9104, -3.2450, -3.6785, -3.9072], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9406, device='cuda:0', dtype=torch.float64)
tensor([-1.9782, -2.8962, -3.2435, -3.6645, -3.9122], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7433, device='cuda:0', dtype=torch.float64)
tensor([-1.9840, -2.8850, -3.2443, -3.6578, -3.9140], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8368, device='cuda:0', dtype=torch.float64)
tensor([-1.9821, -2.8732, -3.2478, -3.6658, -3.9156], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8215, device='cuda:0', dtype=torch.float64)
tensor([-1.9692, -2.8709, -3.2461, -3.6827, -3.9099], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0022, device='cuda:0', dtype=torch.float64)
tensor([-1.9513, -2.8710, -3.2498, -3.7190, -3.8960], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0002, device='cuda:0', dtype=torch.float64)
tensor([-1.9379, -2.8726, -3.2555, -3.7328, -3.8832], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9916, device='cuda:0', dtype=torch.float64)
tensor([-1.9337, -2.8788, -3.2662, -3.7251, -3.8744], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0264, device='cuda:0', dtype=torch.float64)
tensor([-1.9469, -2.8826, -3.2530, -3.7073, -3.8759], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7620, device='cuda:0', dtype=torch.float64)
tensor([-1.9613, -2.8846, -3.2381, -3.6859, -3.8813], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1074, device='cuda:0', dtype=torch.float64)
tensor([-1.9746, -2.8890, -3.2269, -3.6487, -3.8857], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8478, device='cuda:0', dtype=torch.float64)
tensor([-1.9800, -2.8917, -3.2161, -3.6309, -3.8900], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0953, device='cuda:0', dtype=torch.float64)
tensor([-1.9812, -2.9044, -3.2035, -3.6287, -3.8982], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0238, device='cuda:0', dtype=torch.float64)
tensor([-1.9694, -2.9089, -3.2112, -3.6496, -3.8940], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1674, device='cuda:0', dtype=torch.float64)
tensor([-1.9516, -2.9036, -3.2336, -3.6644, -3.8843], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9783, device='cuda:0', dtype=torch.float64)
tensor([-1.9465, -2.8926, -3.2342, -3.6652, -3.8775], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0458, device='cuda:0', dtype=torch.float64)
tensor([-1.9532, -2.8869, -3.2187, -3.6560, -3.8745], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1747, device='cuda:0', dtype=torch.float64)
tensor([-1.9582, -2.8711, -3.2201, -3.6602, -3.8841], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0040, device='cuda:0', dtype=torch.float64)
tensor([-1.9584, -2.8601, -3.2308, -3.6721, -3.8866], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9970, device='cuda:0', dtype=torch.float64)
tensor([-1.9563, -2.8578, -3.2407, -3.6878, -3.8894], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9449, device='cuda:0', dtype=torch.float64)
tensor([-1.9614, -2.8609, -3.2408, -3.6856, -3.8779], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8966, device='cuda:0', dtype=torch.float64)
tensor([-1.9702, -2.8694, -3.2412, -3.6631, -3.8615], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2166, device='cuda:0', dtype=torch.float64)
tensor([-1.9687, -2.8737, -3.2358, -3.6649, -3.8454], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9500, device='cuda:0', dtype=torch.float64)
tensor([-1.9613, -2.8768, -3.2274, -3.6838, -3.8445], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1472, device='cuda:0', dtype=torch.float64)
tensor([-1.9628, -2.8811, -3.2154, -3.6817, -3.8580], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8901, device='cuda:0', dtype=torch.float64)
tensor([-1.9682, -2.8823, -3.2003, -3.6739, -3.8729], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0319, device='cuda:0', dtype=torch.float64)
tensor([-1.9634, -2.8761, -3.2003, -3.6790, -3.8737], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9853, device='cuda:0', dtype=torch.float64)
tensor([-1.9531, -2.8651, -3.2097, -3.6922, -3.8627], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9163, device='cuda:0', dtype=torch.float64)
tensor([-1.9535, -2.8606, -3.2142, -3.6840, -3.8615], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9784, device='cuda:0', dtype=torch.float64)
tensor([-1.9651, -2.8661, -3.2049, -3.6790, -3.8699], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9242, device='cuda:0', dtype=torch.float64)
tensor([-1.9698, -2.8731, -3.1983, -3.6724, -3.8860], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9516, device='cuda:0', dtype=torch.float64)
tensor([-1.9660, -2.8782, -3.2047, -3.6658, -3.8948], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2708, device='cuda:0', dtype=torch.float64)
tensor([-1.9528, -2.8731, -3.2228, -3.6844, -3.8947], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8311, device='cuda:0', dtype=torch.float64)
tensor([-1.9486, -2.8684, -3.2256, -3.6832, -3.8893], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9545, device='cuda:0', dtype=torch.float64)
tensor([-1.9586, -2.8693, -3.2127, -3.6658, -3.8798], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9263, device='cuda:0', dtype=torch.float64)
tensor([-1.9705, -2.8705, -3.1938, -3.6390, -3.8627], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9456, device='cuda:0', dtype=torch.float64)
tensor([-1.9758, -2.8711, -3.1846, -3.6195, -3.8492], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9038, device='cuda:0', dtype=torch.float64)
tensor([-1.9639, -2.8702, -3.1949, -3.6140, -3.8424], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8444, device='cuda:0', dtype=torch.float64)
tensor([-1.9445, -2.8724, -3.2096, -3.6153, -3.8469], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9440, device='cuda:0', dtype=torch.float64)
tensor([-1.9372, -2.8756, -3.2145, -3.6122, -3.8552], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8630, device='cuda:0', dtype=torch.float64)
tensor([-1.9427, -2.8773, -3.2137, -3.6106, -3.8537], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0918, device='cuda:0', dtype=torch.float64)
tensor([-1.9477, -2.8779, -3.2193, -3.6122, -3.8404], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6485, device='cuda:0', dtype=torch.float64)
tensor([-1.9533, -2.8765, -3.2305, -3.5983, -3.8288], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3797, device='cuda:0', dtype=torch.float64)
tensor([-1.9503, -2.8744, -3.2344, -3.6233, -3.8279], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1701, device='cuda:0', dtype=torch.float64)
tensor([-1.9491, -2.8725, -3.2269, -3.6550, -3.8359], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1749, device='cuda:0', dtype=torch.float64)
tensor([-1.9453, -2.8717, -3.2208, -3.6615, -3.8490], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9308, device='cuda:0', dtype=torch.float64)
tensor([-1.9433, -2.8753, -3.2154, -3.6529, -3.8509], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0622, device='cuda:0', dtype=torch.float64)
tensor([-1.9390, -2.8699, -3.2118, -3.6664, -3.8501], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2730, device='cuda:0', dtype=torch.float64)
tensor([-1.9456, -2.8736, -3.1992, -3.6506, -3.8480], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9789, device='cuda:0', dtype=torch.float64)
tensor([-1.9597, -2.8809, -3.1764, -3.6296, -3.8424], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0275, device='cuda:0', dtype=torch.float64)
tensor([-1.9690, -2.8861, -3.1630, -3.6295, -3.8353], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9153, device='cuda:0', dtype=torch.float64)
tensor([-1.9705, -2.8862, -3.1633, -3.6322, -3.8230], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8596, device='cuda:0', dtype=torch.float64)
tensor([-1.9606, -2.8830, -3.1789, -3.6410, -3.8115], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1397, device='cuda:0', dtype=torch.float64)
tensor([-1.9549, -2.8757, -3.1847, -3.6405, -3.8153], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1771, device='cuda:0', dtype=torch.float64)
tensor([-1.9487, -2.8678, -3.1817, -3.6426, -3.8179], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0188, device='cuda:0', dtype=torch.float64)
tensor([-1.9398, -2.8590, -3.1840, -3.6515, -3.8171], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0357, device='cuda:0', dtype=torch.float64)
tensor([-1.9380, -2.8583, -3.1942, -3.6416, -3.8074], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0684, device='cuda:0', dtype=torch.float64)
tensor([-1.9446, -2.8699, -3.2006, -3.6231, -3.8035], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2143, device='cuda:0', dtype=torch.float64)
tensor([-1.9577, -2.8836, -3.1931, -3.6216, -3.8049], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9868, device='cuda:0', dtype=torch.float64)
tensor([-1.9671, -2.8839, -3.1986, -3.6273, -3.8101], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9810, device='cuda:0', dtype=torch.float64)
tensor([-1.9796, -2.8738, -3.2097, -3.6158, -3.8142], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0944, device='cuda:0', dtype=torch.float64)
tensor([-1.9749, -2.8677, -3.2083, -3.6220, -3.8095], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0168, device='cuda:0', dtype=torch.float64)
tensor([-1.9554, -2.8695, -3.2020, -3.6258, -3.8063], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0996, device='cuda:0', dtype=torch.float64)
tensor([-1.9394, -2.8693, -3.1886, -3.6200, -3.8114], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2738, device='cuda:0', dtype=torch.float64)
tensor([-1.9261, -2.8623, -3.1927, -3.6144, -3.8112], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1164, device='cuda:0', dtype=torch.float64)
tensor([-1.9285, -2.8594, -3.1964, -3.6110, -3.8223], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0957, device='cuda:0', dtype=torch.float64)
tensor([-1.9445, -2.8547, -3.1994, -3.5918, -3.8389], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1216, device='cuda:0', dtype=torch.float64)
tensor([-1.9611, -2.8576, -3.2030, -3.5787, -3.8505], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2015, device='cuda:0', dtype=torch.float64)
tensor([-1.9651, -2.8574, -3.2152, -3.6006, -3.8517], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9487, device='cuda:0', dtype=torch.float64)
tensor([-1.9616, -2.8548, -3.2166, -3.6293, -3.8466], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3627, device='cuda:0', dtype=torch.float64)
tensor([-1.9614, -2.8584, -3.2002, -3.6230, -3.8425], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9621, device='cuda:0', dtype=torch.float64)
tensor([-1.9485, -2.8549, -3.1812, -3.6245, -3.8344], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2275, device='cuda:0', dtype=torch.float64)
tensor([-1.9361, -2.8510, -3.1675, -3.6328, -3.8133], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9854, device='cuda:0', dtype=torch.float64)
tensor([-1.9314, -2.8539, -3.1686, -3.6189, -3.7950], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1004, device='cuda:0', dtype=torch.float64)
tensor([-1.9430, -2.8623, -3.1656, -3.6037, -3.7966], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0772, device='cuda:0', dtype=torch.float64)
tensor([-1.9624, -2.8599, -3.1532, -3.5966, -3.8126], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9220, device='cuda:0', dtype=torch.float64)
tensor([-1.9716, -2.8521, -3.1493, -3.6111, -3.8146], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1810, device='cuda:0', dtype=torch.float64)
tensor([-1.9594, -2.8335, -3.1648, -3.6442, -3.8022], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0117, device='cuda:0', dtype=torch.float64)
tensor([-1.9463, -2.8260, -3.1699, -3.6520, -3.7878], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9448, device='cuda:0', dtype=torch.float64)
tensor([-1.9435, -2.8185, -3.1609, -3.6464, -3.7800], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3050, device='cuda:0', dtype=torch.float64)
tensor([-1.9408, -2.8135, -3.1641, -3.6359, -3.7804], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0038, device='cuda:0', dtype=torch.float64)
tensor([-1.9401, -2.8111, -3.1756, -3.6290, -3.7844], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0405, device='cuda:0', dtype=torch.float64)
tensor([-1.9459, -2.8199, -3.1817, -3.5929, -3.7931], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1728, device='cuda:0', dtype=torch.float64)
tensor([-1.9647, -2.8367, -3.1690, -3.5508, -3.7983], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1037, device='cuda:0', dtype=torch.float64)
tensor([-1.9680, -2.8425, -3.1724, -3.5519, -3.8004], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0789, device='cuda:0', dtype=torch.float64)
tensor([-1.9710, -2.8526, -3.1835, -3.5718, -3.7899], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4012, device='cuda:0', dtype=torch.float64)
tensor([-1.9792, -2.8658, -3.1770, -3.5550, -3.7758], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0151, device='cuda:0', dtype=torch.float64)
tensor([-1.9722, -2.8757, -3.1694, -3.5575, -3.7710], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1850, device='cuda:0', dtype=torch.float64)
tensor([-1.9481, -2.8716, -3.1703, -3.5891, -3.7734], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9156, device='cuda:0', dtype=torch.float64)
tensor([-1.9217, -2.8578, -3.1771, -3.6222, -3.7790], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1137, device='cuda:0', dtype=torch.float64)
tensor([-1.9151, -2.8520, -3.1693, -3.6085, -3.7879], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2073, device='cuda:0', dtype=torch.float64)
tensor([-1.9245, -2.8566, -3.1497, -3.5937, -3.7962], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0165, device='cuda:0', dtype=torch.float64)
tensor([-1.9434, -2.8562, -3.1359, -3.5808, -3.7929], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3487, device='cuda:0', dtype=torch.float64)
tensor([-1.9547, -2.8545, -3.1405, -3.5631, -3.7817], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0643, device='cuda:0', dtype=torch.float64)
tensor([-1.9697, -2.8563, -3.1452, -3.5505, -3.7770], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2448, device='cuda:0', dtype=torch.float64)
tensor([-1.9731, -2.8618, -3.1496, -3.5605, -3.7779], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2885, device='cuda:0', dtype=torch.float64)
tensor([-1.9531, -2.8525, -3.1715, -3.5775, -3.7790], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1072, device='cuda:0', dtype=torch.float64)
tensor([-1.9343, -2.8425, -3.1863, -3.6052, -3.7791], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0318, device='cuda:0', dtype=torch.float64)
tensor([-1.9317, -2.8435, -3.1838, -3.6361, -3.7824], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1593, device='cuda:0', dtype=torch.float64)
tensor([-1.9496, -2.8400, -3.1768, -3.6191, -3.7835], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0254, device='cuda:0', dtype=torch.float64)
tensor([-1.9592, -2.8337, -3.1771, -3.6092, -3.7662], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8652, device='cuda:0', dtype=torch.float64)
tensor([-1.9600, -2.8296, -3.1791, -3.5940, -3.7563], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9792, device='cuda:0', dtype=torch.float64)
tensor([-1.9489, -2.8293, -3.1709, -3.5787, -3.7698], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9624, device='cuda:0', dtype=torch.float64)
tensor([-1.9357, -2.8318, -3.1562, -3.5716, -3.7988], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9505, device='cuda:0', dtype=torch.float64)
tensor([-1.9287, -2.8384, -3.1434, -3.5628, -3.8163], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9513, device='cuda:0', dtype=torch.float64)
tensor([-1.9299, -2.8387, -3.1380, -3.5708, -3.8064], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9536, device='cuda:0', dtype=torch.float64)
tensor([-1.9387, -2.8404, -3.1412, -3.5738, -3.7737], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0119, device='cuda:0', dtype=torch.float64)
tensor([-1.9488, -2.8362, -3.1417, -3.5808, -3.7564], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0780, device='cuda:0', dtype=torch.float64)
tensor([-1.9522, -2.8224, -3.1455, -3.5946, -3.7510], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9986, device='cuda:0', dtype=torch.float64)
tensor([-1.9451, -2.8168, -3.1517, -3.5922, -3.7602], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8663, device='cuda:0', dtype=torch.float64)
tensor([-1.9377, -2.8212, -3.1514, -3.5938, -3.7684], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8329, device='cuda:0', dtype=torch.float64)
tensor([-1.9300, -2.8295, -3.1565, -3.5882, -3.7717], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8880, device='cuda:0', dtype=torch.float64)
tensor([-1.9320, -2.8367, -3.1659, -3.5621, -3.7673], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9934, device='cuda:0', dtype=torch.float64)
tensor([-1.9393, -2.8291, -3.1757, -3.5378, -3.7552], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0118, device='cuda:0', dtype=torch.float64)
tensor([-1.9505, -2.8268, -3.1644, -3.5304, -3.7578], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0159, device='cuda:0', dtype=torch.float64)
tensor([-1.9600, -2.8224, -3.1561, -3.5438, -3.7636], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3073, device='cuda:0', dtype=torch.float64)
tensor([-1.9620, -2.8136, -3.1460, -3.5424, -3.7601], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8071, device='cuda:0', dtype=torch.float64)
tensor([-1.9501, -2.8052, -3.1441, -3.5473, -3.7647], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3255, device='cuda:0', dtype=torch.float64)
tensor([-1.9308, -2.8041, -3.1379, -3.5736, -3.7694], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9434, device='cuda:0', dtype=torch.float64)
tensor([-1.9177, -2.8175, -3.1370, -3.5785, -3.7646], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5499, device='cuda:0', dtype=torch.float64)
tensor([-1.9191, -2.8294, -3.1329, -3.5448, -3.7555], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7015, device='cuda:0', dtype=torch.float64)
tensor([-1.9261, -2.8273, -3.1409, -3.5633, -3.7477], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8652, device='cuda:0', dtype=torch.float64)
tensor([-1.9397, -2.8212, -3.1415, -3.5939, -3.7412], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5431, device='cuda:0', dtype=torch.float64)
tensor([-1.9633, -2.8250, -3.1392, -3.5752, -3.7348], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2720, device='cuda:0', dtype=torch.float64)
tensor([-1.9903, -2.8298, -3.1270, -3.5507, -3.7283], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4354, device='cuda:0', dtype=torch.float64)
tensor([-1.9921, -2.8258, -3.1198, -3.5610, -3.7303], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2421, device='cuda:0', dtype=torch.float64)
tensor([-1.9676, -2.8181, -3.1272, -3.5929, -3.7297], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5651, device='cuda:0', dtype=torch.float64)
tensor([-1.9413, -2.8283, -3.1360, -3.5802, -3.7348], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2662, device='cuda:0', dtype=torch.float64)
tensor([-1.9159, -2.8407, -3.1525, -3.5799, -3.7403], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8490, device='cuda:0', dtype=torch.float64)
tensor([-1.9033, -2.8526, -3.1653, -3.5925, -3.7292], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5395, device='cuda:0', dtype=torch.float64)
tensor([-1.9042, -2.8466, -3.1775, -3.5780, -3.7069], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9080, device='cuda:0', dtype=torch.float64)
tensor([-1.9282, -2.8424, -3.1590, -3.5495, -3.7077], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7411, device='cuda:0', dtype=torch.float64)
tensor([-1.9580, -2.8346, -3.1262, -3.5422, -3.7214], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8260, device='cuda:0', dtype=torch.float64)
tensor([-1.9698, -2.8340, -3.1161, -3.5509, -3.7379], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5383, device='cuda:0', dtype=torch.float64)
tensor([-1.9456, -2.8277, -3.1395, -3.5596, -3.7319], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1880, device='cuda:0', dtype=torch.float64)
tensor([-1.9139, -2.8263, -3.1692, -3.5865, -3.7230], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6824, device='cuda:0', dtype=torch.float64)
tensor([-1.9061, -2.8387, -3.1601, -3.6069, -3.7313], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5124, device='cuda:0', dtype=torch.float64)
tensor([-1.9240, -2.8495, -3.1335, -3.5704, -3.7453], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3883, device='cuda:0', dtype=torch.float64)
tensor([-1.9332, -2.8316, -3.1352, -3.5494, -3.7359], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3234, device='cuda:0', dtype=torch.float64)
tensor([-1.9434, -2.8163, -3.1406, -3.5595, -3.7278], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8624, device='cuda:0', dtype=torch.float64)
tensor([-1.9561, -2.8136, -3.1362, -3.5188, -3.7263], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1238, device='cuda:0', dtype=torch.float64)
tensor([-1.9596, -2.8169, -3.1386, -3.4912, -3.7198], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.2535, device='cuda:0', dtype=torch.float64)
tensor([-1.9322, -2.7909, -3.1611, -3.5506, -3.7004], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9631, device='cuda:0', dtype=torch.float64)
tensor([-1.9173, -2.7804, -3.1623, -3.5922, -3.7007], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1054, device='cuda:0', dtype=torch.float64)
tensor([-1.9206, -2.7921, -3.1259, -3.5616, -3.7117], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4551, device='cuda:0', dtype=torch.float64)
tensor([-1.9290, -2.8116, -3.0896, -3.5743, -3.7267], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5372, device='cuda:0', dtype=torch.float64)
tensor([-1.9296, -2.8117, -3.0933, -3.6090, -3.7232], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1973, device='cuda:0', dtype=torch.float64)
tensor([-1.9381, -2.8136, -3.0929, -3.5856, -3.7290], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5109, device='cuda:0', dtype=torch.float64)
tensor([-1.9604, -2.8230, -3.0686, -3.5255, -3.7410], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3739, device='cuda:0', dtype=torch.float64)
tensor([-1.9560, -2.8346, -3.0616, -3.5183, -3.7382], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6124, device='cuda:0', dtype=torch.float64)
tensor([-1.9235, -2.8204, -3.0983, -3.5470, -3.7259], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6056, device='cuda:0', dtype=torch.float64)
tensor([-1.9016, -2.8212, -3.1196, -3.5376, -3.7309], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6125, device='cuda:0', dtype=torch.float64)
tensor([-1.9043, -2.8379, -3.1111, -3.5192, -3.7418], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1917, device='cuda:0', dtype=torch.float64)
tensor([-1.9131, -2.8444, -3.1130, -3.5290, -3.7414], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2882, device='cuda:0', dtype=torch.float64)
tensor([-1.9230, -2.8331, -3.1301, -3.5439, -3.7224], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0182, device='cuda:0', dtype=torch.float64)
tensor([-1.9378, -2.8211, -3.1425, -3.5248, -3.6972], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0898, device='cuda:0', dtype=torch.float64)
tensor([-1.9469, -2.8135, -3.1340, -3.5103, -3.6824], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9764, device='cuda:0', dtype=torch.float64)
tensor([-1.9502, -2.8044, -3.1244, -3.5153, -3.6787], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2199, device='cuda:0', dtype=torch.float64)
tensor([-1.9346, -2.7994, -3.1353, -3.5295, -3.6802], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1310, device='cuda:0', dtype=torch.float64)
tensor([-1.9314, -2.8197, -3.1399, -3.5147, -3.6962], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2767, device='cuda:0', dtype=torch.float64)
tensor([-1.9392, -2.8464, -3.1272, -3.4863, -3.7239], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1056, device='cuda:0', dtype=torch.float64)
tensor([-1.9402, -2.8507, -3.1232, -3.4967, -3.7406], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1726, device='cuda:0', dtype=torch.float64)
tensor([-1.9283, -2.8342, -3.1411, -3.5457, -3.7329], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9628, device='cuda:0', dtype=torch.float64)
tensor([-1.9361, -2.8231, -3.1451, -3.5722, -3.7225], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0913, device='cuda:0', dtype=torch.float64)
tensor([-1.9554, -2.8172, -3.1344, -3.5765, -3.7049], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0259, device='cuda:0', dtype=torch.float64)
tensor([-1.9678, -2.8110, -3.1088, -3.5550, -3.7062], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9356, device='cuda:0', dtype=torch.float64)
tensor([-1.9555, -2.8009, -3.0998, -3.5565, -3.7001], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0502, device='cuda:0', dtype=torch.float64)
tensor([-1.9261, -2.8047, -3.1019, -3.5509, -3.6971], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1035, device='cuda:0', dtype=torch.float64)
tensor([-1.9056, -2.8187, -3.1061, -3.5435, -3.7029], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9209, device='cuda:0', dtype=torch.float64)
tensor([-1.8998, -2.8268, -3.1213, -3.5261, -3.7010], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1336, device='cuda:0', dtype=torch.float64)
tensor([-1.9166, -2.8261, -3.1167, -3.5259, -3.6884], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8960, device='cuda:0', dtype=torch.float64)
tensor([-1.9466, -2.8257, -3.1018, -3.5197, -3.6896], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5095, device='cuda:0', dtype=torch.float64)
tensor([-1.9810, -2.8190, -3.0774, -3.4713, -3.6978], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1734, device='cuda:0', dtype=torch.float64)
tensor([-1.9850, -2.7940, -3.0758, -3.4680, -3.7056], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9437, device='cuda:0', dtype=torch.float64)
tensor([-1.9658, -2.7697, -3.0861, -3.4962, -3.7142], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2702, device='cuda:0', dtype=torch.float64)
tensor([-1.9486, -2.7749, -3.0811, -3.5046, -3.7130], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9683, device='cuda:0', dtype=torch.float64)
tensor([-1.9372, -2.7935, -3.0695, -3.4952, -3.7081], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1453, device='cuda:0', dtype=torch.float64)
tensor([-1.9331, -2.8079, -3.0715, -3.5098, -3.7001], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0078, device='cuda:0', dtype=torch.float64)
tensor([-1.9393, -2.8075, -3.0939, -3.5260, -3.6948], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1388, device='cuda:0', dtype=torch.float64)
tensor([-1.9435, -2.8008, -3.1126, -3.5324, -3.6962], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2255, device='cuda:0', dtype=torch.float64)
tensor([-1.9498, -2.8001, -3.1090, -3.5123, -3.6925], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3703, device='cuda:0', dtype=torch.float64)
tensor([-1.9423, -2.7971, -3.1154, -3.5132, -3.6753], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5995, device='cuda:0', dtype=torch.float64)
tensor([-1.9212, -2.7948, -3.1205, -3.5594, -3.6493], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4762, device='cuda:0', dtype=torch.float64)
tensor([-1.9199, -2.8083, -3.0936, -3.5521, -3.6356], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2307, device='cuda:0', dtype=torch.float64)
tensor([-1.9227, -2.8228, -3.0730, -3.5162, -3.6473], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3750, device='cuda:0', dtype=torch.float64)
tensor([-1.9211, -2.8337, -3.0858, -3.5327, -3.6594], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1271, device='cuda:0', dtype=torch.float64)
tensor([-1.9318, -2.8335, -3.1072, -3.5327, -3.6695], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4258, device='cuda:0', dtype=torch.float64)
tensor([-1.9533, -2.8374, -3.1096, -3.5154, -3.6742], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4196, device='cuda:0', dtype=torch.float64)
tensor([-1.9573, -2.8349, -3.1209, -3.5110, -3.6655], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4868, device='cuda:0', dtype=torch.float64)
tensor([-1.9245, -2.8157, -3.1542, -3.5422, -3.6512], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8088, device='cuda:0', dtype=torch.float64)
tensor([-1.9046, -2.8016, -3.1595, -3.5450, -3.6476], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3530, device='cuda:0', dtype=torch.float64)
tensor([-1.9056, -2.8111, -3.1437, -3.5076, -3.6686], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4248, device='cuda:0', dtype=torch.float64)
tensor([-1.9063, -2.8179, -3.1334, -3.4988, -3.6731], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2530, device='cuda:0', dtype=torch.float64)
tensor([-1.9141, -2.8223, -3.1119, -3.5165, -3.6737], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2622, device='cuda:0', dtype=torch.float64)
tensor([-1.9325, -2.8243, -3.0620, -3.5367, -3.6871], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4917, device='cuda:0', dtype=torch.float64)
tensor([-1.9645, -2.8210, -3.0267, -3.5178, -3.6842], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1075, device='cuda:0', dtype=torch.float64)
tensor([-1.9832, -2.8174, -3.0276, -3.5048, -3.6820], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5353, device='cuda:0', dtype=torch.float64)
tensor([-1.9671, -2.7987, -3.0680, -3.5303, -3.6679], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1169, device='cuda:0', dtype=torch.float64)
tensor([-1.9399, -2.7814, -3.0996, -3.5373, -3.6638], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4413, device='cuda:0', dtype=torch.float64)
tensor([-1.9229, -2.7813, -3.1069, -3.5065, -3.6687], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3644, device='cuda:0', dtype=torch.float64)
tensor([-1.9154, -2.7901, -3.1039, -3.5027, -3.6758], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1562, device='cuda:0', dtype=torch.float64)
tensor([-1.9223, -2.8013, -3.0848, -3.5112, -3.6813], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7676, device='cuda:0', dtype=torch.float64)
tensor([-1.9295, -2.7906, -3.0831, -3.4946, -3.6816], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3613, device='cuda:0', dtype=torch.float64)
tensor([-1.9321, -2.7882, -3.0878, -3.5211, -3.6838], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7668, device='cuda:0', dtype=torch.float64)
tensor([-1.9181, -2.7827, -3.1216, -3.5729, -3.6796], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8747, device='cuda:0', dtype=torch.float64)
tensor([-1.9084, -2.7806, -3.1603, -3.5448, -3.6651], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1459, device='cuda:0', dtype=torch.float64)
tensor([-1.9099, -2.7827, -3.1613, -3.5137, -3.6664], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7241, device='cuda:0', dtype=torch.float64)
tensor([-1.9216, -2.7755, -3.1410, -3.5180, -3.6778], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4463, device='cuda:0', dtype=torch.float64)
tensor([-1.9510, -2.7874, -3.1019, -3.4746, -3.6941], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6717, device='cuda:0', dtype=torch.float64)
tensor([-1.9707, -2.8064, -3.0772, -3.4069, -3.6782], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.2121, device='cuda:0', dtype=torch.float64)
tensor([-1.9549, -2.8133, -3.0686, -3.4346, -3.6561], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5049, device='cuda:0', dtype=torch.float64)
tensor([-1.9427, -2.8225, -3.0590, -3.5068, -3.6471], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.4632, device='cuda:0', dtype=torch.float64)
tensor([-1.9407, -2.8195, -3.0574, -3.4769, -3.6423], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1075, device='cuda:0', dtype=torch.float64)
tensor([-1.9375, -2.7968, -3.0707, -3.4756, -3.6347], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6923, device='cuda:0', dtype=torch.float64)
tensor([-1.9367, -2.7822, -3.0786, -3.5272, -3.6348], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3057, device='cuda:0', dtype=torch.float64)
tensor([-1.9363, -2.7846, -3.0772, -3.5374, -3.6299], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4930, device='cuda:0', dtype=torch.float64)
tensor([-1.9432, -2.7911, -3.0822, -3.4798, -3.6289], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.5282, device='cuda:0', dtype=torch.float64)
tensor([-1.9412, -2.7909, -3.0871, -3.4812, -3.6379], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3605, device='cuda:0', dtype=torch.float64)
tensor([-1.9298, -2.7835, -3.0981, -3.5064, -3.6476], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8289, device='cuda:0', dtype=torch.float64)
tensor([-1.9193, -2.7782, -3.1010, -3.4871, -3.6388], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6780, device='cuda:0', dtype=torch.float64)
tensor([-1.9067, -2.7889, -3.0952, -3.5264, -3.6362], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3175, device='cuda:0', dtype=torch.float64)
tensor([-1.8995, -2.8016, -3.0896, -3.5755, -3.6422], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4355, device='cuda:0', dtype=torch.float64)
tensor([-1.9143, -2.8162, -3.0705, -3.5620, -3.6438], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2883, device='cuda:0', dtype=torch.float64)
tensor([-1.9439, -2.8169, -3.0416, -3.5142, -3.6424], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6038, device='cuda:0', dtype=torch.float64)
tensor([-1.9603, -2.8058, -3.0232, -3.4906, -3.6496], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1406, device='cuda:0', dtype=torch.float64)
tensor([-1.9480, -2.7874, -3.0353, -3.4921, -3.6566], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3761, device='cuda:0', dtype=torch.float64)
tensor([-1.9174, -2.7785, -3.0605, -3.4780, -3.6682], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3513, device='cuda:0', dtype=torch.float64)
tensor([-1.8929, -2.7768, -3.0852, -3.4903, -3.6751], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0592, device='cuda:0', dtype=torch.float64)
tensor([-1.8955, -2.7887, -3.0871, -3.4907, -3.6729], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3852, device='cuda:0', dtype=torch.float64)
tensor([-1.9317, -2.7972, -3.0871, -3.4515, -3.6534], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9931, device='cuda:0', dtype=torch.float64)
tensor([-1.9776, -2.8016, -3.0840, -3.4179, -3.6352], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4664, device='cuda:0', dtype=torch.float64)
tensor([-2.0054, -2.7992, -3.0715, -3.4328, -3.6304], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3696, device='cuda:0', dtype=torch.float64)
tensor([-1.9839, -2.7853, -3.0695, -3.4513, -3.6365], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3130, device='cuda:0', dtype=torch.float64)
tensor([-1.9322, -2.7606, -3.0901, -3.4954, -3.6251], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3195, device='cuda:0', dtype=torch.float64)
tensor([-1.8811, -2.7383, -3.1099, -3.5512, -3.6110], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3844, device='cuda:0', dtype=torch.float64)
tensor([-1.8697, -2.7322, -3.1004, -3.5348, -3.6127], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3283, device='cuda:0', dtype=torch.float64)
tensor([-1.8998, -2.7569, -3.0584, -3.4742, -3.6239], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4728, device='cuda:0', dtype=torch.float64)
tensor([-1.9297, -2.7900, -3.0468, -3.4570, -3.6333], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1777, device='cuda:0', dtype=torch.float64)
tensor([-1.9522, -2.8202, -3.0376, -3.4422, -3.6546], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2928, device='cuda:0', dtype=torch.float64)
tensor([-1.9657, -2.8382, -3.0312, -3.4395, -3.6707], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5938, device='cuda:0', dtype=torch.float64)
tensor([-1.9808, -2.8480, -3.0178, -3.4118, -3.6716], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1961, device='cuda:0', dtype=torch.float64)
tensor([-1.9528, -2.8265, -3.0352, -3.4292, -3.6467], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4614, device='cuda:0', dtype=torch.float64)
tensor([-1.8977, -2.7803, -3.0811, -3.4978, -3.6188], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3244, device='cuda:0', dtype=torch.float64)
tensor([-1.8673, -2.7537, -3.1088, -3.5366, -3.6147], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2439, device='cuda:0', dtype=torch.float64)
tensor([-1.8714, -2.7635, -3.1002, -3.5117, -3.6345], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3046, device='cuda:0', dtype=torch.float64)
tensor([-1.8912, -2.7844, -3.0801, -3.4853, -3.6634], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5495, device='cuda:0', dtype=torch.float64)
tensor([-1.9124, -2.7960, -3.0756, -3.4864, -3.6716], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2104, device='cuda:0', dtype=torch.float64)
tensor([-1.9386, -2.8100, -3.0508, -3.4592, -3.6788], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3094, device='cuda:0', dtype=torch.float64)
tensor([-1.9677, -2.8243, -3.0134, -3.4401, -3.6689], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2147, device='cuda:0', dtype=torch.float64)
tensor([-1.9654, -2.8244, -3.0161, -3.4456, -3.6356], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1403, device='cuda:0', dtype=torch.float64)
tensor([-1.9373, -2.7885, -3.0680, -3.4737, -3.6076], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1637, device='cuda:0', dtype=torch.float64)
tensor([-1.9119, -2.7536, -3.1089, -3.4746, -3.6041], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2180, device='cuda:0', dtype=torch.float64)
tensor([-1.8987, -2.7401, -3.1051, -3.4720, -3.6248], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2595, device='cuda:0', dtype=torch.float64)
tensor([-1.9075, -2.7567, -3.0915, -3.4592, -3.6502], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5663, device='cuda:0', dtype=torch.float64)
tensor([-1.9078, -2.7857, -3.0873, -3.4834, -3.6697], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6646, device='cuda:0', dtype=torch.float64)
tensor([-1.9280, -2.8208, -3.0598, -3.4498, -3.6716], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4094, device='cuda:0', dtype=torch.float64)
tensor([-1.9555, -2.8425, -3.0304, -3.3948, -3.6670], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9166, device='cuda:0', dtype=torch.float64)
tensor([-1.9456, -2.8301, -3.0509, -3.4035, -3.6357], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2197, device='cuda:0', dtype=torch.float64)
tensor([-1.9192, -2.8113, -3.0868, -3.4482, -3.6221], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.3265, device='cuda:0', dtype=torch.float64)
tensor([-1.9141, -2.8093, -3.0780, -3.4446, -3.6419], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3228, device='cuda:0', dtype=torch.float64)
tensor([-1.9035, -2.8088, -3.0754, -3.4821, -3.6677], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1716, device='cuda:0', dtype=torch.float64)
tensor([-1.8951, -2.7932, -3.1040, -3.5143, -3.6463], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0393, device='cuda:0', dtype=torch.float64)
tensor([-1.9068, -2.8006, -3.1255, -3.5007, -3.6140], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0499, device='cuda:0', dtype=torch.float64)
tensor([-1.9414, -2.8165, -3.0871, -3.4618, -3.6036], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4901, device='cuda:0', dtype=torch.float64)
tensor([-1.9566, -2.8165, -3.0614, -3.4589, -3.6153], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4525, device='cuda:0', dtype=torch.float64)
tensor([-1.9370, -2.7850, -3.0762, -3.4623, -3.6178], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1810, device='cuda:0', dtype=torch.float64)
tensor([-1.9179, -2.7553, -3.0929, -3.4494, -3.6175], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9589, device='cuda:0', dtype=torch.float64)
tensor([-1.9219, -2.7468, -3.0564, -3.4209, -3.6050], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1974, device='cuda:0', dtype=torch.float64)
tensor([-1.9225, -2.7426, -3.0325, -3.4095, -3.6151], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1615, device='cuda:0', dtype=torch.float64)
tensor([-1.8910, -2.7155, -3.0575, -3.4526, -3.6048], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3787, device='cuda:0', dtype=torch.float64)
tensor([-1.8780, -2.7373, -3.0717, -3.4803, -3.6194], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.2414, device='cuda:0', dtype=torch.float64)
tensor([-1.9021, -2.7742, -3.0525, -3.4552, -3.6365], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3136, device='cuda:0', dtype=torch.float64)
tensor([-1.9097, -2.7973, -3.0582, -3.4534, -3.6496], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.2108, device='cuda:0', dtype=torch.float64)
tensor([-1.8967, -2.7786, -3.1010, -3.4777, -3.6285], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8692, device='cuda:0', dtype=torch.float64)
tensor([-1.9211, -2.7846, -3.0941, -3.4549, -3.6252], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5474, device='cuda:0', dtype=torch.float64)
tensor([-1.9568, -2.8158, -3.0587, -3.4055, -3.6444], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6630, device='cuda:0', dtype=torch.float64)
tensor([-1.9493, -2.8067, -3.0536, -3.4349, -3.6443], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5263, device='cuda:0', dtype=torch.float64)
tensor([-1.9115, -2.7745, -3.0592, -3.4745, -3.6250], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7103, device='cuda:0', dtype=torch.float64)
tensor([-1.9040, -2.7591, -3.0329, -3.4903, -3.6094], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2246, device='cuda:0', dtype=torch.float64)
tensor([-1.9085, -2.7636, -3.0018, -3.4836, -3.6008], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3183, device='cuda:0', dtype=torch.float64)
tensor([-1.9211, -2.7757, -2.9856, -3.4679, -3.5938], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1389, device='cuda:0', dtype=torch.float64)
tensor([-1.9457, -2.7951, -2.9833, -3.4523, -3.5984], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3209, device='cuda:0', dtype=torch.float64)
tensor([-1.9598, -2.8058, -3.0041, -3.4856, -3.5988], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3326, device='cuda:0', dtype=torch.float64)
tensor([-1.9611, -2.7972, -3.0428, -3.5070, -3.6061], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5115, device='cuda:0', dtype=torch.float64)
tensor([-1.9478, -2.7809, -3.0708, -3.5042, -3.6168], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7216, device='cuda:0', dtype=torch.float64)
tensor([-1.9035, -2.7604, -3.1115, -3.5214, -3.6016], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7005, device='cuda:0', dtype=torch.float64)
tensor([-1.8630, -2.7445, -3.1335, -3.5314, -3.5852], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1795, device='cuda:0', dtype=torch.float64)
tensor([-1.8747, -2.7748, -3.0945, -3.4482, -3.5833], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4590, device='cuda:0', dtype=torch.float64)
tensor([-1.9138, -2.8191, -3.0193, -3.3770, -3.6012], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0028, device='cuda:0', dtype=torch.float64)
tensor([-1.9323, -2.8284, -2.9735, -3.3661, -3.6201], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1093, device='cuda:0', dtype=torch.float64)
tensor([-1.9112, -2.8016, -2.9894, -3.4314, -3.6173], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7150, device='cuda:0', dtype=torch.float64)
tensor([-1.8989, -2.7646, -3.0174, -3.4476, -3.6195], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8674, device='cuda:0', dtype=torch.float64)
tensor([-1.9181, -2.7548, -3.0143, -3.4405, -3.6421], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5942, device='cuda:0', dtype=torch.float64)
tensor([-1.9366, -2.7651, -3.0308, -3.4447, -3.6514], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7522, device='cuda:0', dtype=torch.float64)
tensor([-1.9375, -2.7759, -3.0639, -3.4185, -3.6276], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6764, device='cuda:0', dtype=torch.float64)
tensor([-1.9529, -2.8079, -3.0623, -3.3859, -3.6096], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1665, device='cuda:0', dtype=torch.float64)
tensor([-1.9705, -2.8157, -3.0349, -3.3792, -3.6190], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1952, device='cuda:0', dtype=torch.float64)
tensor([-1.9466, -2.7624, -3.0569, -3.4081, -3.6124], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5024, device='cuda:0', dtype=torch.float64)
tensor([-1.8972, -2.7313, -3.1064, -3.4347, -3.6025], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7674, device='cuda:0', dtype=torch.float64)
tensor([-1.8865, -2.7339, -3.1028, -3.4411, -3.5911], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3438, device='cuda:0', dtype=torch.float64)
tensor([-1.9010, -2.7777, -3.0691, -3.4742, -3.5891], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.5360, device='cuda:0', dtype=torch.float64)
tensor([-1.9131, -2.7876, -3.0500, -3.4659, -3.5685], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3760, device='cuda:0', dtype=torch.float64)
tensor([-1.9236, -2.8032, -3.0338, -3.4577, -3.5700], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.2311, device='cuda:0', dtype=torch.float64)
tensor([-1.9514, -2.8057, -2.9850, -3.4779, -3.5871], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9510, device='cuda:0', dtype=torch.float64)
tensor([-1.9609, -2.8119, -2.9584, -3.4479, -3.6108], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4310, device='cuda:0', dtype=torch.float64)
tensor([-1.9414, -2.8066, -2.9905, -3.4427, -3.5995], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9698, device='cuda:0', dtype=torch.float64)
tensor([-1.9235, -2.7858, -3.0087, -3.4597, -3.5928], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1773, device='cuda:0', dtype=torch.float64)
tensor([-1.9151, -2.7708, -3.0143, -3.4848, -3.5868], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7658, device='cuda:0', dtype=torch.float64)
tensor([-1.9232, -2.7627, -3.0106, -3.4245, -3.5856], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1999, device='cuda:0', dtype=torch.float64)
tensor([-1.9228, -2.7649, -3.0240, -3.4149, -3.5896], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8335, device='cuda:0', dtype=torch.float64)
tensor([-1.8956, -2.7639, -3.0596, -3.4713, -3.5805], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0385, device='cuda:0', dtype=torch.float64)
tensor([-1.8879, -2.7631, -3.0813, -3.4444, -3.5686], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8202, device='cuda:0', dtype=torch.float64)
tensor([-1.9129, -2.7866, -3.0579, -3.3929, -3.5779], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6949, device='cuda:0', dtype=torch.float64)
tensor([-1.9240, -2.7903, -3.0409, -3.3980, -3.5814], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3773, device='cuda:0', dtype=torch.float64)
tensor([-1.9231, -2.7671, -3.0388, -3.4145, -3.5741], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5127, device='cuda:0', dtype=torch.float64)
tensor([-1.9236, -2.7580, -3.0353, -3.4133, -3.5871], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2446, device='cuda:0', dtype=torch.float64)
tensor([-1.9229, -2.7572, -3.0230, -3.4085, -3.6157], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0731, device='cuda:0', dtype=torch.float64)
tensor([-1.9126, -2.7605, -3.0201, -3.4510, -3.6269], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3651, device='cuda:0', dtype=torch.float64)
tensor([-1.8958, -2.7560, -3.0344, -3.4481, -3.6090], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9699, device='cuda:0', dtype=torch.float64)
tensor([-1.8992, -2.7555, -3.0358, -3.4043, -3.5919], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2486, device='cuda:0', dtype=torch.float64)
tensor([-1.8976, -2.7458, -3.0383, -3.3880, -3.5705], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9978, device='cuda:0', dtype=torch.float64)
tensor([-1.9034, -2.7296, -3.0430, -3.3857, -3.5607], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3121, device='cuda:0', dtype=torch.float64)
tensor([-1.9127, -2.7220, -3.0606, -3.3661, -3.5530], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4441, device='cuda:0', dtype=torch.float64)
tensor([-1.9266, -2.7375, -3.0513, -3.3327, -3.5581], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1409, device='cuda:0', dtype=torch.float64)
tensor([-1.9216, -2.7637, -3.0338, -3.3410, -3.5660], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4861, device='cuda:0', dtype=torch.float64)
tensor([-1.9196, -2.7818, -3.0205, -3.3452, -3.5707], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2344, device='cuda:0', dtype=torch.float64)
tensor([-1.9218, -2.7914, -3.0237, -3.3696, -3.5727], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4359, device='cuda:0', dtype=torch.float64)
tensor([-1.9284, -2.7843, -3.0475, -3.4170, -3.5774], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3289, device='cuda:0', dtype=torch.float64)
tensor([-1.9208, -2.7712, -3.0810, -3.4309, -3.5868], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1256, device='cuda:0', dtype=torch.float64)
tensor([-1.9104, -2.7670, -3.1041, -3.4357, -3.5844], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6022, device='cuda:0', dtype=torch.float64)
tensor([-1.9004, -2.7586, -3.1060, -3.4793, -3.5696], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0671, device='cuda:0', dtype=torch.float64)
tensor([-1.8987, -2.7652, -3.0870, -3.5122, -3.5285], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4642, device='cuda:0', dtype=torch.float64)
tensor([-1.9069, -2.7896, -3.0486, -3.4714, -3.5012], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6063, device='cuda:0', dtype=torch.float64)
tensor([-1.9320, -2.8139, -3.0019, -3.4421, -3.5201], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7285, device='cuda:0', dtype=torch.float64)
tensor([-1.9376, -2.8047, -2.9900, -3.3997, -3.5492], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9949, device='cuda:0', dtype=torch.float64)
tensor([-1.9308, -2.7782, -3.0009, -3.3877, -3.5783], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4459, device='cuda:0', dtype=torch.float64)
tensor([-1.9173, -2.7608, -3.0037, -3.4129, -3.6008], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0613, device='cuda:0', dtype=torch.float64)
tensor([-1.9073, -2.7618, -3.0020, -3.4195, -3.6045], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4108, device='cuda:0', dtype=torch.float64)
tensor([-1.8992, -2.7587, -3.0205, -3.4638, -3.5922], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3320, device='cuda:0', dtype=torch.float64)
tensor([-1.9176, -2.7642, -3.0316, -3.4809, -3.5850], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3933, device='cuda:0', dtype=torch.float64)
tensor([-1.9600, -2.7835, -3.0232, -3.4368, -3.5838], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2702, device='cuda:0', dtype=torch.float64)
tensor([-1.9903, -2.7939, -3.0062, -3.3892, -3.5960], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0862, device='cuda:0', dtype=torch.float64)
tensor([-1.9617, -2.7879, -2.9961, -3.4379, -3.5879], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2894, device='cuda:0', dtype=torch.float64)
tensor([-1.9095, -2.7676, -3.0129, -3.4764, -3.5735], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0928, device='cuda:0', dtype=torch.float64)
tensor([-1.8871, -2.7515, -3.0174, -3.4117, -3.5764], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3854, device='cuda:0', dtype=torch.float64)
tensor([-1.8754, -2.7336, -3.0198, -3.4026, -3.5799], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8015, device='cuda:0', dtype=torch.float64)
tensor([-1.8632, -2.7160, -3.0386, -3.4452, -3.5898], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8106, device='cuda:0', dtype=torch.float64)
tensor([-1.8844, -2.7144, -3.0461, -3.4213, -3.6047], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4592, device='cuda:0', dtype=torch.float64)
tensor([-1.9239, -2.7384, -3.0460, -3.3785, -3.6067], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4561, device='cuda:0', dtype=torch.float64)
tensor([-1.9479, -2.7603, -3.0426, -3.3915, -3.5960], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0214, device='cuda:0', dtype=torch.float64)
tensor([-1.9574, -2.7781, -3.0346, -3.3828, -3.5969], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8057, device='cuda:0', dtype=torch.float64)
tensor([-1.9387, -2.7853, -3.0208, -3.3517, -3.5994], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1739, device='cuda:0', dtype=torch.float64)
tensor([-1.9008, -2.7719, -2.9967, -3.3827, -3.5942], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4202, device='cuda:0', dtype=torch.float64)
tensor([-1.8725, -2.7698, -2.9869, -3.4742, -3.5801], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.2996, device='cuda:0', dtype=torch.float64)
tensor([-1.8596, -2.7592, -2.9877, -3.4431, -3.5619], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5630, device='cuda:0', dtype=torch.float64)
tensor([-1.8868, -2.7685, -2.9721, -3.4394, -3.5743], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8498, device='cuda:0', dtype=torch.float64)
tensor([-1.9345, -2.7788, -2.9688, -3.4682, -3.5928], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.4355, device='cuda:0', dtype=torch.float64)
tensor([-1.9778, -2.7798, -2.9762, -3.4052, -3.5900], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3088, device='cuda:0', dtype=torch.float64)
tensor([-1.9737, -2.7725, -2.9841, -3.4052, -3.5838], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1384, device='cuda:0', dtype=torch.float64)
tensor([-1.9224, -2.7510, -2.9954, -3.4636, -3.5665], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8028, device='cuda:0', dtype=torch.float64)
tensor([-1.8748, -2.7524, -3.0047, -3.4627, -3.5516], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3277, device='cuda:0', dtype=torch.float64)
tensor([-1.8647, -2.7551, -3.0128, -3.4185, -3.5392], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8537, device='cuda:0', dtype=torch.float64)
tensor([-1.8752, -2.7416, -3.0039, -3.4210, -3.5300], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5266, device='cuda:0', dtype=torch.float64)
tensor([-1.9047, -2.7294, -3.0110, -3.3854, -3.5372], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6355, device='cuda:0', dtype=torch.float64)
tensor([-1.9361, -2.7450, -3.0192, -3.3187, -3.5439], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6763, device='cuda:0', dtype=torch.float64)
tensor([-1.9442, -2.7656, -3.0328, -3.3136, -3.5514], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5546, device='cuda:0', dtype=torch.float64)
tensor([-1.9129, -2.7785, -3.0658, -3.4229, -3.5481], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1912, device='cuda:0', dtype=torch.float64)
tensor([-1.8927, -2.7650, -3.0857, -3.4259, -3.5421], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5472, device='cuda:0', dtype=torch.float64)
tensor([-1.9104, -2.7503, -3.0650, -3.4020, -3.5569], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.4858, device='cuda:0', dtype=torch.float64)
tensor([-1.9129, -2.7151, -3.0765, -3.4593, -3.5591], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5536, device='cuda:0', dtype=torch.float64)
tensor([-1.9093, -2.6805, -3.1024, -3.4612, -3.5611], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6915, device='cuda:0', dtype=torch.float64)
tensor([-1.9128, -2.6919, -3.1035, -3.3900, -3.5527], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8174, device='cuda:0', dtype=torch.float64)
tensor([-1.9069, -2.7251, -3.0625, -3.3667, -3.5366], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9371, device='cuda:0', dtype=torch.float64)
tensor([-1.8784, -2.7330, -3.0569, -3.4244, -3.5051], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8733, device='cuda:0', dtype=torch.float64)
tensor([-1.8667, -2.7376, -3.0428, -3.4225, -3.5010], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9508, device='cuda:0', dtype=torch.float64)
tensor([-1.8992, -2.7558, -2.9931, -3.3792, -3.5286], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5974, device='cuda:0', dtype=torch.float64)
tensor([-1.9387, -2.7597, -2.9520, -3.3728, -3.5687], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8631, device='cuda:0', dtype=torch.float64)
tensor([-1.9381, -2.7442, -2.9559, -3.4060, -3.5842], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5348, device='cuda:0', dtype=torch.float64)
tensor([-1.9391, -2.7556, -2.9739, -3.3879, -3.5798], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4372, device='cuda:0', dtype=torch.float64)
tensor([-1.9264, -2.7698, -2.9935, -3.3956, -3.5656], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5327, device='cuda:0', dtype=torch.float64)
tensor([-1.9042, -2.7696, -3.0302, -3.4281, -3.5443], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9558, device='cuda:0', dtype=torch.float64)
tensor([-1.8953, -2.7592, -3.0403, -3.4119, -3.5373], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.2729, device='cuda:0', dtype=torch.float64)
tensor([-1.9147, -2.7600, -3.0163, -3.4147, -3.5338], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3480, device='cuda:0', dtype=torch.float64)
tensor([-1.9402, -2.7836, -2.9677, -3.4223, -3.5592], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0827, device='cuda:0', dtype=torch.float64)
tensor([-1.9378, -2.7734, -2.9530, -3.3843, -3.5664], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4156, device='cuda:0', dtype=torch.float64)
tensor([-1.9141, -2.7513, -2.9641, -3.3941, -3.5677], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5023, device='cuda:0', dtype=torch.float64)
tensor([-1.8875, -2.7435, -2.9941, -3.4316, -3.5471], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1115, device='cuda:0', dtype=torch.float64)
tensor([-1.8967, -2.7534, -3.0135, -3.3690, -3.5325], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2182, device='cuda:0', dtype=torch.float64)
tensor([-1.9125, -2.7795, -3.0323, -3.3317, -3.5295], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7684, device='cuda:0', dtype=torch.float64)
tensor([-1.9016, -2.7897, -3.0499, -3.3820, -3.5264], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4844, device='cuda:0', dtype=torch.float64)
tensor([-1.8853, -2.7758, -3.0553, -3.4129, -3.5407], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3682, device='cuda:0', dtype=torch.float64)
tensor([-1.8807, -2.7591, -3.0377, -3.4090, -3.5664], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5836, device='cuda:0', dtype=torch.float64)
tensor([-1.8802, -2.7519, -3.0200, -3.4377, -3.5790], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4989, device='cuda:0', dtype=torch.float64)
tensor([-1.9000, -2.7306, -3.0095, -3.4322, -3.5694], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1741, device='cuda:0', dtype=torch.float64)
tensor([-1.9247, -2.7164, -3.0001, -3.4248, -3.5603], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1662, device='cuda:0', dtype=torch.float64)
tensor([-1.9414, -2.7266, -2.9667, -3.4156, -3.5547], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8649, device='cuda:0', dtype=torch.float64)
tensor([-1.9330, -2.7349, -2.9777, -3.3877, -3.5420], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5369, device='cuda:0', dtype=torch.float64)
tensor([-1.9218, -2.7390, -3.0177, -3.3919, -3.5302], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5249, device='cuda:0', dtype=torch.float64)
tensor([-1.9352, -2.7408, -3.0054, -3.3864, -3.5522], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3165, device='cuda:0', dtype=torch.float64)
tensor([-1.9523, -2.7540, -2.9674, -3.4080, -3.5725], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0106, device='cuda:0', dtype=torch.float64)
tensor([-1.9375, -2.7638, -2.9735, -3.3921, -3.5593], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3581, device='cuda:0', dtype=torch.float64)
tensor([-1.9047, -2.7752, -3.0240, -3.4068, -3.5209], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1228, device='cuda:0', dtype=torch.float64)
tensor([-1.9038, -2.7841, -3.0419, -3.4475, -3.5176], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9278, device='cuda:0', dtype=torch.float64)
tensor([-1.9249, -2.7858, -3.0306, -3.3866, -3.5504], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3711, device='cuda:0', dtype=torch.float64)
tensor([-1.9228, -2.7826, -3.0326, -3.3552, -3.5737], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1740, device='cuda:0', dtype=torch.float64)
tensor([-1.8901, -2.7669, -3.0552, -3.3867, -3.5726], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4866, device='cuda:0', dtype=torch.float64)
tensor([-1.8626, -2.7572, -3.0566, -3.4277, -3.5483], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.2644, device='cuda:0', dtype=torch.float64)
tensor([-1.8706, -2.7500, -3.0339, -3.3517, -3.5234], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6589, device='cuda:0', dtype=torch.float64)
tensor([-1.8900, -2.7400, -3.0031, -3.3709, -3.5034], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.3506, device='cuda:0', dtype=torch.float64)
tensor([-1.9007, -2.7272, -2.9911, -3.4626, -3.4880], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.3427, device='cuda:0', dtype=torch.float64)
tensor([-1.9249, -2.7218, -2.9757, -3.3881, -3.4757], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3294, device='cuda:0', dtype=torch.float64)
tensor([-1.9542, -2.7529, -2.9517, -3.3038, -3.4916], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9307, device='cuda:0', dtype=torch.float64)
tensor([-1.9431, -2.7499, -2.9760, -3.3134, -3.5056], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4936, device='cuda:0', dtype=torch.float64)
tensor([-1.9168, -2.7290, -3.0192, -3.3402, -3.4996], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8794, device='cuda:0', dtype=torch.float64)
tensor([-1.8938, -2.7160, -3.0330, -3.3348, -3.5174], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.2975, device='cuda:0', dtype=torch.float64)
tensor([-1.8566, -2.7087, -3.0132, -3.4250, -3.5280], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6674, device='cuda:0', dtype=torch.float64)
tensor([-1.8530, -2.7373, -2.9832, -3.5409, -3.5316], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.8503, device='cuda:0', dtype=torch.float64)
tensor([-1.9023, -2.7683, -2.9621, -3.4515, -3.5092], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6940, device='cuda:0', dtype=torch.float64)
tensor([-1.9663, -2.7811, -2.9433, -3.3950, -3.4929], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.2225, device='cuda:0', dtype=torch.float64)
tensor([-1.9671, -2.7893, -2.9436, -3.4351, -3.4893], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.8740, device='cuda:0', dtype=torch.float64)
tensor([-1.9194, -2.7554, -2.9706, -3.3933, -3.4799], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4389, device='cuda:0', dtype=torch.float64)
tensor([-1.8623, -2.7554, -3.0025, -3.3950, -3.4796], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.3954, device='cuda:0', dtype=torch.float64)
tensor([-1.8378, -2.7694, -3.0089, -3.4190, -3.4780], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4723, device='cuda:0', dtype=torch.float64)
tensor([-1.8428, -2.7566, -3.0139, -3.4114, -3.4875], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6171, device='cuda:0', dtype=torch.float64)
tensor([-1.8964, -2.7462, -2.9893, -3.3509, -3.5049], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0358, device='cuda:0', dtype=torch.float64)
tensor([-1.9329, -2.7276, -2.9761, -3.3679, -3.5101], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3574, device='cuda:0', dtype=torch.float64)
tensor([-1.9271, -2.7186, -2.9831, -3.4270, -3.5149], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1739, device='cuda:0', dtype=torch.float64)
tensor([-1.9372, -2.7327, -2.9765, -3.3665, -3.5240], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2933, device='cuda:0', dtype=torch.float64)
tensor([-1.9434, -2.7473, -2.9656, -3.3375, -3.5477], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1498, device='cuda:0', dtype=torch.float64)
tensor([-1.9286, -2.7381, -2.9796, -3.3764, -3.5598], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4427, device='cuda:0', dtype=torch.float64)
tensor([-1.9231, -2.7492, -3.0020, -3.4173, -3.5653], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.3828, device='cuda:0', dtype=torch.float64)
tensor([-1.9422, -2.7749, -3.0066, -3.3064, -3.5703], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6110, device='cuda:0', dtype=torch.float64)
tensor([-1.9418, -2.7885, -3.0144, -3.2991, -3.5634], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0343, device='cuda:0', dtype=torch.float64)
tensor([-1.9018, -2.7687, -3.0558, -3.3754, -3.5076], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8888, device='cuda:0', dtype=torch.float64)
tensor([-1.8985, -2.7371, -3.0490, -3.3519, -3.4756], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5007, device='cuda:0', dtype=torch.float64)
tensor([-1.9048, -2.7167, -3.0162, -3.3375, -3.4792], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1895, device='cuda:0', dtype=torch.float64)
tensor([-1.8995, -2.7167, -2.9952, -3.3858, -3.4811], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6636, device='cuda:0', dtype=torch.float64)
tensor([-1.9083, -2.7239, -2.9820, -3.3949, -3.4908], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4097, device='cuda:0', dtype=torch.float64)
tensor([-1.9046, -2.7368, -2.9834, -3.3975, -3.5006], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3949, device='cuda:0', dtype=torch.float64)
tensor([-1.8838, -2.7624, -2.9687, -3.4274, -3.5042], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4134, device='cuda:0', dtype=torch.float64)
tensor([-1.8747, -2.7689, -2.9473, -3.4280, -3.5107], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4081, device='cuda:0', dtype=torch.float64)
tensor([-1.8778, -2.7603, -2.9452, -3.4183, -3.5089], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5614, device='cuda:0', dtype=torch.float64)
tensor([-1.9027, -2.7527, -2.9386, -3.4305, -3.5090], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2515, device='cuda:0', dtype=torch.float64)
tensor([-1.9265, -2.7498, -2.9507, -3.4110, -3.4912], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2751, device='cuda:0', dtype=torch.float64)
tensor([-1.9444, -2.7454, -2.9568, -3.3918, -3.4653], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3078, device='cuda:0', dtype=torch.float64)
tensor([-1.9386, -2.7329, -2.9692, -3.3930, -3.4651], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3024, device='cuda:0', dtype=torch.float64)
tensor([-1.9279, -2.7225, -2.9715, -3.3501, -3.4712], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2547, device='cuda:0', dtype=torch.float64)
tensor([-1.9229, -2.7323, -2.9663, -3.3064, -3.4913], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3236, device='cuda:0', dtype=torch.float64)
tensor([-1.9332, -2.7299, -2.9688, -3.2927, -3.5079], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4522, device='cuda:0', dtype=torch.float64)
tensor([-1.9344, -2.7285, -2.9789, -3.3280, -3.5073], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5564, device='cuda:0', dtype=torch.float64)
tensor([-1.9492, -2.7442, -2.9668, -3.3173, -3.5151], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7753, device='cuda:0', dtype=torch.float64)
tensor([-1.9642, -2.7601, -2.9454, -3.2985, -3.5205], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.2493, device='cuda:0', dtype=torch.float64)
tensor([-1.9067, -2.7376, -2.9975, -3.3950, -3.5021], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6862, device='cuda:0', dtype=torch.float64)
tensor([-1.8419, -2.7038, -3.0670, -3.4728, -3.4998], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1319, device='cuda:0', dtype=torch.float64)
tensor([-1.8528, -2.7099, -3.0582, -3.4513, -3.5338], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0635, device='cuda:0', dtype=torch.float64)
tensor([-1.9020, -2.7538, -3.0047, -3.4401, -3.5596], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8452, device='cuda:0', dtype=torch.float64)
tensor([-1.9310, -2.7724, -2.9828, -3.4082, -3.5524], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5224, device='cuda:0', dtype=torch.float64)
tensor([-1.9602, -2.7885, -2.9807, -3.3442, -3.5299], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1739, device='cuda:0', dtype=torch.float64)
tensor([-1.9692, -2.7975, -2.9489, -3.3205, -3.5284], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3351, device='cuda:0', dtype=torch.float64)
tensor([-1.9387, -2.7918, -2.9418, -3.3448, -3.5487], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9289, device='cuda:0', dtype=torch.float64)
tensor([-1.8930, -2.7585, -2.9495, -3.3577, -3.5547], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0903, device='cuda:0', dtype=torch.float64)
tensor([-1.8353, -2.7260, -2.9667, -3.4223, -3.5297], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6559, device='cuda:0', dtype=torch.float64)
tensor([-1.8455, -2.7323, -2.9439, -3.4375, -3.5143], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9987, device='cuda:0', dtype=torch.float64)
tensor([-1.8981, -2.7730, -2.9159, -3.3651, -3.5123], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7787, device='cuda:0', dtype=torch.float64)
tensor([-1.9317, -2.7706, -2.9206, -3.3104, -3.5128], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.2745, device='cuda:0', dtype=torch.float64)
tensor([-1.9102, -2.7518, -2.9593, -3.3752, -3.5134], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0041, device='cuda:0', dtype=torch.float64)
tensor([-1.9037, -2.7402, -2.9774, -3.3781, -3.5187], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5595, device='cuda:0', dtype=torch.float64)
tensor([-1.9087, -2.7474, -2.9946, -3.3458, -3.5182], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0325, device='cuda:0', dtype=torch.float64)
tensor([-1.9004, -2.7372, -3.0259, -3.3902, -3.4675], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2087, device='cuda:0', dtype=torch.float64)
tensor([-1.9035, -2.7133, -3.0423, -3.3888, -3.4286], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3396, device='cuda:0', dtype=torch.float64)
tensor([-1.9241, -2.6986, -3.0354, -3.3335, -3.4333], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6164, device='cuda:0', dtype=torch.float64)
tensor([-1.9379, -2.6917, -3.0112, -3.3268, -3.4577], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6058, device='cuda:0', dtype=torch.float64)
tensor([-1.9206, -2.6798, -3.0240, -3.3635, -3.4590], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5007, device='cuda:0', dtype=torch.float64)
tensor([-1.9090, -2.6890, -3.0402, -3.3741, -3.4655], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9617, device='cuda:0', dtype=torch.float64)
tensor([-1.9331, -2.7349, -2.9849, -3.3699, -3.4913], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4130, device='cuda:0', dtype=torch.float64)
tensor([-1.9732, -2.8000, -2.9254, -3.3322, -3.5311], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8585, device='cuda:0', dtype=torch.float64)
tensor([-1.9303, -2.7826, -2.9382, -3.3435, -3.5179], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6476, device='cuda:0', dtype=torch.float64)
tensor([-1.8745, -2.7388, -2.9820, -3.3871, -3.4862], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6280, device='cuda:0', dtype=torch.float64)
tensor([-1.8673, -2.7309, -2.9979, -3.4032, -3.4695], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7075, device='cuda:0', dtype=torch.float64)
tensor([-1.8929, -2.7387, -2.9840, -3.3353, -3.4799], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9858, device='cuda:0', dtype=torch.float64)
tensor([-1.8995, -2.7522, -2.9636, -3.3170, -3.4982], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7542, device='cuda:0', dtype=torch.float64)
tensor([-1.8925, -2.7557, -2.9509, -3.3253, -3.5209], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5814, device='cuda:0', dtype=torch.float64)
tensor([-1.8838, -2.7479, -2.9611, -3.3665, -3.5434], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9119, device='cuda:0', dtype=torch.float64)
tensor([-1.8950, -2.7439, -2.9640, -3.3608, -3.5772], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5037, device='cuda:0', dtype=torch.float64)
tensor([-1.9030, -2.7494, -2.9649, -3.3571, -3.5744], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7132, device='cuda:0', dtype=torch.float64)
tensor([-1.9195, -2.7530, -2.9671, -3.3639, -3.5247], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3836, device='cuda:0', dtype=torch.float64)
tensor([-1.9364, -2.7528, -2.9514, -3.3654, -3.4722], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5864, device='cuda:0', dtype=torch.float64)
tensor([-1.9741, -2.7608, -2.9011, -3.3044, -3.4503], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1303, device='cuda:0', dtype=torch.float64)
tensor([-1.9660, -2.7520, -2.8761, -3.2903, -3.4604], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7880, device='cuda:0', dtype=torch.float64)
tensor([-1.9019, -2.7227, -2.9014, -3.3711, -3.4702], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9052, device='cuda:0', dtype=torch.float64)
tensor([-1.8649, -2.7194, -2.9122, -3.4256, -3.5026], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7514, device='cuda:0', dtype=torch.float64)
tensor([-1.8728, -2.7369, -2.9308, -3.3958, -3.5145], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7013, device='cuda:0', dtype=torch.float64)
tensor([-1.9129, -2.7552, -2.9388, -3.3880, -3.5173], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9415, device='cuda:0', dtype=torch.float64)
tensor([-1.9199, -2.7345, -2.9926, -3.4006, -3.5005], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5664, device='cuda:0', dtype=torch.float64)
tensor([-1.9010, -2.7092, -3.0387, -3.4539, -3.5001], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0277, device='cuda:0', dtype=torch.float64)
tensor([-1.9025, -2.7150, -3.0300, -3.4236, -3.5241], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3378, device='cuda:0', dtype=torch.float64)
tensor([-1.9057, -2.7209, -3.0479, -3.4021, -3.5345], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0072, device='cuda:0', dtype=torch.float64)
tensor([-1.8956, -2.7099, -3.0567, -3.3935, -3.4902], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8128, device='cuda:0', dtype=torch.float64)
tensor([-1.9049, -2.7201, -3.0060, -3.3819, -3.4615], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6979, device='cuda:0', dtype=torch.float64)
tensor([-1.9377, -2.7550, -2.9209, -3.3238, -3.4481], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4370, device='cuda:0', dtype=torch.float64)
tensor([-1.9486, -2.7762, -2.8908, -3.2785, -3.4535], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4946, device='cuda:0', dtype=torch.float64)
tensor([-1.9141, -2.7526, -2.9424, -3.2985, -3.4637], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7286, device='cuda:0', dtype=torch.float64)
tensor([-1.8752, -2.6950, -3.0152, -3.3271, -3.4803], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8401, device='cuda:0', dtype=torch.float64)
tensor([-1.8728, -2.6602, -3.0222, -3.3311, -3.5153], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6201, device='cuda:0', dtype=torch.float64)
tensor([-1.8857, -2.6492, -2.9796, -3.3331, -3.5424], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7455, device='cuda:0', dtype=torch.float64)
tensor([-1.8712, -2.6471, -2.9554, -3.3590, -3.5081], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4296, device='cuda:0', dtype=torch.float64)
tensor([-1.8683, -2.6914, -2.9318, -3.4151, -3.4810], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7161, device='cuda:0', dtype=torch.float64)
tensor([-1.9105, -2.7847, -2.8862, -3.3885, -3.4816], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7343, device='cuda:0', dtype=torch.float64)
tensor([-1.9695, -2.8559, -2.8678, -3.3146, -3.5154], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6757, device='cuda:0', dtype=torch.float64)
tensor([-1.9448, -2.8447, -2.9235, -3.3245, -3.5207], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7159, device='cuda:0', dtype=torch.float64)
tensor([-1.8843, -2.7830, -2.9835, -3.3729, -3.5139], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3772, device='cuda:0', dtype=torch.float64)
tensor([-1.8590, -2.7395, -3.0144, -3.4027, -3.5020], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7377, device='cuda:0', dtype=torch.float64)
tensor([-1.8791, -2.7016, -3.0110, -3.3701, -3.4980], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7546, device='cuda:0', dtype=torch.float64)
tensor([-1.9133, -2.6943, -2.9976, -3.3736, -3.4929], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3192, device='cuda:0', dtype=torch.float64)
tensor([-1.9284, -2.7038, -2.9870, -3.3950, -3.4940], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4275, device='cuda:0', dtype=torch.float64)
tensor([-1.9419, -2.7355, -2.9727, -3.3525, -3.4934], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6827, device='cuda:0', dtype=torch.float64)
tensor([-1.9302, -2.7572, -2.9475, -3.3246, -3.4723], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.2428, device='cuda:0', dtype=torch.float64)
tensor([-1.8977, -2.7598, -2.9290, -3.3990, -3.4660], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.2612, device='cuda:0', dtype=torch.float64)
tensor([-1.8835, -2.7413, -2.9217, -3.3803, -3.4791], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8713, device='cuda:0', dtype=torch.float64)
tensor([-1.8930, -2.7083, -2.9375, -3.3331, -3.4952], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.6235, device='cuda:0', dtype=torch.float64)
tensor([-1.8967, -2.6610, -2.9498, -3.3970, -3.4992], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5802, device='cuda:0', dtype=torch.float64)
tensor([-1.8832, -2.6458, -2.9915, -3.4427, -3.4913], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6384, device='cuda:0', dtype=torch.float64)
tensor([-1.8914, -2.6784, -3.0058, -3.4152, -3.4954], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8069, device='cuda:0', dtype=torch.float64)
tensor([-1.9027, -2.7224, -2.9977, -3.3983, -3.4985], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3375, device='cuda:0', dtype=torch.float64)
tensor([-1.9162, -2.7456, -2.9809, -3.4271, -3.4779], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.5772, device='cuda:0', dtype=torch.float64)
tensor([-1.9317, -2.7488, -2.9516, -3.3156, -3.4318], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.2168, device='cuda:0', dtype=torch.float64)
tensor([-1.9117, -2.7368, -2.9074, -3.3156, -3.4004], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2724, device='cuda:0', dtype=torch.float64)
tensor([-1.8936, -2.7533, -2.8730, -3.3490, -3.4146], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.4663, device='cuda:0', dtype=torch.float64)
tensor([-1.8871, -2.7633, -2.8657, -3.2613, -3.4274], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0308, device='cuda:0', dtype=torch.float64)
tensor([-1.8813, -2.7513, -2.9006, -3.2906, -3.4489], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3256, device='cuda:0', dtype=torch.float64)
tensor([-1.8763, -2.7180, -2.9726, -3.3526, -3.4710], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0075, device='cuda:0', dtype=torch.float64)
tensor([-1.8979, -2.7066, -3.0258, -3.3157, -3.4856], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3395, device='cuda:0', dtype=torch.float64)
tensor([-1.9298, -2.7147, -3.0452, -3.2660, -3.5038], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5490, device='cuda:0', dtype=torch.float64)
tensor([-1.9446, -2.7137, -3.0440, -3.2880, -3.5073], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2290, device='cuda:0', dtype=torch.float64)
tensor([-1.9341, -2.7349, -3.0286, -3.3301, -3.4861], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5471, device='cuda:0', dtype=torch.float64)
tensor([-1.9018, -2.7600, -3.0024, -3.3265, -3.4577], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3760, device='cuda:0', dtype=torch.float64)
tensor([-1.8851, -2.7707, -2.9791, -3.3486, -3.4364], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3375, device='cuda:0', dtype=torch.float64)
tensor([-1.8870, -2.7720, -2.9552, -3.3889, -3.4287], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6363, device='cuda:0', dtype=torch.float64)
tensor([-1.9185, -2.7780, -2.9176, -3.3433, -3.4248], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5049, device='cuda:0', dtype=torch.float64)
tensor([-1.9563, -2.7903, -2.8877, -3.3189, -3.4257], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4401, device='cuda:0', dtype=torch.float64)
tensor([-1.9363, -2.7892, -2.8878, -3.3303, -3.4147], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4889, device='cuda:0', dtype=torch.float64)
tensor([-1.9138, -2.7732, -2.8989, -3.3384, -3.4182], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2450, device='cuda:0', dtype=torch.float64)
tensor([-1.8656, -2.7349, -2.9259, -3.3483, -3.4388], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4691, device='cuda:0', dtype=torch.float64)
tensor([-1.8425, -2.7184, -2.9375, -3.3770, -3.4734], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4319, device='cuda:0', dtype=torch.float64)
tensor([-1.8612, -2.7056, -2.9388, -3.3867, -3.5101], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2214, device='cuda:0', dtype=torch.float64)
tensor([-1.9008, -2.7070, -2.9316, -3.3676, -3.5250], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3068, device='cuda:0', dtype=torch.float64)
tensor([-1.9420, -2.7160, -2.9371, -3.3338, -3.5488], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4506, device='cuda:0', dtype=torch.float64)
tensor([-1.9553, -2.6941, -2.9789, -3.3240, -3.5315], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5560, device='cuda:0', dtype=torch.float64)
tensor([-1.9280, -2.6539, -3.0215, -3.3751, -3.4895], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0214, device='cuda:0', dtype=torch.float64)
tensor([-1.9134, -2.6566, -3.0089, -3.3336, -3.4545], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4838, device='cuda:0', dtype=torch.float64)
tensor([-1.8842, -2.6594, -2.9736, -3.3118, -3.4333], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3916, device='cuda:0', dtype=torch.float64)
tensor([-1.8314, -2.6642, -2.9491, -3.3505, -3.4187], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4183, device='cuda:0', dtype=torch.float64)
tensor([-1.8248, -2.7112, -2.9116, -3.3463, -3.4462], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4749, device='cuda:0', dtype=torch.float64)
tensor([-1.8818, -2.7725, -2.8761, -3.3103, -3.4951], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6780, device='cuda:0', dtype=torch.float64)
tensor([-1.9300, -2.7745, -2.9074, -3.2802, -3.5143], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5216, device='cuda:0', dtype=torch.float64)
tensor([-1.9477, -2.7314, -2.9602, -3.2683, -3.4874], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3994, device='cuda:0', dtype=torch.float64)
tensor([-1.9130, -2.6870, -2.9891, -3.3174, -3.4527], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3785, device='cuda:0', dtype=torch.float64)
tensor([-1.8589, -2.6646, -2.9975, -3.3756, -3.4389], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7506, device='cuda:0', dtype=torch.float64)
tensor([-1.8128, -2.6669, -2.9785, -3.3992, -3.4554], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3329, device='cuda:0', dtype=torch.float64)
tensor([-1.8176, -2.7085, -2.9365, -3.4107, -3.4786], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2971, device='cuda:0', dtype=torch.float64)
tensor([-1.8935, -2.7578, -2.8954, -3.3935, -3.5126], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4455, device='cuda:0', dtype=torch.float64)
tensor([-2.0067, -2.8122, -2.8512, -3.3274, -3.5537], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7087, device='cuda:0', dtype=torch.float64)
tensor([-2.0887, -2.8325, -2.8394, -3.2202, -3.5538], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5748, device='cuda:0', dtype=torch.float64)
tensor([-2.0518, -2.7969, -2.9163, -3.2397, -3.5105], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4226, device='cuda:0', dtype=torch.float64)
tensor([-1.9349, -2.7325, -3.0353, -3.3640, -3.4541], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0633, device='cuda:0', dtype=torch.float64)
tensor([-1.8284, -2.7126, -3.1044, -3.4013, -3.4329], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5105, device='cuda:0', dtype=torch.float64)
tensor([-1.7856, -2.7238, -3.0979, -3.3984, -3.4274], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.4450, device='cuda:0', dtype=torch.float64)
tensor([-1.8075, -2.7398, -3.0246, -3.3730, -3.4420], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7218, device='cuda:0', dtype=torch.float64)
tensor([-1.8915, -2.7492, -2.9395, -3.2894, -3.4547], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0615, device='cuda:0', dtype=torch.float64)
tensor([-1.9944, -2.7684, -2.8697, -3.1826, -3.4672], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.7363, device='cuda:0', dtype=torch.float64)
tensor([-2.0386, -2.7589, -2.8258, -3.1775, -3.4953], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8050, device='cuda:0', dtype=torch.float64)
tensor([-1.9758, -2.7981, -2.8781, -3.4106, -3.5001], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(4.5146, device='cuda:0', dtype=torch.float64)
tensor([-1.9030, -2.6831, -3.0054, -3.3700, -3.5228], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(5.5443, device='cuda:0', dtype=torch.float64)
tensor([-1.8033, -2.6515, -3.0057, -3.5171, -3.5229], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.9660, device='cuda:0', dtype=torch.float64)
tensor([-1.8253, -2.6944, -2.9625, -3.4431, -3.5055], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(3.1830, device='cuda:0', dtype=torch.float64)
tensor([-1.9272, -2.7389, -2.9424, -3.3250, -3.4793], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(4.9808, device='cuda:0', dtype=torch.float64)
tensor([-1.9658, -2.7519, -2.8990, -3.3665, -3.4615], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(3.7205, device='cuda:0', dtype=torch.float64)
tensor([-2.0104, -2.7385, -2.8891, -3.2651, -3.4273], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7126, device='cuda:0', dtype=torch.float64)
tensor([-2.0118, -2.7322, -2.9117, -3.2258, -3.4199], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(3.4684, device='cuda:0', dtype=torch.float64)
tensor([-1.9603, -2.6913, -2.9239, -3.2928, -3.3971], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6157, device='cuda:0', dtype=torch.float64)
tensor([-1.8931, -2.6724, -2.9346, -3.4416, -3.3987], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.8692, device='cuda:0', dtype=torch.float64)
tensor([-1.8484, -2.6502, -2.9447, -3.3595, -3.3847], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.2728, device='cuda:0', dtype=torch.float64)
tensor([-1.8287, -2.6351, -2.9654, -3.4144, -3.3801], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1034, device='cuda:0', dtype=torch.float64)
tensor([-1.8874, -2.6448, -2.9300, -3.4765, -3.3974], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.2326, device='cuda:0', dtype=torch.float64)
tensor([-1.9620, -2.6969, -2.8761, -3.4238, -3.4135], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5700, device='cuda:0', dtype=torch.float64)
tensor([-2.0224, -2.7811, -2.8444, -3.3396, -3.4319], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8031, device='cuda:0', dtype=torch.float64)
tensor([-1.9845, -2.8374, -2.8407, -3.3371, -3.4428], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7624, device='cuda:0', dtype=torch.float64)
tensor([-1.8893, -2.8205, -2.9029, -3.4246, -3.4402], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.3354, device='cuda:0', dtype=torch.float64)
tensor([-1.8233, -2.7732, -2.9658, -3.3845, -3.4370], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6488, device='cuda:0', dtype=torch.float64)
tensor([-1.8159, -2.7276, -3.0128, -3.3261, -3.4429], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1650, device='cuda:0', dtype=torch.float64)
tensor([-1.8561, -2.6765, -3.0606, -3.3169, -3.4275], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3376, device='cuda:0', dtype=torch.float64)
tensor([-1.9096, -2.6698, -3.0889, -3.3526, -3.4146], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0825, device='cuda:0', dtype=torch.float64)
tensor([-1.9404, -2.6975, -3.0714, -3.2695, -3.4411], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6504, device='cuda:0', dtype=torch.float64)
tensor([-1.9725, -2.7534, -2.9966, -3.1949, -3.4912], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.5028, device='cuda:0', dtype=torch.float64)
tensor([-1.9247, -2.7562, -2.9499, -3.3164, -3.5113], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7712, device='cuda:0', dtype=torch.float64)
tensor([-1.8715, -2.7376, -2.9219, -3.4324, -3.5028], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.5968, device='cuda:0', dtype=torch.float64)
tensor([-1.8777, -2.7286, -2.8856, -3.3314, -3.4953], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.2479, device='cuda:0', dtype=torch.float64)
tensor([-1.9122, -2.7043, -2.8610, -3.3148, -3.5005], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0422, device='cuda:0', dtype=torch.float64)
tensor([-1.9306, -2.6917, -2.8743, -3.3839, -3.4749], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.7729, device='cuda:0', dtype=torch.float64)
tensor([-1.9067, -2.6932, -2.9133, -3.3799, -3.4311], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5575, device='cuda:0', dtype=torch.float64)
tensor([-1.8868, -2.7178, -2.9208, -3.3744, -3.4422], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1867, device='cuda:0', dtype=torch.float64)
tensor([-1.8814, -2.7451, -2.9288, -3.4002, -3.4896], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.3680, device='cuda:0', dtype=torch.float64)
tensor([-1.8787, -2.7269, -2.9764, -3.3861, -3.5105], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7693, device='cuda:0', dtype=torch.float64)
tensor([-1.8885, -2.7043, -3.0044, -3.3170, -3.5110], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.4037, device='cuda:0', dtype=torch.float64)
tensor([-1.9089, -2.7081, -2.9748, -3.3098, -3.4978], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0522, device='cuda:0', dtype=torch.float64)
tensor([-1.9376, -2.7367, -2.9184, -3.3525, -3.4612], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1811, device='cuda:0', dtype=torch.float64)
tensor([-1.9511, -2.7436, -2.8994, -3.3207, -3.4073], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7239, device='cuda:0', dtype=torch.float64)
tensor([-1.9499, -2.7525, -2.9316, -3.2957, -3.3758], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.6612, device='cuda:0', dtype=torch.float64)
tensor([-1.9141, -2.7356, -2.9747, -3.3607, -3.3812], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8099, device='cuda:0', dtype=torch.float64)
tensor([-1.9107, -2.7081, -3.0015, -3.3480, -3.4304], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.3961, device='cuda:0', dtype=torch.float64)
tensor([-1.9029, -2.6518, -2.9985, -3.3058, -3.4646], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0157, device='cuda:0', dtype=torch.float64)
tensor([-1.8896, -2.6449, -2.9937, -3.3130, -3.4774], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8855, device='cuda:0', dtype=torch.float64)
tensor([-1.8873, -2.6772, -2.9497, -3.3703, -3.4877], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.6605, device='cuda:0', dtype=torch.float64)
tensor([-1.9244, -2.7380, -2.8978, -3.2823, -3.4875], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9102, device='cuda:0', dtype=torch.float64)
tensor([-1.9364, -2.7749, -2.8940, -3.2810, -3.4427], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5731, device='cuda:0', dtype=torch.float64)
tensor([-1.9099, -2.7627, -2.9158, -3.3694, -3.4226], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9719, device='cuda:0', dtype=torch.float64)
tensor([-1.9119, -2.7422, -2.9144, -3.3997, -3.4458], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2730, device='cuda:0', dtype=torch.float64)
tensor([-1.9254, -2.7405, -2.8923, -3.3764, -3.4646], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7785, device='cuda:0', dtype=torch.float64)
tensor([-1.9247, -2.7181, -2.9003, -3.3123, -3.4351], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3850, device='cuda:0', dtype=torch.float64)
tensor([-1.8972, -2.7050, -2.9288, -3.3300, -3.3984], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7286, device='cuda:0', dtype=torch.float64)
tensor([-1.8770, -2.7180, -2.9350, -3.3311, -3.3915], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4392, device='cuda:0', dtype=torch.float64)
tensor([-1.8690, -2.7558, -2.9317, -3.3125, -3.4009], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7401, device='cuda:0', dtype=torch.float64)
tensor([-1.8658, -2.7338, -2.9564, -3.3179, -3.3892], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4145, device='cuda:0', dtype=torch.float64)
tensor([-1.8811, -2.7120, -2.9927, -3.3412, -3.3996], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7273, device='cuda:0', dtype=torch.float64)
tensor([-1.9201, -2.7110, -3.0136, -3.3223, -3.4275], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4241, device='cuda:0', dtype=torch.float64)
tensor([-1.9475, -2.7083, -3.0106, -3.2918, -3.4716], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5430, device='cuda:0', dtype=torch.float64)
tensor([-1.9665, -2.7065, -2.9889, -3.2932, -3.4909], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3045, device='cuda:0', dtype=torch.float64)
tensor([-1.9319, -2.6815, -2.9852, -3.3309, -3.4720], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5725, device='cuda:0', dtype=torch.float64)
tensor([-1.8620, -2.6685, -3.0097, -3.4174, -3.4397], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9087, device='cuda:0', dtype=torch.float64)
tensor([-1.8427, -2.6976, -3.0076, -3.3947, -3.4162], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2791, device='cuda:0', dtype=torch.float64)
tensor([-1.8733, -2.7442, -2.9616, -3.3291, -3.4219], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0987, device='cuda:0', dtype=torch.float64)
tensor([-1.9070, -2.7723, -2.9200, -3.3124, -3.4264], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4905, device='cuda:0', dtype=torch.float64)
tensor([-1.9496, -2.7783, -2.9015, -3.2954, -3.4224], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5200, device='cuda:0', dtype=torch.float64)
tensor([-1.9614, -2.7506, -2.9039, -3.2859, -3.4329], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7075, device='cuda:0', dtype=torch.float64)
tensor([-1.9232, -2.7005, -2.9147, -3.3568, -3.4502], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6148, device='cuda:0', dtype=torch.float64)
tensor([-1.8556, -2.6215, -2.9484, -3.4583, -3.4295], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7728, device='cuda:0', dtype=torch.float64)
tensor([-1.8157, -2.6135, -2.9572, -3.4914, -3.4173], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6149, device='cuda:0', dtype=torch.float64)
tensor([-1.8538, -2.6741, -2.8966, -3.4053, -3.4174], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3336, device='cuda:0', dtype=torch.float64)
tensor([-1.9091, -2.7534, -2.8348, -3.3290, -3.4290], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6183, device='cuda:0', dtype=torch.float64)
tensor([-1.9439, -2.7790, -2.8175, -3.3036, -3.4286], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7203, device='cuda:0', dtype=torch.float64)
tensor([-1.9185, -2.7363, -2.8496, -3.3091, -3.4323], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5566, device='cuda:0', dtype=torch.float64)
tensor([-1.9253, -2.7201, -2.8782, -3.2736, -3.4432], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7498, device='cuda:0', dtype=torch.float64)
tensor([-1.9362, -2.7184, -2.8929, -3.2705, -3.4616], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8533, device='cuda:0', dtype=torch.float64)
tensor([-1.9100, -2.7257, -2.9369, -3.3004, -3.4784], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5490, device='cuda:0', dtype=torch.float64)
tensor([-1.8554, -2.7214, -3.0037, -3.3688, -3.4525], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6395, device='cuda:0', dtype=torch.float64)
tensor([-1.8454, -2.7432, -3.0296, -3.4016, -3.4178], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5708, device='cuda:0', dtype=torch.float64)
tensor([-1.8837, -2.7627, -2.9895, -3.3703, -3.3975], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1249, device='cuda:0', dtype=torch.float64)
tensor([-1.9483, -2.7793, -2.9579, -3.2938, -3.3928], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4692, device='cuda:0', dtype=torch.float64)
tensor([-1.9772, -2.7558, -2.9490, -3.2619, -3.3972], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5568, device='cuda:0', dtype=torch.float64)
tensor([-1.9471, -2.7190, -2.9415, -3.2837, -3.4097], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6944, device='cuda:0', dtype=torch.float64)
tensor([-1.8864, -2.6888, -2.9321, -3.3463, -3.4491], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6510, device='cuda:0', dtype=torch.float64)
tensor([-1.8515, -2.6919, -2.9055, -3.3504, -3.5030], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6978, device='cuda:0', dtype=torch.float64)
tensor([-1.8458, -2.6871, -2.9059, -3.3357, -3.5316], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1571, device='cuda:0', dtype=torch.float64)
tensor([-1.8642, -2.7007, -2.8943, -3.3489, -3.5073], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5322, device='cuda:0', dtype=torch.float64)
tensor([-1.9082, -2.7393, -2.9050, -3.3700, -3.4906], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.3715, device='cuda:0', dtype=torch.float64)
tensor([-1.9722, -2.7819, -2.9028, -3.2808, -3.4586], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3875, device='cuda:0', dtype=torch.float64)
tensor([-1.9810, -2.7835, -2.9423, -3.2692, -3.4217], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1892, device='cuda:0', dtype=torch.float64)
tensor([-1.9302, -2.7725, -2.9890, -3.3848, -3.4112], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.9326, device='cuda:0', dtype=torch.float64)
tensor([-1.8590, -2.7169, -3.0066, -3.3389, -3.4090], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3312, device='cuda:0', dtype=torch.float64)
tensor([-1.8297, -2.7018, -2.9720, -3.3386, -3.4217], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1154, device='cuda:0', dtype=torch.float64)
tensor([-1.8209, -2.6913, -2.9221, -3.3750, -3.4208], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2998, device='cuda:0', dtype=torch.float64)
tensor([-1.8867, -2.7256, -2.8552, -3.3427, -3.4099], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8898, device='cuda:0', dtype=torch.float64)
tensor([-1.9672, -2.7614, -2.8137, -3.2020, -3.3875], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4928, device='cuda:0', dtype=torch.float64)
tensor([-1.9934, -2.7594, -2.8195, -3.1681, -3.3800], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6897, device='cuda:0', dtype=torch.float64)
tensor([-1.9345, -2.7230, -2.8606, -3.2365, -3.3874], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4366, device='cuda:0', dtype=torch.float64)
tensor([-1.8678, -2.7136, -2.9081, -3.2975, -3.4175], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7735, device='cuda:0', dtype=torch.float64)
tensor([-1.8214, -2.7332, -2.9268, -3.3195, -3.4351], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6754, device='cuda:0', dtype=torch.float64)
tensor([-1.8302, -2.7518, -2.9064, -3.3462, -3.4475], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5074, device='cuda:0', dtype=torch.float64)
tensor([-1.8899, -2.7391, -2.8748, -3.3890, -3.4494], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0842, device='cuda:0', dtype=torch.float64)
tensor([-1.9297, -2.7201, -2.8632, -3.3675, -3.4487], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5157, device='cuda:0', dtype=torch.float64)
tensor([-1.9238, -2.6855, -2.8849, -3.3886, -3.4583], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9262, device='cuda:0', dtype=torch.float64)
tensor([-1.8932, -2.6723, -2.9035, -3.4356, -3.4690], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2656, device='cuda:0', dtype=torch.float64)
tensor([-1.8601, -2.7007, -2.9101, -3.4443, -3.4564], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7147, device='cuda:0', dtype=torch.float64)
tensor([-1.8715, -2.7535, -2.9033, -3.3540, -3.4383], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3766, device='cuda:0', dtype=torch.float64)
tensor([-1.8970, -2.7631, -2.9156, -3.2764, -3.4116], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7613, device='cuda:0', dtype=torch.float64)
tensor([-1.9206, -2.7324, -2.9183, -3.2956, -3.4015], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5708, device='cuda:0', dtype=torch.float64)
tensor([-1.9647, -2.6990, -2.9042, -3.3325, -3.4167], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6288, device='cuda:0', dtype=torch.float64)
tensor([-2.0059, -2.6737, -2.8922, -3.2989, -3.4421], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7686, device='cuda:0', dtype=torch.float64)
tensor([-1.9660, -2.6387, -2.9428, -3.3243, -3.4358], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.5646, device='cuda:0', dtype=torch.float64)
tensor([-1.8835, -2.6207, -3.0172, -3.4363, -3.4143], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.3456, device='cuda:0', dtype=torch.float64)
tensor([-1.8717, -2.6687, -3.0089, -3.4371, -3.4231], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1016, device='cuda:0', dtype=torch.float64)
tensor([-1.9084, -2.7580, -2.9666, -3.3219, -3.4499], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0660, device='cuda:0', dtype=torch.float64)
tensor([-1.9307, -2.7978, -2.9616, -3.2753, -3.4449], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.2956, device='cuda:0', dtype=torch.float64)
tensor([-1.9210, -2.7996, -2.9704, -3.3144, -3.4344], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5008, device='cuda:0', dtype=torch.float64)
tensor([-1.9064, -2.7727, -2.9765, -3.3381, -3.4289], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7206, device='cuda:0', dtype=torch.float64)
tensor([-1.9147, -2.7588, -2.9397, -3.2611, -3.4218], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2651, device='cuda:0', dtype=torch.float64)
tensor([-1.9035, -2.7424, -2.9107, -3.2255, -3.4202], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3663, device='cuda:0', dtype=torch.float64)
tensor([-1.8827, -2.7198, -2.9185, -3.2042, -3.4137], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5450, device='cuda:0', dtype=torch.float64)
tensor([-1.8647, -2.6990, -2.9001, -3.2309, -3.4329], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3132, device='cuda:0', dtype=torch.float64)
tensor([-1.8738, -2.7026, -2.8645, -3.2608, -3.4537], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4332, device='cuda:0', dtype=torch.float64)
tensor([-1.8894, -2.6892, -2.8623, -3.3036, -3.4557], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3187, device='cuda:0', dtype=torch.float64)
tensor([-1.9217, -2.7026, -2.8644, -3.3074, -3.4743], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7616, device='cuda:0', dtype=torch.float64)
tensor([-1.9746, -2.7307, -2.8505, -3.2626, -3.4509], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5748, device='cuda:0', dtype=torch.float64)
tensor([-1.9874, -2.7359, -2.8673, -3.2450, -3.4157], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9298, device='cuda:0', dtype=torch.float64)
tensor([-1.9352, -2.7091, -2.9028, -3.2931, -3.3756], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6086, device='cuda:0', dtype=torch.float64)
tensor([-1.8747, -2.6692, -2.8886, -3.3815, -3.3556], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8891, device='cuda:0', dtype=torch.float64)
tensor([-1.8612, -2.6376, -2.8625, -3.4097, -3.3563], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1685, device='cuda:0', dtype=torch.float64)
tensor([-1.9085, -2.6570, -2.8542, -3.3319, -3.3763], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9671, device='cuda:0', dtype=torch.float64)
tensor([-1.9368, -2.6639, -2.8996, -3.3228, -3.3935], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9554, device='cuda:0', dtype=torch.float64)
tensor([-1.9170, -2.6921, -2.9655, -3.3709, -3.4032], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4661, device='cuda:0', dtype=torch.float64)
tensor([-1.8954, -2.7425, -3.0058, -3.4036, -3.4089], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5579, device='cuda:0', dtype=torch.float64)
tensor([-1.9078, -2.7658, -3.0019, -3.3451, -3.4108], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5982, device='cuda:0', dtype=torch.float64)
tensor([-1.9216, -2.7539, -3.0080, -3.3134, -3.4239], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9172, device='cuda:0', dtype=torch.float64)
tensor([-1.9332, -2.7249, -3.0190, -3.2432, -3.4318], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9728, device='cuda:0', dtype=torch.float64)
tensor([-1.9248, -2.7007, -3.0021, -3.2583, -3.4474], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6610, device='cuda:0', dtype=torch.float64)
tensor([-1.9140, -2.7268, -2.9437, -3.2899, -3.4595], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3930, device='cuda:0', dtype=torch.float64)
tensor([-1.8922, -2.7461, -2.8632, -3.3267, -3.4672], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5929, device='cuda:0', dtype=torch.float64)
tensor([-1.8510, -2.7378, -2.8182, -3.3586, -3.4519], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7311, device='cuda:0', dtype=torch.float64)
tensor([-1.8114, -2.7139, -2.8422, -3.4034, -3.4212], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1786, device='cuda:0', dtype=torch.float64)
tensor([-1.8296, -2.6903, -2.8901, -3.4108, -3.4058], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6745, device='cuda:0', dtype=torch.float64)
tensor([-1.9104, -2.6965, -2.9187, -3.3100, -3.4000], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6985, device='cuda:0', dtype=torch.float64)
tensor([-1.9762, -2.7109, -2.9314, -3.2417, -3.4229], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3904, device='cuda:0', dtype=torch.float64)
tensor([-1.9869, -2.7349, -2.9491, -3.1877, -3.4509], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4140, device='cuda:0', dtype=torch.float64)
tensor([-1.9431, -2.7294, -2.9720, -3.1760, -3.4610], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5268, device='cuda:0', dtype=torch.float64)
tensor([-1.8830, -2.6958, -2.9957, -3.2334, -3.4342], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7217, device='cuda:0', dtype=torch.float64)
tensor([-1.8670, -2.6759, -2.9639, -3.2813, -3.4040], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4309, device='cuda:0', dtype=torch.float64)
tensor([-1.9178, -2.6865, -2.8955, -3.2927, -3.4040], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9093, device='cuda:0', dtype=torch.float64)
tensor([-1.9776, -2.6869, -2.8209, -3.2995, -3.4040], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8124, device='cuda:0', dtype=torch.float64)
tensor([-1.9835, -2.6920, -2.7836, -3.3369, -3.3861], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6861, device='cuda:0', dtype=torch.float64)
tensor([-1.9313, -2.7127, -2.8041, -3.4064, -3.3910], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8879, device='cuda:0', dtype=torch.float64)
tensor([-1.8589, -2.7312, -2.8460, -3.5312, -3.4051], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.9047, device='cuda:0', dtype=torch.float64)
tensor([-1.8450, -2.7535, -2.8804, -3.4434, -3.4160], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7582, device='cuda:0', dtype=torch.float64)
tensor([-1.8556, -2.7270, -2.9351, -3.4219, -3.4406], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7053, device='cuda:0', dtype=torch.float64)
tensor([-1.8806, -2.6998, -2.9484, -3.4412, -3.4471], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.7825, device='cuda:0', dtype=torch.float64)
tensor([-1.9659, -2.7034, -2.9513, -3.2673, -3.4422], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8817, device='cuda:0', dtype=torch.float64)
tensor([-2.0136, -2.6856, -2.9508, -3.2196, -3.4059], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9984, device='cuda:0', dtype=torch.float64)
tensor([-1.9651, -2.6549, -2.9589, -3.2919, -3.3789], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1871, device='cuda:0', dtype=torch.float64)
tensor([-1.9212, -2.6455, -2.9341, -3.3404, -3.3748], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0417, device='cuda:0', dtype=torch.float64)
tensor([-1.8924, -2.6538, -2.8984, -3.3246, -3.4036], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9053, device='cuda:0', dtype=torch.float64)
tensor([-1.8622, -2.6500, -2.9090, -3.3490, -3.4066], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0707, device='cuda:0', dtype=torch.float64)
tensor([-1.8743, -2.6680, -2.9198, -3.3453, -3.4114], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4784, device='cuda:0', dtype=torch.float64)
tensor([-1.9106, -2.7137, -2.8926, -3.2975, -3.4172], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4447, device='cuda:0', dtype=torch.float64)
tensor([-1.9418, -2.7645, -2.8616, -3.2472, -3.4219], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8019, device='cuda:0', dtype=torch.float64)
tensor([-1.9380, -2.7899, -2.8516, -3.2713, -3.4282], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1787, device='cuda:0', dtype=torch.float64)
tensor([-1.8947, -2.7569, -2.8774, -3.3400, -3.4069], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0848, device='cuda:0', dtype=torch.float64)
tensor([-1.8872, -2.7079, -2.9176, -3.3252, -3.3932], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6763, device='cuda:0', dtype=torch.float64)
tensor([-1.9121, -2.6775, -2.9315, -3.3104, -3.3958], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7424, device='cuda:0', dtype=torch.float64)
tensor([-1.9435, -2.6826, -2.9376, -3.3258, -3.3840], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.3052, device='cuda:0', dtype=torch.float64)
tensor([-1.9516, -2.6938, -2.9484, -3.3050, -3.3592], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5299, device='cuda:0', dtype=torch.float64)
tensor([-1.9186, -2.6894, -2.9736, -3.2662, -3.3293], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0292, device='cuda:0', dtype=torch.float64)
tensor([-1.8851, -2.6892, -2.9667, -3.3285, -3.3532], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5610, device='cuda:0', dtype=torch.float64)
tensor([-1.8714, -2.7076, -2.9371, -3.4155, -3.4126], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7258, device='cuda:0', dtype=torch.float64)
tensor([-1.8767, -2.7189, -2.9113, -3.3615, -3.4425], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7235, device='cuda:0', dtype=torch.float64)
tensor([-1.8590, -2.7195, -2.9265, -3.3851, -3.4527], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3878, device='cuda:0', dtype=torch.float64)
tensor([-1.8718, -2.7268, -2.9184, -3.3943, -3.4729], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6326, device='cuda:0', dtype=torch.float64)
tensor([-1.8865, -2.7414, -2.9155, -3.3619, -3.4910], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0879, device='cuda:0', dtype=torch.float64)
tensor([-1.8984, -2.7397, -2.9041, -3.2479, -3.5004], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7056, device='cuda:0', dtype=torch.float64)
tensor([-1.9031, -2.7042, -2.9416, -3.2224, -3.4854], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0248, device='cuda:0', dtype=torch.float64)
tensor([-1.8949, -2.6546, -2.9871, -3.2551, -3.4478], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8301, device='cuda:0', dtype=torch.float64)
tensor([-1.9410, -2.6642, -2.9891, -3.2171, -3.4037], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1487, device='cuda:0', dtype=torch.float64)
tensor([-2.0055, -2.7331, -2.9166, -3.1141, -3.3920], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6095, device='cuda:0', dtype=torch.float64)
tensor([-1.9902, -2.7265, -2.8708, -3.1598, -3.3820], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4826, device='cuda:0', dtype=torch.float64)
tensor([-1.9294, -2.7028, -2.8412, -3.2826, -3.3937], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6468, device='cuda:0', dtype=torch.float64)
tensor([-1.8859, -2.7077, -2.8263, -3.3583, -3.4226], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6454, device='cuda:0', dtype=torch.float64)
tensor([-1.8544, -2.7213, -2.8463, -3.3947, -3.4428], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6555, device='cuda:0', dtype=torch.float64)
tensor([-1.8396, -2.7170, -2.8954, -3.3984, -3.4014], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8678, device='cuda:0', dtype=torch.float64)
tensor([-1.8623, -2.7256, -2.9357, -3.3925, -3.3807], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.3120, device='cuda:0', dtype=torch.float64)
tensor([-1.9331, -2.7690, -2.9402, -3.2716, -3.3990], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4684, device='cuda:0', dtype=torch.float64)
tensor([-1.9576, -2.8022, -2.9243, -3.2182, -3.4371], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.2554, device='cuda:0', dtype=torch.float64)
tensor([-1.8916, -2.7729, -2.9419, -3.2918, -3.4243], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4778, device='cuda:0', dtype=torch.float64)
tensor([-1.8428, -2.7333, -2.9491, -3.4226, -3.4250], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.7298, device='cuda:0', dtype=torch.float64)
tensor([-1.8646, -2.7019, -2.9367, -3.3128, -3.3933], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5253, device='cuda:0', dtype=torch.float64)
tensor([-1.9619, -2.7531, -2.9019, -3.2221, -3.3784], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.5691, device='cuda:0', dtype=torch.float64)
tensor([-1.9913, -2.7432, -2.9045, -3.2219, -3.3480], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9092, device='cuda:0', dtype=torch.float64)
tensor([-1.9772, -2.7297, -2.8904, -3.3099, -3.3372], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.8704, device='cuda:0', dtype=torch.float64)
tensor([-1.9544, -2.7550, -2.8654, -3.2343, -3.3478], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.9672, device='cuda:0', dtype=torch.float64)
tensor([-1.9044, -2.7363, -2.8266, -3.2782, -3.3772], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5781, device='cuda:0', dtype=torch.float64)
tensor([-1.8566, -2.7187, -2.8131, -3.4061, -3.4279], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.4329, device='cuda:0', dtype=torch.float64)
tensor([-1.8386, -2.7008, -2.8091, -3.3756, -3.4240], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.2918, device='cuda:0', dtype=torch.float64)
tensor([-1.8819, -2.6857, -2.8067, -3.3721, -3.4346], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7741, device='cuda:0', dtype=torch.float64)
tensor([-1.9402, -2.6754, -2.8271, -3.4430, -3.4810], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(3.0189, device='cuda:0', dtype=torch.float64)
tensor([-1.9735, -2.6448, -2.8845, -3.3549, -3.4482], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3020, device='cuda:0', dtype=torch.float64)
tensor([-1.9878, -2.6732, -2.9361, -3.3224, -3.4419], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8956, device='cuda:0', dtype=torch.float64)
tensor([-1.9276, -2.6740, -2.9765, -3.3632, -3.4326], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6272, device='cuda:0', dtype=torch.float64)
tensor([-1.8978, -2.6987, -2.9849, -3.3945, -3.4093], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0839, device='cuda:0', dtype=torch.float64)
tensor([-1.8718, -2.7170, -2.9802, -3.3187, -3.3738], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6510, device='cuda:0', dtype=torch.float64)
tensor([-1.8622, -2.7507, -2.9502, -3.3015, -3.3642], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7979, device='cuda:0', dtype=torch.float64)
tensor([-1.9008, -2.7743, -2.9288, -3.3062, -3.3799], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.3156, device='cuda:0', dtype=torch.float64)
tensor([-1.9621, -2.7815, -2.8740, -3.2035, -3.4250], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5553, device='cuda:0', dtype=torch.float64)
tensor([-1.9503, -2.7466, -2.8780, -3.2109, -3.4560], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.4868, device='cuda:0', dtype=torch.float64)
tensor([-1.8711, -2.6761, -2.9381, -3.3007, -3.4485], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7222, device='cuda:0', dtype=torch.float64)
tensor([-1.8318, -2.6714, -2.9575, -3.3526, -3.4318], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.7315, device='cuda:0', dtype=torch.float64)
tensor([-1.8733, -2.7474, -2.9103, -3.2291, -3.4172], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8219, device='cuda:0', dtype=torch.float64)
tensor([-1.9077, -2.8371, -2.8769, -3.1768, -3.4119], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0414, device='cuda:0', dtype=torch.float64)
tensor([-1.9029, -2.8653, -2.8738, -3.2161, -3.3869], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4893, device='cuda:0', dtype=torch.float64)
tensor([-1.9243, -2.8703, -2.8950, -3.2143, -3.3670], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4787, device='cuda:0', dtype=torch.float64)
tensor([-1.9356, -2.8508, -2.9146, -3.2129, -3.3628], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4737, device='cuda:0', dtype=torch.float64)
tensor([-1.9267, -2.7798, -2.9520, -3.2587, -3.3806], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8441, device='cuda:0', dtype=torch.float64)
tensor([-1.8817, -2.6876, -2.9977, -3.3569, -3.3797], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9113, device='cuda:0', dtype=torch.float64)
tensor([-1.8515, -2.6299, -2.9885, -3.3811, -3.3749], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7148, device='cuda:0', dtype=torch.float64)
tensor([-1.8638, -2.6460, -2.9186, -3.3299, -3.3931], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.3736, device='cuda:0', dtype=torch.float64)
tensor([-1.8819, -2.6909, -2.8273, -3.3308, -3.4219], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6003, device='cuda:0', dtype=torch.float64)
tensor([-1.8894, -2.7072, -2.7971, -3.3812, -3.4441], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7560, device='cuda:0', dtype=torch.float64)
tensor([-1.9017, -2.6950, -2.8151, -3.3737, -3.4332], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8829, device='cuda:0', dtype=torch.float64)
tensor([-1.9334, -2.7071, -2.8825, -3.3069, -3.4222], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1750, device='cuda:0', dtype=torch.float64)
tensor([-1.9598, -2.7302, -2.9206, -3.3054, -3.4001], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4592, device='cuda:0', dtype=torch.float64)
tensor([-1.9579, -2.7442, -2.9638, -3.3106, -3.3683], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5068, device='cuda:0', dtype=torch.float64)
tensor([-1.9382, -2.7354, -3.0061, -3.2974, -3.3305], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7193, device='cuda:0', dtype=torch.float64)
tensor([-1.9081, -2.7116, -2.9766, -3.3188, -3.3241], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6167, device='cuda:0', dtype=torch.float64)
tensor([-1.8644, -2.6717, -2.9394, -3.4031, -3.3221], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9598, device='cuda:0', dtype=torch.float64)
tensor([-1.8558, -2.6741, -2.8795, -3.3255, -3.3538], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5478, device='cuda:0', dtype=torch.float64)
tensor([-1.8742, -2.6834, -2.8328, -3.2901, -3.4002], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.3928, device='cuda:0', dtype=torch.float64)
tensor([-1.8982, -2.6833, -2.8218, -3.3202, -3.4340], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9545, device='cuda:0', dtype=torch.float64)
tensor([-1.9491, -2.7478, -2.8442, -3.2945, -3.4253], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.6356, device='cuda:0', dtype=torch.float64)
tensor([-1.9936, -2.7992, -2.9088, -3.2006, -3.3750], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1655, device='cuda:0', dtype=torch.float64)
tensor([-1.9929, -2.8077, -2.9707, -3.1968, -3.3409], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0877, device='cuda:0', dtype=torch.float64)
tensor([-1.9192, -2.7442, -3.0451, -3.3129, -3.3401], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.2147, device='cuda:0', dtype=torch.float64)
tensor([-1.8588, -2.6959, -3.0797, -3.3662, -3.3393], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.6471, device='cuda:0', dtype=torch.float64)
tensor([-1.8580, -2.6965, -3.0472, -3.2632, -3.3479], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.3506, device='cuda:0', dtype=torch.float64)
tensor([-1.8660, -2.7103, -2.9900, -3.2436, -3.3564], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6161, device='cuda:0', dtype=torch.float64)
tensor([-1.8967, -2.7230, -2.9517, -3.2835, -3.3713], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.2562, device='cuda:0', dtype=torch.float64)
tensor([-1.9078, -2.7217, -2.9129, -3.2481, -3.3666], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5690, device='cuda:0', dtype=torch.float64)
tensor([-1.9041, -2.7160, -2.8764, -3.2672, -3.3670], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8459, device='cuda:0', dtype=torch.float64)
tensor([-1.8610, -2.7092, -2.8924, -3.3337, -3.3622], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4844, device='cuda:0', dtype=torch.float64)
tensor([-1.8402, -2.7132, -2.9282, -3.3326, -3.3386], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6073, device='cuda:0', dtype=torch.float64)
tensor([-1.8700, -2.7248, -2.9352, -3.2701, -3.3268], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4929, device='cuda:0', dtype=torch.float64)
tensor([-1.9064, -2.7596, -2.9278, -3.2457, -3.3358], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7069, device='cuda:0', dtype=torch.float64)
tensor([-1.9078, -2.7940, -2.9185, -3.2892, -3.3724], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8687, device='cuda:0', dtype=torch.float64)
tensor([-1.9087, -2.8334, -2.8685, -3.2665, -3.4418], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2885, device='cuda:0', dtype=torch.float64)
tensor([-1.9318, -2.8351, -2.8155, -3.2650, -3.5138], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0479, device='cuda:0', dtype=torch.float64)
tensor([-1.9234, -2.7577, -2.8228, -3.3444, -3.5385], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4893, device='cuda:0', dtype=torch.float64)
tensor([-1.9014, -2.6509, -2.8729, -3.4671, -3.4997], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.7501, device='cuda:0', dtype=torch.float64)
tensor([-1.9268, -2.6006, -2.8874, -3.3827, -3.4622], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3368, device='cuda:0', dtype=torch.float64)
tensor([-1.9164, -2.5689, -2.9361, -3.3618, -3.4178], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9933, device='cuda:0', dtype=torch.float64)
tensor([-1.8797, -2.5723, -2.9802, -3.3699, -3.3501], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4228, device='cuda:0', dtype=torch.float64)
tensor([-1.8966, -2.6615, -2.9801, -3.3460, -3.3293], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1991, device='cuda:0', dtype=torch.float64)
tensor([-1.9461, -2.8059, -2.9427, -3.1999, -3.3374], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.4516, device='cuda:0', dtype=torch.float64)
tensor([-1.9825, -2.9209, -2.9022, -3.1266, -3.3701], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9909, device='cuda:0', dtype=torch.float64)
tensor([-1.9727, -2.8836, -2.9338, -3.2233, -3.3995], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.7840, device='cuda:0', dtype=torch.float64)
tensor([-1.9284, -2.7751, -2.9870, -3.1717, -3.3913], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9324, device='cuda:0', dtype=torch.float64)
tensor([-1.9190, -2.6718, -2.9959, -3.1527, -3.3824], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(3.2136, device='cuda:0', dtype=torch.float64)
tensor([-1.8960, -2.5909, -2.9639, -3.2007, -3.3736], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7283, device='cuda:0', dtype=torch.float64)
tensor([-1.8646, -2.6371, -2.9805, -3.3389, -3.3408], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(3.0536, device='cuda:0', dtype=torch.float64)
tensor([-1.8155, -2.5989, -3.0186, -3.3958, -3.3135], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.5653, device='cuda:0', dtype=torch.float64)
tensor([-1.8487, -2.7111, -2.9904, -3.4260, -3.3441], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0815, device='cuda:0', dtype=torch.float64)
tensor([-1.9735, -2.8502, -2.8976, -3.4243, -3.4140], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.2489, device='cuda:0', dtype=torch.float64)
tensor([-2.0756, -2.9213, -2.8607, -3.3360, -3.4532], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9769, device='cuda:0', dtype=torch.float64)
tensor([-2.0766, -2.8600, -2.9076, -3.3034, -3.4231], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9448, device='cuda:0', dtype=torch.float64)
tensor([-1.9777, -2.7473, -2.9526, -3.4108, -3.3743], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1393, device='cuda:0', dtype=torch.float64)
tensor([-1.8827, -2.6779, -2.9387, -3.4757, -3.3305], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.3808, device='cuda:0', dtype=torch.float64)
tensor([-1.8389, -2.6615, -2.8760, -3.3894, -3.3169], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0097, device='cuda:0', dtype=torch.float64)
tensor([-1.8207, -2.6600, -2.8400, -3.3629, -3.2949], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.3609, device='cuda:0', dtype=torch.float64)
tensor([-1.8248, -2.6645, -2.8664, -3.3934, -3.2715], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0026, device='cuda:0', dtype=torch.float64)
tensor([-1.8918, -2.7206, -2.8758, -3.2986, -3.3064], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.8133, device='cuda:0', dtype=torch.float64)
tensor([-1.9836, -2.8058, -2.8447, -3.1303, -3.3933], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1151, device='cuda:0', dtype=torch.float64)
tensor([-1.9825, -2.7943, -2.8318, -3.1257, -3.4445], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0599, device='cuda:0', dtype=torch.float64)
tensor([-1.8932, -2.6901, -2.8598, -3.2622, -3.4442], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6015, device='cuda:0', dtype=torch.float64)
tensor([-1.8323, -2.6443, -2.8736, -3.3643, -3.4402], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.3296, device='cuda:0', dtype=torch.float64)
tensor([-1.8535, -2.6844, -2.8451, -3.2969, -3.4475], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9038, device='cuda:0', dtype=torch.float64)
tensor([-1.9052, -2.7455, -2.8604, -3.2460, -3.4283], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0337, device='cuda:0', dtype=torch.float64)
tensor([-1.9423, -2.7345, -2.8917, -3.2409, -3.3885], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7782, device='cuda:0', dtype=torch.float64)
tensor([-1.9609, -2.7290, -2.9155, -3.2114, -3.3763], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9590, device='cuda:0', dtype=torch.float64)
tensor([-1.9927, -2.7332, -2.9135, -3.1671, -3.3891], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5075, device='cuda:0', dtype=torch.float64)
tensor([-2.0097, -2.7133, -2.9068, -3.1605, -3.4382], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0391, device='cuda:0', dtype=torch.float64)
tensor([-1.8946, -2.6383, -2.9636, -3.2892, -3.4492], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7563, device='cuda:0', dtype=torch.float64)
tensor([-1.7938, -2.6011, -3.0097, -3.3822, -3.4259], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8151, device='cuda:0', dtype=torch.float64)
tensor([-1.8180, -2.6566, -2.9492, -3.3453, -3.3997], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5424, device='cuda:0', dtype=torch.float64)
tensor([-1.9307, -2.7423, -2.8524, -3.2655, -3.3727], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3075, device='cuda:0', dtype=torch.float64)
tensor([-2.0236, -2.7606, -2.8094, -3.2201, -3.3514], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3385, device='cuda:0', dtype=torch.float64)
tensor([-1.9979, -2.7349, -2.8253, -3.2530, -3.3410], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3943, device='cuda:0', dtype=torch.float64)
tensor([-1.9168, -2.7064, -2.8563, -3.2789, -3.3591], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2759, device='cuda:0', dtype=torch.float64)
tensor([-1.8257, -2.7014, -2.8739, -3.3290, -3.4179], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6585, device='cuda:0', dtype=torch.float64)
tensor([-1.7899, -2.7112, -2.8951, -3.3975, -3.4741], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7141, device='cuda:0', dtype=torch.float64)
tensor([-1.8644, -2.7528, -2.8942, -3.3708, -3.4821], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7556, device='cuda:0', dtype=torch.float64)
tensor([-2.0069, -2.8052, -2.8366, -3.2934, -3.4594], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3996, device='cuda:0', dtype=torch.float64)
tensor([-2.0692, -2.8377, -2.7931, -3.2483, -3.4076], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3643, device='cuda:0', dtype=torch.float64)
tensor([-1.9931, -2.7971, -2.7843, -3.2866, -3.3748], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4244, device='cuda:0', dtype=torch.float64)
tensor([-1.8490, -2.7235, -2.8446, -3.3852, -3.3782], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4069, device='cuda:0', dtype=torch.float64)
tensor([-1.7509, -2.6841, -2.9229, -3.4514, -3.4169], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4827, device='cuda:0', dtype=torch.float64)
tensor([-1.7777, -2.6909, -2.9652, -3.4407, -3.4641], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4972, device='cuda:0', dtype=torch.float64)
tensor([-1.9200, -2.7545, -2.9383, -3.3365, -3.4820], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6569, device='cuda:0', dtype=torch.float64)
tensor([-2.0379, -2.7946, -2.9536, -3.2398, -3.4629], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3726, device='cuda:0', dtype=torch.float64)
tensor([-2.0633, -2.8177, -2.9609, -3.1802, -3.3921], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6888, device='cuda:0', dtype=torch.float64)
tensor([-1.9654, -2.7889, -2.9483, -3.2307, -3.3264], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5424, device='cuda:0', dtype=torch.float64)
tensor([-1.8209, -2.7276, -2.9463, -3.3342, -3.3092], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9195, device='cuda:0', dtype=torch.float64)
tensor([-1.7775, -2.7147, -2.9231, -3.3273, -3.3217], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4788, device='cuda:0', dtype=torch.float64)
tensor([-1.8087, -2.7255, -2.8699, -3.3089, -3.3577], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7924, device='cuda:0', dtype=torch.float64)
tensor([-1.9135, -2.7341, -2.7963, -3.2802, -3.4171], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3706, device='cuda:0', dtype=torch.float64)
tensor([-2.0393, -2.7663, -2.7890, -3.2314, -3.4841], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6546, device='cuda:0', dtype=torch.float64)
tensor([-2.1194, -2.7884, -2.8475, -3.1658, -3.5137], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4560, device='cuda:0', dtype=torch.float64)
tensor([-2.0432, -2.7337, -2.9502, -3.2286, -3.4746], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4883, device='cuda:0', dtype=torch.float64)
tensor([-1.9181, -2.6670, -3.0624, -3.3216, -3.3860], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4245, device='cuda:0', dtype=torch.float64)
tensor([-1.8254, -2.6355, -3.0787, -3.3929, -3.3393], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3858, device='cuda:0', dtype=torch.float64)
tensor([-1.8142, -2.6317, -2.9992, -3.4091, -3.3319], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6112, device='cuda:0', dtype=torch.float64)
tensor([-1.8512, -2.6621, -2.9096, -3.3561, -3.3251], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8266, device='cuda:0', dtype=torch.float64)
tensor([-1.9102, -2.7037, -2.8363, -3.3317, -3.3651], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5143, device='cuda:0', dtype=torch.float64)
tensor([-1.9445, -2.7179, -2.8160, -3.3073, -3.4097], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5414, device='cuda:0', dtype=torch.float64)
tensor([-1.9369, -2.6972, -2.8536, -3.3209, -3.4222], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8976, device='cuda:0', dtype=torch.float64)
tensor([-1.9390, -2.7106, -2.8776, -3.3054, -3.3985], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8428, device='cuda:0', dtype=torch.float64)
tensor([-1.9224, -2.7227, -2.9177, -3.3518, -3.3565], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7643, device='cuda:0', dtype=torch.float64)
tensor([-1.9135, -2.7169, -2.9528, -3.3339, -3.2858], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4662, device='cuda:0', dtype=torch.float64)
tensor([-1.9372, -2.7241, -2.9499, -3.2512, -3.2688], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8201, device='cuda:0', dtype=torch.float64)
tensor([-1.9547, -2.7313, -2.8809, -3.1994, -3.3339], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4206, device='cuda:0', dtype=torch.float64)
tensor([-1.9387, -2.7231, -2.8327, -3.1976, -3.4185], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8135, device='cuda:0', dtype=torch.float64)
tensor([-1.9014, -2.6727, -2.8560, -3.2288, -3.4435], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4779, device='cuda:0', dtype=torch.float64)
tensor([-1.8626, -2.6304, -2.9165, -3.2601, -3.3983], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6244, device='cuda:0', dtype=torch.float64)
tensor([-1.8688, -2.6514, -2.9540, -3.2713, -3.3423], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5814, device='cuda:0', dtype=torch.float64)
tensor([-1.9207, -2.7386, -2.9376, -3.2429, -3.3132], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8179, device='cuda:0', dtype=torch.float64)
tensor([-1.9330, -2.7535, -2.9199, -3.2773, -3.3130], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6024, device='cuda:0', dtype=torch.float64)
tensor([-1.9252, -2.7765, -2.9054, -3.3152, -3.3544], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.4552, device='cuda:0', dtype=torch.float64)
tensor([-1.9272, -2.7801, -2.8774, -3.2600, -3.3942], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7698, device='cuda:0', dtype=torch.float64)
tensor([-1.9257, -2.7609, -2.8527, -3.2546, -3.4472], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4461, device='cuda:0', dtype=torch.float64)
tensor([-1.9081, -2.6939, -2.8666, -3.3064, -3.4909], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4462, device='cuda:0', dtype=torch.float64)
tensor([-1.8735, -2.6467, -2.8967, -3.3560, -3.4955], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6750, device='cuda:0', dtype=torch.float64)
tensor([-1.8568, -2.6416, -2.9231, -3.3881, -3.4857], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5682, device='cuda:0', dtype=torch.float64)
tensor([-1.8592, -2.6626, -2.9527, -3.4210, -3.4483], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8148, device='cuda:0', dtype=torch.float64)
tensor([-1.9387, -2.7272, -2.9290, -3.4076, -3.4181], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6518, device='cuda:0', dtype=torch.float64)
tensor([-2.0169, -2.8101, -2.8857, -3.3134, -3.4011], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6851, device='cuda:0', dtype=torch.float64)
tensor([-1.9480, -2.7660, -2.9098, -3.3295, -3.3545], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7644, device='cuda:0', dtype=torch.float64)
tensor([-1.8424, -2.7007, -2.9506, -3.4055, -3.3019], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7671, device='cuda:0', dtype=torch.float64)
tensor([-1.8234, -2.6973, -2.9627, -3.4236, -3.2937], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5792, device='cuda:0', dtype=torch.float64)
tensor([-1.8663, -2.7265, -2.9153, -3.3486, -3.3087], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4832, device='cuda:0', dtype=torch.float64)
tensor([-1.9658, -2.7897, -2.8493, -3.2392, -3.3409], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4831, device='cuda:0', dtype=torch.float64)
tensor([-2.0315, -2.7871, -2.8462, -3.1941, -3.3460], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6685, device='cuda:0', dtype=torch.float64)
tensor([-2.0141, -2.7327, -2.9353, -3.2071, -3.3225], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7026, device='cuda:0', dtype=torch.float64)
tensor([-1.9450, -2.6933, -3.0229, -3.2645, -3.2999], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0536, device='cuda:0', dtype=torch.float64)
tensor([-1.9121, -2.7127, -3.0427, -3.3295, -3.3333], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1647, device='cuda:0', dtype=torch.float64)
tensor([-1.9195, -2.7764, -3.0071, -3.2812, -3.4159], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.9432, device='cuda:0', dtype=torch.float64)
tensor([-1.8522, -2.7027, -3.0130, -3.3600, -3.4484], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.6405, device='cuda:0', dtype=torch.float64)
tensor([-1.8458, -2.6926, -2.9722, -3.5127, -3.4851], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.5693, device='cuda:0', dtype=torch.float64)
tensor([-1.9556, -2.7402, -2.8284, -3.4155, -3.5310], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0957, device='cuda:0', dtype=torch.float64)
tensor([-1.9978, -2.7486, -2.7375, -3.3085, -3.4960], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.4420, device='cuda:0', dtype=torch.float64)
tensor([-1.9054, -2.6841, -2.7829, -3.3707, -3.3909], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4014, device='cuda:0', dtype=torch.float64)
tensor([-1.8461, -2.6833, -2.8333, -3.4239, -3.3294], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.3342, device='cuda:0', dtype=torch.float64)
tensor([-1.8709, -2.7517, -2.8371, -3.3322, -3.3138], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7014, device='cuda:0', dtype=torch.float64)
tensor([-1.9276, -2.8237, -2.8315, -3.2597, -3.3339], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7014, device='cuda:0', dtype=torch.float64)
tensor([-1.9450, -2.8067, -2.8481, -3.2229, -3.3309], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5811, device='cuda:0', dtype=torch.float64)
tensor([-1.9223, -2.7664, -2.8894, -3.2524, -3.3362], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5174, device='cuda:0', dtype=torch.float64)
tensor([-1.9044, -2.7392, -2.9032, -3.2945, -3.4681], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9482, device='cuda:0', dtype=torch.float64)
tensor([-1.9083, -2.7329, -2.9153, -3.2492, -3.4468], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0949, device='cuda:0', dtype=torch.float64)
tensor([-1.8943, -2.7352, -2.9099, -3.3027, -3.4668], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8180, device='cuda:0', dtype=torch.float64)
tensor([-1.8873, -2.7837, -2.8754, -3.4078, -3.4370], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.5265, device='cuda:0', dtype=torch.float64)
tensor([-1.8700, -2.7512, -2.8534, -3.3391, -3.3623], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6796, device='cuda:0', dtype=torch.float64)
tensor([-1.8823, -2.7663, -2.8355, -3.2984, -3.3155], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.9756, device='cuda:0', dtype=torch.float64)
tensor([-1.9414, -2.7398, -2.8257, -3.3180, -3.3466], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1631, device='cuda:0', dtype=torch.float64)
tensor([-1.9786, -2.6799, -2.8661, -3.2324, -3.3291], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6735, device='cuda:0', dtype=torch.float64)
tensor([-1.9896, -2.6591, -2.9198, -3.1917, -3.3582], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.8109, device='cuda:0', dtype=torch.float64)
tensor([-1.9623, -2.6992, -2.9247, -3.2238, -3.4198], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1707, device='cuda:0', dtype=torch.float64)
tensor([-1.9306, -2.7581, -2.9137, -3.2282, -3.4537], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.6808, device='cuda:0', dtype=torch.float64)
tensor([-1.8879, -2.7259, -2.9138, -3.2447, -3.4356], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.5386, device='cuda:0', dtype=torch.float64)
tensor([-1.8606, -2.6665, -2.9312, -3.3335, -3.3878], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7876, device='cuda:0', dtype=torch.float64)
tensor([-1.8830, -2.6274, -2.9453, -3.4493, -3.3672], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1827, device='cuda:0', dtype=torch.float64)
tensor([-2.0041, -2.6711, -2.9104, -3.2955, -3.3418], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0022, device='cuda:0', dtype=torch.float64)
tensor([-2.0991, -2.7420, -2.8757, -3.1904, -3.3594], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1374, device='cuda:0', dtype=torch.float64)
tensor([-2.0374, -2.7261, -2.8798, -3.2385, -3.3552], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9292, device='cuda:0', dtype=torch.float64)
tensor([-1.8998, -2.7056, -2.8834, -3.4654, -3.3951], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(3.0758, device='cuda:0', dtype=torch.float64)
tensor([-1.8384, -2.7934, -2.8140, -3.4067, -3.4409], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3760, device='cuda:0', dtype=torch.float64)
tensor([-1.8219, -2.8432, -2.8092, -3.3818, -3.4386], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9807, device='cuda:0', dtype=torch.float64)
tensor([-1.8533, -2.7838, -2.8487, -3.4065, -3.3853], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6394, device='cuda:0', dtype=torch.float64)
tensor([-1.9223, -2.7934, -2.8643, -3.4090, -3.3305], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8589, device='cuda:0', dtype=torch.float64)
tensor([-1.9786, -2.7448, -2.8787, -3.3386, -3.2890], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4758, device='cuda:0', dtype=torch.float64)
tensor([-1.9981, -2.7115, -2.8811, -3.2482, -3.3173], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5368, device='cuda:0', dtype=torch.float64)
tensor([-1.9533, -2.6644, -2.9075, -3.2592, -3.3423], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6354, device='cuda:0', dtype=torch.float64)
tensor([-1.8603, -2.6194, -2.9583, -3.3416, -3.3537], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8550, device='cuda:0', dtype=torch.float64)
tensor([-1.8396, -2.6358, -2.9678, -3.3040, -3.3528], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9848, device='cuda:0', dtype=torch.float64)
tensor([-1.8962, -2.6934, -2.9258, -3.2665, -3.3679], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6345, device='cuda:0', dtype=torch.float64)
tensor([-1.9816, -2.7818, -2.8753, -3.2190, -3.4179], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6029, device='cuda:0', dtype=torch.float64)
tensor([-2.0338, -2.8178, -2.8525, -3.1740, -3.4421], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0678, device='cuda:0', dtype=torch.float64)
tensor([-1.9975, -2.7511, -2.8809, -3.1941, -3.3761], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9235, device='cuda:0', dtype=torch.float64)
tensor([-1.8852, -2.6677, -2.9299, -3.2827, -3.3250], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5794, device='cuda:0', dtype=torch.float64)
tensor([-1.8157, -2.6339, -2.9506, -3.3258, -3.2953], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7119, device='cuda:0', dtype=torch.float64)
tensor([-1.8486, -2.6612, -2.9566, -3.2557, -3.2706], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0592, device='cuda:0', dtype=torch.float64)
tensor([-1.8992, -2.7047, -2.9348, -3.2280, -3.2693], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3641, device='cuda:0', dtype=torch.float64)
tensor([-1.9404, -2.7520, -2.9354, -3.1954, -3.3059], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0822, device='cuda:0', dtype=torch.float64)
tensor([-1.9900, -2.7879, -2.9150, -3.1425, -3.3342], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7717, device='cuda:0', dtype=torch.float64)
tensor([-2.0129, -2.8031, -2.9007, -3.1176, -3.3268], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8589, device='cuda:0', dtype=torch.float64)
tensor([-1.9640, -2.7652, -2.9005, -3.1802, -3.3253], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.7060, device='cuda:0', dtype=torch.float64)
tensor([-1.8581, -2.6919, -2.9026, -3.3648, -3.3267], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0583, device='cuda:0', dtype=torch.float64)
tensor([-1.8455, -2.6787, -2.8472, -3.4512, -3.3735], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.2381, device='cuda:0', dtype=torch.float64)
tensor([-1.9300, -2.7564, -2.7408, -3.3247, -3.4869], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8915, device='cuda:0', dtype=torch.float64)
tensor([-2.0328, -2.8219, -2.7432, -3.2057, -3.5957], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8806, device='cuda:0', dtype=torch.float64)
tensor([-2.0210, -2.7704, -2.8547, -3.2200, -3.5863], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7853, device='cuda:0', dtype=torch.float64)
tensor([-1.9373, -2.7009, -2.9907, -3.3015, -3.4914], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1107, device='cuda:0', dtype=torch.float64)
tensor([-1.8708, -2.6921, -3.0461, -3.3088, -3.4020], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5507, device='cuda:0', dtype=torch.float64)
tensor([-1.8504, -2.7244, -3.0317, -3.3183, -3.3367], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7004, device='cuda:0', dtype=torch.float64)
tensor([-1.8524, -2.7438, -3.0282, -3.3343, -3.2668], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8304, device='cuda:0', dtype=torch.float64)
tensor([-1.8916, -2.7428, -3.0163, -3.2824, -3.2645], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5676, device='cuda:0', dtype=torch.float64)
tensor([-1.9362, -2.7384, -3.0051, -3.2294, -3.3093], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5460, device='cuda:0', dtype=torch.float64)
tensor([-1.9390, -2.7312, -2.9801, -3.2481, -3.3862], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7884, device='cuda:0', dtype=torch.float64)
tensor([-1.9305, -2.7292, -2.9123, -3.2949, -3.4450], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8659, device='cuda:0', dtype=torch.float64)
tensor([-1.9120, -2.7150, -2.8369, -3.2433, -3.4321], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4908, device='cuda:0', dtype=torch.float64)
tensor([-1.9138, -2.7010, -2.8004, -3.2534, -3.3750], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.5896, device='cuda:0', dtype=torch.float64)
tensor([-1.9435, -2.6771, -2.7073, -3.3853, -3.3434], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0996, device='cuda:0', dtype=torch.float64)
tensor([-1.9578, -2.7073, -2.7171, -3.3480, -3.3352], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.6778, device='cuda:0', dtype=torch.float64)
tensor([-1.9566, -2.7625, -2.7387, -3.2005, -3.3525], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.2515, device='cuda:0', dtype=torch.float64)
tensor([-1.9397, -2.8030, -2.7494, -3.2137, -3.3599], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.8335, device='cuda:0', dtype=torch.float64)
tensor([-1.9043, -2.7752, -2.8184, -3.3400, -3.3449], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1922, device='cuda:0', dtype=torch.float64)
tensor([-1.9228, -2.7663, -2.8849, -3.3926, -3.3196], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.6745, device='cuda:0', dtype=torch.float64)
tensor([-1.9726, -2.7515, -2.9565, -3.2975, -3.3266], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1491, device='cuda:0', dtype=torch.float64)
tensor([-1.9716, -2.7148, -3.0375, -3.2592, -3.3291], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0175, device='cuda:0', dtype=torch.float64)
tensor([-1.9189, -2.6275, -3.1303, -3.3107, -3.2989], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5840, device='cuda:0', dtype=torch.float64)
tensor([-1.8324, -2.5901, -3.1719, -3.3329, -3.2898], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3273, device='cuda:0', dtype=torch.float64)
tensor([-1.7827, -2.6354, -3.1357, -3.3243, -3.3454], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7672, device='cuda:0', dtype=torch.float64)
tensor([-1.8099, -2.7303, -3.0472, -3.3012, -3.3917], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6408, device='cuda:0', dtype=torch.float64)
tensor([-1.8676, -2.7902, -2.9620, -3.2457, -3.4146], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5721, device='cuda:0', dtype=torch.float64)
tensor([-1.9640, -2.8184, -2.8978, -3.1931, -3.4177], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5817, device='cuda:0', dtype=torch.float64)
tensor([-2.0488, -2.7963, -2.8518, -3.1458, -3.3980], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9249, device='cuda:0', dtype=torch.float64)
tensor([-2.0291, -2.7242, -2.8465, -3.1767, -3.3427], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5015, device='cuda:0', dtype=torch.float64)
tensor([-1.9265, -2.6514, -2.8737, -3.2717, -3.2874], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7484, device='cuda:0', dtype=torch.float64)
tensor([-1.8441, -2.6348, -2.9005, -3.2731, -3.2648], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5589, device='cuda:0', dtype=torch.float64)
tensor([-1.8278, -2.6680, -2.9096, -3.2765, -3.2638], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.4215, device='cuda:0', dtype=torch.float64)
tensor([-1.8428, -2.6982, -2.8865, -3.4110, -3.2978], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8921, device='cuda:0', dtype=torch.float64)
tensor([-1.9548, -2.7601, -2.8153, -3.3187, -3.3758], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4784, device='cuda:0', dtype=torch.float64)
tensor([-2.0634, -2.8236, -2.7401, -3.1347, -3.4426], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3273, device='cuda:0', dtype=torch.float64)
tensor([-2.1020, -2.8461, -2.7398, -3.1431, -3.5054], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.2714, device='cuda:0', dtype=torch.float64)
tensor([-2.0149, -2.7481, -2.7817, -3.2905, -3.4927], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9678, device='cuda:0', dtype=torch.float64)
tensor([-1.9129, -2.6721, -2.8629, -3.4144, -3.4765], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.6031, device='cuda:0', dtype=torch.float64)
tensor([-1.8721, -2.6561, -2.8949, -3.3812, -3.4423], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8822, device='cuda:0', dtype=torch.float64)
tensor([-1.8601, -2.6627, -2.9364, -3.3989, -3.4281], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.4234, device='cuda:0', dtype=torch.float64)
tensor([-1.8900, -2.6575, -2.9063, -3.3260, -3.4119], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5139, device='cuda:0', dtype=torch.float64)
tensor([-1.9320, -2.6766, -2.9160, -3.3075, -3.4185], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.2898, device='cuda:0', dtype=torch.float64)
tensor([-1.9794, -2.7020, -2.9477, -3.1953, -3.3955], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4437, device='cuda:0', dtype=torch.float64)
tensor([-2.0124, -2.7064, -3.0081, -3.1434, -3.3925], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1656, device='cuda:0', dtype=torch.float64)
tensor([-1.9658, -2.6703, -3.0399, -3.2174, -3.3970], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8161, device='cuda:0', dtype=torch.float64)
tensor([-1.8865, -2.6287, -3.0628, -3.3221, -3.3787], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4608, device='cuda:0', dtype=torch.float64)
tensor([-1.8628, -2.6322, -3.0375, -3.3291, -3.3648], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5983, device='cuda:0', dtype=torch.float64)
tensor([-1.9132, -2.6895, -2.9690, -3.2877, -3.3419], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5622, device='cuda:0', dtype=torch.float64)
tensor([-1.9933, -2.7991, -2.8937, -3.2364, -3.3245], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6032, device='cuda:0', dtype=torch.float64)
tensor([-2.0157, -2.8609, -2.8509, -3.2506, -3.3279], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6199, device='cuda:0', dtype=torch.float64)
tensor([-1.9667, -2.8679, -2.8262, -3.3213, -3.3282], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8485, device='cuda:0', dtype=torch.float64)
tensor([-1.8909, -2.8376, -2.8308, -3.4281, -3.3421], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0580, device='cuda:0', dtype=torch.float64)
tensor([-1.8646, -2.7964, -2.8144, -3.3912, -3.3820], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6217, device='cuda:0', dtype=torch.float64)
tensor([-1.8888, -2.7647, -2.8208, -3.3288, -3.3836], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0204, device='cuda:0', dtype=torch.float64)
tensor([-1.9288, -2.6622, -2.8575, -3.3101, -3.3521], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9885, device='cuda:0', dtype=torch.float64)
tensor([-1.9553, -2.7149, -2.9342, -3.2920, -3.3496], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.3132, device='cuda:0', dtype=torch.float64)
tensor([-1.9702, -2.7070, -2.9675, -3.2043, -3.4033], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6658, device='cuda:0', dtype=torch.float64)
tensor([-1.9819, -2.7936, -2.9695, -3.1252, -3.4916], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7524, device='cuda:0', dtype=torch.float64)
tensor([-1.9569, -2.8026, -2.9567, -3.1328, -3.5281], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0037, device='cuda:0', dtype=torch.float64)
tensor([-1.8670, -2.7562, -2.9379, -3.2114, -3.5071], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6171, device='cuda:0', dtype=torch.float64)
tensor([-1.8175, -2.6925, -2.8836, -3.2950, -3.4951], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5791, device='cuda:0', dtype=torch.float64)
tensor([-1.8648, -2.6583, -2.8030, -3.3131, -3.4324], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7794, device='cuda:0', dtype=torch.float64)
tensor([-1.9324, -2.6538, -2.7741, -3.2681, -3.3606], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6249, device='cuda:0', dtype=torch.float64)
tensor([-2.0125, -2.6936, -2.8100, -3.2247, -3.3042], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0025, device='cuda:0', dtype=torch.float64)
tensor([-2.0491, -2.7402, -2.8489, -3.1842, -3.3028], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7347, device='cuda:0', dtype=torch.float64)
tensor([-2.0198, -2.8141, -2.8483, -3.1988, -3.3319], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7385, device='cuda:0', dtype=torch.float64)
tensor([-1.9033, -2.7611, -2.9282, -3.2910, -3.3358], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5611, device='cuda:0', dtype=torch.float64)
tensor([-1.7752, -2.7269, -2.9889, -3.4165, -3.3822], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4587, device='cuda:0', dtype=torch.float64)
tensor([-1.7515, -2.7463, -3.0273, -3.4720, -3.4131], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6811, device='cuda:0', dtype=torch.float64)
tensor([-1.8527, -2.7925, -2.9888, -3.3931, -3.3783], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5632, device='cuda:0', dtype=torch.float64)
tensor([-1.9851, -2.8337, -2.9278, -3.2713, -3.3365], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9676, device='cuda:0', dtype=torch.float64)
tensor([-2.0612, -2.8238, -2.8812, -3.2511, -3.2869], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2166, device='cuda:0', dtype=torch.float64)
tensor([-2.0395, -2.7596, -2.8618, -3.3056, -3.2641], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5211, device='cuda:0', dtype=torch.float64)
tensor([-1.9622, -2.6748, -2.8683, -3.3753, -3.2448], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8087, device='cuda:0', dtype=torch.float64)
tensor([-1.9055, -2.6131, -2.8812, -3.3661, -3.2764], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8435, device='cuda:0', dtype=torch.float64)
tensor([-1.9065, -2.6370, -2.8450, -3.2684, -3.3358], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5169, device='cuda:0', dtype=torch.float64)
tensor([-1.9230, -2.7214, -2.8248, -3.2077, -3.4007], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0317, device='cuda:0', dtype=torch.float64)
tensor([-1.9192, -2.7918, -2.8397, -3.1995, -3.4005], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8891, device='cuda:0', dtype=torch.float64)
tensor([-1.8911, -2.8155, -2.8855, -3.2532, -3.3384], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6425, device='cuda:0', dtype=torch.float64)
tensor([-1.8627, -2.8070, -2.9303, -3.2704, -3.2909], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5247, device='cuda:0', dtype=torch.float64)
tensor([-1.8608, -2.7428, -2.9768, -3.2357, -3.2513], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7065, device='cuda:0', dtype=torch.float64)
tensor([-1.9087, -2.6548, -3.0187, -3.1706, -3.2376], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8698, device='cuda:0', dtype=torch.float64)
tensor([-1.9358, -2.5860, -3.0337, -3.1430, -3.2346], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5932, device='cuda:0', dtype=torch.float64)
tensor([-1.9432, -2.5584, -3.0032, -3.1531, -3.2587], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5424, device='cuda:0', dtype=torch.float64)
tensor([-1.9723, -2.5928, -2.9191, -3.1678, -3.3044], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4162, device='cuda:0', dtype=torch.float64)
tensor([-2.0014, -2.6725, -2.8285, -3.2013, -3.3621], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5668, device='cuda:0', dtype=torch.float64)
tensor([-1.9653, -2.7111, -2.8108, -3.2535, -3.3926], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0815, device='cuda:0', dtype=torch.float64)
tensor([-1.9361, -2.7048, -2.8407, -3.2996, -3.3617], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3701, device='cuda:0', dtype=torch.float64)
tensor([-1.9197, -2.7127, -2.8599, -3.3502, -3.3673], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7113, device='cuda:0', dtype=torch.float64)
tensor([-1.9231, -2.7419, -2.8431, -3.3516, -3.3858], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5381, device='cuda:0', dtype=torch.float64)
tensor([-1.9079, -2.8002, -2.8462, -3.3699, -3.3996], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6895, device='cuda:0', dtype=torch.float64)
tensor([-1.8750, -2.8135, -2.8927, -3.3854, -3.3914], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4525, device='cuda:0', dtype=torch.float64)
tensor([-1.8585, -2.8044, -2.9685, -3.3586, -3.3954], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0061, device='cuda:0', dtype=torch.float64)
tensor([-1.8657, -2.8138, -3.0027, -3.3175, -3.4191], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5036, device='cuda:0', dtype=torch.float64)
tensor([-1.8907, -2.8245, -3.0358, -3.3050, -3.4334], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8341, device='cuda:0', dtype=torch.float64)
tensor([-1.8891, -2.8143, -3.0401, -3.2913, -3.4146], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6429, device='cuda:0', dtype=torch.float64)
tensor([-1.9502, -2.8036, -2.9877, -3.2620, -3.3966], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8498, device='cuda:0', dtype=torch.float64)
tensor([-1.9636, -2.7829, -2.9311, -3.2942, -3.3666], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5506, device='cuda:0', dtype=torch.float64)
tensor([-1.9880, -2.8044, -2.8603, -3.2502, -3.3564], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0506, device='cuda:0', dtype=torch.float64)
tensor([-1.9827, -2.8147, -2.8426, -3.2397, -3.3465], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7475, device='cuda:0', dtype=torch.float64)
tensor([-1.9767, -2.8363, -2.8451, -3.3537, -3.3591], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0688, device='cuda:0', dtype=torch.float64)
tensor([-1.9564, -2.8197, -2.8417, -3.3528, -3.3789], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9448, device='cuda:0', dtype=torch.float64)
tensor([-1.8775, -2.7470, -2.8468, -3.5489, -3.3296], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.4753, device='cuda:0', dtype=torch.float64)
tensor([-1.8364, -2.6590, -2.8677, -3.5023, -3.2754], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4539, device='cuda:0', dtype=torch.float64)
tensor([-1.8518, -2.6106, -2.9104, -3.4079, -3.2654], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.4564, device='cuda:0', dtype=torch.float64)
tensor([-1.9571, -2.6128, -2.9040, -3.3235, -3.2683], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4278, device='cuda:0', dtype=torch.float64)
tensor([-2.0635, -2.6660, -2.9096, -3.3271, -3.2964], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7243, device='cuda:0', dtype=torch.float64)
tensor([-2.1257, -2.7424, -2.9096, -3.0168, -3.3212], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9564, device='cuda:0', dtype=torch.float64)
tensor([-2.0359, -2.7632, -2.9244, -3.0080, -3.3404], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6400, device='cuda:0', dtype=torch.float64)
tensor([-1.8697, -2.7215, -2.9653, -3.1524, -3.3331], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9264, device='cuda:0', dtype=torch.float64)
tensor([-1.7806, -2.6770, -3.0062, -3.3109, -3.2889], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.6549, device='cuda:0', dtype=torch.float64)
tensor([-1.7889, -2.7103, -3.0176, -3.3297, -3.2656], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9317, device='cuda:0', dtype=torch.float64)
tensor([-1.9132, -2.7705, -2.9894, -3.2840, -3.3079], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.6531, device='cuda:0', dtype=torch.float64)
tensor([-2.0404, -2.8062, -2.9710, -3.2818, -3.3604], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9093, device='cuda:0', dtype=torch.float64)
tensor([-2.0380, -2.8247, -2.9891, -3.4820, -3.4022], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(3.4532, device='cuda:0', dtype=torch.float64)
tensor([-1.9512, -2.7293, -3.0234, -3.4487, -3.4226], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7549, device='cuda:0', dtype=torch.float64)
tensor([-1.8624, -2.6983, -3.0392, -3.5314, -3.4615], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(3.5779, device='cuda:0', dtype=torch.float64)
tensor([-1.8489, -2.7234, -2.9758, -3.6586, -3.5850], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(3.9456, device='cuda:0', dtype=torch.float64)
tensor([-1.9148, -2.8143, -2.8477, -3.2819, -3.5055], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7267, device='cuda:0', dtype=torch.float64)
tensor([-1.9821, -2.8761, -2.7568, -3.2102, -3.4806], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(3.9245, device='cuda:0', dtype=torch.float64)
tensor([-1.8813, -2.8047, -2.7358, -3.3148, -3.4640], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(3.5443, device='cuda:0', dtype=torch.float64)
tensor([-1.8419, -2.7395, -2.7369, -3.2483, -3.4259], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.3200, device='cuda:0', dtype=torch.float64)
tensor([-1.9045, -2.7167, -2.8092, -3.1997, -3.3958], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.5891, device='cuda:0', dtype=torch.float64)
tensor([-1.9877, -2.6513, -2.8590, -3.1872, -3.3521], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5502, device='cuda:0', dtype=torch.float64)
tensor([-2.0345, -2.8600, -2.9389, -3.2772, -3.3247], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(3.3543, device='cuda:0', dtype=torch.float64)
tensor([-1.9665, -2.6443, -3.0742, -3.3873, -3.2875], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.2869, device='cuda:0', dtype=torch.float64)
tensor([-1.9402, -2.7278, -3.0740, -3.4261, -3.2814], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.2950, device='cuda:0', dtype=torch.float64)
tensor([-1.9666, -2.8115, -2.9814, -3.5145, -3.3266], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5797, device='cuda:0', dtype=torch.float64)
tensor([-2.0347, -2.8558, -2.8961, -3.6279, -3.3714], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(3.1827, device='cuda:0', dtype=torch.float64)
tensor([-2.0635, -2.8169, -2.8994, -3.2822, -3.3705], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.5920, device='cuda:0', dtype=torch.float64)
tensor([-1.9877, -2.7204, -2.9240, -3.3155, -3.3649], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.3081, device='cuda:0', dtype=torch.float64)
tensor([-1.8614, -2.6508, -2.9389, -3.3674, -3.3798], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8696, device='cuda:0', dtype=torch.float64)
tensor([-1.8212, -2.6554, -2.9599, -3.3817, -3.3786], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.2187, device='cuda:0', dtype=torch.float64)
tensor([-1.9229, -2.7310, -2.9112, -3.2232, -3.3822], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0721, device='cuda:0', dtype=torch.float64)
tensor([-2.0540, -2.7963, -2.8924, -3.1085, -3.4101], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.2891, device='cuda:0', dtype=torch.float64)
tensor([-2.0770, -2.8064, -2.9127, -3.1720, -3.4007], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9742, device='cuda:0', dtype=torch.float64)
tensor([-1.9897, -2.7630, -2.9493, -3.3000, -3.3895], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.5775, device='cuda:0', dtype=torch.float64)
tensor([-1.8921, -2.7546, -2.9700, -3.1761, -3.4069], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.6067, device='cuda:0', dtype=torch.float64)
tensor([-1.7867, -2.6667, -3.0024, -3.2916, -3.3436], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1312, device='cuda:0', dtype=torch.float64)
tensor([-1.7444, -2.6397, -2.9899, -3.4243, -3.3177], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1443, device='cuda:0', dtype=torch.float64)
tensor([-1.8600, -2.6772, -2.8672, -3.3624, -3.3409], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2533, device='cuda:0', dtype=torch.float64)
tensor([-1.9971, -2.7378, -2.7407, -3.2997, -3.3627], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6873, device='cuda:0', dtype=torch.float64)
tensor([-2.0932, -2.7752, -2.6907, -3.2680, -3.3367], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7912, device='cuda:0', dtype=torch.float64)
tensor([-2.0682, -2.7886, -2.7229, -3.3218, -3.3203], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9448, device='cuda:0', dtype=torch.float64)
tensor([-1.9822, -2.7438, -2.8177, -3.4034, -3.3147], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7431, device='cuda:0', dtype=torch.float64)
tensor([-1.8963, -2.6989, -2.9091, -3.3812, -3.3536], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5259, device='cuda:0', dtype=torch.float64)
tensor([-1.8489, -2.6943, -2.9868, -3.3393, -3.4209], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8962, device='cuda:0', dtype=torch.float64)
tensor([-1.8862, -2.7681, -3.0160, -3.2546, -3.4855], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4974, device='cuda:0', dtype=torch.float64)
tensor([-1.9521, -2.8263, -3.0123, -3.2077, -3.5274], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1371, device='cuda:0', dtype=torch.float64)
tensor([-1.9977, -2.8302, -2.9860, -3.1356, -3.5319], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6519, device='cuda:0', dtype=torch.float64)
tensor([-2.0312, -2.8295, -2.9584, -3.1302, -3.5196], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8502, device='cuda:0', dtype=torch.float64)
tensor([-1.9799, -2.6682, -2.9582, -3.2425, -3.4458], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8015, device='cuda:0', dtype=torch.float64)
tensor([-1.9504, -2.5776, -2.9636, -3.4329, -3.3414], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.2284, device='cuda:0', dtype=torch.float64)
tensor([-1.9399, -2.5833, -2.9194, -3.3791, -3.2368], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6365, device='cuda:0', dtype=torch.float64)
tensor([-1.9630, -2.6712, -2.9022, -3.2928, -3.1854], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.3866, device='cuda:0', dtype=torch.float64)
tensor([-1.9935, -2.7675, -2.8698, -3.2574, -3.2215], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5236, device='cuda:0', dtype=torch.float64)
tensor([-1.9543, -2.8192, -2.8716, -3.3023, -3.2449], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.4072, device='cuda:0', dtype=torch.float64)
tensor([-1.8756, -2.7646, -2.9018, -3.2984, -3.2407], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9487, device='cuda:0', dtype=torch.float64)
tensor([-1.8655, -2.7604, -2.9144, -3.2975, -3.3113], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8146, device='cuda:0', dtype=torch.float64)
tensor([-1.9000, -2.7979, -2.8956, -3.2918, -3.3915], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7689, device='cuda:0', dtype=torch.float64)
tensor([-1.9507, -2.8712, -2.9891, -3.2505, -3.4566], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0275, device='cuda:0', dtype=torch.float64)
tensor([-1.9487, -2.8616, -2.8561, -3.1579, -3.3868], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5383, device='cuda:0', dtype=torch.float64)
tensor([-1.9499, -2.8819, -2.8911, -3.1400, -3.3523], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7958, device='cuda:0', dtype=torch.float64)
tensor([-1.9605, -2.8781, -2.9145, -3.1445, -3.3552], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7809, device='cuda:0', dtype=torch.float64)
tensor([-1.9433, -2.8440, -2.8878, -3.1718, -3.3757], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7859, device='cuda:0', dtype=torch.float64)
tensor([-1.9003, -2.7525, -2.8582, -3.2415, -3.3999], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0710, device='cuda:0', dtype=torch.float64)
tensor([-1.8602, -2.6673, -2.8785, -3.3470, -3.3744], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4167, device='cuda:0', dtype=torch.float64)
tensor([-1.8459, -2.6272, -2.8729, -3.4320, -3.3912], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7538, device='cuda:0', dtype=torch.float64)
tensor([-1.9061, -2.6304, -2.8791, -3.4831, -3.4381], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6186, device='cuda:0', dtype=torch.float64)
tensor([-1.9981, -2.6909, -2.8709, -3.4055, -3.4357], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5585, device='cuda:0', dtype=torch.float64)
tensor([-2.0762, -2.7726, -2.8512, -3.3247, -3.4520], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5073, device='cuda:0', dtype=torch.float64)
tensor([-2.0714, -2.7815, -2.8808, -3.2678, -3.4382], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9816, device='cuda:0', dtype=torch.float64)
tensor([-2.0145, -2.7156, -2.9133, -3.3154, -3.3849], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6808, device='cuda:0', dtype=torch.float64)
tensor([-1.9854, -2.6781, -2.9276, -3.4882, -3.3508], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.4087, device='cuda:0', dtype=torch.float64)
tensor([-1.9932, -2.6764, -2.8796, -3.3116, -3.2666], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0958, device='cuda:0', dtype=torch.float64)
tensor([-1.9517, -2.6605, -2.8837, -3.3702, -3.1896], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0260, device='cuda:0', dtype=torch.float64)
tensor([-1.8647, -2.6725, -2.8783, -3.5125, -3.1606], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6976, device='cuda:0', dtype=torch.float64)
tensor([-1.8943, -2.7290, -2.8234, -3.5392, -3.2108], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8323, device='cuda:0', dtype=torch.float64)
tensor([-1.9743, -2.8042, -2.7612, -3.4078, -3.3065], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7653, device='cuda:0', dtype=torch.float64)
tensor([-2.0425, -2.8618, -2.7489, -3.3124, -3.4299], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0700, device='cuda:0', dtype=torch.float64)
tensor([-2.0263, -2.8171, -2.7893, -3.2754, -3.4717], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3489, device='cuda:0', dtype=torch.float64)
tensor([-1.9608, -2.7455, -2.8665, -3.2795, -3.4424], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4559, device='cuda:0', dtype=torch.float64)
tensor([-1.9276, -2.7257, -2.9313, -3.2386, -3.4139], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4278, device='cuda:0', dtype=torch.float64)
tensor([-1.9382, -2.7532, -2.9881, -3.1772, -3.3944], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7147, device='cuda:0', dtype=torch.float64)
tensor([-1.9520, -2.7674, -3.0317, -3.1502, -3.3792], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7446, device='cuda:0', dtype=torch.float64)
tensor([-1.9452, -2.7107, -3.0790, -3.1966, -3.3559], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4884, device='cuda:0', dtype=torch.float64)
tensor([-1.9397, -2.7060, -3.0831, -3.2292, -3.3565], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7842, device='cuda:0', dtype=torch.float64)
tensor([-1.9247, -2.7381, -3.0327, -3.1465, -3.3649], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8865, device='cuda:0', dtype=torch.float64)
tensor([-1.9380, -2.7869, -2.9953, -3.0781, -3.3830], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.5129, device='cuda:0', dtype=torch.float64)
tensor([-1.9374, -2.7903, -2.9630, -3.1300, -3.4171], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6589, device='cuda:0', dtype=torch.float64)
tensor([-1.9539, -2.7768, -2.9341, -3.2607, -3.4356], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1288, device='cuda:0', dtype=torch.float64)
tensor([-1.9701, -2.7261, -2.8777, -3.2320, -3.4286], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3036, device='cuda:0', dtype=torch.float64)
tensor([-1.9981, -2.6783, -2.8293, -3.2323, -3.4044], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8821, device='cuda:0', dtype=torch.float64)
tensor([-2.0207, -2.6445, -2.7908, -3.2801, -3.3708], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5146, device='cuda:0', dtype=torch.float64)
tensor([-1.9994, -2.6338, -2.7640, -3.4020, -3.3571], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6670, device='cuda:0', dtype=torch.float64)
tensor([-1.9299, -2.5985, -2.7870, -3.5544, -3.3362], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.3904, device='cuda:0', dtype=torch.float64)
tensor([-1.9598, -2.6290, -2.7957, -3.4674, -3.3042], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8197, device='cuda:0', dtype=torch.float64)
tensor([-2.0226, -2.6593, -2.8307, -3.3885, -3.2698], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8423, device='cuda:0', dtype=torch.float64)
tensor([-2.0400, -2.6821, -2.8930, -3.3970, -3.2377], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4456, device='cuda:0', dtype=torch.float64)
tensor([-2.0141, -2.7336, -2.9402, -3.4538, -3.2444], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1149, device='cuda:0', dtype=torch.float64)
tensor([-1.9769, -2.8109, -2.9348, -3.3588, -3.2620], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4843, device='cuda:0', dtype=torch.float64)
tensor([-1.8980, -2.8254, -2.9425, -3.3440, -3.3104], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7576, device='cuda:0', dtype=torch.float64)
tensor([-1.7913, -2.8071, -2.9613, -3.3698, -3.3418], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8946, device='cuda:0', dtype=torch.float64)
tensor([-1.7519, -2.8011, -2.9375, -3.3982, -3.4360], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7671, device='cuda:0', dtype=torch.float64)
tensor([-1.8171, -2.7824, -2.9096, -3.3615, -3.4904], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9849, device='cuda:0', dtype=torch.float64)
tensor([-2.0024, -2.7824, -2.8422, -3.2003, -3.4843], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4479, device='cuda:0', dtype=torch.float64)
tensor([-2.1484, -2.7860, -2.8317, -3.0762, -3.4685], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4423, device='cuda:0', dtype=torch.float64)
tensor([-2.1329, -2.7566, -2.8598, -3.0877, -3.4193], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4585, device='cuda:0', dtype=torch.float64)
tensor([-1.9715, -2.6865, -2.9236, -3.2058, -3.3635], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5471, device='cuda:0', dtype=torch.float64)
tensor([-1.8053, -2.6585, -2.9789, -3.3174, -3.3333], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4355, device='cuda:0', dtype=torch.float64)
tensor([-1.7485, -2.6876, -3.0062, -3.3486, -3.3111], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3651, device='cuda:0', dtype=torch.float64)
tensor([-1.8376, -2.7375, -2.9816, -3.2743, -3.3427], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7653, device='cuda:0', dtype=torch.float64)
tensor([-2.0085, -2.7965, -2.9355, -3.1970, -3.3937], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5636, device='cuda:0', dtype=torch.float64)
tensor([-2.0950, -2.8095, -2.9260, -3.1985, -3.4272], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6247, device='cuda:0', dtype=torch.float64)
tensor([-2.0404, -2.7330, -2.9735, -3.3119, -3.4101], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6076, device='cuda:0', dtype=torch.float64)
tensor([-1.9249, -2.6731, -3.0107, -3.5096, -3.3863], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9759, device='cuda:0', dtype=torch.float64)
tensor([-1.9003, -2.7138, -2.9454, -3.3768, -3.3844], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5628, device='cuda:0', dtype=torch.float64)
tensor([-1.8844, -2.8329, -2.8533, -3.3213, -3.4275], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.7792, device='cuda:0', dtype=torch.float64)
tensor([-1.8665, -2.7957, -2.8415, -3.3644, -3.3952], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5245, device='cuda:0', dtype=torch.float64)
tensor([-1.9309, -2.8342, -2.8146, -3.2951, -3.3652], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7241, device='cuda:0', dtype=torch.float64)
tensor([-2.0357, -2.8993, -2.8043, -3.1247, -3.3364], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6004, device='cuda:0', dtype=torch.float64)
tensor([-2.1087, -2.9344, -2.8218, -2.9875, -3.3599], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7172, device='cuda:0', dtype=torch.float64)
tensor([-2.1271, -2.9311, -2.8790, -2.9787, -3.4292], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9644, device='cuda:0', dtype=torch.float64)
tensor([-2.0174, -2.8024, -2.9479, -3.1285, -3.4568], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2634, device='cuda:0', dtype=torch.float64)
tensor([-1.8784, -2.6754, -3.0183, -3.3518, -3.4402], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4879, device='cuda:0', dtype=torch.float64)
tensor([-1.8340, -2.6029, -3.0327, -3.4557, -3.4256], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0845, device='cuda:0', dtype=torch.float64)
tensor([-1.9277, -2.6119, -2.9997, -3.4188, -3.4384], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9963, device='cuda:0', dtype=torch.float64)
tensor([-1.9933, -2.6590, -2.8971, -3.3827, -3.4471], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9317, device='cuda:0', dtype=torch.float64)
tensor([-2.0350, -2.6986, -2.8013, -3.3859, -3.4280], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.4563, device='cuda:0', dtype=torch.float64)
tensor([-2.0218, -2.7544, -2.7523, -3.3334, -3.3712], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6836, device='cuda:0', dtype=torch.float64)
tensor([-1.9631, -2.7987, -2.7574, -3.3337, -3.2952], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5245, device='cuda:0', dtype=torch.float64)
tensor([-1.9115, -2.7836, -2.8013, -3.4031, -3.2736], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0221, device='cuda:0', dtype=torch.float64)
tensor([-1.9259, -2.7815, -2.8355, -3.4160, -3.3244], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8387, device='cuda:0', dtype=torch.float64)
tensor([-1.9086, -2.7255, -2.9254, -3.4663, -3.3301], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9927, device='cuda:0', dtype=torch.float64)
tensor([-1.8840, -2.7003, -3.0276, -3.5540, -3.3108], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.2491, device='cuda:0', dtype=torch.float64)
tensor([-1.9337, -2.7487, -3.0539, -3.4904, -3.3344], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.5960, device='cuda:0', dtype=torch.float64)
tensor([-2.0916, -2.8751, -2.9570, -3.2550, -3.3607], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6918, device='cuda:0', dtype=torch.float64)
tensor([-2.1348, -2.9328, -2.9398, -3.1827, -3.3697], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.7786, device='cuda:0', dtype=torch.float64)
tensor([-2.0035, -2.8086, -3.0153, -3.3184, -3.2561], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6476, device='cuda:0', dtype=torch.float64)
tensor([-1.9062, -2.7779, -3.0611, -3.4053, -3.2334], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(3.2251, device='cuda:0', dtype=torch.float64)
tensor([-1.9279, -2.8104, -3.0111, -3.2471, -3.3606], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4681, device='cuda:0', dtype=torch.float64)
tensor([-1.9717, -2.8803, -2.9488, -3.1804, -3.5514], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1813, device='cuda:0', dtype=torch.float64)
tensor([-1.9266, -2.8167, -2.9337, -3.1758, -3.6161], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0285, device='cuda:0', dtype=torch.float64)
tensor([-1.8785, -2.6780, -2.9357, -3.2491, -3.5644], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6579, device='cuda:0', dtype=torch.float64)
tensor([-1.8911, -2.6380, -2.8901, -3.2814, -3.5887], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.8048, device='cuda:0', dtype=torch.float64)
tensor([-1.9805, -2.6628, -2.7808, -3.1800, -3.5724], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1867, device='cuda:0', dtype=torch.float64)
tensor([-2.0707, -2.7496, -2.7279, -3.1356, -3.5893], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(3.8639, device='cuda:0', dtype=torch.float64)
tensor([-2.0071, -2.6398, -2.8237, -3.1988, -3.4404], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7065, device='cuda:0', dtype=torch.float64)
tensor([-1.9669, -2.6558, -3.0403, -3.2868, -3.3918], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(3.7461, device='cuda:0', dtype=torch.float64)
tensor([-1.9832, -2.6394, -2.9289, -3.2296, -3.4187], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6273, device='cuda:0', dtype=torch.float64)
tensor([-2.0545, -2.9000, -2.9396, -3.2606, -3.5610], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(5.2988, device='cuda:0', dtype=torch.float64)
tensor([-1.9450, -2.6943, -3.0099, -3.2792, -3.3980], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1213, device='cuda:0', dtype=torch.float64)
tensor([-1.9507, -2.8547, -3.0170, -3.3547, -3.3478], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(5.1861, device='cuda:0', dtype=torch.float64)
tensor([-2.0918, -2.9388, -2.8684, -3.1315, -3.4318], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.3981, device='cuda:0', dtype=torch.float64)
tensor([-2.1024, -3.4929, -2.7854, -3.2650, -3.5259], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(6.5043, device='cuda:0', dtype=torch.float64)
tensor([-1.8700, -3.2374, -3.0197, -3.6361, -3.2810], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(12.1455, device='cuda:0', dtype=torch.float64)
tensor([-1.9492, -3.6651, -2.9940, -3.4940, -3.6935], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(8.1248, device='cuda:0', dtype=torch.float64)
tensor([-3.5657, -2.8761, -5.3827, -3.8102, -4.2864], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(25.5749, device='cuda:0', dtype=torch.float64)
tensor([ -54.8866, -124.1688,  -30.9624, -102.9358,  -78.3253],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(135.1873, device='cuda:0', dtype=torch.float64)
tensor([-1554.0369, -1172.5197,  -451.9455,  -666.2332,  -608.5326],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(470.6340, device='cuda:0', dtype=torch.float64)
tensor([ -27.7325,  -87.5798,  -18.9912, -134.2860,  -16.2719],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(65.1440, device='cuda:0', dtype=torch.float64)
tensor([ -535.2756, -1140.4780,  -576.2358,  -575.9653,  -361.6694],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(332.7343, device='cuda:0', dtype=torch.float64)
tensor([-203.5459, -248.5634, -168.5651, -259.0093, -164.4261],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(158.4376, device='cuda:0', dtype=torch.float64)
tensor([ -66.4718, -243.8124, -133.6267, -194.8010, -176.8636],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(67.3389, device='cuda:0', dtype=torch.float64)
tensor([ -68.5695, -270.6365, -112.4843, -232.6613, -235.4590],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(73.2824, device='cuda:0', dtype=torch.float64)
tensor([ -66.4633, -184.0832,  -74.8061, -233.5539, -216.7843],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(68.9032, device='cuda:0', dtype=torch.float64)
tensor([ -69.3392, -207.0350,  -56.2052, -194.1438, -160.0352],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(68.7924, device='cuda:0', dtype=torch.float64)
tensor([ -78.3485, -214.2450,  -61.6891, -142.0925, -116.5462],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(64.9593, device='cuda:0', dtype=torch.float64)
tensor([ -67.5495, -171.0828,  -59.9935, -100.3319,  -90.6235],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(56.3367, device='cuda:0', dtype=torch.float64)
tensor([ -47.1626, -121.0372,  -47.7571,  -84.9486,  -83.7188],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(48.9352, device='cuda:0', dtype=torch.float64)
tensor([-33.7351, -82.0426, -35.5334, -80.6638, -88.4325], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(39.9227, device='cuda:0', dtype=torch.float64)
tensor([-31.0926, -72.7475, -29.4755, -74.6373, -83.2912], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(30.8417, device='cuda:0', dtype=torch.float64)
tensor([-32.3338, -67.3655, -30.1822, -72.8688, -76.2740], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(27.3548, device='cuda:0', dtype=torch.float64)
tensor([-33.9024, -60.9273, -31.1741, -74.6213, -74.7362], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(29.0643, device='cuda:0', dtype=torch.float64)
tensor([-32.1233, -53.9967, -29.3678, -71.3009, -72.0162], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(28.4901, device='cuda:0', dtype=torch.float64)
tensor([-27.7917, -46.3838, -25.6499, -59.0560, -65.6942], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(23.7984, device='cuda:0', dtype=torch.float64)
tensor([-23.6154, -39.7558, -22.0133, -44.1906, -58.8470], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(19.9427, device='cuda:0', dtype=torch.float64)
tensor([-21.2072, -36.0088, -20.3837, -32.8468, -52.3583], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(17.9869, device='cuda:0', dtype=torch.float64)
tensor([-22.2616, -33.7364, -19.3046, -26.4562, -46.2586], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(17.9214, device='cuda:0', dtype=torch.float64)
tensor([-22.1949, -31.6921, -18.7642, -23.1501, -41.6979], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(15.3443, device='cuda:0', dtype=torch.float64)
tensor([-19.8273, -32.6919, -18.6477, -22.1358, -39.2609], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(14.5706, device='cuda:0', dtype=torch.float64)
tensor([-16.8585, -35.3645, -18.4525, -22.1749, -37.1321], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(15.1423, device='cuda:0', dtype=torch.float64)
tensor([-13.8330, -33.8485, -17.9896, -21.8290, -34.0158], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(13.7499, device='cuda:0', dtype=torch.float64)
tensor([-11.4465, -30.7292, -17.4368, -21.2478, -30.6036], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(10.5505, device='cuda:0', dtype=torch.float64)
tensor([-10.6637, -30.0872, -17.0760, -21.1648, -28.3970], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(10.5272, device='cuda:0', dtype=torch.float64)
tensor([ -9.7465, -30.1683, -17.0335, -21.3954, -27.0441], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(10.7462, device='cuda:0', dtype=torch.float64)
tensor([ -8.6747, -29.6852, -17.2883, -21.7788, -25.9904], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(9.9517, device='cuda:0', dtype=torch.float64)
tensor([ -7.7064, -28.2504, -17.6291, -22.0982, -25.1991], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(8.5281, device='cuda:0', dtype=torch.float64)
tensor([ -7.1429, -26.2686, -17.8096, -22.1121, -24.8329], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(7.7425, device='cuda:0', dtype=torch.float64)
tensor([ -6.8630, -24.1008, -17.6360, -21.5581, -24.6374], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(7.0632, device='cuda:0', dtype=torch.float64)
tensor([ -6.6371, -21.8916, -17.0476, -20.3843, -24.2893], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(6.6188, device='cuda:0', dtype=torch.float64)
tensor([ -6.5120, -19.9454, -16.1575, -18.8437, -23.6593], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(5.9159, device='cuda:0', dtype=torch.float64)
tensor([ -6.5455, -18.6005, -15.1760, -17.3609, -22.7980], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(5.2977, device='cuda:0', dtype=torch.float64)
tensor([ -6.6552, -17.7603, -14.2935, -16.1909, -21.9843], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(5.2691, device='cuda:0', dtype=torch.float64)
tensor([ -6.7016, -17.2070, -13.5277, -15.2056, -21.2526], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(5.4418, device='cuda:0', dtype=torch.float64)
tensor([ -6.6171, -16.7829, -12.8524, -14.3411, -20.6108], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(5.2385, device='cuda:0', dtype=torch.float64)
tensor([ -6.3790, -16.4768, -12.2671, -13.6220, -20.0995], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(4.6661, device='cuda:0', dtype=torch.float64)
tensor([ -6.0296, -16.2884, -11.7994, -13.1489, -19.7433], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(4.4145, device='cuda:0', dtype=torch.float64)
tensor([ -5.6352, -16.1589, -11.4455, -12.9229, -19.4800], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(4.9423, device='cuda:0', dtype=torch.float64)
tensor([ -5.2407, -16.0477, -11.1792, -12.8957, -19.1567], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(4.8672, device='cuda:0', dtype=torch.float64)
tensor([ -4.8752, -15.8206, -10.9581, -12.9402, -18.6642], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(4.9259, device='cuda:0', dtype=torch.float64)
tensor([ -4.5747, -15.4463, -10.7500, -13.0004, -18.0032], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(4.4896, device='cuda:0', dtype=torch.float64)
tensor([ -4.3334, -15.1404, -10.5696, -13.0903, -17.3086], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(3.8744, device='cuda:0', dtype=torch.float64)
tensor([ -4.1499, -14.9227, -10.4311, -13.1941, -16.6684], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(3.7416, device='cuda:0', dtype=torch.float64)
tensor([ -4.0057, -14.7264, -10.3435, -13.3114, -16.1493], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(3.6297, device='cuda:0', dtype=torch.float64)
tensor([ -3.9006, -14.4930, -10.3083, -13.4163, -15.7645], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(3.3093, device='cuda:0', dtype=torch.float64)
tensor([ -3.8367, -14.1811, -10.3017, -13.4717, -15.5350], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(3.1950, device='cuda:0', dtype=torch.float64)
tensor([ -3.7976, -13.8483, -10.3220, -13.4968, -15.4118], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.9867, device='cuda:0', dtype=torch.float64)
tensor([ -3.7940, -13.5337, -10.3519, -13.4764, -15.3635], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(3.0597, device='cuda:0', dtype=torch.float64)
tensor([ -3.8224, -13.2631, -10.3444, -13.3970, -15.3490], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(3.0972, device='cuda:0', dtype=torch.float64)
tensor([ -3.8837, -13.0269, -10.3018, -13.2796, -15.3397], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(3.0904, device='cuda:0', dtype=torch.float64)
tensor([ -3.9297, -12.8214, -10.2178, -13.1492, -15.3350], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(3.0448, device='cuda:0', dtype=torch.float64)
tensor([ -3.9514, -12.6285, -10.1249, -13.0372, -15.2945], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.7371, device='cuda:0', dtype=torch.float64)
tensor([ -3.9473, -12.4320, -10.0211, -12.9242, -15.2207], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.6659, device='cuda:0', dtype=torch.float64)
tensor([ -3.9126, -12.2363,  -9.9077, -12.8011, -15.0999], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.6138, device='cuda:0', dtype=torch.float64)
tensor([ -3.8577, -12.0447,  -9.7884, -12.6783, -14.9622], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.5013, device='cuda:0', dtype=torch.float64)
tensor([ -3.7845, -11.8670,  -9.6697, -12.5714, -14.8027], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.5953, device='cuda:0', dtype=torch.float64)
tensor([ -3.7040, -11.7211,  -9.5551, -12.4616, -14.6303], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.4166, device='cuda:0', dtype=torch.float64)
tensor([ -3.6355, -11.6093,  -9.4370, -12.3299, -14.4625], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.2349, device='cuda:0', dtype=torch.float64)
tensor([ -3.5829, -11.5133,  -9.3214, -12.1831, -14.2886], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.3280, device='cuda:0', dtype=torch.float64)
tensor([ -3.5409, -11.4141,  -9.1822, -12.0358, -14.1209], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.3471, device='cuda:0', dtype=torch.float64)
tensor([ -3.5367, -11.3451,  -9.0438, -11.8859, -13.9449], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.2165, device='cuda:0', dtype=torch.float64)
tensor([ -3.5403, -11.2835,  -8.9295, -11.7710, -13.7763], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.3155, device='cuda:0', dtype=torch.float64)
tensor([ -3.5613, -11.2084,  -8.8377, -11.6954, -13.6270], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0875, device='cuda:0', dtype=torch.float64)
tensor([ -3.5928, -11.1077,  -8.7644, -11.6473, -13.4902], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9826, device='cuda:0', dtype=torch.float64)
tensor([ -3.6245, -11.0001,  -8.7136, -11.6057, -13.3821], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0708, device='cuda:0', dtype=torch.float64)
tensor([ -3.6459, -10.8653,  -8.6700, -11.5723, -13.2745], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9478, device='cuda:0', dtype=torch.float64)
tensor([ -3.6707, -10.7370,  -8.6298, -11.5178, -13.1705], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9208, device='cuda:0', dtype=torch.float64)
tensor([ -3.7017, -10.6119,  -8.5735, -11.4607, -13.0744], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8982, device='cuda:0', dtype=torch.float64)
tensor([ -3.7310, -10.5058,  -8.5104, -11.3955, -12.9707], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8211, device='cuda:0', dtype=torch.float64)
tensor([ -3.7296, -10.3840,  -8.4350, -11.3191, -12.8635], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7695, device='cuda:0', dtype=torch.float64)
tensor([ -3.7262, -10.2694,  -8.3631, -11.2585, -12.7688], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9457, device='cuda:0', dtype=torch.float64)
tensor([ -3.7011, -10.1498,  -8.2988, -11.2085, -12.6781], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8587, device='cuda:0', dtype=torch.float64)
tensor([ -3.6661, -10.0502,  -8.2448, -11.1592, -12.5838], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7672, device='cuda:0', dtype=torch.float64)
tensor([ -3.6436,  -9.9710,  -8.1832, -11.1128, -12.4764], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8875, device='cuda:0', dtype=torch.float64)
tensor([ -3.6222,  -9.8926,  -8.1394, -11.0803, -12.3569], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7056, device='cuda:0', dtype=torch.float64)
tensor([ -3.6029,  -9.8137,  -8.1088, -11.0477, -12.2379], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9508, device='cuda:0', dtype=torch.float64)
tensor([ -3.5858,  -9.7307,  -8.0898, -11.0328, -12.1283], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8180, device='cuda:0', dtype=torch.float64)
tensor([ -3.5727,  -9.6408,  -8.0660, -11.0062, -12.0158], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6561, device='cuda:0', dtype=torch.float64)
tensor([ -3.5651,  -9.5545,  -8.0423, -10.9695, -11.9079], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7944, device='cuda:0', dtype=torch.float64)
tensor([ -3.5694,  -9.4732,  -8.0105, -10.9259, -11.8028], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6560, device='cuda:0', dtype=torch.float64)
tensor([ -3.5840,  -9.3994,  -7.9779, -10.8935, -11.7103], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6492, device='cuda:0', dtype=torch.float64)
tensor([ -3.5872,  -9.3285,  -7.9436, -10.8574, -11.6182], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7012, device='cuda:0', dtype=torch.float64)
tensor([ -3.5668,  -9.2436,  -7.9107, -10.8190, -11.5064], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6812, device='cuda:0', dtype=torch.float64)
tensor([ -3.5317,  -9.1565,  -7.8707, -10.7770, -11.3991], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5523, device='cuda:0', dtype=torch.float64)
tensor([ -3.4938,  -9.0760,  -7.8331, -10.7393, -11.3011], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4457, device='cuda:0', dtype=torch.float64)
tensor([ -3.4718,  -8.9991,  -7.7934, -10.6839, -11.2281], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6679, device='cuda:0', dtype=torch.float64)
tensor([ -3.4555,  -8.9249,  -7.7563, -10.6185, -11.1699], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5098, device='cuda:0', dtype=torch.float64)
tensor([ -3.4517,  -8.8652,  -7.7116, -10.5278, -11.1207], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7722, device='cuda:0', dtype=torch.float64)
tensor([ -3.4514,  -8.8103,  -7.6619, -10.4565, -11.0632], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6036, device='cuda:0', dtype=torch.float64)
tensor([ -3.4636,  -8.7720,  -7.6048, -10.3883, -11.0097], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4432, device='cuda:0', dtype=torch.float64)
tensor([ -3.4780,  -8.7377,  -7.5515, -10.3303, -10.9641], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5077, device='cuda:0', dtype=torch.float64)
tensor([ -3.4899,  -8.6892,  -7.5056, -10.2846, -10.9264], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4660, device='cuda:0', dtype=torch.float64)
tensor([ -3.4939,  -8.6269,  -7.4712, -10.2615, -10.8975], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4405, device='cuda:0', dtype=torch.float64)
tensor([ -3.4836,  -8.5535,  -7.4587, -10.2570, -10.8617], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6841, device='cuda:0', dtype=torch.float64)
tensor([ -3.4591,  -8.4720,  -7.4787, -10.2420, -10.8112], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5751, device='cuda:0', dtype=torch.float64)
tensor([ -3.4251,  -8.3831,  -7.5035, -10.2391, -10.7621], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5777, device='cuda:0', dtype=torch.float64)
tensor([ -3.4012,  -8.3053,  -7.5111, -10.2332, -10.7154], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5172, device='cuda:0', dtype=torch.float64)
tensor([ -3.4044,  -8.2531,  -7.4940, -10.1913, -10.6732], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6517, device='cuda:0', dtype=torch.float64)
tensor([ -3.4184,  -8.2056,  -7.4511, -10.1530, -10.6337], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3672, device='cuda:0', dtype=torch.float64)
tensor([ -3.4353,  -8.1547,  -7.3715, -10.1168, -10.5931], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4495, device='cuda:0', dtype=torch.float64)
tensor([ -3.4560,  -8.1024,  -7.2884, -10.0858, -10.5659], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4261, device='cuda:0', dtype=torch.float64)
tensor([ -3.4657,  -8.0363,  -7.2043, -10.0528, -10.5388], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3838, device='cuda:0', dtype=torch.float64)
tensor([ -3.4617,  -7.9593,  -7.1151, -10.0332, -10.5204], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3695, device='cuda:0', dtype=torch.float64)
tensor([ -3.4543,  -7.8804,  -7.0292, -10.0127, -10.4911], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3912, device='cuda:0', dtype=torch.float64)
tensor([ -3.4360,  -7.7995,  -6.9682,  -9.9921, -10.4589], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3451, device='cuda:0', dtype=torch.float64)
tensor([ -3.4266,  -7.7288,  -6.9126,  -9.9732, -10.4283], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4961, device='cuda:0', dtype=torch.float64)
tensor([ -3.4069,  -7.6653,  -6.8858,  -9.9731, -10.3922], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3839, device='cuda:0', dtype=torch.float64)
tensor([ -3.4022,  -7.6226,  -6.8639,  -9.9422, -10.3372], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4298, device='cuda:0', dtype=torch.float64)
tensor([ -3.3957,  -7.5932,  -6.8543,  -9.9149, -10.2829], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4353, device='cuda:0', dtype=torch.float64)
tensor([ -3.3875,  -7.5680,  -6.8506,  -9.8515, -10.2247], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4801, device='cuda:0', dtype=torch.float64)
tensor([ -3.4014,  -7.5591,  -6.8175,  -9.7644, -10.1582], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4650, device='cuda:0', dtype=torch.float64)
tensor([ -3.4040,  -7.5408,  -6.7891,  -9.6633, -10.0906], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4631, device='cuda:0', dtype=torch.float64)
tensor([ -3.3952,  -7.5156,  -6.7617,  -9.5756, -10.0331], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3458, device='cuda:0', dtype=torch.float64)
tensor([-3.3790, -7.4687, -6.7414, -9.5002, -9.9766], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3781, device='cuda:0', dtype=torch.float64)
tensor([-3.3537, -7.4191, -6.7386, -9.4492, -9.9297], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2914, device='cuda:0', dtype=torch.float64)
tensor([-3.3290, -7.3756, -6.7345, -9.4104, -9.8836], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2720, device='cuda:0', dtype=torch.float64)
tensor([-3.3146, -7.3325, -6.7123, -9.3477, -9.8380], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4341, device='cuda:0', dtype=torch.float64)
tensor([-3.3051, -7.2986, -6.6815, -9.3057, -9.7996], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3568, device='cuda:0', dtype=torch.float64)
tensor([-3.3205, -7.2725, -6.6323, -9.2837, -9.7693], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2712, device='cuda:0', dtype=torch.float64)
tensor([-3.3295, -7.2456, -6.5926, -9.2639, -9.7323], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3332, device='cuda:0', dtype=torch.float64)
tensor([-3.3421, -7.2156, -6.5424, -9.2470, -9.6977], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4804, device='cuda:0', dtype=torch.float64)
tensor([-3.3488, -7.1851, -6.4968, -9.2529, -9.6618], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4996, device='cuda:0', dtype=torch.float64)
tensor([-3.3666, -7.1670, -6.4624, -9.2666, -9.6197], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4189, device='cuda:0', dtype=torch.float64)
tensor([-3.3875, -7.1622, -6.4294, -9.2921, -9.5719], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2913, device='cuda:0', dtype=torch.float64)
tensor([-3.4001, -7.1534, -6.3965, -9.3069, -9.5257], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2885, device='cuda:0', dtype=torch.float64)
tensor([-3.3891, -7.1213, -6.3673, -9.3037, -9.4777], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1321, device='cuda:0', dtype=torch.float64)
tensor([-3.3611, -7.0770, -6.3524, -9.2935, -9.4310], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2899, device='cuda:0', dtype=torch.float64)
tensor([-3.3293, -7.0287, -6.3399, -9.2737, -9.3859], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2163, device='cuda:0', dtype=torch.float64)
tensor([-3.2910, -6.9811, -6.3375, -9.2552, -9.3469], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3997, device='cuda:0', dtype=torch.float64)
tensor([-3.2648, -6.9368, -6.3230, -9.2193, -9.3153], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2824, device='cuda:0', dtype=torch.float64)
tensor([-3.2476, -6.9083, -6.3176, -9.1742, -9.2894], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3292, device='cuda:0', dtype=torch.float64)
tensor([-3.2607, -6.9043, -6.3034, -9.1139, -9.2573], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1810, device='cuda:0', dtype=torch.float64)
tensor([-3.2759, -6.8995, -6.2859, -9.0703, -9.2266], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2518, device='cuda:0', dtype=torch.float64)
tensor([-3.2935, -6.8841, -6.2722, -9.0109, -9.1942], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2717, device='cuda:0', dtype=torch.float64)
tensor([-3.3138, -6.8716, -6.2646, -8.9631, -9.1468], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2312, device='cuda:0', dtype=torch.float64)
tensor([-3.3247, -6.8625, -6.2591, -8.9386, -9.1107], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3297, device='cuda:0', dtype=torch.float64)
tensor([-3.3260, -6.8455, -6.2574, -8.9337, -9.0818], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2647, device='cuda:0', dtype=torch.float64)
tensor([-3.3151, -6.8083, -6.2602, -8.9245, -9.0587], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3241, device='cuda:0', dtype=torch.float64)
tensor([-3.2974, -6.7535, -6.2656, -8.9216, -9.0456], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1902, device='cuda:0', dtype=torch.float64)
tensor([-3.2731, -6.7018, -6.2675, -8.9212, -9.0328], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2617, device='cuda:0', dtype=torch.float64)
tensor([-3.2527, -6.6432, -6.2602, -8.9247, -9.0256], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4646, device='cuda:0', dtype=torch.float64)
tensor([-3.2494, -6.5957, -6.2223, -8.8932, -9.0117], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2779, device='cuda:0', dtype=torch.float64)
tensor([-3.2555, -6.5588, -6.1724, -8.8518, -8.9829], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3740, device='cuda:0', dtype=torch.float64)
tensor([-3.2747, -6.5399, -6.1317, -8.7967, -8.9445], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1740, device='cuda:0', dtype=torch.float64)
tensor([-3.3001, -6.5319, -6.0922, -8.7208, -8.9021], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2524, device='cuda:0', dtype=torch.float64)
tensor([-3.3352, -6.5331, -6.0499, -8.6433, -8.8702], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2161, device='cuda:0', dtype=torch.float64)
tensor([-3.3705, -6.5346, -6.0036, -8.5699, -8.8389], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2316, device='cuda:0', dtype=torch.float64)
tensor([-3.4062, -6.5341, -5.9522, -8.4905, -8.7964], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2441, device='cuda:0', dtype=torch.float64)
tensor([-3.4164, -6.5207, -5.9242, -8.4193, -8.7531], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3618, device='cuda:0', dtype=torch.float64)
tensor([-3.4208, -6.5005, -5.8990, -8.3778, -8.7117], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4636, device='cuda:0', dtype=torch.float64)
tensor([-3.4078, -6.4794, -5.8848, -8.3835, -8.6696], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2111, device='cuda:0', dtype=torch.float64)
tensor([-3.3880, -6.4634, -5.8756, -8.3810, -8.6282], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3616, device='cuda:0', dtype=torch.float64)
tensor([-3.3814, -6.4563, -5.8572, -8.3632, -8.5799], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1390, device='cuda:0', dtype=torch.float64)
tensor([-3.3659, -6.4479, -5.8584, -8.3529, -8.5360], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5014, device='cuda:0', dtype=torch.float64)
tensor([-3.3505, -6.4525, -5.8772, -8.3521, -8.4936], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2924, device='cuda:0', dtype=torch.float64)
tensor([-3.3357, -6.4449, -5.9079, -8.3494, -8.4690], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2005, device='cuda:0', dtype=torch.float64)
tensor([-3.3131, -6.4297, -5.9351, -8.3510, -8.4412], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0953, device='cuda:0', dtype=torch.float64)
tensor([-3.2759, -6.3981, -5.9593, -8.3577, -8.4200], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2338, device='cuda:0', dtype=torch.float64)
tensor([-3.2446, -6.3647, -5.9769, -8.3622, -8.4023], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2553, device='cuda:0', dtype=torch.float64)
tensor([-3.2180, -6.3328, -6.0016, -8.3588, -8.3936], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3809, device='cuda:0', dtype=torch.float64)
tensor([-3.2112, -6.3114, -5.9973, -8.3491, -8.3817], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3841, device='cuda:0', dtype=torch.float64)
tensor([-3.1947, -6.2728, -5.9836, -8.3432, -8.3581], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1804, device='cuda:0', dtype=torch.float64)
tensor([-3.1768, -6.2379, -5.9710, -8.3356, -8.3322], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3259, device='cuda:0', dtype=torch.float64)
tensor([-3.1733, -6.2150, -5.9572, -8.3218, -8.3109], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2310, device='cuda:0', dtype=torch.float64)
tensor([-3.1814, -6.1947, -5.9292, -8.2888, -8.2878], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3832, device='cuda:0', dtype=torch.float64)
tensor([-3.2038, -6.1843, -5.8998, -8.2553, -8.2586], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4713, device='cuda:0', dtype=torch.float64)
tensor([-3.2306, -6.1743, -5.8573, -8.2038, -8.2308], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2535, device='cuda:0', dtype=torch.float64)
tensor([-3.2515, -6.1660, -5.8075, -8.1586, -8.1978], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2796, device='cuda:0', dtype=torch.float64)
tensor([-3.2731, -6.1707, -5.7600, -8.1119, -8.1643], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2955, device='cuda:0', dtype=torch.float64)
tensor([-3.2879, -6.1726, -5.7200, -8.0863, -8.1377], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2075, device='cuda:0', dtype=torch.float64)
tensor([-3.3036, -6.1759, -5.6830, -8.0830, -8.1225], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2782, device='cuda:0', dtype=torch.float64)
tensor([-3.3069, -6.1685, -5.6589, -8.0999, -8.1206], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1167, device='cuda:0', dtype=torch.float64)
tensor([-3.3214, -6.1639, -5.6382, -8.1108, -8.1312], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2241, device='cuda:0', dtype=torch.float64)
tensor([-3.3347, -6.1725, -5.6298, -8.1064, -8.1305], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1633, device='cuda:0', dtype=torch.float64)
tensor([-3.3271, -6.1758, -5.6422, -8.1037, -8.1236], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1680, device='cuda:0', dtype=torch.float64)
tensor([-3.3016, -6.1650, -5.6611, -8.0795, -8.1064], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1766, device='cuda:0', dtype=torch.float64)
tensor([-3.2784, -6.1733, -5.6840, -8.0539, -8.0893], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1432, device='cuda:0', dtype=torch.float64)
tensor([-3.2429, -6.1688, -5.6956, -8.0252, -8.0691], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1926, device='cuda:0', dtype=torch.float64)
tensor([-3.2298, -6.1868, -5.6960, -7.9852, -8.0376], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1650, device='cuda:0', dtype=torch.float64)
tensor([-3.2143, -6.1998, -5.6845, -7.9530, -8.0015], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4156, device='cuda:0', dtype=torch.float64)
tensor([-3.1974, -6.2108, -5.6674, -7.9242, -7.9659], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2604, device='cuda:0', dtype=torch.float64)
tensor([-3.1875, -6.2312, -5.6586, -7.8911, -7.9422], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1105, device='cuda:0', dtype=torch.float64)
tensor([-3.1775, -6.2178, -5.6452, -7.8703, -7.9146], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2311, device='cuda:0', dtype=torch.float64)
tensor([-3.1647, -6.1811, -5.6244, -7.8574, -7.8867], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1623, device='cuda:0', dtype=torch.float64)
tensor([-3.1521, -6.1253, -5.5985, -7.8419, -7.8740], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1873, device='cuda:0', dtype=torch.float64)
tensor([-3.1554, -6.0670, -5.5541, -7.8322, -7.8712], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3359, device='cuda:0', dtype=torch.float64)
tensor([-3.1606, -6.0211, -5.5160, -7.8417, -7.8647], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1339, device='cuda:0', dtype=torch.float64)
tensor([-3.1798, -5.9947, -5.4879, -7.8409, -7.8547], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1752, device='cuda:0', dtype=torch.float64)
tensor([-3.2078, -5.9799, -5.4707, -7.8119, -7.8379], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2247, device='cuda:0', dtype=torch.float64)
tensor([-3.2176, -5.9502, -5.4621, -7.7990, -7.8153], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1335, device='cuda:0', dtype=torch.float64)
tensor([-3.2239, -5.9201, -5.4597, -7.7665, -7.7835], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3345, device='cuda:0', dtype=torch.float64)
tensor([-3.2282, -5.8869, -5.4664, -7.7189, -7.7513], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1467, device='cuda:0', dtype=torch.float64)
tensor([-3.2314, -5.8641, -5.4800, -7.6882, -7.7087], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0926, device='cuda:0', dtype=torch.float64)
tensor([-3.2316, -5.8356, -5.5025, -7.6495, -7.6597], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2119, device='cuda:0', dtype=torch.float64)
tensor([-3.2370, -5.8115, -5.5203, -7.6098, -7.6123], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1203, device='cuda:0', dtype=torch.float64)
tensor([-3.2439, -5.7976, -5.5365, -7.5572, -7.5720], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3367, device='cuda:0', dtype=torch.float64)
tensor([-3.2427, -5.7843, -5.5628, -7.5153, -7.5359], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1499, device='cuda:0', dtype=torch.float64)
tensor([-3.2508, -5.7846, -5.5856, -7.4607, -7.4974], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3263, device='cuda:0', dtype=torch.float64)
tensor([-3.2602, -5.7980, -5.6045, -7.4230, -7.4644], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1213, device='cuda:0', dtype=torch.float64)
tensor([-3.2601, -5.8127, -5.6178, -7.3851, -7.4301], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9687, device='cuda:0', dtype=torch.float64)
tensor([-3.2488, -5.8128, -5.6186, -7.3617, -7.3968], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1326, device='cuda:0', dtype=torch.float64)
tensor([-3.2431, -5.8137, -5.6115, -7.3430, -7.3741], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2768, device='cuda:0', dtype=torch.float64)
tensor([-3.2416, -5.8046, -5.5896, -7.3254, -7.3518], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1914, device='cuda:0', dtype=torch.float64)
tensor([-3.2322, -5.7948, -5.5635, -7.3152, -7.3414], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0588, device='cuda:0', dtype=torch.float64)
tensor([-3.2146, -5.7784, -5.5481, -7.3068, -7.3392], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1585, device='cuda:0', dtype=torch.float64)
tensor([-3.1976, -5.7593, -5.5255, -7.3122, -7.3478], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1551, device='cuda:0', dtype=torch.float64)
tensor([-3.1942, -5.7482, -5.4905, -7.3132, -7.3692], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2053, device='cuda:0', dtype=torch.float64)
tensor([-3.1808, -5.7339, -5.4749, -7.3071, -7.3832], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1081, device='cuda:0', dtype=torch.float64)
tensor([-3.1685, -5.7354, -5.4698, -7.3172, -7.3895], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2594, device='cuda:0', dtype=torch.float64)
tensor([-3.1554, -5.7208, -5.4472, -7.3176, -7.3820], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2119, device='cuda:0', dtype=torch.float64)
tensor([-3.1374, -5.6968, -5.4142, -7.3256, -7.3653], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3592, device='cuda:0', dtype=torch.float64)
tensor([-3.1362, -5.6801, -5.3787, -7.3310, -7.3501], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2783, device='cuda:0', dtype=torch.float64)
tensor([-3.1376, -5.6779, -5.3541, -7.3472, -7.3324], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0748, device='cuda:0', dtype=torch.float64)
tensor([-3.1320, -5.6840, -5.3415, -7.3823, -7.3141], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0322, device='cuda:0', dtype=torch.float64)
tensor([-3.1332, -5.7002, -5.3302, -7.4128, -7.3002], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1563, device='cuda:0', dtype=torch.float64)
tensor([-3.1519, -5.7220, -5.3150, -7.4181, -7.2782], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1571, device='cuda:0', dtype=torch.float64)
tensor([-3.1683, -5.7393, -5.3023, -7.4069, -7.2663], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2448, device='cuda:0', dtype=torch.float64)
tensor([-3.1775, -5.7411, -5.3008, -7.4007, -7.2489], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0538, device='cuda:0', dtype=torch.float64)
tensor([-3.1874, -5.7395, -5.2960, -7.3914, -7.2324], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1594, device='cuda:0', dtype=torch.float64)
tensor([-3.1745, -5.7154, -5.3110, -7.3735, -7.2110], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0331, device='cuda:0', dtype=torch.float64)
tensor([-3.1676, -5.6929, -5.3116, -7.3541, -7.1953], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1332, device='cuda:0', dtype=torch.float64)
tensor([-3.1448, -5.6683, -5.3112, -7.3307, -7.1887], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0160, device='cuda:0', dtype=torch.float64)
tensor([-3.1313, -5.6436, -5.3069, -7.3071, -7.1876], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2193, device='cuda:0', dtype=torch.float64)
tensor([-3.1342, -5.6221, -5.2876, -7.2656, -7.1847], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1109, device='cuda:0', dtype=torch.float64)
tensor([-3.1491, -5.6075, -5.2501, -7.2162, -7.1902], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2626, device='cuda:0', dtype=torch.float64)
tensor([-3.1655, -5.5968, -5.2160, -7.1726, -7.1983], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0858, device='cuda:0', dtype=torch.float64)
tensor([-3.1719, -5.5796, -5.1824, -7.1150, -7.1968], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1379, device='cuda:0', dtype=torch.float64)
tensor([-3.1628, -5.5502, -5.1616, -7.0593, -7.1875], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2248, device='cuda:0', dtype=torch.float64)
tensor([-3.1643, -5.5441, -5.1381, -7.0010, -7.1758], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4373, device='cuda:0', dtype=torch.float64)
tensor([-3.1634, -5.5280, -5.1192, -6.9625, -7.1614], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0826, device='cuda:0', dtype=torch.float64)
tensor([-3.1649, -5.5151, -5.1046, -6.9310, -7.1382], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2066, device='cuda:0', dtype=torch.float64)
tensor([-3.1707, -5.5036, -5.0782, -6.9144, -7.1068], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9941, device='cuda:0', dtype=torch.float64)
tensor([-3.1670, -5.5028, -5.0636, -6.9039, -7.0677], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3130, device='cuda:0', dtype=torch.float64)
tensor([-3.1605, -5.4906, -5.0426, -6.9207, -7.0238], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9797, device='cuda:0', dtype=torch.float64)
tensor([-3.1464, -5.4775, -5.0411, -6.9458, -6.9946], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0657, device='cuda:0', dtype=torch.float64)
tensor([-3.1382, -5.4661, -5.0447, -6.9595, -6.9756], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0879, device='cuda:0', dtype=torch.float64)
tensor([-3.1263, -5.4587, -5.0559, -6.9739, -6.9609], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1440, device='cuda:0', dtype=torch.float64)
tensor([-3.1210, -5.4572, -5.0694, -6.9620, -6.9484], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2650, device='cuda:0', dtype=torch.float64)
tensor([-3.1258, -5.4538, -5.0798, -6.9332, -6.9456], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1856, device='cuda:0', dtype=torch.float64)
tensor([-3.1374, -5.4547, -5.0768, -6.8989, -6.9584], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0321, device='cuda:0', dtype=torch.float64)
tensor([-3.1380, -5.4449, -5.0773, -6.8823, -6.9744], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1206, device='cuda:0', dtype=torch.float64)
tensor([-3.1385, -5.4364, -5.0787, -6.8613, -6.9780], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1010, device='cuda:0', dtype=torch.float64)
tensor([-3.1259, -5.4275, -5.0924, -6.8507, -6.9731], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2499, device='cuda:0', dtype=torch.float64)
tensor([-3.1052, -5.4131, -5.1123, -6.8369, -6.9550], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2825, device='cuda:0', dtype=torch.float64)
tensor([-3.0706, -5.4048, -5.1331, -6.8487, -6.9253], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2115, device='cuda:0', dtype=torch.float64)
tensor([-3.0346, -5.4065, -5.1647, -6.8585, -6.8893], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2398, device='cuda:0', dtype=torch.float64)
tensor([-3.0062, -5.4152, -5.1856, -6.8571, -6.8527], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2401, device='cuda:0', dtype=torch.float64)
tensor([-2.9914, -5.4184, -5.1912, -6.8490, -6.8195], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2092, device='cuda:0', dtype=torch.float64)
tensor([-2.9919, -5.4266, -5.1745, -6.8264, -6.7992], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0355, device='cuda:0', dtype=torch.float64)
tensor([-2.9999, -5.4352, -5.1359, -6.7979, -6.7851], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1397, device='cuda:0', dtype=torch.float64)
tensor([-3.0184, -5.4457, -5.0811, -6.7650, -6.7711], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1281, device='cuda:0', dtype=torch.float64)
tensor([-3.0374, -5.4654, -5.0343, -6.7481, -6.7607], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1681, device='cuda:0', dtype=torch.float64)
tensor([-3.0480, -5.4675, -4.9960, -6.7357, -6.7502], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1502, device='cuda:0', dtype=torch.float64)
tensor([-3.0560, -5.4674, -4.9673, -6.7321, -6.7402], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0873, device='cuda:0', dtype=torch.float64)
tensor([-3.0663, -5.4690, -4.9481, -6.7439, -6.7377], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2920, device='cuda:0', dtype=torch.float64)
tensor([-3.0860, -5.4608, -4.9455, -6.7613, -6.7393], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1560, device='cuda:0', dtype=torch.float64)
tensor([-3.0870, -5.4357, -4.9519, -6.7970, -6.7302], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0551, device='cuda:0', dtype=torch.float64)
tensor([-3.0697, -5.3922, -4.9753, -6.8424, -6.7194], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2335, device='cuda:0', dtype=torch.float64)
tensor([-3.0604, -5.3576, -4.9946, -6.8808, -6.6975], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1815, device='cuda:0', dtype=torch.float64)
tensor([-3.0535, -5.3336, -5.0166, -6.8987, -6.6673], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1512, device='cuda:0', dtype=torch.float64)
tensor([-3.0548, -5.3169, -5.0339, -6.9081, -6.6343], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1193, device='cuda:0', dtype=torch.float64)
tensor([-3.0566, -5.3103, -5.0395, -6.9040, -6.6103], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2341, device='cuda:0', dtype=torch.float64)
tensor([-3.0633, -5.3236, -5.0504, -6.8774, -6.5892], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1685, device='cuda:0', dtype=torch.float64)
tensor([-3.0721, -5.3403, -5.0608, -6.8525, -6.5806], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0862, device='cuda:0', dtype=torch.float64)
tensor([-3.0824, -5.3611, -5.0772, -6.8313, -6.5790], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2504, device='cuda:0', dtype=torch.float64)
tensor([-3.1081, -5.3875, -5.0922, -6.7966, -6.5826], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1430, device='cuda:0', dtype=torch.float64)
tensor([-3.1354, -5.4132, -5.0898, -6.7636, -6.5874], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1151, device='cuda:0', dtype=torch.float64)
tensor([-3.1540, -5.4248, -5.0735, -6.7342, -6.5800], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1354, device='cuda:0', dtype=torch.float64)
tensor([-3.1464, -5.4130, -5.0545, -6.7253, -6.5734], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1146, device='cuda:0', dtype=torch.float64)
tensor([-3.1110, -5.3737, -5.0300, -6.7458, -6.5629], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1400, device='cuda:0', dtype=torch.float64)
tensor([-3.0692, -5.3180, -5.0024, -6.7572, -6.5619], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1323, device='cuda:0', dtype=torch.float64)
tensor([-3.0451, -5.2726, -4.9770, -6.7656, -6.5730], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0903, device='cuda:0', dtype=torch.float64)
tensor([-3.0308, -5.2439, -4.9596, -6.7548, -6.5944], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1868, device='cuda:0', dtype=torch.float64)
tensor([-3.0282, -5.2262, -4.9463, -6.7200, -6.6195], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1175, device='cuda:0', dtype=torch.float64)
tensor([-3.0345, -5.2223, -4.9410, -6.6651, -6.6393], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1443, device='cuda:0', dtype=torch.float64)
tensor([-3.0399, -5.2315, -4.9430, -6.5993, -6.6445], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3062, device='cuda:0', dtype=torch.float64)
tensor([-3.0438, -5.2401, -4.9444, -6.5602, -6.6366], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2855, device='cuda:0', dtype=torch.float64)
tensor([-3.0714, -5.2598, -4.9381, -6.4998, -6.6204], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2204, device='cuda:0', dtype=torch.float64)
tensor([-3.0927, -5.2661, -4.9329, -6.4386, -6.5869], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9964, device='cuda:0', dtype=torch.float64)
tensor([-3.1027, -5.2715, -4.9441, -6.3882, -6.5471], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0563, device='cuda:0', dtype=torch.float64)
tensor([-3.1049, -5.2755, -4.9537, -6.3429, -6.5109], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9770, device='cuda:0', dtype=torch.float64)
tensor([-3.1080, -5.2923, -4.9621, -6.3331, -6.4812], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3083, device='cuda:0', dtype=torch.float64)
tensor([-3.1005, -5.3119, -4.9743, -6.3510, -6.4563], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2936, device='cuda:0', dtype=torch.float64)
tensor([-3.0937, -5.3319, -4.9884, -6.3834, -6.4442], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1503, device='cuda:0', dtype=torch.float64)
tensor([-3.0907, -5.3582, -4.9950, -6.4070, -6.4439], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1095, device='cuda:0', dtype=torch.float64)
tensor([-3.0702, -5.3637, -5.0194, -6.4503, -6.4524], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2632, device='cuda:0', dtype=torch.float64)
tensor([-3.0649, -5.3670, -5.0375, -6.4723, -6.4599], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2748, device='cuda:0', dtype=torch.float64)
tensor([-3.0691, -5.3546, -5.0350, -6.4738, -6.4698], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9041, device='cuda:0', dtype=torch.float64)
tensor([-3.0725, -5.3394, -5.0220, -6.4691, -6.4749], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2326, device='cuda:0', dtype=torch.float64)
tensor([-3.0730, -5.3176, -5.0119, -6.4743, -6.4772], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0059, device='cuda:0', dtype=torch.float64)
tensor([-3.0782, -5.3082, -4.9987, -6.4767, -6.4791], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0710, device='cuda:0', dtype=torch.float64)
tensor([-3.0750, -5.2750, -4.9733, -6.4733, -6.4796], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1899, device='cuda:0', dtype=torch.float64)
tensor([-3.0720, -5.2439, -4.9572, -6.4721, -6.4601], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0692, device='cuda:0', dtype=torch.float64)
tensor([-3.0737, -5.2321, -4.9433, -6.4657, -6.4363], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1137, device='cuda:0', dtype=torch.float64)
tensor([-3.0952, -5.2437, -4.9323, -6.4469, -6.4263], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2945, device='cuda:0', dtype=torch.float64)
tensor([-3.1138, -5.2611, -4.9298, -6.4227, -6.4151], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0960, device='cuda:0', dtype=torch.float64)
tensor([-3.1286, -5.2615, -4.9323, -6.4036, -6.4036], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0324, device='cuda:0', dtype=torch.float64)
tensor([-3.1353, -5.2596, -4.9282, -6.3831, -6.3891], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5123, device='cuda:0', dtype=torch.float64)
tensor([-3.1410, -5.2401, -4.9242, -6.3551, -6.3773], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1918, device='cuda:0', dtype=torch.float64)
tensor([-3.1395, -5.2325, -4.9207, -6.3311, -6.3659], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2679, device='cuda:0', dtype=torch.float64)
tensor([-3.1196, -5.2113, -4.9162, -6.3387, -6.3609], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1282, device='cuda:0', dtype=torch.float64)
tensor([-3.1144, -5.2014, -4.9073, -6.3330, -6.3580], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0776, device='cuda:0', dtype=torch.float64)
tensor([-3.1038, -5.1930, -4.8930, -6.3343, -6.3571], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2305, device='cuda:0', dtype=torch.float64)
tensor([-3.0864, -5.1795, -4.8736, -6.3329, -6.3520], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0593, device='cuda:0', dtype=torch.float64)
tensor([-3.0647, -5.1653, -4.8539, -6.3406, -6.3433], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1820, device='cuda:0', dtype=torch.float64)
tensor([-3.0466, -5.1634, -4.8307, -6.3526, -6.3365], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1877, device='cuda:0', dtype=torch.float64)
tensor([-3.0242, -5.1673, -4.8084, -6.3686, -6.3265], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1439, device='cuda:0', dtype=torch.float64)
tensor([-2.9976, -5.1647, -4.7953, -6.3879, -6.3134], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0991, device='cuda:0', dtype=torch.float64)
tensor([-2.9824, -5.1614, -4.7938, -6.3972, -6.3092], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0702, device='cuda:0', dtype=torch.float64)
tensor([-2.9866, -5.1814, -4.8031, -6.3999, -6.3143], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0154, device='cuda:0', dtype=torch.float64)
tensor([-2.9764, -5.1972, -4.8179, -6.3966, -6.3132], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0930, device='cuda:0', dtype=torch.float64)
tensor([-2.9804, -5.2101, -4.8276, -6.3844, -6.3079], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3021, device='cuda:0', dtype=torch.float64)
tensor([-2.9954, -5.2219, -4.8424, -6.3684, -6.3040], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0924, device='cuda:0', dtype=torch.float64)
tensor([-3.0092, -5.2207, -4.8648, -6.3598, -6.2999], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0453, device='cuda:0', dtype=torch.float64)
tensor([-3.0259, -5.2218, -4.8786, -6.3745, -6.3013], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9871, device='cuda:0', dtype=torch.float64)
tensor([-3.0411, -5.2200, -4.8906, -6.3868, -6.3003], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0202, device='cuda:0', dtype=torch.float64)
tensor([-3.0584, -5.2049, -4.8905, -6.3872, -6.3021], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1638, device='cuda:0', dtype=torch.float64)
tensor([-3.0655, -5.1744, -4.8970, -6.3912, -6.2962], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2865, device='cuda:0', dtype=torch.float64)
tensor([-3.0712, -5.1343, -4.8991, -6.3699, -6.2973], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1775, device='cuda:0', dtype=torch.float64)
tensor([-3.0830, -5.1056, -4.8882, -6.3396, -6.3069], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0521, device='cuda:0', dtype=torch.float64)
tensor([-3.1046, -5.0944, -4.8554, -6.2867, -6.3105], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1200, device='cuda:0', dtype=torch.float64)
tensor([-3.1284, -5.0903, -4.8243, -6.2481, -6.3041], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2600, device='cuda:0', dtype=torch.float64)
tensor([-3.1557, -5.0967, -4.7865, -6.2108, -6.2991], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1108, device='cuda:0', dtype=torch.float64)
tensor([-3.1613, -5.0993, -4.7542, -6.1907, -6.2821], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3038, device='cuda:0', dtype=torch.float64)
tensor([-3.1541, -5.0987, -4.7339, -6.1796, -6.2565], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2189, device='cuda:0', dtype=torch.float64)
tensor([-3.1386, -5.0981, -4.7264, -6.2119, -6.2354], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1976, device='cuda:0', dtype=torch.float64)
tensor([-3.1145, -5.0939, -4.7117, -6.2581, -6.2102], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1382, device='cuda:0', dtype=torch.float64)
tensor([-3.0991, -5.0954, -4.7080, -6.2941, -6.1929], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0614, device='cuda:0', dtype=torch.float64)
tensor([-3.0864, -5.1158, -4.7094, -6.3205, -6.1858], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1629, device='cuda:0', dtype=torch.float64)
tensor([-3.0782, -5.1521, -4.7225, -6.3423, -6.1763], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1081, device='cuda:0', dtype=torch.float64)
tensor([-3.0766, -5.1928, -4.7430, -6.3515, -6.1634], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0434, device='cuda:0', dtype=torch.float64)
tensor([-3.0852, -5.2294, -4.7546, -6.3388, -6.1535], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0369, device='cuda:0', dtype=torch.float64)
tensor([-3.0991, -5.2595, -4.7679, -6.3128, -6.1498], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1922, device='cuda:0', dtype=torch.float64)
tensor([-3.1027, -5.2602, -4.7911, -6.2940, -6.1414], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9419, device='cuda:0', dtype=torch.float64)
tensor([-3.1002, -5.2376, -4.8222, -6.2830, -6.1352], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0668, device='cuda:0', dtype=torch.float64)
tensor([-3.0892, -5.1959, -4.8546, -6.2860, -6.1295], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1132, device='cuda:0', dtype=torch.float64)
tensor([-3.0869, -5.1745, -4.8716, -6.2644, -6.1195], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0965, device='cuda:0', dtype=torch.float64)
tensor([-3.0781, -5.1423, -4.8878, -6.2549, -6.1205], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0233, device='cuda:0', dtype=torch.float64)
tensor([-3.0687, -5.1172, -4.9085, -6.2507, -6.1205], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9993, device='cuda:0', dtype=torch.float64)
tensor([-3.0634, -5.0995, -4.9022, -6.2454, -6.1236], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1693, device='cuda:0', dtype=torch.float64)
tensor([-3.0617, -5.0890, -4.8923, -6.2387, -6.1166], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1828, device='cuda:0', dtype=torch.float64)
tensor([-3.0740, -5.0889, -4.8723, -6.2160, -6.1125], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0691, device='cuda:0', dtype=torch.float64)
tensor([-3.0773, -5.0927, -4.8516, -6.2084, -6.1053], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9243, device='cuda:0', dtype=torch.float64)
tensor([-3.0814, -5.0955, -4.8205, -6.2040, -6.0906], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2209, device='cuda:0', dtype=torch.float64)
tensor([-3.0841, -5.0833, -4.7894, -6.2088, -6.0700], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0885, device='cuda:0', dtype=torch.float64)
tensor([-3.0886, -5.0699, -4.7567, -6.2054, -6.0469], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2206, device='cuda:0', dtype=torch.float64)
tensor([-3.0842, -5.0496, -4.7387, -6.2152, -6.0312], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1105, device='cuda:0', dtype=torch.float64)
tensor([-3.0655, -5.0303, -4.7308, -6.2298, -6.0036], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2339, device='cuda:0', dtype=torch.float64)
tensor([-3.0452, -5.0030, -4.7277, -6.2480, -5.9755], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1936, device='cuda:0', dtype=torch.float64)
tensor([-3.0321, -4.9810, -4.7168, -6.2701, -5.9558], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9742, device='cuda:0', dtype=torch.float64)
tensor([-3.0212, -4.9635, -4.7088, -6.2753, -5.9420], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3546, device='cuda:0', dtype=torch.float64)
tensor([-3.0080, -4.9327, -4.6992, -6.2705, -5.9411], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1992, device='cuda:0', dtype=torch.float64)
tensor([-3.0059, -4.9188, -4.6853, -6.2461, -5.9422], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3835, device='cuda:0', dtype=torch.float64)
tensor([-3.0304, -4.9408, -4.6694, -6.1979, -5.9461], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3172, device='cuda:0', dtype=torch.float64)
tensor([-3.0567, -4.9705, -4.6595, -6.1349, -5.9703], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9874, device='cuda:0', dtype=torch.float64)
tensor([-3.0813, -4.9937, -4.6457, -6.0896, -5.9868], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2116, device='cuda:0', dtype=torch.float64)
tensor([-3.1232, -5.0272, -4.6292, -6.0312, -6.0081], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0552, device='cuda:0', dtype=torch.float64)
tensor([-3.1626, -5.0693, -4.6208, -5.9967, -6.0272], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0812, device='cuda:0', dtype=torch.float64)
tensor([-3.1891, -5.0953, -4.6196, -5.9859, -6.0368], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1682, device='cuda:0', dtype=torch.float64)
tensor([-3.1924, -5.0971, -4.6282, -5.9857, -6.0418], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3980, device='cuda:0', dtype=torch.float64)
tensor([-3.1883, -5.0824, -4.6489, -5.9947, -6.0356], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0059, device='cuda:0', dtype=torch.float64)
tensor([-3.1625, -5.0466, -4.6715, -6.0311, -6.0274], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2439, device='cuda:0', dtype=torch.float64)
tensor([-3.1217, -4.9896, -4.6905, -6.0897, -6.0167], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0420, device='cuda:0', dtype=torch.float64)
tensor([-3.0879, -4.9319, -4.7014, -6.1433, -6.0116], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9992, device='cuda:0', dtype=torch.float64)
tensor([-3.0646, -4.8942, -4.6975, -6.1871, -6.0157], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0674, device='cuda:0', dtype=torch.float64)
tensor([-3.0519, -4.8810, -4.6770, -6.2090, -6.0254], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1704, device='cuda:0', dtype=torch.float64)
tensor([-3.0455, -4.8801, -4.6586, -6.2010, -6.0251], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3077, device='cuda:0', dtype=torch.float64)
tensor([-3.0431, -4.8964, -4.6440, -6.1986, -6.0236], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1931, device='cuda:0', dtype=torch.float64)
tensor([-3.0537, -4.9277, -4.6275, -6.1798, -6.0177], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0042, device='cuda:0', dtype=torch.float64)
tensor([-3.0568, -4.9610, -4.6249, -6.1699, -6.0111], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1054, device='cuda:0', dtype=torch.float64)
tensor([-3.0561, -4.9930, -4.6345, -6.1545, -6.0017], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1706, device='cuda:0', dtype=torch.float64)
tensor([-3.0542, -5.0293, -4.6428, -6.1446, -5.9955], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3101, device='cuda:0', dtype=torch.float64)
tensor([-3.0442, -5.0399, -4.6470, -6.1290, -5.9797], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0489, device='cuda:0', dtype=torch.float64)
tensor([-3.0331, -5.0425, -4.6576, -6.0974, -5.9534], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2176, device='cuda:0', dtype=torch.float64)
tensor([-3.0197, -5.0379, -4.6776, -6.0772, -5.9389], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1882, device='cuda:0', dtype=torch.float64)
tensor([-3.0085, -5.0361, -4.7114, -6.0508, -5.9228], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2657, device='cuda:0', dtype=torch.float64)
tensor([-3.0039, -5.0194, -4.7421, -6.0104, -5.9123], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0631, device='cuda:0', dtype=torch.float64)
tensor([-2.9984, -4.9887, -4.7748, -5.9807, -5.9148], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9963, device='cuda:0', dtype=torch.float64)
tensor([-3.0062, -4.9750, -4.7939, -5.9502, -5.9167], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0570, device='cuda:0', dtype=torch.float64)
tensor([-3.0185, -4.9662, -4.8115, -5.9345, -5.9240], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0986, device='cuda:0', dtype=torch.float64)
tensor([-3.0334, -4.9570, -4.8190, -5.9192, -5.9269], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9646, device='cuda:0', dtype=torch.float64)
tensor([-3.0583, -4.9649, -4.8222, -5.8984, -5.9250], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2595, device='cuda:0', dtype=torch.float64)
tensor([-3.0738, -4.9653, -4.8243, -5.8934, -5.9381], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0054, device='cuda:0', dtype=torch.float64)
tensor([-3.0787, -4.9649, -4.8287, -5.9002, -5.9444], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9888, device='cuda:0', dtype=torch.float64)
tensor([-3.0873, -4.9780, -4.8166, -5.9055, -5.9450], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0732, device='cuda:0', dtype=torch.float64)
tensor([-3.0911, -5.0009, -4.8088, -5.9093, -5.9264], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0826, device='cuda:0', dtype=torch.float64)
tensor([-3.0950, -5.0243, -4.8069, -5.9113, -5.9174], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1296, device='cuda:0', dtype=torch.float64)
tensor([-3.1008, -5.0507, -4.7936, -5.9321, -5.9066], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0819, device='cuda:0', dtype=torch.float64)
tensor([-3.1005, -5.0641, -4.7787, -5.9581, -5.8993], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9910, device='cuda:0', dtype=torch.float64)
tensor([-3.0984, -5.0703, -4.7597, -5.9855, -5.8963], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1148, device='cuda:0', dtype=torch.float64)
tensor([-3.0861, -5.0620, -4.7469, -6.0179, -5.8954], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2075, device='cuda:0', dtype=torch.float64)
tensor([-3.0587, -5.0164, -4.7478, -6.0682, -5.8861], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1289, device='cuda:0', dtype=torch.float64)
tensor([-3.0225, -4.9506, -4.7753, -6.1254, -5.8741], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9870, device='cuda:0', dtype=torch.float64)
tensor([-2.9958, -4.9035, -4.8044, -6.1685, -5.8723], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1712, device='cuda:0', dtype=torch.float64)
tensor([-2.9919, -4.8689, -4.8313, -6.1785, -5.8693], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2069, device='cuda:0', dtype=torch.float64)
tensor([-3.0115, -4.8675, -4.8633, -6.1564, -5.8563], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2290, device='cuda:0', dtype=torch.float64)
tensor([-3.0396, -4.8786, -4.8771, -6.1065, -5.8472], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9953, device='cuda:0', dtype=torch.float64)
tensor([-3.0698, -4.9002, -4.8898, -6.0513, -5.8390], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2202, device='cuda:0', dtype=torch.float64)
tensor([-3.0962, -4.9183, -4.8929, -6.0043, -5.8368], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0496, device='cuda:0', dtype=torch.float64)
tensor([-3.1280, -4.9572, -4.8739, -5.9438, -5.8440], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9689, device='cuda:0', dtype=torch.float64)
tensor([-3.1561, -5.0045, -4.8449, -5.8989, -5.8584], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0539, device='cuda:0', dtype=torch.float64)
tensor([-3.1558, -5.0264, -4.8162, -5.8858, -5.8712], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0330, device='cuda:0', dtype=torch.float64)
tensor([-3.1434, -5.0341, -4.7873, -5.9027, -5.8849], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0508, device='cuda:0', dtype=torch.float64)
tensor([-3.1252, -5.0327, -4.7629, -5.9312, -5.8930], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9864, device='cuda:0', dtype=torch.float64)
tensor([-3.1050, -5.0223, -4.7406, -5.9662, -5.8943], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0468, device='cuda:0', dtype=torch.float64)
tensor([-3.0839, -5.0076, -4.7252, -5.9975, -5.8898], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3790, device='cuda:0', dtype=torch.float64)
tensor([-3.0585, -4.9674, -4.7274, -6.0398, -5.8830], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9710, device='cuda:0', dtype=torch.float64)
tensor([-3.0532, -4.9434, -4.7177, -6.0776, -5.8777], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0594, device='cuda:0', dtype=torch.float64)
tensor([-3.0594, -4.9277, -4.7181, -6.1014, -5.8804], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9817, device='cuda:0', dtype=torch.float64)
tensor([-3.0705, -4.9051, -4.7216, -6.1058, -5.8905], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0974, device='cuda:0', dtype=torch.float64)
tensor([-3.0707, -4.8906, -4.7255, -6.1076, -5.8836], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3358, device='cuda:0', dtype=torch.float64)
tensor([-3.0749, -4.8681, -4.7219, -6.1075, -5.8702], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0966, device='cuda:0', dtype=torch.float64)
tensor([-3.0901, -4.8629, -4.7103, -6.0944, -5.8610], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2267, device='cuda:0', dtype=torch.float64)
tensor([-3.1094, -4.8735, -4.6915, -6.0775, -5.8472], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1071, device='cuda:0', dtype=torch.float64)
tensor([-3.1281, -4.9093, -4.6724, -6.0557, -5.8295], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9989, device='cuda:0', dtype=torch.float64)
tensor([-3.1457, -4.9546, -4.6561, -6.0369, -5.8241], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8667, device='cuda:0', dtype=torch.float64)
tensor([-3.1622, -4.9975, -4.6404, -6.0100, -5.8181], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0302, device='cuda:0', dtype=torch.float64)
tensor([-3.1701, -5.0412, -4.6286, -5.9898, -5.8112], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1588, device='cuda:0', dtype=torch.float64)
tensor([-3.1794, -5.0709, -4.6189, -5.9745, -5.8143], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1512, device='cuda:0', dtype=torch.float64)
tensor([-3.1770, -5.0788, -4.6217, -5.9696, -5.8148], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2249, device='cuda:0', dtype=torch.float64)
tensor([-3.1698, -5.0763, -4.6316, -5.9713, -5.8211], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9892, device='cuda:0', dtype=torch.float64)
tensor([-3.1723, -5.0729, -4.6344, -5.9694, -5.8278], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0847, device='cuda:0', dtype=torch.float64)
tensor([-3.1729, -5.0552, -4.6267, -5.9778, -5.8417], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0250, device='cuda:0', dtype=torch.float64)
tensor([-3.1822, -5.0341, -4.6166, -5.9760, -5.8594], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0145, device='cuda:0', dtype=torch.float64)
tensor([-3.1900, -4.9995, -4.6107, -5.9722, -5.8708], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0644, device='cuda:0', dtype=torch.float64)
tensor([-3.1872, -4.9690, -4.6194, -5.9741, -5.8771], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9122, device='cuda:0', dtype=torch.float64)
tensor([-3.1775, -4.9331, -4.6372, -5.9834, -5.8731], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0925, device='cuda:0', dtype=torch.float64)
tensor([-3.1712, -4.9137, -4.6632, -5.9793, -5.8690], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1607, device='cuda:0', dtype=torch.float64)
tensor([-3.1391, -4.8774, -4.7013, -5.9894, -5.8556], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1208, device='cuda:0', dtype=torch.float64)
tensor([-3.1199, -4.8624, -4.7227, -5.9857, -5.8401], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2674, device='cuda:0', dtype=torch.float64)
tensor([-3.1127, -4.8606, -4.7305, -5.9583, -5.8297], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0757, device='cuda:0', dtype=torch.float64)
tensor([-3.1208, -4.8715, -4.7278, -5.9339, -5.8162], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9094, device='cuda:0', dtype=torch.float64)
tensor([-3.1407, -4.8939, -4.7107, -5.8981, -5.7968], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1912, device='cuda:0', dtype=torch.float64)
tensor([-3.1676, -4.9290, -4.6908, -5.8561, -5.7773], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2398, device='cuda:0', dtype=torch.float64)
tensor([-3.2012, -4.9703, -4.6547, -5.8088, -5.7532], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1711, device='cuda:0', dtype=torch.float64)
tensor([-3.2167, -4.9919, -4.6300, -5.7881, -5.7393], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0989, device='cuda:0', dtype=torch.float64)
tensor([-3.2227, -5.0019, -4.6187, -5.7920, -5.7279], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0947, device='cuda:0', dtype=torch.float64)
tensor([-3.2208, -4.9934, -4.6200, -5.7992, -5.7194], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1817, device='cuda:0', dtype=torch.float64)
tensor([-3.2049, -4.9724, -4.6390, -5.8183, -5.7083], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8227, device='cuda:0', dtype=torch.float64)
tensor([-3.1870, -4.9568, -4.6648, -5.8447, -5.7108], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8519, device='cuda:0', dtype=torch.float64)
tensor([-3.1666, -4.9295, -4.7027, -5.8813, -5.7253], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0489, device='cuda:0', dtype=torch.float64)
tensor([-3.1552, -4.8984, -4.7344, -5.9073, -5.7448], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3984, device='cuda:0', dtype=torch.float64)
tensor([-3.1582, -4.8829, -4.7480, -5.9113, -5.7616], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0254, device='cuda:0', dtype=torch.float64)
tensor([-3.1575, -4.8715, -4.7711, -5.9127, -5.7776], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1232, device='cuda:0', dtype=torch.float64)
tensor([-3.1494, -4.8599, -4.8008, -5.9117, -5.7885], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1194, device='cuda:0', dtype=torch.float64)
tensor([-3.1368, -4.8467, -4.8308, -5.9189, -5.7929], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1780, device='cuda:0', dtype=torch.float64)
tensor([-3.1459, -4.8535, -4.8482, -5.9098, -5.7874], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8584, device='cuda:0', dtype=torch.float64)
tensor([-3.1563, -4.8639, -4.8624, -5.8976, -5.7784], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9916, device='cuda:0', dtype=torch.float64)
tensor([-3.1604, -4.8770, -4.8697, -5.8893, -5.7671], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1040, device='cuda:0', dtype=torch.float64)
tensor([-3.1547, -4.8822, -4.8774, -5.8834, -5.7535], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0597, device='cuda:0', dtype=torch.float64)
tensor([-3.1580, -4.8842, -4.8546, -5.8703, -5.7378], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8931, device='cuda:0', dtype=torch.float64)
tensor([-3.1494, -4.8870, -4.8280, -5.8693, -5.7169], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2430, device='cuda:0', dtype=torch.float64)
tensor([-3.1292, -4.8696, -4.8083, -5.8787, -5.7015], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0844, device='cuda:0', dtype=torch.float64)
tensor([-3.1120, -4.8468, -4.7854, -5.8805, -5.6811], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1477, device='cuda:0', dtype=torch.float64)
tensor([-3.0977, -4.8331, -4.7564, -5.9111, -5.6746], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2759, device='cuda:0', dtype=torch.float64)
tensor([-3.1032, -4.8404, -4.7155, -5.9128, -5.6753], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1517, device='cuda:0', dtype=torch.float64)
tensor([-3.1282, -4.8627, -4.6772, -5.9081, -5.6884], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1582, device='cuda:0', dtype=torch.float64)
tensor([-3.1540, -4.9060, -4.6513, -5.8903, -5.7054], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9870, device='cuda:0', dtype=torch.float64)
tensor([-3.1809, -4.9383, -4.6283, -5.8580, -5.7227], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1510, device='cuda:0', dtype=torch.float64)
tensor([-3.2038, -4.9697, -4.6057, -5.8243, -5.7369], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0346, device='cuda:0', dtype=torch.float64)
tensor([-3.2288, -5.0042, -4.5974, -5.7918, -5.7544], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1588, device='cuda:0', dtype=torch.float64)
tensor([-3.2547, -5.0410, -4.5957, -5.7730, -5.7646], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9699, device='cuda:0', dtype=torch.float64)
tensor([-3.2785, -5.0658, -4.6043, -5.7776, -5.7738], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1965, device='cuda:0', dtype=torch.float64)
tensor([-3.3005, -5.0907, -4.6283, -5.7847, -5.7820], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0767, device='cuda:0', dtype=torch.float64)
tensor([-3.3076, -5.0966, -4.6552, -5.7999, -5.7915], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9380, device='cuda:0', dtype=torch.float64)
tensor([-3.3090, -5.0876, -4.6820, -5.8177, -5.8083], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6606, device='cuda:0', dtype=torch.float64)
tensor([-3.2826, -5.0514, -4.7239, -5.8633, -5.8084], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1591, device='cuda:0', dtype=torch.float64)
tensor([-3.2413, -4.9981, -4.7677, -5.9109, -5.8116], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1699, device='cuda:0', dtype=torch.float64)
tensor([-3.1893, -4.9280, -4.8098, -5.9681, -5.8176], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0228, device='cuda:0', dtype=torch.float64)
tensor([-3.1267, -4.8534, -4.8443, -6.0442, -5.8242], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0880, device='cuda:0', dtype=torch.float64)
tensor([-3.0727, -4.7852, -4.8567, -6.1146, -5.8313], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1785, device='cuda:0', dtype=torch.float64)
tensor([-3.0262, -4.7454, -4.8502, -6.1632, -5.8350], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1550, device='cuda:0', dtype=torch.float64)
tensor([-3.0127, -4.7331, -4.8154, -6.1695, -5.8339], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2786, device='cuda:0', dtype=torch.float64)
tensor([-3.0245, -4.7472, -4.7656, -6.1573, -5.8260], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1758, device='cuda:0', dtype=torch.float64)
tensor([-3.0516, -4.7868, -4.7225, -6.1376, -5.8279], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2899, device='cuda:0', dtype=torch.float64)
tensor([-3.0892, -4.8457, -4.6854, -6.1087, -5.8383], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1538, device='cuda:0', dtype=torch.float64)
tensor([-3.1239, -4.8913, -4.6667, -6.0923, -5.8455], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2001, device='cuda:0', dtype=torch.float64)
tensor([-3.1480, -4.9323, -4.6585, -6.1027, -5.8551], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0359, device='cuda:0', dtype=torch.float64)
tensor([-3.1574, -4.9673, -4.6687, -6.1376, -5.8597], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0391, device='cuda:0', dtype=torch.float64)
tensor([-3.1652, -5.0008, -4.6715, -6.1709, -5.8594], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3530, device='cuda:0', dtype=torch.float64)
tensor([-3.1884, -5.0423, -4.6643, -6.1852, -5.8504], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0736, device='cuda:0', dtype=torch.float64)
tensor([-3.1933, -5.0557, -4.6768, -6.1927, -5.8414], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0796, device='cuda:0', dtype=torch.float64)
tensor([-3.2063, -5.0639, -4.6782, -6.1725, -5.8201], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0836, device='cuda:0', dtype=torch.float64)
tensor([-3.2274, -5.0649, -4.6737, -6.1376, -5.8035], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1675, device='cuda:0', dtype=torch.float64)
tensor([-3.2384, -5.0554, -4.6709, -6.0825, -5.7852], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0661, device='cuda:0', dtype=torch.float64)
tensor([-3.2455, -5.0478, -4.6784, -6.0279, -5.7609], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9619, device='cuda:0', dtype=torch.float64)
tensor([-3.2609, -5.0375, -4.6801, -5.9870, -5.7392], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9544, device='cuda:0', dtype=torch.float64)
tensor([-3.2711, -5.0353, -4.6901, -5.9598, -5.7175], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8335, device='cuda:0', dtype=torch.float64)
tensor([-3.2832, -5.0288, -4.6983, -5.9205, -5.6989], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2153, device='cuda:0', dtype=torch.float64)
tensor([-3.2953, -5.0270, -4.7130, -5.8994, -5.6920], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1764, device='cuda:0', dtype=torch.float64)
tensor([-3.3064, -5.0305, -4.7272, -5.8801, -5.6867], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1028, device='cuda:0', dtype=torch.float64)
tensor([-3.3189, -5.0358, -4.7524, -5.8648, -5.6762], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9580, device='cuda:0', dtype=torch.float64)
tensor([-3.3185, -5.0234, -4.7743, -5.8572, -5.6634], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0186, device='cuda:0', dtype=torch.float64)
tensor([-3.3139, -5.0028, -4.7882, -5.8606, -5.6471], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0046, device='cuda:0', dtype=torch.float64)
tensor([-3.3011, -4.9866, -4.8122, -5.8702, -5.6310], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1852, device='cuda:0', dtype=torch.float64)
tensor([-3.2813, -4.9654, -4.8077, -5.8893, -5.6242], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2893, device='cuda:0', dtype=torch.float64)
tensor([-3.2664, -4.9395, -4.8016, -5.9224, -5.6151], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9599, device='cuda:0', dtype=torch.float64)
tensor([-3.2512, -4.9202, -4.8043, -5.9435, -5.6054], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1271, device='cuda:0', dtype=torch.float64)
tensor([-3.2412, -4.9027, -4.7994, -5.9807, -5.6068], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9436, device='cuda:0', dtype=torch.float64)
tensor([-3.2252, -4.8958, -4.8006, -6.0135, -5.6142], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1154, device='cuda:0', dtype=torch.float64)
tensor([-3.2167, -4.8966, -4.7929, -6.0448, -5.6278], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0219, device='cuda:0', dtype=torch.float64)
tensor([-3.2094, -4.8964, -4.7863, -6.0646, -5.6416], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1274, device='cuda:0', dtype=torch.float64)
tensor([-3.2176, -4.9096, -4.7717, -6.0693, -5.6550], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0912, device='cuda:0', dtype=torch.float64)
tensor([-3.2168, -4.9064, -4.7754, -6.0731, -5.6645], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3142, device='cuda:0', dtype=torch.float64)
tensor([-3.2228, -4.9190, -4.7882, -6.0688, -5.6747], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0408, device='cuda:0', dtype=torch.float64)
tensor([-3.2243, -4.9259, -4.8015, -6.0566, -5.6810], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2282, device='cuda:0', dtype=torch.float64)
tensor([-3.2347, -4.9317, -4.8116, -6.0415, -5.6937], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0638, device='cuda:0', dtype=torch.float64)
tensor([-3.2471, -4.9452, -4.8140, -6.0326, -5.7079], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1206, device='cuda:0', dtype=torch.float64)
tensor([-3.2521, -4.9520, -4.8302, -6.0249, -5.7089], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3053, device='cuda:0', dtype=torch.float64)
tensor([-3.2751, -4.9718, -4.8335, -6.0133, -5.7052], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9038, device='cuda:0', dtype=torch.float64)
tensor([-3.3045, -5.0014, -4.8212, -5.9853, -5.7118], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1333, device='cuda:0', dtype=torch.float64)
tensor([-3.3225, -5.0296, -4.8042, -5.9583, -5.7100], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2484, device='cuda:0', dtype=torch.float64)
tensor([-3.3343, -5.0403, -4.7887, -5.9360, -5.6998], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0243, device='cuda:0', dtype=torch.float64)
tensor([-3.3368, -5.0317, -4.7794, -5.8926, -5.6844], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0967, device='cuda:0', dtype=torch.float64)
tensor([-3.3380, -5.0222, -4.7740, -5.8442, -5.6603], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9162, device='cuda:0', dtype=torch.float64)
tensor([-3.3255, -5.0059, -4.7743, -5.8037, -5.6411], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0344, device='cuda:0', dtype=torch.float64)
tensor([-3.3050, -4.9862, -4.7698, -5.7773, -5.6300], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9247, device='cuda:0', dtype=torch.float64)
tensor([-3.2682, -4.9549, -4.7680, -5.7814, -5.6183], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0242, device='cuda:0', dtype=torch.float64)
tensor([-3.2272, -4.9210, -4.7688, -5.8163, -5.6063], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9424, device='cuda:0', dtype=torch.float64)
tensor([-3.1915, -4.9083, -4.7651, -5.8540, -5.5976], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0276, device='cuda:0', dtype=torch.float64)
tensor([-3.1602, -4.8931, -4.7654, -5.9015, -5.5929], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2796, device='cuda:0', dtype=torch.float64)
tensor([-3.1250, -4.8736, -4.7755, -5.9522, -5.5837], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9430, device='cuda:0', dtype=torch.float64)
tensor([-3.0990, -4.8667, -4.7854, -6.0007, -5.5819], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9201, device='cuda:0', dtype=torch.float64)
tensor([-3.0899, -4.8702, -4.7906, -6.0348, -5.5874], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0731, device='cuda:0', dtype=torch.float64)
tensor([-3.0867, -4.8665, -4.8021, -6.0714, -5.5919], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0151, device='cuda:0', dtype=torch.float64)
tensor([-3.0809, -4.8488, -4.8124, -6.0898, -5.5999], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1052, device='cuda:0', dtype=torch.float64)
tensor([-3.0899, -4.8422, -4.8240, -6.1000, -5.6175], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9338, device='cuda:0', dtype=torch.float64)
tensor([-3.1098, -4.8513, -4.8312, -6.0970, -5.6404], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1704, device='cuda:0', dtype=torch.float64)
tensor([-3.1310, -4.8568, -4.8360, -6.0859, -5.6523], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1565, device='cuda:0', dtype=torch.float64)
tensor([-3.1596, -4.8762, -4.8396, -6.0666, -5.6612], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2302, device='cuda:0', dtype=torch.float64)
tensor([-3.1941, -4.9025, -4.8327, -6.0409, -5.6666], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9923, device='cuda:0', dtype=torch.float64)
tensor([-3.2207, -4.9219, -4.8395, -6.0133, -5.6680], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2773, device='cuda:0', dtype=torch.float64)
tensor([-3.2592, -4.9435, -4.8412, -5.9679, -5.6695], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0553, device='cuda:0', dtype=torch.float64)
tensor([-3.2715, -4.9357, -4.8502, -5.9723, -5.6655], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2387, device='cuda:0', dtype=torch.float64)
tensor([-3.2801, -4.9123, -4.8730, -5.9872, -5.6645], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8130, device='cuda:0', dtype=torch.float64)
tensor([-3.2970, -4.9005, -4.8833, -5.9913, -5.6631], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1373, device='cuda:0', dtype=torch.float64)
tensor([-3.3178, -4.8925, -4.8894, -5.9880, -5.6515], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0317, device='cuda:0', dtype=torch.float64)
tensor([-3.3353, -4.8828, -4.9160, -6.0145, -5.6372], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0259, device='cuda:0', dtype=torch.float64)
tensor([-3.3622, -4.8867, -4.9294, -6.0433, -5.6173], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1756, device='cuda:0', dtype=torch.float64)
tensor([-3.3880, -4.9014, -4.9302, -6.0650, -5.5995], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1973, device='cuda:0', dtype=torch.float64)
tensor([-3.4251, -4.9297, -4.9105, -6.0606, -5.6028], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1384, device='cuda:0', dtype=torch.float64)
tensor([-3.4420, -4.9397, -4.8806, -6.0686, -5.5924], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4159, device='cuda:0', dtype=torch.float64)
tensor([-3.4514, -4.9594, -4.8734, -6.0786, -5.5871], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9568, device='cuda:0', dtype=torch.float64)
tensor([-3.4546, -4.9710, -4.8496, -6.0708, -5.5808], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8797, device='cuda:0', dtype=torch.float64)
tensor([-3.4455, -4.9596, -4.8347, -6.0746, -5.5788], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0976, device='cuda:0', dtype=torch.float64)
tensor([-3.4467, -4.9497, -4.8261, -6.0726, -5.5873], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8531, device='cuda:0', dtype=torch.float64)
tensor([-3.4391, -4.9385, -4.8266, -6.0629, -5.5935], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0579, device='cuda:0', dtype=torch.float64)
tensor([-3.4192, -4.9283, -4.8320, -6.0476, -5.5969], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0006, device='cuda:0', dtype=torch.float64)
tensor([-3.3995, -4.9278, -4.8340, -6.0247, -5.5905], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1652, device='cuda:0', dtype=torch.float64)
tensor([-3.3899, -4.9321, -4.8364, -5.9897, -5.5894], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1062, device='cuda:0', dtype=torch.float64)
tensor([-3.3823, -4.9310, -4.8453, -5.9664, -5.5967], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2085, device='cuda:0', dtype=torch.float64)
tensor([-3.3684, -4.9271, -4.8586, -5.9659, -5.5984], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9569, device='cuda:0', dtype=torch.float64)
tensor([-3.3563, -4.9283, -4.8730, -5.9857, -5.5995], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0751, device='cuda:0', dtype=torch.float64)
tensor([-3.3497, -4.9413, -4.8823, -6.0055, -5.6097], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2279, device='cuda:0', dtype=torch.float64)
tensor([-3.3446, -4.9679, -4.8935, -6.0211, -5.6141], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9825, device='cuda:0', dtype=torch.float64)
tensor([-3.3498, -4.9931, -4.8928, -6.0316, -5.6244], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0287, device='cuda:0', dtype=torch.float64)
tensor([-3.3612, -5.0158, -4.8895, -6.0354, -5.6362], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1242, device='cuda:0', dtype=torch.float64)
tensor([-3.3871, -5.0437, -4.8731, -6.0142, -5.6498], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0582, device='cuda:0', dtype=torch.float64)
tensor([-3.4212, -5.0688, -4.8634, -5.9841, -5.6624], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0843, device='cuda:0', dtype=torch.float64)
tensor([-3.4524, -5.1033, -4.8476, -5.9414, -5.6784], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9472, device='cuda:0', dtype=torch.float64)
tensor([-3.4947, -5.1465, -4.8385, -5.8939, -5.7095], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9097, device='cuda:0', dtype=torch.float64)
tensor([-3.5353, -5.1971, -4.8313, -5.8525, -5.7391], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9236, device='cuda:0', dtype=torch.float64)
tensor([-3.5589, -5.2430, -4.8292, -5.8323, -5.7655], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0886, device='cuda:0', dtype=torch.float64)
tensor([-3.5657, -5.2671, -4.8183, -5.8306, -5.7953], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2172, device='cuda:0', dtype=torch.float64)
tensor([-3.5645, -5.2802, -4.8076, -5.8462, -5.8270], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9439, device='cuda:0', dtype=torch.float64)
tensor([-3.5498, -5.2641, -4.8000, -5.8725, -5.8453], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0460, device='cuda:0', dtype=torch.float64)
tensor([-3.5057, -5.2156, -4.7932, -5.9101, -5.8454], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4264, device='cuda:0', dtype=torch.float64)
tensor([-3.4570, -5.1553, -4.8021, -5.9480, -5.8289], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1045, device='cuda:0', dtype=torch.float64)
tensor([-3.3992, -5.0875, -4.8251, -6.0235, -5.8123], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1435, device='cuda:0', dtype=torch.float64)
tensor([-3.3504, -5.0290, -4.8578, -6.1220, -5.8056], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0856, device='cuda:0', dtype=torch.float64)
tensor([-3.3324, -5.0093, -4.8824, -6.1849, -5.8044], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0977, device='cuda:0', dtype=torch.float64)
tensor([-3.3248, -4.9985, -4.9122, -6.2221, -5.8025], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1149, device='cuda:0', dtype=torch.float64)
tensor([-3.3241, -4.9919, -4.9493, -6.2513, -5.7962], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0626, device='cuda:0', dtype=torch.float64)
tensor([-3.3449, -5.0130, -4.9734, -6.2504, -5.7981], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1718, device='cuda:0', dtype=torch.float64)
tensor([-3.3759, -5.0428, -4.9781, -6.2469, -5.7876], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1487, device='cuda:0', dtype=torch.float64)
tensor([-3.4187, -5.0869, -4.9669, -6.2067, -5.7800], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8827, device='cuda:0', dtype=torch.float64)
tensor([-3.4374, -5.1072, -4.9515, -6.1768, -5.7795], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0893, device='cuda:0', dtype=torch.float64)
tensor([-3.4560, -5.1403, -4.9479, -6.1511, -5.7894], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3974, device='cuda:0', dtype=torch.float64)
tensor([-3.4712, -5.1620, -4.9281, -6.1331, -5.8070], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0108, device='cuda:0', dtype=torch.float64)
tensor([-3.4979, -5.1840, -4.8923, -6.1253, -5.8267], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0966, device='cuda:0', dtype=torch.float64)
tensor([-3.5275, -5.2148, -4.8472, -6.1061, -5.8413], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0722, device='cuda:0', dtype=torch.float64)
tensor([-3.5590, -5.2303, -4.7964, -6.0854, -5.8640], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1252, device='cuda:0', dtype=torch.float64)
tensor([-3.5920, -5.2422, -4.7471, -6.0604, -5.9029], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0465, device='cuda:0', dtype=torch.float64)
tensor([-3.6312, -5.2650, -4.7038, -6.0451, -5.9384], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0194, device='cuda:0', dtype=torch.float64)
tensor([-3.6707, -5.2898, -4.6661, -6.0525, -5.9685], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0395, device='cuda:0', dtype=torch.float64)
tensor([-3.6911, -5.3075, -4.6434, -6.0840, -5.9954], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9377, device='cuda:0', dtype=torch.float64)
tensor([-3.7013, -5.2990, -4.6281, -6.1155, -6.0051], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2455, device='cuda:0', dtype=torch.float64)
tensor([-3.7027, -5.2916, -4.6177, -6.1318, -6.0073], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0103, device='cuda:0', dtype=torch.float64)
tensor([-3.6895, -5.2464, -4.6161, -6.1688, -5.9900], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1456, device='cuda:0', dtype=torch.float64)
tensor([-3.6752, -5.2027, -4.6119, -6.2130, -5.9605], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9014, device='cuda:0', dtype=torch.float64)
tensor([-3.6538, -5.1587, -4.6159, -6.2778, -5.9321], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1905, device='cuda:0', dtype=torch.float64)
tensor([-3.6263, -5.1002, -4.6331, -6.3551, -5.9037], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9839, device='cuda:0', dtype=torch.float64)
tensor([-3.5989, -5.0569, -4.6551, -6.4266, -5.8808], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9662, device='cuda:0', dtype=torch.float64)
tensor([-3.5656, -5.0319, -4.6891, -6.4881, -5.8602], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2047, device='cuda:0', dtype=torch.float64)
tensor([-3.5319, -5.0004, -4.7376, -6.5529, -5.8250], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2770, device='cuda:0', dtype=torch.float64)
tensor([-3.5028, -4.9729, -4.7836, -6.6102, -5.7886], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3354, device='cuda:0', dtype=torch.float64)
tensor([-3.4817, -4.9673, -4.8187, -6.6319, -5.7523], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2692, device='cuda:0', dtype=torch.float64)
tensor([-3.4787, -4.9773, -4.8526, -6.6239, -5.7137], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2024, device='cuda:0', dtype=torch.float64)
tensor([-3.4876, -4.9936, -4.8727, -6.5635, -5.6991], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9031, device='cuda:0', dtype=torch.float64)
tensor([-3.4985, -5.0119, -4.8926, -6.5115, -5.6910], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9593, device='cuda:0', dtype=torch.float64)
tensor([-3.5135, -5.0304, -4.9137, -6.4513, -5.6910], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9804, device='cuda:0', dtype=torch.float64)
tensor([-3.5182, -5.0429, -4.9444, -6.3943, -5.6959], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0412, device='cuda:0', dtype=torch.float64)
tensor([-3.5292, -5.0634, -4.9704, -6.3297, -5.7011], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9454, device='cuda:0', dtype=torch.float64)
tensor([-3.5533, -5.1034, -4.9895, -6.2470, -5.7086], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1011, device='cuda:0', dtype=torch.float64)
tensor([-3.5746, -5.1253, -5.0220, -6.1831, -5.7081], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1118, device='cuda:0', dtype=torch.float64)
tensor([-3.6065, -5.1589, -5.0436, -6.1130, -5.7092], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9137, device='cuda:0', dtype=torch.float64)
tensor([-3.6333, -5.1931, -5.0464, -6.0463, -5.7100], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1931, device='cuda:0', dtype=torch.float64)
tensor([-3.6492, -5.2193, -5.0458, -6.0067, -5.7095], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1320, device='cuda:0', dtype=torch.float64)
tensor([-3.6663, -5.2399, -5.0386, -5.9782, -5.7082], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0443, device='cuda:0', dtype=torch.float64)
tensor([-3.6648, -5.2483, -5.0433, -5.9856, -5.7081], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1665, device='cuda:0', dtype=torch.float64)
tensor([-3.6563, -5.2546, -5.0574, -6.0021, -5.7094], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0832, device='cuda:0', dtype=torch.float64)
tensor([-3.6650, -5.2728, -5.0636, -6.0030, -5.7205], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0199, device='cuda:0', dtype=torch.float64)
tensor([-3.6755, -5.2900, -5.0825, -6.0120, -5.7333], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0029, device='cuda:0', dtype=torch.float64)
tensor([-3.6778, -5.3019, -5.1040, -6.0446, -5.7407], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8635, device='cuda:0', dtype=torch.float64)
tensor([-3.6865, -5.3107, -5.1080, -6.0720, -5.7564], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0212, device='cuda:0', dtype=torch.float64)
tensor([-3.6979, -5.3427, -5.1117, -6.0778, -5.7777], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3800, device='cuda:0', dtype=torch.float64)
tensor([-3.7203, -5.3853, -5.1078, -6.0627, -5.7997], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9823, device='cuda:0', dtype=torch.float64)
tensor([-3.7353, -5.4327, -5.1029, -6.0523, -5.8279], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9909, device='cuda:0', dtype=torch.float64)
tensor([-3.7436, -5.4790, -5.0989, -6.0492, -5.8563], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7842, device='cuda:0', dtype=torch.float64)
tensor([-3.7462, -5.5056, -5.1050, -6.0411, -5.8835], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0754, device='cuda:0', dtype=torch.float64)
tensor([-3.7444, -5.5239, -5.1048, -6.0391, -5.9006], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0426, device='cuda:0', dtype=torch.float64)
tensor([-3.7428, -5.5301, -5.1053, -6.0315, -5.8985], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2166, device='cuda:0', dtype=torch.float64)
tensor([-3.7272, -5.4941, -5.1094, -6.0490, -5.8787], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0199, device='cuda:0', dtype=torch.float64)
tensor([-3.7096, -5.4439, -5.1243, -6.0789, -5.8597], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0728, device='cuda:0', dtype=torch.float64)
tensor([-3.6965, -5.4081, -5.1348, -6.1104, -5.8395], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9539, device='cuda:0', dtype=torch.float64)
tensor([-3.6726, -5.3623, -5.1523, -6.1511, -5.8157], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2271, device='cuda:0', dtype=torch.float64)
tensor([-3.6437, -5.3170, -5.1647, -6.2178, -5.7847], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3551, device='cuda:0', dtype=torch.float64)
tensor([-3.6101, -5.2596, -5.1834, -6.3267, -5.7589], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9003, device='cuda:0', dtype=torch.float64)
tensor([-3.5861, -5.2188, -5.2056, -6.4338, -5.7445], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0201, device='cuda:0', dtype=torch.float64)
tensor([-3.5720, -5.1999, -5.2260, -6.5201, -5.7411], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0837, device='cuda:0', dtype=torch.float64)
tensor([-3.5631, -5.1899, -5.2432, -6.5934, -5.7465], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0670, device='cuda:0', dtype=torch.float64)
tensor([-3.5733, -5.2027, -5.2564, -6.6352, -5.7529], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0370, device='cuda:0', dtype=torch.float64)
tensor([-3.5981, -5.2208, -5.2498, -6.6388, -5.7662], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0424, device='cuda:0', dtype=torch.float64)
tensor([-3.6358, -5.2449, -5.2297, -6.5985, -5.7867], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0761, device='cuda:0', dtype=torch.float64)
tensor([-3.6738, -5.2673, -5.2081, -6.5237, -5.8079], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0171, device='cuda:0', dtype=torch.float64)
tensor([-3.7254, -5.2922, -5.1824, -6.4432, -5.8381], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2204, device='cuda:0', dtype=torch.float64)
tensor([-3.7797, -5.3245, -5.1588, -6.3766, -5.8689], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9609, device='cuda:0', dtype=torch.float64)
tensor([-3.8325, -5.3499, -5.1539, -6.3274, -5.9073], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8877, device='cuda:0', dtype=torch.float64)
tensor([-3.8860, -5.3868, -5.1532, -6.2774, -5.9540], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0775, device='cuda:0', dtype=torch.float64)
tensor([-3.9363, -5.4356, -5.1601, -6.2332, -5.9880], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3389, device='cuda:0', dtype=torch.float64)
tensor([-3.9775, -5.4883, -5.1730, -6.2056, -6.0192], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0079, device='cuda:0', dtype=torch.float64)
tensor([-4.0079, -5.5280, -5.1954, -6.1866, -6.0456], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0185, device='cuda:0', dtype=torch.float64)
tensor([-4.0397, -5.5680, -5.2239, -6.1597, -6.0710], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2356, device='cuda:0', dtype=torch.float64)
tensor([-4.0709, -5.6008, -5.2528, -6.1314, -6.1073], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1601, device='cuda:0', dtype=torch.float64)
tensor([-4.1061, -5.6457, -5.2800, -6.1009, -6.1475], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8746, device='cuda:0', dtype=torch.float64)
tensor([-4.1339, -5.6865, -5.3090, -6.0711, -6.1833], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1584, device='cuda:0', dtype=torch.float64)
tensor([-4.1496, -5.7240, -5.3528, -6.0627, -6.2062], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0598, device='cuda:0', dtype=torch.float64)
tensor([-4.1643, -5.7453, -5.3869, -6.0603, -6.2111], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9221, device='cuda:0', dtype=torch.float64)
tensor([-4.1567, -5.7490, -5.4315, -6.0854, -6.2055], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0650, device='cuda:0', dtype=torch.float64)
tensor([-4.1446, -5.7440, -5.4642, -6.1265, -6.1848], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2654, device='cuda:0', dtype=torch.float64)
tensor([-4.1217, -5.7331, -5.4997, -6.1917, -6.1668], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8770, device='cuda:0', dtype=torch.float64)
tensor([-4.0937, -5.7193, -5.5299, -6.2485, -6.1536], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9921, device='cuda:0', dtype=torch.float64)
tensor([-4.0584, -5.7031, -5.5533, -6.3002, -6.1391], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9774, device='cuda:0', dtype=torch.float64)
tensor([-4.0327, -5.6963, -5.5553, -6.3283, -6.1268], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8357, device='cuda:0', dtype=torch.float64)
tensor([-4.0108, -5.7000, -5.5612, -6.3506, -6.1211], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0587, device='cuda:0', dtype=torch.float64)
tensor([-3.9931, -5.7154, -5.5662, -6.3636, -6.1190], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9857, device='cuda:0', dtype=torch.float64)
tensor([-3.9841, -5.7266, -5.5497, -6.3652, -6.1155], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0576, device='cuda:0', dtype=torch.float64)
tensor([-3.9866, -5.7366, -5.5327, -6.3891, -6.0975], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0850, device='cuda:0', dtype=torch.float64)
tensor([-3.9844, -5.7385, -5.5265, -6.4519, -6.0775], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1905, device='cuda:0', dtype=torch.float64)
tensor([-3.9865, -5.7456, -5.5255, -6.5260, -6.0686], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0783, device='cuda:0', dtype=torch.float64)
tensor([-3.9901, -5.7603, -5.5315, -6.5913, -6.0548], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9319, device='cuda:0', dtype=torch.float64)
tensor([-3.9934, -5.7838, -5.5342, -6.6346, -6.0427], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9519, device='cuda:0', dtype=torch.float64)
tensor([-4.0033, -5.8089, -5.5349, -6.6535, -6.0363], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9310, device='cuda:0', dtype=torch.float64)
tensor([-4.0299, -5.8489, -5.5188, -6.6439, -6.0336], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0015, device='cuda:0', dtype=torch.float64)
tensor([-4.0700, -5.8990, -5.5084, -6.6170, -6.0394], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2384, device='cuda:0', dtype=torch.float64)
tensor([-4.1005, -5.9342, -5.5089, -6.6088, -6.0431], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0677, device='cuda:0', dtype=torch.float64)
tensor([-4.1404, -5.9660, -5.5110, -6.6063, -6.0484], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0772, device='cuda:0', dtype=torch.float64)
tensor([-4.2023, -5.9932, -5.5035, -6.6122, -6.0543], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0237, device='cuda:0', dtype=torch.float64)
tensor([-4.2662, -6.0175, -5.5044, -6.6181, -6.0657], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1176, device='cuda:0', dtype=torch.float64)
tensor([-4.3236, -6.0266, -5.5154, -6.6384, -6.0803], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9809, device='cuda:0', dtype=torch.float64)
tensor([-4.3687, -6.0195, -5.5299, -6.6924, -6.0921], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9318, device='cuda:0', dtype=torch.float64)
tensor([-4.4106, -6.0106, -5.5388, -6.7484, -6.1002], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8621, device='cuda:0', dtype=torch.float64)
tensor([-4.4564, -6.0043, -5.5560, -6.8054, -6.1175], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8834, device='cuda:0', dtype=torch.float64)
tensor([-4.4727, -5.9757, -5.5849, -6.8946, -6.1342], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0177, device='cuda:0', dtype=torch.float64)
tensor([-4.4679, -5.9479, -5.6107, -6.9720, -6.1394], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0876, device='cuda:0', dtype=torch.float64)
tensor([-4.4784, -5.9207, -5.6169, -7.0192, -6.1449], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1814, device='cuda:0', dtype=torch.float64)
tensor([-4.5038, -5.9048, -5.6081, -7.0726, -6.1482], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9699, device='cuda:0', dtype=torch.float64)
tensor([-4.5236, -5.9006, -5.6109, -7.1281, -6.1480], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0600, device='cuda:0', dtype=torch.float64)
tensor([-4.5420, -5.8911, -5.6127, -7.1935, -6.1556], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1517, device='cuda:0', dtype=torch.float64)
tensor([-4.5695, -5.8920, -5.5935, -7.2126, -6.1662], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7541, device='cuda:0', dtype=torch.float64)
tensor([-4.5954, -5.8995, -5.5818, -7.2084, -6.1921], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8609, device='cuda:0', dtype=torch.float64)
tensor([-4.6092, -5.8861, -5.5748, -7.2138, -6.2283], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0884, device='cuda:0', dtype=torch.float64)
tensor([-4.6035, -5.8698, -5.5775, -7.2263, -6.2593], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0914, device='cuda:0', dtype=torch.float64)
tensor([-4.6014, -5.8536, -5.5858, -7.2169, -6.2920], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1411, device='cuda:0', dtype=torch.float64)
tensor([-4.6137, -5.8574, -5.6057, -7.1993, -6.3199], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0954, device='cuda:0', dtype=torch.float64)
tensor([-4.6314, -5.8600, -5.6350, -7.2026, -6.3412], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9755, device='cuda:0', dtype=torch.float64)
tensor([-4.6513, -5.8614, -5.6575, -7.2194, -6.3465], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9597, device='cuda:0', dtype=torch.float64)
tensor([-4.6674, -5.8665, -5.6873, -7.2083, -6.3468], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1121, device='cuda:0', dtype=torch.float64)
tensor([-4.6788, -5.8805, -5.7247, -7.1988, -6.3441], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9337, device='cuda:0', dtype=torch.float64)
tensor([-4.6966, -5.8925, -5.7490, -7.2039, -6.3274], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0080, device='cuda:0', dtype=torch.float64)
tensor([-4.7044, -5.9010, -5.7828, -7.2272, -6.3153], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8224, device='cuda:0', dtype=torch.float64)
tensor([-4.7138, -5.9041, -5.8135, -7.2592, -6.3061], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1063, device='cuda:0', dtype=torch.float64)
tensor([-4.7286, -5.9177, -5.8340, -7.2681, -6.2987], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0886, device='cuda:0', dtype=torch.float64)
tensor([-4.7377, -5.9235, -5.8588, -7.3081, -6.2932], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7737, device='cuda:0', dtype=torch.float64)
tensor([-4.7467, -5.9237, -5.8753, -7.3204, -6.2930], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0966, device='cuda:0', dtype=torch.float64)
tensor([-4.7605, -5.9137, -5.8733, -7.3265, -6.2924], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0753, device='cuda:0', dtype=torch.float64)
tensor([-4.7630, -5.9079, -5.8860, -7.3528, -6.2829], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0008, device='cuda:0', dtype=torch.float64)
tensor([-4.7796, -5.9160, -5.8819, -7.3488, -6.2857], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2742, device='cuda:0', dtype=torch.float64)
tensor([-4.7851, -5.9249, -5.9221, -7.4381, -6.2977], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9932, device='cuda:0', dtype=torch.float64)
tensor([-4.8111, -5.9553, -5.9393, -7.4898, -6.3111], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0431, device='cuda:0', dtype=torch.float64)
tensor([-4.8459, -5.9844, -5.9604, -7.5224, -6.3274], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9087, device='cuda:0', dtype=torch.float64)
tensor([-4.8767, -6.0322, -5.9804, -7.5310, -6.3422], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9860, device='cuda:0', dtype=torch.float64)
tensor([-4.8961, -6.0724, -6.0077, -7.5639, -6.3606], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8670, device='cuda:0', dtype=torch.float64)
tensor([-4.9137, -6.1089, -6.0257, -7.5702, -6.3813], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9101, device='cuda:0', dtype=torch.float64)
tensor([-4.9384, -6.1559, -6.0347, -7.5722, -6.4031], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9845, device='cuda:0', dtype=torch.float64)
tensor([-4.9632, -6.2068, -6.0306, -7.5873, -6.4326], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9895, device='cuda:0', dtype=torch.float64)
tensor([-4.9875, -6.2506, -6.0145, -7.6165, -6.4583], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9165, device='cuda:0', dtype=torch.float64)
tensor([-4.9851, -6.2811, -6.0090, -7.6803, -6.4966], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0520, device='cuda:0', dtype=torch.float64)
tensor([-4.9885, -6.3217, -5.9938, -7.7134, -6.5368], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9808, device='cuda:0', dtype=torch.float64)
tensor([-4.9838, -6.3451, -5.9976, -7.7926, -6.5679], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0357, device='cuda:0', dtype=torch.float64)
tensor([-4.9898, -6.3711, -6.0017, -7.8631, -6.5961], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9797, device='cuda:0', dtype=torch.float64)
tensor([-4.9851, -6.3900, -6.0219, -7.9573, -6.6225], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0916, device='cuda:0', dtype=torch.float64)
tensor([-4.9775, -6.3959, -6.0510, -8.0939, -6.6467], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7973, device='cuda:0', dtype=torch.float64)
tensor([-4.9700, -6.3952, -6.0819, -8.2280, -6.6752], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9053, device='cuda:0', dtype=torch.float64)
tensor([-4.9830, -6.4062, -6.1138, -8.3791, -6.7184], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0585, device='cuda:0', dtype=torch.float64)
tensor([-5.0057, -6.4223, -6.1413, -8.5211, -6.7641], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0461, device='cuda:0', dtype=torch.float64)
tensor([-5.0626, -6.4672, -6.1550, -8.6347, -6.8157], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0724, device='cuda:0', dtype=torch.float64)
tensor([-5.1192, -6.5103, -6.1692, -8.7155, -6.8544], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0362, device='cuda:0', dtype=torch.float64)
tensor([-5.1739, -6.5427, -6.1995, -8.8453, -6.8931], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1141, device='cuda:0', dtype=torch.float64)
tensor([-5.2397, -6.5634, -6.2433, -9.0215, -6.9227], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8497, device='cuda:0', dtype=torch.float64)
tensor([-5.3064, -6.5989, -6.2746, -9.1304, -6.9539], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9640, device='cuda:0', dtype=torch.float64)
tensor([-5.3902, -6.6448, -6.3111, -9.2307, -6.9847], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9794, device='cuda:0', dtype=torch.float64)
tensor([-5.4781, -6.7075, -6.3319, -9.2643, -7.0090], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0087, device='cuda:0', dtype=torch.float64)
tensor([-5.5605, -6.7596, -6.3691, -9.3067, -7.0319], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9106, device='cuda:0', dtype=torch.float64)
tensor([-5.6595, -6.8449, -6.3799, -9.2876, -7.0516], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8611, device='cuda:0', dtype=torch.float64)
tensor([-5.7596, -6.9273, -6.4245, -9.3563, -7.0746], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9785, device='cuda:0', dtype=torch.float64)
tensor([-5.8720, -6.9967, -6.4630, -9.4396, -7.1093], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9221, device='cuda:0', dtype=torch.float64)
tensor([-5.9709, -7.0720, -6.5034, -9.5418, -7.1442], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9580, device='cuda:0', dtype=torch.float64)
tensor([-6.0736, -7.1643, -6.5519, -9.6507, -7.1882], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1133, device='cuda:0', dtype=torch.float64)
tensor([-6.2034, -7.2685, -6.6172, -9.7673, -7.2479], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0174, device='cuda:0', dtype=torch.float64)
tensor([-6.3393, -7.3665, -6.6879, -9.9021, -7.3019], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8467, device='cuda:0', dtype=torch.float64)
tensor([-6.4714, -7.4943, -6.7351, -9.9813, -7.3613], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0714, device='cuda:0', dtype=torch.float64)
tensor([ -6.5958,  -7.6297,  -6.7769, -10.0648,  -7.4071], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0250, device='cuda:0', dtype=torch.float64)
tensor([ -6.7180,  -7.7853,  -6.8233, -10.1723,  -7.4448], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8550, device='cuda:0', dtype=torch.float64)
tensor([ -6.8544,  -7.9244,  -6.8984, -10.3383,  -7.4795], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9683, device='cuda:0', dtype=torch.float64)
tensor([ -6.9913,  -8.0575,  -6.9897, -10.5501,  -7.5096], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9718, device='cuda:0', dtype=torch.float64)
tensor([ -7.1270,  -8.1663,  -7.0768, -10.7575,  -7.5265], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9622, device='cuda:0', dtype=torch.float64)
tensor([ -7.2683,  -8.2841,  -7.1650, -10.9308,  -7.5428], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9114, device='cuda:0', dtype=torch.float64)
tensor([ -7.3992,  -8.4120,  -7.2922, -11.1631,  -7.5586], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9615, device='cuda:0', dtype=torch.float64)
tensor([ -7.5265,  -8.5581,  -7.4224, -11.3871,  -7.5779], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8292, device='cuda:0', dtype=torch.float64)
tensor([ -7.6501,  -8.7062,  -7.5209, -11.5372,  -7.6145], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8231, device='cuda:0', dtype=torch.float64)
tensor([ -7.7606,  -8.8187,  -7.6182, -11.6667,  -7.6574], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0132, device='cuda:0', dtype=torch.float64)
tensor([ -7.8811,  -8.9029,  -7.7249, -11.8238,  -7.7037], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8937, device='cuda:0', dtype=torch.float64)
tensor([ -7.9885,  -8.9837,  -7.8376, -11.9991,  -7.7438], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8839, device='cuda:0', dtype=torch.float64)
tensor([ -8.0847,  -9.0772,  -7.9633, -12.1754,  -7.7789], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8774, device='cuda:0', dtype=torch.float64)
tensor([ -8.1779,  -9.1557,  -8.0680, -12.2917,  -7.8216], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9879, device='cuda:0', dtype=torch.float64)
tensor([ -8.2808,  -9.2362,  -8.1694, -12.4253,  -7.8836], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0130, device='cuda:0', dtype=torch.float64)
tensor([ -8.3719,  -9.2578,  -8.2637, -12.5746,  -7.9464], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0363, device='cuda:0', dtype=torch.float64)
tensor([ -8.4710,  -9.2855,  -8.3744, -12.7916,  -8.0219], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9783, device='cuda:0', dtype=torch.float64)
tensor([ -8.5530,  -9.2695,  -8.5117, -13.0522,  -8.0818], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9030, device='cuda:0', dtype=torch.float64)
tensor([ -8.6519,  -9.2535,  -8.6344, -13.3164,  -8.1492], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9152, device='cuda:0', dtype=torch.float64)
tensor([ -8.7405,  -9.2472,  -8.7725, -13.5818,  -8.2366], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8789, device='cuda:0', dtype=torch.float64)
tensor([ -8.8304,  -9.2812,  -8.8849, -13.7703,  -8.3196], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0117, device='cuda:0', dtype=torch.float64)
tensor([ -8.9437,  -9.3103,  -8.9802, -13.9500,  -8.4148], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0113, device='cuda:0', dtype=torch.float64)
tensor([ -9.0610,  -9.3703,  -9.0582, -14.0778,  -8.5014], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0055, device='cuda:0', dtype=torch.float64)
tensor([ -9.1614,  -9.4162,  -9.1510, -14.2801,  -8.5847], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0691, device='cuda:0', dtype=torch.float64)
tensor([ -9.2743,  -9.4329,  -9.2747, -14.5435,  -8.6679], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9287, device='cuda:0', dtype=torch.float64)
tensor([ -9.3456,  -9.4799,  -9.4013, -14.7727,  -8.7561], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0856, device='cuda:0', dtype=torch.float64)
tensor([ -9.4677,  -9.4706,  -9.5448, -15.0501,  -8.8766], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0983, device='cuda:0', dtype=torch.float64)
tensor([ -9.5898,  -9.5171,  -9.7092, -15.3379,  -9.0061], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0258, device='cuda:0', dtype=torch.float64)
tensor([ -9.6900,  -9.5804,  -9.8781, -15.6378,  -9.1295], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2059, device='cuda:0', dtype=torch.float64)
tensor([ -9.7699,  -9.6005, -10.0731, -16.0205,  -9.2468], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8119, device='cuda:0', dtype=torch.float64)
tensor([ -9.8839,  -9.6336, -10.2883, -16.4312,  -9.3702], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8860, device='cuda:0', dtype=torch.float64)
tensor([ -9.9848,  -9.7018, -10.5140, -16.8640,  -9.5140], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0270, device='cuda:0', dtype=torch.float64)
tensor([-10.0546,  -9.7884, -10.6719, -17.1618,  -9.6380], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9337, device='cuda:0', dtype=torch.float64)
tensor([-10.1250,  -9.8438, -10.8004, -17.4029,  -9.7333], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8456, device='cuda:0', dtype=torch.float64)
tensor([-10.1704,  -9.9135, -10.9044, -17.5799,  -9.8211], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9763, device='cuda:0', dtype=torch.float64)
tensor([-10.1712,  -9.9981, -10.9454, -17.6645,  -9.9131], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8686, device='cuda:0', dtype=torch.float64)
tensor([-10.2253, -10.0972, -10.9757, -17.7092, -10.0042], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0395, device='cuda:0', dtype=torch.float64)
tensor([-10.2593, -10.1804, -11.0333, -17.8576, -10.0936], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8338, device='cuda:0', dtype=torch.float64)
tensor([-10.2757, -10.3000, -11.0219, -17.8055, -10.1812], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7973, device='cuda:0', dtype=torch.float64)
tensor([-10.2635, -10.4238, -11.0123, -17.7063, -10.2644], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0765, device='cuda:0', dtype=torch.float64)
tensor([-10.2782, -10.5572, -11.0025, -17.6109, -10.3610], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9941, device='cuda:0', dtype=torch.float64)
tensor([-10.2324, -10.6898, -11.0327, -17.6344, -10.4195], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0118, device='cuda:0', dtype=torch.float64)
tensor([-10.2088, -10.7816, -11.0661, -17.7424, -10.4816], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9847, device='cuda:0', dtype=torch.float64)
tensor([-10.1754, -10.8646, -11.1216, -17.8503, -10.5278], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9877, device='cuda:0', dtype=torch.float64)
tensor([-10.1260, -10.9077, -11.1957, -18.0333, -10.5807], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8405, device='cuda:0', dtype=torch.float64)
tensor([-10.1013, -10.9956, -11.2286, -18.0904, -10.6264], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9092, device='cuda:0', dtype=torch.float64)
tensor([-10.0627, -11.0903, -11.1917, -18.0103, -10.6486], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8414, device='cuda:0', dtype=torch.float64)
tensor([-10.0399, -11.1679, -11.2309, -18.1224, -10.7131], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0666, device='cuda:0', dtype=torch.float64)
tensor([-10.0251, -11.2023, -11.2941, -18.2919, -10.7743], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0495, device='cuda:0', dtype=torch.float64)
tensor([-10.0495, -11.2591, -11.3788, -18.5187, -10.8582], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9145, device='cuda:0', dtype=torch.float64)
tensor([-10.1211, -11.3485, -11.4716, -18.6922, -10.9481], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7613, device='cuda:0', dtype=torch.float64)
tensor([-10.1758, -11.4085, -11.5348, -18.8679, -11.0092], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9567, device='cuda:0', dtype=torch.float64)
tensor([-10.2059, -11.4438, -11.5842, -19.0678, -11.0669], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0066, device='cuda:0', dtype=torch.float64)
tensor([-10.2271, -11.4937, -11.6024, -19.1310, -11.1288], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0730, device='cuda:0', dtype=torch.float64)
tensor([-10.2439, -11.4672, -11.6420, -19.3137, -11.1695], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9200, device='cuda:0', dtype=torch.float64)
tensor([-10.2561, -11.4363, -11.6934, -19.5248, -11.2082], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9532, device='cuda:0', dtype=torch.float64)
tensor([-10.2524, -11.4307, -11.7249, -19.6524, -11.2355], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9105, device='cuda:0', dtype=torch.float64)
tensor([-10.2475, -11.4527, -11.7296, -19.6939, -11.2690], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8816, device='cuda:0', dtype=torch.float64)
tensor([-10.2398, -11.4030, -11.7642, -19.8004, -11.2786], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8182, device='cuda:0', dtype=torch.float64)
tensor([-10.2228, -11.2976, -11.8128, -19.9789, -11.3028], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9498, device='cuda:0', dtype=torch.float64)
tensor([-10.2108, -11.2382, -11.9010, -20.2871, -11.3533], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8361, device='cuda:0', dtype=torch.float64)
tensor([-10.2003, -11.1652, -12.0024, -20.7126, -11.4429], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9354, device='cuda:0', dtype=torch.float64)
tensor([-10.2082, -11.1202, -12.1279, -21.2270, -11.5704], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9678, device='cuda:0', dtype=torch.float64)
tensor([-10.1693, -11.0876, -12.1735, -21.4858, -11.6374], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8230, device='cuda:0', dtype=torch.float64)
tensor([-10.1513, -11.0486, -12.1858, -21.6414, -11.6826], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8312, device='cuda:0', dtype=torch.float64)
tensor([-10.1462, -10.9796, -12.2351, -21.8409, -11.7389], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9397, device='cuda:0', dtype=torch.float64)
tensor([-10.1028, -10.9184, -12.2253, -21.8496, -11.7526], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8374, device='cuda:0', dtype=torch.float64)
tensor([-10.0909, -10.8715, -12.2198, -21.8600, -11.7619], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7303, device='cuda:0', dtype=torch.float64)
tensor([-10.0940, -10.8092, -12.2137, -21.8463, -11.7565], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9492, device='cuda:0', dtype=torch.float64)
tensor([-10.1390, -10.7399, -12.2335, -21.9521, -11.7791], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9562, device='cuda:0', dtype=torch.float64)
tensor([-10.1467, -10.6542, -12.2456, -21.9773, -11.7806], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7623, device='cuda:0', dtype=torch.float64)
tensor([-10.1682, -10.5697, -12.2995, -22.1177, -11.8231], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9274, device='cuda:0', dtype=torch.float64)
tensor([-10.2123, -10.4865, -12.3847, -22.3271, -11.8561], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7568, device='cuda:0', dtype=torch.float64)
tensor([-10.2453, -10.4310, -12.4877, -22.5538, -11.8736], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0358, device='cuda:0', dtype=torch.float64)
tensor([-10.2714, -10.4115, -12.6363, -22.8523, -11.9048], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7290, device='cuda:0', dtype=torch.float64)
tensor([-10.2641, -10.4060, -12.7630, -23.0803, -11.9354], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8271, device='cuda:0', dtype=torch.float64)
tensor([-10.2465, -10.4120, -12.8968, -23.3022, -11.9379], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8524, device='cuda:0', dtype=torch.float64)
tensor([-10.2180, -10.4269, -12.9699, -23.3606, -11.9092], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7975, device='cuda:0', dtype=torch.float64)
tensor([-10.1901, -10.4374, -13.0115, -23.3045, -11.8481], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9001, device='cuda:0', dtype=torch.float64)
tensor([-10.1726, -10.4394, -12.9900, -23.1220, -11.7473], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8742, device='cuda:0', dtype=torch.float64)
tensor([-10.1425, -10.4780, -12.9728, -22.9076, -11.6565], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8930, device='cuda:0', dtype=torch.float64)
tensor([-10.1240, -10.5452, -12.9647, -22.7347, -11.5406], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7661, device='cuda:0', dtype=torch.float64)
tensor([-10.1281, -10.6424, -12.9699, -22.5970, -11.4405], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9872, device='cuda:0', dtype=torch.float64)
tensor([-10.1372, -10.7425, -13.0194, -22.5773, -11.3493], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0540, device='cuda:0', dtype=torch.float64)
tensor([-10.1514, -10.8155, -13.0731, -22.5609, -11.2702], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7976, device='cuda:0', dtype=torch.float64)
tensor([-10.1697, -10.8922, -13.1188, -22.5374, -11.2040], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0941, device='cuda:0', dtype=torch.float64)
tensor([-10.2233, -10.9397, -13.2026, -22.6749, -11.1858], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9337, device='cuda:0', dtype=torch.float64)
tensor([-10.2424, -11.0024, -13.2453, -22.7124, -11.1725], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0046, device='cuda:0', dtype=torch.float64)
tensor([-10.2624, -11.0762, -13.3072, -22.8313, -11.1667], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8615, device='cuda:0', dtype=torch.float64)
tensor([-10.2910, -11.1462, -13.3499, -22.9449, -11.1639], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9219, device='cuda:0', dtype=torch.float64)
tensor([-10.3286, -11.2225, -13.4219, -23.1094, -11.1706], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9006, device='cuda:0', dtype=torch.float64)
tensor([-10.3826, -11.2894, -13.4390, -23.1600, -11.1901], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0450, device='cuda:0', dtype=torch.float64)
tensor([-10.4847, -11.3391, -13.4800, -23.3349, -11.2432], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0536, device='cuda:0', dtype=torch.float64)
tensor([-10.5863, -11.3587, -13.5555, -23.5757, -11.3167], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9515, device='cuda:0', dtype=torch.float64)
tensor([-10.7109, -11.3213, -13.7442, -24.0401, -11.4494], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9394, device='cuda:0', dtype=torch.float64)
tensor([-10.8523, -11.2931, -13.9505, -24.5349, -11.5677], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0832, device='cuda:0', dtype=torch.float64)
tensor([-10.9801, -11.2682, -14.1904, -25.1711, -11.7200], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0061, device='cuda:0', dtype=torch.float64)
tensor([-11.1326, -11.2963, -14.4107, -25.7352, -11.8558], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8356, device='cuda:0', dtype=torch.float64)
tensor([-11.2907, -11.3668, -14.6234, -26.1536, -11.9792], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0332, device='cuda:0', dtype=torch.float64)
tensor([-11.4283, -11.4091, -14.8360, -26.5418, -12.0671], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9257, device='cuda:0', dtype=torch.float64)
tensor([-11.5991, -11.4515, -15.0184, -26.8098, -12.1337], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9672, device='cuda:0', dtype=torch.float64)
tensor([-11.7305, -11.5237, -15.1550, -26.9790, -12.1856], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9230, device='cuda:0', dtype=torch.float64)
tensor([-11.8788, -11.5843, -15.2767, -27.1182, -12.2418], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0281, device='cuda:0', dtype=torch.float64)
tensor([-12.0037, -11.6365, -15.3772, -27.2311, -12.2910], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8933, device='cuda:0', dtype=torch.float64)
tensor([-12.1197, -11.7070, -15.4654, -27.3151, -12.3705], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9404, device='cuda:0', dtype=torch.float64)
tensor([-12.2348, -11.7820, -15.4928, -27.3469, -12.4239], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7661, device='cuda:0', dtype=torch.float64)
tensor([-12.3484, -11.8576, -15.5072, -27.3304, -12.4879], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8433, device='cuda:0', dtype=torch.float64)
tensor([-12.4537, -11.9496, -15.5408, -27.3750, -12.5569], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0501, device='cuda:0', dtype=torch.float64)
tensor([-12.5356, -12.0843, -15.5410, -27.3303, -12.6594], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9434, device='cuda:0', dtype=torch.float64)
tensor([-12.5704, -12.2074, -15.5298, -27.2611, -12.7342], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9091, device='cuda:0', dtype=torch.float64)
tensor([-12.6056, -12.3252, -15.5436, -27.2231, -12.8255], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0856, device='cuda:0', dtype=torch.float64)
tensor([-12.6314, -12.4265, -15.5607, -27.1710, -12.8831], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8011, device='cuda:0', dtype=torch.float64)
tensor([-12.6525, -12.5600, -15.5545, -27.0721, -12.8918], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1228, device='cuda:0', dtype=torch.float64)
tensor([-12.6331, -12.7647, -15.5530, -26.9342, -12.9031], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9170, device='cuda:0', dtype=torch.float64)
tensor([-12.6605, -13.0346, -15.6205, -27.0240, -12.9291], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9554, device='cuda:0', dtype=torch.float64)
tensor([-12.6617, -13.3314, -15.6953, -27.1080, -12.9457], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0415, device='cuda:0', dtype=torch.float64)
tensor([-12.6432, -13.5924, -15.7335, -27.1556, -12.9592], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7293, device='cuda:0', dtype=torch.float64)
tensor([-12.6153, -13.8057, -15.7736, -27.2281, -13.0122], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8879, device='cuda:0', dtype=torch.float64)
tensor([-12.5670, -14.0511, -15.7727, -27.1880, -13.0441], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7994, device='cuda:0', dtype=torch.float64)
tensor([-12.5383, -14.2968, -15.8388, -27.2992, -13.0906], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9629, device='cuda:0', dtype=torch.float64)
tensor([-12.5475, -14.5175, -15.9455, -27.5145, -13.1598], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7840, device='cuda:0', dtype=torch.float64)
tensor([-12.5122, -14.7177, -15.9979, -27.6411, -13.2165], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8782, device='cuda:0', dtype=torch.float64)
tensor([-12.5146, -14.9168, -16.0802, -27.8568, -13.2979], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8756, device='cuda:0', dtype=torch.float64)
tensor([-12.5367, -15.1290, -16.1476, -27.9939, -13.3884], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8613, device='cuda:0', dtype=torch.float64)
tensor([-12.5716, -15.3469, -16.2765, -28.2982, -13.5309], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8898, device='cuda:0', dtype=torch.float64)
tensor([-12.5952, -15.5547, -16.4231, -28.7206, -13.7101], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9009, device='cuda:0', dtype=torch.float64)
tensor([-12.6323, -15.7726, -16.6061, -29.1832, -13.9171], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0212, device='cuda:0', dtype=torch.float64)
tensor([-12.7017, -15.9849, -16.8491, -29.8318, -14.1517], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8424, device='cuda:0', dtype=torch.float64)
tensor([-12.7819, -16.1818, -17.0579, -30.3870, -14.3664], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9021, device='cuda:0', dtype=torch.float64)
tensor([-12.8532, -16.3060, -17.2239, -30.8753, -14.5617], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9338, device='cuda:0', dtype=torch.float64)
tensor([-12.9593, -16.4451, -17.4149, -31.4857, -14.8020], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0270, device='cuda:0', dtype=torch.float64)
tensor([-13.0610, -16.6554, -17.6312, -32.1700, -15.1028], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7669, device='cuda:0', dtype=torch.float64)
tensor([-13.1863, -16.9253, -17.8249, -32.7278, -15.3634], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7742, device='cuda:0', dtype=torch.float64)
tensor([-13.3154, -17.1399, -17.9321, -33.0381, -15.5361], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9204, device='cuda:0', dtype=torch.float64)
tensor([-13.3729, -17.2363, -17.9546, -33.1388, -15.6601], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1300, device='cuda:0', dtype=torch.float64)
tensor([-13.4477, -17.2933, -17.9380, -33.0445, -15.7283], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7859, device='cuda:0', dtype=torch.float64)
tensor([-13.5197, -17.3776, -17.9491, -32.9699, -15.8252], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8833, device='cuda:0', dtype=torch.float64)
tensor([-13.6206, -17.4495, -18.0060, -32.8970, -15.8688], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0096, device='cuda:0', dtype=torch.float64)
tensor([-13.7288, -17.5379, -18.1621, -33.0282, -15.9583], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0101, device='cuda:0', dtype=torch.float64)
tensor([-13.8081, -17.6438, -18.3321, -33.1436, -16.0341], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8240, device='cuda:0', dtype=torch.float64)
tensor([-13.8938, -17.7571, -18.5387, -33.2461, -16.0706], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9546, device='cuda:0', dtype=torch.float64)
tensor([-13.9838, -17.7945, -18.7244, -33.2371, -16.0888], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9848, device='cuda:0', dtype=torch.float64)
tensor([-14.0471, -17.8111, -18.9164, -33.3254, -16.1240], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8464, device='cuda:0', dtype=torch.float64)
tensor([-14.1465, -17.8329, -19.0855, -33.3846, -16.1972], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8242, device='cuda:0', dtype=torch.float64)
tensor([-14.1823, -17.8252, -19.2074, -33.2915, -16.2656], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0658, device='cuda:0', dtype=torch.float64)
tensor([-14.2302, -17.9119, -19.4018, -33.3139, -16.3897], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9556, device='cuda:0', dtype=torch.float64)
tensor([-14.3168, -18.0128, -19.6270, -33.4614, -16.6208], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9717, device='cuda:0', dtype=torch.float64)
tensor([-14.3505, -17.9544, -19.7614, -33.3788, -16.7504], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9195, device='cuda:0', dtype=torch.float64)
tensor([-14.3348, -17.8998, -19.8421, -33.2668, -16.8622], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9836, device='cuda:0', dtype=torch.float64)
tensor([-14.3515, -17.9087, -19.9393, -33.2046, -16.9336], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8311, device='cuda:0', dtype=torch.float64)
tensor([-14.3632, -17.9954, -20.0247, -33.2859, -17.0706], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8961, device='cuda:0', dtype=torch.float64)
tensor([-14.3939, -18.1430, -20.1355, -33.4496, -17.2363], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8701, device='cuda:0', dtype=torch.float64)
tensor([-14.4149, -18.2224, -20.2352, -33.4307, -17.3457], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0904, device='cuda:0', dtype=torch.float64)
tensor([-14.4508, -18.3075, -20.3314, -33.4207, -17.4258], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8223, device='cuda:0', dtype=torch.float64)
tensor([-14.5175, -18.3819, -20.4364, -33.4339, -17.5406], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9544, device='cuda:0', dtype=torch.float64)
tensor([-14.5149, -18.2821, -20.4279, -33.1430, -17.5295], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9726, device='cuda:0', dtype=torch.float64)
tensor([-14.5057, -18.1934, -20.3950, -32.8803, -17.5486], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1064, device='cuda:0', dtype=torch.float64)
tensor([-14.5288, -18.2297, -20.4422, -32.8685, -17.6566], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9567, device='cuda:0', dtype=torch.float64)
tensor([-14.5329, -18.2938, -20.4648, -32.8624, -17.7531], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7272, device='cuda:0', dtype=torch.float64)
tensor([-14.5409, -18.3968, -20.5156, -32.9319, -17.8651], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9820, device='cuda:0', dtype=torch.float64)
tensor([-14.5539, -18.4590, -20.5197, -32.9222, -17.9564], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0318, device='cuda:0', dtype=torch.float64)
tensor([-14.5937, -18.5524, -20.5526, -32.9896, -18.0913], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9101, device='cuda:0', dtype=torch.float64)
tensor([-14.6493, -18.6980, -20.5934, -33.1025, -18.2296], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9266, device='cuda:0', dtype=torch.float64)
tensor([-14.6481, -18.7962, -20.6056, -33.1609, -18.3295], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8372, device='cuda:0', dtype=torch.float64)
tensor([-14.6471, -18.9014, -20.6464, -33.2301, -18.4341], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9275, device='cuda:0', dtype=torch.float64)
tensor([-14.6115, -18.9296, -20.6888, -33.2283, -18.5025], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9928, device='cuda:0', dtype=torch.float64)
tensor([-14.5875, -19.1572, -20.7779, -33.5037, -18.6567], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9185, device='cuda:0', dtype=torch.float64)
tensor([-14.5842, -19.4272, -20.9405, -33.8907, -18.8748], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7598, device='cuda:0', dtype=torch.float64)
tensor([-14.5629, -19.6759, -21.0986, -34.2549, -19.0819], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7874, device='cuda:0', dtype=torch.float64)
tensor([-14.5159, -19.8016, -21.2442, -34.5072, -19.1943], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8268, device='cuda:0', dtype=torch.float64)
tensor([-14.4938, -20.1093, -21.4754, -35.0047, -19.3955], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9387, device='cuda:0', dtype=torch.float64)
tensor([-14.4682, -20.4899, -21.7089, -35.5274, -19.5722], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8687, device='cuda:0', dtype=torch.float64)
tensor([-14.4447, -20.9758, -21.9467, -36.0913, -19.8093], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8308, device='cuda:0', dtype=torch.float64)
tensor([-14.4010, -21.4275, -22.1564, -36.5372, -20.0058], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9351, device='cuda:0', dtype=torch.float64)
tensor([-14.3552, -22.0219, -22.3480, -37.0650, -20.2566], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7578, device='cuda:0', dtype=torch.float64)
tensor([-14.2897, -22.4420, -22.4805, -37.3854, -20.4157], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9228, device='cuda:0', dtype=torch.float64)
tensor([-14.2506, -22.8916, -22.6380, -37.7816, -20.5790], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7403, device='cuda:0', dtype=torch.float64)
tensor([-14.2047, -23.3665, -22.7170, -38.1451, -20.7542], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2366, device='cuda:0', dtype=torch.float64)
tensor([-14.2038, -23.7567, -22.8151, -38.3920, -20.9269], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8404, device='cuda:0', dtype=torch.float64)
tensor([-14.2246, -24.0952, -22.9163, -38.5597, -21.0733], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8197, device='cuda:0', dtype=torch.float64)
tensor([-14.2203, -24.4040, -22.9727, -38.6659, -21.1362], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8963, device='cuda:0', dtype=torch.float64)
tensor([-14.2343, -24.6480, -23.0180, -38.7461, -21.2089], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9157, device='cuda:0', dtype=torch.float64)
tensor([-14.2342, -24.6821, -23.0625, -38.6331, -21.2110], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8895, device='cuda:0', dtype=torch.float64)
tensor([-14.2200, -24.6599, -23.0819, -38.4889, -21.1499], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2376, device='cuda:0', dtype=torch.float64)
tensor([-14.1772, -24.2025, -22.9734, -37.9594, -20.9492], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8703, device='cuda:0', dtype=torch.float64)
tensor([-14.1490, -23.6894, -22.8254, -37.3679, -20.7434], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9118, device='cuda:0', dtype=torch.float64)
tensor([-14.1520, -23.4356, -22.8130, -37.0393, -20.5982], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9413, device='cuda:0', dtype=torch.float64)
tensor([-14.1700, -23.1026, -22.8059, -36.6335, -20.3657], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8783, device='cuda:0', dtype=torch.float64)
tensor([-14.1925, -23.0545, -22.8783, -36.4418, -20.2254], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8881, device='cuda:0', dtype=torch.float64)
tensor([-14.2253, -23.2791, -22.9647, -36.4735, -20.2063], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7729, device='cuda:0', dtype=torch.float64)
tensor([-14.2410, -23.4775, -23.0714, -36.5795, -20.2254], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9948, device='cuda:0', dtype=torch.float64)
tensor([-14.3039, -23.7568, -23.2029, -36.8204, -20.2987], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8595, device='cuda:0', dtype=torch.float64)
tensor([-14.3569, -23.7945, -23.2331, -36.8502, -20.2372], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9607, device='cuda:0', dtype=torch.float64)
tensor([-14.3845, -23.9528, -23.2593, -37.0384, -20.2674], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9772, device='cuda:0', dtype=torch.float64)
tensor([-14.3963, -24.0682, -23.2611, -37.2404, -20.3365], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7888, device='cuda:0', dtype=torch.float64)
tensor([-14.4117, -24.1231, -23.2910, -37.4106, -20.4132], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8504, device='cuda:0', dtype=torch.float64)
tensor([-14.4383, -24.0903, -23.3218, -37.4789, -20.5038], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7487, device='cuda:0', dtype=torch.float64)
tensor([-14.4907, -24.2510, -23.4201, -37.7616, -20.6851], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8192, device='cuda:0', dtype=torch.float64)
tensor([-14.5472, -24.4656, -23.5241, -38.0808, -20.8919], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9495, device='cuda:0', dtype=torch.float64)
tensor([-14.5893, -24.6866, -23.6482, -38.4703, -21.1167], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8406, device='cuda:0', dtype=torch.float64)
tensor([-14.6565, -24.8033, -23.7804, -38.7872, -21.2718], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7405, device='cuda:0', dtype=torch.float64)
tensor([-14.7086, -24.9031, -23.8239, -38.9833, -21.3936], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8836, device='cuda:0', dtype=torch.float64)
tensor([-14.7580, -25.0050, -23.8662, -39.1949, -21.4806], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8942, device='cuda:0', dtype=torch.float64)
tensor([-14.8007, -25.3401, -23.9746, -39.6469, -21.6952], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0513, device='cuda:0', dtype=torch.float64)
tensor([-14.8634, -25.8751, -24.0711, -40.2058, -22.0156], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9679, device='cuda:0', dtype=torch.float64)
tensor([-14.9225, -26.1103, -24.0940, -40.5689, -22.1604], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8686, device='cuda:0', dtype=torch.float64)
tensor([-14.9899, -26.3815, -24.1608, -40.9594, -22.3204], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8539, device='cuda:0', dtype=torch.float64)
tensor([-15.0702, -26.5328, -24.1704, -41.1417, -22.3994], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8894, device='cuda:0', dtype=torch.float64)
tensor([-15.1583, -26.9224, -24.2577, -41.5588, -22.5806], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7951, device='cuda:0', dtype=torch.float64)
tensor([-15.2220, -27.2935, -24.3346, -41.9341, -22.7473], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9618, device='cuda:0', dtype=torch.float64)
tensor([-15.2521, -27.4803, -24.3212, -42.0405, -22.8204], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0816, device='cuda:0', dtype=torch.float64)
tensor([-15.2571, -27.6149, -24.3013, -42.2178, -22.8925], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0234, device='cuda:0', dtype=torch.float64)
tensor([-15.2552, -27.5901, -24.2200, -42.2711, -22.9469], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9908, device='cuda:0', dtype=torch.float64)
tensor([-15.2554, -27.4961, -24.1097, -42.1888, -22.9432], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7377, device='cuda:0', dtype=torch.float64)
tensor([-15.2374, -27.4166, -23.9960, -42.0468, -22.8918], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8375, device='cuda:0', dtype=torch.float64)
tensor([-15.2369, -27.4039, -23.8956, -41.9135, -22.8391], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9797, device='cuda:0', dtype=torch.float64)
tensor([-15.2335, -27.5205, -23.8481, -41.8594, -22.9070], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7926, device='cuda:0', dtype=torch.float64)
tensor([-15.2774, -27.6371, -23.8012, -41.7444, -23.0268], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8927, device='cuda:0', dtype=torch.float64)
tensor([-15.3161, -27.7461, -23.7898, -41.6656, -23.1286], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9288, device='cuda:0', dtype=torch.float64)
tensor([-15.3610, -27.8742, -23.7967, -41.6261, -23.2181], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9001, device='cuda:0', dtype=torch.float64)
tensor([-15.4079, -27.7462, -23.7455, -41.2880, -23.1694], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7362, device='cuda:0', dtype=torch.float64)
tensor([-15.4045, -27.6510, -23.7077, -41.0036, -23.1649], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8138, device='cuda:0', dtype=torch.float64)
tensor([-15.3929, -27.7079, -23.7323, -40.8623, -23.2433], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7492, device='cuda:0', dtype=torch.float64)
tensor([-15.3813, -27.6396, -23.7071, -40.6280, -23.2519], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8424, device='cuda:0', dtype=torch.float64)
tensor([-15.3681, -27.5351, -23.7266, -40.4854, -23.2673], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8491, device='cuda:0', dtype=torch.float64)
tensor([-15.3552, -27.3505, -23.7035, -40.2453, -23.2545], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8692, device='cuda:0', dtype=torch.float64)
tensor([-15.3683, -27.0467, -23.6670, -39.8409, -23.1789], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8659, device='cuda:0', dtype=torch.float64)
tensor([-15.3799, -26.9669, -23.6866, -39.6546, -23.2200], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9454, device='cuda:0', dtype=torch.float64)
tensor([-15.4504, -27.2399, -23.8147, -39.7386, -23.3924], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8347, device='cuda:0', dtype=torch.float64)
tensor([-15.5430, -27.5715, -23.9445, -39.8833, -23.5952], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0162, device='cuda:0', dtype=torch.float64)
tensor([-15.6767, -28.2195, -24.2232, -40.4146, -23.9846], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8392, device='cuda:0', dtype=torch.float64)
tensor([-15.8207, -28.7081, -24.4706, -40.8562, -24.3142], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7724, device='cuda:0', dtype=torch.float64)
tensor([-15.9531, -29.0832, -24.6943, -41.2915, -24.5866], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8511, device='cuda:0', dtype=torch.float64)
tensor([-16.0498, -29.3124, -24.8601, -41.5012, -24.7938], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8786, device='cuda:0', dtype=torch.float64)
tensor([-16.1482, -29.4598, -24.9850, -41.4824, -24.9552], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8382, device='cuda:0', dtype=torch.float64)
tensor([-16.2681, -29.4881, -25.1017, -41.3449, -25.0504], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8128, device='cuda:0', dtype=torch.float64)
tensor([-16.4017, -29.5187, -25.2075, -41.3265, -25.1736], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7931, device='cuda:0', dtype=torch.float64)
tensor([-16.5123, -29.6412, -25.2845, -41.2792, -25.2883], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0036, device='cuda:0', dtype=torch.float64)
tensor([-16.6367, -29.7939, -25.3620, -41.2605, -25.4319], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8210, device='cuda:0', dtype=torch.float64)
tensor([-16.7328, -29.9480, -25.4670, -41.3320, -25.5528], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7499, device='cuda:0', dtype=torch.float64)
tensor([-16.8299, -30.1300, -25.5768, -41.5171, -25.6867], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6913, device='cuda:0', dtype=torch.float64)
tensor([-16.9590, -30.2764, -25.6663, -41.6947, -25.8167], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8096, device='cuda:0', dtype=torch.float64)
tensor([-17.0594, -30.1679, -25.6893, -41.5337, -25.8000], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8377, device='cuda:0', dtype=torch.float64)
tensor([-17.1405, -30.1973, -25.7155, -41.4791, -25.8257], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8066, device='cuda:0', dtype=torch.float64)
tensor([-17.2205, -30.1351, -25.6873, -41.1523, -25.7468], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7535, device='cuda:0', dtype=torch.float64)
tensor([-17.2752, -29.7803, -25.5695, -40.6374, -25.5345], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6993, device='cuda:0', dtype=torch.float64)
tensor([-17.2789, -29.4570, -25.4579, -40.1630, -25.3221], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0183, device='cuda:0', dtype=torch.float64)
tensor([-17.2548, -28.7155, -25.2515, -39.1724, -24.9396], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7601, device='cuda:0', dtype=torch.float64)
tensor([-17.2565, -28.0163, -25.0397, -38.1987, -24.6050], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8134, device='cuda:0', dtype=torch.float64)
tensor([-17.2538, -27.2486, -24.8172, -37.1674, -24.2344], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9323, device='cuda:0', dtype=torch.float64)
tensor([-17.2444, -26.5184, -24.6006, -36.2380, -23.9050], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8293, device='cuda:0', dtype=torch.float64)
tensor([-17.1335, -25.7599, -24.3159, -35.2329, -23.5481], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9670, device='cuda:0', dtype=torch.float64)
tensor([-17.0381, -25.2239, -24.1200, -34.6054, -23.3293], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8943, device='cuda:0', dtype=torch.float64)
tensor([-16.9290, -24.7542, -23.9722, -34.1510, -23.1065], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8836, device='cuda:0', dtype=torch.float64)
tensor([-16.7906, -24.2895, -23.8687, -33.6889, -22.8888], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9286, device='cuda:0', dtype=torch.float64)
tensor([-16.7055, -23.9695, -23.8149, -33.5072, -22.7754], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9574, device='cuda:0', dtype=torch.float64)
tensor([-16.6737, -23.7866, -23.8437, -33.4980, -22.7784], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9911, device='cuda:0', dtype=torch.float64)
tensor([-16.6884, -23.6207, -23.8937, -33.6076, -22.8607], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9469, device='cuda:0', dtype=torch.float64)
tensor([-16.7528, -23.4998, -24.0096, -33.7566, -22.9310], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8501, device='cuda:0', dtype=torch.float64)
tensor([-16.8541, -23.4614, -24.1712, -34.1391, -23.0598], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7670, device='cuda:0', dtype=torch.float64)
tensor([-16.9724, -23.3845, -24.3142, -34.4515, -23.1165], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9277, device='cuda:0', dtype=torch.float64)
tensor([-17.1076, -23.3254, -24.4854, -34.8387, -23.1715], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8123, device='cuda:0', dtype=torch.float64)
tensor([-17.1958, -23.2672, -24.6754, -35.3608, -23.2855], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8716, device='cuda:0', dtype=torch.float64)
tensor([-17.2680, -23.2686, -24.8559, -35.9266, -23.3566], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9132, device='cuda:0', dtype=torch.float64)
tensor([-17.3725, -23.3174, -25.0805, -36.7377, -23.5335], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9045, device='cuda:0', dtype=torch.float64)
tensor([-17.4865, -23.4899, -25.3209, -37.7168, -23.8788], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9611, device='cuda:0', dtype=torch.float64)
tensor([-17.6068, -23.7259, -25.5875, -38.6326, -24.1604], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9873, device='cuda:0', dtype=torch.float64)
tensor([-17.7018, -24.0916, -25.8193, -39.6845, -24.5440], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8594, device='cuda:0', dtype=torch.float64)
tensor([-17.8289, -24.3535, -26.0078, -40.4464, -24.7857], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8575, device='cuda:0', dtype=torch.float64)
tensor([-17.9130, -24.6853, -26.1557, -41.1019, -24.9812], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8874, device='cuda:0', dtype=torch.float64)
tensor([-17.9946, -25.0501, -26.3517, -41.8468, -25.1895], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7558, device='cuda:0', dtype=torch.float64)
tensor([-18.0818, -25.3919, -26.5437, -42.4819, -25.3876], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9437, device='cuda:0', dtype=torch.float64)
tensor([-18.1332, -25.8917, -26.7366, -43.3006, -25.6668], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7510, device='cuda:0', dtype=torch.float64)
tensor([-18.1453, -26.2918, -26.9068, -43.8794, -25.8742], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9609, device='cuda:0', dtype=torch.float64)
tensor([-18.1648, -26.7240, -27.0593, -44.6101, -26.1392], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7233, device='cuda:0', dtype=torch.float64)
tensor([-18.1851, -27.1398, -27.2101, -45.1910, -26.3640], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0868, device='cuda:0', dtype=torch.float64)
tensor([-18.1923, -27.6797, -27.4457, -46.1431, -26.7430], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8396, device='cuda:0', dtype=torch.float64)
tensor([-18.1979, -28.1449, -27.6596, -47.0346, -27.0856], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7983, device='cuda:0', dtype=torch.float64)
tensor([-18.2052, -28.6311, -27.9342, -47.9673, -27.5128], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8621, device='cuda:0', dtype=torch.float64)
tensor([-18.2495, -29.0617, -28.2049, -48.8460, -27.8959], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7965, device='cuda:0', dtype=torch.float64)
tensor([-18.3399, -29.5177, -28.5255, -49.7540, -28.3082], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9782, device='cuda:0', dtype=torch.float64)
tensor([-18.4700, -30.0351, -28.7990, -50.6018, -28.7024], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7971, device='cuda:0', dtype=torch.float64)
tensor([-18.6370, -30.5586, -29.1074, -51.5037, -29.1404], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9109, device='cuda:0', dtype=torch.float64)
tensor([-18.8107, -31.0326, -29.4244, -52.3885, -29.5623], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8361, device='cuda:0', dtype=torch.float64)
tensor([-19.0390, -31.6270, -29.7600, -53.5015, -30.0768], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6991, device='cuda:0', dtype=torch.float64)
tensor([-19.2209, -32.0124, -29.9912, -54.3348, -30.4181], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8373, device='cuda:0', dtype=torch.float64)
tensor([-19.3313, -32.2491, -30.2103, -55.0528, -30.7168], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9332, device='cuda:0', dtype=torch.float64)
tensor([-19.4998, -32.5561, -30.4373, -55.7376, -30.9943], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8377, device='cuda:0', dtype=torch.float64)
tensor([-19.6300, -32.7349, -30.6507, -56.3445, -31.2479], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7661, device='cuda:0', dtype=torch.float64)
tensor([-19.6778, -32.8933, -30.8175, -56.8420, -31.4259], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8744, device='cuda:0', dtype=torch.float64)
tensor([-19.6241, -32.7567, -30.8609, -56.8287, -31.4212], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8227, device='cuda:0', dtype=torch.float64)
tensor([-19.5866, -32.4201, -30.9048, -56.5533, -31.3026], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8550, device='cuda:0', dtype=torch.float64)
tensor([-19.5750, -32.1979, -30.9689, -56.2559, -31.1774], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7262, device='cuda:0', dtype=torch.float64)
tensor([-19.5620, -31.9167, -31.0383, -56.0285, -31.0316], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8964, device='cuda:0', dtype=torch.float64)
tensor([-19.4918, -31.5254, -31.0351, -55.6033, -30.8094], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8109, device='cuda:0', dtype=torch.float64)
tensor([-19.4317, -31.0793, -31.0362, -55.0903, -30.5612], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7914, device='cuda:0', dtype=torch.float64)
tensor([-19.3830, -30.5725, -31.0438, -54.4592, -30.2487], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8730, device='cuda:0', dtype=torch.float64)
tensor([-19.3246, -30.2271, -31.1108, -54.0147, -29.9902], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9342, device='cuda:0', dtype=torch.float64)
tensor([-19.3379, -30.1241, -31.2112, -53.7306, -29.8211], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7928, device='cuda:0', dtype=torch.float64)
tensor([-19.3457, -29.8534, -31.2333, -53.2813, -29.5843], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9128, device='cuda:0', dtype=torch.float64)
tensor([-19.3310, -29.6145, -31.2477, -52.9321, -29.4209], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8714, device='cuda:0', dtype=torch.float64)
tensor([-19.3313, -29.5476, -31.2546, -52.6836, -29.2886], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8778, device='cuda:0', dtype=torch.float64)
tensor([-19.3303, -29.4223, -31.2638, -52.3446, -29.1730], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7350, device='cuda:0', dtype=torch.float64)
tensor([-19.2934, -29.2694, -31.2474, -51.9424, -29.0346], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8304, device='cuda:0', dtype=torch.float64)
tensor([-19.2304, -28.9969, -31.1499, -51.3377, -28.8766], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8875, device='cuda:0', dtype=torch.float64)
tensor([-19.1630, -28.7972, -31.0365, -50.8359, -28.7419], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8721, device='cuda:0', dtype=torch.float64)
tensor([-19.0773, -28.6471, -30.8964, -50.3469, -28.6446], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8645, device='cuda:0', dtype=torch.float64)
tensor([-19.0064, -28.6884, -30.8563, -50.0735, -28.6243], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9172, device='cuda:0', dtype=torch.float64)
tensor([-18.9889, -28.9199, -30.8684, -50.0862, -28.7958], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9294, device='cuda:0', dtype=torch.float64)
tensor([-18.9325, -29.1894, -30.8952, -50.1729, -28.9513], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6923, device='cuda:0', dtype=torch.float64)
tensor([-18.8906, -29.4424, -30.8324, -50.1757, -29.0848], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8072, device='cuda:0', dtype=torch.float64)
tensor([-18.8302, -29.5987, -30.7535, -50.0919, -29.1828], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8337, device='cuda:0', dtype=torch.float64)
tensor([-18.7970, -29.8620, -30.7550, -50.1448, -29.3242], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7785, device='cuda:0', dtype=torch.float64)
tensor([-18.7286, -30.0036, -30.6871, -49.9883, -29.3817], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8598, device='cuda:0', dtype=torch.float64)
tensor([-18.7127, -30.3157, -30.6438, -49.8357, -29.4331], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8071, device='cuda:0', dtype=torch.float64)
tensor([-18.7002, -30.4827, -30.6097, -49.5717, -29.3899], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8655, device='cuda:0', dtype=torch.float64)
tensor([-18.6943, -30.6188, -30.5407, -49.2349, -29.3501], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9189, device='cuda:0', dtype=torch.float64)
tensor([-18.6784, -30.8035, -30.4816, -49.0778, -29.4191], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8264, device='cuda:0', dtype=torch.float64)
tensor([-18.6888, -31.0633, -30.4929, -48.9995, -29.5168], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6986, device='cuda:0', dtype=torch.float64)
tensor([-18.7539, -31.3584, -30.5648, -49.0954, -29.6639], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7550, device='cuda:0', dtype=torch.float64)
tensor([-18.8509, -31.6651, -30.6811, -49.3286, -29.8393], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8495, device='cuda:0', dtype=torch.float64)
tensor([-18.9773, -32.1205, -30.8486, -49.7778, -30.0371], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8073, device='cuda:0', dtype=torch.float64)
tensor([-19.1119, -32.4702, -30.9497, -50.1810, -30.2186], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9361, device='cuda:0', dtype=torch.float64)
tensor([-19.2279, -32.6503, -30.9668, -50.3418, -30.2918], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7026, device='cuda:0', dtype=torch.float64)
tensor([-19.3652, -32.7098, -30.9345, -50.3901, -30.3040], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0688, device='cuda:0', dtype=torch.float64)
tensor([-19.4784, -32.5703, -30.7759, -50.2130, -30.1779], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8520, device='cuda:0', dtype=torch.float64)
tensor([-19.6174, -32.4953, -30.6280, -50.2840, -30.1357], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6325, device='cuda:0', dtype=torch.float64)
tensor([-19.7461, -32.4368, -30.5372, -50.5407, -30.1562], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8702, device='cuda:0', dtype=torch.float64)
tensor([-19.8386, -32.2657, -30.4565, -50.7770, -30.1905], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7952, device='cuda:0', dtype=torch.float64)
tensor([-19.8966, -32.0351, -30.3815, -50.8647, -30.1907], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7356, device='cuda:0', dtype=torch.float64)
tensor([-19.9459, -31.8133, -30.3146, -50.9572, -30.2060], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7379, device='cuda:0', dtype=torch.float64)
tensor([-19.9723, -31.5872, -30.2373, -51.0415, -30.2146], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7764, device='cuda:0', dtype=torch.float64)
tensor([-20.0207, -31.3707, -30.1682, -51.1570, -30.2450], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8051, device='cuda:0', dtype=torch.float64)
tensor([-20.0843, -31.4572, -30.1909, -51.5086, -30.3545], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7885, device='cuda:0', dtype=torch.float64)
tensor([-20.1203, -31.6519, -30.2808, -51.9228, -30.4845], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7720, device='cuda:0', dtype=torch.float64)
tensor([-20.1170, -31.7270, -30.3415, -52.2093, -30.5853], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8518, device='cuda:0', dtype=torch.float64)
tensor([-20.1183, -31.6124, -30.4052, -52.3911, -30.6639], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7455, device='cuda:0', dtype=torch.float64)
tensor([-20.0968, -31.3789, -30.4700, -52.5027, -30.7028], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8657, device='cuda:0', dtype=torch.float64)
tensor([-20.0824, -31.2223, -30.5455, -52.5798, -30.7155], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9815, device='cuda:0', dtype=torch.float64)
tensor([-20.1027, -31.2074, -30.7281, -53.0306, -30.8211], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6716, device='cuda:0', dtype=torch.float64)
tensor([-20.1415, -31.2619, -30.9171, -53.5149, -30.9659], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7031, device='cuda:0', dtype=torch.float64)
tensor([-20.1776, -31.4848, -31.1122, -54.0738, -31.1947], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7406, device='cuda:0', dtype=torch.float64)
tensor([-20.1962, -31.6927, -31.2862, -54.5883, -31.4018], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7941, device='cuda:0', dtype=torch.float64)
tensor([-20.2534, -32.0865, -31.5029, -55.2180, -31.7064], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8559, device='cuda:0', dtype=torch.float64)
tensor([-20.3011, -32.4261, -31.7134, -55.7885, -31.9678], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8349, device='cuda:0', dtype=torch.float64)
tensor([-20.3476, -32.9461, -31.9197, -56.3574, -32.2232], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7841, device='cuda:0', dtype=torch.float64)
tensor([-20.3671, -33.3705, -32.1246, -56.9052, -32.4634], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6811, device='cuda:0', dtype=torch.float64)
tensor([-20.4241, -33.8890, -32.3108, -57.4931, -32.7342], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7252, device='cuda:0', dtype=torch.float64)
tensor([-20.4491, -34.2214, -32.4355, -57.8448, -32.9221], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7922, device='cuda:0', dtype=torch.float64)
tensor([-20.5240, -34.6047, -32.5817, -58.2078, -33.1446], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7749, device='cuda:0', dtype=torch.float64)
tensor([-20.6409, -35.1226, -32.7128, -58.7250, -33.3405], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8869, device='cuda:0', dtype=torch.float64)
tensor([-20.8075, -35.6507, -32.8244, -59.2815, -33.5284], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7096, device='cuda:0', dtype=torch.float64)
tensor([-20.9749, -36.2989, -32.9593, -59.9848, -33.7930], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7726, device='cuda:0', dtype=torch.float64)
tensor([-21.0847, -36.8181, -33.0060, -60.5091, -33.9697], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7565, device='cuda:0', dtype=torch.float64)
tensor([-21.1142, -37.0947, -32.9848, -60.7402, -34.0269], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8158, device='cuda:0', dtype=torch.float64)
tensor([-21.1714, -37.3810, -32.9647, -60.9556, -34.0665], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8276, device='cuda:0', dtype=torch.float64)
tensor([-21.2613, -37.8317, -33.0118, -61.3545, -34.1433], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7429, device='cuda:0', dtype=torch.float64)
tensor([-21.4549, -38.4997, -33.1413, -61.9886, -34.3456], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8810, device='cuda:0', dtype=torch.float64)
tensor([-21.5294, -38.9604, -33.1966, -62.3583, -34.3893], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7217, device='cuda:0', dtype=torch.float64)
tensor([-21.5808, -39.1827, -33.2610, -62.5714, -34.3785], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7724, device='cuda:0', dtype=torch.float64)
tensor([-21.5831, -39.2102, -33.2633, -62.6132, -34.3116], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9581, device='cuda:0', dtype=torch.float64)
tensor([-21.5692, -39.2986, -33.3106, -62.6223, -34.2166], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7434, device='cuda:0', dtype=torch.float64)
tensor([-21.4978, -39.4112, -33.3198, -62.6632, -34.1195], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7135, device='cuda:0', dtype=torch.float64)
tensor([-21.3269, -39.2618, -33.2593, -62.5078, -33.9045], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6329, device='cuda:0', dtype=torch.float64)
tensor([-21.1571, -39.0672, -33.1810, -62.2931, -33.6872], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6516, device='cuda:0', dtype=torch.float64)
tensor([-21.0359, -38.9495, -33.1368, -62.1462, -33.5324], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6816, device='cuda:0', dtype=torch.float64)
tensor([-20.9196, -38.9421, -33.1205, -62.0234, -33.3945], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6797, device='cuda:0', dtype=torch.float64)
tensor([-20.7941, -38.7802, -33.0730, -61.7636, -33.2164], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7413, device='cuda:0', dtype=torch.float64)
tensor([-20.8145, -38.8109, -33.1045, -61.6378, -33.1206], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7274, device='cuda:0', dtype=torch.float64)
tensor([-20.8203, -38.8045, -33.1545, -61.4914, -33.0471], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7522, device='cuda:0', dtype=torch.float64)
tensor([-20.8312, -38.9734, -33.2519, -61.4830, -33.0106], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6792, device='cuda:0', dtype=torch.float64)
tensor([-20.9151, -39.2229, -33.3999, -61.6126, -33.0388], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8190, device='cuda:0', dtype=torch.float64)
tensor([-20.9237, -39.3589, -33.5252, -61.7097, -33.0221], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7344, device='cuda:0', dtype=torch.float64)
tensor([-20.9392, -39.6010, -33.6765, -61.8893, -33.0170], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6275, device='cuda:0', dtype=torch.float64)
tensor([-20.9638, -39.8016, -33.8298, -61.9788, -33.0369], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8534, device='cuda:0', dtype=torch.float64)
tensor([-21.0219, -40.0951, -34.0171, -62.1322, -33.0754], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6950, device='cuda:0', dtype=torch.float64)
tensor([-21.0962, -40.2837, -34.2440, -62.3405, -33.1302], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7534, device='cuda:0', dtype=torch.float64)
tensor([-21.0849, -40.3062, -34.4381, -62.4808, -33.1054], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7056, device='cuda:0', dtype=torch.float64)
tensor([-21.0693, -40.3008, -34.5935, -62.5766, -33.0822], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8410, device='cuda:0', dtype=torch.float64)
tensor([-21.1890, -40.5632, -34.9059, -63.0361, -33.2175], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6397, device='cuda:0', dtype=torch.float64)
tensor([-21.2560, -40.8039, -35.2317, -63.4525, -33.3944], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7245, device='cuda:0', dtype=torch.float64)
tensor([-21.3830, -41.0314, -35.5796, -63.9666, -33.6190], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7282, device='cuda:0', dtype=torch.float64)
tensor([-21.5222, -41.2142, -35.8929, -64.4935, -33.8686], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7018, device='cuda:0', dtype=torch.float64)
tensor([-21.6617, -41.3405, -36.1305, -64.9534, -34.0806], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6950, device='cuda:0', dtype=torch.float64)
tensor([-21.7216, -41.2582, -36.3383, -65.3206, -34.2085], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8258, device='cuda:0', dtype=torch.float64)
tensor([-21.8594, -41.1949, -36.5200, -65.7820, -34.3090], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8003, device='cuda:0', dtype=torch.float64)
tensor([-22.0446, -41.4738, -36.7750, -66.4925, -34.4971], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6884, device='cuda:0', dtype=torch.float64)
tensor([-22.2754, -41.7120, -36.9871, -67.1540, -34.6576], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6222, device='cuda:0', dtype=torch.float64)
tensor([-22.4461, -41.7131, -37.1373, -67.5976, -34.7506], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7907, device='cuda:0', dtype=torch.float64)
tensor([-22.5336, -41.4708, -37.2767, -67.8943, -34.7874], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7653, device='cuda:0', dtype=torch.float64)
tensor([-22.6917, -41.3049, -37.4720, -68.2275, -34.8218], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6841, device='cuda:0', dtype=torch.float64)
tensor([-22.8599, -41.1243, -37.6493, -68.4926, -34.8340], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7439, device='cuda:0', dtype=torch.float64)
tensor([-22.9876, -40.7997, -37.8195, -68.6182, -34.7757], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7710, device='cuda:0', dtype=torch.float64)
tensor([-23.0930, -40.4146, -37.9238, -68.5080, -34.6682], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8684, device='cuda:0', dtype=torch.float64)
tensor([-23.1413, -39.7597, -37.9835, -68.2244, -34.4603], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8619, device='cuda:0', dtype=torch.float64)
tensor([-23.1749, -39.1588, -38.0095, -67.8961, -34.2263], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8487, device='cuda:0', dtype=torch.float64)
tensor([-23.2945, -38.7037, -38.0872, -67.7165, -34.0921], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6735, device='cuda:0', dtype=torch.float64)
tensor([-23.3711, -38.2883, -38.1473, -67.5536, -33.9656], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7693, device='cuda:0', dtype=torch.float64)
tensor([-23.3591, -37.8153, -38.1319, -67.1829, -33.8353], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7990, device='cuda:0', dtype=torch.float64)
tensor([-23.3852, -37.4950, -38.1141, -66.9067, -33.8024], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8430, device='cuda:0', dtype=torch.float64)
tensor([-23.4565, -37.4943, -38.1460, -66.9897, -33.9349], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8490, device='cuda:0', dtype=torch.float64)
tensor([-23.4743, -37.3490, -38.1480, -66.9169, -33.9905], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7801, device='cuda:0', dtype=torch.float64)
tensor([-23.3880, -37.0248, -38.0983, -66.7281, -33.9384], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7916, device='cuda:0', dtype=torch.float64)
tensor([-23.2790, -36.6063, -38.0714, -66.4962, -33.8888], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8685, device='cuda:0', dtype=torch.float64)
tensor([-23.1787, -36.2392, -38.0437, -66.3619, -33.8141], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8243, device='cuda:0', dtype=torch.float64)
tensor([-23.1189, -35.9829, -38.0436, -66.2804, -33.7310], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7353, device='cuda:0', dtype=torch.float64)
tensor([-23.1357, -36.0253, -38.0909, -66.4256, -33.7667], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7963, device='cuda:0', dtype=torch.float64)
tensor([-23.2413, -36.3213, -38.2003, -66.7410, -33.9309], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8825, device='cuda:0', dtype=torch.float64)
tensor([-23.3243, -36.4914, -38.1993, -66.8347, -34.0657], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8056, device='cuda:0', dtype=torch.float64)
tensor([-23.4519, -36.7869, -38.2378, -67.2011, -34.2715], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8342, device='cuda:0', dtype=torch.float64)
tensor([-23.6285, -37.3844, -38.2635, -67.8210, -34.6001], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7109, device='cuda:0', dtype=torch.float64)
tensor([-23.8899, -38.1512, -38.3368, -68.6991, -35.0300], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7428, device='cuda:0', dtype=torch.float64)
tensor([-24.1325, -38.8586, -38.3911, -69.4823, -35.4879], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7409, device='cuda:0', dtype=torch.float64)
tensor([-24.3859, -39.3364, -38.4066, -70.0183, -35.8237], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6876, device='cuda:0', dtype=torch.float64)
tensor([-24.6615, -39.8463, -38.4407, -70.5217, -36.1585], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7961, device='cuda:0', dtype=torch.float64)
tensor([-25.1788, -40.8197, -38.6112, -71.3872, -36.6128], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8234, device='cuda:0', dtype=torch.float64)
tensor([-25.4959, -41.5126, -38.6902, -71.9271, -36.9159], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7540, device='cuda:0', dtype=torch.float64)
tensor([-25.7153, -42.0369, -38.7286, -72.3311, -37.0993], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6194, device='cuda:0', dtype=torch.float64)
tensor([-25.8728, -42.5732, -38.7767, -72.7054, -37.2791], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6270, device='cuda:0', dtype=torch.float64)
tensor([-26.0377, -43.0055, -38.8187, -72.9605, -37.4245], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7554, device='cuda:0', dtype=torch.float64)
tensor([-26.2216, -43.5266, -38.8685, -73.1981, -37.5820], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8628, device='cuda:0', dtype=torch.float64)
tensor([-26.6218, -44.2205, -39.0197, -73.6228, -37.8492], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7051, device='cuda:0', dtype=torch.float64)
tensor([-27.0039, -44.9319, -39.1854, -74.1192, -38.1346], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7564, device='cuda:0', dtype=torch.float64)
tensor([-27.4726, -45.6800, -39.3833, -74.6406, -38.4414], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7367, device='cuda:0', dtype=torch.float64)
tensor([-27.9875, -46.4542, -39.5986, -75.1909, -38.8334], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7048, device='cuda:0', dtype=torch.float64)
tensor([-28.5021, -47.2722, -39.8438, -75.7482, -39.1985], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7178, device='cuda:0', dtype=torch.float64)
tensor([-28.8956, -47.9899, -40.0364, -76.1967, -39.4902], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7060, device='cuda:0', dtype=torch.float64)
tensor([-29.0429, -48.5079, -40.0477, -76.3940, -39.6644], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7631, device='cuda:0', dtype=torch.float64)
tensor([-29.1691, -48.9032, -40.0083, -76.5077, -39.7511], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7315, device='cuda:0', dtype=torch.float64)
tensor([-29.1424, -49.1069, -39.9197, -76.5308, -39.7500], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8026, device='cuda:0', dtype=torch.float64)
tensor([-29.2092, -49.4966, -39.8725, -76.7115, -39.8162], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7177, device='cuda:0', dtype=torch.float64)
tensor([-29.5437, -50.2396, -39.9475, -77.2680, -40.0854], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8951, device='cuda:0', dtype=torch.float64)
tensor([-29.6717, -50.6338, -39.8925, -77.5395, -40.1908], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8141, device='cuda:0', dtype=torch.float64)
tensor([-29.5899, -50.7852, -39.7850, -77.6271, -40.1731], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9209, device='cuda:0', dtype=torch.float64)
tensor([-29.4361, -50.6792, -39.6447, -77.3886, -40.0720], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6746, device='cuda:0', dtype=torch.float64)
tensor([-29.1922, -50.4505, -39.4668, -77.0679, -39.9016], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7567, device='cuda:0', dtype=torch.float64)
tensor([-29.0022, -50.3039, -39.3311, -76.7658, -39.7223], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8121, device='cuda:0', dtype=torch.float64)
tensor([-28.7601, -50.1398, -39.2208, -76.5685, -39.5481], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6515, device='cuda:0', dtype=torch.float64)
tensor([-28.5011, -49.9789, -39.0730, -76.3499, -39.3441], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6366, device='cuda:0', dtype=torch.float64)
tensor([-28.1691, -49.5776, -38.9267, -75.9796, -39.0261], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0047, device='cuda:0', dtype=torch.float64)
tensor([-27.6487, -48.8781, -38.7411, -75.4668, -38.5832], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6688, device='cuda:0', dtype=torch.float64)
tensor([-27.1730, -48.1840, -38.5292, -74.8867, -38.1432], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6911, device='cuda:0', dtype=torch.float64)
tensor([-26.8088, -47.6245, -38.3903, -74.4640, -37.8353], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7903, device='cuda:0', dtype=torch.float64)
tensor([-26.4729, -47.0874, -38.1712, -74.1151, -37.5995], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7951, device='cuda:0', dtype=torch.float64)
tensor([-26.1960, -46.5638, -37.9629, -73.8894, -37.3669], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7653, device='cuda:0', dtype=torch.float64)
tensor([-25.8297, -45.7774, -37.7419, -73.4507, -37.0415], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8816, device='cuda:0', dtype=torch.float64)
tensor([-25.4673, -44.9921, -37.5237, -72.8586, -36.6808], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8160, device='cuda:0', dtype=torch.float64)
tensor([-25.1044, -44.1631, -37.2346, -72.2101, -36.3531], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8534, device='cuda:0', dtype=torch.float64)
tensor([-24.9509, -43.6830, -37.1160, -71.9427, -36.1814], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7242, device='cuda:0', dtype=torch.float64)
tensor([-24.7821, -43.2940, -37.0017, -71.7403, -36.1086], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6937, device='cuda:0', dtype=torch.float64)
tensor([-24.7021, -43.0146, -36.9587, -71.5792, -36.1141], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6876, device='cuda:0', dtype=torch.float64)
tensor([-24.6306, -42.6980, -36.9364, -71.4007, -36.0781], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7653, device='cuda:0', dtype=torch.float64)
tensor([-24.5493, -42.4071, -36.9563, -71.3843, -36.0704], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7420, device='cuda:0', dtype=torch.float64)
tensor([-24.4995, -42.2557, -37.0021, -71.4462, -36.1027], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8594, device='cuda:0', dtype=torch.float64)
tensor([-24.4599, -42.0297, -37.0322, -71.3896, -36.1253], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6393, device='cuda:0', dtype=torch.float64)
tensor([-24.4219, -41.9895, -37.0353, -71.5799, -36.2266], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7948, device='cuda:0', dtype=torch.float64)
tensor([-24.3033, -41.8031, -36.9875, -71.6267, -36.2952], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6621, device='cuda:0', dtype=torch.float64)
tensor([-24.1618, -41.6206, -36.9651, -71.6673, -36.3827], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6840, device='cuda:0', dtype=torch.float64)
tensor([-24.0600, -41.6075, -36.9856, -71.8020, -36.4743], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7542, device='cuda:0', dtype=torch.float64)
tensor([-23.8959, -41.4417, -36.9892, -71.7950, -36.4964], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6851, device='cuda:0', dtype=torch.float64)
tensor([-23.6899, -41.2605, -36.9834, -71.7142, -36.4512], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7632, device='cuda:0', dtype=torch.float64)
tensor([-23.4979, -41.0262, -36.9428, -71.5904, -36.4325], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7295, device='cuda:0', dtype=torch.float64)
tensor([-23.3876, -40.8429, -36.9175, -71.4202, -36.4578], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8283, device='cuda:0', dtype=torch.float64)
tensor([-23.3674, -40.8066, -36.9892, -71.3268, -36.5231], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8258, device='cuda:0', dtype=torch.float64)
tensor([-23.3697, -40.6567, -37.0728, -71.1262, -36.4903], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7530, device='cuda:0', dtype=torch.float64)
tensor([-23.4097, -40.5787, -37.1819, -70.9973, -36.5158], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9543, device='cuda:0', dtype=torch.float64)
tensor([-23.5389, -40.8996, -37.3976, -71.3514, -36.7051], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7833, device='cuda:0', dtype=torch.float64)
tensor([-23.6812, -41.3521, -37.6152, -71.7996, -36.9056], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6398, device='cuda:0', dtype=torch.float64)
tensor([-23.8485, -41.9818, -37.8263, -72.3971, -37.1505], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6295, device='cuda:0', dtype=torch.float64)
tensor([-24.0319, -42.7590, -38.0110, -73.0275, -37.4438], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6897, device='cuda:0', dtype=torch.float64)
tensor([-24.2819, -43.5974, -38.2248, -73.7417, -37.7490], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6439, device='cuda:0', dtype=torch.float64)
tensor([-24.5213, -44.3820, -38.3875, -74.2878, -38.0077], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6762, device='cuda:0', dtype=torch.float64)
tensor([-24.7640, -45.1972, -38.5347, -74.8512, -38.3424], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6849, device='cuda:0', dtype=torch.float64)
tensor([-24.9665, -45.8228, -38.6448, -75.1640, -38.5951], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6634, device='cuda:0', dtype=torch.float64)
tensor([-25.1946, -46.4796, -38.7577, -75.4384, -38.8581], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6367, device='cuda:0', dtype=torch.float64)
tensor([-25.2870, -46.7139, -38.8171, -75.3949, -38.9082], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7414, device='cuda:0', dtype=torch.float64)
tensor([-25.3756, -46.9826, -38.9146, -75.3334, -38.9163], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6375, device='cuda:0', dtype=torch.float64)
tensor([-25.4966, -47.3430, -39.0974, -75.5609, -39.0728], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8427, device='cuda:0', dtype=torch.float64)
tensor([-25.4942, -47.5409, -39.1815, -75.5777, -39.0943], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7189, device='cuda:0', dtype=torch.float64)
tensor([-25.5796, -48.0768, -39.2156, -75.8046, -39.2321], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7204, device='cuda:0', dtype=torch.float64)
tensor([-25.8553, -48.9724, -39.2826, -76.3597, -39.5809], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5848, device='cuda:0', dtype=torch.float64)
tensor([-26.1912, -49.9904, -39.3640, -76.9377, -39.9948], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7728, device='cuda:0', dtype=torch.float64)
tensor([-26.4321, -50.8594, -39.4196, -77.3054, -40.3359], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8001, device='cuda:0', dtype=torch.float64)
tensor([-26.6772, -51.5684, -39.5476, -77.6963, -40.6988], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7765, device='cuda:0', dtype=torch.float64)
tensor([-26.7652, -52.0536, -39.6128, -77.8760, -40.9055], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6580, device='cuda:0', dtype=torch.float64)
tensor([-26.7560, -52.4184, -39.5984, -77.9710, -41.0592], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7004, device='cuda:0', dtype=torch.float64)
tensor([-26.6063, -52.6255, -39.5411, -78.0768, -41.1188], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6248, device='cuda:0', dtype=torch.float64)
tensor([-26.3709, -52.6243, -39.4679, -78.0299, -41.0553], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7024, device='cuda:0', dtype=torch.float64)
tensor([-26.1872, -52.6344, -39.3698, -77.9016, -40.9789], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6059, device='cuda:0', dtype=torch.float64)
tensor([-26.0145, -52.4757, -39.3033, -77.6719, -40.8341], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6721, device='cuda:0', dtype=torch.float64)
tensor([-25.7800, -52.1304, -39.2084, -77.2775, -40.5530], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5957, device='cuda:0', dtype=torch.float64)
tensor([-25.5652, -51.8833, -39.1390, -76.9941, -40.2809], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7685, device='cuda:0', dtype=torch.float64)
tensor([-25.5027, -51.7955, -39.1204, -76.8712, -40.2045], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6162, device='cuda:0', dtype=torch.float64)
tensor([-25.4931, -51.8647, -39.1699, -77.0130, -40.2613], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7224, device='cuda:0', dtype=torch.float64)
tensor([-25.4602, -51.9032, -39.2352, -77.1817, -40.2806], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5879, device='cuda:0', dtype=torch.float64)
tensor([-25.4587, -51.8776, -39.3037, -77.3478, -40.2842], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7485, device='cuda:0', dtype=torch.float64)
tensor([-25.5604, -52.0960, -39.3820, -77.6903, -40.4165], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7502, device='cuda:0', dtype=torch.float64)
tensor([-25.7001, -52.2850, -39.4798, -77.9078, -40.5884], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7844, device='cuda:0', dtype=torch.float64)
tensor([-26.0511, -52.8489, -39.6920, -78.4355, -41.0125], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6410, device='cuda:0', dtype=torch.float64)
tensor([-26.3372, -53.1174, -39.8522, -78.8056, -41.3139], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6758, device='cuda:0', dtype=torch.float64)
tensor([-26.6200, -53.3661, -39.9834, -79.1940, -41.6194], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7892, device='cuda:0', dtype=torch.float64)
tensor([-27.0210, -53.8800, -40.1789, -79.7887, -42.0700], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6812, device='cuda:0', dtype=torch.float64)
tensor([-27.5357, -54.5070, -40.4535, -80.5177, -42.5977], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6035, device='cuda:0', dtype=torch.float64)
tensor([-27.9863, -54.9444, -40.7228, -81.2023, -43.0585], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7582, device='cuda:0', dtype=torch.float64)
tensor([-28.4012, -55.3532, -41.0129, -81.9091, -43.4711], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8125, device='cuda:0', dtype=torch.float64)
tensor([-28.7865, -55.8532, -41.2638, -82.6086, -43.8858], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6215, device='cuda:0', dtype=torch.float64)
tensor([-29.1969, -56.2979, -41.5153, -83.2970, -44.3730], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6872, device='cuda:0', dtype=torch.float64)
tensor([-29.5139, -56.5282, -41.6928, -83.7471, -44.7517], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7622, device='cuda:0', dtype=torch.float64)
tensor([-29.8867, -56.7518, -41.9122, -84.1903, -45.1301], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7463, device='cuda:0', dtype=torch.float64)
tensor([-30.2350, -57.0872, -42.1161, -84.7180, -45.5629], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7111, device='cuda:0', dtype=torch.float64)
tensor([-30.5666, -57.4414, -42.3535, -85.3222, -45.9681], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5740, device='cuda:0', dtype=torch.float64)
tensor([-30.8121, -57.6912, -42.5767, -85.7217, -46.2847], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6965, device='cuda:0', dtype=torch.float64)
tensor([-30.9999, -57.9305, -42.7648, -85.9578, -46.5167], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6298, device='cuda:0', dtype=torch.float64)
tensor([-30.9674, -57.8598, -42.8517, -85.9166, -46.5145], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7509, device='cuda:0', dtype=torch.float64)
tensor([-30.8092, -57.6577, -42.9045, -85.7488, -46.4213], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6760, device='cuda:0', dtype=torch.float64)
tensor([-30.5949, -57.3232, -42.9146, -85.4743, -46.2772], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7235, device='cuda:0', dtype=torch.float64)
tensor([-30.3389, -56.8439, -42.9120, -85.1593, -46.0813], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6697, device='cuda:0', dtype=torch.float64)
tensor([-30.3213, -56.7137, -43.0339, -85.1325, -46.1234], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6175, device='cuda:0', dtype=torch.float64)
tensor([-30.2876, -56.6164, -43.1617, -85.1719, -46.2301], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6585, device='cuda:0', dtype=torch.float64)
tensor([-30.3304, -56.5449, -43.3017, -85.2216, -46.4228], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6190, device='cuda:0', dtype=torch.float64)
tensor([-30.5128, -56.6531, -43.4755, -85.2825, -46.6956], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7293, device='cuda:0', dtype=torch.float64)
tensor([-30.7886, -57.0309, -43.7204, -85.4498, -47.0434], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8027, device='cuda:0', dtype=torch.float64)
tensor([-31.0885, -57.3951, -43.9950, -85.7128, -47.4047], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6988, device='cuda:0', dtype=torch.float64)
tensor([-31.1533, -57.3411, -44.1287, -85.6640, -47.5016], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7734, device='cuda:0', dtype=torch.float64)
tensor([-31.0381, -56.9695, -44.1318, -85.2974, -47.3417], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6089, device='cuda:0', dtype=torch.float64)
tensor([-30.9177, -56.6704, -44.0923, -84.8859, -47.1586], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7012, device='cuda:0', dtype=torch.float64)
tensor([-30.8526, -56.5260, -44.0415, -84.6243, -46.9902], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7209, device='cuda:0', dtype=torch.float64)
tensor([-30.7881, -56.3278, -43.9841, -84.2768, -46.7662], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6466, device='cuda:0', dtype=torch.float64)
tensor([-30.7411, -56.2172, -43.9794, -83.9125, -46.5208], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5980, device='cuda:0', dtype=torch.float64)
tensor([-30.6325, -56.0714, -43.9692, -83.5805, -46.2735], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6802, device='cuda:0', dtype=torch.float64)
tensor([-30.5855, -55.9465, -44.0162, -83.4161, -46.1280], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6090, device='cuda:0', dtype=torch.float64)
tensor([-30.5367, -55.7625, -44.0778, -83.1822, -45.9036], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6556, device='cuda:0', dtype=torch.float64)
tensor([-30.4514, -55.3635, -44.1429, -82.8157, -45.6129], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8232, device='cuda:0', dtype=torch.float64)
tensor([-30.3095, -54.7090, -44.2696, -82.4553, -45.2879], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6841, device='cuda:0', dtype=torch.float64)
tensor([-30.2054, -54.0826, -44.3890, -82.1383, -45.0000], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5426, device='cuda:0', dtype=torch.float64)
tensor([-30.1022, -53.5431, -44.5091, -81.7767, -44.7708], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7702, device='cuda:0', dtype=torch.float64)
tensor([-30.0081, -53.0551, -44.6310, -81.4561, -44.5812], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6957, device='cuda:0', dtype=torch.float64)
tensor([-29.9100, -52.5196, -44.6976, -81.0995, -44.3570], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7282, device='cuda:0', dtype=torch.float64)
tensor([-29.9314, -52.0630, -44.7988, -80.8659, -44.2696], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6473, device='cuda:0', dtype=torch.float64)
tensor([-29.9974, -51.6534, -44.9313, -80.5621, -44.1909], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5643, device='cuda:0', dtype=torch.float64)
tensor([-30.1347, -51.2881, -45.0769, -80.3375, -44.1549], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7444, device='cuda:0', dtype=torch.float64)
tensor([-30.4289, -51.2518, -45.3003, -80.4742, -44.3224], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7915, device='cuda:0', dtype=torch.float64)
tensor([-30.7521, -51.4031, -45.5423, -80.8381, -44.4607], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6711, device='cuda:0', dtype=torch.float64)
tensor([-31.1647, -51.7316, -45.8227, -81.3651, -44.7134], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6685, device='cuda:0', dtype=torch.float64)
tensor([-31.5732, -52.1285, -46.0489, -81.8177, -44.9678], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6085, device='cuda:0', dtype=torch.float64)
tensor([-31.9481, -52.5734, -46.2310, -82.1856, -45.1452], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5984, device='cuda:0', dtype=torch.float64)
tensor([-32.2893, -52.9680, -46.4368, -82.4860, -45.3197], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6928, device='cuda:0', dtype=torch.float64)
tensor([-32.6990, -53.6640, -46.6756, -82.9953, -45.6672], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7236, device='cuda:0', dtype=torch.float64)
tensor([-33.1951, -54.3644, -46.8754, -83.4851, -46.0232], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7157, device='cuda:0', dtype=torch.float64)
tensor([-33.6945, -55.0443, -47.0811, -84.0044, -46.3389], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5651, device='cuda:0', dtype=torch.float64)
tensor([-34.1026, -55.5120, -47.2763, -84.2767, -46.5181], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7285, device='cuda:0', dtype=torch.float64)
tensor([-34.5225, -56.1027, -47.4993, -84.6087, -46.7155], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6973, device='cuda:0', dtype=torch.float64)
tensor([-34.8990, -56.8120, -47.7562, -84.9078, -46.8970], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6884, device='cuda:0', dtype=torch.float64)
tensor([-35.2926, -57.6112, -48.0058, -85.2299, -47.0826], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6661, device='cuda:0', dtype=torch.float64)
tensor([-35.9069, -58.6693, -48.3398, -85.6946, -47.4007], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5973, device='cuda:0', dtype=torch.float64)
tensor([-36.4374, -59.6629, -48.6522, -86.0674, -47.6946], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7126, device='cuda:0', dtype=torch.float64)
tensor([-36.8200, -60.5079, -48.9099, -86.3764, -47.8785], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5067, device='cuda:0', dtype=torch.float64)
tensor([-37.1738, -61.2398, -49.1250, -86.5843, -48.0269], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8138, device='cuda:0', dtype=torch.float64)
tensor([-37.5833, -62.1075, -49.3361, -86.8268, -48.2159], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6541, device='cuda:0', dtype=torch.float64)
tensor([-38.1645, -63.1205, -49.5970, -87.2038, -48.5592], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6533, device='cuda:0', dtype=torch.float64)
tensor([-38.7171, -63.9030, -49.8619, -87.4634, -48.8016], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7428, device='cuda:0', dtype=torch.float64)
tensor([-39.2106, -64.6582, -50.1435, -87.8513, -49.0633], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4998, device='cuda:0', dtype=torch.float64)
tensor([-39.6904, -65.3351, -50.4192, -88.2293, -49.3113], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6151, device='cuda:0', dtype=torch.float64)
tensor([-39.9766, -65.8149, -50.6423, -88.5157, -49.4313], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7622, device='cuda:0', dtype=torch.float64)
tensor([-40.1738, -65.9772, -50.7709, -88.7076, -49.4257], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5501, device='cuda:0', dtype=torch.float64)
tensor([-40.3969, -66.1413, -50.9011, -88.9638, -49.4657], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6435, device='cuda:0', dtype=torch.float64)
tensor([-40.5553, -66.3281, -51.0299, -89.2916, -49.5260], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7257, device='cuda:0', dtype=torch.float64)
tensor([-40.6289, -66.4175, -51.1274, -89.4640, -49.5510], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6216, device='cuda:0', dtype=torch.float64)
tensor([-40.4727, -66.2342, -51.1662, -89.4577, -49.4000], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6496, device='cuda:0', dtype=torch.float64)
tensor([-40.3579, -66.2102, -51.2388, -89.5149, -49.3204], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5074, device='cuda:0', dtype=torch.float64)
tensor([-40.2876, -66.2288, -51.3403, -89.6615, -49.2640], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7307, device='cuda:0', dtype=torch.float64)
tensor([-40.1536, -66.0437, -51.3743, -89.6557, -49.0983], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6416, device='cuda:0', dtype=torch.float64)
tensor([-40.0866, -65.9434, -51.4321, -89.6669, -48.9127], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5660, device='cuda:0', dtype=torch.float64)
tensor([-40.2534, -66.1901, -51.5486, -89.9554, -48.9637], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6814, device='cuda:0', dtype=torch.float64)
tensor([-40.4563, -66.3096, -51.6834, -90.2053, -48.8795], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7015, device='cuda:0', dtype=torch.float64)
tensor([-40.3554, -66.0855, -51.6566, -90.0371, -48.5544], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6790, device='cuda:0', dtype=torch.float64)
tensor([-40.2306, -65.9085, -51.6728, -89.9273, -48.2710], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6375, device='cuda:0', dtype=torch.float64)
tensor([-40.2548, -65.8443, -51.7244, -90.0296, -48.0998], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6575, device='cuda:0', dtype=torch.float64)
tensor([-40.2869, -65.7399, -51.8244, -90.1895, -47.9550], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6755, device='cuda:0', dtype=torch.float64)
tensor([-40.4412, -65.7635, -51.9307, -90.3694, -47.9755], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6016, device='cuda:0', dtype=torch.float64)
tensor([-40.4994, -65.7112, -52.0063, -90.4713, -48.0039], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5734, device='cuda:0', dtype=torch.float64)
tensor([-40.4523, -65.3592, -52.0802, -90.3652, -47.9021], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6959, device='cuda:0', dtype=torch.float64)
tensor([-40.3422, -65.0545, -52.1185, -90.3144, -47.7478], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6743, device='cuda:0', dtype=torch.float64)
tensor([-40.3542, -65.0625, -52.2159, -90.4785, -47.6943], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6561, device='cuda:0', dtype=torch.float64)
tensor([-40.4840, -65.1143, -52.3764, -90.7863, -47.7159], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5964, device='cuda:0', dtype=torch.float64)
tensor([-40.7144, -65.3772, -52.5688, -91.2307, -47.8295], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6062, device='cuda:0', dtype=torch.float64)
tensor([-40.9219, -65.7340, -52.7330, -91.6150, -47.9344], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7395, device='cuda:0', dtype=torch.float64)
tensor([-41.2895, -66.5785, -52.9466, -92.2658, -48.2501], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7268, device='cuda:0', dtype=torch.float64)
tensor([-41.7019, -67.4883, -53.2326, -92.9122, -48.5805], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5592, device='cuda:0', dtype=torch.float64)
tensor([-42.0779, -68.2517, -53.5240, -93.5022, -48.8960], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5555, device='cuda:0', dtype=torch.float64)
tensor([-42.4775, -69.0180, -53.7872, -94.0786, -49.2190], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7730, device='cuda:0', dtype=torch.float64)
tensor([-43.0311, -69.9515, -54.1166, -94.8241, -49.6943], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6493, device='cuda:0', dtype=torch.float64)
tensor([-43.5592, -70.7651, -54.3709, -95.3689, -50.0849], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6674, device='cuda:0', dtype=torch.float64)
tensor([-44.0809, -71.7107, -54.6468, -96.0403, -50.5517], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5496, device='cuda:0', dtype=torch.float64)
tensor([-44.6316, -72.5785, -54.9292, -96.7278, -50.9855], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5977, device='cuda:0', dtype=torch.float64)
tensor([-45.1042, -73.4448, -55.1651, -97.2679, -51.3646], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6245, device='cuda:0', dtype=torch.float64)
tensor([-45.6773, -74.2862, -55.4384, -97.8537, -51.7609], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6659, device='cuda:0', dtype=torch.float64)
tensor([-46.1141, -74.8715, -55.6600, -98.2747, -52.0234], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7326, device='cuda:0', dtype=torch.float64)
tensor([-46.4410, -75.3250, -55.8443, -98.5564, -52.1594], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6045, device='cuda:0', dtype=torch.float64)
tensor([-46.9453, -75.9624, -56.0243, -98.9129, -52.4257], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5990, device='cuda:0', dtype=torch.float64)
tensor([-47.4711, -76.5192, -56.2151, -99.3397, -52.6793], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5648, device='cuda:0', dtype=torch.float64)
tensor([-47.9427, -77.0693, -56.4122, -99.7543, -52.9040], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6309, device='cuda:0', dtype=torch.float64)
tensor([-48.1574, -77.3135, -56.5306, -99.8893, -52.9654], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6421, device='cuda:0', dtype=torch.float64)
tensor([ -48.5163,  -77.6275,  -56.6905, -100.1075,  -53.0002],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5555, device='cuda:0', dtype=torch.float64)
tensor([ -48.7110,  -77.7098,  -56.8060, -100.1090,  -52.9232],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5203, device='cuda:0', dtype=torch.float64)
tensor([ -49.0488,  -78.0239,  -56.9739, -100.2666,  -53.0109],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6837, device='cuda:0', dtype=torch.float64)
tensor([ -49.2574,  -78.2150,  -57.1133, -100.3090,  -53.0657],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5878, device='cuda:0', dtype=torch.float64)
tensor([ -49.6900,  -78.5872,  -57.3366, -100.5514,  -53.2733],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7883, device='cuda:0', dtype=torch.float64)
tensor([ -50.0781,  -79.0169,  -57.5211, -100.8765,  -53.5048],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7045, device='cuda:0', dtype=torch.float64)
tensor([ -50.5458,  -79.6054,  -57.7575, -101.3956,  -53.8879],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5480, device='cuda:0', dtype=torch.float64)
tensor([ -51.0900,  -80.2154,  -58.0055, -101.9846,  -54.3298],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6442, device='cuda:0', dtype=torch.float64)
tensor([ -51.6527,  -80.7694,  -58.2698, -102.5978,  -54.7916],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5840, device='cuda:0', dtype=torch.float64)
tensor([ -51.8772,  -80.9422,  -58.4068, -102.8511,  -54.9820],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6873, device='cuda:0', dtype=torch.float64)
tensor([ -52.5008,  -81.6467,  -58.5284, -103.5288,  -55.4882],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6226, device='cuda:0', dtype=torch.float64)
tensor([ -53.2414,  -82.4824,  -58.7069, -104.3006,  -56.0571],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5717, device='cuda:0', dtype=torch.float64)
tensor([ -53.9790,  -83.1790,  -58.7971, -104.8680,  -56.5723],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5890, device='cuda:0', dtype=torch.float64)
tensor([ -54.4649,  -83.8359,  -58.7786, -105.3140,  -57.0273],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7322, device='cuda:0', dtype=torch.float64)
tensor([ -54.7249,  -84.3121,  -58.7428, -105.5096,  -57.4120],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6153, device='cuda:0', dtype=torch.float64)
tensor([ -55.1538,  -84.8854,  -58.7425, -105.8159,  -57.9103],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6123, device='cuda:0', dtype=torch.float64)
tensor([ -55.4285,  -85.2680,  -58.7354, -106.0678,  -58.3297],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5513, device='cuda:0', dtype=torch.float64)
tensor([ -55.5934,  -85.5812,  -58.7609, -106.3399,  -58.6397],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6798, device='cuda:0', dtype=torch.float64)
tensor([ -55.8308,  -85.9227,  -58.7653, -106.6845,  -59.0129],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5758, device='cuda:0', dtype=torch.float64)
tensor([ -56.1363,  -86.3850,  -58.8077, -106.9878,  -59.3916],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5730, device='cuda:0', dtype=torch.float64)
tensor([ -56.3261,  -86.9312,  -58.8140, -107.2805,  -59.8117],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7016, device='cuda:0', dtype=torch.float64)
tensor([ -56.1555,  -86.9243,  -58.7831, -107.2771,  -59.8596],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5126, device='cuda:0', dtype=torch.float64)
tensor([ -55.9988,  -87.0230,  -58.7659, -107.4365,  -59.9834],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7395, device='cuda:0', dtype=torch.float64)
tensor([ -55.6779,  -86.9310,  -58.6821, -107.3956,  -59.9473],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6179, device='cuda:0', dtype=torch.float64)
tensor([ -55.3937,  -86.8571,  -58.5775, -107.3286,  -59.9199],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5911, device='cuda:0', dtype=torch.float64)
tensor([ -55.3277,  -86.8994,  -58.5196, -107.3594,  -60.1232],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6646, device='cuda:0', dtype=torch.float64)
tensor([ -55.4439,  -87.1821,  -58.5538, -107.5820,  -60.4707],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5755, device='cuda:0', dtype=torch.float64)
tensor([ -55.3606,  -87.3171,  -58.5427, -107.6470,  -60.7192],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6065, device='cuda:0', dtype=torch.float64)
tensor([ -55.6373,  -87.8595,  -58.5758, -107.9304,  -61.2032],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5783, device='cuda:0', dtype=torch.float64)
tensor([ -56.0742,  -88.5483,  -58.6017, -108.2590,  -61.8275],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5836, device='cuda:0', dtype=torch.float64)
tensor([ -56.6006,  -89.3811,  -58.6620, -108.7686,  -62.5463],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5302, device='cuda:0', dtype=torch.float64)
tensor([ -56.9632,  -89.7312,  -58.7430, -109.1312,  -63.1092],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8131, device='cuda:0', dtype=torch.float64)
tensor([ -57.0952,  -89.8939,  -58.7250, -109.1735,  -63.4759],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6187, device='cuda:0', dtype=torch.float64)
tensor([ -57.3417,  -90.2714,  -58.7473, -109.3476,  -63.8917],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6178, device='cuda:0', dtype=torch.float64)
tensor([ -57.2745,  -90.2894,  -58.7059, -109.2214,  -63.9136],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6506, device='cuda:0', dtype=torch.float64)
tensor([ -57.2939,  -90.2535,  -58.7089, -109.2027,  -63.8496],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6354, device='cuda:0', dtype=torch.float64)
tensor([ -57.4020,  -90.2994,  -58.7579, -109.1858,  -63.7978],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5705, device='cuda:0', dtype=torch.float64)
tensor([ -57.4017,  -90.1450,  -58.7795, -108.9755,  -63.6494],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7719, device='cuda:0', dtype=torch.float64)
tensor([ -57.0975,  -89.6406,  -58.7486, -108.5657,  -63.2073],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4913, device='cuda:0', dtype=torch.float64)
tensor([ -57.0259,  -89.6016,  -58.7387, -108.3662,  -62.9225],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6262, device='cuda:0', dtype=torch.float64)
tensor([ -57.2290,  -89.8653,  -58.7301, -108.3175,  -62.8903],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6725, device='cuda:0', dtype=torch.float64)
tensor([ -57.6231,  -90.4680,  -58.7934, -108.4554,  -63.1446],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5162, device='cuda:0', dtype=torch.float64)
tensor([ -57.9932,  -90.9325,  -58.8984, -108.6244,  -63.3841],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5573, device='cuda:0', dtype=torch.float64)
tensor([ -58.4883,  -91.6839,  -58.9853, -108.9736,  -63.7524],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5960, device='cuda:0', dtype=torch.float64)
tensor([ -58.7886,  -92.1249,  -59.0892, -109.1729,  -64.0000],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5447, device='cuda:0', dtype=torch.float64)
tensor([ -59.1032,  -92.6188,  -59.2505, -109.4253,  -64.2618],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6758, device='cuda:0', dtype=torch.float64)
tensor([ -59.5492,  -93.0591,  -59.3982, -109.7198,  -64.6117],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6210, device='cuda:0', dtype=torch.float64)
tensor([ -60.1733,  -93.6397,  -59.5502, -110.0245,  -65.1199],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5822, device='cuda:0', dtype=torch.float64)
tensor([ -60.7595,  -94.1670,  -59.6960, -110.2526,  -65.5274],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4960, device='cuda:0', dtype=torch.float64)
tensor([ -61.1836,  -94.5599,  -59.7940, -110.3632,  -65.7879],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5364, device='cuda:0', dtype=torch.float64)
tensor([ -61.6719,  -95.0102,  -59.9164, -110.6033,  -66.1123],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6372, device='cuda:0', dtype=torch.float64)
tensor([ -61.9668,  -95.3088,  -59.9466, -110.6950,  -66.1930],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6406, device='cuda:0', dtype=torch.float64)
tensor([ -62.3038,  -95.6952,  -59.9147, -110.8296,  -66.2734],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5680, device='cuda:0', dtype=torch.float64)
tensor([ -62.6507,  -96.0834,  -59.8538, -111.0341,  -66.2959],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6857, device='cuda:0', dtype=torch.float64)
tensor([ -62.6677,  -96.2450,  -59.6890, -110.9658,  -66.0376],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5474, device='cuda:0', dtype=torch.float64)
tensor([ -62.5454,  -96.3862,  -59.5060, -110.7908,  -65.7013],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6426, device='cuda:0', dtype=torch.float64)
tensor([ -62.6129,  -96.4166,  -59.4023, -110.8065,  -65.5173],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5418, device='cuda:0', dtype=torch.float64)
tensor([ -62.8407,  -96.7072,  -59.3763, -110.9853,  -65.5134],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6825, device='cuda:0', dtype=torch.float64)
tensor([ -63.3029,  -97.3356,  -59.4830, -111.4224,  -65.7130],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6437, device='cuda:0', dtype=torch.float64)
tensor([ -63.7867,  -98.0601,  -59.6365, -111.9092,  -65.9484],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6346, device='cuda:0', dtype=torch.float64)
tensor([ -64.1557,  -98.5799,  -59.8021, -112.3005,  -66.0820],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6286, device='cuda:0', dtype=torch.float64)
tensor([ -64.2844,  -98.7421,  -59.8758, -112.3934,  -65.8520],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6090, device='cuda:0', dtype=torch.float64)
tensor([ -64.0515,  -98.6533,  -59.9118, -112.1484,  -65.3631],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6089, device='cuda:0', dtype=torch.float64)
tensor([ -63.5357,  -98.0935,  -59.9015, -111.7405,  -64.5862],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6168, device='cuda:0', dtype=torch.float64)
tensor([ -63.4844,  -97.9648,  -59.9763, -111.7734,  -64.2320],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6186, device='cuda:0', dtype=torch.float64)
tensor([ -63.1419,  -97.3503,  -59.9864, -111.5840,  -63.5953],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6210, device='cuda:0', dtype=torch.float64)
tensor([ -62.4459,  -96.2828,  -59.8740, -111.1483,  -62.6942],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5560, device='cuda:0', dtype=torch.float64)
tensor([ -62.0665,  -95.6273,  -59.8365, -110.9234,  -62.1612],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5212, device='cuda:0', dtype=torch.float64)
tensor([ -61.8254,  -95.1279,  -59.8140, -110.9292,  -61.7764],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5211, device='cuda:0', dtype=torch.float64)
tensor([ -61.5030,  -94.6369,  -59.7770, -110.7903,  -61.3628],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5568, device='cuda:0', dtype=torch.float64)
tensor([ -61.2961,  -94.3787,  -59.7807, -110.6765,  -61.0585],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6427, device='cuda:0', dtype=torch.float64)
tensor([ -61.3626,  -94.5560,  -59.8418, -110.7240,  -61.0110],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6351, device='cuda:0', dtype=torch.float64)
tensor([ -61.5959,  -94.9677,  -59.9713, -110.8845,  -61.2059],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6380, device='cuda:0', dtype=torch.float64)
tensor([ -62.1133,  -95.7494,  -60.1528, -111.2158,  -61.6108],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5888, device='cuda:0', dtype=torch.float64)
tensor([ -62.6800,  -96.6296,  -60.3703, -111.5731,  -62.0811],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6447, device='cuda:0', dtype=torch.float64)
tensor([ -63.0883,  -97.2945,  -60.5259, -111.7301,  -62.4852],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6615, device='cuda:0', dtype=torch.float64)
tensor([ -63.4088,  -97.7817,  -60.6906, -111.7844,  -62.6980],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5561, device='cuda:0', dtype=torch.float64)
tensor([ -63.8813,  -98.4454,  -60.9401, -112.0866,  -63.0560],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5816, device='cuda:0', dtype=torch.float64)
tensor([ -64.3026,  -99.0774,  -61.1990, -112.3426,  -63.4230],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5481, device='cuda:0', dtype=torch.float64)
tensor([ -64.8584,  -99.7591,  -61.4185, -112.5464,  -63.9073],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5814, device='cuda:0', dtype=torch.float64)
tensor([ -65.4058, -100.4343,  -61.6516, -112.8858,  -64.4641],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5524, device='cuda:0', dtype=torch.float64)
tensor([ -65.9248, -101.1795,  -61.9058, -113.2212,  -65.0685],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6170, device='cuda:0', dtype=torch.float64)
tensor([ -66.4917, -101.9467,  -62.1881, -113.5403,  -65.7026],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5926, device='cuda:0', dtype=torch.float64)
tensor([ -67.0049, -102.6023,  -62.4787, -113.8403,  -66.2547],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5993, device='cuda:0', dtype=torch.float64)
tensor([ -67.5795, -103.3505,  -62.7372, -114.1818,  -66.8296],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5480, device='cuda:0', dtype=torch.float64)
tensor([ -67.8733, -103.6700,  -62.9426, -114.2233,  -67.1419],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5094, device='cuda:0', dtype=torch.float64)
tensor([ -67.9615, -103.7875,  -63.1333, -114.1726,  -67.2565],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5445, device='cuda:0', dtype=torch.float64)
tensor([ -68.0381, -103.7216,  -63.2735, -114.0352,  -67.2509],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6164, device='cuda:0', dtype=torch.float64)
tensor([ -67.9606, -103.4524,  -63.3728, -113.7113,  -67.0749],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5701, device='cuda:0', dtype=torch.float64)
tensor([ -67.9700, -103.2298,  -63.4382, -113.4863,  -66.8718],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5453, device='cuda:0', dtype=torch.float64)
tensor([ -67.9841, -102.9979,  -63.5114, -113.3458,  -66.7169],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5476, device='cuda:0', dtype=torch.float64)
tensor([ -67.6897, -102.4272,  -63.5311, -112.8653,  -66.2182],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5181, device='cuda:0', dtype=torch.float64)
tensor([ -67.4090, -101.7952,  -63.5344, -112.4127,  -65.7496],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6101, device='cuda:0', dtype=torch.float64)
tensor([ -67.0261, -100.9606,  -63.5371, -111.8958,  -65.2444],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5298, device='cuda:0', dtype=torch.float64)
tensor([ -66.5890, -100.0859,  -63.5216, -111.3265,  -64.7042],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5713, device='cuda:0', dtype=torch.float64)
tensor([ -66.3511,  -99.5263,  -63.5437, -110.9105,  -64.3986],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5994, device='cuda:0', dtype=torch.float64)
tensor([ -66.1079,  -98.9575,  -63.5841, -110.5832,  -64.1056],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5188, device='cuda:0', dtype=torch.float64)
tensor([ -65.7059,  -98.0722,  -63.5862, -110.1830,  -63.6881],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5742, device='cuda:0', dtype=torch.float64)
tensor([ -65.4717,  -97.2046,  -63.6223, -109.8855,  -63.3711],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4994, device='cuda:0', dtype=torch.float64)
tensor([ -65.3454,  -96.3601,  -63.6459, -109.7026,  -63.1705],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6187, device='cuda:0', dtype=torch.float64)
tensor([ -65.0174,  -95.4139,  -63.6412, -109.3765,  -62.8268],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4939, device='cuda:0', dtype=torch.float64)
tensor([ -64.5553,  -94.4093,  -63.5597, -108.9226,  -62.3966],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5965, device='cuda:0', dtype=torch.float64)
tensor([ -64.4033,  -93.9315,  -63.5151, -108.6870,  -62.3090],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5619, device='cuda:0', dtype=torch.float64)
tensor([ -64.3813,  -93.6780,  -63.5329, -108.4954,  -62.3540],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5651, device='cuda:0', dtype=torch.float64)
tensor([ -64.4146,  -93.4669,  -63.5726, -108.2448,  -62.3649],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4665, device='cuda:0', dtype=torch.float64)
tensor([ -64.6306,  -93.5687,  -63.6663, -108.2168,  -62.5023],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5922, device='cuda:0', dtype=torch.float64)
tensor([ -65.1588,  -93.9385,  -63.7668, -108.5037,  -62.8822],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6618, device='cuda:0', dtype=torch.float64)
tensor([ -65.9549,  -94.7116,  -63.9586, -109.0309,  -63.5381],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6422, device='cuda:0', dtype=torch.float64)
tensor([ -66.5466,  -95.2865,  -64.0800, -109.3201,  -64.0367],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6512, device='cuda:0', dtype=torch.float64)
tensor([ -67.1920,  -96.0422,  -64.2069, -109.5410,  -64.6093],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5143, device='cuda:0', dtype=torch.float64)
tensor([ -67.7377,  -96.6823,  -64.3472, -109.6918,  -65.0935],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6343, device='cuda:0', dtype=torch.float64)
tensor([ -68.0582,  -97.1982,  -64.4769, -109.7054,  -65.4466],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6536, device='cuda:0', dtype=torch.float64)
tensor([ -68.2029,  -97.4883,  -64.5588, -109.6470,  -65.6064],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5414, device='cuda:0', dtype=torch.float64)
tensor([ -68.4300,  -98.1075,  -64.6905, -109.7198,  -65.9132],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6536, device='cuda:0', dtype=torch.float64)
tensor([ -68.6041,  -98.4680,  -64.8967, -109.7238,  -66.1271],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5637, device='cuda:0', dtype=torch.float64)
tensor([ -69.0683,  -99.1004,  -65.1502, -109.9342,  -66.6043],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5660, device='cuda:0', dtype=torch.float64)
tensor([ -69.5299,  -99.7003,  -65.3995, -110.1410,  -67.0376],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4931, device='cuda:0', dtype=torch.float64)
tensor([ -69.7478,  -99.9614,  -65.6177, -110.1825,  -67.1739],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4758, device='cuda:0', dtype=torch.float64)
tensor([ -69.9056, -100.0416,  -65.7934, -110.1831,  -67.1878],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5603, device='cuda:0', dtype=torch.float64)
tensor([ -69.9522, -100.0015,  -65.8819, -110.0149,  -66.9999],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5355, device='cuda:0', dtype=torch.float64)
tensor([ -69.9697,  -99.8961,  -65.9648, -109.8701,  -66.8417],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5244, device='cuda:0', dtype=torch.float64)
tensor([ -70.1532, -100.0338,  -66.1101, -110.0192,  -66.9728],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6308, device='cuda:0', dtype=torch.float64)
tensor([ -70.3286,  -99.9955,  -66.2509, -110.1229,  -66.9648],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5830, device='cuda:0', dtype=torch.float64)
tensor([ -70.8157, -100.2776,  -66.4239, -110.3893,  -67.1103],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6260, device='cuda:0', dtype=torch.float64)
tensor([ -71.2595, -100.3258,  -66.5814, -110.6542,  -67.1299],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5387, device='cuda:0', dtype=torch.float64)
tensor([ -71.3669, -100.0137,  -66.5950, -110.7223,  -66.9626],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4792, device='cuda:0', dtype=torch.float64)
tensor([ -71.4597,  -99.7744,  -66.6248, -110.7907,  -66.7622],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5938, device='cuda:0', dtype=torch.float64)
tensor([ -71.5695,  -99.6279,  -66.6560, -110.9311,  -66.6168],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5086, device='cuda:0', dtype=torch.float64)
tensor([ -71.7321,  -99.5026,  -66.7729, -111.1406,  -66.5724],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5412, device='cuda:0', dtype=torch.float64)
tensor([ -71.9205,  -99.6012,  -66.8901, -111.3167,  -66.6404],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5562, device='cuda:0', dtype=torch.float64)
tensor([ -72.2949, -100.0863,  -66.9853, -111.7465,  -66.9850],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5452, device='cuda:0', dtype=torch.float64)
tensor([ -72.7133, -100.3994,  -67.1086, -112.2363,  -67.2906],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5366, device='cuda:0', dtype=torch.float64)
tensor([ -73.0013, -100.7292,  -67.1934, -112.6742,  -67.4774],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5630, device='cuda:0', dtype=torch.float64)
tensor([ -73.3235, -101.1610,  -67.3324, -113.1295,  -67.6747],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6435, device='cuda:0', dtype=torch.float64)
tensor([ -73.4116, -101.3457,  -67.4444, -113.4148,  -67.7394],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5099, device='cuda:0', dtype=torch.float64)
tensor([ -73.3911, -101.3449,  -67.5353, -113.6135,  -67.6886],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4740, device='cuda:0', dtype=torch.float64)
tensor([ -73.3588, -101.2483,  -67.5583, -113.7681,  -67.6076],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5526, device='cuda:0', dtype=torch.float64)
tensor([ -73.5106, -101.4306,  -67.6884, -114.2233,  -67.7862],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4713, device='cuda:0', dtype=torch.float64)
tensor([ -73.6432, -101.6868,  -67.8255, -114.7531,  -67.9936],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5389, device='cuda:0', dtype=torch.float64)
tensor([ -73.7238, -101.8515,  -67.9719, -115.1330,  -68.1233],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5031, device='cuda:0', dtype=torch.float64)
tensor([ -73.5886, -101.6383,  -68.1052, -115.2125,  -67.9190],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6133, device='cuda:0', dtype=torch.float64)
tensor([ -73.4000, -101.4725,  -68.2654, -115.4170,  -67.7895],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4830, device='cuda:0', dtype=torch.float64)
tensor([ -73.3079, -101.5590,  -68.4680, -115.7665,  -67.8047],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5510, device='cuda:0', dtype=torch.float64)
tensor([ -73.3926, -101.7944,  -68.6677, -116.2022,  -67.9405],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5374, device='cuda:0', dtype=torch.float64)
tensor([ -73.8214, -102.5574,  -68.9551, -117.0112,  -68.4255],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5420, device='cuda:0', dtype=torch.float64)
tensor([ -74.3273, -103.5668,  -69.2681, -117.9476,  -69.1163],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5781, device='cuda:0', dtype=torch.float64)
tensor([ -74.6121, -104.3120,  -69.6072, -118.6568,  -69.5571],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4765, device='cuda:0', dtype=torch.float64)
tensor([ -74.7385, -104.8659,  -69.9242, -119.1581,  -69.8616],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5043, device='cuda:0', dtype=torch.float64)
tensor([ -74.5713, -105.0024,  -70.1577, -119.3419,  -69.7687],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5808, device='cuda:0', dtype=torch.float64)
tensor([ -74.0887, -104.6911,  -70.2854, -119.2135,  -69.3255],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5213, device='cuda:0', dtype=torch.float64)
tensor([ -73.7205, -104.3405,  -70.3838, -119.1318,  -68.8910],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5151, device='cuda:0', dtype=torch.float64)
tensor([ -73.2990, -103.8199,  -70.4154, -118.9159,  -68.3418],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5611, device='cuda:0', dtype=torch.float64)
tensor([ -73.1650, -103.7435,  -70.4656, -119.0788,  -68.2245],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4893, device='cuda:0', dtype=torch.float64)
tensor([ -73.0098, -103.7032,  -70.5125, -119.2509,  -68.1710],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5681, device='cuda:0', dtype=torch.float64)
tensor([ -73.0367, -103.6435,  -70.5813, -119.4394,  -68.2497],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5669, device='cuda:0', dtype=torch.float64)
tensor([ -73.0813, -103.4345,  -70.6277, -119.5018,  -68.2699],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4992, device='cuda:0', dtype=torch.float64)
tensor([ -73.3588, -103.6016,  -70.7208, -119.8240,  -68.5082],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4859, device='cuda:0', dtype=torch.float64)
tensor([ -73.7399, -103.7786,  -70.8500, -120.2380,  -68.8354],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5510, device='cuda:0', dtype=torch.float64)
tensor([ -74.5055, -104.5132,  -71.0766, -121.0441,  -69.6845],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5903, device='cuda:0', dtype=torch.float64)
tensor([ -75.4961, -105.6314,  -71.3697, -122.0911,  -70.8970],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5496, device='cuda:0', dtype=torch.float64)
tensor([ -76.2948, -106.5659,  -71.6803, -122.9649,  -71.9399],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4660, device='cuda:0', dtype=torch.float64)
tensor([ -76.9933, -107.3439,  -71.9615, -123.5904,  -72.8504],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5728, device='cuda:0', dtype=torch.float64)
tensor([ -77.7331, -108.1155,  -72.2009, -124.1686,  -73.8254],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5781, device='cuda:0', dtype=torch.float64)
tensor([ -78.3038, -108.6055,  -72.3655, -124.5813,  -74.5084],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5813, device='cuda:0', dtype=torch.float64)
tensor([ -78.9281, -109.1744,  -72.4614, -124.9223,  -75.1881],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5352, device='cuda:0', dtype=torch.float64)
tensor([ -79.6285, -110.0728,  -72.5601, -125.3297,  -75.9603],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4828, device='cuda:0', dtype=torch.float64)
tensor([ -80.1359, -110.8526,  -72.5949, -125.6934,  -76.5084],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6513, device='cuda:0', dtype=torch.float64)
tensor([ -80.7851, -111.7122,  -72.6577, -126.1174,  -77.2420],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5969, device='cuda:0', dtype=torch.float64)
tensor([ -81.5100, -112.5686,  -72.7453, -126.5869,  -77.9899],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5635, device='cuda:0', dtype=torch.float64)
tensor([ -82.4381, -113.4718,  -72.8493, -127.2376,  -78.9226],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5349, device='cuda:0', dtype=torch.float64)
tensor([ -83.4256, -114.4706,  -73.0010, -127.9465,  -79.9797],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4883, device='cuda:0', dtype=torch.float64)
tensor([ -84.1143, -115.2600,  -73.0497, -128.3679,  -80.7360],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5816, device='cuda:0', dtype=torch.float64)
tensor([ -84.8013, -116.0754,  -73.1234, -128.8699,  -81.6989],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5667, device='cuda:0', dtype=torch.float64)
tensor([ -85.5025, -116.7868,  -73.1630, -129.4528,  -82.6035],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4358, device='cuda:0', dtype=torch.float64)
tensor([ -85.9606, -117.1553,  -73.1268, -129.8177,  -83.1287],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5716, device='cuda:0', dtype=torch.float64)
tensor([ -86.1681, -117.3103,  -73.0308, -130.0733,  -83.2596],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4977, device='cuda:0', dtype=torch.float64)
tensor([ -86.5075, -117.5262,  -72.9808, -130.2998,  -83.5796],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4768, device='cuda:0', dtype=torch.float64)
tensor([ -86.8647, -117.4881,  -72.9833, -130.5372,  -83.8539],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5562, device='cuda:0', dtype=torch.float64)
tensor([ -87.2480, -117.6449,  -73.0098, -130.8572,  -84.2139],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6174, device='cuda:0', dtype=torch.float64)
tensor([ -87.0443, -117.3611,  -72.9555, -130.7956,  -83.9804],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4786, device='cuda:0', dtype=torch.float64)
tensor([ -86.6677, -117.0157,  -72.8861, -130.6107,  -83.5947],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5961, device='cuda:0', dtype=torch.float64)
tensor([ -86.1427, -116.4738,  -72.8510, -130.4295,  -83.1637],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5385, device='cuda:0', dtype=torch.float64)
tensor([ -85.7008, -116.1885,  -72.8612, -130.3143,  -82.9053],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5496, device='cuda:0', dtype=torch.float64)
tensor([ -85.5798, -116.2597,  -72.9043, -130.4331,  -82.9829],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5104, device='cuda:0', dtype=torch.float64)
tensor([ -85.4891, -116.4323,  -72.9216, -130.5696,  -83.0751],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5364, device='cuda:0', dtype=torch.float64)
tensor([ -85.1906, -116.2612,  -72.9075, -130.5078,  -82.9097],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4687, device='cuda:0', dtype=torch.float64)
tensor([ -84.9138, -116.1807,  -72.8725, -130.3409,  -82.7182],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4825, device='cuda:0', dtype=torch.float64)
tensor([ -84.4662, -115.8421,  -72.8116, -130.0008,  -82.1756],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5009, device='cuda:0', dtype=torch.float64)
tensor([ -83.8106, -115.1393,  -72.6816, -129.5390,  -81.4221],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5019, device='cuda:0', dtype=torch.float64)
tensor([ -83.1191, -114.2366,  -72.5714, -129.0341,  -80.6589],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5871, device='cuda:0', dtype=torch.float64)
tensor([ -82.1510, -113.1888,  -72.4014, -128.3193,  -79.6058],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4192, device='cuda:0', dtype=torch.float64)
tensor([ -81.4258, -112.3957,  -72.3033, -127.7756,  -78.8573],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5508, device='cuda:0', dtype=torch.float64)
tensor([ -80.9868, -112.0353,  -72.2638, -127.4627,  -78.5218],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4906, device='cuda:0', dtype=torch.float64)
tensor([ -80.6213, -111.7657,  -72.2459, -127.1788,  -78.2719],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5042, device='cuda:0', dtype=torch.float64)
tensor([ -80.2677, -111.5646,  -72.2372, -126.9223,  -78.0398],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5145, device='cuda:0', dtype=torch.float64)
tensor([ -80.0479, -111.4373,  -72.3475, -126.8426,  -77.9636],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4951, device='cuda:0', dtype=torch.float64)
tensor([ -79.8700, -111.3815,  -72.4439, -126.7669,  -77.8321],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5322, device='cuda:0', dtype=torch.float64)
tensor([ -79.5035, -111.1041,  -72.4514, -126.4564,  -77.4773],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5403, device='cuda:0', dtype=torch.float64)
tensor([ -79.1332, -110.8192,  -72.4741, -126.1099,  -77.1170],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4995, device='cuda:0', dtype=torch.float64)
tensor([ -78.9990, -110.7880,  -72.5089, -125.9027,  -77.1385],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4409, device='cuda:0', dtype=torch.float64)
tensor([ -78.9102, -110.7236,  -72.5501, -125.6925,  -77.1425],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5249, device='cuda:0', dtype=torch.float64)
tensor([ -78.8476, -110.6537,  -72.6316, -125.5893,  -77.1178],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4813, device='cuda:0', dtype=torch.float64)
tensor([ -78.7230, -110.6504,  -72.6792, -125.5581,  -77.1179],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5228, device='cuda:0', dtype=torch.float64)
tensor([ -78.7203, -110.9095,  -72.7511, -125.6623,  -77.3265],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5430, device='cuda:0', dtype=torch.float64)
tensor([ -78.6876, -111.1191,  -72.7654, -125.7021,  -77.4389],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4868, device='cuda:0', dtype=torch.float64)
tensor([ -78.6706, -111.3611,  -72.7978, -125.6676,  -77.5272],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5225, device='cuda:0', dtype=torch.float64)
tensor([ -78.7212, -111.7330,  -72.8600, -125.7159,  -77.6918],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4524, device='cuda:0', dtype=torch.float64)
tensor([ -79.1039, -112.2579,  -72.9950, -125.9680,  -78.1658],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5101, device='cuda:0', dtype=torch.float64)
tensor([ -79.5874, -112.7187,  -73.0987, -126.2217,  -78.6730],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5639, device='cuda:0', dtype=torch.float64)
tensor([ -80.0089, -113.0914,  -73.1508, -126.4161,  -79.0697],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5331, device='cuda:0', dtype=torch.float64)
tensor([ -80.3161, -113.3794,  -73.1804, -126.4672,  -79.4355],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5284, device='cuda:0', dtype=torch.float64)
tensor([ -80.6082, -113.7083,  -73.1861, -126.5091,  -79.8173],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4312, device='cuda:0', dtype=torch.float64)
tensor([ -80.8739, -114.0685,  -73.1783, -126.5914,  -80.0898],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5576, device='cuda:0', dtype=torch.float64)
tensor([ -81.1918, -114.4943,  -73.2211, -126.7619,  -80.4299],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4830, device='cuda:0', dtype=torch.float64)
tensor([ -81.5959, -114.9529,  -73.3022, -127.0332,  -80.8601],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5429, device='cuda:0', dtype=torch.float64)
tensor([ -82.0060, -115.4741,  -73.3545, -127.3319,  -81.2600],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5228, device='cuda:0', dtype=torch.float64)
tensor([ -82.5533, -116.0820,  -73.4446, -127.8231,  -81.9193],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5610, device='cuda:0', dtype=torch.float64)
tensor([ -83.2197, -116.7880,  -73.5729, -128.4180,  -82.6516],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5019, device='cuda:0', dtype=torch.float64)
tensor([ -83.6801, -117.1129,  -73.6675, -128.7835,  -83.0842],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5386, device='cuda:0', dtype=torch.float64)
tensor([ -84.0870, -117.3853,  -73.7697, -129.0778,  -83.5241],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4937, device='cuda:0', dtype=torch.float64)
tensor([ -84.1285, -117.4716,  -73.8165, -129.1519,  -83.5251],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4716, device='cuda:0', dtype=torch.float64)
tensor([ -84.1738, -117.6339,  -73.8508, -129.2567,  -83.5553],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4428, device='cuda:0', dtype=torch.float64)
tensor([ -84.1127, -117.6974,  -73.8816, -129.2465,  -83.4677],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4737, device='cuda:0', dtype=torch.float64)
tensor([ -83.9831, -117.7148,  -73.9287, -129.2606,  -83.3501],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5077, device='cuda:0', dtype=torch.float64)
tensor([ -84.1265, -118.1779,  -74.0370, -129.4758,  -83.5434],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4277, device='cuda:0', dtype=torch.float64)
tensor([ -84.3945, -118.6955,  -74.1991, -129.7940,  -83.8212],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6082, device='cuda:0', dtype=torch.float64)
tensor([ -84.7616, -119.2124,  -74.4187, -130.1742,  -84.1804],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5594, device='cuda:0', dtype=torch.float64)
tensor([ -85.3655, -120.1074,  -74.7037, -130.7898,  -84.8130],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4594, device='cuda:0', dtype=torch.float64)
tensor([ -86.1548, -120.9750,  -75.0226, -131.5298,  -85.5625],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5186, device='cuda:0', dtype=torch.float64)
tensor([ -86.5621, -121.5317,  -75.2583, -131.9776,  -85.9875],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5014, device='cuda:0', dtype=torch.float64)
tensor([ -87.0621, -122.2520,  -75.5272, -132.4824,  -86.5951],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4219, device='cuda:0', dtype=torch.float64)
tensor([ -87.6026, -123.0604,  -75.8133, -133.1118,  -87.0813],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5235, device='cuda:0', dtype=torch.float64)
tensor([ -88.2869, -123.7151,  -76.1448, -133.7765,  -87.7095],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5585, device='cuda:0', dtype=torch.float64)
tensor([ -89.0836, -124.3623,  -76.4662, -134.4365,  -88.4362],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5089, device='cuda:0', dtype=torch.float64)
tensor([ -89.8267, -124.9526,  -76.7217, -135.0391,  -89.0922],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5037, device='cuda:0', dtype=torch.float64)
tensor([ -90.4921, -125.5270,  -76.9729, -135.4943,  -89.6419],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6053, device='cuda:0', dtype=torch.float64)
tensor([ -91.0772, -125.9709,  -77.1823, -135.9458,  -90.0698],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4825, device='cuda:0', dtype=torch.float64)
tensor([ -91.7923, -126.4941,  -77.4570, -136.5453,  -90.5924],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5076, device='cuda:0', dtype=torch.float64)
tensor([ -92.3062, -126.7078,  -77.6600, -136.8402,  -90.8165],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4712, device='cuda:0', dtype=torch.float64)
tensor([ -92.7854, -127.0962,  -77.8133, -136.9903,  -91.0495],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5480, device='cuda:0', dtype=torch.float64)
tensor([ -93.2144, -127.1441,  -77.9457, -137.1302,  -91.0295],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4885, device='cuda:0', dtype=torch.float64)
tensor([ -93.6352, -127.1718,  -78.0698, -137.2768,  -90.9622],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4500, device='cuda:0', dtype=torch.float64)
tensor([ -93.7974, -127.0301,  -78.1638, -137.2988,  -90.7265],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4749, device='cuda:0', dtype=torch.float64)
tensor([ -93.7856, -126.6979,  -78.2245, -137.2678,  -90.4674],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5085, device='cuda:0', dtype=torch.float64)
tensor([ -93.8169, -126.3042,  -78.3259, -137.2936,  -90.2915],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5081, device='cuda:0', dtype=torch.float64)
tensor([ -93.9333, -126.1172,  -78.4657, -137.3914,  -90.2398],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5024, device='cuda:0', dtype=torch.float64)
tensor([ -93.8815, -125.9889,  -78.6114, -137.4624,  -90.1337],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4558, device='cuda:0', dtype=torch.float64)
tensor([ -93.7818, -125.7658,  -78.7467, -137.4708,  -90.0388],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5056, device='cuda:0', dtype=torch.float64)
tensor([ -93.8010, -125.6443,  -78.9048, -137.6861,  -90.1199],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4919, device='cuda:0', dtype=torch.float64)
tensor([ -93.9139, -125.6702,  -79.0457, -138.0027,  -90.2734],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4406, device='cuda:0', dtype=torch.float64)
tensor([ -93.8184, -125.5322,  -79.1310, -138.0944,  -90.2661],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4773, device='cuda:0', dtype=torch.float64)
tensor([ -93.4588, -125.0919,  -79.1270, -137.9328,  -89.9537],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5080, device='cuda:0', dtype=torch.float64)
tensor([ -93.1005, -124.8546,  -79.1149, -137.6873,  -89.8484],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5125, device='cuda:0', dtype=torch.float64)
tensor([ -92.9081, -124.5067,  -79.1210, -137.5345,  -89.9484],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5307, device='cuda:0', dtype=torch.float64)
tensor([ -92.9444, -124.2019,  -79.1129, -137.5709,  -90.0950],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4077, device='cuda:0', dtype=torch.float64)
tensor([ -92.9950, -124.1767,  -79.0541, -137.5717,  -90.2449],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4976, device='cuda:0', dtype=torch.float64)
tensor([ -93.2037, -124.2129,  -79.0361, -137.7484,  -90.3671],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5473, device='cuda:0', dtype=torch.float64)
tensor([ -93.2731, -124.3241,  -78.9259, -137.9246,  -90.4134],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4659, device='cuda:0', dtype=torch.float64)
tensor([ -93.6836, -124.4822,  -78.8138, -138.2196,  -90.8243],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4436, device='cuda:0', dtype=torch.float64)
tensor([ -94.1887, -124.5150,  -78.7385, -138.5522,  -91.2559],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4437, device='cuda:0', dtype=torch.float64)
tensor([ -94.7834, -124.6576,  -78.7016, -138.9322,  -91.7379],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5203, device='cuda:0', dtype=torch.float64)
tensor([ -95.5526, -124.9968,  -78.7459, -139.4573,  -92.3899],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4876, device='cuda:0', dtype=torch.float64)
tensor([ -96.3055, -125.3773,  -78.7423, -139.9534,  -92.9172],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3904, device='cuda:0', dtype=torch.float64)
tensor([ -97.1363, -125.9353,  -78.7424, -140.5182,  -93.5415],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4547, device='cuda:0', dtype=torch.float64)
tensor([ -98.0178, -126.4957,  -78.8444, -141.1461,  -94.2993],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4616, device='cuda:0', dtype=torch.float64)
tensor([ -98.9353, -127.1764,  -78.9800, -141.8300,  -95.0878],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4644, device='cuda:0', dtype=torch.float64)
tensor([ -99.9884, -128.2715,  -79.0878, -142.6875,  -96.2298],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4952, device='cuda:0', dtype=torch.float64)
tensor([-100.8533, -129.1965,  -79.1532, -143.3425,  -97.1448],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4960, device='cuda:0', dtype=torch.float64)
tensor([-101.9329, -130.2313,  -79.3020, -144.0971,  -98.2685],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4671, device='cuda:0', dtype=torch.float64)
tensor([-102.8269, -131.1146,  -79.4160, -144.6828,  -99.2275],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4580, device='cuda:0', dtype=torch.float64)
tensor([-103.6629, -132.0161,  -79.5185, -145.2454, -100.0840],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5172, device='cuda:0', dtype=torch.float64)
tensor([-104.6132, -133.0251,  -79.6118, -145.7787, -101.0027],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5118, device='cuda:0', dtype=torch.float64)
tensor([-105.4359, -133.9423,  -79.7349, -146.2132, -101.8276],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5002, device='cuda:0', dtype=torch.float64)
tensor([-106.0882, -134.8055,  -79.8601, -146.5858, -102.6894],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5432, device='cuda:0', dtype=torch.float64)
tensor([-106.7452, -135.7377,  -79.9938, -146.9279, -103.5636],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6311, device='cuda:0', dtype=torch.float64)
tensor([-107.5857, -136.7906,  -80.2415, -147.4652, -104.6587],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4835, device='cuda:0', dtype=torch.float64)
tensor([-108.6682, -138.1988,  -80.5806, -148.2473, -106.0649],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4320, device='cuda:0', dtype=torch.float64)
tensor([-109.6143, -139.4140,  -80.8652, -148.8935, -107.2580],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5805, device='cuda:0', dtype=torch.float64)
tensor([-110.6550, -140.8182,  -81.2369, -149.6502, -108.6068],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4598, device='cuda:0', dtype=torch.float64)
tensor([-111.3862, -142.1794,  -81.5617, -150.3395, -109.7201],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4958, device='cuda:0', dtype=torch.float64)
tensor([-111.6679, -143.1763,  -81.7841, -150.7254, -110.4791],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4607, device='cuda:0', dtype=torch.float64)
tensor([-111.7682, -143.9776,  -81.9690, -151.0760, -111.0446],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4727, device='cuda:0', dtype=torch.float64)
tensor([-111.7038, -144.5445,  -82.1519, -151.3587, -111.5250],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4961, device='cuda:0', dtype=torch.float64)
tensor([-111.3762, -144.7248,  -82.2921, -151.4038, -111.6010],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5301, device='cuda:0', dtype=torch.float64)
tensor([-110.8602, -144.9846,  -82.3646, -151.3297, -111.4977],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5236, device='cuda:0', dtype=torch.float64)
tensor([-110.0658, -145.2308,  -82.3739, -151.0914, -111.1157],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4454, device='cuda:0', dtype=torch.float64)
tensor([-109.3410, -145.3782,  -82.3546, -150.9014, -110.6781],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4479, device='cuda:0', dtype=torch.float64)
tensor([-108.7513, -145.5524,  -82.3678, -150.7276, -110.2718],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4721, device='cuda:0', dtype=torch.float64)
tensor([-108.3925, -145.8136,  -82.4331, -150.7665, -109.9781],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4747, device='cuda:0', dtype=torch.float64)
tensor([-108.1575, -146.2193,  -82.4929, -150.9621, -109.6418],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4740, device='cuda:0', dtype=torch.float64)
tensor([-108.1350, -146.4893,  -82.5617, -151.3238, -109.4432],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3969, device='cuda:0', dtype=torch.float64)
tensor([-108.0202, -146.5900,  -82.6171, -151.5173, -109.1741],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5612, device='cuda:0', dtype=torch.float64)
tensor([-107.4871, -146.1182,  -82.5945, -151.3372, -108.2932],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4670, device='cuda:0', dtype=torch.float64)
tensor([-106.9385, -145.5902,  -82.5879, -151.1754, -107.2750],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4908, device='cuda:0', dtype=torch.float64)
tensor([-106.0912, -144.7424,  -82.5401, -150.8584, -105.9668],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3952, device='cuda:0', dtype=torch.float64)
tensor([-105.1646, -143.7805,  -82.4850, -150.4120, -104.6254],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5097, device='cuda:0', dtype=torch.float64)
tensor([-104.6307, -143.1029,  -82.4277, -150.1084, -103.6625],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5169, device='cuda:0', dtype=torch.float64)
tensor([-104.1503, -142.5955,  -82.4050, -149.8819, -102.7843],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5471, device='cuda:0', dtype=torch.float64)
tensor([-103.9197, -142.0889,  -82.4473, -149.8323, -101.9309],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5469, device='cuda:0', dtype=torch.float64)
tensor([-104.0940, -141.9456,  -82.5897, -150.0628, -101.5068],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4193, device='cuda:0', dtype=torch.float64)
tensor([-104.2704, -141.7701,  -82.7940, -150.3068, -101.0843],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4399, device='cuda:0', dtype=torch.float64)
tensor([-104.4323, -141.6810,  -83.0127, -150.5617, -100.5635],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4140, device='cuda:0', dtype=torch.float64)
tensor([-104.7067, -141.6455,  -83.2838, -150.9049, -100.2415],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4478, device='cuda:0', dtype=torch.float64)
tensor([-104.7382, -141.2546,  -83.4795, -151.0192,  -99.7124],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5352, device='cuda:0', dtype=torch.float64)
tensor([-105.0657, -141.0322,  -83.7559, -151.2655,  -99.4931],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4317, device='cuda:0', dtype=torch.float64)
tensor([-105.4982, -140.8911,  -84.0608, -151.5898,  -99.4313],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5423, device='cuda:0', dtype=torch.float64)
tensor([-105.7818, -140.6564,  -84.3047, -151.7752,  -99.2225],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5089, device='cuda:0', dtype=torch.float64)
tensor([-106.1841, -140.4244,  -84.4733, -151.9117,  -99.1404],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4545, device='cuda:0', dtype=torch.float64)
tensor([-106.6481, -140.3448,  -84.6207, -152.0718,  -99.2105],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4600, device='cuda:0', dtype=torch.float64)
tensor([-107.4357, -140.4107,  -84.8233, -152.3875,  -99.6229],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4653, device='cuda:0', dtype=torch.float64)
tensor([-108.0936, -140.4744,  -85.0210, -152.6831,  -99.8581],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4904, device='cuda:0', dtype=torch.float64)
tensor([-108.7430, -140.5293,  -85.1632, -152.9193, -100.1865],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4403, device='cuda:0', dtype=torch.float64)
tensor([-109.4754, -140.7426,  -85.3131, -153.1807, -100.6869],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4753, device='cuda:0', dtype=torch.float64)
tensor([-110.3234, -141.2950,  -85.4766, -153.5788, -101.3282],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4219, device='cuda:0', dtype=torch.float64)
tensor([-111.1573, -141.8696,  -85.6411, -153.9641, -101.9168],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4381, device='cuda:0', dtype=torch.float64)
tensor([-111.9896, -142.3780,  -85.8038, -154.3547, -102.4824],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4516, device='cuda:0', dtype=torch.float64)
tensor([-112.7696, -142.9627,  -85.9410, -154.7604, -103.0533],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4149, device='cuda:0', dtype=torch.float64)
tensor([-113.6359, -143.5595,  -86.0913, -155.2451, -103.6816],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3880, device='cuda:0', dtype=torch.float64)
tensor([-114.3819, -144.1640,  -86.2288, -155.7373, -104.2653],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4008, device='cuda:0', dtype=torch.float64)
tensor([-115.1033, -144.9301,  -86.3804, -156.2482, -105.0125],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4438, device='cuda:0', dtype=torch.float64)
tensor([-115.9961, -145.5718,  -86.5672, -156.7925, -105.8872],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4102, device='cuda:0', dtype=torch.float64)
tensor([-116.9572, -146.1884,  -86.7356, -157.2492, -106.7747],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3880, device='cuda:0', dtype=torch.float64)
tensor([-117.7952, -146.8576,  -86.9078, -157.7231, -107.5560],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4089, device='cuda:0', dtype=torch.float64)
tensor([-118.2812, -147.1380,  -86.9942, -157.9864, -108.0667],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4368, device='cuda:0', dtype=torch.float64)
tensor([-118.7938, -147.3468,  -87.0975, -158.3407, -108.7154],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4412, device='cuda:0', dtype=torch.float64)
tensor([-119.6039, -147.8921,  -87.1974, -158.8883, -109.6612],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4022, device='cuda:0', dtype=torch.float64)
tensor([-120.1877, -148.3261,  -87.2668, -159.3147, -110.4641],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4401, device='cuda:0', dtype=torch.float64)
tensor([-120.5949, -148.4476,  -87.3005, -159.5106, -110.9862],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5060, device='cuda:0', dtype=torch.float64)
tensor([-120.8537, -148.4206,  -87.2853, -159.4787, -111.3439],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4290, device='cuda:0', dtype=torch.float64)
tensor([-120.9666, -148.4790,  -87.2702, -159.4735, -111.5231],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4545, device='cuda:0', dtype=torch.float64)
tensor([-121.1451, -148.6354,  -87.2386, -159.4620, -111.8244],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4255, device='cuda:0', dtype=torch.float64)
tensor([-121.6255, -149.1846,  -87.2606, -159.6355, -112.3596],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4735, device='cuda:0', dtype=torch.float64)
tensor([-121.9588, -149.7570,  -87.1887, -159.6629, -112.8230],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4437, device='cuda:0', dtype=torch.float64)
tensor([-122.2051, -150.4008,  -87.1252, -159.7217, -113.2371],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4056, device='cuda:0', dtype=torch.float64)
tensor([-122.2801, -150.7480,  -87.0386, -159.6098, -113.5582],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4267, device='cuda:0', dtype=torch.float64)
tensor([-122.2934, -150.7030,  -86.9259, -159.3409, -113.7510],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4999, device='cuda:0', dtype=torch.float64)
tensor([-122.5707, -150.7441,  -86.8667, -159.2095, -114.2054],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4476, device='cuda:0', dtype=torch.float64)
tensor([-122.7484, -150.5475,  -86.8275, -159.1121, -114.4523],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4770, device='cuda:0', dtype=torch.float64)
tensor([-122.3682, -149.8580,  -86.7018, -158.7355, -114.2126],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3553, device='cuda:0', dtype=torch.float64)
tensor([-122.3424, -149.3986,  -86.6297, -158.6362, -114.3075],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5160, device='cuda:0', dtype=torch.float64)
tensor([-122.5930, -149.2738,  -86.6329, -158.8763, -114.6929],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5317, device='cuda:0', dtype=torch.float64)
tensor([-122.6584, -148.8593,  -86.6716, -158.9962, -114.8574],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3823, device='cuda:0', dtype=torch.float64)
tensor([-122.7942, -148.5732,  -86.7128, -159.1881, -115.0944],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4431, device='cuda:0', dtype=torch.float64)
tensor([-122.9244, -148.3648,  -86.7722, -159.4361, -115.1340],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4441, device='cuda:0', dtype=torch.float64)
tensor([-122.9978, -148.1891,  -86.7665, -159.5994, -115.0605],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4580, device='cuda:0', dtype=torch.float64)
tensor([-122.6293, -147.9722,  -86.7039, -159.5625, -114.6502],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3865, device='cuda:0', dtype=torch.float64)
tensor([-122.5366, -148.0987,  -86.7246, -159.7747, -114.5067],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4781, device='cuda:0', dtype=torch.float64)
tensor([-122.9755, -148.7417,  -86.8131, -160.3659, -114.8208],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4992, device='cuda:0', dtype=torch.float64)
tensor([-123.3807, -149.3059,  -86.9352, -160.8892, -115.1421],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4483, device='cuda:0', dtype=torch.float64)
tensor([-123.3416, -149.5983,  -87.0102, -161.1750, -115.0656],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4039, device='cuda:0', dtype=torch.float64)
tensor([-123.4828, -149.7451,  -87.1328, -161.4401, -115.2167],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4455, device='cuda:0', dtype=torch.float64)
tensor([-123.4927, -149.6997,  -87.2551, -161.6004, -115.2467],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4098, device='cuda:0', dtype=torch.float64)
tensor([-123.4088, -149.6692,  -87.3639, -161.6081, -115.1922],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4444, device='cuda:0', dtype=torch.float64)
tensor([-123.3253, -149.7096,  -87.4262, -161.5223, -115.1876],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3988, device='cuda:0', dtype=torch.float64)
tensor([-123.2911, -149.6484,  -87.4959, -161.3549, -115.2229],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4284, device='cuda:0', dtype=torch.float64)
tensor([-123.3348, -149.7578,  -87.5887, -161.2615, -115.4105],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3324, device='cuda:0', dtype=torch.float64)
tensor([-123.6013, -150.0408,  -87.7189, -161.3010, -115.7601],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4073, device='cuda:0', dtype=torch.float64)
tensor([-123.7166, -150.2471,  -87.8795, -161.3255, -116.0190],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4445, device='cuda:0', dtype=torch.float64)
tensor([-123.7860, -150.4896,  -88.0692, -161.3501, -116.2902],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4384, device='cuda:0', dtype=torch.float64)
tensor([-123.8914, -150.7735,  -88.2934, -161.4920, -116.5501],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4085, device='cuda:0', dtype=torch.float64)
tensor([-123.9599, -150.9315,  -88.4892, -161.5982, -116.7700],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4246, device='cuda:0', dtype=torch.float64)
tensor([-123.7571, -150.7793,  -88.6014, -161.5193, -116.7656],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4237, device='cuda:0', dtype=torch.float64)
tensor([-123.3323, -150.5292,  -88.6746, -161.3040, -116.5371],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4199, device='cuda:0', dtype=torch.float64)
tensor([-123.1239, -150.5773,  -88.7715, -161.3028, -116.5059],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5095, device='cuda:0', dtype=torch.float64)
tensor([-122.9559, -150.6827,  -88.8604, -161.3656, -116.4679],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4083, device='cuda:0', dtype=torch.float64)
tensor([-123.1331, -150.7660,  -89.0020, -161.6031, -116.5772],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4576, device='cuda:0', dtype=torch.float64)
tensor([-123.3155, -151.0140,  -89.1727, -161.9555, -116.7543],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3974, device='cuda:0', dtype=torch.float64)
tensor([-123.3470, -151.1601,  -89.2922, -162.2636, -116.8217],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4310, device='cuda:0', dtype=torch.float64)
tensor([-123.2689, -151.2160,  -89.4264, -162.5667, -116.7499],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4834, device='cuda:0', dtype=torch.float64)
tensor([-123.2503, -151.4066,  -89.6071, -162.8621, -116.8035],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5087, device='cuda:0', dtype=torch.float64)
tensor([-123.4147, -151.8299,  -89.8329, -163.1485, -116.9829],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4271, device='cuda:0', dtype=torch.float64)
tensor([-123.7009, -152.2762,  -90.0368, -163.4796, -117.2722],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4319, device='cuda:0', dtype=torch.float64)
tensor([-124.1176, -152.7429,  -90.2447, -163.9785, -117.6740],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4626, device='cuda:0', dtype=torch.float64)
tensor([-124.5967, -153.2440,  -90.4267, -164.5149, -118.1589],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3732, device='cuda:0', dtype=torch.float64)
tensor([-124.9147, -153.6388,  -90.5815, -164.7632, -118.4449],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5155, device='cuda:0', dtype=torch.float64)
tensor([-125.6071, -154.6942,  -90.8097, -165.2510, -119.2435],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3554, device='cuda:0', dtype=torch.float64)
tensor([-126.1938, -155.6340,  -90.9598, -165.6191, -119.9698],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4231, device='cuda:0', dtype=torch.float64)
tensor([-126.6467, -156.2316,  -91.0292, -165.8622, -120.5059],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4835, device='cuda:0', dtype=torch.float64)
tensor([-127.2236, -156.8334,  -91.1753, -166.1958, -121.3621],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4859, device='cuda:0', dtype=torch.float64)
tensor([-127.8733, -157.5018,  -91.2920, -166.4473, -122.2231],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4671, device='cuda:0', dtype=torch.float64)
tensor([-128.6865, -158.4385,  -91.3998, -166.7174, -123.0797],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4541, device='cuda:0', dtype=torch.float64)
tensor([-129.6344, -159.3640,  -91.5199, -167.0446, -123.9178],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3962, device='cuda:0', dtype=torch.float64)
tensor([-130.7257, -160.5464,  -91.7289, -167.6138, -125.0716],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3221, device='cuda:0', dtype=torch.float64)
tensor([-131.7745, -161.7724,  -91.9596, -168.2296, -126.2130],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4211, device='cuda:0', dtype=torch.float64)
tensor([-132.3444, -162.3860,  -92.0865, -168.6168, -126.7004],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4107, device='cuda:0', dtype=torch.float64)
tensor([-133.1634, -162.7162,  -92.2554, -169.0402, -127.2098],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4218, device='cuda:0', dtype=torch.float64)
tensor([-133.8627, -163.1675,  -92.3713, -169.4736, -127.6517],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4307, device='cuda:0', dtype=torch.float64)
tensor([-134.5676, -163.5582,  -92.4780, -169.8696, -128.0718],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4158, device='cuda:0', dtype=torch.float64)
tensor([-135.2555, -163.8962,  -92.5921, -170.2996, -128.4814],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3951, device='cuda:0', dtype=torch.float64)
tensor([-136.0242, -164.0936,  -92.6892, -170.6712, -128.9144],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4532, device='cuda:0', dtype=torch.float64)
tensor([-136.9666, -164.4193,  -92.8797, -171.2407, -129.5212],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4080, device='cuda:0', dtype=torch.float64)
tensor([-137.6238, -164.5624,  -93.0094, -171.6921, -129.7782],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4407, device='cuda:0', dtype=torch.float64)
tensor([-137.9126, -164.7845,  -93.1162, -171.9656, -129.6718],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3985, device='cuda:0', dtype=torch.float64)
tensor([-137.9361, -164.9113,  -93.1837, -172.1095, -129.5311],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4131, device='cuda:0', dtype=torch.float64)
tensor([-137.5873, -164.7179,  -93.1563, -172.0160, -128.9892],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4668, device='cuda:0', dtype=torch.float64)
tensor([-137.0547, -164.3421,  -93.0569, -171.7870, -128.1191],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5229, device='cuda:0', dtype=torch.float64)
tensor([-136.3809, -163.7024,  -92.8815, -171.4092, -126.9361],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3913, device='cuda:0', dtype=torch.float64)
tensor([-135.8256, -163.2020,  -92.6903, -171.1075, -125.9193],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4356, device='cuda:0', dtype=torch.float64)
tensor([-135.3323, -162.9892,  -92.5365, -170.8693, -125.0418],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3991, device='cuda:0', dtype=torch.float64)
tensor([-134.8112, -162.5584,  -92.3546, -170.5499, -124.1511],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3695, device='cuda:0', dtype=torch.float64)
tensor([-134.2675, -162.1224,  -92.2458, -170.2511, -123.3664],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4207, device='cuda:0', dtype=torch.float64)
tensor([-133.6826, -161.4799,  -92.1612, -169.9281, -122.4640],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3456, device='cuda:0', dtype=torch.float64)
tensor([-133.0187, -160.8398,  -92.1155, -169.5863, -121.5007],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3498, device='cuda:0', dtype=torch.float64)
tensor([-132.4716, -160.3019,  -92.0552, -169.2614, -120.7009],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4128, device='cuda:0', dtype=torch.float64)
tensor([-131.6940, -159.6322,  -91.9336, -168.7377, -119.7975],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3589, device='cuda:0', dtype=torch.float64)
tensor([-130.9492, -159.1125,  -91.8645, -168.3172, -119.0242],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4328, device='cuda:0', dtype=torch.float64)
tensor([-130.4772, -158.8348,  -91.8377, -168.0718, -118.5145],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4157, device='cuda:0', dtype=torch.float64)
tensor([-130.1123, -158.6764,  -91.8952, -168.0364, -118.0956],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3277, device='cuda:0', dtype=torch.float64)
tensor([-129.6129, -158.3322,  -91.9444, -167.8395, -117.4658],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4011, device='cuda:0', dtype=torch.float64)
tensor([-129.3257, -158.2103,  -91.9977, -167.6619, -117.0932],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3530, device='cuda:0', dtype=torch.float64)
tensor([-128.7980, -157.8410,  -92.0349, -167.3797, -116.4404],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3680, device='cuda:0', dtype=torch.float64)
tensor([-128.2435, -157.4632,  -92.0413, -167.0030, -115.8344],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4626, device='cuda:0', dtype=torch.float64)
tensor([-127.6860, -157.0504,  -92.1092, -166.6857, -115.1785],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4197, device='cuda:0', dtype=torch.float64)
tensor([-127.1519, -156.7696,  -92.1563, -166.3772, -114.5556],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3891, device='cuda:0', dtype=torch.float64)
tensor([-126.6955, -156.3428,  -92.2383, -166.0427, -113.9768],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3427, device='cuda:0', dtype=torch.float64)
tensor([-126.3888, -155.9392,  -92.3954, -165.8135, -113.5973],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3872, device='cuda:0', dtype=torch.float64)
tensor([-126.1870, -155.6920,  -92.6070, -165.7206, -113.2996],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3135, device='cuda:0', dtype=torch.float64)
tensor([-125.9051, -155.3440,  -92.7666, -165.5454, -112.9706],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4522, device='cuda:0', dtype=torch.float64)
tensor([-126.1483, -155.4173,  -93.0502, -165.7271, -113.1789],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3827, device='cuda:0', dtype=torch.float64)
tensor([-126.5920, -155.5034,  -93.3308, -165.9910, -113.5014],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4036, device='cuda:0', dtype=torch.float64)
tensor([-126.7328, -155.4997,  -93.5257, -166.1277, -113.5155],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4507, device='cuda:0', dtype=torch.float64)
tensor([-126.9731, -155.5276,  -93.7088, -166.3481, -113.5886],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3519, device='cuda:0', dtype=torch.float64)
tensor([-126.9799, -155.4785,  -93.8798, -166.4517, -113.4906],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4057, device='cuda:0', dtype=torch.float64)
tensor([-126.7512, -155.1657,  -94.0318, -166.4247, -113.1465],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4378, device='cuda:0', dtype=torch.float64)
tensor([-126.8343, -154.8682,  -94.2273, -166.4803, -113.1663],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4620, device='cuda:0', dtype=torch.float64)
tensor([-127.0862, -154.5492,  -94.4445, -166.6393, -113.3191],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4217, device='cuda:0', dtype=torch.float64)
tensor([-127.8127, -154.5224,  -94.7094, -167.0527, -113.8442],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3933, device='cuda:0', dtype=torch.float64)
tensor([-128.7789, -154.4368,  -95.0214, -167.5152, -114.7817],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3624, device='cuda:0', dtype=torch.float64)
tensor([-129.9176, -154.5064,  -95.3691, -168.0976, -115.9338],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4180, device='cuda:0', dtype=torch.float64)
tensor([-131.3910, -154.7263,  -95.7477, -168.7935, -117.3791],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3244, device='cuda:0', dtype=torch.float64)
tensor([-132.6747, -154.8231,  -96.0706, -169.4588, -118.5500],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4076, device='cuda:0', dtype=torch.float64)
tensor([-133.8328, -154.7936,  -96.3169, -170.0018, -119.6346],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4037, device='cuda:0', dtype=torch.float64)
tensor([-135.0029, -154.9170,  -96.6050, -170.6140, -120.6076],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3533, device='cuda:0', dtype=torch.float64)
tensor([-135.9768, -154.9582,  -96.8473, -171.0849, -121.4301],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3800, device='cuda:0', dtype=torch.float64)
tensor([-136.8169, -155.0955,  -97.0855, -171.4834, -122.1386],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3293, device='cuda:0', dtype=torch.float64)
tensor([-137.8642, -155.4831,  -97.3696, -172.1118, -122.9180],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3843, device='cuda:0', dtype=torch.float64)
tensor([-138.6122, -155.7640,  -97.6457, -172.6391, -123.4148],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3694, device='cuda:0', dtype=torch.float64)
tensor([-139.3797, -156.1261,  -97.8759, -173.2038, -124.0006],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3601, device='cuda:0', dtype=torch.float64)
tensor([-139.7786, -156.3874,  -98.0123, -173.4793, -124.1846],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4387, device='cuda:0', dtype=torch.float64)
tensor([-139.9856, -156.3924,  -98.0898, -173.5493, -124.1672],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3751, device='cuda:0', dtype=torch.float64)
tensor([-140.5022, -156.5613,  -98.1946, -173.7971, -124.4612],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4081, device='cuda:0', dtype=torch.float64)
tensor([-140.9296, -156.8035,  -98.3394, -174.0404, -124.7481],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3831, device='cuda:0', dtype=torch.float64)
tensor([-141.4640, -157.3639,  -98.4734, -174.4073, -125.1222],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3266, device='cuda:0', dtype=torch.float64)
tensor([-141.8726, -157.7607,  -98.6028, -174.7200, -125.2852],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4679, device='cuda:0', dtype=torch.float64)
tensor([-142.5352, -158.1073,  -98.7787, -175.1002, -125.6805],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4467, device='cuda:0', dtype=torch.float64)
tensor([-142.7990, -158.2162,  -98.8795, -175.3128, -125.7405],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3966, device='cuda:0', dtype=torch.float64)
tensor([-142.7075, -158.2043,  -98.9590, -175.3612, -125.3704],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3858, device='cuda:0', dtype=torch.float64)
tensor([-142.7929, -158.4444,  -99.1124, -175.5622, -125.0980],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3883, device='cuda:0', dtype=torch.float64)
tensor([-142.9029, -158.5743,  -99.3426, -175.7762, -124.9223],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3874, device='cuda:0', dtype=torch.float64)
tensor([-143.0732, -158.7706,  -99.5828, -175.9839, -124.8650],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4309, device='cuda:0', dtype=torch.float64)
tensor([-143.6685, -159.3464,  -99.8929, -176.4690, -125.0937],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4008, device='cuda:0', dtype=torch.float64)
tensor([-144.1606, -160.0321, -100.1594, -176.9386, -125.1934],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3215, device='cuda:0', dtype=torch.float64)
tensor([-144.5616, -160.6141, -100.4196, -177.3635, -125.2958],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3421, device='cuda:0', dtype=torch.float64)
tensor([-144.6726, -161.0672, -100.5598, -177.5710, -125.2434],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3575, device='cuda:0', dtype=torch.float64)
tensor([-144.8290, -161.6646, -100.6757, -177.8489, -125.3025],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3999, device='cuda:0', dtype=torch.float64)
tensor([-145.2292, -162.6419, -100.8243, -178.2559, -125.6512],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3546, device='cuda:0', dtype=torch.float64)
tensor([-145.4773, -163.5805, -100.9802, -178.6534, -125.8400],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4299, device='cuda:0', dtype=torch.float64)
tensor([-146.0787, -164.9350, -101.2609, -179.3109, -126.4601],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4137, device='cuda:0', dtype=torch.float64)
tensor([-146.7092, -166.1587, -101.5651, -180.0190, -127.1544],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3381, device='cuda:0', dtype=torch.float64)
tensor([-147.2141, -167.0893, -101.8283, -180.6645, -127.6505],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3565, device='cuda:0', dtype=torch.float64)
tensor([-148.0554, -168.0462, -102.1467, -181.4946, -128.4390],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4083, device='cuda:0', dtype=torch.float64)
tensor([-148.6937, -168.7977, -102.3897, -182.1731, -129.0076],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3684, device='cuda:0', dtype=torch.float64)
tensor([-149.4794, -169.5867, -102.6356, -182.8797, -129.6799],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4344, device='cuda:0', dtype=torch.float64)
tensor([-150.1705, -170.2287, -102.8765, -183.5823, -130.2817],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4466, device='cuda:0', dtype=torch.float64)
tensor([-150.8255, -170.8701, -103.1006, -184.2433, -130.6627],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3789, device='cuda:0', dtype=torch.float64)
tensor([-151.2647, -171.1891, -103.2347, -184.7236, -130.9522],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4264, device='cuda:0', dtype=torch.float64)
tensor([-151.9857, -171.7239, -103.4063, -185.3159, -131.5184],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3401, device='cuda:0', dtype=torch.float64)
tensor([-152.7763, -172.2165, -103.5472, -185.8780, -132.0798],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3982, device='cuda:0', dtype=torch.float64)
tensor([-153.3646, -172.6549, -103.6986, -186.3625, -132.5292],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3869, device='cuda:0', dtype=torch.float64)
tensor([-153.8247, -172.8050, -103.8540, -186.7531, -132.8829],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3488, device='cuda:0', dtype=torch.float64)
tensor([-154.3479, -173.0637, -104.0558, -187.1773, -133.4389],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3573, device='cuda:0', dtype=torch.float64)
tensor([-154.4666, -172.9517, -104.1793, -187.3358, -133.5448],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4295, device='cuda:0', dtype=torch.float64)
tensor([-154.3972, -172.8104, -104.2606, -187.4704, -133.4452],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3669, device='cuda:0', dtype=torch.float64)
tensor([-154.2231, -172.6569, -104.3087, -187.4677, -133.3680],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3825, device='cuda:0', dtype=torch.float64)
tensor([-153.9648, -172.5791, -104.3317, -187.4401, -133.2521],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3018, device='cuda:0', dtype=torch.float64)
tensor([-153.7640, -172.5135, -104.3822, -187.4401, -133.0931],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3528, device='cuda:0', dtype=torch.float64)
tensor([-153.9085, -172.7078, -104.4814, -187.5911, -133.2094],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3452, device='cuda:0', dtype=torch.float64)
tensor([-153.8665, -172.8064, -104.5615, -187.7070, -133.1811],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3625, device='cuda:0', dtype=torch.float64)
tensor([-153.6822, -172.9088, -104.5738, -187.8188, -133.0686],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3130, device='cuda:0', dtype=torch.float64)
tensor([-153.6727, -173.1706, -104.6166, -187.9835, -133.2428],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4255, device='cuda:0', dtype=torch.float64)
tensor([-153.6736, -173.4963, -104.6777, -188.2084, -133.4836],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3675, device='cuda:0', dtype=torch.float64)
tensor([-153.8942, -173.9147, -104.8124, -188.5972, -133.7858],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3218, device='cuda:0', dtype=torch.float64)
tensor([-153.9725, -174.2631, -104.8940, -188.9032, -133.9330],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3492, device='cuda:0', dtype=torch.float64)
tensor([-153.8741, -174.6130, -104.9327, -189.1518, -133.9399],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4016, device='cuda:0', dtype=torch.float64)
tensor([-154.0758, -175.5105, -105.0735, -189.6524, -134.2629],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3969, device='cuda:0', dtype=torch.float64)
tensor([-154.1402, -176.2034, -105.1417, -189.9595, -134.4413],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3588, device='cuda:0', dtype=torch.float64)
tensor([-154.5756, -177.2557, -105.3012, -190.4490, -134.9949],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3935, device='cuda:0', dtype=torch.float64)
tensor([-154.9770, -178.1440, -105.4463, -190.9082, -135.5608],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3242, device='cuda:0', dtype=torch.float64)
tensor([-155.4884, -179.0605, -105.5873, -191.4094, -136.1670],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3221, device='cuda:0', dtype=torch.float64)
tensor([-156.0600, -180.0238, -105.7773, -191.8967, -136.8760],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3551, device='cuda:0', dtype=torch.float64)
tensor([-156.6246, -180.9320, -105.9696, -192.4413, -137.5844],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3726, device='cuda:0', dtype=torch.float64)
tensor([-157.4344, -181.8696, -106.1960, -193.0574, -138.4329],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3533, device='cuda:0', dtype=torch.float64)
tensor([-158.0201, -182.7205, -106.3958, -193.4698, -139.1503],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3666, device='cuda:0', dtype=torch.float64)
tensor([-158.5352, -183.4940, -106.5460, -193.7752, -139.7284],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3402, device='cuda:0', dtype=torch.float64)
tensor([-159.1321, -184.2405, -106.6794, -194.0545, -140.4516],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3146, device='cuda:0', dtype=torch.float64)
tensor([-159.5670, -184.6422, -106.7887, -194.2129, -141.1839],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3477, device='cuda:0', dtype=torch.float64)
tensor([-160.0350, -184.8532, -106.9204, -194.3289, -141.9525],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4285, device='cuda:0', dtype=torch.float64)
tensor([-160.0694, -184.8808, -106.9874, -194.2318, -142.3992],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2949, device='cuda:0', dtype=torch.float64)
tensor([-160.2244, -184.9328, -107.0235, -194.0955, -142.9008],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3627, device='cuda:0', dtype=torch.float64)
tensor([-160.3457, -184.7378, -107.0789, -193.9026, -143.3116],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3939, device='cuda:0', dtype=torch.float64)
tensor([-160.6517, -184.5467, -107.1455, -193.8301, -143.8168],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3517, device='cuda:0', dtype=torch.float64)
tensor([-160.9649, -184.0882, -107.1893, -193.6902, -144.2734],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4293, device='cuda:0', dtype=torch.float64)
tensor([-161.2301, -183.5957, -107.3410, -193.7401, -144.5690],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3065, device='cuda:0', dtype=torch.float64)
tensor([-161.6796, -183.0221, -107.5272, -193.8205, -144.9377],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3948, device='cuda:0', dtype=torch.float64)
tensor([-161.9588, -182.4864, -107.6039, -193.8695, -145.1760],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3301, device='cuda:0', dtype=torch.float64)
tensor([-162.2939, -182.0605, -107.7758, -194.0079, -145.3949],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2868, device='cuda:0', dtype=torch.float64)
tensor([-162.6788, -181.8238, -107.9712, -194.2040, -145.6475],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3407, device='cuda:0', dtype=torch.float64)
tensor([-163.0945, -181.7683, -108.1622, -194.4097, -145.9221],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3127, device='cuda:0', dtype=torch.float64)
tensor([-163.5895, -181.6542, -108.3335, -194.6645, -146.1701],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3546, device='cuda:0', dtype=torch.float64)
tensor([-164.0980, -181.6345, -108.5349, -194.9669, -146.2850],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3805, device='cuda:0', dtype=torch.float64)
tensor([-164.4551, -181.4548, -108.6887, -195.2004, -146.1988],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3899, device='cuda:0', dtype=torch.float64)
tensor([-164.6581, -181.0666, -108.7679, -195.2945, -145.9332],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3143, device='cuda:0', dtype=torch.float64)
tensor([-165.0620, -180.8460, -108.9156, -195.5061, -145.8620],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3711, device='cuda:0', dtype=torch.float64)
tensor([-165.5660, -180.8910, -109.0229, -195.7378, -145.9458],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4085, device='cuda:0', dtype=torch.float64)
tensor([-165.7716, -180.9237, -109.0600, -195.7499, -145.8260],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3206, device='cuda:0', dtype=torch.float64)
tensor([-166.0343, -180.8723, -109.1305, -195.7874, -145.7822],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3479, device='cuda:0', dtype=torch.float64)
tensor([-166.3647, -180.8760, -109.2132, -195.9586, -145.6600],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3655, device='cuda:0', dtype=torch.float64)
tensor([-166.7138, -180.9018, -109.2744, -196.1124, -145.5308],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3112, device='cuda:0', dtype=torch.float64)
tensor([-167.4184, -181.0678, -109.4014, -196.4524, -145.7289],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3703, device='cuda:0', dtype=torch.float64)
tensor([-168.1382, -181.2365, -109.5435, -196.8093, -146.0219],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3217, device='cuda:0', dtype=torch.float64)
tensor([-169.0524, -181.5249, -109.7153, -197.2190, -146.5527],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3619, device='cuda:0', dtype=torch.float64)
tensor([-170.0842, -182.1031, -109.9006, -197.6442, -147.1852],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3586, device='cuda:0', dtype=torch.float64)
tensor([-171.0984, -182.8662, -110.0670, -198.0706, -147.7961],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3966, device='cuda:0', dtype=torch.float64)
tensor([-171.8888, -183.4412, -110.1789, -198.3508, -148.1344],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3959, device='cuda:0', dtype=torch.float64)
tensor([-173.2110, -184.3906, -110.4064, -198.8564, -148.8319],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3592, device='cuda:0', dtype=torch.float64)
tensor([-173.8603, -184.9162, -110.5237, -199.0438, -149.0392],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3312, device='cuda:0', dtype=torch.float64)
tensor([-174.2573, -184.8525, -110.6098, -199.1393, -148.9573],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3606, device='cuda:0', dtype=torch.float64)
tensor([-174.0917, -184.6134, -110.6065, -199.1248, -148.4932],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3643, device='cuda:0', dtype=torch.float64)
tensor([-173.6095, -184.2899, -110.5600, -198.9576, -147.5755],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3122, device='cuda:0', dtype=torch.float64)
tensor([-173.2101, -184.1297, -110.5757, -198.8566, -146.6988],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3449, device='cuda:0', dtype=torch.float64)
tensor([-172.7071, -184.0843, -110.6038, -198.6715, -145.9244],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3185, device='cuda:0', dtype=torch.float64)
tensor([-172.1756, -184.1017, -110.6495, -198.3976, -145.2200],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3447, device='cuda:0', dtype=torch.float64)
tensor([-171.6205, -184.1473, -110.6266, -198.0269, -144.6054],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3718, device='cuda:0', dtype=torch.float64)
tensor([-170.9959, -184.1971, -110.6019, -197.7196, -143.9331],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3363, device='cuda:0', dtype=torch.float64)
tensor([-170.4861, -184.2947, -110.6349, -197.5292, -143.4509],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3380, device='cuda:0', dtype=torch.float64)
tensor([-169.7173, -184.0669, -110.6076, -197.1289, -142.6872],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3354, device='cuda:0', dtype=torch.float64)
tensor([-169.0475, -183.8321, -110.6016, -196.7784, -141.9616],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3702, device='cuda:0', dtype=torch.float64)
tensor([-168.6705, -183.4746, -110.6792, -196.6518, -141.5395],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3923, device='cuda:0', dtype=torch.float64)
tensor([-168.4138, -183.3349, -110.7996, -196.5950, -141.1993],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3386, device='cuda:0', dtype=torch.float64)
tensor([-168.2235, -183.1297, -110.8680, -196.4171, -141.0662],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4035, device='cuda:0', dtype=torch.float64)
tensor([-168.5892, -183.3432, -111.0973, -196.5665, -141.3221],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2935, device='cuda:0', dtype=torch.float64)
tensor([-169.2593, -183.7041, -111.3509, -196.8752, -141.9287],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3556, device='cuda:0', dtype=torch.float64)
tensor([-169.8717, -183.9062, -111.5650, -197.1373, -142.5344],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3559, device='cuda:0', dtype=torch.float64)
tensor([-170.4659, -184.0002, -111.8242, -197.3674, -143.2330],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3724, device='cuda:0', dtype=torch.float64)
tensor([-170.8252, -184.1630, -111.9623, -197.4551, -143.7305],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3573, device='cuda:0', dtype=torch.float64)
tensor([-170.8723, -184.1093, -112.0476, -197.3943, -143.9842],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3677, device='cuda:0', dtype=torch.float64)
tensor([-170.8961, -183.8871, -112.1356, -197.3438, -144.1704],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3509, device='cuda:0', dtype=torch.float64)
tensor([-171.1536, -183.9943, -112.3083, -197.4480, -144.6571],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3447, device='cuda:0', dtype=torch.float64)
tensor([-171.4635, -184.2804, -112.5405, -197.5912, -145.2356],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3694, device='cuda:0', dtype=torch.float64)
tensor([-171.7318, -184.6148, -112.7300, -197.6747, -145.7291],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3181, device='cuda:0', dtype=torch.float64)
tensor([-172.2917, -184.9622, -112.9920, -197.9705, -146.4414],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3853, device='cuda:0', dtype=torch.float64)
tensor([-172.5672, -185.2193, -113.1039, -198.1104, -146.6771],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3408, device='cuda:0', dtype=torch.float64)
tensor([-172.6949, -185.2531, -113.1188, -198.0971, -146.6379],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3143, device='cuda:0', dtype=torch.float64)
tensor([-172.6688, -185.1642, -113.1760, -198.0305, -146.5454],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3905, device='cuda:0', dtype=torch.float64)
tensor([-172.9938, -185.5204, -113.2934, -198.2035, -146.7307],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3055, device='cuda:0', dtype=torch.float64)
tensor([-173.5921, -185.9579, -113.5310, -198.4954, -147.1827],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3310, device='cuda:0', dtype=torch.float64)
tensor([-174.1611, -186.4054, -113.6955, -198.7199, -147.5094],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3444, device='cuda:0', dtype=torch.float64)
tensor([-174.9321, -186.8603, -113.8957, -198.9490, -148.0196],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2930, device='cuda:0', dtype=torch.float64)
tensor([-175.5463, -187.2569, -114.0774, -199.0458, -148.4493],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3409, device='cuda:0', dtype=torch.float64)
tensor([-176.1916, -187.6920, -114.2699, -199.2302, -148.8441],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3178, device='cuda:0', dtype=torch.float64)
tensor([-176.7587, -187.9696, -114.4371, -199.4481, -149.1729],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3633, device='cuda:0', dtype=torch.float64)
tensor([-177.5089, -188.5039, -114.5943, -199.7128, -149.7279],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3110, device='cuda:0', dtype=torch.float64)
tensor([-178.4352, -188.9919, -114.8063, -200.0490, -150.4127],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4404, device='cuda:0', dtype=torch.float64)
tensor([-179.2185, -189.7211, -115.0773, -200.4954, -151.1456],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3275, device='cuda:0', dtype=torch.float64)
tensor([-180.0152, -190.2165, -115.3184, -200.8942, -151.7491],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2854, device='cuda:0', dtype=torch.float64)
tensor([-180.7771, -190.5322, -115.5323, -201.2659, -152.2149],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3088, device='cuda:0', dtype=torch.float64)
tensor([-181.6297, -190.7854, -115.7682, -201.6918, -152.8039],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3244, device='cuda:0', dtype=torch.float64)
tensor([-182.0439, -190.6951, -115.9334, -201.9306, -153.0085],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3365, device='cuda:0', dtype=torch.float64)
tensor([-182.4514, -190.6667, -116.1038, -202.1820, -153.3832],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4229, device='cuda:0', dtype=torch.float64)
tensor([-182.3833, -190.3002, -116.1586, -202.2460, -153.3416],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3027, device='cuda:0', dtype=torch.float64)
tensor([-182.5383, -190.2617, -116.3178, -202.4814, -153.4496],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3414, device='cuda:0', dtype=torch.float64)
tensor([-182.7307, -190.3301, -116.4660, -202.7698, -153.5778],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3001, device='cuda:0', dtype=torch.float64)
tensor([-183.0066, -190.3990, -116.6061, -203.0389, -153.6962],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3572, device='cuda:0', dtype=torch.float64)
tensor([-183.5957, -190.5274, -116.8224, -203.4447, -154.0996],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2773, device='cuda:0', dtype=torch.float64)
tensor([-184.3242, -190.5467, -117.0391, -203.8580, -154.5767],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3888, device='cuda:0', dtype=torch.float64)
tensor([-185.6985, -190.8480, -117.3489, -204.5750, -155.6109],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2708, device='cuda:0', dtype=torch.float64)
tensor([-187.0973, -191.3284, -117.7020, -205.3505, -156.6974],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3597, device='cuda:0', dtype=torch.float64)
tensor([-188.3135, -191.5242, -118.0330, -206.0186, -157.5592],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3402, device='cuda:0', dtype=torch.float64)
tensor([-189.1981, -191.7623, -118.3054, -206.5777, -158.2018],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3083, device='cuda:0', dtype=torch.float64)
tensor([-190.1108, -191.8061, -118.5934, -207.1596, -158.7916],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3576, device='cuda:0', dtype=torch.float64)
tensor([-190.9944, -191.9041, -118.9500, -207.8550, -159.2365],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3542, device='cuda:0', dtype=torch.float64)
tensor([-192.4132, -192.2849, -119.3987, -208.7156, -160.0588],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3516, device='cuda:0', dtype=torch.float64)
tensor([-193.9838, -193.0084, -119.8418, -209.6709, -161.1582],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3600, device='cuda:0', dtype=torch.float64)
tensor([-195.1599, -193.7015, -120.1706, -210.3857, -162.0599],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2899, device='cuda:0', dtype=torch.float64)
tensor([-196.0864, -194.3240, -120.4374, -210.8971, -162.7586],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2839, device='cuda:0', dtype=torch.float64)
tensor([-196.9746, -194.8248, -120.7182, -211.3630, -163.3497],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3619, device='cuda:0', dtype=torch.float64)
tensor([-197.9510, -195.4334, -121.0480, -211.9139, -164.0303],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3617, device='cuda:0', dtype=torch.float64)
tensor([-198.5815, -195.8116, -121.2446, -212.2204, -164.4937],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2820, device='cuda:0', dtype=torch.float64)
tensor([-199.1923, -196.1775, -121.3724, -212.4952, -164.8371],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2967, device='cuda:0', dtype=torch.float64)
tensor([-200.1066, -196.7697, -121.5727, -212.8755, -165.4316],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3241, device='cuda:0', dtype=torch.float64)
tensor([-200.7106, -197.4651, -121.7422, -213.2178, -165.7823],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2990, device='cuda:0', dtype=torch.float64)
tensor([-201.1560, -197.9986, -121.8994, -213.4777, -166.1396],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3052, device='cuda:0', dtype=torch.float64)
tensor([-201.5263, -198.4922, -122.0730, -213.7772, -166.3497],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3289, device='cuda:0', dtype=torch.float64)
tensor([-201.5480, -198.8069, -122.1644, -213.9368, -166.1540],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3579, device='cuda:0', dtype=torch.float64)
tensor([-201.3622, -199.0847, -122.2145, -213.9114, -166.0145],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2996, device='cuda:0', dtype=torch.float64)
tensor([-200.9425, -199.3498, -122.2043, -213.8066, -165.6085],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2983, device='cuda:0', dtype=torch.float64)
tensor([-200.7469, -199.6757, -122.2787, -213.9133, -165.3634],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2795, device='cuda:0', dtype=torch.float64)
tensor([-200.6331, -200.0400, -122.3559, -214.0134, -165.1208],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3370, device='cuda:0', dtype=torch.float64)
tensor([-200.6269, -200.4360, -122.4649, -214.0788, -164.9042],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2385, device='cuda:0', dtype=torch.float64)
tensor([-200.6603, -200.7699, -122.6265, -214.1890, -164.7795],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2734, device='cuda:0', dtype=torch.float64)
tensor([-200.6983, -201.2788, -122.7802, -214.3393, -164.6237],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3507, device='cuda:0', dtype=torch.float64)
tensor([-200.8017, -201.7214, -122.9462, -214.5876, -164.4400],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2778, device='cuda:0', dtype=torch.float64)
tensor([-200.8801, -202.2003, -123.0578, -214.8301, -164.2025],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2480, device='cuda:0', dtype=torch.float64)
tensor([-201.0196, -202.5073, -123.1458, -215.0290, -164.0596],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3175, device='cuda:0', dtype=torch.float64)
tensor([-201.6476, -203.0154, -123.3912, -215.4357, -164.2269],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3695, device='cuda:0', dtype=torch.float64)
tensor([-201.6492, -203.0842, -123.4219, -215.3877, -163.9502],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3295, device='cuda:0', dtype=torch.float64)
tensor([-201.7708, -203.1199, -123.5103, -215.3272, -163.8670],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3118, device='cuda:0', dtype=torch.float64)
tensor([-202.4445, -203.2924, -123.6891, -215.5623, -164.2574],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2769, device='cuda:0', dtype=torch.float64)
tensor([-202.8622, -203.3379, -123.8112, -215.7068, -164.3910],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3342, device='cuda:0', dtype=torch.float64)
tensor([-203.3592, -203.4893, -123.9231, -215.8296, -164.6675],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3146, device='cuda:0', dtype=torch.float64)
tensor([-204.2932, -203.8130, -124.1385, -216.2158, -165.3017],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2608, device='cuda:0', dtype=torch.float64)
tensor([-205.1625, -203.9426, -124.3348, -216.5754, -165.8304],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3355, device='cuda:0', dtype=torch.float64)
tensor([-205.7527, -204.2386, -124.4979, -216.9020, -166.1907],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2687, device='cuda:0', dtype=torch.float64)
tensor([-206.0708, -204.3557, -124.5742, -217.1101, -166.2576],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2645, device='cuda:0', dtype=torch.float64)
tensor([-206.3216, -204.4014, -124.6152, -217.2825, -166.1870],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2733, device='cuda:0', dtype=torch.float64)
tensor([-206.4361, -204.3274, -124.5773, -217.2797, -166.1002],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2903, device='cuda:0', dtype=torch.float64)
tensor([-206.5912, -204.0775, -124.5020, -217.2855, -165.9374],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2882, device='cuda:0', dtype=torch.float64)
tensor([-206.7996, -203.7464, -124.4658, -217.3217, -165.8499],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2952, device='cuda:0', dtype=torch.float64)
tensor([-207.2415, -203.6051, -124.5044, -217.4678, -165.9425],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3144, device='cuda:0', dtype=torch.float64)
tensor([-207.4414, -203.2584, -124.5562, -217.5122, -165.8887],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3369, device='cuda:0', dtype=torch.float64)
tensor([-207.7451, -202.9528, -124.7042, -217.7293, -165.9381],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3225, device='cuda:0', dtype=torch.float64)
tensor([-208.1218, -202.6523, -124.8818, -217.9504, -166.1089],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2934, device='cuda:0', dtype=torch.float64)
tensor([-208.5294, -202.3497, -125.1258, -218.2072, -166.3814],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2699, device='cuda:0', dtype=torch.float64)
tensor([-208.7476, -202.0779, -125.3616, -218.3924, -166.5278],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2894, device='cuda:0', dtype=torch.float64)
tensor([-209.2288, -201.7911, -125.6609, -218.7097, -166.8552],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2600, device='cuda:0', dtype=torch.float64)
tensor([-209.5442, -201.5191, -125.8649, -218.8883, -167.2361],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2850, device='cuda:0', dtype=torch.float64)
tensor([-209.5329, -201.3136, -125.9917, -218.8803, -167.3576],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2885, device='cuda:0', dtype=torch.float64)
tensor([-209.4426, -201.2214, -126.0755, -218.7062, -167.4783],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2632, device='cuda:0', dtype=torch.float64)
tensor([-209.5297, -201.2916, -126.1918, -218.5567, -167.7922],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2899, device='cuda:0', dtype=torch.float64)
tensor([-209.7133, -201.3412, -126.3458, -218.3833, -168.1853],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2877, device='cuda:0', dtype=torch.float64)
tensor([-209.8968, -201.4099, -126.5876, -218.2495, -168.7315],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2668, device='cuda:0', dtype=torch.float64)
tensor([-209.9972, -201.4903, -126.8264, -218.1283, -169.1224],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2796, device='cuda:0', dtype=torch.float64)
tensor([-210.1529, -201.7262, -127.0958, -218.1622, -169.5350],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3082, device='cuda:0', dtype=torch.float64)
tensor([-210.1762, -201.7785, -127.3025, -218.1331, -169.8439],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2381, device='cuda:0', dtype=torch.float64)
tensor([-210.1849, -201.8177, -127.4971, -218.1367, -170.0787],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2949, device='cuda:0', dtype=torch.float64)
tensor([-210.1361, -201.9795, -127.7502, -218.2304, -170.2686],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3303, device='cuda:0', dtype=torch.float64)
tensor([-210.1708, -202.0429, -128.0006, -218.3685, -170.5082],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3575, device='cuda:0', dtype=torch.float64)
tensor([-209.7344, -201.9451, -128.1149, -218.2656, -170.3570],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2406, device='cuda:0', dtype=torch.float64)
tensor([-209.4529, -202.0802, -128.2522, -218.2988, -170.3811],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3055, device='cuda:0', dtype=torch.float64)
tensor([-209.1845, -202.1315, -128.3190, -218.2637, -170.3941],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3480, device='cuda:0', dtype=torch.float64)
tensor([-208.8477, -202.2716, -128.3337, -218.2017, -170.2386],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2971, device='cuda:0', dtype=torch.float64)
tensor([-208.4613, -202.5255, -128.3320, -218.1769, -169.9946],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3003, device='cuda:0', dtype=torch.float64)
tensor([-208.1460, -202.6493, -128.2958, -218.1529, -169.7495],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3080, device='cuda:0', dtype=torch.float64)
tensor([-208.2386, -202.9722, -128.4272, -218.3810, -169.8589],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2685, device='cuda:0', dtype=torch.float64)
tensor([-208.4633, -203.3651, -128.5481, -218.6109, -170.1170],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3105, device='cuda:0', dtype=torch.float64)
tensor([-208.9038, -203.7472, -128.7306, -218.8448, -170.5855],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3046, device='cuda:0', dtype=torch.float64)
tensor([-209.0056, -203.7501, -128.7915, -218.8411, -170.8160],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3284, device='cuda:0', dtype=torch.float64)
tensor([-209.3210, -203.6845, -128.9505, -218.9800, -171.1939],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2638, device='cuda:0', dtype=torch.float64)
tensor([-209.7362, -203.6743, -129.1834, -219.2247, -171.6601],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2753, device='cuda:0', dtype=torch.float64)
tensor([-210.0824, -203.6309, -129.4312, -219.5171, -172.0552],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3114, device='cuda:0', dtype=torch.float64)
tensor([-210.2989, -203.6043, -129.6118, -219.6685, -172.3159],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2987, device='cuda:0', dtype=torch.float64)
tensor([-210.7579, -203.5960, -129.8408, -219.9116, -172.8800],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2694, device='cuda:0', dtype=torch.float64)
tensor([-211.1324, -203.5428, -130.0438, -220.1069, -173.3099],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3141, device='cuda:0', dtype=torch.float64)
tensor([-211.2970, -203.4447, -130.1879, -220.1477, -173.4468],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3045, device='cuda:0', dtype=torch.float64)
tensor([-211.5288, -203.2213, -130.3486, -220.1640, -173.4610],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2937, device='cuda:0', dtype=torch.float64)
tensor([-211.8092, -203.0715, -130.5770, -220.3002, -173.5101],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2797, device='cuda:0', dtype=torch.float64)
tensor([-212.0287, -203.0281, -130.7625, -220.4373, -173.4443],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2700, device='cuda:0', dtype=torch.float64)
tensor([-212.0428, -202.9105, -130.8738, -220.4077, -173.2378],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3040, device='cuda:0', dtype=torch.float64)
tensor([-212.1786, -202.8204, -131.0089, -220.4565, -173.1226],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2543, device='cuda:0', dtype=torch.float64)
tensor([-212.1542, -202.7657, -131.0778, -220.4598, -172.9368],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2956, device='cuda:0', dtype=torch.float64)
tensor([-212.3247, -202.7586, -131.1737, -220.5493, -172.8702],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3183, device='cuda:0', dtype=torch.float64)
tensor([-212.4487, -202.8134, -131.2017, -220.5543, -172.7345],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2793, device='cuda:0', dtype=torch.float64)
tensor([-212.7455, -202.7275, -131.2993, -220.6675, -172.7631],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2473, device='cuda:0', dtype=torch.float64)
tensor([-213.0711, -202.5784, -131.4631, -220.8165, -172.8185],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2765, device='cuda:0', dtype=torch.float64)
tensor([-213.5658, -202.3497, -131.7135, -221.0284, -172.9849],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2816, device='cuda:0', dtype=torch.float64)
tensor([-213.8158, -201.9526, -131.8820, -221.1135, -173.0199],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3149, device='cuda:0', dtype=torch.float64)
tensor([-213.8088, -201.4388, -131.8801, -220.9422, -172.7699],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2279, device='cuda:0', dtype=torch.float64)
tensor([-213.7069, -200.8847, -131.8670, -220.6951, -172.5169],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3472, device='cuda:0', dtype=torch.float64)
tensor([-213.5879, -200.2254, -131.7918, -220.3522, -172.1892],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3271, device='cuda:0', dtype=torch.float64)
tensor([-213.5280, -199.5289, -131.7204, -219.9951, -171.9421],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3158, device='cuda:0', dtype=torch.float64)
tensor([-213.0422, -198.7142, -131.5335, -219.3925, -171.4482],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2639, device='cuda:0', dtype=torch.float64)
tensor([-212.8818, -197.8961, -131.3757, -219.0260, -171.0453],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3493, device='cuda:0', dtype=torch.float64)
tensor([-213.0043, -197.2923, -131.3403, -218.8625, -170.9266],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2868, device='cuda:0', dtype=torch.float64)
tensor([-213.0389, -196.7357, -131.2898, -218.7224, -170.7057],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2680, device='cuda:0', dtype=torch.float64)
tensor([-213.2903, -196.3294, -131.3226, -218.7060, -170.6009],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2469, device='cuda:0', dtype=torch.float64)
tensor([-213.5479, -195.9781, -131.3248, -218.6197, -170.5032],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2956, device='cuda:0', dtype=torch.float64)
tensor([-213.9488, -195.8288, -131.3878, -218.6634, -170.5830],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2827, device='cuda:0', dtype=torch.float64)
tensor([-214.6291, -195.9050, -131.5573, -218.9550, -170.8374],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2647, device='cuda:0', dtype=torch.float64)
tensor([-215.3053, -195.9591, -131.6967, -219.2955, -171.1138],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2889, device='cuda:0', dtype=torch.float64)
tensor([-215.8979, -195.8991, -131.8435, -219.6849, -171.2810],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2283, device='cuda:0', dtype=torch.float64)
tensor([-216.4141, -195.8865, -131.9943, -220.0246, -171.5074],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2505, device='cuda:0', dtype=torch.float64)
tensor([-217.1588, -196.0047, -132.2274, -220.4979, -172.0114],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3002, device='cuda:0', dtype=torch.float64)
tensor([-218.2654, -196.2189, -132.6236, -221.1660, -172.8831],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2876, device='cuda:0', dtype=torch.float64)
tensor([-219.5680, -196.5068, -133.0722, -221.9775, -173.9492],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2596, device='cuda:0', dtype=torch.float64)
tensor([-220.8006, -196.7123, -133.4937, -222.6792, -174.9967],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2479, device='cuda:0', dtype=torch.float64)
tensor([-221.9459, -196.9782, -133.9366, -223.3631, -175.9239],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2515, device='cuda:0', dtype=torch.float64)
tensor([-223.0995, -197.3347, -134.3655, -224.1121, -176.8110],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2906, device='cuda:0', dtype=torch.float64)
tensor([-224.0351, -197.8271, -134.7654, -224.7788, -177.5201],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2711, device='cuda:0', dtype=torch.float64)
tensor([-224.8611, -198.3671, -135.0782, -225.3308, -178.1952],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2562, device='cuda:0', dtype=torch.float64)
tensor([-225.4601, -198.7590, -135.3227, -225.8149, -178.7069],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3228, device='cuda:0', dtype=torch.float64)
tensor([-225.8357, -199.1810, -135.5721, -226.1896, -179.0728],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2824, device='cuda:0', dtype=torch.float64)
tensor([-226.3336, -199.7344, -135.8343, -226.5987, -179.5203],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3397, device='cuda:0', dtype=torch.float64)
tensor([-227.2790, -200.2765, -136.1705, -227.2118, -180.2863],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3339, device='cuda:0', dtype=torch.float64)
tensor([-228.4290, -200.8784, -136.6055, -227.9369, -181.1449],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2609, device='cuda:0', dtype=torch.float64)
tensor([-229.4217, -201.4277, -136.9970, -228.5447, -181.8436],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2660, device='cuda:0', dtype=torch.float64)
tensor([-230.3906, -202.0048, -137.3638, -229.1901, -182.5627],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2771, device='cuda:0', dtype=torch.float64)
tensor([-230.8776, -202.4717, -137.5689, -229.5499, -182.9422],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2735, device='cuda:0', dtype=torch.float64)
tensor([-231.2624, -202.8130, -137.7461, -229.8053, -183.2126],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2967, device='cuda:0', dtype=torch.float64)
tensor([-231.6166, -203.1565, -137.9791, -230.0443, -183.3978],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2426, device='cuda:0', dtype=torch.float64)
tensor([-231.8887, -203.4708, -138.1952, -230.1676, -183.5374],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2168, device='cuda:0', dtype=torch.float64)
tensor([-232.1000, -203.7043, -138.4278, -230.3324, -183.6083],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2328, device='cuda:0', dtype=torch.float64)
tensor([-232.2285, -203.8746, -138.6630, -230.4578, -183.6324],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2577, device='cuda:0', dtype=torch.float64)
tensor([-232.3819, -204.0488, -138.9118, -230.6327, -183.5974],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2552, device='cuda:0', dtype=torch.float64)
tensor([-232.5862, -204.0771, -139.1478, -230.7865, -183.5548],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2278, device='cuda:0', dtype=torch.float64)
tensor([-232.7050, -204.1300, -139.3774, -230.9162, -183.5106],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3083, device='cuda:0', dtype=torch.float64)
tensor([-233.0855, -204.1058, -139.7664, -231.2068, -183.7449],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2337, device='cuda:0', dtype=torch.float64)
tensor([-233.3118, -204.0391, -140.0791, -231.4385, -183.8052],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2371, device='cuda:0', dtype=torch.float64)
tensor([-233.3005, -203.9258, -140.2954, -231.5354, -183.6680],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2499, device='cuda:0', dtype=torch.float64)
tensor([-233.1368, -203.9281, -140.4645, -231.4800, -183.5911],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3604, device='cuda:0', dtype=torch.float64)
tensor([-233.5148, -204.1888, -140.8088, -231.7875, -184.0418],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3112, device='cuda:0', dtype=torch.float64)
tensor([-234.1032, -204.5382, -141.1975, -232.2528, -184.6094],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2295, device='cuda:0', dtype=torch.float64)
tensor([-234.7407, -204.7916, -141.5632, -232.6815, -185.2462],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2219, device='cuda:0', dtype=torch.float64)
tensor([-235.2399, -205.0347, -141.9083, -233.0739, -185.7579],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2639, device='cuda:0', dtype=torch.float64)
tensor([-235.7149, -205.2051, -142.2365, -233.4657, -186.2726],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2523, device='cuda:0', dtype=torch.float64)
tensor([-235.9993, -205.2414, -142.4853, -233.7637, -186.5359],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2621, device='cuda:0', dtype=torch.float64)
tensor([-236.5692, -205.2038, -142.7837, -234.0991, -187.0002],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2706, device='cuda:0', dtype=torch.float64)
tensor([-237.1948, -205.2307, -143.0476, -234.4854, -187.4404],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2630, device='cuda:0', dtype=torch.float64)
tensor([-237.7597, -205.3520, -143.2876, -234.9061, -187.8418],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2998, device='cuda:0', dtype=torch.float64)
tensor([-238.2721, -205.5717, -143.4886, -235.4309, -188.0446],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2467, device='cuda:0', dtype=torch.float64)
tensor([-238.8078, -205.8200, -143.7158, -235.9846, -188.2217],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3055, device='cuda:0', dtype=torch.float64)
tensor([-239.7072, -206.0616, -144.0859, -236.7668, -188.7177],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2323, device='cuda:0', dtype=torch.float64)
tensor([-240.8245, -206.2486, -144.4836, -237.6276, -189.3938],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2894, device='cuda:0', dtype=torch.float64)
tensor([-241.9248, -206.3546, -144.8718, -238.4367, -190.1033],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2959, device='cuda:0', dtype=torch.float64)
tensor([-242.7715, -206.1977, -145.1641, -239.1050, -190.5371],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2533, device='cuda:0', dtype=torch.float64)
tensor([-243.4598, -205.9723, -145.4271, -239.7031, -190.8431],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2787, device='cuda:0', dtype=torch.float64)
tensor([-243.9576, -205.6390, -145.5849, -240.0912, -190.9475],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2647, device='cuda:0', dtype=torch.float64)
tensor([-244.6301, -205.2654, -145.7770, -240.5894, -191.2547],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2498, device='cuda:0', dtype=torch.float64)
tensor([-245.2673, -204.9408, -146.0072, -241.0803, -191.5820],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2428, device='cuda:0', dtype=torch.float64)
tensor([-246.0006, -204.6747, -146.2670, -241.6447, -191.9649],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2816, device='cuda:0', dtype=torch.float64)
tensor([-246.3972, -204.4064, -146.3649, -241.9934, -192.0883],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2537, device='cuda:0', dtype=torch.float64)
tensor([-246.5636, -204.1101, -146.4096, -242.2232, -191.9954],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2750, device='cuda:0', dtype=torch.float64)
tensor([-246.4741, -203.8131, -146.3677, -242.2993, -191.8544],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2600, device='cuda:0', dtype=torch.float64)
tensor([-246.2621, -203.5418, -146.2765, -242.2768, -191.5860],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2312, device='cuda:0', dtype=torch.float64)
tensor([-246.2211, -203.2581, -146.2499, -242.4142, -191.4615],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2472, device='cuda:0', dtype=torch.float64)
tensor([-246.2371, -203.0986, -146.2405, -242.5648, -191.3429],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2605, device='cuda:0', dtype=torch.float64)
tensor([-246.2221, -203.0793, -146.1664, -242.7397, -191.2296],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2532, device='cuda:0', dtype=torch.float64)
tensor([-246.1321, -203.2502, -146.0797, -242.8396, -191.1208],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2596, device='cuda:0', dtype=torch.float64)
tensor([-246.3770, -203.4205, -146.0855, -243.1523, -191.2104],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2720, device='cuda:0', dtype=torch.float64)
tensor([-246.7886, -203.7418, -146.1889, -243.5849, -191.5045],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2569, device='cuda:0', dtype=torch.float64)
tensor([-247.2200, -203.9443, -146.2882, -243.9214, -191.8726],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2570, device='cuda:0', dtype=torch.float64)
tensor([-247.7923, -204.1102, -146.4701, -244.2678, -192.4462],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2544, device='cuda:0', dtype=torch.float64)
tensor([-248.6405, -204.1584, -146.7244, -244.6892, -193.2531],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2480, device='cuda:0', dtype=torch.float64)
tensor([-249.5313, -204.2789, -147.0276, -245.1030, -194.1454],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2797, device='cuda:0', dtype=torch.float64)
tensor([-250.5429, -204.4372, -147.3684, -245.5344, -195.1785],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2052, device='cuda:0', dtype=torch.float64)
tensor([-251.6727, -204.4621, -147.7182, -245.9823, -196.3244],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2337, device='cuda:0', dtype=torch.float64)
tensor([-252.5394, -204.3709, -147.9643, -246.3016, -197.1331],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2371, device='cuda:0', dtype=torch.float64)
tensor([-253.2462, -204.2751, -148.1819, -246.4796, -197.8735],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2258, device='cuda:0', dtype=torch.float64)
tensor([-253.9984, -204.0359, -148.3715, -246.5952, -198.5989],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2386, device='cuda:0', dtype=torch.float64)
tensor([-254.3591, -203.8585, -148.4454, -246.4786, -198.9529],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2797, device='cuda:0', dtype=torch.float64)
tensor([-254.5268, -203.7457, -148.4983, -246.2765, -199.1246],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2587, device='cuda:0', dtype=torch.float64)
tensor([-254.8108, -203.7033, -148.5900, -246.1838, -199.3447],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2675, device='cuda:0', dtype=torch.float64)
tensor([-254.8795, -203.7452, -148.5745, -246.0553, -199.3791],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2588, device='cuda:0', dtype=torch.float64)
tensor([-254.7774, -203.8183, -148.4721, -245.8854, -199.2593],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3124, device='cuda:0', dtype=torch.float64)
tensor([-254.5780, -203.8572, -148.3210, -245.6907, -198.9603],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2472, device='cuda:0', dtype=torch.float64)
tensor([-254.4033, -203.9427, -148.2059, -245.5418, -198.6741],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2142, device='cuda:0', dtype=torch.float64)
tensor([-254.1322, -203.9999, -148.0921, -245.3537, -198.2493],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2531, device='cuda:0', dtype=torch.float64)
tensor([-253.9346, -204.0508, -148.0335, -245.1721, -197.9671],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2128, device='cuda:0', dtype=torch.float64)
tensor([-253.7495, -204.0432, -147.9615, -245.0311, -197.6185],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2457, device='cuda:0', dtype=torch.float64)
tensor([-253.6802, -203.9138, -147.8524, -244.8569, -197.4262],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2437, device='cuda:0', dtype=torch.float64)
tensor([-253.6423, -203.7577, -147.7342, -244.6911, -197.2232],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2885, device='cuda:0', dtype=torch.float64)
tensor([-253.5440, -203.5758, -147.6100, -244.4809, -196.9769],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2240, device='cuda:0', dtype=torch.float64)
tensor([-253.7329, -203.3076, -147.5385, -244.3353, -197.0732],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2678, device='cuda:0', dtype=torch.float64)
tensor([-254.0904, -202.8699, -147.5098, -244.2416, -197.1595],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2022, device='cuda:0', dtype=torch.float64)
tensor([-254.2671, -202.3162, -147.4450, -244.0606, -197.1215],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2730, device='cuda:0', dtype=torch.float64)
tensor([-254.4501, -201.7152, -147.3695, -243.8566, -197.1836],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2116, device='cuda:0', dtype=torch.float64)
tensor([-254.6983, -201.3065, -147.3526, -243.6868, -197.3659],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2263, device='cuda:0', dtype=torch.float64)
tensor([-254.8426, -200.9746, -147.3387, -243.5423, -197.4631],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2267, device='cuda:0', dtype=torch.float64)
tensor([-255.0589, -200.5544, -147.3410, -243.4350, -197.4853],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2323, device='cuda:0', dtype=torch.float64)
tensor([-255.1645, -200.2760, -147.3077, -243.2612, -197.4403],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2465, device='cuda:0', dtype=torch.float64)
tensor([-254.9523, -200.0943, -147.2274, -242.9596, -197.1047],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2868, device='cuda:0', dtype=torch.float64)
tensor([-254.3996, -199.6531, -147.0431, -242.4931, -196.4074],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2195, device='cuda:0', dtype=torch.float64)
tensor([-254.1558, -199.3077, -146.9499, -242.2029, -195.9219],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1992, device='cuda:0', dtype=torch.float64)
tensor([-253.7497, -199.1488, -146.8298, -241.8576, -195.4513],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2526, device='cuda:0', dtype=torch.float64)
tensor([-253.1603, -199.1089, -146.6908, -241.4135, -194.8975],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2273, device='cuda:0', dtype=torch.float64)
tensor([-252.5854, -199.1045, -146.6021, -241.0845, -194.3597],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2783, device='cuda:0', dtype=torch.float64)
tensor([-252.2525, -199.2136, -146.5956, -240.8885, -194.0826],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2255, device='cuda:0', dtype=torch.float64)
tensor([-251.8531, -199.3794, -146.5293, -240.6471, -193.7539],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2338, device='cuda:0', dtype=torch.float64)
tensor([-251.7535, -199.4059, -146.5329, -240.5652, -193.6360],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2550, device='cuda:0', dtype=torch.float64)
tensor([-251.4534, -199.4720, -146.4773, -240.3970, -193.3359],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2645, device='cuda:0', dtype=torch.float64)
tensor([-251.0081, -199.5769, -146.4246, -240.1381, -192.9372],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2582, device='cuda:0', dtype=torch.float64)
tensor([-250.4896, -199.6221, -146.2944, -239.7777, -192.5499],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2653, device='cuda:0', dtype=torch.float64)
tensor([-250.3180, -199.7095, -146.2574, -239.5567, -192.4321],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2236, device='cuda:0', dtype=torch.float64)
tensor([-250.2482, -199.7499, -146.3024, -239.4013, -192.3912],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2477, device='cuda:0', dtype=torch.float64)
tensor([-250.2912, -199.6765, -146.4194, -239.2667, -192.4714],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2450, device='cuda:0', dtype=torch.float64)
tensor([-250.3196, -199.4856, -146.4829, -239.0647, -192.5194],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2588, device='cuda:0', dtype=torch.float64)
tensor([-250.6190, -199.2092, -146.6191, -239.0370, -192.7605],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2771, device='cuda:0', dtype=torch.float64)
tensor([-250.6854, -198.9066, -146.6948, -238.8931, -192.8173],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2239, device='cuda:0', dtype=torch.float64)
tensor([-250.9795, -198.7646, -146.8365, -238.8604, -193.0085],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2423, device='cuda:0', dtype=torch.float64)
tensor([-251.3522, -198.6323, -147.0066, -238.8944, -193.2798],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2671, device='cuda:0', dtype=torch.float64)
tensor([-251.8881, -198.4717, -147.2457, -239.0001, -193.6926],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2426, device='cuda:0', dtype=torch.float64)
tensor([-252.3905, -198.3171, -147.5294, -239.1167, -194.0803],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2606, device='cuda:0', dtype=torch.float64)
tensor([-253.0762, -198.0802, -147.8009, -239.2644, -194.5677],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2520, device='cuda:0', dtype=torch.float64)
tensor([-253.5810, -197.7567, -148.0295, -239.3575, -194.9021],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2329, device='cuda:0', dtype=torch.float64)
tensor([-254.2144, -197.4412, -148.3188, -239.6075, -195.2716],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2222, device='cuda:0', dtype=torch.float64)
tensor([-255.0268, -197.1989, -148.6706, -239.9616, -195.7578],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2485, device='cuda:0', dtype=torch.float64)
tensor([-255.9825, -196.9005, -149.0344, -240.4155, -196.3480],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2096, device='cuda:0', dtype=torch.float64)
tensor([-256.9337, -196.5724, -149.4151, -240.9488, -196.8465],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2461, device='cuda:0', dtype=torch.float64)
tensor([-257.7243, -196.3937, -149.7696, -241.4754, -197.2174],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2343, device='cuda:0', dtype=torch.float64)
tensor([-258.5177, -196.2000, -150.1141, -241.9205, -197.6353],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2219, device='cuda:0', dtype=torch.float64)
tensor([-259.3663, -195.9955, -150.5194, -242.4940, -198.1169],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2333, device='cuda:0', dtype=torch.float64)
tensor([-259.9814, -195.7317, -150.8761, -242.9471, -198.3592],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2622, device='cuda:0', dtype=torch.float64)
tensor([-260.8034, -195.4928, -151.2668, -243.5041, -198.6745],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2812, device='cuda:0', dtype=torch.float64)
tensor([-261.3534, -195.1669, -151.5504, -243.8457, -198.8436],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2460, device='cuda:0', dtype=torch.float64)
tensor([-261.9699, -194.9234, -151.7618, -244.1919, -199.1637],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2446, device='cuda:0', dtype=torch.float64)
tensor([-262.9414, -194.6408, -152.0760, -244.7718, -199.6922],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2367, device='cuda:0', dtype=torch.float64)
tensor([-264.0031, -194.4020, -152.4266, -245.3492, -200.2800],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2517, device='cuda:0', dtype=torch.float64)
tensor([-264.7449, -193.9494, -152.6894, -245.6705, -200.6183],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2087, device='cuda:0', dtype=torch.float64)
tensor([-265.3654, -193.3390, -152.9010, -245.8990, -200.8325],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2386, device='cuda:0', dtype=torch.float64)
tensor([-265.7866, -192.8006, -153.0889, -246.1259, -200.9050],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2542, device='cuda:0', dtype=torch.float64)
tensor([-266.3374, -192.3555, -153.3265, -246.3805, -201.1864],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2237, device='cuda:0', dtype=torch.float64)
tensor([-267.0289, -191.9588, -153.5885, -246.7762, -201.5351],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2307, device='cuda:0', dtype=torch.float64)
tensor([-267.6918, -191.6756, -153.8419, -247.1521, -201.8832],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2377, device='cuda:0', dtype=torch.float64)
tensor([-268.3450, -191.5454, -154.0702, -247.5631, -202.2784],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2212, device='cuda:0', dtype=torch.float64)
tensor([-268.9405, -191.4450, -154.2923, -247.8777, -202.6668],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2144, device='cuda:0', dtype=torch.float64)
tensor([-269.3166, -191.3798, -154.4618, -248.1107, -202.8803],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2102, device='cuda:0', dtype=torch.float64)
tensor([-269.6966, -191.3438, -154.6417, -248.2924, -203.0967],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2021, device='cuda:0', dtype=torch.float64)
tensor([-270.0073, -191.4047, -154.7904, -248.4742, -203.3146],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2452, device='cuda:0', dtype=torch.float64)
tensor([-270.1007, -191.4168, -154.8229, -248.5177, -203.3701],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1954, device='cuda:0', dtype=torch.float64)
tensor([-270.0961, -191.4204, -154.8450, -248.4651, -203.3564],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2536, device='cuda:0', dtype=torch.float64)
tensor([-270.1457, -191.4945, -154.8665, -248.4579, -203.3814],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2097, device='cuda:0', dtype=torch.float64)
tensor([-270.1911, -191.5566, -154.8353, -248.3923, -203.3781],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2111, device='cuda:0', dtype=torch.float64)
tensor([-270.2739, -191.6303, -154.8420, -248.3337, -203.3670],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2604, device='cuda:0', dtype=torch.float64)
tensor([-270.2377, -191.8646, -154.7926, -248.2315, -203.3140],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2197, device='cuda:0', dtype=torch.float64)
tensor([-269.9815, -192.1650, -154.7073, -247.9885, -203.1537],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1742, device='cuda:0', dtype=torch.float64)
tensor([-269.7746, -192.4950, -154.6862, -247.7964, -203.0540],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1987, device='cuda:0', dtype=torch.float64)
tensor([-269.6769, -192.7748, -154.6593, -247.6369, -203.0622],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2593, device='cuda:0', dtype=torch.float64)
tensor([-270.0217, -193.1409, -154.7420, -247.7675, -203.4366],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2527, device='cuda:0', dtype=torch.float64)
tensor([-270.7575, -193.6531, -154.9772, -248.0845, -204.1189],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2324, device='cuda:0', dtype=torch.float64)
tensor([-271.3349, -194.0512, -155.1652, -248.2924, -204.6247],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2258, device='cuda:0', dtype=torch.float64)
tensor([-272.0953, -194.4262, -155.4123, -248.5484, -205.2412],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2265, device='cuda:0', dtype=torch.float64)
tensor([-272.6883, -194.7536, -155.6354, -248.7021, -205.7372],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1877, device='cuda:0', dtype=torch.float64)
tensor([-273.2107, -195.0985, -155.8400, -248.8406, -206.1443],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1684, device='cuda:0', dtype=torch.float64)
tensor([-273.7908, -195.3726, -156.0377, -249.0199, -206.5617],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2773, device='cuda:0', dtype=torch.float64)
tensor([-274.3765, -195.6022, -156.2771, -249.2371, -207.0007],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2241, device='cuda:0', dtype=torch.float64)
tensor([-274.7938, -195.9026, -156.5095, -249.4713, -207.2743],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2294, device='cuda:0', dtype=torch.float64)
tensor([-275.4670, -196.1862, -156.8044, -249.8828, -207.7064],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2513, device='cuda:0', dtype=torch.float64)
tensor([-275.8732, -196.3177, -157.0322, -250.1158, -208.0266],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1933, device='cuda:0', dtype=torch.float64)
tensor([-276.2083, -196.4300, -157.2360, -250.3525, -208.2911],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2224, device='cuda:0', dtype=torch.float64)
tensor([-276.2829, -196.3377, -157.3431, -250.4057, -208.2960],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2568, device='cuda:0', dtype=torch.float64)
tensor([-276.4920, -196.3559, -157.4641, -250.5269, -208.5068],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2067, device='cuda:0', dtype=torch.float64)
tensor([-276.7583, -196.2737, -157.5858, -250.6636, -208.7704],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2224, device='cuda:0', dtype=torch.float64)
tensor([-276.6368, -196.0525, -157.6261, -250.5785, -208.6938],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2144, device='cuda:0', dtype=torch.float64)
tensor([-276.6738, -195.8360, -157.7586, -250.5799, -208.7734],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2148, device='cuda:0', dtype=torch.float64)
tensor([-277.0107, -195.6418, -157.9612, -250.8009, -209.0386],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2298, device='cuda:0', dtype=torch.float64)
tensor([-277.1465, -195.2735, -158.1098, -250.9014, -209.0322],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1855, device='cuda:0', dtype=torch.float64)
tensor([-277.3988, -195.0737, -158.2820, -251.0904, -209.1316],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2246, device='cuda:0', dtype=torch.float64)
tensor([-277.7366, -194.8176, -158.4802, -251.2829, -209.2418],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1919, device='cuda:0', dtype=torch.float64)
tensor([-278.1784, -194.6733, -158.6639, -251.5082, -209.4330],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2209, device='cuda:0', dtype=torch.float64)
tensor([-278.5312, -194.4428, -158.8014, -251.7163, -209.5517],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2692, device='cuda:0', dtype=torch.float64)
tensor([-278.7254, -194.0745, -158.8233, -251.7471, -209.5930],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1909, device='cuda:0', dtype=torch.float64)
tensor([-278.8183, -193.7351, -158.8704, -251.7987, -209.5670],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2259, device='cuda:0', dtype=torch.float64)
tensor([-278.7020, -193.4074, -158.8422, -251.8082, -209.3665],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2425, device='cuda:0', dtype=torch.float64)
tensor([-278.3273, -193.0829, -158.7588, -251.6710, -208.9304],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2374, device='cuda:0', dtype=torch.float64)
tensor([-278.4318, -192.8390, -158.8650, -251.7636, -208.8332],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2173, device='cuda:0', dtype=torch.float64)
tensor([-278.3645, -192.5365, -158.9545, -251.7226, -208.7755],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2572, device='cuda:0', dtype=torch.float64)
tensor([-278.7683, -192.4055, -159.1703, -251.8859, -209.1288],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1970, device='cuda:0', dtype=torch.float64)
tensor([-279.1742, -192.1866, -159.3919, -252.0169, -209.4303],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2110, device='cuda:0', dtype=torch.float64)
tensor([-279.2020, -192.0266, -159.4443, -251.9043, -209.5396],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2462, device='cuda:0', dtype=torch.float64)
tensor([-279.3359, -192.0023, -159.5459, -251.7830, -209.8396],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2036, device='cuda:0', dtype=torch.float64)
tensor([-279.5189, -191.7946, -159.6418, -251.6371, -210.1547],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2338, device='cuda:0', dtype=torch.float64)
tensor([-279.6461, -191.4399, -159.6734, -251.4251, -210.4029],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1991, device='cuda:0', dtype=torch.float64)
tensor([-279.9372, -191.1722, -159.7659, -251.3674, -210.7776],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2310, device='cuda:0', dtype=torch.float64)
tensor([-280.4171, -190.8965, -159.8698, -251.4794, -211.2255],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2212, device='cuda:0', dtype=torch.float64)
tensor([-280.8718, -190.6405, -160.0245, -251.5955, -211.6924],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1898, device='cuda:0', dtype=torch.float64)
tensor([-281.3704, -190.4338, -160.1997, -251.7813, -212.1508],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1851, device='cuda:0', dtype=torch.float64)
tensor([-281.7042, -190.1966, -160.3142, -251.8635, -212.4891],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2425, device='cuda:0', dtype=torch.float64)
tensor([-281.9257, -189.9779, -160.4193, -251.8663, -212.7518],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2083, device='cuda:0', dtype=torch.float64)
tensor([-282.3563, -189.8818, -160.5575, -252.0709, -213.0116],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1760, device='cuda:0', dtype=torch.float64)
tensor([-282.7407, -189.9084, -160.6728, -252.2974, -213.2179],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2004, device='cuda:0', dtype=torch.float64)
tensor([-283.1546, -190.0464, -160.7808, -252.5616, -213.4226],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1650, device='cuda:0', dtype=torch.float64)
tensor([-283.6068, -190.1525, -160.8870, -252.8173, -213.6534],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2443, device='cuda:0', dtype=torch.float64)
tensor([-284.1475, -190.1976, -160.9826, -253.0288, -213.8217],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2160, device='cuda:0', dtype=torch.float64)
tensor([-284.5516, -190.2883, -161.0965, -253.2175, -213.8630],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2208, device='cuda:0', dtype=torch.float64)
tensor([-285.0674, -190.4026, -161.2100, -253.4271, -213.9636],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2212, device='cuda:0', dtype=torch.float64)
tensor([-285.3781, -190.5142, -161.2432, -253.5521, -213.9846],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2359, device='cuda:0', dtype=torch.float64)
tensor([-285.9053, -190.5346, -161.3139, -253.7422, -214.1541],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2188, device='cuda:0', dtype=torch.float64)
tensor([-286.4389, -190.5165, -161.3825, -253.9051, -214.3693],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1863, device='cuda:0', dtype=torch.float64)
tensor([-287.0747, -190.5790, -161.5356, -254.1442, -214.7464],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2194, device='cuda:0', dtype=torch.float64)
tensor([-288.1016, -190.6859, -161.8236, -254.6380, -215.4010],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2387, device='cuda:0', dtype=torch.float64)
tensor([-289.0550, -190.8492, -162.0200, -255.1266, -215.9908],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2158, device='cuda:0', dtype=torch.float64)
tensor([-289.6357, -190.8261, -162.0958, -255.3742, -216.2664],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2018, device='cuda:0', dtype=torch.float64)
tensor([-290.1614, -190.6209, -162.1222, -255.5570, -216.4210],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1750, device='cuda:0', dtype=torch.float64)
tensor([-290.5458, -190.3461, -162.1071, -255.6397, -216.4339],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1819, device='cuda:0', dtype=torch.float64)
tensor([-290.9624, -190.1137, -162.1164, -255.8093, -216.4286],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2337, device='cuda:0', dtype=torch.float64)
tensor([-291.6059, -189.9780, -162.2472, -256.1276, -216.5902],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2342, device='cuda:0', dtype=torch.float64)
tensor([-292.5204, -189.9132, -162.4950, -256.6220, -216.9809],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2018, device='cuda:0', dtype=torch.float64)
tensor([-293.2975, -189.8733, -162.6912, -256.9874, -217.3013],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2352, device='cuda:0', dtype=torch.float64)
tensor([-293.8755, -189.7315, -162.8237, -257.2298, -217.3832],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2404, device='cuda:0', dtype=torch.float64)
tensor([-294.4234, -189.6764, -162.9787, -257.5699, -217.4582],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2444, device='cuda:0', dtype=torch.float64)
tensor([-295.3555, -189.6802, -163.2755, -258.1147, -217.8697],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2068, device='cuda:0', dtype=torch.float64)
tensor([-296.1947, -189.5613, -163.5007, -258.5413, -218.2248],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2521, device='cuda:0', dtype=torch.float64)
tensor([-296.4841, -189.2678, -163.5629, -258.6606, -218.1726],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1698, device='cuda:0', dtype=torch.float64)
tensor([-296.8763, -188.9802, -163.6574, -258.8310, -218.1842],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2300, device='cuda:0', dtype=torch.float64)
tensor([-297.2022, -188.6579, -163.7353, -258.8891, -218.2634],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1992, device='cuda:0', dtype=torch.float64)
tensor([-297.6347, -188.3972, -163.9067, -259.0702, -218.4586],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1772, device='cuda:0', dtype=torch.float64)
tensor([-298.1205, -188.2415, -164.0592, -259.2352, -218.7526],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2021, device='cuda:0', dtype=torch.float64)
tensor([-298.6927, -188.1169, -164.2148, -259.4602, -219.0884],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2116, device='cuda:0', dtype=torch.float64)
tensor([-299.3165, -188.1405, -164.4222, -259.7645, -219.5456],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1858, device='cuda:0', dtype=torch.float64)
tensor([-299.8631, -188.1713, -164.5882, -260.0077, -219.9656],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2549, device='cuda:0', dtype=torch.float64)
tensor([-300.3669, -188.2408, -164.8146, -260.2925, -220.3555],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1723, device='cuda:0', dtype=torch.float64)
tensor([-300.8036, -188.2822, -165.0297, -260.5669, -220.6539],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2310, device='cuda:0', dtype=torch.float64)
tensor([-301.2263, -188.3088, -165.2157, -260.8399, -220.8668],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1979, device='cuda:0', dtype=torch.float64)
tensor([-301.6863, -188.4098, -165.4443, -261.1122, -221.1833],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1788, device='cuda:0', dtype=torch.float64)
tensor([-302.0896, -188.5921, -165.6431, -261.3810, -221.4958],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2110, device='cuda:0', dtype=torch.float64)
tensor([-302.5696, -188.8267, -165.8292, -261.6445, -221.8837],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1877, device='cuda:0', dtype=torch.float64)
tensor([-302.9122, -189.0381, -165.9840, -261.8531, -222.1749],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2188, device='cuda:0', dtype=torch.float64)
tensor([-302.8567, -189.1368, -166.0247, -261.8307, -222.2099],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2143, device='cuda:0', dtype=torch.float64)
tensor([-302.7534, -189.1867, -166.0846, -261.7765, -222.2392],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2020, device='cuda:0', dtype=torch.float64)
tensor([-302.9392, -189.4242, -166.2433, -261.8612, -222.5259],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2097, device='cuda:0', dtype=torch.float64)
tensor([-303.2819, -189.5252, -166.4158, -261.9980, -222.8228],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2079, device='cuda:0', dtype=torch.float64)
tensor([-303.2621, -189.5638, -166.5076, -261.9026, -222.8288],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2004, device='cuda:0', dtype=torch.float64)
tensor([-303.3059, -189.5305, -166.6125, -261.8381, -222.8759],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1801, device='cuda:0', dtype=torch.float64)
tensor([-303.1262, -189.4661, -166.6435, -261.6554, -222.7010],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2404, device='cuda:0', dtype=torch.float64)
tensor([-303.4109, -189.5256, -166.8128, -261.7877, -222.8626],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2205, device='cuda:0', dtype=torch.float64)
tensor([-303.6338, -189.5640, -166.9611, -261.9030, -222.9726],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2133, device='cuda:0', dtype=torch.float64)
tensor([-303.9325, -189.5350, -167.1355, -261.9750, -223.1603],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1934, device='cuda:0', dtype=torch.float64)
tensor([-304.3864, -189.5503, -167.3861, -262.1215, -223.4944],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1852, device='cuda:0', dtype=torch.float64)
tensor([-304.9023, -189.6889, -167.6476, -262.3424, -223.8692],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1990, device='cuda:0', dtype=torch.float64)
tensor([-305.4569, -189.7872, -167.9338, -262.5727, -224.2468],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2019, device='cuda:0', dtype=torch.float64)
tensor([-306.0349, -189.8657, -168.2243, -262.8385, -224.6209],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1741, device='cuda:0', dtype=torch.float64)
tensor([-306.2739, -189.9429, -168.3923, -262.9412, -224.7650],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1850, device='cuda:0', dtype=torch.float64)
tensor([-306.4153, -190.0435, -168.5199, -262.9883, -224.8864],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1650, device='cuda:0', dtype=torch.float64)
tensor([-306.4521, -190.0942, -168.5982, -262.9714, -224.9491],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2067, device='cuda:0', dtype=torch.float64)
tensor([-306.3156, -189.9533, -168.6162, -262.8823, -224.7791],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2347, device='cuda:0', dtype=torch.float64)
tensor([-306.4655, -189.8484, -168.6620, -262.9457, -224.8650],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1847, device='cuda:0', dtype=torch.float64)
tensor([-306.7905, -189.8071, -168.7521, -263.1148, -225.0256],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1814, device='cuda:0', dtype=torch.float64)
tensor([-306.9048, -189.7885, -168.7877, -263.2361, -225.0229],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1974, device='cuda:0', dtype=torch.float64)
tensor([-307.1049, -189.6495, -168.7588, -263.3377, -225.0425],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2555, device='cuda:0', dtype=torch.float64)
tensor([-306.8842, -189.5565, -168.6711, -263.1762, -224.7977],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2182, device='cuda:0', dtype=torch.float64)
tensor([-306.7650, -189.5587, -168.6781, -263.0922, -224.6731],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1799, device='cuda:0', dtype=torch.float64)
tensor([-306.7781, -189.5732, -168.6851, -263.0974, -224.5925],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1929, device='cuda:0', dtype=torch.float64)
tensor([-306.7468, -189.4958, -168.7245, -263.0789, -224.4501],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1892, device='cuda:0', dtype=torch.float64)
tensor([-306.6988, -189.3496, -168.7398, -263.0399, -224.2200],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1863, device='cuda:0', dtype=torch.float64)
tensor([-306.6501, -189.1453, -168.7065, -262.9770, -224.0352],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1824, device='cuda:0', dtype=torch.float64)
tensor([-306.5059, -188.9557, -168.6901, -262.9088, -223.8113],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1635, device='cuda:0', dtype=torch.float64)
tensor([-306.2625, -188.7068, -168.6672, -262.7352, -223.5930],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1800, device='cuda:0', dtype=torch.float64)
tensor([-306.3029, -188.4649, -168.7166, -262.7615, -223.5390],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1481, device='cuda:0', dtype=torch.float64)
tensor([-306.3939, -188.2342, -168.7876, -262.8988, -223.4747],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1604, device='cuda:0', dtype=torch.float64)
tensor([-306.3616, -188.0136, -168.8182, -262.9937, -223.3445],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1466, device='cuda:0', dtype=torch.float64)
tensor([-306.5337, -187.7911, -168.9050, -263.1992, -223.3160],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1643, device='cuda:0', dtype=torch.float64)
tensor([-306.9234, -187.6541, -169.0529, -263.5440, -223.4265],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1972, device='cuda:0', dtype=torch.float64)
tensor([-307.2172, -187.4836, -169.1803, -263.8711, -223.4598],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1702, device='cuda:0', dtype=torch.float64)
tensor([-307.4185, -187.2920, -169.3414, -264.1714, -223.4398],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2116, device='cuda:0', dtype=torch.float64)
tensor([-307.7423, -187.1450, -169.5281, -264.5380, -223.5516],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1737, device='cuda:0', dtype=torch.float64)
tensor([-308.0015, -186.9513, -169.7251, -264.8391, -223.5555],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1775, device='cuda:0', dtype=torch.float64)
tensor([-308.0881, -186.7399, -169.8344, -265.0258, -223.4582],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1907, device='cuda:0', dtype=torch.float64)
tensor([-308.2858, -186.5540, -169.9470, -265.2042, -223.4761],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1908, device='cuda:0', dtype=torch.float64)
tensor([-308.7590, -186.3793, -170.1556, -265.5324, -223.7260],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1449, device='cuda:0', dtype=torch.float64)
tensor([-309.1602, -186.2158, -170.4149, -265.7991, -223.9406],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1867, device='cuda:0', dtype=torch.float64)
tensor([-309.6502, -186.0023, -170.6806, -266.0175, -224.2009],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1744, device='cuda:0', dtype=torch.float64)
tensor([-310.1500, -185.8976, -170.9363, -266.2380, -224.4802],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1669, device='cuda:0', dtype=torch.float64)
tensor([-310.4220, -185.7761, -171.1631, -266.3402, -224.6521],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1994, device='cuda:0', dtype=torch.float64)
tensor([-310.9302, -185.7563, -171.4565, -266.5303, -224.9911],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1600, device='cuda:0', dtype=torch.float64)
tensor([-311.5046, -185.7977, -171.8147, -266.8287, -225.3784],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1887, device='cuda:0', dtype=torch.float64)
tensor([-311.6439, -185.8232, -172.0623, -266.8967, -225.4652],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1892, device='cuda:0', dtype=torch.float64)
tensor([-311.7496, -185.8470, -172.2749, -266.8961, -225.5033],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1871, device='cuda:0', dtype=torch.float64)
tensor([-311.9919, -185.7947, -172.5023, -266.9285, -225.6046],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1763, device='cuda:0', dtype=torch.float64)
tensor([-311.9108, -185.7395, -172.6288, -266.8008, -225.4831],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1962, device='cuda:0', dtype=torch.float64)
tensor([-311.8161, -185.7243, -172.8230, -266.6780, -225.4011],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1566, device='cuda:0', dtype=torch.float64)
tensor([-311.8777, -185.6987, -173.0089, -266.6354, -225.3925],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1672, device='cuda:0', dtype=torch.float64)
tensor([-312.2473, -185.7627, -173.2954, -266.8005, -225.5902],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1794, device='cuda:0', dtype=torch.float64)
tensor([-312.4145, -185.9504, -173.5192, -266.9279, -225.6159],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1650, device='cuda:0', dtype=torch.float64)
tensor([-312.7963, -185.9879, -173.7739, -267.1034, -225.7166],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1450, device='cuda:0', dtype=torch.float64)
tensor([-313.1214, -186.0410, -174.0264, -267.2427, -225.7914],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1654, device='cuda:0', dtype=torch.float64)
tensor([-313.4234, -186.1573, -174.2781, -267.4586, -225.7258],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1704, device='cuda:0', dtype=torch.float64)
tensor([-313.7293, -186.2905, -174.4991, -267.6624, -225.6582],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1940, device='cuda:0', dtype=torch.float64)
tensor([-314.0256, -186.4417, -174.7464, -267.8912, -225.6369],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1903, device='cuda:0', dtype=torch.float64)
tensor([-314.4060, -186.5066, -174.9630, -268.1522, -225.6856],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1769, device='cuda:0', dtype=torch.float64)
tensor([-314.7027, -186.5465, -175.0845, -268.3118, -225.6807],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1946, device='cuda:0', dtype=torch.float64)
tensor([-315.1985, -186.7110, -175.3036, -268.5996, -225.8949],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2270, device='cuda:0', dtype=torch.float64)
tensor([-315.8208, -186.9578, -175.5638, -268.9344, -226.2364],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1901, device='cuda:0', dtype=torch.float64)
tensor([-316.3190, -187.2450, -175.7807, -269.2066, -226.5528],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1817, device='cuda:0', dtype=torch.float64)
tensor([-316.9333, -187.5308, -176.0913, -269.6179, -226.9842],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1730, device='cuda:0', dtype=torch.float64)
tensor([-317.5830, -187.7066, -176.4125, -270.0566, -227.3709],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2123, device='cuda:0', dtype=torch.float64)
tensor([-318.0656, -187.9663, -176.7205, -270.4825, -227.6634],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1719, device='cuda:0', dtype=torch.float64)
tensor([-318.4228, -188.2791, -177.0219, -270.8148, -227.8429],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1895, device='cuda:0', dtype=torch.float64)
tensor([-319.0321, -188.5626, -177.3688, -271.2508, -228.1661],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1827, device='cuda:0', dtype=torch.float64)
tensor([-319.4700, -188.8415, -177.7015, -271.6346, -228.3634],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1645, device='cuda:0', dtype=torch.float64)
tensor([-320.1158, -188.9434, -178.0391, -272.0950, -228.6710],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1470, device='cuda:0', dtype=torch.float64)
tensor([-320.9812, -189.0394, -178.4570, -272.6666, -229.0546],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1817, device='cuda:0', dtype=torch.float64)
tensor([-321.9370, -189.1204, -178.8526, -273.2093, -229.5140],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1723, device='cuda:0', dtype=torch.float64)
tensor([-322.8345, -189.2022, -179.2048, -273.7392, -229.9480],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1455, device='cuda:0', dtype=torch.float64)
tensor([-323.7345, -189.2782, -179.5416, -274.2526, -230.4138],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1436, device='cuda:0', dtype=torch.float64)
tensor([-324.6911, -189.4656, -179.9336, -274.8251, -230.8975],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1496, device='cuda:0', dtype=torch.float64)
tensor([-325.5167, -189.6084, -180.2667, -275.2931, -231.2688],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1541, device='cuda:0', dtype=torch.float64)
tensor([-326.2302, -189.7150, -180.6116, -275.7132, -231.5785],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1712, device='cuda:0', dtype=torch.float64)
tensor([-326.7208, -189.7552, -180.9379, -276.0074, -231.8339],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2059, device='cuda:0', dtype=torch.float64)
tensor([-326.7197, -189.6666, -181.1204, -276.0463, -231.8108],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2060, device='cuda:0', dtype=torch.float64)
tensor([-326.9024, -189.6078, -181.3582, -276.2395, -231.9649],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1504, device='cuda:0', dtype=torch.float64)
tensor([-327.1544, -189.3612, -181.5892, -276.4147, -232.1037],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1551, device='cuda:0', dtype=torch.float64)
tensor([-327.3574, -189.2007, -181.8305, -276.5504, -232.2802],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1371, device='cuda:0', dtype=torch.float64)
tensor([-327.3312, -188.9324, -182.0040, -276.5360, -232.3286],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1835, device='cuda:0', dtype=torch.float64)
tensor([-327.4622, -188.7023, -182.2084, -276.5611, -232.4968],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1484, device='cuda:0', dtype=torch.float64)
tensor([-327.5541, -188.3684, -182.3600, -276.5260, -232.5924],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1721, device='cuda:0', dtype=torch.float64)
tensor([-327.8815, -188.0800, -182.5611, -276.6462, -232.7657],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1650, device='cuda:0', dtype=torch.float64)
tensor([-328.1253, -187.6454, -182.6918, -276.6582, -232.7942],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2004, device='cuda:0', dtype=torch.float64)
tensor([-328.7124, -187.2777, -182.9134, -276.7995, -233.0195],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1629, device='cuda:0', dtype=torch.float64)
tensor([-329.2967, -186.9266, -183.1144, -276.9691, -233.2224],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1595, device='cuda:0', dtype=torch.float64)
tensor([-329.8334, -186.5638, -183.2963, -277.0347, -233.4047],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1681, device='cuda:0', dtype=torch.float64)
tensor([-330.4367, -186.1729, -183.4662, -277.0792, -233.6922],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1488, device='cuda:0', dtype=torch.float64)
tensor([-330.8904, -185.7510, -183.5692, -276.9979, -233.9521],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1512, device='cuda:0', dtype=torch.float64)
tensor([-331.1963, -185.2607, -183.6147, -276.8210, -234.1223],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1456, device='cuda:0', dtype=torch.float64)
tensor([-331.2140, -184.7547, -183.5802, -276.5951, -234.0667],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1626, device='cuda:0', dtype=torch.float64)
tensor([-331.4684, -184.2477, -183.5892, -276.4509, -234.1383],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1768, device='cuda:0', dtype=torch.float64)
tensor([-332.0522, -183.9367, -183.7000, -276.5230, -234.4156],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1580, device='cuda:0', dtype=torch.float64)
tensor([-332.3343, -183.5175, -183.6694, -276.4428, -234.4999],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1618, device='cuda:0', dtype=torch.float64)
tensor([-332.6806, -183.1894, -183.7079, -276.4224, -234.6237],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1783, device='cuda:0', dtype=torch.float64)
tensor([-333.0663, -182.9567, -183.7300, -276.3773, -234.7386],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1483, device='cuda:0', dtype=torch.float64)
tensor([-333.4671, -182.8268, -183.7811, -276.3674, -234.9071],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1642, device='cuda:0', dtype=torch.float64)
tensor([-333.7593, -182.7216, -183.8445, -276.3520, -235.0460],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1257, device='cuda:0', dtype=torch.float64)
tensor([-334.0403, -182.6421, -183.8956, -276.3309, -235.1857],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1396, device='cuda:0', dtype=torch.float64)
tensor([-334.1489, -182.5902, -183.9270, -276.2304, -235.2806],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1493, device='cuda:0', dtype=torch.float64)
tensor([-334.1385, -182.5667, -183.9088, -276.0117, -235.2944],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1806, device='cuda:0', dtype=torch.float64)
tensor([-334.2714, -182.6307, -183.9578, -275.9357, -235.3558],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1694, device='cuda:0', dtype=torch.float64)
tensor([-334.6859, -182.7582, -184.0412, -276.0264, -235.5083],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1408, device='cuda:0', dtype=torch.float64)
tensor([-335.0712, -182.9220, -184.1277, -276.0688, -235.6930],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1415, device='cuda:0', dtype=torch.float64)
tensor([-335.1632, -183.0722, -184.1207, -275.9478, -235.6833],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1594, device='cuda:0', dtype=torch.float64)
tensor([-335.2402, -183.2679, -184.0973, -275.7988, -235.6491],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1903, device='cuda:0', dtype=torch.float64)
tensor([-334.9916, -183.3851, -183.8944, -275.4822, -235.3984],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1483, device='cuda:0', dtype=torch.float64)
tensor([-334.5389, -183.4026, -183.6300, -275.0941, -234.9859],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1378, device='cuda:0', dtype=torch.float64)
tensor([-334.1322, -183.4901, -183.3909, -274.8025, -234.6456],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1708, device='cuda:0', dtype=torch.float64)
tensor([-333.4435, -183.5409, -183.1139, -274.4052, -234.1442],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1583, device='cuda:0', dtype=torch.float64)
tensor([-332.8132, -183.6366, -182.8536, -274.0294, -233.7066],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1411, device='cuda:0', dtype=torch.float64)
tensor([-332.1868, -183.6571, -182.5434, -273.6117, -233.2415],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1572, device='cuda:0', dtype=torch.float64)
tensor([-332.1301, -183.7706, -182.4095, -273.4810, -233.1528],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1494, device='cuda:0', dtype=torch.float64)
tensor([-332.0714, -183.9327, -182.3928, -273.4571, -233.0398],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1363, device='cuda:0', dtype=torch.float64)
tensor([-332.1036, -184.0761, -182.3935, -273.4826, -232.9015],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1386, device='cuda:0', dtype=torch.float64)
tensor([-332.1428, -184.3109, -182.4550, -273.5109, -232.8606],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1787, device='cuda:0', dtype=torch.float64)
tensor([-332.0938, -184.5963, -182.5463, -273.4659, -232.8424],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1831, device='cuda:0', dtype=torch.float64)
tensor([-332.0288, -184.8469, -182.5926, -273.4078, -232.8685],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1571, device='cuda:0', dtype=torch.float64)
tensor([-332.0605, -185.1086, -182.7038, -273.4242, -232.9917],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1854, device='cuda:0', dtype=torch.float64)
tensor([-331.8657, -185.1545, -182.7336, -273.3408, -232.9767],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1473, device='cuda:0', dtype=torch.float64)
tensor([-331.9280, -185.3268, -182.8642, -273.3742, -233.1624],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1545, device='cuda:0', dtype=torch.float64)
tensor([-332.0176, -185.5338, -182.9817, -273.4248, -233.2639],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1542, device='cuda:0', dtype=torch.float64)
tensor([-332.0848, -185.7079, -183.1550, -273.5146, -233.4503],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1735, device='cuda:0', dtype=torch.float64)
tensor([-332.2441, -185.7636, -183.2971, -273.5339, -233.6375],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1475, device='cuda:0', dtype=torch.float64)
tensor([-332.4389, -185.6990, -183.4030, -273.5357, -233.8052],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1497, device='cuda:0', dtype=torch.float64)
tensor([-333.0142, -185.6470, -183.6616, -273.7371, -234.1560],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1465, device='cuda:0', dtype=torch.float64)
tensor([-333.5418, -185.7395, -183.9176, -273.9537, -234.5136],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1514, device='cuda:0', dtype=torch.float64)
tensor([-334.2143, -185.8169, -184.2203, -274.2427, -234.9418],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1360, device='cuda:0', dtype=torch.float64)
tensor([-334.7624, -185.7625, -184.4827, -274.4664, -235.3280],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1692, device='cuda:0', dtype=torch.float64)
tensor([-335.1737, -185.6696, -184.7209, -274.6375, -235.5987],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1439, device='cuda:0', dtype=torch.float64)
tensor([-335.3849, -185.5172, -184.9196, -274.7463, -235.7657],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1419, device='cuda:0', dtype=torch.float64)
tensor([-335.4252, -185.3660, -185.1099, -274.8038, -235.8286],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1404, device='cuda:0', dtype=torch.float64)
tensor([-335.5275, -185.2207, -185.3782, -274.9941, -235.9974],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1633, device='cuda:0', dtype=torch.float64)
tensor([-335.6072, -184.9481, -185.5591, -275.1164, -236.0564],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1271, device='cuda:0', dtype=torch.float64)
tensor([-335.6749, -184.7266, -185.7406, -275.2557, -236.0713],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1533, device='cuda:0', dtype=torch.float64)
tensor([-335.7930, -184.4601, -185.9218, -275.3962, -236.1403],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1489, device='cuda:0', dtype=torch.float64)
tensor([-336.1262, -184.2558, -186.1512, -275.6464, -236.2738],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1384, device='cuda:0', dtype=torch.float64)
tensor([-336.4209, -184.0666, -186.3759, -275.8593, -236.4153],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1307, device='cuda:0', dtype=torch.float64)
tensor([-336.6554, -183.8329, -186.5109, -276.0025, -236.4905],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1437, device='cuda:0', dtype=torch.float64)
tensor([-336.8079, -183.6996, -186.6599, -276.1227, -236.5895],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1376, device='cuda:0', dtype=torch.float64)
tensor([-337.0721, -183.6584, -186.8415, -276.2675, -236.7493],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1581, device='cuda:0', dtype=torch.float64)
tensor([-337.2963, -183.7360, -187.0439, -276.4313, -236.8925],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1747, device='cuda:0', dtype=torch.float64)
tensor([-337.6945, -183.9534, -187.2958, -276.7413, -237.1801],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1308, device='cuda:0', dtype=torch.float64)
tensor([-338.1155, -184.2449, -187.5590, -277.0982, -237.4501],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1296, device='cuda:0', dtype=torch.float64)
tensor([-338.3900, -184.5639, -187.8200, -277.4267, -237.6356],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1905, device='cuda:0', dtype=torch.float64)
tensor([-338.9346, -184.9370, -188.2776, -278.0357, -238.0039],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1471, device='cuda:0', dtype=torch.float64)
tensor([-339.5483, -185.3063, -188.6927, -278.6744, -238.3377],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1382, device='cuda:0', dtype=torch.float64)
tensor([-340.1911, -185.6091, -189.1237, -279.3040, -238.7164],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1470, device='cuda:0', dtype=torch.float64)
tensor([-340.9195, -185.9119, -189.5548, -279.8713, -239.1007],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1766, device='cuda:0', dtype=torch.float64)
tensor([-341.8598, -186.1286, -190.1111, -280.5601, -239.5899],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1480, device='cuda:0', dtype=torch.float64)
tensor([-342.8513, -186.3731, -190.7005, -281.2362, -240.1224],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1168, device='cuda:0', dtype=torch.float64)
tensor([-343.6914, -186.5466, -191.2410, -281.7621, -240.5732],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1457, device='cuda:0', dtype=torch.float64)
tensor([-344.3258, -186.6583, -191.6878, -282.1141, -240.8306],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1702, device='cuda:0', dtype=torch.float64)
tensor([-345.0623, -186.7781, -192.1201, -282.5239, -241.0778],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1385, device='cuda:0', dtype=torch.float64)
tensor([-345.8148, -186.8789, -192.5811, -282.9338, -241.3768],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1528, device='cuda:0', dtype=torch.float64)
tensor([-346.6271, -187.0447, -193.0919, -283.4161, -241.6960],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1293, device='cuda:0', dtype=torch.float64)
tensor([-347.4195, -187.2156, -193.5661, -283.8085, -242.0607],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1559, device='cuda:0', dtype=torch.float64)
tensor([-348.2905, -187.3232, -194.0872, -284.2669, -242.4762],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1500, device='cuda:0', dtype=torch.float64)
tensor([-349.1486, -187.4013, -194.5768, -284.7130, -242.9127],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1214, device='cuda:0', dtype=torch.float64)
tensor([-349.9811, -187.4874, -195.0253, -285.1298, -243.3444],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1311, device='cuda:0', dtype=torch.float64)
tensor([-350.7183, -187.4817, -195.4364, -285.4816, -243.7317],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1703, device='cuda:0', dtype=torch.float64)
tensor([-351.3586, -187.3882, -195.7924, -285.7839, -244.0155],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1419, device='cuda:0', dtype=torch.float64)
tensor([-351.9748, -187.3783, -196.1561, -286.0752, -244.3452],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1504, device='cuda:0', dtype=torch.float64)
tensor([-352.4984, -187.3545, -196.4649, -286.3256, -244.5896],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1848, device='cuda:0', dtype=torch.float64)
tensor([-352.9263, -187.2636, -196.7111, -286.4506, -244.8056],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1529, device='cuda:0', dtype=torch.float64)
tensor([-353.3528, -187.2590, -197.0075, -286.6006, -245.0386],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1363, device='cuda:0', dtype=torch.float64)
tensor([-353.6560, -187.3189, -197.2795, -286.6489, -245.2374],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1291, device='cuda:0', dtype=torch.float64)
tensor([-353.7597, -187.2965, -197.4668, -286.5789, -245.3183],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1680, device='cuda:0', dtype=torch.float64)
tensor([-353.9105, -187.1921, -197.6135, -286.4788, -245.3957],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1342, device='cuda:0', dtype=torch.float64)
tensor([-354.2007, -187.1308, -197.7614, -286.4728, -245.4443],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1461, device='cuda:0', dtype=torch.float64)
tensor([-354.7365, -187.0211, -197.9782, -286.5409, -245.5833],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1370, device='cuda:0', dtype=torch.float64)
tensor([-355.5378, -186.8493, -198.2637, -286.7230, -245.8649],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1636, device='cuda:0', dtype=torch.float64)
tensor([-356.2583, -186.6193, -198.5455, -286.8626, -246.1162],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1443, device='cuda:0', dtype=torch.float64)
tensor([-357.2071, -186.4538, -198.9192, -287.1026, -246.4630],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1501, device='cuda:0', dtype=torch.float64)
tensor([-358.1210, -186.4078, -199.2552, -287.3996, -246.7167],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1408, device='cuda:0', dtype=torch.float64)
tensor([-358.9999, -186.4284, -199.6114, -287.6637, -246.9806],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1418, device='cuda:0', dtype=torch.float64)
tensor([-359.8258, -186.4128, -199.9360, -287.9390, -247.2097],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1456, device='cuda:0', dtype=torch.float64)
tensor([-360.3958, -186.3679, -200.1209, -288.0886, -247.2424],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1329, device='cuda:0', dtype=torch.float64)
tensor([-361.0607, -186.3334, -200.3421, -288.3042, -247.3385],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1492, device='cuda:0', dtype=torch.float64)
tensor([-361.9016, -186.2745, -200.6183, -288.5970, -247.4983],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1336, device='cuda:0', dtype=torch.float64)
tensor([-362.5373, -186.2167, -200.8333, -288.8305, -247.5843],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1249, device='cuda:0', dtype=torch.float64)
tensor([-363.0816, -186.0815, -201.0563, -288.9928, -247.6795],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1784, device='cuda:0', dtype=torch.float64)
tensor([-363.5461, -185.9699, -201.2293, -289.1301, -247.7318],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1420, device='cuda:0', dtype=torch.float64)
tensor([-363.9109, -185.8484, -201.3806, -289.2577, -247.7176],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1550, device='cuda:0', dtype=torch.float64)
tensor([-364.3320, -185.7797, -201.5054, -289.4327, -247.6300],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1426, device='cuda:0', dtype=torch.float64)
tensor([-364.9000, -185.5917, -201.6236, -289.6332, -247.5103],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1594, device='cuda:0', dtype=torch.float64)
tensor([-365.4350, -185.5757, -201.8175, -289.8562, -247.4908],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1598, device='cuda:0', dtype=torch.float64)
tensor([-365.8737, -185.6619, -202.0413, -290.0814, -247.5390],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1202, device='cuda:0', dtype=torch.float64)
tensor([-366.1934, -185.7246, -202.2058, -290.2532, -247.5108],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1314, device='cuda:0', dtype=torch.float64)
tensor([-366.6439, -185.7643, -202.3924, -290.4687, -247.5213],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1371, device='cuda:0', dtype=torch.float64)
tensor([-366.8278, -185.7959, -202.5232, -290.5986, -247.4297],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1282, device='cuda:0', dtype=torch.float64)
tensor([-367.0490, -185.7745, -202.6617, -290.7087, -247.4107],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1168, device='cuda:0', dtype=torch.float64)
tensor([-366.8972, -185.8283, -202.7528, -290.6769, -247.2579],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1398, device='cuda:0', dtype=torch.float64)
tensor([-366.7485, -185.8820, -202.8417, -290.6736, -247.1117],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1212, device='cuda:0', dtype=torch.float64)
tensor([-366.4481, -185.8042, -202.8336, -290.5993, -246.8457],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1261, device='cuda:0', dtype=torch.float64)
tensor([-366.2769, -185.6910, -202.7803, -290.5684, -246.5697],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1365, device='cuda:0', dtype=torch.float64)
tensor([-366.2923, -185.5208, -202.7531, -290.6151, -246.2729],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1377, device='cuda:0', dtype=torch.float64)
tensor([-366.2671, -185.2929, -202.7006, -290.6782, -245.9373],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1087, device='cuda:0', dtype=torch.float64)
tensor([-366.2841, -185.1459, -202.7071, -290.7607, -245.6988],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1160, device='cuda:0', dtype=torch.float64)
tensor([-366.3535, -185.0647, -202.7335, -290.8307, -245.5507],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1246, device='cuda:0', dtype=torch.float64)
tensor([-366.3249, -185.0014, -202.7908, -290.8937, -245.3977],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1233, device='cuda:0', dtype=torch.float64)
tensor([-366.5891, -184.9620, -202.9250, -291.0885, -245.3864],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1345, device='cuda:0', dtype=torch.float64)
tensor([-367.2608, -184.9749, -203.1820, -291.4426, -245.4946],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1177, device='cuda:0', dtype=torch.float64)
tensor([-367.9631, -184.9535, -203.4261, -291.7535, -245.6259],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1475, device='cuda:0', dtype=torch.float64)
tensor([-368.2107, -184.8060, -203.5275, -291.8905, -245.5556],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1280, device='cuda:0', dtype=torch.float64)
tensor([-368.2551, -184.6684, -203.5736, -291.9414, -245.4000],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1368, device='cuda:0', dtype=torch.float64)
tensor([-368.3625, -184.6610, -203.6670, -292.0429, -245.3295],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1403, device='cuda:0', dtype=torch.float64)
tensor([-368.4261, -184.5641, -203.7075, -292.1125, -245.2614],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1232, device='cuda:0', dtype=torch.float64)
tensor([-368.7195, -184.5351, -203.8912, -292.3323, -245.3956],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1104, device='cuda:0', dtype=torch.float64)
tensor([-369.0361, -184.4788, -204.0500, -292.5916, -245.4359],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1206, device='cuda:0', dtype=torch.float64)
tensor([-369.0936, -184.3246, -204.1082, -292.7557, -245.3120],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1537, device='cuda:0', dtype=torch.float64)
tensor([-369.5383, -184.2958, -204.3847, -293.0734, -245.4855],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1416, device='cuda:0', dtype=torch.float64)
tensor([-369.8188, -184.2483, -204.6293, -293.3490, -245.6116],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1270, device='cuda:0', dtype=torch.float64)
tensor([-370.1484, -184.3042, -204.9375, -293.6844, -245.7813],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1246, device='cuda:0', dtype=torch.float64)
tensor([-370.4392, -184.4831, -205.2758, -293.9928, -245.9518],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1012, device='cuda:0', dtype=torch.float64)
tensor([-370.8088, -184.5108, -205.5278, -294.2476, -246.0573],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1099, device='cuda:0', dtype=torch.float64)
tensor([-371.0794, -184.4395, -205.7052, -294.4258, -246.0351],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1443, device='cuda:0', dtype=torch.float64)
tensor([-371.4233, -184.3707, -205.9081, -294.6299, -246.0863],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1385, device='cuda:0', dtype=torch.float64)
tensor([-371.5373, -184.2313, -206.0788, -294.7101, -246.0347],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1175, device='cuda:0', dtype=torch.float64)
tensor([-371.8142, -184.2075, -206.3653, -294.9456, -246.0881],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1132, device='cuda:0', dtype=torch.float64)
tensor([-372.1146, -184.2271, -206.6434, -295.1489, -246.1317],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1097, device='cuda:0', dtype=torch.float64)
tensor([-372.4502, -184.3431, -206.9282, -295.3830, -246.1458],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1279, device='cuda:0', dtype=torch.float64)
tensor([-372.4947, -184.3398, -207.0911, -295.4392, -246.0166],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1392, device='cuda:0', dtype=torch.float64)
tensor([-372.5203, -184.3995, -207.2010, -295.4641, -245.9114],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1336, device='cuda:0', dtype=torch.float64)
tensor([-372.7717, -184.4316, -207.3457, -295.5680, -245.9186],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1257, device='cuda:0', dtype=torch.float64)
tensor([-372.9778, -184.4169, -207.4765, -295.6279, -245.9566],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1222, device='cuda:0', dtype=torch.float64)
tensor([-373.3834, -184.4251, -207.6631, -295.7353, -246.0734],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1393, device='cuda:0', dtype=torch.float64)
tensor([-373.7992, -184.4467, -207.8581, -295.7891, -246.2008],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1152, device='cuda:0', dtype=torch.float64)
tensor([-374.2285, -184.5301, -208.1214, -295.7991, -246.4435],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1113, device='cuda:0', dtype=torch.float64)
tensor([-374.5328, -184.6305, -208.3072, -295.7394, -246.5875],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1228, device='cuda:0', dtype=torch.float64)
tensor([-375.0576, -184.7700, -208.5760, -295.8674, -246.7644],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1362, device='cuda:0', dtype=torch.float64)
tensor([-375.4789, -184.9749, -208.8914, -295.9823, -247.0267],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1203, device='cuda:0', dtype=torch.float64)
tensor([-375.9598, -185.1040, -209.1775, -296.0714, -247.3183],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0958, device='cuda:0', dtype=torch.float64)
tensor([-376.3537, -185.2077, -209.4544, -296.1210, -247.5508],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1401, device='cuda:0', dtype=torch.float64)
tensor([-376.8570, -185.3774, -209.8333, -296.2261, -247.8425],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1299, device='cuda:0', dtype=torch.float64)
tensor([-377.0951, -185.5418, -210.0890, -296.2617, -247.9719],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1417, device='cuda:0', dtype=torch.float64)
tensor([-377.1365, -185.5408, -210.1932, -296.1676, -247.9636],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1110, device='cuda:0', dtype=torch.float64)
tensor([-376.9565, -185.4310, -210.2035, -296.0195, -247.8278],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1057, device='cuda:0', dtype=torch.float64)
tensor([-376.8189, -185.2807, -210.2795, -295.9942, -247.7478],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1623, device='cuda:0', dtype=torch.float64)
tensor([-377.3183, -185.2354, -210.5989, -296.2438, -248.0037],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1243, device='cuda:0', dtype=torch.float64)
tensor([-377.6442, -185.1977, -210.8944, -296.3892, -248.2555],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1216, device='cuda:0', dtype=torch.float64)
tensor([-378.2261, -185.1194, -211.2040, -296.6380, -248.5765],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1155, device='cuda:0', dtype=torch.float64)
tensor([-378.5245, -184.8775, -211.4038, -296.7727, -248.7698],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1154, device='cuda:0', dtype=torch.float64)
tensor([-378.6849, -184.6603, -211.5730, -296.8676, -248.8885],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1299, device='cuda:0', dtype=torch.float64)
tensor([-378.8020, -184.3957, -211.7287, -296.9376, -249.0549],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1102, device='cuda:0', dtype=torch.float64)
tensor([-379.2084, -184.2050, -211.9737, -297.1024, -249.3538],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1053, device='cuda:0', dtype=torch.float64)
tensor([-379.7933, -184.0730, -212.2638, -297.3171, -249.7311],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1356, device='cuda:0', dtype=torch.float64)
tensor([-380.6332, -183.9281, -212.6100, -297.6441, -250.1263],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1290, device='cuda:0', dtype=torch.float64)
tensor([-381.3365, -183.8014, -212.9211, -297.8926, -250.5018],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1026, device='cuda:0', dtype=torch.float64)
tensor([-381.8803, -183.7379, -213.1919, -298.1010, -250.8184],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1211, device='cuda:0', dtype=torch.float64)
tensor([-382.3048, -183.6796, -213.4280, -298.2494, -251.0287],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1153, device='cuda:0', dtype=torch.float64)
tensor([-382.5624, -183.5492, -213.5428, -298.2952, -251.0908],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1184, device='cuda:0', dtype=torch.float64)
tensor([-382.7613, -183.4099, -213.6384, -298.3102, -251.0802],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1012, device='cuda:0', dtype=torch.float64)
tensor([-382.8247, -183.2123, -213.6686, -298.2592, -250.9807],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1248, device='cuda:0', dtype=torch.float64)
tensor([-383.1204, -183.1437, -213.8261, -298.3456, -250.9664],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0987, device='cuda:0', dtype=torch.float64)
tensor([-383.1216, -182.9953, -213.9149, -298.4054, -250.7795],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1177, device='cuda:0', dtype=torch.float64)
tensor([-382.8285, -182.7961, -213.8023, -298.3076, -250.3856],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1105, device='cuda:0', dtype=torch.float64)
tensor([-382.7885, -182.7083, -213.8169, -298.2993, -250.1796],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1204, device='cuda:0', dtype=torch.float64)
tensor([-382.5470, -182.5881, -213.7896, -298.1657, -249.9182],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1117, device='cuda:0', dtype=torch.float64)
tensor([-382.2870, -182.5361, -213.7564, -298.0571, -249.6316],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1318, device='cuda:0', dtype=torch.float64)
tensor([-382.2235, -182.5696, -213.8553, -298.0867, -249.5080],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0979, device='cuda:0', dtype=torch.float64)
tensor([-382.2942, -182.6295, -213.9809, -298.1995, -249.4710],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1016, device='cuda:0', dtype=torch.float64)
tensor([-382.1965, -182.5861, -214.0076, -298.1708, -249.3571],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0951, device='cuda:0', dtype=torch.float64)
tensor([-382.1672, -182.5452, -214.0968, -298.2294, -249.2693],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1031, device='cuda:0', dtype=torch.float64)
tensor([-382.0497, -182.5231, -214.1388, -298.3164, -249.1290],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1064, device='cuda:0', dtype=torch.float64)
tensor([-382.0081, -182.4485, -214.2069, -298.4401, -248.9794],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1045, device='cuda:0', dtype=torch.float64)
tensor([-381.9545, -182.3756, -214.2863, -298.5364, -248.8400],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0993, device='cuda:0', dtype=torch.float64)
tensor([-381.8809, -182.2714, -214.3201, -298.5756, -248.6457],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0990, device='cuda:0', dtype=torch.float64)
tensor([-382.0194, -182.2819, -214.5012, -298.7555, -248.6207],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1268, device='cuda:0', dtype=torch.float64)
tensor([-382.1052, -182.3743, -214.6620, -298.8625, -248.5929],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1041, device='cuda:0', dtype=torch.float64)
tensor([-382.1569, -182.4936, -214.8216, -298.9490, -248.5707],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0939, device='cuda:0', dtype=torch.float64)
tensor([-382.2441, -182.7160, -215.0297, -299.0741, -248.5889],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1030, device='cuda:0', dtype=torch.float64)
tensor([-382.2841, -182.9458, -215.1752, -299.1431, -248.5325],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1141, device='cuda:0', dtype=torch.float64)
tensor([-382.2231, -183.0747, -215.2322, -299.1271, -248.3615],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1092, device='cuda:0', dtype=torch.float64)
tensor([-382.1850, -183.1691, -215.2627, -299.1511, -248.1714],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1030, device='cuda:0', dtype=torch.float64)
tensor([-381.8895, -183.1828, -215.1740, -299.0586, -247.9068],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1058, device='cuda:0', dtype=torch.float64)
tensor([-381.5481, -183.1019, -215.0449, -298.9416, -247.6256],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1121, device='cuda:0', dtype=torch.float64)
tensor([-381.3823, -183.0558, -214.9765, -298.8887, -247.4455],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1154, device='cuda:0', dtype=torch.float64)
tensor([-381.2604, -183.1844, -215.0126, -298.9089, -247.3991],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1133, device='cuda:0', dtype=torch.float64)
tensor([-380.9700, -183.2285, -214.9662, -298.8378, -247.2779],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1085, device='cuda:0', dtype=torch.float64)
tensor([-380.7597, -183.2103, -214.9544, -298.8204, -247.1902],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1053, device='cuda:0', dtype=torch.float64)
tensor([-380.7450, -183.1998, -214.9851, -298.8167, -247.1549],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1116, device='cuda:0', dtype=torch.float64)
tensor([-380.7222, -183.1820, -215.0199, -298.8418, -247.1242],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1239, device='cuda:0', dtype=torch.float64)
tensor([-381.1892, -183.1847, -215.2026, -299.0853, -247.2586],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1287, device='cuda:0', dtype=torch.float64)
tensor([-381.6935, -183.1357, -215.4012, -299.3917, -247.4202],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0858, device='cuda:0', dtype=torch.float64)
tensor([-381.9473, -183.0651, -215.5015, -299.5750, -247.4458],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1031, device='cuda:0', dtype=torch.float64)
tensor([-382.1477, -183.0029, -215.5859, -299.7083, -247.4482],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1017, device='cuda:0', dtype=torch.float64)
tensor([-382.3753, -182.9563, -215.6722, -299.9001, -247.3796],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1304, device='cuda:0', dtype=torch.float64)
tensor([-382.5908, -182.8916, -215.7394, -300.0555, -247.2880],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1266, device='cuda:0', dtype=torch.float64)
tensor([-382.8627, -182.8638, -215.8989, -300.2895, -247.2586],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0880, device='cuda:0', dtype=torch.float64)
tensor([-383.1641, -182.8125, -216.0820, -300.4973, -247.2577],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1057, device='cuda:0', dtype=torch.float64)
tensor([-383.3765, -182.6588, -216.0939, -300.5323, -247.1330],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1069, device='cuda:0', dtype=torch.float64)
tensor([-383.6838, -182.6042, -216.2092, -300.6778, -247.1147],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0951, device='cuda:0', dtype=torch.float64)
tensor([-383.7931, -182.5470, -216.2829, -300.7379, -247.0737],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1108, device='cuda:0', dtype=torch.float64)
tensor([-383.8382, -182.5098, -216.3245, -300.7975, -247.0219],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1131, device='cuda:0', dtype=torch.float64)
tensor([-384.2045, -182.6594, -216.5616, -301.0017, -247.1020],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1109, device='cuda:0', dtype=torch.float64)
tensor([-384.5113, -182.7411, -216.7025, -301.1300, -247.1012],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1054, device='cuda:0', dtype=torch.float64)
tensor([-385.0817, -182.9236, -216.9462, -301.3435, -247.1869],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0918, device='cuda:0', dtype=torch.float64)
tensor([-385.4070, -182.9403, -217.1421, -301.4554, -247.2298],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0896, device='cuda:0', dtype=torch.float64)
tensor([-385.6231, -182.9281, -217.3619, -301.5320, -247.2943],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0937, device='cuda:0', dtype=torch.float64)
tensor([-385.5320, -182.8120, -217.4640, -301.4947, -247.2459],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1138, device='cuda:0', dtype=torch.float64)
tensor([-385.6324, -182.6937, -217.5898, -301.5352, -247.2729],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0974, device='cuda:0', dtype=torch.float64)
tensor([-385.6913, -182.5547, -217.6805, -301.5684, -247.2506],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0891, device='cuda:0', dtype=torch.float64)
tensor([-385.6741, -182.3684, -217.6347, -301.5301, -247.0920],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1082, device='cuda:0', dtype=torch.float64)
tensor([-385.6968, -182.2656, -217.6524, -301.5292, -247.0382],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0959, device='cuda:0', dtype=torch.float64)
tensor([-385.6658, -182.1787, -217.6606, -301.4978, -246.9642],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0906, device='cuda:0', dtype=torch.float64)
tensor([-385.5096, -182.0780, -217.5385, -301.3426, -246.7548],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1068, device='cuda:0', dtype=torch.float64)
tensor([-385.4785, -182.0529, -217.4688, -301.2453, -246.6071],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1252, device='cuda:0', dtype=torch.float64)
tensor([-385.1377, -182.0234, -217.2341, -300.9817, -246.2412],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1030, device='cuda:0', dtype=torch.float64)
tensor([-384.9500, -182.0734, -217.1066, -300.7852, -245.9838],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0930, device='cuda:0', dtype=torch.float64)
tensor([-384.7592, -182.1954, -217.0242, -300.6161, -245.7474],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1072, device='cuda:0', dtype=torch.float64)
tensor([-384.5396, -182.3203, -216.8814, -300.4043, -245.5104],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0868, device='cuda:0', dtype=torch.float64)
tensor([-384.0854, -182.4549, -216.7641, -300.1489, -245.3700],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0979, device='cuda:0', dtype=torch.float64)
tensor([-383.5491, -182.5289, -216.6324, -299.8610, -245.2092],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0949, device='cuda:0', dtype=torch.float64)
tensor([-382.9008, -182.5093, -216.5210, -299.5771, -245.0827],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1181, device='cuda:0', dtype=torch.float64)
tensor([-382.5461, -182.6789, -216.5317, -299.4564, -245.0644],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0876, device='cuda:0', dtype=torch.float64)
tensor([-382.4105, -182.9081, -216.6685, -299.5031, -245.1691],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0906, device='cuda:0', dtype=torch.float64)
tensor([-382.3409, -183.1215, -216.8611, -299.5618, -245.3537],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0950, device='cuda:0', dtype=torch.float64)
tensor([-382.2032, -183.3738, -217.0285, -299.5864, -245.4681],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1022, device='cuda:0', dtype=torch.float64)
tensor([-382.2139, -183.6380, -217.2331, -299.6517, -245.5928],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0831, device='cuda:0', dtype=torch.float64)
tensor([-382.2343, -183.8807, -217.4454, -299.7243, -245.7507],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0927, device='cuda:0', dtype=torch.float64)
tensor([-382.3366, -184.1518, -217.6931, -299.7482, -245.9718],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1053, device='cuda:0', dtype=torch.float64)
tensor([-382.3766, -184.2814, -217.9045, -299.7450, -246.1545],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1095, device='cuda:0', dtype=torch.float64)
tensor([-382.7155, -184.4745, -218.2147, -299.9141, -246.3045],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0975, device='cuda:0', dtype=torch.float64)
tensor([-383.0097, -184.6397, -218.5208, -300.0771, -246.4672],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0868, device='cuda:0', dtype=torch.float64)
tensor([-383.1040, -184.7795, -218.7373, -300.1744, -246.5469],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1093, device='cuda:0', dtype=torch.float64)
tensor([-383.3314, -184.7929, -218.9480, -300.2621, -246.6861],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0963, device='cuda:0', dtype=torch.float64)
tensor([-383.7666, -184.9970, -219.2685, -300.4246, -246.9430],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0686, device='cuda:0', dtype=torch.float64)
tensor([-384.2639, -185.1442, -219.5895, -300.6332, -247.1780],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0938, device='cuda:0', dtype=torch.float64)
tensor([-384.6885, -185.2495, -219.8050, -300.7736, -247.3179],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0918, device='cuda:0', dtype=torch.float64)
tensor([-385.2333, -185.3874, -220.0683, -301.0065, -247.4890],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0964, device='cuda:0', dtype=torch.float64)
tensor([-385.8794, -185.4672, -220.3606, -301.2581, -247.7534],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0994, device='cuda:0', dtype=torch.float64)
tensor([-386.6931, -185.5328, -220.6492, -301.5891, -247.9817],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0942, device='cuda:0', dtype=torch.float64)
tensor([-387.2150, -185.6591, -220.8482, -301.7942, -248.0586],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0825, device='cuda:0', dtype=torch.float64)
tensor([-387.6982, -185.7804, -220.9915, -301.9977, -248.0833],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1053, device='cuda:0', dtype=torch.float64)
tensor([-388.3404, -185.8984, -221.1867, -302.2946, -248.0707],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0812, device='cuda:0', dtype=torch.float64)
tensor([-388.7578, -186.0107, -221.3132, -302.5547, -247.9679],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1002, device='cuda:0', dtype=torch.float64)
tensor([-389.0595, -186.1415, -221.4599, -302.7908, -247.9299],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0869, device='cuda:0', dtype=torch.float64)
tensor([-389.2772, -186.2755, -221.6284, -303.0564, -247.9193],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0860, device='cuda:0', dtype=torch.float64)
tensor([-389.4700, -186.4479, -221.8546, -303.3150, -247.9792],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0935, device='cuda:0', dtype=torch.float64)
tensor([-389.7455, -186.6103, -222.1016, -303.5884, -248.0854],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0868, device='cuda:0', dtype=torch.float64)
tensor([-389.9384, -186.7935, -222.3176, -303.8240, -248.2014],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0996, device='cuda:0', dtype=torch.float64)
tensor([-389.8618, -186.8314, -222.4305, -303.9140, -248.2519],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1104, device='cuda:0', dtype=torch.float64)
tensor([-389.8756, -186.8516, -222.5792, -304.1304, -248.2297],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0914, device='cuda:0', dtype=torch.float64)
tensor([-389.7834, -186.7733, -222.6370, -304.2925, -248.0541],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0880, device='cuda:0', dtype=torch.float64)
tensor([-389.9119, -186.6361, -222.7505, -304.5270, -247.9095],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0957, device='cuda:0', dtype=torch.float64)
tensor([-389.8982, -186.4952, -222.9259, -304.8023, -247.8086],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0815, device='cuda:0', dtype=torch.float64)
tensor([-389.8791, -186.3419, -223.1048, -305.0461, -247.7244],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0863, device='cuda:0', dtype=torch.float64)
tensor([-389.9554, -186.2051, -223.3210, -305.3218, -247.6695],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0910, device='cuda:0', dtype=torch.float64)
tensor([-389.8641, -186.0637, -223.4837, -305.5110, -247.6064],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0935, device='cuda:0', dtype=torch.float64)
tensor([-389.7804, -185.9273, -223.6016, -305.6491, -247.4523],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0884, device='cuda:0', dtype=torch.float64)
tensor([-389.7007, -185.8680, -223.7440, -305.8219, -247.3410],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0930, device='cuda:0', dtype=torch.float64)
tensor([-389.5591, -185.8362, -223.8700, -305.9311, -247.2785],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0951, device='cuda:0', dtype=torch.float64)
tensor([-389.4900, -185.9631, -224.1123, -306.0954, -247.3629],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0880, device='cuda:0', dtype=torch.float64)
tensor([-389.4050, -186.0717, -224.3404, -306.2526, -247.4880],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1114, device='cuda:0', dtype=torch.float64)
tensor([-389.5616, -186.2944, -224.6527, -306.4801, -247.6616],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0863, device='cuda:0', dtype=torch.float64)
tensor([-389.5670, -186.3707, -224.8754, -306.6270, -247.7422],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0973, device='cuda:0', dtype=torch.float64)
tensor([-389.7447, -186.4018, -225.1346, -306.8517, -247.8936],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0978, device='cuda:0', dtype=torch.float64)
tensor([-390.0662, -186.2736, -225.3658, -307.1015, -248.0296],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0837, device='cuda:0', dtype=torch.float64)
tensor([-390.3458, -186.1775, -225.5999, -307.3246, -248.1800],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0736, device='cuda:0', dtype=torch.float64)
tensor([-390.8076, -186.0811, -225.9125, -307.6687, -248.4091],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0946, device='cuda:0', dtype=torch.float64)
tensor([-391.4656, -186.0384, -226.2768, -308.0541, -248.6982],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0957, device='cuda:0', dtype=torch.float64)
tensor([-392.1332, -186.0860, -226.6232, -308.4024, -248.9659],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0925, device='cuda:0', dtype=torch.float64)
tensor([-392.3880, -185.9678, -226.8061, -308.5247, -249.1027],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1014, device='cuda:0', dtype=torch.float64)
tensor([-392.6439, -185.8274, -227.0015, -308.6714, -249.2167],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1046, device='cuda:0', dtype=torch.float64)
tensor([-392.9808, -185.7490, -227.2298, -308.8704, -249.3870],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0745, device='cuda:0', dtype=torch.float64)
tensor([-393.3282, -185.7169, -227.4211, -309.0406, -249.5246],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0741, device='cuda:0', dtype=torch.float64)
tensor([-393.4975, -185.6735, -227.5061, -309.0959, -249.5534],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0874, device='cuda:0', dtype=torch.float64)
tensor([-393.5365, -185.5791, -227.5357, -309.0447, -249.5777],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0846, device='cuda:0', dtype=torch.float64)
tensor([-393.5842, -185.4623, -227.5256, -308.9639, -249.5916],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0929, device='cuda:0', dtype=torch.float64)
tensor([-393.4650, -185.3245, -227.4094, -308.8235, -249.4636],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0943, device='cuda:0', dtype=torch.float64)
tensor([-393.6836, -185.2993, -227.3913, -308.8409, -249.4058],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0702, device='cuda:0', dtype=torch.float64)
tensor([-393.9624, -185.3115, -227.3756, -308.8882, -249.3211],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0936, device='cuda:0', dtype=torch.float64)
tensor([-394.5070, -185.3756, -227.4251, -309.0220, -249.2473],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0843, device='cuda:0', dtype=torch.float64)
tensor([-394.8673, -185.2622, -227.3831, -309.0754, -249.0799],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0935, device='cuda:0', dtype=torch.float64)
tensor([-395.1864, -185.2392, -227.4045, -309.1746, -248.9405],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0895, device='cuda:0', dtype=torch.float64)
tensor([-395.4352, -185.2160, -227.3909, -309.2045, -248.7861],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0716, device='cuda:0', dtype=torch.float64)
tensor([-395.8647, -185.2343, -227.4463, -309.3008, -248.7051],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0721, device='cuda:0', dtype=torch.float64)
tensor([-396.2575, -185.1913, -227.4537, -309.3751, -248.6058],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0825, device='cuda:0', dtype=torch.float64)
tensor([-396.6532, -185.1180, -227.5105, -309.4514, -248.5585],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0915, device='cuda:0', dtype=torch.float64)
tensor([-396.8398, -185.0116, -227.4958, -309.4507, -248.4088],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0853, device='cuda:0', dtype=torch.float64)
tensor([-397.0644, -184.9515, -227.5498, -309.5255, -248.2966],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0776, device='cuda:0', dtype=torch.float64)
tensor([-397.3834, -184.9782, -227.6373, -309.6561, -248.2105],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0825, device='cuda:0', dtype=torch.float64)
tensor([-397.5992, -184.9610, -227.6604, -309.7017, -248.0987],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1079, device='cuda:0', dtype=torch.float64)
tensor([-397.8978, -184.9036, -227.7231, -309.7827, -248.0073],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0807, device='cuda:0', dtype=torch.float64)
tensor([-398.1597, -184.8157, -227.7882, -309.8927, -247.8825],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0962, device='cuda:0', dtype=torch.float64)
tensor([-398.4652, -184.7715, -227.8275, -310.0076, -247.6664],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0902, device='cuda:0', dtype=torch.float64)
tensor([-398.7211, -184.6711, -227.7715, -309.9859, -247.4496],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1041, device='cuda:0', dtype=torch.float64)
tensor([-398.8116, -184.5111, -227.6981, -309.9070, -247.2224],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0756, device='cuda:0', dtype=torch.float64)
tensor([-398.7633, -184.3140, -227.5588, -309.7291, -246.9721],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0969, device='cuda:0', dtype=torch.float64)
tensor([-398.6644, -184.2330, -227.4395, -309.5482, -246.7596],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0895, device='cuda:0', dtype=torch.float64)
tensor([-398.6556, -184.2275, -227.4128, -309.4967, -246.5956],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0784, device='cuda:0', dtype=torch.float64)
tensor([-398.6062, -184.2401, -227.4368, -309.4620, -246.4854],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0841, device='cuda:0', dtype=torch.float64)
tensor([-398.5399, -184.2513, -227.4479, -309.4377, -246.3694],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0806, device='cuda:0', dtype=torch.float64)
tensor([-398.3750, -184.2732, -227.4204, -309.4114, -246.1691],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0813, device='cuda:0', dtype=torch.float64)
tensor([-398.4576, -184.2846, -227.5193, -309.5483, -246.0645],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0842, device='cuda:0', dtype=torch.float64)
tensor([-398.4758, -184.2698, -227.5947, -309.6575, -246.0022],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0726, device='cuda:0', dtype=torch.float64)
tensor([-398.4986, -184.2841, -227.6655, -309.6986, -245.9831],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0825, device='cuda:0', dtype=torch.float64)
tensor([-398.6410, -184.4257, -227.8339, -309.8536, -246.0756],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0971, device='cuda:0', dtype=torch.float64)
tensor([-398.7284, -184.5056, -227.9518, -310.0149, -246.0794],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0943, device='cuda:0', dtype=torch.float64)
tensor([-398.6707, -184.5866, -228.0402, -310.1142, -246.0038],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0855, device='cuda:0', dtype=torch.float64)
tensor([-398.4015, -184.6071, -228.0143, -310.0347, -245.8218],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0829, device='cuda:0', dtype=torch.float64)
tensor([-398.1057, -184.5587, -227.9276, -309.9034, -245.6217],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0839, device='cuda:0', dtype=torch.float64)
tensor([-397.7691, -184.5286, -227.8531, -309.7948, -245.3734],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0833, device='cuda:0', dtype=torch.float64)
tensor([-397.5424, -184.5864, -227.8647, -309.7889, -245.1873],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0887, device='cuda:0', dtype=torch.float64)
tensor([-397.5461, -184.6850, -227.9035, -309.8564, -244.9681],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0913, device='cuda:0', dtype=torch.float64)
tensor([-397.4534, -184.8815, -228.0259, -309.9066, -244.8456],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0857, device='cuda:0', dtype=torch.float64)
tensor([-397.2496, -185.0623, -228.1098, -309.9301, -244.6981],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0760, device='cuda:0', dtype=torch.float64)
tensor([-397.1192, -185.3482, -228.2814, -309.9826, -244.7163],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0820, device='cuda:0', dtype=torch.float64)
tensor([-397.0325, -185.6876, -228.5373, -310.0736, -244.8409],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0801, device='cuda:0', dtype=torch.float64)
tensor([-397.0158, -185.9890, -228.8260, -310.2074, -245.0217],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0785, device='cuda:0', dtype=torch.float64)
tensor([-396.8311, -186.2923, -229.1027, -310.3133, -245.1808],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0864, device='cuda:0', dtype=torch.float64)
tensor([-396.5682, -186.3493, -229.2444, -310.3325, -245.2351],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0859, device='cuda:0', dtype=torch.float64)
tensor([-396.3811, -186.5075, -229.4488, -310.3697, -245.3932],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0750, device='cuda:0', dtype=torch.float64)
tensor([-396.1077, -186.6253, -229.6267, -310.3921, -245.5322],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0761, device='cuda:0', dtype=torch.float64)
tensor([-395.9864, -186.6893, -229.8374, -310.4746, -245.6871],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0684, device='cuda:0', dtype=torch.float64)
tensor([-396.0058, -186.6780, -230.0484, -310.6098, -245.8174],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0699, device='cuda:0', dtype=torch.float64)
tensor([-396.1832, -186.6726, -230.2440, -310.8189, -245.8985],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0689, device='cuda:0', dtype=torch.float64)
tensor([-396.4368, -186.6953, -230.4302, -311.0275, -245.9860],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0776, device='cuda:0', dtype=torch.float64)
tensor([-396.6181, -186.6772, -230.5617, -311.1504, -246.0789],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0715, device='cuda:0', dtype=torch.float64)
tensor([-396.8255, -186.6724, -230.7320, -311.2682, -246.2246],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0839, device='cuda:0', dtype=torch.float64)
tensor([-397.1834, -186.7208, -231.0145, -311.4400, -246.5581],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0800, device='cuda:0', dtype=torch.float64)
tensor([-397.5589, -186.8206, -231.3368, -311.6337, -246.9165],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0685, device='cuda:0', dtype=torch.float64)
tensor([-397.7208, -186.7857, -231.5945, -311.7267, -247.2033],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0807, device='cuda:0', dtype=torch.float64)
tensor([-397.9958, -186.7675, -231.8988, -311.8381, -247.5954],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0690, device='cuda:0', dtype=torch.float64)
tensor([-398.2409, -186.7321, -232.1879, -311.9514, -247.9566],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0859, device='cuda:0', dtype=torch.float64)
tensor([-398.5045, -186.6858, -232.5034, -312.0820, -248.3862],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0750, device='cuda:0', dtype=torch.float64)
tensor([-398.7129, -186.5928, -232.7667, -312.1648, -248.7818],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0695, device='cuda:0', dtype=torch.float64)
tensor([-398.9282, -186.5016, -233.0448, -312.2678, -249.1849],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0806, device='cuda:0', dtype=torch.float64)
tensor([-399.1722, -186.4613, -233.3358, -312.4153, -249.5761],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0750, device='cuda:0', dtype=torch.float64)
tensor([-399.6198, -186.4155, -233.6669, -312.6760, -249.9797],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0731, device='cuda:0', dtype=torch.float64)
tensor([-400.0788, -186.3370, -233.9400, -312.9570, -250.3178],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0822, device='cuda:0', dtype=torch.float64)
tensor([-400.7012, -186.3875, -234.2598, -313.3617, -250.6592],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0677, device='cuda:0', dtype=torch.float64)
tensor([-401.0316, -186.3991, -234.5350, -313.6277, -250.9727],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0935, device='cuda:0', dtype=torch.float64)
tensor([-401.0810, -186.3681, -234.7821, -313.7899, -251.2133],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0693, device='cuda:0', dtype=torch.float64)
tensor([-401.1254, -186.3780, -235.0674, -313.9920, -251.4753],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0885, device='cuda:0', dtype=torch.float64)
tensor([-400.9936, -186.3151, -235.2609, -314.1046, -251.6352],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0691, device='cuda:0', dtype=torch.float64)
tensor([-400.9017, -186.3230, -235.5001, -314.2456, -251.8598],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0687, device='cuda:0', dtype=torch.float64)
tensor([-400.9440, -186.3706, -235.7750, -314.4250, -252.1308],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0698, device='cuda:0', dtype=torch.float64)
tensor([-400.8678, -186.4141, -236.0300, -314.5544, -252.3273],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0962, device='cuda:0', dtype=torch.float64)
tensor([-400.3937, -186.3480, -236.1318, -314.4170, -252.3703],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0713, device='cuda:0', dtype=torch.float64)
tensor([-399.9420, -186.2156, -236.2009, -314.2605, -252.3701],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0711, device='cuda:0', dtype=torch.float64)
tensor([-399.6243, -186.0807, -236.2401, -314.1004, -252.3062],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0661, device='cuda:0', dtype=torch.float64)
tensor([-399.1739, -185.8855, -236.1937, -313.8711, -252.1451],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0655, device='cuda:0', dtype=torch.float64)
tensor([-398.9377, -185.7509, -236.1968, -313.7616, -251.9891],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0810, device='cuda:0', dtype=torch.float64)
tensor([-398.7674, -185.5503, -236.1826, -313.7009, -251.8233],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0690, device='cuda:0', dtype=torch.float64)
tensor([-398.5580, -185.3381, -236.1201, -313.6165, -251.6214],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0697, device='cuda:0', dtype=torch.float64)
tensor([-398.2457, -185.1294, -235.9940, -313.4595, -251.3416],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0685, device='cuda:0', dtype=torch.float64)
tensor([-397.8348, -184.8635, -235.7888, -313.2303, -250.9785],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0754, device='cuda:0', dtype=torch.float64)
tensor([-397.6524, -184.7297, -235.6477, -313.1156, -250.6570],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0749, device='cuda:0', dtype=torch.float64)
tensor([-397.5489, -184.6525, -235.5434, -313.0041, -250.3635],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0650, device='cuda:0', dtype=torch.float64)
tensor([-397.4941, -184.6259, -235.4948, -312.9311, -250.1240],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0708, device='cuda:0', dtype=torch.float64)
tensor([-397.3641, -184.5331, -235.4255, -312.8591, -249.8992],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0679, device='cuda:0', dtype=torch.float64)
tensor([-397.3858, -184.5500, -235.3733, -312.7825, -249.7009],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0738, device='cuda:0', dtype=torch.float64)
tensor([-397.5802, -184.5895, -235.3535, -312.7693, -249.5378],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0722, device='cuda:0', dtype=torch.float64)
tensor([-397.7934, -184.6981, -235.3749, -312.8012, -249.3549],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0752, device='cuda:0', dtype=torch.float64)
tensor([-397.9100, -184.7925, -235.3476, -312.7548, -249.1971],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0778, device='cuda:0', dtype=torch.float64)
tensor([-398.1277, -184.9400, -235.3918, -312.7700, -249.0879],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0688, device='cuda:0', dtype=torch.float64)
tensor([-398.4829, -185.1828, -235.4904, -312.8163, -249.0472],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0686, device='cuda:0', dtype=torch.float64)
tensor([-398.8249, -185.4453, -235.5648, -312.8561, -248.9666],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0676, device='cuda:0', dtype=torch.float64)
tensor([-399.0848, -185.6290, -235.6039, -312.8563, -248.8991],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0795, device='cuda:0', dtype=torch.float64)
tensor([-399.3910, -185.7419, -235.6103, -312.8600, -248.7756],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0809, device='cuda:0', dtype=torch.float64)
tensor([-399.6951, -185.8381, -235.6068, -312.8941, -248.6555],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0732, device='cuda:0', dtype=torch.float64)
tensor([-399.9666, -185.8602, -235.5925, -312.9026, -248.5153],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0660, device='cuda:0', dtype=torch.float64)
tensor([-400.2315, -185.7766, -235.6028, -312.9055, -248.4639],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0705, device='cuda:0', dtype=torch.float64)
tensor([-400.5382, -185.7184, -235.6236, -312.9575, -248.4054],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0626, device='cuda:0', dtype=torch.float64)
tensor([-400.8001, -185.6751, -235.6112, -313.0412, -248.2557],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0707, device='cuda:0', dtype=torch.float64)
tensor([-401.0399, -185.5739, -235.5936, -313.1065, -248.1167],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0702, device='cuda:0', dtype=torch.float64)
tensor([-401.0891, -185.3763, -235.4990, -313.0582, -247.9020],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0773, device='cuda:0', dtype=torch.float64)
tensor([-401.1769, -185.2468, -235.5143, -313.0324, -247.8357],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0563, device='cuda:0', dtype=torch.float64)
tensor([-401.2798, -185.1172, -235.5927, -313.0285, -247.8270],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0649, device='cuda:0', dtype=torch.float64)
tensor([-401.4726, -185.0124, -235.6731, -313.1081, -247.7939],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0668, device='cuda:0', dtype=torch.float64)
tensor([-401.3695, -184.8171, -235.6232, -313.0301, -247.6299],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0761, device='cuda:0', dtype=torch.float64)
tensor([-401.2670, -184.6271, -235.5870, -312.9849, -247.4422],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0746, device='cuda:0', dtype=torch.float64)
tensor([-401.3283, -184.4698, -235.6157, -313.0070, -247.3577],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0715, device='cuda:0', dtype=torch.float64)
tensor([-401.3195, -184.3163, -235.5862, -313.0076, -247.2397],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0630, device='cuda:0', dtype=torch.float64)
tensor([-401.2504, -184.0874, -235.4802, -312.9916, -246.9826],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0606, device='cuda:0', dtype=torch.float64)
tensor([-401.1481, -183.8899, -235.3335, -312.9371, -246.7196],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0704, device='cuda:0', dtype=torch.float64)
tensor([-401.0157, -183.6764, -235.1597, -312.8723, -246.5109],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0639, device='cuda:0', dtype=torch.float64)
tensor([-400.9450, -183.5687, -235.0529, -312.8391, -246.3639],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0738, device='cuda:0', dtype=torch.float64)
tensor([-400.8109, -183.3664, -234.9388, -312.7427, -246.1722],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0809, device='cuda:0', dtype=torch.float64)
tensor([-400.6025, -183.1616, -234.8518, -312.6362, -246.0051],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0926, device='cuda:0', dtype=torch.float64)
tensor([-400.4796, -183.0160, -234.8002, -312.6046, -245.8182],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0592, device='cuda:0', dtype=torch.float64)
tensor([-400.3409, -182.8906, -234.7563, -312.5893, -245.6597],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0762, device='cuda:0', dtype=torch.float64)
tensor([-400.2307, -182.7984, -234.7626, -312.6356, -245.6193],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0638, device='cuda:0', dtype=torch.float64)
tensor([-399.9867, -182.6973, -234.7194, -312.6076, -245.5415],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0871, device='cuda:0', dtype=torch.float64)
tensor([-399.9051, -182.6003, -234.6757, -312.6355, -245.4976],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0774, device='cuda:0', dtype=torch.float64)
tensor([-399.8467, -182.4089, -234.5317, -312.6310, -245.3341],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0768, device='cuda:0', dtype=torch.float64)
tensor([-399.8951, -182.3114, -234.4407, -312.6220, -245.2647],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0605, device='cuda:0', dtype=torch.float64)
tensor([-399.9830, -182.2147, -234.3336, -312.5931, -245.1945],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0694, device='cuda:0', dtype=torch.float64)
tensor([-400.0273, -182.1446, -234.1851, -312.5233, -245.0739],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0788, device='cuda:0', dtype=torch.float64)
tensor([-400.0637, -182.1175, -234.0895, -312.4937, -245.0374],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0618, device='cuda:0', dtype=torch.float64)
tensor([-400.3133, -182.1077, -233.9902, -312.5300, -244.9407],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0596, device='cuda:0', dtype=torch.float64)
tensor([-400.4555, -182.0684, -233.8519, -312.5208, -244.7899],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0659, device='cuda:0', dtype=torch.float64)
tensor([-400.4877, -181.9709, -233.7011, -312.4790, -244.6500],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0798, device='cuda:0', dtype=torch.float64)
tensor([-400.4635, -181.8787, -233.6009, -312.4622, -244.5167],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0591, device='cuda:0', dtype=torch.float64)
tensor([-400.3579, -181.7353, -233.4656, -312.3559, -244.3200],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0618, device='cuda:0', dtype=torch.float64)
tensor([-400.2751, -181.5839, -233.3204, -312.2329, -244.1239],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0820, device='cuda:0', dtype=torch.float64)
tensor([-400.2116, -181.5308, -233.2030, -312.0949, -243.9556],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0574, device='cuda:0', dtype=torch.float64)
tensor([-400.1036, -181.4553, -233.1013, -311.9589, -243.8385],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0599, device='cuda:0', dtype=torch.float64)
tensor([-399.8646, -181.4206, -233.0205, -311.7832, -243.7470],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0536, device='cuda:0', dtype=torch.float64)
tensor([-399.7164, -181.4942, -233.0354, -311.6474, -243.7456],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0859, device='cuda:0', dtype=torch.float64)
tensor([-399.4302, -181.4803, -232.9974, -311.4261, -243.7265],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0739, device='cuda:0', dtype=torch.float64)
tensor([-399.0839, -181.4085, -232.9753, -311.2083, -243.7156],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0656, device='cuda:0', dtype=torch.float64)
tensor([-398.7765, -181.3706, -232.9649, -310.9716, -243.7290],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0628, device='cuda:0', dtype=torch.float64)
tensor([-398.5940, -181.3532, -232.9801, -310.7896, -243.7585],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0822, device='cuda:0', dtype=torch.float64)
tensor([-398.2178, -181.3782, -232.9705, -310.5416, -243.7488],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0609, device='cuda:0', dtype=torch.float64)
tensor([-397.8628, -181.3965, -232.9637, -310.3099, -243.7717],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0628, device='cuda:0', dtype=torch.float64)
tensor([-397.5863, -181.3940, -232.9639, -310.1183, -243.7913],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0685, device='cuda:0', dtype=torch.float64)
tensor([-397.4387, -181.4479, -232.9791, -310.0164, -243.8050],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0645, device='cuda:0', dtype=torch.float64)
tensor([-397.4072, -181.5816, -233.0827, -310.0385, -243.8509],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0596, device='cuda:0', dtype=torch.float64)
tensor([-397.3859, -181.6829, -233.1843, -310.0746, -243.8851],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0651, device='cuda:0', dtype=torch.float64)
tensor([-397.1590, -181.7036, -233.2076, -309.9401, -243.8614],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0724, device='cuda:0', dtype=torch.float64)
tensor([-396.9273, -181.7853, -233.2468, -309.8332, -243.8529],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0647, device='cuda:0', dtype=torch.float64)
tensor([-396.6486, -181.7873, -233.2251, -309.6726, -243.7364],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0682, device='cuda:0', dtype=torch.float64)
tensor([-396.2914, -181.8088, -233.1777, -309.4474, -243.6245],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0790, device='cuda:0', dtype=torch.float64)
tensor([-395.8182, -181.7471, -233.0699, -309.1287, -243.4327],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0753, device='cuda:0', dtype=torch.float64)
tensor([-395.2856, -181.6492, -232.9035, -308.7721, -243.1350],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0528, device='cuda:0', dtype=torch.float64)
tensor([-394.7376, -181.5619, -232.7398, -308.4669, -242.8050],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0654, device='cuda:0', dtype=torch.float64)
tensor([-394.1160, -181.4986, -232.5942, -308.1519, -242.4856],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0713, device='cuda:0', dtype=torch.float64)
tensor([-393.4555, -181.3597, -232.3366, -307.7572, -242.0755],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0747, device='cuda:0', dtype=torch.float64)
tensor([-392.7967, -181.2672, -232.0979, -307.3732, -241.6619],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0622, device='cuda:0', dtype=torch.float64)
tensor([-392.2741, -181.1596, -231.9237, -307.0684, -241.3324],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0554, device='cuda:0', dtype=torch.float64)
tensor([-391.8002, -180.9996, -231.7333, -306.7824, -241.0111],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0761, device='cuda:0', dtype=torch.float64)
tensor([-391.4823, -180.8810, -231.6319, -306.6101, -240.7699],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0591, device='cuda:0', dtype=torch.float64)
tensor([-391.3229, -180.7022, -231.5002, -306.4612, -240.5332],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0762, device='cuda:0', dtype=torch.float64)
tensor([-391.2301, -180.5707, -231.4673, -306.3812, -240.4457],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0566, device='cuda:0', dtype=torch.float64)
tensor([-391.1816, -180.4454, -231.4540, -306.3183, -240.3952],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0673, device='cuda:0', dtype=torch.float64)
tensor([-391.1368, -180.3089, -231.4304, -306.2349, -240.3602],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0552, device='cuda:0', dtype=torch.float64)
tensor([-391.0850, -180.1720, -231.4183, -306.1567, -240.3345],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0595, device='cuda:0', dtype=torch.float64)
tensor([-391.0462, -180.0697, -231.4319, -306.1035, -240.3379],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0604, device='cuda:0', dtype=torch.float64)
tensor([-390.8906, -179.9980, -231.4518, -306.0425, -240.3319],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0575, device='cuda:0', dtype=torch.float64)
tensor([-390.8152, -179.9407, -231.5255, -306.0461, -240.3864],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0804, device='cuda:0', dtype=torch.float64)
tensor([-390.8333, -179.9348, -231.6020, -306.1105, -240.4242],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0562, device='cuda:0', dtype=torch.float64)
tensor([-390.8605, -179.9010, -231.6792, -306.1473, -240.5098],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0597, device='cuda:0', dtype=torch.float64)
tensor([-390.7744, -179.9073, -231.7599, -306.1671, -240.5739],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0529, device='cuda:0', dtype=torch.float64)
tensor([-390.8335, -179.9619, -231.8859, -306.2598, -240.7081],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0702, device='cuda:0', dtype=torch.float64)
tensor([-390.9906, -179.9457, -232.0562, -306.3857, -240.9150],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0588, device='cuda:0', dtype=torch.float64)
tensor([-391.0782, -179.9115, -232.1280, -306.4395, -241.0007],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0735, device='cuda:0', dtype=torch.float64)
tensor([-390.9791, -179.8431, -232.0939, -306.3098, -240.9713],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0630, device='cuda:0', dtype=torch.float64)
tensor([-391.1295, -179.8343, -232.1721, -306.3097, -241.0485],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0596, device='cuda:0', dtype=torch.float64)
tensor([-391.3218, -179.8193, -232.2114, -306.3480, -241.0998],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0722, device='cuda:0', dtype=torch.float64)
tensor([-391.5585, -179.7753, -232.2775, -306.4038, -241.2161],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0590, device='cuda:0', dtype=torch.float64)
tensor([-391.7377, -179.7381, -232.3819, -306.4583, -241.3681],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0717, device='cuda:0', dtype=torch.float64)
tensor([-391.9666, -179.8069, -232.5360, -306.5966, -241.5583],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0680, device='cuda:0', dtype=torch.float64)
tensor([-392.0078, -179.7873, -232.6078, -306.6115, -241.6048],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0539, device='cuda:0', dtype=torch.float64)
tensor([-392.1233, -179.8245, -232.6801, -306.6318, -241.6680],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0598, device='cuda:0', dtype=torch.float64)
tensor([-392.2102, -179.8348, -232.7158, -306.6147, -241.6798],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0617, device='cuda:0', dtype=torch.float64)
tensor([-392.2526, -179.7608, -232.7701, -306.5818, -241.7296],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0710, device='cuda:0', dtype=torch.float64)
tensor([-392.1991, -179.6882, -232.7891, -306.4963, -241.7071],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0595, device='cuda:0', dtype=torch.float64)
tensor([-392.1979, -179.6652, -232.8223, -306.4454, -241.7027],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0512, device='cuda:0', dtype=torch.float64)
tensor([-392.1986, -179.5615, -232.7982, -306.4160, -241.6234],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0555, device='cuda:0', dtype=torch.float64)
tensor([-392.1240, -179.4719, -232.7905, -306.3598, -241.5529],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0691, device='cuda:0', dtype=torch.float64)
tensor([-392.0944, -179.3696, -232.8313, -306.3261, -241.5776],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0565, device='cuda:0', dtype=torch.float64)
tensor([-392.0179, -179.3417, -232.9042, -306.2938, -241.6637],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0624, device='cuda:0', dtype=torch.float64)
tensor([-391.9540, -179.2653, -232.8898, -306.2354, -241.6391],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0634, device='cuda:0', dtype=torch.float64)
tensor([-391.8769, -179.1283, -232.8807, -306.1775, -241.6234],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0585, device='cuda:0', dtype=torch.float64)
tensor([-391.7573, -178.9290, -232.8093, -306.1198, -241.5131],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0543, device='cuda:0', dtype=torch.float64)
tensor([-391.5615, -178.6237, -232.7003, -305.9951, -241.3432],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0559, device='cuda:0', dtype=torch.float64)
tensor([-391.5041, -178.2973, -232.5715, -305.9253, -241.1439],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0544, device='cuda:0', dtype=torch.float64)
tensor([-391.4458, -177.9789, -232.4121, -305.8177, -240.9408],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0634, device='cuda:0', dtype=torch.float64)
tensor([-391.3391, -177.7038, -232.2772, -305.7363, -240.7649],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0563, device='cuda:0', dtype=torch.float64)
tensor([-391.2576, -177.3917, -232.1654, -305.6909, -240.6033],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0633, device='cuda:0', dtype=torch.float64)
tensor([-391.1379, -177.0046, -232.0541, -305.5702, -240.4984],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0615, device='cuda:0', dtype=torch.float64)
tensor([-391.0780, -176.6611, -231.9606, -305.5086, -240.4219],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0543, device='cuda:0', dtype=torch.float64)
tensor([-391.0036, -176.4180, -231.8427, -305.4546, -240.3132],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0581, device='cuda:0', dtype=torch.float64)
tensor([-390.7722, -176.1521, -231.7284, -305.3198, -240.1864],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0577, device='cuda:0', dtype=torch.float64)
tensor([-390.6205, -175.8717, -231.6423, -305.1861, -240.0994],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0552, device='cuda:0', dtype=torch.float64)
tensor([-390.4385, -175.5802, -231.5807, -305.0458, -240.0209],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0722, device='cuda:0', dtype=torch.float64)
tensor([-390.4832, -175.4146, -231.5933, -305.0406, -239.9883],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0640, device='cuda:0', dtype=torch.float64)
tensor([-390.3851, -175.1921, -231.5667, -305.0135, -239.8897],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0558, device='cuda:0', dtype=torch.float64)
tensor([-390.2860, -175.0354, -231.5798, -305.0149, -239.8286],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0621, device='cuda:0', dtype=torch.float64)
tensor([-390.0508, -174.8846, -231.5655, -304.9566, -239.7583],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0664, device='cuda:0', dtype=torch.float64)
tensor([-389.9095, -174.7937, -231.5914, -304.9111, -239.7166],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0658, device='cuda:0', dtype=torch.float64)
tensor([-389.8296, -174.7239, -231.6756, -304.9758, -239.6882],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0602, device='cuda:0', dtype=torch.float64)
tensor([-389.8344, -174.7000, -231.7452, -305.1045, -239.6344],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0516, device='cuda:0', dtype=torch.float64)
tensor([-389.8485, -174.6696, -231.7959, -305.2333, -239.5599],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0507, device='cuda:0', dtype=torch.float64)
tensor([-389.9525, -174.6200, -231.8529, -305.3982, -239.4951],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0528, device='cuda:0', dtype=torch.float64)
tensor([-389.9859, -174.6091, -231.9009, -305.4959, -239.4580],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0644, device='cuda:0', dtype=torch.float64)
tensor([-390.0424, -174.5926, -231.9368, -305.6194, -239.4318],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0549, device='cuda:0', dtype=torch.float64)
tensor([-389.8890, -174.5151, -231.9370, -305.6150, -239.3552],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0672, device='cuda:0', dtype=torch.float64)
tensor([-389.6994, -174.4200, -231.9610, -305.6042, -239.2644],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0652, device='cuda:0', dtype=torch.float64)
tensor([-389.4509, -174.3291, -231.9492, -305.5174, -239.1379],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0514, device='cuda:0', dtype=torch.float64)
tensor([-389.3152, -174.2964, -231.9537, -305.4731, -239.0138],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0514, device='cuda:0', dtype=torch.float64)
tensor([-389.0780, -174.2088, -231.9353, -305.3730, -238.9251],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0686, device='cuda:0', dtype=torch.float64)
tensor([-388.8301, -174.1247, -231.9063, -305.2657, -238.8227],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0483, device='cuda:0', dtype=torch.float64)
tensor([-388.6968, -174.0073, -231.8230, -305.1603, -238.6583],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0510, device='cuda:0', dtype=torch.float64)
tensor([-388.5832, -173.9162, -231.7617, -305.0604, -238.4902],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0539, device='cuda:0', dtype=torch.float64)
tensor([-388.3975, -173.8906, -231.6920, -304.9358, -238.2908],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0559, device='cuda:0', dtype=torch.float64)
tensor([-388.2308, -173.8524, -231.5562, -304.7930, -238.0177],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0693, device='cuda:0', dtype=torch.float64)
tensor([-387.7613, -173.7928, -231.3707, -304.5182, -237.7088],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0585, device='cuda:0', dtype=torch.float64)
tensor([-387.2375, -173.7345, -231.2034, -304.1731, -237.4383],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0670, device='cuda:0', dtype=torch.float64)
tensor([-386.7802, -173.7227, -231.0930, -303.8843, -237.1980],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0554, device='cuda:0', dtype=torch.float64)
tensor([-386.5002, -173.7419, -231.0572, -303.6722, -237.0646],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0505, device='cuda:0', dtype=torch.float64)
tensor([-386.2600, -173.7688, -231.0456, -303.5212, -236.9238],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0463, device='cuda:0', dtype=torch.float64)
tensor([-386.0693, -173.7824, -231.0304, -303.4088, -236.7949],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0522, device='cuda:0', dtype=torch.float64)
tensor([-385.8084, -173.8409, -231.0280, -303.2681, -236.7527],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0560, device='cuda:0', dtype=torch.float64)
tensor([-385.6286, -173.8765, -230.9806, -303.1387, -236.6472],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0535, device='cuda:0', dtype=torch.float64)
tensor([-385.5308, -173.9672, -230.9776, -303.0505, -236.6286],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0539, device='cuda:0', dtype=torch.float64)
tensor([-385.4138, -174.0326, -230.9835, -302.9702, -236.6065],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0561, device='cuda:0', dtype=torch.float64)
tensor([-385.2517, -174.1268, -230.9988, -302.8830, -236.6162],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0622, device='cuda:0', dtype=torch.float64)
tensor([-384.9225, -174.2572, -231.0004, -302.7382, -236.6096],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0532, device='cuda:0', dtype=torch.float64)
tensor([-384.5830, -174.4016, -231.0083, -302.6231, -236.6214],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0505, device='cuda:0', dtype=torch.float64)
tensor([-384.3099, -174.5499, -231.0031, -302.5250, -236.6273],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0481, device='cuda:0', dtype=torch.float64)
tensor([-384.1612, -174.7321, -231.0463, -302.4872, -236.6649],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0550, device='cuda:0', dtype=torch.float64)
tensor([-383.9342, -174.9789, -231.0840, -302.4195, -236.6913],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0548, device='cuda:0', dtype=torch.float64)
tensor([-383.5298, -175.1072, -231.0284, -302.2192, -236.6378],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0546, device='cuda:0', dtype=torch.float64)
tensor([-383.1251, -175.2157, -230.9559, -301.9981, -236.5728],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0491, device='cuda:0', dtype=torch.float64)
tensor([-382.7460, -175.2779, -230.8823, -301.7749, -236.5166],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0580, device='cuda:0', dtype=torch.float64)
tensor([-382.4113, -175.3001, -230.7725, -301.5896, -236.4317],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0655, device='cuda:0', dtype=torch.float64)
tensor([-382.0234, -175.3220, -230.7168, -301.3815, -236.4405],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0480, device='cuda:0', dtype=torch.float64)
tensor([-381.5612, -175.2522, -230.5887, -301.1115, -236.3481],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0531, device='cuda:0', dtype=torch.float64)
tensor([-381.1035, -175.1510, -230.4623, -300.8214, -236.2915],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0583, device='cuda:0', dtype=torch.float64)
tensor([-380.7542, -175.0034, -230.2768, -300.5282, -236.1889],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0452, device='cuda:0', dtype=torch.float64)
tensor([-380.5083, -174.8807, -230.1134, -300.2841, -236.1216],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0542, device='cuda:0', dtype=torch.float64)
tensor([-380.2539, -174.7446, -229.9742, -300.0982, -236.0881],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0743, device='cuda:0', dtype=torch.float64)
tensor([-379.8044, -174.6509, -229.8214, -299.8289, -236.0251],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0513, device='cuda:0', dtype=torch.float64)
tensor([-379.2789, -174.5036, -229.6042, -299.4883, -235.9174],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0456, device='cuda:0', dtype=torch.float64)
tensor([-378.8122, -174.3085, -229.4046, -299.1980, -235.8034],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0593, device='cuda:0', dtype=torch.float64)
tensor([-378.2707, -174.1116, -229.1790, -298.8569, -235.6955],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0571, device='cuda:0', dtype=torch.float64)
tensor([-377.6668, -173.9526, -228.9344, -298.4948, -235.5281],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0546, device='cuda:0', dtype=torch.float64)
tensor([-377.1396, -173.8042, -228.7078, -298.1693, -235.3935],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0558, device='cuda:0', dtype=torch.float64)
tensor([-376.7573, -173.7898, -228.6116, -297.9670, -235.4039],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0651, device='cuda:0', dtype=torch.float64)
tensor([-376.2995, -173.7215, -228.4919, -297.7206, -235.4533],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0493, device='cuda:0', dtype=torch.float64)
tensor([-375.9290, -173.5976, -228.3537, -297.4679, -235.4979],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0499, device='cuda:0', dtype=torch.float64)
tensor([-375.5781, -173.4927, -228.2397, -297.2489, -235.5782],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0703, device='cuda:0', dtype=torch.float64)
tensor([-375.1897, -173.4802, -228.2030, -297.0830, -235.7184],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0598, device='cuda:0', dtype=torch.float64)
tensor([-374.7848, -173.4248, -228.0983, -296.8708, -235.7975],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0488, device='cuda:0', dtype=torch.float64)
tensor([-374.4410, -173.4194, -228.0441, -296.6646, -235.9029],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0491, device='cuda:0', dtype=torch.float64)
tensor([-374.0054, -173.3827, -227.9386, -296.3998, -235.9534],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0534, device='cuda:0', dtype=torch.float64)
tensor([-373.5790, -173.2903, -227.7548, -296.1224, -235.8738],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0554, device='cuda:0', dtype=torch.float64)
tensor([-373.1894, -173.2368, -227.6053, -295.8369, -235.8597],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0556, device='cuda:0', dtype=torch.float64)
tensor([-373.0002, -173.1862, -227.4902, -295.6328, -235.8730],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0481, device='cuda:0', dtype=torch.float64)
tensor([-372.7161, -173.0886, -227.3625, -295.3970, -235.8730],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0486, device='cuda:0', dtype=torch.float64)
tensor([-372.4799, -172.9776, -227.2635, -295.2163, -235.8603],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0558, device='cuda:0', dtype=torch.float64)
tensor([-372.3053, -172.8794, -227.2149, -295.0955, -235.8828],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0501, device='cuda:0', dtype=torch.float64)
tensor([-372.3441, -172.8532, -227.2468, -295.0631, -235.9856],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0556, device='cuda:0', dtype=torch.float64)
tensor([-372.4194, -172.7184, -227.2258, -295.0143, -236.0520],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0575, device='cuda:0', dtype=torch.float64)
tensor([-372.5499, -172.5402, -227.1790, -294.9762, -236.0719],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0595, device='cuda:0', dtype=torch.float64)
tensor([-372.7068, -172.2960, -227.0923, -294.9003, -236.0651],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0542, device='cuda:0', dtype=torch.float64)
tensor([-372.9629, -172.0834, -227.0441, -294.9010, -236.0937],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0536, device='cuda:0', dtype=torch.float64)
tensor([-373.2524, -171.8645, -227.0387, -294.8913, -236.1928],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0611, device='cuda:0', dtype=torch.float64)
tensor([-373.4965, -171.6158, -226.9532, -294.8305, -236.1855],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0476, device='cuda:0', dtype=torch.float64)
tensor([-373.6471, -171.3419, -226.8113, -294.7334, -236.1167],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0503, device='cuda:0', dtype=torch.float64)
tensor([-373.6555, -171.0969, -226.6484, -294.5730, -236.0156],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0517, device='cuda:0', dtype=torch.float64)
tensor([-373.6316, -170.8983, -226.5184, -294.4152, -235.9710],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0494, device='cuda:0', dtype=torch.float64)
tensor([-373.7297, -170.7086, -226.4441, -294.3232, -235.9799],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0516, device='cuda:0', dtype=torch.float64)
tensor([-373.6632, -170.5125, -226.3275, -294.1639, -235.9531],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0485, device='cuda:0', dtype=torch.float64)
tensor([-373.5911, -170.3496, -226.2755, -294.0507, -235.9775],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0525, device='cuda:0', dtype=torch.float64)
tensor([-373.5574, -170.1939, -226.2589, -293.9766, -236.0019],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0509, device='cuda:0', dtype=torch.float64)
tensor([-373.4902, -170.0102, -226.2234, -293.8794, -236.0163],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0517, device='cuda:0', dtype=torch.float64)
tensor([-373.4535, -169.8650, -226.2178, -293.8054, -236.0511],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0531, device='cuda:0', dtype=torch.float64)
tensor([-373.3667, -169.7301, -226.2121, -293.7277, -236.0611],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0415, device='cuda:0', dtype=torch.float64)
tensor([-373.3135, -169.6043, -226.2212, -293.6464, -236.0927],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0434, device='cuda:0', dtype=torch.float64)
tensor([-373.2697, -169.5222, -226.2618, -293.5862, -236.1698],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0456, device='cuda:0', dtype=torch.float64)
tensor([-373.2769, -169.4208, -226.3009, -293.5495, -236.1823],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0538, device='cuda:0', dtype=torch.float64)
tensor([-373.2181, -169.3243, -226.2818, -293.4464, -236.0964],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0521, device='cuda:0', dtype=torch.float64)
tensor([-373.1855, -169.2528, -226.3106, -293.3580, -236.0669],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0508, device='cuda:0', dtype=torch.float64)
tensor([-373.2836, -169.2058, -226.3627, -293.3349, -236.0279],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0500, device='cuda:0', dtype=torch.float64)
tensor([-373.2134, -169.1995, -226.3868, -293.2590, -235.9542],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0444, device='cuda:0', dtype=torch.float64)
tensor([-373.2269, -169.2253, -226.4407, -293.2457, -235.8954],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0485, device='cuda:0', dtype=torch.float64)
tensor([-373.2921, -169.2782, -226.5008, -293.2480, -235.8476],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0520, device='cuda:0', dtype=torch.float64)
tensor([-373.1650, -169.3317, -226.5096, -293.1772, -235.7509],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0438, device='cuda:0', dtype=torch.float64)
tensor([-373.0465, -169.4070, -226.5052, -293.1042, -235.6190],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0635, device='cuda:0', dtype=torch.float64)
tensor([-372.6134, -169.4131, -226.3457, -292.8599, -235.3324],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0525, device='cuda:0', dtype=torch.float64)
tensor([-372.3877, -169.4489, -226.2703, -292.7347, -235.1293],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0436, device='cuda:0', dtype=torch.float64)
tensor([-372.0442, -169.4720, -226.2102, -292.5877, -234.9953],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0492, device='cuda:0', dtype=torch.float64)
tensor([-371.8224, -169.4838, -226.1638, -292.5172, -234.8784],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0424, device='cuda:0', dtype=torch.float64)
tensor([-371.6054, -169.4888, -226.1228, -292.4266, -234.7714],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0535, device='cuda:0', dtype=torch.float64)
tensor([-371.3435, -169.4781, -226.0465, -292.3061, -234.6435],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0554, device='cuda:0', dtype=torch.float64)
tensor([-370.9304, -169.4232, -225.9329, -292.0994, -234.4655],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0437, device='cuda:0', dtype=torch.float64)
tensor([-370.4962, -169.2755, -225.7849, -291.8545, -234.2556],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0656, device='cuda:0', dtype=torch.float64)
tensor([-369.8673, -169.1059, -225.5486, -291.4636, -233.9506],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0461, device='cuda:0', dtype=torch.float64)
tensor([-369.2530, -169.0010, -225.3231, -291.0865, -233.6720],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0479, device='cuda:0', dtype=torch.float64)
tensor([-368.6664, -168.8884, -225.1038, -290.7262, -233.4013],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0567, device='cuda:0', dtype=torch.float64)
tensor([-368.2071, -168.7970, -224.9585, -290.4279, -233.2338],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0646, device='cuda:0', dtype=torch.float64)
tensor([-367.7148, -168.6876, -224.7857, -290.1242, -233.0603],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0479, device='cuda:0', dtype=torch.float64)
tensor([-367.2527, -168.5824, -224.6259, -289.7997, -232.9467],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0478, device='cuda:0', dtype=torch.float64)
tensor([-366.7039, -168.4603, -224.4319, -289.4298, -232.7766],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0504, device='cuda:0', dtype=torch.float64)
tensor([-366.2022, -168.3145, -224.2493, -289.1119, -232.6190],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0429, device='cuda:0', dtype=torch.float64)
tensor([-365.6839, -168.1605, -224.0400, -288.7899, -232.4498],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0516, device='cuda:0', dtype=torch.float64)
tensor([-365.0625, -167.9995, -223.7691, -288.4139, -232.2214],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0453, device='cuda:0', dtype=torch.float64)
tensor([-364.5009, -167.8508, -223.5197, -288.0611, -232.0401],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0471, device='cuda:0', dtype=torch.float64)
tensor([-364.0236, -167.6475, -223.2849, -287.7115, -231.8913],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0630, device='cuda:0', dtype=torch.float64)
tensor([-363.7352, -167.4213, -223.0645, -287.4304, -231.7610],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0455, device='cuda:0', dtype=torch.float64)
tensor([-363.3599, -167.1999, -222.8189, -287.0816, -231.6425],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0412, device='cuda:0', dtype=torch.float64)
tensor([-363.0253, -167.0163, -222.5919, -286.7279, -231.5421],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0428, device='cuda:0', dtype=torch.float64)
tensor([-362.7260, -166.8053, -222.4037, -286.4293, -231.4755],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0486, device='cuda:0', dtype=torch.float64)
tensor([-362.5013, -166.6288, -222.2586, -286.1649, -231.4725],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0648, device='cuda:0', dtype=torch.float64)
tensor([-362.5128, -166.4796, -222.2290, -286.0255, -231.5772],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0450, device='cuda:0', dtype=torch.float64)
tensor([-362.3951, -166.3681, -222.1615, -285.8388, -231.6292],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0515, device='cuda:0', dtype=torch.float64)
tensor([-362.1490, -166.2675, -222.0505, -285.5887, -231.6334],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0479, device='cuda:0', dtype=torch.float64)
tensor([-361.9572, -166.1917, -221.9584, -285.3586, -231.6651],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0481, device='cuda:0', dtype=torch.float64)
tensor([-361.7187, -166.1015, -221.8287, -285.0525, -231.6712],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0507, device='cuda:0', dtype=torch.float64)
tensor([-361.3908, -166.0351, -221.6858, -284.6974, -231.6720],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0432, device='cuda:0', dtype=torch.float64)
tensor([-361.1474, -165.9420, -221.5819, -284.4318, -231.6907],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0589, device='cuda:0', dtype=torch.float64)
tensor([-360.8320, -165.8562, -221.4813, -284.1410, -231.7593],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0467, device='cuda:0', dtype=torch.float64)
tensor([-360.4839, -165.7726, -221.3696, -283.8839, -231.7924],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0415, device='cuda:0', dtype=torch.float64)
tensor([-360.1906, -165.6862, -221.2858, -283.6584, -231.7919],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0394, device='cuda:0', dtype=torch.float64)
tensor([-359.9382, -165.6019, -221.1908, -283.4349, -231.7797],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0421, device='cuda:0', dtype=torch.float64)
tensor([-359.6539, -165.4958, -221.1051, -283.2189, -231.7929],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0491, device='cuda:0', dtype=torch.float64)
tensor([-359.3864, -165.4163, -221.0100, -282.9887, -231.7918],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0497, device='cuda:0', dtype=torch.float64)
tensor([-359.2044, -165.2462, -220.9150, -282.7628, -231.7873],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0393, device='cuda:0', dtype=torch.float64)
tensor([-359.0870, -165.0698, -220.8523, -282.6006, -231.7999],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0468, device='cuda:0', dtype=torch.float64)
tensor([-358.8862, -164.9427, -220.7697, -282.4102, -231.7490],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0488, device='cuda:0', dtype=torch.float64)
tensor([-358.6304, -164.7940, -220.6166, -282.1729, -231.6516],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0599, device='cuda:0', dtype=torch.float64)
tensor([-358.2955, -164.6752, -220.4222, -281.8661, -231.5299],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0631, device='cuda:0', dtype=torch.float64)
tensor([-358.1165, -164.5593, -220.2737, -281.6596, -231.4693],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0427, device='cuda:0', dtype=torch.float64)
tensor([-357.9499, -164.4477, -220.1536, -281.5083, -231.4027],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0453, device='cuda:0', dtype=torch.float64)
tensor([-357.9078, -164.2779, -220.0650, -281.4048, -231.3155],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0502, device='cuda:0', dtype=torch.float64)
tensor([-357.9793, -164.1163, -220.0287, -281.3862, -231.2958],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0561, device='cuda:0', dtype=torch.float64)
tensor([-358.0125, -164.0106, -220.0183, -281.3583, -231.2929],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0584, device='cuda:0', dtype=torch.float64)
tensor([-358.2613, -163.9048, -220.0662, -281.4299, -231.3583],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0408, device='cuda:0', dtype=torch.float64)
tensor([-358.4749, -163.7643, -220.0714, -281.4740, -231.3647],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0468, device='cuda:0', dtype=torch.float64)
tensor([-358.7657, -163.5847, -220.1018, -281.5731, -231.3920],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0413, device='cuda:0', dtype=torch.float64)
tensor([-359.0765, -163.4059, -220.1353, -281.6886, -231.3969],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0505, device='cuda:0', dtype=torch.float64)
tensor([-359.2700, -163.2578, -220.0888, -281.7103, -231.3333],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0393, device='cuda:0', dtype=torch.float64)
tensor([-359.3789, -163.1552, -220.0189, -281.7120, -231.2606],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0404, device='cuda:0', dtype=torch.float64)
tensor([-359.5110, -163.1278, -220.0203, -281.7389, -231.2628],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0382, device='cuda:0', dtype=torch.float64)
tensor([-359.6427, -163.1015, -219.9943, -281.7410, -231.2167],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0554, device='cuda:0', dtype=torch.float64)
tensor([-359.5833, -163.0422, -219.8987, -281.6518, -231.0980],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0480, device='cuda:0', dtype=torch.float64)
tensor([-359.4037, -162.9822, -219.7650, -281.5234, -230.9533],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0560, device='cuda:0', dtype=torch.float64)
tensor([-359.3210, -162.9772, -219.6680, -281.4267, -230.8431],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0491, device='cuda:0', dtype=torch.float64)
tensor([-359.2244, -162.9377, -219.5645, -281.3416, -230.6940],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0562, device='cuda:0', dtype=torch.float64)
tensor([-359.0160, -162.8455, -219.3908, -281.1869, -230.4469],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0415, device='cuda:0', dtype=torch.float64)
tensor([-358.8055, -162.7278, -219.2003, -281.0190, -230.1932],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0459, device='cuda:0', dtype=torch.float64)
tensor([-358.5770, -162.5926, -219.0407, -280.8780, -229.9811],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0418, device='cuda:0', dtype=torch.float64)
tensor([-358.3869, -162.4736, -218.8741, -280.7751, -229.7593],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0458, device='cuda:0', dtype=torch.float64)
tensor([-358.1019, -162.3541, -218.6815, -280.6172, -229.5327],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0539, device='cuda:0', dtype=torch.float64)
tensor([-357.8948, -162.2754, -218.5466, -280.5051, -229.3389],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0485, device='cuda:0', dtype=torch.float64)
tensor([-357.7211, -162.1810, -218.4096, -280.3810, -229.1659],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0456, device='cuda:0', dtype=torch.float64)
tensor([-357.5178, -162.0941, -218.2328, -280.2402, -228.9181],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0372, device='cuda:0', dtype=torch.float64)
tensor([-357.3138, -162.0269, -218.0280, -280.0716, -228.6901],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0370, device='cuda:0', dtype=torch.float64)
tensor([-357.0463, -161.9884, -217.8058, -279.8532, -228.4568],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0487, device='cuda:0', dtype=torch.float64)
tensor([-356.7389, -161.9301, -217.5379, -279.6120, -228.2036],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0504, device='cuda:0', dtype=torch.float64)
tensor([-356.3205, -161.8549, -217.2259, -279.2993, -227.9450],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0468, device='cuda:0', dtype=torch.float64)
tensor([-355.9025, -161.7662, -216.9107, -278.9939, -227.6877],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0466, device='cuda:0', dtype=torch.float64)
tensor([-355.4468, -161.6697, -216.6385, -278.6864, -227.4193],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0487, device='cuda:0', dtype=torch.float64)
tensor([-355.0372, -161.5797, -216.4090, -278.4238, -227.2163],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0476, device='cuda:0', dtype=torch.float64)
tensor([-354.5308, -161.4939, -216.1325, -278.1042, -226.9650],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0487, device='cuda:0', dtype=torch.float64)
tensor([-354.0632, -161.3889, -215.8809, -277.8236, -226.7383],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0415, device='cuda:0', dtype=torch.float64)
tensor([-353.6693, -161.2699, -215.6585, -277.5608, -226.5312],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0485, device='cuda:0', dtype=torch.float64)
tensor([-353.2078, -161.1626, -215.4284, -277.2737, -226.3530],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0486, device='cuda:0', dtype=torch.float64)
tensor([-352.6741, -161.0615, -215.1675, -276.9184, -226.1398],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0461, device='cuda:0', dtype=torch.float64)
tensor([-352.2101, -160.9774, -214.9684, -276.5949, -225.9684],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0625, device='cuda:0', dtype=torch.float64)
tensor([-351.6653, -160.9125, -214.7217, -276.2468, -225.7724],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0487, device='cuda:0', dtype=torch.float64)
tensor([-351.3131, -160.8203, -214.5356, -276.0165, -225.6274],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0459, device='cuda:0', dtype=torch.float64)
tensor([-350.9203, -160.7288, -214.3597, -275.7899, -225.4921],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0465, device='cuda:0', dtype=torch.float64)
tensor([-350.6405, -160.6414, -214.2288, -275.6135, -225.3963],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0406, device='cuda:0', dtype=torch.float64)
tensor([-350.3701, -160.5322, -214.0797, -275.4212, -225.2836],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0518, device='cuda:0', dtype=torch.float64)
tensor([-349.9216, -160.4568, -213.9292, -275.1643, -225.1883],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0472, device='cuda:0', dtype=torch.float64)
tensor([-349.5833, -160.4064, -213.8149, -274.9526, -225.1177],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0391, device='cuda:0', dtype=torch.float64)
tensor([-349.2022, -160.3785, -213.6827, -274.7116, -225.0443],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0471, device='cuda:0', dtype=torch.float64)
tensor([-348.7565, -160.3221, -213.4864, -274.4298, -224.8770],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0500, device='cuda:0', dtype=torch.float64)
tensor([-348.1998, -160.2768, -213.2265, -274.0872, -224.6517],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0404, device='cuda:0', dtype=torch.float64)
tensor([-347.6461, -160.2819, -212.9732, -273.7418, -224.4078],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0494, device='cuda:0', dtype=torch.float64)
tensor([-347.0999, -160.2568, -212.7270, -273.3895, -224.1683],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0482, device='cuda:0', dtype=torch.float64)
tensor([-346.6217, -160.1981, -212.5104, -273.0724, -223.9699],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0456, device='cuda:0', dtype=torch.float64)
tensor([-346.2279, -160.2006, -212.3416, -272.8018, -223.7942],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0597, device='cuda:0', dtype=torch.float64)
tensor([-346.0239, -160.1940, -212.2017, -272.5768, -223.6677],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0403, device='cuda:0', dtype=torch.float64)
tensor([-345.8248, -160.1598, -212.0716, -272.3204, -223.5971],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0481, device='cuda:0', dtype=torch.float64)
tensor([-345.5662, -160.1599, -211.9285, -272.0108, -223.5170],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0561, device='cuda:0', dtype=torch.float64)
tensor([-345.2172, -160.1559, -211.7370, -271.6266, -223.3600],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0396, device='cuda:0', dtype=torch.float64)
tensor([-344.9423, -160.1466, -211.5829, -271.2959, -223.2309],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0352, device='cuda:0', dtype=torch.float64)
tensor([-344.5998, -160.1227, -211.4086, -270.9550, -223.0583],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0457, device='cuda:0', dtype=torch.float64)
tensor([-344.2216, -160.1012, -211.2321, -270.6206, -222.8787],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0507, device='cuda:0', dtype=torch.float64)
tensor([-343.8541, -160.0551, -211.0544, -270.3018, -222.6949],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0545, device='cuda:0', dtype=torch.float64)
tensor([-343.5925, -159.9736, -210.8971, -270.0464, -222.5286],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0492, device='cuda:0', dtype=torch.float64)
tensor([-343.3775, -159.8883, -210.7342, -269.8242, -222.2943],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0589, device='cuda:0', dtype=torch.float64)
tensor([-343.2277, -159.7417, -210.5778, -269.6369, -222.1179],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0402, device='cuda:0', dtype=torch.float64)
tensor([-343.0510, -159.6287, -210.4167, -269.4486, -221.9160],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0445, device='cuda:0', dtype=torch.float64)
tensor([-342.8055, -159.5613, -210.2395, -269.2049, -221.7170],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0461, device='cuda:0', dtype=torch.float64)
tensor([-342.4843, -159.4662, -210.0024, -268.9188, -221.4852],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0486, device='cuda:0', dtype=torch.float64)
tensor([-342.0086, -159.3554, -209.7203, -268.5489, -221.2200],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0451, device='cuda:0', dtype=torch.float64)
tensor([-341.5080, -159.2590, -209.4919, -268.1883, -221.0169],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0438, device='cuda:0', dtype=torch.float64)
tensor([-341.0577, -159.1685, -209.2516, -267.8328, -220.7715],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0512, device='cuda:0', dtype=torch.float64)
tensor([-340.5895, -159.1094, -209.0270, -267.4457, -220.5396],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0463, device='cuda:0', dtype=torch.float64)
tensor([-340.2099, -159.0597, -208.8917, -267.1240, -220.4126],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0451, device='cuda:0', dtype=torch.float64)
tensor([-339.7961, -159.0190, -208.7422, -266.7979, -220.2621],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0526, device='cuda:0', dtype=torch.float64)
tensor([-339.3481, -159.0084, -208.6113, -266.4548, -220.1172],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0491, device='cuda:0', dtype=torch.float64)
tensor([-338.8849, -159.0391, -208.4658, -266.1167, -219.9498],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0522, device='cuda:0', dtype=torch.float64)
tensor([-338.4880, -159.0296, -208.3608, -265.8391, -219.8572],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0375, device='cuda:0', dtype=torch.float64)
tensor([-338.0402, -159.0308, -208.2349, -265.5255, -219.7580],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0336, device='cuda:0', dtype=torch.float64)
tensor([-337.6343, -158.9950, -208.1171, -265.2448, -219.6445],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0398, device='cuda:0', dtype=torch.float64)
tensor([-337.2376, -158.9965, -207.9967, -264.9771, -219.5220],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0421, device='cuda:0', dtype=torch.float64)
tensor([-336.8457, -159.0070, -207.9064, -264.7228, -219.4014],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0429, device='cuda:0', dtype=torch.float64)
tensor([-336.4157, -159.0561, -207.8460, -264.4756, -219.2889],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0443, device='cuda:0', dtype=torch.float64)
tensor([-335.9073, -159.1026, -207.7577, -264.2103, -219.1363],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0483, device='cuda:0', dtype=torch.float64)
tensor([-335.3044, -159.0782, -207.5872, -263.8846, -218.9128],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0402, device='cuda:0', dtype=torch.float64)
tensor([-334.8790, -159.0586, -207.4853, -263.6744, -218.7642],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0526, device='cuda:0', dtype=torch.float64)
tensor([-334.3926, -159.0021, -207.2986, -263.4378, -218.5298],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0415, device='cuda:0', dtype=torch.float64)
tensor([-333.9351, -158.9652, -207.1166, -263.2086, -218.2915],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0429, device='cuda:0', dtype=torch.float64)
tensor([-333.5159, -158.9516, -206.9291, -262.9835, -218.0636],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0386, device='cuda:0', dtype=torch.float64)
tensor([-333.2023, -158.9360, -206.7643, -262.7809, -217.8987],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0403, device='cuda:0', dtype=torch.float64)
tensor([-332.8359, -158.9307, -206.5992, -262.5387, -217.7351],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0421, device='cuda:0', dtype=torch.float64)
tensor([-332.5043, -158.8623, -206.4296, -262.2941, -217.5910],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0404, device='cuda:0', dtype=torch.float64)
tensor([-332.1494, -158.8300, -206.2714, -262.0536, -217.4475],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0466, device='cuda:0', dtype=torch.float64)
tensor([-331.9007, -158.7893, -206.1630, -261.8563, -217.3525],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0459, device='cuda:0', dtype=torch.float64)
tensor([-331.7711, -158.7746, -206.1377, -261.7327, -217.3454],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0525, device='cuda:0', dtype=torch.float64)
tensor([-331.5595, -158.7381, -206.0562, -261.5465, -217.2440],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0430, device='cuda:0', dtype=torch.float64)
tensor([-331.3092, -158.7400, -205.9804, -261.3552, -217.1580],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0429, device='cuda:0', dtype=torch.float64)
tensor([-331.0406, -158.7833, -205.8862, -261.1658, -217.0421],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0460, device='cuda:0', dtype=torch.float64)
tensor([-330.7245, -158.8207, -205.7787, -260.9392, -216.9358],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0500, device='cuda:0', dtype=torch.float64)
tensor([-330.4213, -158.8090, -205.6455, -260.7271, -216.7992],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0415, device='cuda:0', dtype=torch.float64)
tensor([-330.1960, -158.7636, -205.5075, -260.5261, -216.6604],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0482, device='cuda:0', dtype=torch.float64)
tensor([-329.9688, -158.7227, -205.3719, -260.3020, -216.5149],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0494, device='cuda:0', dtype=torch.float64)
tensor([-329.7190, -158.6858, -205.2110, -260.0378, -216.3546],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0527, device='cuda:0', dtype=torch.float64)
tensor([-329.4553, -158.6645, -205.0861, -259.8008, -216.2099],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0440, device='cuda:0', dtype=torch.float64)
tensor([-329.2773, -158.6052, -204.9908, -259.6229, -216.0726],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0476, device='cuda:0', dtype=torch.float64)
tensor([-329.0836, -158.5010, -204.8840, -259.4512, -215.9484],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0419, device='cuda:0', dtype=torch.float64)
tensor([-328.8740, -158.3939, -204.7609, -259.2891, -215.8137],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0419, device='cuda:0', dtype=torch.float64)
tensor([-328.6207, -158.3000, -204.6508, -259.0937, -215.7186],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0453, device='cuda:0', dtype=torch.float64)
tensor([-328.3182, -158.1914, -204.4705, -258.8261, -215.5005],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0409, device='cuda:0', dtype=torch.float64)
tensor([-328.0168, -158.1312, -204.3177, -258.5619, -215.3132],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0477, device='cuda:0', dtype=torch.float64)
tensor([-327.7330, -157.9999, -204.1352, -258.2870, -215.1162],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0434, device='cuda:0', dtype=torch.float64)
tensor([-327.5397, -157.8481, -203.9955, -258.0598, -214.9941],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0399, device='cuda:0', dtype=torch.float64)
tensor([-327.3288, -157.7154, -203.8730, -257.8085, -214.8869],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0468, device='cuda:0', dtype=torch.float64)
tensor([-327.1296, -157.5527, -203.7339, -257.5486, -214.7818],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0399, device='cuda:0', dtype=torch.float64)
tensor([-326.9224, -157.3900, -203.6080, -257.3075, -214.6788],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0412, device='cuda:0', dtype=torch.float64)
tensor([-326.7101, -157.2605, -203.5181, -257.0860, -214.5891],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0463, device='cuda:0', dtype=torch.float64)
tensor([-326.4846, -157.1439, -203.4330, -256.8504, -214.4792],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0459, device='cuda:0', dtype=torch.float64)
tensor([-326.1497, -157.0778, -203.3162, -256.5475, -214.3097],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0450, device='cuda:0', dtype=torch.float64)
tensor([-325.8431, -157.0055, -203.1757, -256.2398, -214.1339],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0492, device='cuda:0', dtype=torch.float64)
tensor([-325.4273, -156.9213, -202.9679, -255.8774, -213.8812],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0406, device='cuda:0', dtype=torch.float64)
tensor([-325.0154, -156.8521, -202.7559, -255.5012, -213.6130],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0386, device='cuda:0', dtype=torch.float64)
tensor([-324.6401, -156.8005, -202.5639, -255.1505, -213.3682],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0392, device='cuda:0', dtype=torch.float64)
tensor([-324.2318, -156.7747, -202.3464, -254.7603, -213.0788],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0426, device='cuda:0', dtype=torch.float64)
tensor([-323.8341, -156.7336, -202.1260, -254.3782, -212.8091],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0515, device='cuda:0', dtype=torch.float64)
tensor([-323.3932, -156.6616, -201.8513, -253.9715, -212.5318],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0388, device='cuda:0', dtype=torch.float64)
tensor([-322.9965, -156.5785, -201.6069, -253.6334, -212.2656],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0408, device='cuda:0', dtype=torch.float64)
tensor([-322.6516, -156.4436, -201.3807, -253.3386, -212.0514],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0458, device='cuda:0', dtype=torch.float64)
tensor([-322.2362, -156.3290, -201.1208, -252.9969, -211.7937],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0447, device='cuda:0', dtype=torch.float64)
tensor([-321.7365, -156.2081, -200.8240, -252.5672, -211.4947],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0419, device='cuda:0', dtype=torch.float64)
tensor([-321.2284, -156.1259, -200.5519, -252.1385, -211.1775],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0489, device='cuda:0', dtype=torch.float64)
tensor([-320.6532, -156.0705, -200.2978, -251.6189, -210.8605],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0504, device='cuda:0', dtype=torch.float64)
tensor([-320.0110, -156.0588, -200.0407, -251.0812, -210.4962],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0410, device='cuda:0', dtype=torch.float64)
tensor([-319.4130, -156.0850, -199.8221, -250.5468, -210.1934],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0463, device='cuda:0', dtype=torch.float64)
tensor([-318.8121, -156.0722, -199.6117, -249.9929, -209.9270],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0430, device='cuda:0', dtype=torch.float64)
tensor([-318.1631, -156.0761, -199.4186, -249.4358, -209.6576],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0383, device='cuda:0', dtype=torch.float64)
tensor([-317.5634, -156.1090, -199.2513, -248.9186, -209.4336],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0458, device='cuda:0', dtype=torch.float64)
tensor([-317.0463, -156.1369, -199.1131, -248.4656, -209.2378],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0441, device='cuda:0', dtype=torch.float64)
tensor([-316.5599, -156.1642, -198.9863, -248.0240, -209.0498],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0436, device='cuda:0', dtype=torch.float64)
tensor([-316.2135, -156.1882, -198.9039, -247.6748, -208.9181],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0482, device='cuda:0', dtype=torch.float64)
tensor([-315.8880, -156.2113, -198.7961, -247.3348, -208.7654],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0399, device='cuda:0', dtype=torch.float64)
tensor([-315.6275, -156.2501, -198.7159, -247.0366, -208.6521],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0513, device='cuda:0', dtype=torch.float64)
tensor([-315.2886, -156.2933, -198.6109, -246.7254, -208.4955],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0383, device='cuda:0', dtype=torch.float64)
tensor([-315.0083, -156.3160, -198.5306, -246.4637, -208.3697],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0387, device='cuda:0', dtype=torch.float64)
tensor([-314.7201, -156.3504, -198.4116, -246.1973, -208.2119],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0416, device='cuda:0', dtype=torch.float64)
tensor([-314.3745, -156.3924, -198.2833, -245.8855, -208.0376],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0380, device='cuda:0', dtype=torch.float64)
tensor([-314.0614, -156.4317, -198.1608, -245.5982, -207.8486],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0414, device='cuda:0', dtype=torch.float64)
tensor([-313.7391, -156.4802, -198.0141, -245.2860, -207.6819],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0345, device='cuda:0', dtype=torch.float64)
tensor([-313.4209, -156.5239, -197.8548, -244.9749, -207.5150],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0435, device='cuda:0', dtype=torch.float64)
tensor([-313.0560, -156.5253, -197.6476, -244.6492, -207.3147],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0444, device='cuda:0', dtype=torch.float64)
tensor([-312.6839, -156.4986, -197.4375, -244.3099, -207.1204],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0478, device='cuda:0', dtype=torch.float64)
tensor([-312.2875, -156.5146, -197.2254, -243.9479, -206.9112],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0472, device='cuda:0', dtype=torch.float64)
tensor([-311.8630, -156.4858, -197.0304, -243.5651, -206.7157],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0378, device='cuda:0', dtype=torch.float64)
tensor([-311.4537, -156.4924, -196.8719, -243.2191, -206.5336],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0456, device='cuda:0', dtype=torch.float64)
tensor([-311.0793, -156.4973, -196.7134, -242.8898, -206.3580],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0435, device='cuda:0', dtype=torch.float64)
tensor([-310.7451, -156.4876, -196.5677, -242.5999, -206.1839],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0468, device='cuda:0', dtype=torch.float64)
tensor([-310.2797, -156.4811, -196.3755, -242.1978, -205.9138],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0453, device='cuda:0', dtype=torch.float64)
tensor([-309.7454, -156.4709, -196.1405, -241.7482, -205.5955],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0465, device='cuda:0', dtype=torch.float64)
tensor([-309.1346, -156.4423, -195.8729, -241.2237, -205.2524],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0544, device='cuda:0', dtype=torch.float64)
tensor([-308.4376, -156.4774, -195.5718, -240.6191, -204.8867],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0339, device='cuda:0', dtype=torch.float64)
tensor([-307.8277, -156.4889, -195.2965, -240.0608, -204.5633],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0439, device='cuda:0', dtype=torch.float64)
tensor([-307.0958, -156.5000, -194.9799, -239.4310, -204.1891],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0366, device='cuda:0', dtype=torch.float64)
tensor([-306.4093, -156.4686, -194.6704, -238.8319, -203.8194],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0445, device='cuda:0', dtype=torch.float64)
tensor([-305.8322, -156.3936, -194.3655, -238.3186, -203.5085],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0429, device='cuda:0', dtype=torch.float64)
tensor([-305.2715, -156.3319, -194.0598, -237.8007, -203.2104],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0470, device='cuda:0', dtype=torch.float64)
tensor([-304.8177, -156.2553, -193.8153, -237.3578, -202.9900],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0477, device='cuda:0', dtype=torch.float64)
tensor([-304.3940, -156.1294, -193.5416, -236.9190, -202.7495],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0436, device='cuda:0', dtype=torch.float64)
tensor([-303.9618, -155.9943, -193.2682, -236.5038, -202.5106],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0441, device='cuda:0', dtype=torch.float64)
tensor([-303.6666, -155.8465, -193.0477, -236.2066, -202.3330],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0415, device='cuda:0', dtype=torch.float64)
tensor([-303.4028, -155.6692, -192.8305, -235.9253, -202.2013],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0445, device='cuda:0', dtype=torch.float64)
tensor([-303.2233, -155.4996, -192.6180, -235.6587, -202.1122],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0489, device='cuda:0', dtype=torch.float64)
tensor([-302.9729, -155.4074, -192.3664, -235.3462, -201.9759],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0430, device='cuda:0', dtype=torch.float64)
tensor([-302.6877, -155.2981, -192.0861, -235.0051, -201.8271],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0410, device='cuda:0', dtype=torch.float64)
tensor([-302.3894, -155.2000, -191.8243, -234.6556, -201.6904],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0429, device='cuda:0', dtype=torch.float64)
tensor([-301.9953, -155.1521, -191.5482, -234.2228, -201.4991],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0446, device='cuda:0', dtype=torch.float64)
tensor([-301.5105, -155.1287, -191.2437, -233.7057, -201.2822],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0403, device='cuda:0', dtype=torch.float64)
tensor([-301.0741, -155.0940, -190.9468, -233.2328, -201.0743],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0399, device='cuda:0', dtype=torch.float64)
tensor([-300.6114, -155.0817, -190.6584, -232.7434, -200.8493],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0430, device='cuda:0', dtype=torch.float64)
tensor([-300.1662, -155.1012, -190.4061, -232.2848, -200.6347],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0434, device='cuda:0', dtype=torch.float64)
tensor([-299.7986, -155.0919, -190.1955, -231.8892, -200.4683],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0454, device='cuda:0', dtype=torch.float64)
tensor([-299.4023, -155.0990, -189.9942, -231.4838, -200.2918],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0428, device='cuda:0', dtype=torch.float64)
tensor([-298.9352, -155.1413, -189.7605, -231.0395, -200.0701],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0438, device='cuda:0', dtype=torch.float64)
tensor([-298.4864, -155.1814, -189.5227, -230.6134, -199.8503],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0426, device='cuda:0', dtype=torch.float64)
tensor([-298.0563, -155.2157, -189.3108, -230.2325, -199.6519],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0406, device='cuda:0', dtype=torch.float64)
tensor([-297.5696, -155.2576, -189.0772, -229.8110, -199.4148],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0456, device='cuda:0', dtype=torch.float64)
tensor([-297.1240, -155.2934, -188.8705, -229.4126, -199.2347],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0381, device='cuda:0', dtype=torch.float64)
tensor([-296.7495, -155.3373, -188.6704, -229.0415, -199.0729],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0495, device='cuda:0', dtype=torch.float64)
tensor([-296.2238, -155.3681, -188.4410, -228.6067, -198.8568],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0411, device='cuda:0', dtype=torch.float64)
tensor([-295.7100, -155.4002, -188.2375, -228.1867, -198.6549],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0472, device='cuda:0', dtype=torch.float64)
tensor([-295.2593, -155.3999, -188.0548, -227.7970, -198.4833],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0442, device='cuda:0', dtype=torch.float64)
tensor([-294.8360, -155.4436, -187.9012, -227.4249, -198.2972],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0481, device='cuda:0', dtype=torch.float64)
tensor([-294.3766, -155.4846, -187.7013, -227.0115, -198.0962],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0510, device='cuda:0', dtype=torch.float64)
tensor([-293.8321, -155.5003, -187.4635, -226.5487, -197.8703],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0405, device='cuda:0', dtype=torch.float64)
tensor([-293.2771, -155.5510, -187.2290, -226.1064, -197.6131],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0485, device='cuda:0', dtype=torch.float64)
tensor([-292.7610, -155.5448, -186.9805, -225.6860, -197.3676],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0383, device='cuda:0', dtype=torch.float64)
tensor([-292.1672, -155.5743, -186.7112, -225.2362, -197.0686],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0677, device='cuda:0', dtype=torch.float64)
tensor([-291.6431, -155.5636, -186.4292, -224.8215, -196.8007],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0467, device='cuda:0', dtype=torch.float64)
tensor([-291.0376, -155.5887, -186.0957, -224.3655, -196.4613],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0415, device='cuda:0', dtype=torch.float64)
tensor([-290.4099, -155.6047, -185.7597, -223.9050, -196.0876],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0421, device='cuda:0', dtype=torch.float64)
tensor([-289.8944, -155.5616, -185.4416, -223.5268, -195.7877],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0502, device='cuda:0', dtype=torch.float64)
tensor([-289.4130, -155.5128, -185.1114, -223.1605, -195.4994],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0378, device='cuda:0', dtype=torch.float64)
tensor([-288.8854, -155.5049, -184.7893, -222.7496, -195.1757],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0478, device='cuda:0', dtype=torch.float64)
tensor([-288.3404, -155.4899, -184.4603, -222.3169, -194.8350],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0404, device='cuda:0', dtype=torch.float64)
tensor([-287.9229, -155.4395, -184.1523, -221.9633, -194.5782],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0600, device='cuda:0', dtype=torch.float64)
tensor([-287.3533, -155.4371, -183.8064, -221.5140, -194.2341],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0525, device='cuda:0', dtype=torch.float64)
tensor([-286.7793, -155.4137, -183.4752, -221.0528, -193.9005],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0489, device='cuda:0', dtype=torch.float64)
tensor([-286.1096, -155.4004, -183.1257, -220.5283, -193.5349],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0453, device='cuda:0', dtype=torch.float64)
tensor([-285.4026, -155.4113, -182.7542, -219.9822, -193.1423],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0471, device='cuda:0', dtype=torch.float64)
tensor([-284.7115, -155.4281, -182.3711, -219.4468, -192.7602],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0389, device='cuda:0', dtype=torch.float64)
tensor([-284.0043, -155.4534, -182.0093, -218.9257, -192.3664],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0465, device='cuda:0', dtype=torch.float64)
tensor([-283.2796, -155.5393, -181.6850, -218.3887, -191.9787],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0536, device='cuda:0', dtype=torch.float64)
tensor([-282.5108, -155.6168, -181.3413, -217.8153, -191.5698],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0431, device='cuda:0', dtype=torch.float64)
tensor([-281.8936, -155.6913, -181.0383, -217.3501, -191.2419],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0398, device='cuda:0', dtype=torch.float64)
tensor([-281.3562, -155.7359, -180.7235, -216.9066, -190.9556],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0486, device='cuda:0', dtype=torch.float64)
tensor([-280.7197, -155.7811, -180.3672, -216.4062, -190.5893],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0379, device='cuda:0', dtype=torch.float64)
tensor([-280.1094, -155.8587, -180.0744, -215.9379, -190.2418],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0416, device='cuda:0', dtype=torch.float64)
tensor([-279.4949, -155.9510, -179.8003, -215.4492, -189.8867],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0522, device='cuda:0', dtype=torch.float64)
tensor([-278.8180, -156.0721, -179.4982, -214.9098, -189.4842],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0429, device='cuda:0', dtype=torch.float64)
tensor([-278.1455, -156.2024, -179.1960, -214.3800, -189.0866],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0420, device='cuda:0', dtype=torch.float64)
tensor([-277.5191, -156.3189, -178.9286, -213.8961, -188.7358],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0513, device='cuda:0', dtype=torch.float64)
tensor([-276.8740, -156.3761, -178.6261, -213.3856, -188.3838],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0491, device='cuda:0', dtype=torch.float64)
tensor([-276.1880, -156.4590, -178.3027, -212.8595, -187.9987],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0432, device='cuda:0', dtype=torch.float64)
tensor([-275.5486, -156.5464, -177.9691, -212.3545, -187.6363],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0454, device='cuda:0', dtype=torch.float64)
tensor([-274.8968, -156.6518, -177.6350, -211.8478, -187.2263],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0483, device='cuda:0', dtype=torch.float64)
tensor([-274.2817, -156.7752, -177.3398, -211.3739, -186.8415],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0447, device='cuda:0', dtype=torch.float64)
tensor([-273.7461, -156.8466, -177.0609, -210.9351, -186.5249],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0529, device='cuda:0', dtype=torch.float64)
tensor([-273.2094, -156.9054, -176.7554, -210.4825, -186.2140],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0500, device='cuda:0', dtype=torch.float64)
tensor([-272.7514, -156.9212, -176.4615, -210.0672, -185.9770],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0462, device='cuda:0', dtype=torch.float64)
tensor([-272.2714, -156.9478, -176.1582, -209.6419, -185.7168],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0508, device='cuda:0', dtype=torch.float64)
tensor([-271.7682, -157.0241, -175.8539, -209.2007, -185.4205],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0431, device='cuda:0', dtype=torch.float64)
tensor([-271.2635, -157.1254, -175.5377, -208.7671, -185.1405],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0493, device='cuda:0', dtype=torch.float64)
tensor([-270.7702, -157.2298, -175.2358, -208.3404, -184.8776],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0621, device='cuda:0', dtype=torch.float64)
tensor([-270.1441, -157.3632, -174.9255, -207.8328, -184.5053],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0481, device='cuda:0', dtype=torch.float64)
tensor([-269.5415, -157.4950, -174.5918, -207.3627, -184.1389],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0485, device='cuda:0', dtype=torch.float64)
tensor([-268.9629, -157.6007, -174.2209, -206.8848, -183.7740],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0477, device='cuda:0', dtype=torch.float64)
tensor([-268.3450, -157.7407, -173.8459, -206.3956, -183.3634],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0450, device='cuda:0', dtype=torch.float64)
tensor([-267.8305, -157.8711, -173.4887, -205.9805, -183.0398],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0501, device='cuda:0', dtype=torch.float64)
tensor([-267.2023, -158.0296, -173.1174, -205.4933, -182.6684],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0611, device='cuda:0', dtype=torch.float64)
tensor([-266.5239, -158.2272, -172.7690, -204.9617, -182.2494],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0508, device='cuda:0', dtype=torch.float64)
tensor([-265.9273, -158.3741, -172.4277, -204.4608, -181.8866],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0560, device='cuda:0', dtype=torch.float64)
tensor([-265.3735, -158.5034, -172.1073, -203.9652, -181.5466],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0438, device='cuda:0', dtype=torch.float64)
tensor([-264.8240, -158.6307, -171.7845, -203.4855, -181.1998],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0539, device='cuda:0', dtype=torch.float64)
tensor([-264.3054, -158.7395, -171.4428, -203.0154, -180.8854],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0415, device='cuda:0', dtype=torch.float64)
tensor([-263.7825, -158.8826, -171.1106, -202.5392, -180.5666],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0391, device='cuda:0', dtype=torch.float64)
tensor([-263.2366, -159.0217, -170.7615, -202.0483, -180.2318],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0437, device='cuda:0', dtype=torch.float64)
tensor([-262.7643, -159.1499, -170.4333, -201.6077, -179.9512],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0459, device='cuda:0', dtype=torch.float64)
tensor([-262.3661, -159.2821, -170.1333, -201.1822, -179.6939],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0481, device='cuda:0', dtype=torch.float64)
tensor([-261.9927, -159.3753, -169.8489, -200.7737, -179.4519],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0544, device='cuda:0', dtype=torch.float64)
tensor([-261.6444, -159.4612, -169.5414, -200.3843, -179.2134],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0436, device='cuda:0', dtype=torch.float64)
tensor([-261.2770, -159.5418, -169.2619, -199.9882, -178.9584],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0441, device='cuda:0', dtype=torch.float64)
tensor([-260.8664, -159.6891, -169.0099, -199.5256, -178.6654],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0450, device='cuda:0', dtype=torch.float64)
tensor([-260.4792, -159.8622, -168.7762, -199.0858, -178.4104],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0441, device='cuda:0', dtype=torch.float64)
tensor([-260.1074, -160.0417, -168.5627, -198.6701, -178.1499],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0518, device='cuda:0', dtype=torch.float64)
tensor([-259.7832, -160.2109, -168.3522, -198.3262, -177.9411],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0416, device='cuda:0', dtype=torch.float64)
tensor([-259.4550, -160.3897, -168.1492, -197.9761, -177.7034],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0547, device='cuda:0', dtype=torch.float64)
tensor([-259.0181, -160.5786, -167.8786, -197.5587, -177.3906],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0392, device='cuda:0', dtype=torch.float64)
tensor([-258.6640, -160.7268, -167.6442, -197.1974, -177.1414],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0399, device='cuda:0', dtype=torch.float64)
tensor([-258.3457, -160.8567, -167.4213, -196.8371, -176.9097],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0471, device='cuda:0', dtype=torch.float64)
tensor([-258.0840, -161.0052, -167.1791, -196.5166, -176.7156],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0477, device='cuda:0', dtype=torch.float64)
tensor([-257.8621, -161.1146, -166.9243, -196.2215, -176.5742],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0593, device='cuda:0', dtype=torch.float64)
tensor([-257.6330, -161.2469, -166.6979, -195.9082, -176.4077],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0489, device='cuda:0', dtype=torch.float64)
tensor([-257.3914, -161.3861, -166.4766, -195.5909, -176.1900],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0403, device='cuda:0', dtype=torch.float64)
tensor([-257.1400, -161.5211, -166.2785, -195.2737, -175.9620],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0427, device='cuda:0', dtype=torch.float64)
tensor([-256.9305, -161.6198, -166.0875, -194.9831, -175.7900],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0472, device='cuda:0', dtype=torch.float64)
tensor([-256.7519, -161.7467, -165.9105, -194.7207, -175.6260],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0403, device='cuda:0', dtype=torch.float64)
tensor([-256.5668, -161.8485, -165.7230, -194.4450, -175.4724],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0506, device='cuda:0', dtype=torch.float64)
tensor([-256.3901, -161.9217, -165.5221, -194.1960, -175.3574],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0487, device='cuda:0', dtype=torch.float64)
tensor([-256.1093, -162.0243, -165.3092, -193.8947, -175.1993],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0454, device='cuda:0', dtype=torch.float64)
tensor([-255.8440, -162.1052, -165.1158, -193.6222, -175.0551],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0502, device='cuda:0', dtype=torch.float64)
tensor([-255.5964, -162.1993, -164.9318, -193.3492, -174.9038],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0511, device='cuda:0', dtype=torch.float64)
tensor([-255.2726, -162.3256, -164.6921, -193.0207, -174.6761],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0447, device='cuda:0', dtype=torch.float64)
tensor([-254.9755, -162.4627, -164.4815, -192.6986, -174.4471],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0475, device='cuda:0', dtype=torch.float64)
tensor([-254.6362, -162.6151, -164.2449, -192.3582, -174.1978],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0357, device='cuda:0', dtype=torch.float64)
tensor([-254.3918, -162.6876, -164.0369, -192.0926, -174.0325],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0470, device='cuda:0', dtype=torch.float64)
tensor([-254.2035, -162.7597, -163.8179, -191.8842, -173.9307],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0499, device='cuda:0', dtype=torch.float64)
tensor([-253.9785, -162.8141, -163.5997, -191.6564, -173.7829],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0469, device='cuda:0', dtype=torch.float64)
tensor([-253.6730, -162.9182, -163.3618, -191.3679, -173.5586],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0486, device='cuda:0', dtype=torch.float64)
tensor([-253.2607, -163.0613, -163.1166, -190.9929, -173.2289],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0409, device='cuda:0', dtype=torch.float64)
tensor([-252.8785, -163.1850, -162.9070, -190.6761, -172.9389],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0436, device='cuda:0', dtype=torch.float64)
tensor([-252.5137, -163.3328, -162.7056, -190.3735, -172.6682],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0465, device='cuda:0', dtype=torch.float64)
tensor([-252.1378, -163.5056, -162.5166, -190.0574, -172.3995],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0420, device='cuda:0', dtype=torch.float64)
tensor([-251.8193, -163.6439, -162.3751, -189.7993, -172.1822],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0408, device='cuda:0', dtype=torch.float64)
tensor([-251.5468, -163.7678, -162.2170, -189.5680, -171.9813],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0492, device='cuda:0', dtype=torch.float64)
tensor([-251.3437, -163.8448, -162.0889, -189.3854, -171.8478],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0416, device='cuda:0', dtype=torch.float64)
tensor([-251.1646, -163.9198, -161.9792, -189.1892, -171.7086],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0420, device='cuda:0', dtype=torch.float64)
tensor([-250.9968, -163.9944, -161.8784, -188.9887, -171.5810],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0379, device='cuda:0', dtype=torch.float64)
tensor([-250.8475, -164.0401, -161.7518, -188.8002, -171.4782],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0461, device='cuda:0', dtype=torch.float64)
tensor([-250.7112, -164.1224, -161.6253, -188.6136, -171.3816],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0439, device='cuda:0', dtype=torch.float64)
tensor([-250.5324, -164.2149, -161.4821, -188.4011, -171.2198],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0451, device='cuda:0', dtype=torch.float64)
tensor([-250.3457, -164.3414, -161.3704, -188.1809, -171.0474],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0561, device='cuda:0', dtype=torch.float64)
tensor([-250.1819, -164.4650, -161.2463, -187.9786, -170.8968],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0484, device='cuda:0', dtype=torch.float64)
tensor([-249.9967, -164.5862, -161.1235, -187.7808, -170.7336],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0507, device='cuda:0', dtype=torch.float64)
tensor([-249.8170, -164.7351, -161.0599, -187.6174, -170.5814],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0461, device='cuda:0', dtype=torch.float64)
tensor([-249.6221, -164.8747, -160.9502, -187.4706, -170.4282],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0546, device='cuda:0', dtype=torch.float64)
tensor([-249.3979, -164.9854, -160.8560, -187.2970, -170.3004],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0471, device='cuda:0', dtype=torch.float64)
tensor([-249.2002, -165.0864, -160.7286, -187.1422, -170.1839],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0416, device='cuda:0', dtype=torch.float64)
tensor([-248.9667, -165.2049, -160.6251, -186.9776, -170.0337],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0486, device='cuda:0', dtype=torch.float64)
tensor([-248.6612, -165.3856, -160.5107, -186.7418, -169.7860],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0442, device='cuda:0', dtype=torch.float64)
tensor([-248.3398, -165.5715, -160.3969, -186.5367, -169.5493],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0488, device='cuda:0', dtype=torch.float64)
tensor([-248.0497, -165.7254, -160.2516, -186.3556, -169.3442],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0503, device='cuda:0', dtype=torch.float64)
tensor([-247.7249, -165.8814, -160.1178, -186.1463, -169.1222],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0567, device='cuda:0', dtype=torch.float64)
tensor([-247.3803, -166.0841, -160.0178, -185.9289, -168.9016],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0555, device='cuda:0', dtype=torch.float64)
tensor([-247.0761, -166.2858, -159.9166, -185.7448, -168.7126],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0380, device='cuda:0', dtype=torch.float64)
tensor([-246.7874, -166.4782, -159.7980, -185.5733, -168.5001],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0434, device='cuda:0', dtype=torch.float64)
tensor([-246.4373, -166.7082, -159.6846, -185.3621, -168.2370],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0455, device='cuda:0', dtype=torch.float64)
tensor([-246.1296, -166.9110, -159.5834, -185.1633, -167.9991],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0440, device='cuda:0', dtype=torch.float64)
tensor([-245.7927, -167.1024, -159.4670, -184.9244, -167.7378],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0458, device='cuda:0', dtype=torch.float64)
tensor([-245.4439, -167.3297, -159.3812, -184.6668, -167.4374],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0486, device='cuda:0', dtype=torch.float64)
tensor([-245.1163, -167.5548, -159.3341, -184.4264, -167.1632],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0452, device='cuda:0', dtype=torch.float64)
tensor([-244.7371, -167.7938, -159.2561, -184.1374, -166.8358],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0587, device='cuda:0', dtype=torch.float64)
tensor([-244.3566, -168.0340, -159.1828, -183.8424, -166.5240],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0480, device='cuda:0', dtype=torch.float64)
tensor([-244.0425, -168.2348, -159.1064, -183.5850, -166.2754],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0527, device='cuda:0', dtype=torch.float64)
tensor([-243.7749, -168.4290, -159.0228, -183.3536, -166.0299],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0573, device='cuda:0', dtype=torch.float64)
tensor([-243.4135, -168.6548, -158.9160, -183.0800, -165.6970],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0521, device='cuda:0', dtype=torch.float64)
tensor([-243.0537, -168.8730, -158.8066, -182.8231, -165.3498],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0511, device='cuda:0', dtype=torch.float64)
tensor([-242.6484, -169.0647, -158.6646, -182.5582, -164.9872],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0434, device='cuda:0', dtype=torch.float64)
tensor([-242.2361, -169.2310, -158.5021, -182.2825, -164.6389],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0596, device='cuda:0', dtype=torch.float64)
tensor([-241.8662, -169.3440, -158.3084, -182.0322, -164.3535],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0641, device='cuda:0', dtype=torch.float64)
tensor([-241.4339, -169.4654, -158.0600, -181.7154, -164.0292],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0534, device='cuda:0', dtype=torch.float64)
tensor([-241.0359, -169.5821, -157.8218, -181.4129, -163.7225],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0464, device='cuda:0', dtype=torch.float64)
tensor([-240.7313, -169.6771, -157.6099, -181.1690, -163.4673],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0466, device='cuda:0', dtype=torch.float64)
tensor([-240.4516, -169.7712, -157.4011, -180.9304, -163.2270],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0458, device='cuda:0', dtype=torch.float64)
tensor([-240.1866, -169.8458, -157.1977, -180.7107, -163.0228],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0540, device='cuda:0', dtype=torch.float64)
tensor([-239.8946, -169.9787, -157.0123, -180.4632, -162.8019],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0536, device='cuda:0', dtype=torch.float64)
tensor([-239.5864, -170.0915, -156.8412, -180.2055, -162.5859],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0661, device='cuda:0', dtype=torch.float64)
tensor([-239.3623, -170.1751, -156.6686, -179.9382, -162.4180],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0466, device='cuda:0', dtype=torch.float64)
tensor([-239.0781, -170.3052, -156.4857, -179.6359, -162.1772],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0417, device='cuda:0', dtype=torch.float64)
tensor([-238.8156, -170.4435, -156.3086, -179.3461, -161.9585],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0473, device='cuda:0', dtype=torch.float64)
tensor([-238.5386, -170.5912, -156.1484, -179.0619, -161.7367],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0517, device='cuda:0', dtype=torch.float64)
tensor([-238.2688, -170.7788, -156.0039, -178.7573, -161.4671],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0498, device='cuda:0', dtype=torch.float64)
tensor([-238.0165, -170.9448, -155.8727, -178.4518, -161.2074],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0466, device='cuda:0', dtype=torch.float64)
tensor([-237.7236, -171.1354, -155.7609, -178.1267, -160.9256],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0483, device='cuda:0', dtype=torch.float64)
tensor([-237.4164, -171.3537, -155.6476, -177.7928, -160.6154],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0557, device='cuda:0', dtype=torch.float64)
tensor([-237.0759, -171.5789, -155.5048, -177.4249, -160.2803],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0553, device='cuda:0', dtype=torch.float64)
tensor([-236.6710, -171.8458, -155.3497, -177.0057, -159.8808],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0522, device='cuda:0', dtype=torch.float64)
tensor([-236.1717, -172.1411, -155.1545, -176.5228, -159.4209],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0420, device='cuda:0', dtype=torch.float64)
tensor([-235.7408, -172.4292, -154.9939, -176.0988, -159.0262],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0618, device='cuda:0', dtype=torch.float64)
tensor([-235.2891, -172.7330, -154.8552, -175.6913, -158.6311],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0462, device='cuda:0', dtype=torch.float64)
tensor([-234.8677, -173.0450, -154.7227, -175.3170, -158.2801],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0541, device='cuda:0', dtype=torch.float64)
tensor([-234.4789, -173.3450, -154.6260, -174.9405, -157.9362],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0439, device='cuda:0', dtype=torch.float64)
tensor([-234.1570, -173.6242, -154.5673, -174.6146, -157.6258],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0478, device='cuda:0', dtype=torch.float64)
tensor([-233.8414, -173.8699, -154.4418, -174.3250, -157.3578],
       device='cuda:0', dtype=torch.float64)
Saved results to /home/idrissm/projects/def-mh541-ab/idrissm/neighborVCA/runs/results/tsp/tsp64_/home/idrissm/projects/def-mh541-ab/idrissm/neighborVCA/scripts/VCA/tsp/configHVCA64.json_20250925_100030.csv
rnn.0.0.weight tensor(0.8602, device='cuda:0', dtype=torch.float64)
tensor([-2.3503, -3.4717, -4.1553, -4.9913, -5.9320], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(13.2644, device='cuda:0', dtype=torch.float64)
tensor([-42.6452, -28.9265, -22.1051, -64.0985, -33.9892], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(319.9290, device='cuda:0', dtype=torch.float64)
tensor([-2.9475, -5.7093, -5.3783, -4.9621, -7.5288], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(29.6667, device='cuda:0', dtype=torch.float64)
tensor([-38.3255, -18.3745, -16.5236, -32.0345, -35.1510], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(276.5202, device='cuda:0', dtype=torch.float64)
tensor([-20.1034, -16.3765, -12.0246, -33.0558, -30.2299], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(213.5571, device='cuda:0', dtype=torch.float64)
tensor([-3.0991, -7.3888, -5.1937, -7.9498, -8.0807], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(44.9619, device='cuda:0', dtype=torch.float64)
tensor([-2.5922, -5.8560, -4.8420, -5.6571, -6.6460], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(35.1583, device='cuda:0', dtype=torch.float64)
tensor([-3.0114, -4.0284, -5.9515, -6.4749, -9.0174], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(64.7989, device='cuda:0', dtype=torch.float64)
tensor([ -7.3907,  -3.8072,  -7.2542,  -7.6905, -11.9044], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(89.3154, device='cuda:0', dtype=torch.float64)
tensor([ -6.9238,  -4.4736,  -7.5275,  -8.1683, -12.8965], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(90.0700, device='cuda:0', dtype=torch.float64)
tensor([ -3.3122,  -5.2453,  -6.5115,  -6.9929, -11.3778], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(65.0227, device='cuda:0', dtype=torch.float64)
tensor([-2.5532, -5.4343, -5.3520, -5.7694, -8.9503], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(36.5694, device='cuda:0', dtype=torch.float64)
tensor([-2.6038, -5.0386, -4.7669, -5.2473, -7.5130], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(22.6335, device='cuda:0', dtype=torch.float64)
tensor([-2.7616, -4.7699, -4.6295, -5.2844, -6.8826], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(18.6291, device='cuda:0', dtype=torch.float64)
tensor([-2.9213, -5.0003, -4.7175, -5.8224, -6.4831], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(23.3948, device='cuda:0', dtype=torch.float64)
tensor([-2.9590, -5.6247, -4.8600, -6.7802, -6.3010], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(32.4725, device='cuda:0', dtype=torch.float64)
tensor([-2.9536, -6.3216, -4.8735, -7.1924, -6.3820], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(39.0957, device='cuda:0', dtype=torch.float64)
tensor([-2.9373, -5.7586, -4.6691, -6.6934, -6.5477], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(37.5504, device='cuda:0', dtype=torch.float64)
tensor([-2.6600, -4.9000, -4.4020, -6.0053, -6.6009], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(27.7269, device='cuda:0', dtype=torch.float64)
tensor([-2.4946, -4.4576, -4.2718, -5.5439, -6.5953], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(20.3784, device='cuda:0', dtype=torch.float64)
tensor([-2.3670, -4.0678, -4.3565, -5.3716, -6.6339], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(15.1452, device='cuda:0', dtype=torch.float64)
tensor([-2.2526, -3.7601, -4.6440, -5.4977, -6.7047], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(13.2962, device='cuda:0', dtype=torch.float64)
tensor([-2.1669, -3.5441, -5.0379, -5.8949, -6.8168], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(14.1652, device='cuda:0', dtype=torch.float64)
tensor([-2.1307, -3.3942, -5.3966, -6.2723, -6.9716], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(18.4876, device='cuda:0', dtype=torch.float64)
tensor([-2.1229, -3.2955, -5.6110, -6.2793, -7.0659], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(21.9127, device='cuda:0', dtype=torch.float64)
tensor([-2.0963, -3.2495, -5.6560, -5.9513, -6.9487], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(21.9250, device='cuda:0', dtype=torch.float64)
tensor([-2.0693, -3.2677, -5.5550, -5.5749, -6.6068], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(18.6256, device='cuda:0', dtype=torch.float64)
tensor([-2.0759, -3.3543, -5.3490, -5.3258, -6.2530], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(13.9435, device='cuda:0', dtype=torch.float64)
tensor([-2.1263, -3.4808, -5.0953, -5.1879, -6.0469], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(10.4599, device='cuda:0', dtype=torch.float64)
tensor([-2.2050, -3.6104, -4.8503, -5.0807, -5.9797], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(9.5570, device='cuda:0', dtype=torch.float64)
tensor([-2.2808, -3.7170, -4.6432, -4.9617, -5.9943], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(11.0412, device='cuda:0', dtype=torch.float64)
tensor([-2.3346, -3.7865, -4.4784, -4.8421, -6.0376], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(12.5124, device='cuda:0', dtype=torch.float64)
tensor([-2.3648, -3.8152, -4.3532, -4.7158, -6.0696], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(12.5707, device='cuda:0', dtype=torch.float64)
tensor([-2.3757, -3.8119, -4.2674, -4.5761, -6.0742], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(10.8129, device='cuda:0', dtype=torch.float64)
tensor([-2.3722, -3.7911, -4.2256, -4.4525, -6.0590], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(7.7642, device='cuda:0', dtype=torch.float64)
tensor([-2.3609, -3.7640, -4.2321, -4.3844, -6.0357], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(4.9627, device='cuda:0', dtype=torch.float64)
tensor([-2.3465, -3.7397, -4.2810, -4.3881, -6.0122], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(5.8223, device='cuda:0', dtype=torch.float64)
tensor([-2.3289, -3.7276, -4.3429, -4.4436, -5.9947], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(7.6387, device='cuda:0', dtype=torch.float64)
tensor([-2.3061, -3.7347, -4.3730, -4.5172, -5.9857], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(8.4211, device='cuda:0', dtype=torch.float64)
tensor([-2.2781, -3.7522, -4.3477, -4.5929, -5.9816], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(7.7970, device='cuda:0', dtype=torch.float64)
tensor([-2.2486, -3.7571, -4.2874, -4.6782, -5.9730], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(6.5364, device='cuda:0', dtype=torch.float64)
tensor([-2.2238, -3.7411, -4.2323, -4.7845, -5.9539], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(5.2255, device='cuda:0', dtype=torch.float64)
tensor([-2.2085, -3.7200, -4.2069, -4.9096, -5.9274], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(4.3014, device='cuda:0', dtype=torch.float64)
tensor([-2.2031, -3.7074, -4.2144, -5.0376, -5.9042], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(3.9468, device='cuda:0', dtype=torch.float64)
tensor([-2.2040, -3.7035, -4.2478, -5.1476, -5.8914], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(4.0129, device='cuda:0', dtype=torch.float64)
tensor([-2.2051, -3.6977, -4.2954, -5.2211, -5.8860], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(4.3084, device='cuda:0', dtype=torch.float64)
tensor([-2.2029, -3.6791, -4.3442, -5.2461, -5.8828], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(4.5116, device='cuda:0', dtype=torch.float64)
tensor([-2.1976, -3.6468, -4.3836, -5.2227, -5.8811], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(4.4672, device='cuda:0', dtype=torch.float64)
tensor([-2.1910, -3.6119, -4.4051, -5.1599, -5.8835], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(4.1279, device='cuda:0', dtype=torch.float64)
tensor([-2.1842, -3.5850, -4.3987, -5.0700, -5.8905], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(3.5769, device='cuda:0', dtype=torch.float64)
tensor([-2.1774, -3.5692, -4.3590, -4.9687, -5.8987], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(3.0284, device='cuda:0', dtype=torch.float64)
tensor([-2.1709, -3.5621, -4.2945, -4.8722, -5.9028], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.7528, device='cuda:0', dtype=torch.float64)
tensor([-2.1652, -3.5607, -4.2232, -4.7905, -5.8990], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.8645, device='cuda:0', dtype=torch.float64)
tensor([-2.1616, -3.5629, -4.1589, -4.7236, -5.8858], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(3.0497, device='cuda:0', dtype=torch.float64)
tensor([-2.1618, -3.5675, -4.1072, -4.6680, -5.8645], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.9790, device='cuda:0', dtype=torch.float64)
tensor([-2.1677, -3.5749, -4.0682, -4.6250, -5.8380], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.6311, device='cuda:0', dtype=torch.float64)
tensor([-2.1794, -3.5852, -4.0401, -4.6003, -5.8090], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.2795, device='cuda:0', dtype=torch.float64)
tensor([-2.1941, -3.5953, -4.0216, -4.5966, -5.7798], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1923, device='cuda:0', dtype=torch.float64)
tensor([-2.2079, -3.6006, -4.0140, -4.6092, -5.7522], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1721, device='cuda:0', dtype=torch.float64)
tensor([-2.2174, -3.5976, -4.0203, -4.6308, -5.7280], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1400, device='cuda:0', dtype=torch.float64)
tensor([-2.2210, -3.5856, -4.0419, -4.6560, -5.7083], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1037, device='cuda:0', dtype=torch.float64)
tensor([-2.2192, -3.5664, -4.0758, -4.6812, -5.6938], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9979, device='cuda:0', dtype=torch.float64)
tensor([-2.2137, -3.5437, -4.1165, -4.7041, -5.6843], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8081, device='cuda:0', dtype=torch.float64)
tensor([-2.2063, -3.5218, -4.1576, -4.7228, -5.6786], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6783, device='cuda:0', dtype=torch.float64)
tensor([-2.1980, -3.5044, -4.1920, -4.7353, -5.6742], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7122, device='cuda:0', dtype=torch.float64)
tensor([-2.1900, -3.4936, -4.2098, -4.7407, -5.6684], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8449, device='cuda:0', dtype=torch.float64)
tensor([-2.1829, -3.4891, -4.2021, -4.7391, -5.6599], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9253, device='cuda:0', dtype=torch.float64)
tensor([-2.1779, -3.4885, -4.1683, -4.7312, -5.6501], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8755, device='cuda:0', dtype=torch.float64)
tensor([-2.1754, -3.4889, -4.1193, -4.7182, -5.6411], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7126, device='cuda:0', dtype=torch.float64)
tensor([-2.1755, -3.4880, -4.0701, -4.7024, -5.6348], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4815, device='cuda:0', dtype=torch.float64)
tensor([-2.1773, -3.4849, -4.0320, -4.6873, -5.6318], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3467, device='cuda:0', dtype=torch.float64)
tensor([-2.1800, -3.4806, -4.0104, -4.6752, -5.6323], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4675, device='cuda:0', dtype=torch.float64)
tensor([-2.1828, -3.4764, -4.0060, -4.6664, -5.6352], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6210, device='cuda:0', dtype=torch.float64)
tensor([-2.1851, -3.4734, -4.0167, -4.6606, -5.6393], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5933, device='cuda:0', dtype=torch.float64)
tensor([-2.1869, -3.4716, -4.0378, -4.6578, -5.6431], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4184, device='cuda:0', dtype=torch.float64)
tensor([-2.1879, -3.4704, -4.0619, -4.6583, -5.6447], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2774, device='cuda:0', dtype=torch.float64)
tensor([-2.1881, -3.4681, -4.0809, -4.6612, -5.6432], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2863, device='cuda:0', dtype=torch.float64)
tensor([-2.1876, -3.4637, -4.0893, -4.6642, -5.6390], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3144, device='cuda:0', dtype=torch.float64)
tensor([-2.1864, -3.4569, -4.0869, -4.6655, -5.6333], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2694, device='cuda:0', dtype=torch.float64)
tensor([-2.1849, -3.4492, -4.0771, -4.6647, -5.6271], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1961, device='cuda:0', dtype=torch.float64)
tensor([-2.1835, -3.4426, -4.0640, -4.6621, -5.6213], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1622, device='cuda:0', dtype=torch.float64)
tensor([-2.1825, -3.4381, -4.0506, -4.6589, -5.6161], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1421, device='cuda:0', dtype=torch.float64)
tensor([-2.1820, -3.4361, -4.0387, -4.6552, -5.6115], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1175, device='cuda:0', dtype=torch.float64)
tensor([-2.1821, -3.4367, -4.0297, -4.6500, -5.6073], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1111, device='cuda:0', dtype=torch.float64)
tensor([-2.1823, -3.4386, -4.0235, -4.6430, -5.6030], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1182, device='cuda:0', dtype=torch.float64)
tensor([-2.1823, -3.4405, -4.0198, -4.6342, -5.5979], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1198, device='cuda:0', dtype=torch.float64)
tensor([-2.1814, -3.4411, -4.0176, -4.6252, -5.5915], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0935, device='cuda:0', dtype=torch.float64)
tensor([-2.1799, -3.4406, -4.0165, -4.6168, -5.5843], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0696, device='cuda:0', dtype=torch.float64)
tensor([-2.1781, -3.4393, -4.0167, -4.6105, -5.5762], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0410, device='cuda:0', dtype=torch.float64)
tensor([-2.1763, -3.4377, -4.0181, -4.6056, -5.5685], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0384, device='cuda:0', dtype=torch.float64)
tensor([-2.1751, -3.4358, -4.0200, -4.6024, -5.5617], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0608, device='cuda:0', dtype=torch.float64)
tensor([-2.1738, -3.4336, -4.0212, -4.6015, -5.5562], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0564, device='cuda:0', dtype=torch.float64)
tensor([-2.1718, -3.4310, -4.0203, -4.6036, -5.5516], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0199, device='cuda:0', dtype=torch.float64)
tensor([-2.1687, -3.4278, -4.0164, -4.6091, -5.5473], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0041, device='cuda:0', dtype=torch.float64)
tensor([-2.1643, -3.4238, -4.0099, -4.6179, -5.5428], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9808, device='cuda:0', dtype=torch.float64)
tensor([-2.1589, -3.4197, -4.0022, -4.6282, -5.5384], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9686, device='cuda:0', dtype=torch.float64)
tensor([-2.1533, -3.4160, -3.9962, -4.6377, -5.5344], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9518, device='cuda:0', dtype=torch.float64)
tensor([-2.1485, -3.4128, -3.9935, -4.6444, -5.5312], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9463, device='cuda:0', dtype=torch.float64)
tensor([-2.1452, -3.4104, -3.9945, -4.6469, -5.5287], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9422, device='cuda:0', dtype=torch.float64)
tensor([-2.1440, -3.4084, -3.9976, -4.6450, -5.5264], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9416, device='cuda:0', dtype=torch.float64)
tensor([-2.1448, -3.4069, -4.0006, -4.6396, -5.5234], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9346, device='cuda:0', dtype=torch.float64)
tensor([-2.1468, -3.4055, -4.0015, -4.6326, -5.5192], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9290, device='cuda:0', dtype=torch.float64)
tensor([-2.1496, -3.4041, -3.9988, -4.6255, -5.5138], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9243, device='cuda:0', dtype=torch.float64)
tensor([-2.1524, -3.4026, -3.9931, -4.6191, -5.5079], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9168, device='cuda:0', dtype=torch.float64)
tensor([-2.1548, -3.4010, -3.9856, -4.6139, -5.5022], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9063, device='cuda:0', dtype=torch.float64)
tensor([-2.1564, -3.3994, -3.9782, -4.6096, -5.4977], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9074, device='cuda:0', dtype=torch.float64)
tensor([-2.1570, -3.3980, -3.9719, -4.6071, -5.4943], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9055, device='cuda:0', dtype=torch.float64)
tensor([-2.1563, -3.3961, -3.9677, -4.6064, -5.4915], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9023, device='cuda:0', dtype=torch.float64)
tensor([-2.1547, -3.3937, -3.9650, -4.6067, -5.4882], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8922, device='cuda:0', dtype=torch.float64)
tensor([-2.1523, -3.3903, -3.9633, -4.6073, -5.4840], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8854, device='cuda:0', dtype=torch.float64)
tensor([-2.1497, -3.3862, -3.9615, -4.6069, -5.4785], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8862, device='cuda:0', dtype=torch.float64)
tensor([-2.1475, -3.3815, -3.9598, -4.6050, -5.4720], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8771, device='cuda:0', dtype=torch.float64)
tensor([-2.1462, -3.3772, -3.9583, -4.6014, -5.4648], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8773, device='cuda:0', dtype=torch.float64)
tensor([-2.1459, -3.3739, -3.9571, -4.5967, -5.4575], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8777, device='cuda:0', dtype=torch.float64)
tensor([-2.1463, -3.3718, -3.9562, -4.5917, -5.4513], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8758, device='cuda:0', dtype=torch.float64)
tensor([-2.1468, -3.3704, -3.9552, -4.5876, -5.4467], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8643, device='cuda:0', dtype=torch.float64)
tensor([-2.1474, -3.3694, -3.9540, -4.5844, -5.4432], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8661, device='cuda:0', dtype=torch.float64)
tensor([-2.1473, -3.3678, -3.9526, -4.5828, -5.4407], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8633, device='cuda:0', dtype=torch.float64)
tensor([-2.1466, -3.3658, -3.9502, -4.5820, -5.4384], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8630, device='cuda:0', dtype=torch.float64)
tensor([-2.1458, -3.3641, -3.9467, -4.5814, -5.4358], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8590, device='cuda:0', dtype=torch.float64)
tensor([-2.1450, -3.3630, -3.9420, -4.5801, -5.4325], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8548, device='cuda:0', dtype=torch.float64)
tensor([-2.1446, -3.3620, -3.9365, -4.5773, -5.4289], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8572, device='cuda:0', dtype=torch.float64)
tensor([-2.1443, -3.3611, -3.9318, -4.5733, -5.4246], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8612, device='cuda:0', dtype=torch.float64)
tensor([-2.1440, -3.3598, -3.9287, -4.5686, -5.4199], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8602, device='cuda:0', dtype=torch.float64)
tensor([-2.1433, -3.3581, -3.9268, -4.5638, -5.4144], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8526, device='cuda:0', dtype=torch.float64)
tensor([-2.1419, -3.3560, -3.9258, -4.5602, -5.4084], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8523, device='cuda:0', dtype=torch.float64)
tensor([-2.1402, -3.3536, -3.9247, -4.5577, -5.4022], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8547, device='cuda:0', dtype=torch.float64)
tensor([-2.1386, -3.3516, -3.9225, -4.5559, -5.3961], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8489, device='cuda:0', dtype=torch.float64)
tensor([-2.1375, -3.3498, -3.9198, -4.5539, -5.3912], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8571, device='cuda:0', dtype=torch.float64)
tensor([-2.1366, -3.3483, -3.9175, -4.5516, -5.3869], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8481, device='cuda:0', dtype=torch.float64)
tensor([-2.1359, -3.3469, -3.9155, -4.5496, -5.3832], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8498, device='cuda:0', dtype=torch.float64)
tensor([-2.1349, -3.3449, -3.9139, -4.5481, -5.3796], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8502, device='cuda:0', dtype=torch.float64)
tensor([-2.1337, -3.3425, -3.9115, -4.5471, -5.3753], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8457, device='cuda:0', dtype=torch.float64)
tensor([-2.1325, -3.3403, -3.9079, -4.5458, -5.3701], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8508, device='cuda:0', dtype=torch.float64)
tensor([-2.1315, -3.3388, -3.9037, -4.5439, -5.3643], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8519, device='cuda:0', dtype=torch.float64)
tensor([-2.1311, -3.3377, -3.8990, -4.5405, -5.3589], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8541, device='cuda:0', dtype=torch.float64)
tensor([-2.1311, -3.3367, -3.8950, -4.5361, -5.3540], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8534, device='cuda:0', dtype=torch.float64)
tensor([-2.1311, -3.3357, -3.8923, -4.5319, -5.3487], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8637, device='cuda:0', dtype=torch.float64)
tensor([-2.1308, -3.3344, -3.8904, -4.5284, -5.3434], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8651, device='cuda:0', dtype=torch.float64)
tensor([-2.1301, -3.3330, -3.8888, -4.5260, -5.3381], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8734, device='cuda:0', dtype=torch.float64)
tensor([-2.1294, -3.3316, -3.8869, -4.5239, -5.3326], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8814, device='cuda:0', dtype=torch.float64)
tensor([-2.1288, -3.3302, -3.8846, -4.5216, -5.3275], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8722, device='cuda:0', dtype=torch.float64)
tensor([-2.1283, -3.3291, -3.8820, -4.5196, -5.3226], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8669, device='cuda:0', dtype=torch.float64)
tensor([-2.1278, -3.3279, -3.8798, -4.5176, -5.3175], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8553, device='cuda:0', dtype=torch.float64)
tensor([-2.1271, -3.3268, -3.8781, -4.5161, -5.3127], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8549, device='cuda:0', dtype=torch.float64)
tensor([-2.1265, -3.3253, -3.8763, -4.5143, -5.3077], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8605, device='cuda:0', dtype=torch.float64)
tensor([-2.1256, -3.3233, -3.8748, -4.5124, -5.3027], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8471, device='cuda:0', dtype=torch.float64)
tensor([-2.1247, -3.3211, -3.8734, -4.5108, -5.2981], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8493, device='cuda:0', dtype=torch.float64)
tensor([-2.1237, -3.3188, -3.8721, -4.5090, -5.2937], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8466, device='cuda:0', dtype=torch.float64)
tensor([-2.1229, -3.3163, -3.8707, -4.5071, -5.2894], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8521, device='cuda:0', dtype=torch.float64)
tensor([-2.1222, -3.3142, -3.8689, -4.5049, -5.2850], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8408, device='cuda:0', dtype=torch.float64)
tensor([-2.1220, -3.3120, -3.8667, -4.5027, -5.2800], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8370, device='cuda:0', dtype=torch.float64)
tensor([-2.1221, -3.3102, -3.8637, -4.5000, -5.2750], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8356, device='cuda:0', dtype=torch.float64)
tensor([-2.1222, -3.3087, -3.8606, -4.4967, -5.2706], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8232, device='cuda:0', dtype=torch.float64)
tensor([-2.1218, -3.3071, -3.8577, -4.4936, -5.2669], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8215, device='cuda:0', dtype=torch.float64)
tensor([-2.1210, -3.3053, -3.8553, -4.4910, -5.2633], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8189, device='cuda:0', dtype=torch.float64)
tensor([-2.1202, -3.3039, -3.8533, -4.4883, -5.2597], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8136, device='cuda:0', dtype=torch.float64)
tensor([-2.1191, -3.3022, -3.8516, -4.4856, -5.2561], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8138, device='cuda:0', dtype=torch.float64)
tensor([-2.1181, -3.3002, -3.8499, -4.4830, -5.2526], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8061, device='cuda:0', dtype=torch.float64)
tensor([-2.1170, -3.2980, -3.8481, -4.4816, -5.2488], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7996, device='cuda:0', dtype=torch.float64)
tensor([-2.1160, -3.2957, -3.8454, -4.4804, -5.2454], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8006, device='cuda:0', dtype=torch.float64)
tensor([-2.1154, -3.2934, -3.8420, -4.4791, -5.2420], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8029, device='cuda:0', dtype=torch.float64)
tensor([-2.1147, -3.2910, -3.8389, -4.4776, -5.2387], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8009, device='cuda:0', dtype=torch.float64)
tensor([-2.1142, -3.2886, -3.8358, -4.4752, -5.2354], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7989, device='cuda:0', dtype=torch.float64)
tensor([-2.1137, -3.2867, -3.8335, -4.4729, -5.2319], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8048, device='cuda:0', dtype=torch.float64)
tensor([-2.1135, -3.2855, -3.8312, -4.4699, -5.2281], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7896, device='cuda:0', dtype=torch.float64)
tensor([-2.1128, -3.2848, -3.8290, -4.4670, -5.2241], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7906, device='cuda:0', dtype=torch.float64)
tensor([-2.1120, -3.2846, -3.8269, -4.4639, -5.2194], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7911, device='cuda:0', dtype=torch.float64)
tensor([-2.1114, -3.2842, -3.8250, -4.4609, -5.2148], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7880, device='cuda:0', dtype=torch.float64)
tensor([-2.1108, -3.2832, -3.8230, -4.4590, -5.2109], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7821, device='cuda:0', dtype=torch.float64)
tensor([-2.1101, -3.2817, -3.8215, -4.4583, -5.2073], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7882, device='cuda:0', dtype=torch.float64)
tensor([-2.1090, -3.2788, -3.8204, -4.4590, -5.2033], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7846, device='cuda:0', dtype=torch.float64)
tensor([-2.1079, -3.2749, -3.8192, -4.4587, -5.1989], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7985, device='cuda:0', dtype=torch.float64)
tensor([-2.1070, -3.2715, -3.8175, -4.4566, -5.1939], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7810, device='cuda:0', dtype=torch.float64)
tensor([-2.1062, -3.2690, -3.8149, -4.4529, -5.1885], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7809, device='cuda:0', dtype=torch.float64)
tensor([-2.1051, -3.2674, -3.8117, -4.4488, -5.1830], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7776, device='cuda:0', dtype=torch.float64)
tensor([-2.1039, -3.2660, -3.8086, -4.4452, -5.1772], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7793, device='cuda:0', dtype=torch.float64)
tensor([-2.1027, -3.2648, -3.8059, -4.4417, -5.1719], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7832, device='cuda:0', dtype=torch.float64)
tensor([-2.1018, -3.2638, -3.8038, -4.4372, -5.1680], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7776, device='cuda:0', dtype=torch.float64)
tensor([-2.1011, -3.2631, -3.8022, -4.4335, -5.1639], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7728, device='cuda:0', dtype=torch.float64)
tensor([-2.1010, -3.2624, -3.8004, -4.4305, -5.1596], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7651, device='cuda:0', dtype=torch.float64)
tensor([-2.1014, -3.2614, -3.7981, -4.4284, -5.1543], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7799, device='cuda:0', dtype=torch.float64)
tensor([-2.1022, -3.2605, -3.7959, -4.4263, -5.1490], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7745, device='cuda:0', dtype=torch.float64)
tensor([-2.1032, -3.2592, -3.7933, -4.4226, -5.1440], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7659, device='cuda:0', dtype=torch.float64)
tensor([-2.1035, -3.2571, -3.7908, -4.4198, -5.1390], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7609, device='cuda:0', dtype=torch.float64)
tensor([-2.1029, -3.2552, -3.7887, -4.4177, -5.1350], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7639, device='cuda:0', dtype=torch.float64)
tensor([-2.1019, -3.2536, -3.7870, -4.4155, -5.1321], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7649, device='cuda:0', dtype=torch.float64)
tensor([-2.1002, -3.2520, -3.7862, -4.4133, -5.1288], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7601, device='cuda:0', dtype=torch.float64)
tensor([-2.0980, -3.2509, -3.7855, -4.4122, -5.1246], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7598, device='cuda:0', dtype=torch.float64)
tensor([-2.0960, -3.2498, -3.7839, -4.4109, -5.1197], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7685, device='cuda:0', dtype=torch.float64)
tensor([-2.0943, -3.2480, -3.7820, -4.4103, -5.1142], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7683, device='cuda:0', dtype=torch.float64)
tensor([-2.0928, -3.2451, -3.7806, -4.4098, -5.1087], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7573, device='cuda:0', dtype=torch.float64)
tensor([-2.0921, -3.2428, -3.7793, -4.4082, -5.1046], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7680, device='cuda:0', dtype=torch.float64)
tensor([-2.0923, -3.2413, -3.7779, -4.4049, -5.1012], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7651, device='cuda:0', dtype=torch.float64)
tensor([-2.0929, -3.2403, -3.7754, -4.4005, -5.0977], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7541, device='cuda:0', dtype=torch.float64)
tensor([-2.0937, -3.2393, -3.7721, -4.3969, -5.0938], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7560, device='cuda:0', dtype=torch.float64)
tensor([-2.0938, -3.2388, -3.7689, -4.3949, -5.0890], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7535, device='cuda:0', dtype=torch.float64)
tensor([-2.0941, -3.2381, -3.7657, -4.3934, -5.0832], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7578, device='cuda:0', dtype=torch.float64)
tensor([-2.0941, -3.2375, -3.7639, -4.3912, -5.0769], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7595, device='cuda:0', dtype=torch.float64)
tensor([-2.0938, -3.2369, -3.7635, -4.3882, -5.0720], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7470, device='cuda:0', dtype=torch.float64)
tensor([-2.0931, -3.2356, -3.7629, -4.3849, -5.0675], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7484, device='cuda:0', dtype=torch.float64)
tensor([-2.0914, -3.2333, -3.7619, -4.3827, -5.0633], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7561, device='cuda:0', dtype=torch.float64)
tensor([-2.0896, -3.2309, -3.7597, -4.3809, -5.0592], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7444, device='cuda:0', dtype=torch.float64)
tensor([-2.0883, -3.2287, -3.7565, -4.3790, -5.0554], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7571, device='cuda:0', dtype=torch.float64)
tensor([-2.0877, -3.2262, -3.7537, -4.3766, -5.0514], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7524, device='cuda:0', dtype=torch.float64)
tensor([-2.0874, -3.2246, -3.7531, -4.3745, -5.0467], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7529, device='cuda:0', dtype=torch.float64)
tensor([-2.0870, -3.2224, -3.7548, -4.3731, -5.0422], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7360, device='cuda:0', dtype=torch.float64)
tensor([-2.0864, -3.2209, -3.7553, -4.3717, -5.0383], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7426, device='cuda:0', dtype=torch.float64)
tensor([-2.0850, -3.2195, -3.7540, -4.3710, -5.0349], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7542, device='cuda:0', dtype=torch.float64)
tensor([-2.0838, -3.2177, -3.7503, -4.3692, -5.0308], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7594, device='cuda:0', dtype=torch.float64)
tensor([-2.0826, -3.2160, -3.7456, -4.3666, -5.0264], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7477, device='cuda:0', dtype=torch.float64)
tensor([-2.0814, -3.2142, -3.7412, -4.3638, -5.0218], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7405, device='cuda:0', dtype=torch.float64)
tensor([-2.0808, -3.2133, -3.7387, -4.3614, -5.0170], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7382, device='cuda:0', dtype=torch.float64)
tensor([-2.0812, -3.2128, -3.7365, -4.3579, -5.0122], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7351, device='cuda:0', dtype=torch.float64)
tensor([-2.0820, -3.2133, -3.7348, -4.3541, -5.0075], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7359, device='cuda:0', dtype=torch.float64)
tensor([-2.0830, -3.2136, -3.7333, -4.3509, -5.0024], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7339, device='cuda:0', dtype=torch.float64)
tensor([-2.0828, -3.2120, -3.7311, -4.3478, -4.9976], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7373, device='cuda:0', dtype=torch.float64)
tensor([-2.0817, -3.2091, -3.7292, -4.3460, -4.9927], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7365, device='cuda:0', dtype=torch.float64)
tensor([-2.0799, -3.2065, -3.7284, -4.3450, -4.9874], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7384, device='cuda:0', dtype=torch.float64)
tensor([-2.0782, -3.2052, -3.7280, -4.3439, -4.9820], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7451, device='cuda:0', dtype=torch.float64)
tensor([-2.0771, -3.2043, -3.7274, -4.3422, -4.9762], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7417, device='cuda:0', dtype=torch.float64)
tensor([-2.0762, -3.2028, -3.7260, -4.3408, -4.9702], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7344, device='cuda:0', dtype=torch.float64)
tensor([-2.0757, -3.2001, -3.7239, -4.3388, -4.9651], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7228, device='cuda:0', dtype=torch.float64)
tensor([-2.0754, -3.1975, -3.7213, -4.3361, -4.9619], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7207, device='cuda:0', dtype=torch.float64)
tensor([-2.0754, -3.1964, -3.7186, -4.3335, -4.9605], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7270, device='cuda:0', dtype=torch.float64)
tensor([-2.0753, -3.1960, -3.7160, -4.3307, -4.9578], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7403, device='cuda:0', dtype=torch.float64)
tensor([-2.0753, -3.1954, -3.7136, -4.3285, -4.9531], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7429, device='cuda:0', dtype=torch.float64)
tensor([-2.0750, -3.1949, -3.7113, -4.3257, -4.9465], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7503, device='cuda:0', dtype=torch.float64)
tensor([-2.0750, -3.1938, -3.7098, -4.3218, -4.9406], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7286, device='cuda:0', dtype=torch.float64)
tensor([-2.0757, -3.1930, -3.7073, -4.3174, -4.9362], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7414, device='cuda:0', dtype=torch.float64)
tensor([-2.0755, -3.1916, -3.7046, -4.3149, -4.9332], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7293, device='cuda:0', dtype=torch.float64)
tensor([-2.0747, -3.1897, -3.7027, -4.3139, -4.9311], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7392, device='cuda:0', dtype=torch.float64)
tensor([-2.0732, -3.1876, -3.7019, -4.3133, -4.9278], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7333, device='cuda:0', dtype=torch.float64)
tensor([-2.0720, -3.1862, -3.7019, -4.3125, -4.9235], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7369, device='cuda:0', dtype=torch.float64)
tensor([-2.0713, -3.1844, -3.7024, -4.3104, -4.9187], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7259, device='cuda:0', dtype=torch.float64)
tensor([-2.0707, -3.1830, -3.7008, -4.3076, -4.9132], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7130, device='cuda:0', dtype=torch.float64)
tensor([-2.0702, -3.1826, -3.6974, -4.3043, -4.9073], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7187, device='cuda:0', dtype=torch.float64)
tensor([-2.0695, -3.1819, -3.6931, -4.3006, -4.9039], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7296, device='cuda:0', dtype=torch.float64)
tensor([-2.0683, -3.1800, -3.6910, -4.2981, -4.9002], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7202, device='cuda:0', dtype=torch.float64)
tensor([-2.0665, -3.1776, -3.6900, -4.2970, -4.8977], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7042, device='cuda:0', dtype=torch.float64)
tensor([-2.0647, -3.1751, -3.6899, -4.2974, -4.8937], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7173, device='cuda:0', dtype=torch.float64)
tensor([-2.0637, -3.1729, -3.6892, -4.2976, -4.8890], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7129, device='cuda:0', dtype=torch.float64)
tensor([-2.0636, -3.1713, -3.6879, -4.2958, -4.8844], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7091, device='cuda:0', dtype=torch.float64)
tensor([-2.0640, -3.1699, -3.6860, -4.2925, -4.8804], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7115, device='cuda:0', dtype=torch.float64)
tensor([-2.0645, -3.1691, -3.6845, -4.2884, -4.8766], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7100, device='cuda:0', dtype=torch.float64)
tensor([-2.0650, -3.1686, -3.6821, -4.2835, -4.8728], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7010, device='cuda:0', dtype=torch.float64)
tensor([-2.0652, -3.1684, -3.6797, -4.2798, -4.8685], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6971, device='cuda:0', dtype=torch.float64)
tensor([-2.0648, -3.1683, -3.6761, -4.2769, -4.8629], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7050, device='cuda:0', dtype=torch.float64)
tensor([-2.0642, -3.1682, -3.6718, -4.2750, -4.8575], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7100, device='cuda:0', dtype=torch.float64)
tensor([-2.0635, -3.1666, -3.6681, -4.2738, -4.8527], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6952, device='cuda:0', dtype=torch.float64)
tensor([-2.0623, -3.1648, -3.6666, -4.2744, -4.8479], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7069, device='cuda:0', dtype=torch.float64)
tensor([-2.0608, -3.1624, -3.6668, -4.2752, -4.8431], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7065, device='cuda:0', dtype=torch.float64)
tensor([-2.0595, -3.1593, -3.6683, -4.2741, -4.8382], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6941, device='cuda:0', dtype=torch.float64)
tensor([-2.0585, -3.1575, -3.6692, -4.2722, -4.8344], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6997, device='cuda:0', dtype=torch.float64)
tensor([-2.0576, -3.1558, -3.6699, -4.2696, -4.8307], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7009, device='cuda:0', dtype=torch.float64)
tensor([-2.0568, -3.1544, -3.6692, -4.2674, -4.8270], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6977, device='cuda:0', dtype=torch.float64)
tensor([-2.0561, -3.1530, -3.6658, -4.2654, -4.8237], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6934, device='cuda:0', dtype=torch.float64)
tensor([-2.0560, -3.1524, -3.6603, -4.2642, -4.8205], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6908, device='cuda:0', dtype=torch.float64)
tensor([-2.0553, -3.1529, -3.6551, -4.2641, -4.8166], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6911, device='cuda:0', dtype=torch.float64)
tensor([-2.0552, -3.1536, -3.6510, -4.2625, -4.8119], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6889, device='cuda:0', dtype=torch.float64)
tensor([-2.0553, -3.1539, -3.6480, -4.2587, -4.8083], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6892, device='cuda:0', dtype=torch.float64)
tensor([-2.0547, -3.1526, -3.6470, -4.2555, -4.8039], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6942, device='cuda:0', dtype=torch.float64)
tensor([-2.0533, -3.1494, -3.6475, -4.2522, -4.7993], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7000, device='cuda:0', dtype=torch.float64)
tensor([-2.0523, -3.1462, -3.6481, -4.2482, -4.7949], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6881, device='cuda:0', dtype=torch.float64)
tensor([-2.0523, -3.1443, -3.6475, -4.2438, -4.7904], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6843, device='cuda:0', dtype=torch.float64)
tensor([-2.0526, -3.1436, -3.6471, -4.2414, -4.7860], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6876, device='cuda:0', dtype=torch.float64)
tensor([-2.0526, -3.1429, -3.6456, -4.2410, -4.7819], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6872, device='cuda:0', dtype=torch.float64)
tensor([-2.0525, -3.1421, -3.6427, -4.2395, -4.7783], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7048, device='cuda:0', dtype=torch.float64)
tensor([-2.0516, -3.1414, -3.6388, -4.2382, -4.7748], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6913, device='cuda:0', dtype=torch.float64)
tensor([-2.0503, -3.1406, -3.6357, -4.2358, -4.7711], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6964, device='cuda:0', dtype=torch.float64)
tensor([-2.0488, -3.1402, -3.6339, -4.2341, -4.7671], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6831, device='cuda:0', dtype=torch.float64)
tensor([-2.0477, -3.1403, -3.6321, -4.2321, -4.7635], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7106, device='cuda:0', dtype=torch.float64)
tensor([-2.0469, -3.1396, -3.6312, -4.2287, -4.7604], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6778, device='cuda:0', dtype=torch.float64)
tensor([-2.0464, -3.1376, -3.6305, -4.2268, -4.7561], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6962, device='cuda:0', dtype=torch.float64)
tensor([-2.0456, -3.1342, -3.6309, -4.2282, -4.7503], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6707, device='cuda:0', dtype=torch.float64)
tensor([-2.0451, -3.1320, -3.6292, -4.2275, -4.7451], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6692, device='cuda:0', dtype=torch.float64)
tensor([-2.0458, -3.1306, -3.6258, -4.2234, -4.7408], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6933, device='cuda:0', dtype=torch.float64)
tensor([-2.0456, -3.1307, -3.6234, -4.2163, -4.7374], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6764, device='cuda:0', dtype=torch.float64)
tensor([-2.0444, -3.1312, -3.6210, -4.2130, -4.7322], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6784, device='cuda:0', dtype=torch.float64)
tensor([-2.0430, -3.1306, -3.6189, -4.2137, -4.7264], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6816, device='cuda:0', dtype=torch.float64)
tensor([-2.0414, -3.1288, -3.6180, -4.2147, -4.7207], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6813, device='cuda:0', dtype=torch.float64)
tensor([-2.0409, -3.1268, -3.6170, -4.2146, -4.7168], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6900, device='cuda:0', dtype=torch.float64)
tensor([-2.0420, -3.1266, -3.6149, -4.2116, -4.7153], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6711, device='cuda:0', dtype=torch.float64)
tensor([-2.0431, -3.1253, -3.6125, -4.2088, -4.7150], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6626, device='cuda:0', dtype=torch.float64)
tensor([-2.0437, -3.1236, -3.6096, -4.2072, -4.7133], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6796, device='cuda:0', dtype=torch.float64)
tensor([-2.0437, -3.1216, -3.6085, -4.2052, -4.7092], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6742, device='cuda:0', dtype=torch.float64)
tensor([-2.0437, -3.1203, -3.6076, -4.2013, -4.7051], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6684, device='cuda:0', dtype=torch.float64)
tensor([-2.0434, -3.1189, -3.6055, -4.1973, -4.7009], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6766, device='cuda:0', dtype=torch.float64)
tensor([-2.0419, -3.1177, -3.6035, -4.1943, -4.6971], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6611, device='cuda:0', dtype=torch.float64)
tensor([-2.0405, -3.1168, -3.6011, -4.1915, -4.6932], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6924, device='cuda:0', dtype=torch.float64)
tensor([-2.0396, -3.1156, -3.6000, -4.1902, -4.6858], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6762, device='cuda:0', dtype=torch.float64)
tensor([-2.0382, -3.1147, -3.5997, -4.1909, -4.6778], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6611, device='cuda:0', dtype=torch.float64)
tensor([-2.0381, -3.1141, -3.5985, -4.1904, -4.6708], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6806, device='cuda:0', dtype=torch.float64)
tensor([-2.0393, -3.1150, -3.5947, -4.1879, -4.6659], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6659, device='cuda:0', dtype=torch.float64)
tensor([-2.0404, -3.1148, -3.5898, -4.1830, -4.6639], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6929, device='cuda:0', dtype=torch.float64)
tensor([-2.0397, -3.1127, -3.5872, -4.1807, -4.6621], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6827, device='cuda:0', dtype=torch.float64)
tensor([-2.0379, -3.1098, -3.5873, -4.1798, -4.6588], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6714, device='cuda:0', dtype=torch.float64)
tensor([-2.0360, -3.1085, -3.5879, -4.1793, -4.6535], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6785, device='cuda:0', dtype=torch.float64)
tensor([-2.0357, -3.1094, -3.5853, -4.1749, -4.6474], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6711, device='cuda:0', dtype=torch.float64)
tensor([-2.0360, -3.1108, -3.5805, -4.1694, -4.6425], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6918, device='cuda:0', dtype=torch.float64)
tensor([-2.0344, -3.1089, -3.5792, -4.1682, -4.6382], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6701, device='cuda:0', dtype=torch.float64)
tensor([-2.0315, -3.1045, -3.5792, -4.1706, -4.6358], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6519, device='cuda:0', dtype=torch.float64)
tensor([-2.0295, -3.1008, -3.5791, -4.1717, -4.6358], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6696, device='cuda:0', dtype=torch.float64)
tensor([-2.0291, -3.0999, -3.5780, -4.1703, -4.6372], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6716, device='cuda:0', dtype=torch.float64)
tensor([-2.0297, -3.1010, -3.5770, -4.1674, -4.6357], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6700, device='cuda:0', dtype=torch.float64)
tensor([-2.0307, -3.1016, -3.5768, -4.1636, -4.6309], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6802, device='cuda:0', dtype=torch.float64)
tensor([-2.0307, -3.0990, -3.5761, -4.1631, -4.6243], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6949, device='cuda:0', dtype=torch.float64)
tensor([-2.0304, -3.0959, -3.5752, -4.1611, -4.6194], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6776, device='cuda:0', dtype=torch.float64)
tensor([-2.0308, -3.0934, -3.5723, -4.1574, -4.6182], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6684, device='cuda:0', dtype=torch.float64)
tensor([-2.0317, -3.0935, -3.5677, -4.1528, -4.6142], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6797, device='cuda:0', dtype=torch.float64)
tensor([-2.0316, -3.0948, -3.5631, -4.1487, -4.6066], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6517, device='cuda:0', dtype=torch.float64)
tensor([-2.0315, -3.0954, -3.5593, -4.1459, -4.6001], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7180, device='cuda:0', dtype=torch.float64)
tensor([-2.0313, -3.0951, -3.5569, -4.1416, -4.5955], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6573, device='cuda:0', dtype=torch.float64)
tensor([-2.0310, -3.0948, -3.5554, -4.1398, -4.5927], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6992, device='cuda:0', dtype=torch.float64)
tensor([-2.0311, -3.0932, -3.5550, -4.1394, -4.5890], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6503, device='cuda:0', dtype=torch.float64)
tensor([-2.0302, -3.0902, -3.5549, -4.1401, -4.5861], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7079, device='cuda:0', dtype=torch.float64)
tensor([-2.0295, -3.0878, -3.5548, -4.1373, -4.5834], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6445, device='cuda:0', dtype=torch.float64)
tensor([-2.0286, -3.0877, -3.5530, -4.1334, -4.5804], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6780, device='cuda:0', dtype=torch.float64)
tensor([-2.0265, -3.0878, -3.5495, -4.1318, -4.5789], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6735, device='cuda:0', dtype=torch.float64)
tensor([-2.0238, -3.0868, -3.5499, -4.1345, -4.5772], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7005, device='cuda:0', dtype=torch.float64)
tensor([-2.0218, -3.0844, -3.5524, -4.1360, -4.5739], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6696, device='cuda:0', dtype=torch.float64)
tensor([-2.0227, -3.0830, -3.5530, -4.1327, -4.5672], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6727, device='cuda:0', dtype=torch.float64)
tensor([-2.0236, -3.0824, -3.5532, -4.1296, -4.5574], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6398, device='cuda:0', dtype=torch.float64)
tensor([-2.0237, -3.0814, -3.5539, -4.1260, -4.5484], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6675, device='cuda:0', dtype=torch.float64)
tensor([-2.0244, -3.0795, -3.5523, -4.1224, -4.5443], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6715, device='cuda:0', dtype=torch.float64)
tensor([-2.0242, -3.0760, -3.5512, -4.1232, -4.5442], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6554, device='cuda:0', dtype=torch.float64)
tensor([-2.0233, -3.0740, -3.5495, -4.1245, -4.5446], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6620, device='cuda:0', dtype=torch.float64)
tensor([-2.0232, -3.0754, -3.5444, -4.1231, -4.5420], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6611, device='cuda:0', dtype=torch.float64)
tensor([-2.0242, -3.0772, -3.5395, -4.1186, -4.5389], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6564, device='cuda:0', dtype=torch.float64)
tensor([-2.0249, -3.0782, -3.5369, -4.1162, -4.5349], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6570, device='cuda:0', dtype=torch.float64)
tensor([-2.0252, -3.0765, -3.5382, -4.1152, -4.5308], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6615, device='cuda:0', dtype=torch.float64)
tensor([-2.0233, -3.0741, -3.5400, -4.1142, -4.5278], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6446, device='cuda:0', dtype=torch.float64)
tensor([-2.0218, -3.0710, -3.5388, -4.1114, -4.5259], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6401, device='cuda:0', dtype=torch.float64)
tensor([-2.0213, -3.0689, -3.5354, -4.1069, -4.5239], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6676, device='cuda:0', dtype=torch.float64)
tensor([-2.0206, -3.0670, -3.5324, -4.1018, -4.5192], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6711, device='cuda:0', dtype=torch.float64)
tensor([-2.0203, -3.0656, -3.5288, -4.0987, -4.5127], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6651, device='cuda:0', dtype=torch.float64)
tensor([-2.0188, -3.0631, -3.5251, -4.1004, -4.5057], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6497, device='cuda:0', dtype=torch.float64)
tensor([-2.0182, -3.0623, -3.5209, -4.1009, -4.5019], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6608, device='cuda:0', dtype=torch.float64)
tensor([-2.0181, -3.0614, -3.5184, -4.1017, -4.4979], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6497, device='cuda:0', dtype=torch.float64)
tensor([-2.0185, -3.0604, -3.5197, -4.0969, -4.4947], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6330, device='cuda:0', dtype=torch.float64)
tensor([-2.0193, -3.0603, -3.5215, -4.0908, -4.4909], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6518, device='cuda:0', dtype=torch.float64)
tensor([-2.0208, -3.0611, -3.5214, -4.0867, -4.4899], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6527, device='cuda:0', dtype=torch.float64)
tensor([-2.0213, -3.0608, -3.5196, -4.0861, -4.4876], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6935, device='cuda:0', dtype=torch.float64)
tensor([-2.0200, -3.0586, -3.5194, -4.0869, -4.4832], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6394, device='cuda:0', dtype=torch.float64)
tensor([-2.0182, -3.0554, -3.5181, -4.0876, -4.4780], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6346, device='cuda:0', dtype=torch.float64)
tensor([-2.0164, -3.0543, -3.5160, -4.0870, -4.4734], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6754, device='cuda:0', dtype=torch.float64)
tensor([-2.0149, -3.0538, -3.5146, -4.0861, -4.4692], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6399, device='cuda:0', dtype=torch.float64)
tensor([-2.0125, -3.0527, -3.5133, -4.0844, -4.4666], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6444, device='cuda:0', dtype=torch.float64)
tensor([-2.0103, -3.0515, -3.5110, -4.0825, -4.4655], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6490, device='cuda:0', dtype=torch.float64)
tensor([-2.0086, -3.0505, -3.5097, -4.0778, -4.4635], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6641, device='cuda:0', dtype=torch.float64)
tensor([-2.0075, -3.0505, -3.5084, -4.0751, -4.4608], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6458, device='cuda:0', dtype=torch.float64)
tensor([-2.0083, -3.0517, -3.5065, -4.0704, -4.4565], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6887, device='cuda:0', dtype=torch.float64)
tensor([-2.0096, -3.0526, -3.5047, -4.0652, -4.4526], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6549, device='cuda:0', dtype=torch.float64)
tensor([-2.0090, -3.0518, -3.5043, -4.0641, -4.4497], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6443, device='cuda:0', dtype=torch.float64)
tensor([-2.0087, -3.0494, -3.5041, -4.0643, -4.4475], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6409, device='cuda:0', dtype=torch.float64)
tensor([-2.0106, -3.0480, -3.5039, -4.0596, -4.4458], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6420, device='cuda:0', dtype=torch.float64)
tensor([-2.0111, -3.0458, -3.5058, -4.0536, -4.4449], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6664, device='cuda:0', dtype=torch.float64)
tensor([-2.0110, -3.0440, -3.5041, -4.0511, -4.4438], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6760, device='cuda:0', dtype=torch.float64)
tensor([-2.0099, -3.0430, -3.4988, -4.0520, -4.4406], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6501, device='cuda:0', dtype=torch.float64)
tensor([-2.0077, -3.0436, -3.4924, -4.0537, -4.4342], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6236, device='cuda:0', dtype=torch.float64)
tensor([-2.0065, -3.0457, -3.4897, -4.0520, -4.4283], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6815, device='cuda:0', dtype=torch.float64)
tensor([-2.0058, -3.0484, -3.4887, -4.0500, -4.4229], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6061, device='cuda:0', dtype=torch.float64)
tensor([-2.0060, -3.0488, -3.4873, -4.0470, -4.4194], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6585, device='cuda:0', dtype=torch.float64)
tensor([-2.0065, -3.0462, -3.4857, -4.0423, -4.4177], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6597, device='cuda:0', dtype=torch.float64)
tensor([-2.0055, -3.0419, -3.4855, -4.0412, -4.4152], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6774, device='cuda:0', dtype=torch.float64)
tensor([-2.0048, -3.0392, -3.4858, -4.0447, -4.4127], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6336, device='cuda:0', dtype=torch.float64)
tensor([-2.0046, -3.0386, -3.4867, -4.0472, -4.4103], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7164, device='cuda:0', dtype=torch.float64)
tensor([-2.0061, -3.0388, -3.4839, -4.0442, -4.4082], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6281, device='cuda:0', dtype=torch.float64)
tensor([-2.0067, -3.0370, -3.4776, -4.0402, -4.4036], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7037, device='cuda:0', dtype=torch.float64)
tensor([-2.0058, -3.0339, -3.4769, -4.0390, -4.3978], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6215, device='cuda:0', dtype=torch.float64)
tensor([-2.0043, -3.0315, -3.4761, -4.0367, -4.3940], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6634, device='cuda:0', dtype=torch.float64)
tensor([-2.0026, -3.0300, -3.4764, -4.0327, -4.3918], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6598, device='cuda:0', dtype=torch.float64)
tensor([-2.0007, -3.0291, -3.4760, -4.0282, -4.3911], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6601, device='cuda:0', dtype=torch.float64)
tensor([-1.9980, -3.0276, -3.4756, -4.0296, -4.3883], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6441, device='cuda:0', dtype=torch.float64)
tensor([-1.9983, -3.0263, -3.4732, -4.0311, -4.3844], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6759, device='cuda:0', dtype=torch.float64)
tensor([-2.0007, -3.0256, -3.4725, -4.0258, -4.3773], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6440, device='cuda:0', dtype=torch.float64)
tensor([-2.0029, -3.0266, -3.4722, -4.0151, -4.3701], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6596, device='cuda:0', dtype=torch.float64)
tensor([-2.0034, -3.0257, -3.4710, -4.0106, -4.3653], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6721, device='cuda:0', dtype=torch.float64)
tensor([-2.0021, -3.0242, -3.4696, -4.0141, -4.3605], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6897, device='cuda:0', dtype=torch.float64)
tensor([-2.0010, -3.0234, -3.4678, -4.0130, -4.3568], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6646, device='cuda:0', dtype=torch.float64)
tensor([-2.0022, -3.0256, -3.4629, -4.0075, -4.3552], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6148, device='cuda:0', dtype=torch.float64)
tensor([-2.0028, -3.0279, -3.4569, -4.0021, -4.3523], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6897, device='cuda:0', dtype=torch.float64)
tensor([-2.0014, -3.0265, -3.4565, -4.0021, -4.3485], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6941, device='cuda:0', dtype=torch.float64)
tensor([-1.9987, -3.0204, -3.4617, -4.0067, -4.3448], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6487, device='cuda:0', dtype=torch.float64)
tensor([-1.9970, -3.0148, -3.4682, -4.0094, -4.3429], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6527, device='cuda:0', dtype=torch.float64)
tensor([-1.9978, -3.0166, -3.4671, -4.0093, -4.3420], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6272, device='cuda:0', dtype=torch.float64)
tensor([-1.9969, -3.0199, -3.4632, -4.0096, -4.3392], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6824, device='cuda:0', dtype=torch.float64)
tensor([-1.9946, -3.0193, -3.4602, -4.0084, -4.3359], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6685, device='cuda:0', dtype=torch.float64)
tensor([-1.9934, -3.0168, -3.4577, -4.0006, -4.3306], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6353, device='cuda:0', dtype=torch.float64)
tensor([-1.9934, -3.0156, -3.4542, -3.9936, -4.3273], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6514, device='cuda:0', dtype=torch.float64)
tensor([-1.9945, -3.0164, -3.4472, -3.9886, -4.3249], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6409, device='cuda:0', dtype=torch.float64)
tensor([-1.9966, -3.0169, -3.4389, -3.9849, -4.3225], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6827, device='cuda:0', dtype=torch.float64)
tensor([-1.9962, -3.0124, -3.4355, -3.9861, -4.3197], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6217, device='cuda:0', dtype=torch.float64)
tensor([-1.9955, -3.0071, -3.4349, -3.9888, -4.3155], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6413, device='cuda:0', dtype=torch.float64)
tensor([-1.9952, -3.0063, -3.4349, -3.9874, -4.3129], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6421, device='cuda:0', dtype=torch.float64)
tensor([-1.9963, -3.0093, -3.4364, -3.9834, -4.3109], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6848, device='cuda:0', dtype=torch.float64)
tensor([-1.9955, -3.0102, -3.4397, -3.9829, -4.3063], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6875, device='cuda:0', dtype=torch.float64)
tensor([-1.9927, -3.0076, -3.4435, -3.9872, -4.3007], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6461, device='cuda:0', dtype=torch.float64)
tensor([-1.9905, -3.0031, -3.4419, -3.9885, -4.2984], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6569, device='cuda:0', dtype=torch.float64)
tensor([-1.9902, -3.0018, -3.4353, -3.9870, -4.3014], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6312, device='cuda:0', dtype=torch.float64)
tensor([-1.9922, -3.0025, -3.4295, -3.9826, -4.3025], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6503, device='cuda:0', dtype=torch.float64)
tensor([-1.9931, -3.0006, -3.4315, -3.9804, -4.2974], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6466, device='cuda:0', dtype=torch.float64)
tensor([-1.9922, -2.9971, -3.4372, -3.9769, -4.2913], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6662, device='cuda:0', dtype=torch.float64)
tensor([-1.9906, -2.9958, -3.4375, -3.9692, -4.2903], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6395, device='cuda:0', dtype=torch.float64)
tensor([-1.9892, -2.9970, -3.4318, -3.9597, -4.2903], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6695, device='cuda:0', dtype=torch.float64)
tensor([-1.9884, -2.9991, -3.4277, -3.9575, -4.2892], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6837, device='cuda:0', dtype=torch.float64)
tensor([-1.9873, -2.9971, -3.4266, -3.9601, -4.2870], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6619, device='cuda:0', dtype=torch.float64)
tensor([-1.9882, -2.9959, -3.4238, -3.9591, -4.2844], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6244, device='cuda:0', dtype=torch.float64)
tensor([-1.9898, -2.9967, -3.4211, -3.9539, -4.2827], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6210, device='cuda:0', dtype=torch.float64)
tensor([-1.9909, -2.9975, -3.4197, -3.9504, -4.2773], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7209, device='cuda:0', dtype=torch.float64)
tensor([-1.9889, -2.9962, -3.4217, -3.9546, -4.2702], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6345, device='cuda:0', dtype=torch.float64)
tensor([-1.9864, -2.9951, -3.4237, -3.9600, -4.2654], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6311, device='cuda:0', dtype=torch.float64)
tensor([-1.9852, -2.9951, -3.4226, -3.9630, -4.2601], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6658, device='cuda:0', dtype=torch.float64)
tensor([-1.9849, -2.9957, -3.4208, -3.9591, -4.2546], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6188, device='cuda:0', dtype=torch.float64)
tensor([-1.9839, -2.9959, -3.4226, -3.9542, -4.2476], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6466, device='cuda:0', dtype=torch.float64)
tensor([-1.9840, -2.9958, -3.4200, -3.9516, -4.2434], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6256, device='cuda:0', dtype=torch.float64)
tensor([-1.9853, -2.9970, -3.4147, -3.9443, -4.2428], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6709, device='cuda:0', dtype=torch.float64)
tensor([-1.9876, -2.9960, -3.4061, -3.9322, -4.2458], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6712, device='cuda:0', dtype=torch.float64)
tensor([-1.9888, -2.9931, -3.4018, -3.9233, -4.2464], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6351, device='cuda:0', dtype=torch.float64)
tensor([-1.9880, -2.9897, -3.4030, -3.9181, -4.2444], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6497, device='cuda:0', dtype=torch.float64)
tensor([-1.9858, -2.9871, -3.4074, -3.9205, -4.2406], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6518, device='cuda:0', dtype=torch.float64)
tensor([-1.9836, -2.9847, -3.4129, -3.9233, -4.2370], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6455, device='cuda:0', dtype=torch.float64)
tensor([-1.9810, -2.9828, -3.4174, -3.9266, -4.2349], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5899, device='cuda:0', dtype=torch.float64)
tensor([-1.9801, -2.9837, -3.4181, -3.9253, -4.2340], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6421, device='cuda:0', dtype=torch.float64)
tensor([-1.9803, -2.9844, -3.4127, -3.9243, -4.2328], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6000, device='cuda:0', dtype=torch.float64)
tensor([-1.9805, -2.9829, -3.4050, -3.9264, -4.2312], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6510, device='cuda:0', dtype=torch.float64)
tensor([-1.9811, -2.9818, -3.3963, -3.9240, -4.2295], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6180, device='cuda:0', dtype=torch.float64)
tensor([-1.9808, -2.9801, -3.3907, -3.9202, -4.2263], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6566, device='cuda:0', dtype=torch.float64)
tensor([-1.9810, -2.9802, -3.3857, -3.9222, -4.2197], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6403, device='cuda:0', dtype=torch.float64)
tensor([-1.9780, -2.9767, -3.3850, -3.9253, -4.2114], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6709, device='cuda:0', dtype=torch.float64)
tensor([-1.9754, -2.9714, -3.3877, -3.9238, -4.2077], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6200, device='cuda:0', dtype=torch.float64)
tensor([-1.9749, -2.9701, -3.3921, -3.9227, -4.2079], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6650, device='cuda:0', dtype=torch.float64)
tensor([-1.9762, -2.9717, -3.3944, -3.9232, -4.2109], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6572, device='cuda:0', dtype=torch.float64)
tensor([-1.9793, -2.9731, -3.3956, -3.9202, -4.2090], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6731, device='cuda:0', dtype=torch.float64)
tensor([-1.9822, -2.9712, -3.3932, -3.9132, -4.2040], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6699, device='cuda:0', dtype=torch.float64)
tensor([-1.9829, -2.9683, -3.3839, -3.9086, -4.2008], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6413, device='cuda:0', dtype=torch.float64)
tensor([-1.9812, -2.9672, -3.3767, -3.9095, -4.2007], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6375, device='cuda:0', dtype=torch.float64)
tensor([-1.9780, -2.9684, -3.3722, -3.9108, -4.2031], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8052, device='cuda:0', dtype=torch.float64)
tensor([-1.9737, -2.9679, -3.3770, -3.9092, -4.2000], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6999, device='cuda:0', dtype=torch.float64)
tensor([-1.9701, -2.9664, -3.3819, -3.9126, -4.1923], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6683, device='cuda:0', dtype=torch.float64)
tensor([-1.9686, -2.9663, -3.3841, -3.9166, -4.1871], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7958, device='cuda:0', dtype=torch.float64)
tensor([-1.9706, -2.9651, -3.3847, -3.9117, -4.1872], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6326, device='cuda:0', dtype=torch.float64)
tensor([-1.9729, -2.9631, -3.3851, -3.9065, -4.1853], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7316, device='cuda:0', dtype=torch.float64)
tensor([-1.9741, -2.9607, -3.3840, -3.9068, -4.1826], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6043, device='cuda:0', dtype=torch.float64)
tensor([-1.9772, -2.9615, -3.3784, -3.9012, -4.1811], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8140, device='cuda:0', dtype=torch.float64)
tensor([-1.9785, -2.9651, -3.3743, -3.8843, -4.1780], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6571, device='cuda:0', dtype=torch.float64)
tensor([-1.9752, -2.9682, -3.3688, -3.8806, -4.1730], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7015, device='cuda:0', dtype=torch.float64)
tensor([-1.9684, -2.9680, -3.3675, -3.8911, -4.1665], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7028, device='cuda:0', dtype=torch.float64)
tensor([-1.9649, -2.9636, -3.3713, -3.8960, -4.1615], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7232, device='cuda:0', dtype=torch.float64)
tensor([-1.9660, -2.9588, -3.3747, -3.8843, -4.1609], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7726, device='cuda:0', dtype=torch.float64)
tensor([-1.9711, -2.9549, -3.3718, -3.8743, -4.1630], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6570, device='cuda:0', dtype=torch.float64)
tensor([-1.9760, -2.9504, -3.3640, -3.8732, -4.1611], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8066, device='cuda:0', dtype=torch.float64)
tensor([-1.9776, -2.9472, -3.3592, -3.8712, -4.1548], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6127, device='cuda:0', dtype=torch.float64)
tensor([-1.9772, -2.9498, -3.3621, -3.8713, -4.1470], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7954, device='cuda:0', dtype=torch.float64)
tensor([-1.9740, -2.9558, -3.3612, -3.8777, -4.1443], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6336, device='cuda:0', dtype=torch.float64)
tensor([-1.9682, -2.9571, -3.3596, -3.8820, -4.1447], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8972, device='cuda:0', dtype=torch.float64)
tensor([-1.9618, -2.9489, -3.3615, -3.8762, -4.1413], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6718, device='cuda:0', dtype=torch.float64)
tensor([-1.9609, -2.9419, -3.3588, -3.8720, -4.1378], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7140, device='cuda:0', dtype=torch.float64)
tensor([-1.9636, -2.9422, -3.3530, -3.8719, -4.1357], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7571, device='cuda:0', dtype=torch.float64)
tensor([-1.9700, -2.9487, -3.3446, -3.8656, -4.1353], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6617, device='cuda:0', dtype=torch.float64)
tensor([-1.9742, -2.9524, -3.3415, -3.8602, -4.1343], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7282, device='cuda:0', dtype=torch.float64)
tensor([-1.9733, -2.9521, -3.3438, -3.8617, -4.1299], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6022, device='cuda:0', dtype=torch.float64)
tensor([-1.9698, -2.9518, -3.3426, -3.8626, -4.1237], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6974, device='cuda:0', dtype=torch.float64)
tensor([-1.9666, -2.9530, -3.3387, -3.8594, -4.1193], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7112, device='cuda:0', dtype=torch.float64)
tensor([-1.9629, -2.9504, -3.3377, -3.8560, -4.1166], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7009, device='cuda:0', dtype=torch.float64)
tensor([-1.9611, -2.9444, -3.3413, -3.8549, -4.1139], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6285, device='cuda:0', dtype=torch.float64)
tensor([-1.9621, -2.9391, -3.3444, -3.8563, -4.1117], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6332, device='cuda:0', dtype=torch.float64)
tensor([-1.9653, -2.9359, -3.3421, -3.8492, -4.1100], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7081, device='cuda:0', dtype=torch.float64)
tensor([-1.9660, -2.9332, -3.3428, -3.8412, -4.1086], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7162, device='cuda:0', dtype=torch.float64)
tensor([-1.9658, -2.9341, -3.3476, -3.8403, -4.1036], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7816, device='cuda:0', dtype=torch.float64)
tensor([-1.9640, -2.9369, -3.3502, -3.8506, -4.0991], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6999, device='cuda:0', dtype=torch.float64)
tensor([-1.9630, -2.9404, -3.3497, -3.8524, -4.0972], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8291, device='cuda:0', dtype=torch.float64)
tensor([-1.9624, -2.9385, -3.3485, -3.8437, -4.0965], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6469, device='cuda:0', dtype=torch.float64)
tensor([-1.9614, -2.9323, -3.3469, -3.8400, -4.0950], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7889, device='cuda:0', dtype=torch.float64)
tensor([-1.9603, -2.9278, -3.3449, -3.8448, -4.0879], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7912, device='cuda:0', dtype=torch.float64)
tensor([-1.9609, -2.9262, -3.3458, -3.8423, -4.0778], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7352, device='cuda:0', dtype=torch.float64)
tensor([-1.9621, -2.9265, -3.3416, -3.8359, -4.0757], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8093, device='cuda:0', dtype=torch.float64)
tensor([-1.9624, -2.9291, -3.3326, -3.8397, -4.0762], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6422, device='cuda:0', dtype=torch.float64)
tensor([-1.9610, -2.9288, -3.3260, -3.8482, -4.0790], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8389, device='cuda:0', dtype=torch.float64)
tensor([-1.9598, -2.9261, -3.3245, -3.8421, -4.0805], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6576, device='cuda:0', dtype=torch.float64)
tensor([-1.9613, -2.9274, -3.3238, -3.8282, -4.0819], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8008, device='cuda:0', dtype=torch.float64)
tensor([-1.9636, -2.9290, -3.3188, -3.8234, -4.0807], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6189, device='cuda:0', dtype=torch.float64)
tensor([-1.9665, -2.9301, -3.3195, -3.8260, -4.0745], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0104, device='cuda:0', dtype=torch.float64)
tensor([-1.9688, -2.9304, -3.3192, -3.8154, -4.0663], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6951, device='cuda:0', dtype=torch.float64)
tensor([-1.9693, -2.9307, -3.3158, -3.8116, -4.0605], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7813, device='cuda:0', dtype=torch.float64)
tensor([-1.9620, -2.9275, -3.3165, -3.8191, -4.0589], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7562, device='cuda:0', dtype=torch.float64)
tensor([-1.9528, -2.9213, -3.3168, -3.8224, -4.0605], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7733, device='cuda:0', dtype=torch.float64)
tensor([-1.9472, -2.9183, -3.3165, -3.8140, -4.0612], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7967, device='cuda:0', dtype=torch.float64)
tensor([-1.9430, -2.9204, -3.3162, -3.8186, -4.0565], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6524, device='cuda:0', dtype=torch.float64)
tensor([-1.9406, -2.9247, -3.3165, -3.8271, -4.0530], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8716, device='cuda:0', dtype=torch.float64)
tensor([-1.9443, -2.9277, -3.3174, -3.8220, -4.0503], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6565, device='cuda:0', dtype=torch.float64)
tensor([-1.9539, -2.9292, -3.3150, -3.8151, -4.0490], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7964, device='cuda:0', dtype=torch.float64)
tensor([-1.9642, -2.9307, -3.3058, -3.8131, -4.0469], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6443, device='cuda:0', dtype=torch.float64)
tensor([-1.9706, -2.9308, -3.2963, -3.8081, -4.0428], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8933, device='cuda:0', dtype=torch.float64)
tensor([-1.9691, -2.9265, -3.2969, -3.7977, -4.0370], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6384, device='cuda:0', dtype=torch.float64)
tensor([-1.9626, -2.9239, -3.3015, -3.7992, -4.0319], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6528, device='cuda:0', dtype=torch.float64)
tensor([-1.9582, -2.9236, -3.3013, -3.8057, -4.0278], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7905, device='cuda:0', dtype=torch.float64)
tensor([-1.9561, -2.9211, -3.3017, -3.8051, -4.0250], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6816, device='cuda:0', dtype=torch.float64)
tensor([-1.9566, -2.9180, -3.3005, -3.8016, -4.0255], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7177, device='cuda:0', dtype=torch.float64)
tensor([-1.9584, -2.9144, -3.2971, -3.8008, -4.0279], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6078, device='cuda:0', dtype=torch.float64)
tensor([-1.9580, -2.9099, -3.2977, -3.7967, -4.0308], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6850, device='cuda:0', dtype=torch.float64)
tensor([-1.9580, -2.9050, -3.3034, -3.7902, -4.0307], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6461, device='cuda:0', dtype=torch.float64)
tensor([-1.9546, -2.9033, -3.3123, -3.7923, -4.0283], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6576, device='cuda:0', dtype=torch.float64)
tensor([-1.9495, -2.9035, -3.3145, -3.7978, -4.0302], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6727, device='cuda:0', dtype=torch.float64)
tensor([-1.9488, -2.9067, -3.3059, -3.7901, -4.0334], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6634, device='cuda:0', dtype=torch.float64)
tensor([-1.9520, -2.9091, -3.2936, -3.7833, -4.0303], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6394, device='cuda:0', dtype=torch.float64)
tensor([-1.9562, -2.9092, -3.2849, -3.7775, -4.0232], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6731, device='cuda:0', dtype=torch.float64)
tensor([-1.9600, -2.9096, -3.2788, -3.7663, -4.0178], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6771, device='cuda:0', dtype=torch.float64)
tensor([-1.9596, -2.9068, -3.2830, -3.7594, -4.0119], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6931, device='cuda:0', dtype=torch.float64)
tensor([-1.9549, -2.9030, -3.2923, -3.7664, -4.0040], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6122, device='cuda:0', dtype=torch.float64)
tensor([-1.9492, -2.9008, -3.3033, -3.7760, -4.0001], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8236, device='cuda:0', dtype=torch.float64)
tensor([-1.9504, -2.9014, -3.3042, -3.7736, -4.0000], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6257, device='cuda:0', dtype=torch.float64)
tensor([-1.9541, -2.9035, -3.2939, -3.7746, -4.0014], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7440, device='cuda:0', dtype=torch.float64)
tensor([-1.9560, -2.9060, -3.2838, -3.7822, -3.9963], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7163, device='cuda:0', dtype=torch.float64)
tensor([-1.9545, -2.9050, -3.2822, -3.7843, -3.9901], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7749, device='cuda:0', dtype=torch.float64)
tensor([-1.9555, -2.9056, -3.2810, -3.7729, -3.9879], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7018, device='cuda:0', dtype=torch.float64)
tensor([-1.9581, -2.9045, -3.2787, -3.7658, -3.9900], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6568, device='cuda:0', dtype=torch.float64)
tensor([-1.9552, -2.9008, -3.2788, -3.7690, -3.9906], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6951, device='cuda:0', dtype=torch.float64)
tensor([-1.9516, -2.8959, -3.2790, -3.7704, -3.9881], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6094, device='cuda:0', dtype=torch.float64)
tensor([-1.9490, -2.8964, -3.2738, -3.7683, -3.9842], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6277, device='cuda:0', dtype=torch.float64)
tensor([-1.9492, -2.9000, -3.2699, -3.7643, -3.9796], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7106, device='cuda:0', dtype=torch.float64)
tensor([-1.9478, -2.8974, -3.2714, -3.7642, -3.9763], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6630, device='cuda:0', dtype=torch.float64)
tensor([-1.9453, -2.8933, -3.2720, -3.7621, -3.9734], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6986, device='cuda:0', dtype=torch.float64)
tensor([-1.9447, -2.8915, -3.2711, -3.7588, -3.9756], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6255, device='cuda:0', dtype=torch.float64)
tensor([-1.9449, -2.8931, -3.2684, -3.7508, -3.9782], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7597, device='cuda:0', dtype=torch.float64)
tensor([-1.9424, -2.8920, -3.2727, -3.7544, -3.9782], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5734, device='cuda:0', dtype=torch.float64)
tensor([-1.9402, -2.8882, -3.2758, -3.7591, -3.9724], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6831, device='cuda:0', dtype=torch.float64)
tensor([-1.9433, -2.8851, -3.2736, -3.7482, -3.9646], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6331, device='cuda:0', dtype=torch.float64)
tensor([-1.9475, -2.8834, -3.2697, -3.7422, -3.9567], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6789, device='cuda:0', dtype=torch.float64)
tensor([-1.9473, -2.8836, -3.2710, -3.7456, -3.9514], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7249, device='cuda:0', dtype=torch.float64)
tensor([-1.9469, -2.8858, -3.2736, -3.7407, -3.9521], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6345, device='cuda:0', dtype=torch.float64)
tensor([-1.9476, -2.8895, -3.2745, -3.7332, -3.9525], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7083, device='cuda:0', dtype=torch.float64)
tensor([-1.9492, -2.8887, -3.2734, -3.7341, -3.9479], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6876, device='cuda:0', dtype=torch.float64)
tensor([-1.9495, -2.8842, -3.2715, -3.7326, -3.9414], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6942, device='cuda:0', dtype=torch.float64)
tensor([-1.9495, -2.8830, -3.2643, -3.7287, -3.9402], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7778, device='cuda:0', dtype=torch.float64)
tensor([-1.9461, -2.8810, -3.2522, -3.7386, -3.9401], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7715, device='cuda:0', dtype=torch.float64)
tensor([-1.9388, -2.8758, -3.2521, -3.7480, -3.9419], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6599, device='cuda:0', dtype=torch.float64)
tensor([-1.9357, -2.8755, -3.2556, -3.7478, -3.9435], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6523, device='cuda:0', dtype=torch.float64)
tensor([-1.9387, -2.8761, -3.2565, -3.7471, -3.9437], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6872, device='cuda:0', dtype=torch.float64)
tensor([-1.9437, -2.8767, -3.2503, -3.7433, -3.9429], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6514, device='cuda:0', dtype=torch.float64)
tensor([-1.9493, -2.8796, -3.2419, -3.7371, -3.9417], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6393, device='cuda:0', dtype=torch.float64)
tensor([-1.9490, -2.8825, -3.2391, -3.7315, -3.9383], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6621, device='cuda:0', dtype=torch.float64)
tensor([-1.9446, -2.8832, -3.2397, -3.7267, -3.9366], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5991, device='cuda:0', dtype=torch.float64)
tensor([-1.9422, -2.8826, -3.2402, -3.7244, -3.9323], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6795, device='cuda:0', dtype=torch.float64)
tensor([-1.9421, -2.8780, -3.2394, -3.7186, -3.9292], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6174, device='cuda:0', dtype=torch.float64)
tensor([-1.9438, -2.8736, -3.2366, -3.7145, -3.9277], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6911, device='cuda:0', dtype=torch.float64)
tensor([-1.9483, -2.8767, -3.2326, -3.7133, -3.9305], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6993, device='cuda:0', dtype=torch.float64)
tensor([-1.9494, -2.8836, -3.2358, -3.7132, -3.9311], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7565, device='cuda:0', dtype=torch.float64)
tensor([-1.9455, -2.8824, -3.2462, -3.7190, -3.9268], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7190, device='cuda:0', dtype=torch.float64)
tensor([-1.9389, -2.8795, -3.2505, -3.7283, -3.9234], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7753, device='cuda:0', dtype=torch.float64)
tensor([-1.9412, -2.8820, -3.2388, -3.7137, -3.9220], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6581, device='cuda:0', dtype=torch.float64)
tensor([-1.9415, -2.8810, -3.2330, -3.7030, -3.9150], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7720, device='cuda:0', dtype=torch.float64)
tensor([-1.9369, -2.8744, -3.2399, -3.7105, -3.9047], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6328, device='cuda:0', dtype=torch.float64)
tensor([-1.9364, -2.8758, -3.2402, -3.7116, -3.9013], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6813, device='cuda:0', dtype=torch.float64)
tensor([-1.9393, -2.8817, -3.2307, -3.6976, -3.9087], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6556, device='cuda:0', dtype=torch.float64)
tensor([-1.9411, -2.8821, -3.2235, -3.6882, -3.9152], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7715, device='cuda:0', dtype=torch.float64)
tensor([-1.9378, -2.8757, -3.2257, -3.7007, -3.9135], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6444, device='cuda:0', dtype=torch.float64)
tensor([-1.9379, -2.8724, -3.2240, -3.7099, -3.9108], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7040, device='cuda:0', dtype=torch.float64)
tensor([-1.9414, -2.8755, -3.2161, -3.7034, -3.9130], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6227, device='cuda:0', dtype=torch.float64)
tensor([-1.9435, -2.8774, -3.2133, -3.7007, -3.9138], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7923, device='cuda:0', dtype=torch.float64)
tensor([-1.9383, -2.8697, -3.2228, -3.7017, -3.9100], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6930, device='cuda:0', dtype=torch.float64)
tensor([-1.9330, -2.8637, -3.2344, -3.7081, -3.9035], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7001, device='cuda:0', dtype=torch.float64)
tensor([-1.9320, -2.8674, -3.2363, -3.6951, -3.9001], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6672, device='cuda:0', dtype=torch.float64)
tensor([-1.9350, -2.8727, -3.2312, -3.6822, -3.9000], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6173, device='cuda:0', dtype=torch.float64)
tensor([-1.9343, -2.8685, -3.2259, -3.6789, -3.9000], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6114, device='cuda:0', dtype=torch.float64)
tensor([-1.9331, -2.8638, -3.2232, -3.6849, -3.9008], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7118, device='cuda:0', dtype=torch.float64)
tensor([-1.9382, -2.8658, -3.2165, -3.6802, -3.9017], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6406, device='cuda:0', dtype=torch.float64)
tensor([-1.9451, -2.8682, -3.2151, -3.6714, -3.8985], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6547, device='cuda:0', dtype=torch.float64)
tensor([-1.9459, -2.8650, -3.2142, -3.6760, -3.8925], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6376, device='cuda:0', dtype=torch.float64)
tensor([-1.9416, -2.8560, -3.2144, -3.6851, -3.8844], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6303, device='cuda:0', dtype=torch.float64)
tensor([-1.9371, -2.8513, -3.2146, -3.6894, -3.8811], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5942, device='cuda:0', dtype=torch.float64)
tensor([-1.9324, -2.8515, -3.2193, -3.6916, -3.8780], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5695, device='cuda:0', dtype=torch.float64)
tensor([-1.9299, -2.8534, -3.2255, -3.6837, -3.8790], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5796, device='cuda:0', dtype=torch.float64)
tensor([-1.9299, -2.8556, -3.2257, -3.6677, -3.8811], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6210, device='cuda:0', dtype=torch.float64)
tensor([-1.9328, -2.8573, -3.2159, -3.6606, -3.8855], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6022, device='cuda:0', dtype=torch.float64)
tensor([-1.9347, -2.8583, -3.2092, -3.6613, -3.8852], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6276, device='cuda:0', dtype=torch.float64)
tensor([-1.9381, -2.8633, -3.2049, -3.6616, -3.8818], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6344, device='cuda:0', dtype=torch.float64)
tensor([-1.9354, -2.8628, -3.2107, -3.6694, -3.8735], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6092, device='cuda:0', dtype=torch.float64)
tensor([-1.9297, -2.8583, -3.2098, -3.6764, -3.8698], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6390, device='cuda:0', dtype=torch.float64)
tensor([-1.9234, -2.8525, -3.2024, -3.6710, -3.8689], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6527, device='cuda:0', dtype=torch.float64)
tensor([-1.9223, -2.8452, -3.1980, -3.6640, -3.8677], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5879, device='cuda:0', dtype=torch.float64)
tensor([-1.9251, -2.8424, -3.1934, -3.6596, -3.8645], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6216, device='cuda:0', dtype=torch.float64)
tensor([-1.9295, -2.8489, -3.1898, -3.6550, -3.8610], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6751, device='cuda:0', dtype=torch.float64)
tensor([-1.9330, -2.8584, -3.1860, -3.6525, -3.8576], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6392, device='cuda:0', dtype=torch.float64)
tensor([-1.9353, -2.8611, -3.1856, -3.6568, -3.8552], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6488, device='cuda:0', dtype=torch.float64)
tensor([-1.9389, -2.8567, -3.1864, -3.6609, -3.8585], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6530, device='cuda:0', dtype=torch.float64)
tensor([-1.9417, -2.8510, -3.1929, -3.6616, -3.8587], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6404, device='cuda:0', dtype=torch.float64)
tensor([-1.9387, -2.8457, -3.2055, -3.6610, -3.8564], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5838, device='cuda:0', dtype=torch.float64)
tensor([-1.9311, -2.8448, -3.2138, -3.6580, -3.8531], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6303, device='cuda:0', dtype=torch.float64)
tensor([-1.9244, -2.8450, -3.2082, -3.6564, -3.8488], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6350, device='cuda:0', dtype=torch.float64)
tensor([-1.9240, -2.8491, -3.1986, -3.6611, -3.8483], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7211, device='cuda:0', dtype=torch.float64)
tensor([-1.9252, -2.8496, -3.1970, -3.6605, -3.8475], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6278, device='cuda:0', dtype=torch.float64)
tensor([-1.9280, -2.8473, -3.1975, -3.6611, -3.8442], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6446, device='cuda:0', dtype=torch.float64)
tensor([-1.9356, -2.8442, -3.1896, -3.6588, -3.8466], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6242, device='cuda:0', dtype=torch.float64)
tensor([-1.9406, -2.8407, -3.1866, -3.6539, -3.8483], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6745, device='cuda:0', dtype=torch.float64)
tensor([-1.9387, -2.8402, -3.1902, -3.6497, -3.8476], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6224, device='cuda:0', dtype=torch.float64)
tensor([-1.9318, -2.8447, -3.1951, -3.6514, -3.8410], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6489, device='cuda:0', dtype=torch.float64)
tensor([-1.9242, -2.8487, -3.1957, -3.6519, -3.8394], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6245, device='cuda:0', dtype=torch.float64)
tensor([-1.9217, -2.8463, -3.1903, -3.6450, -3.8385], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6443, device='cuda:0', dtype=torch.float64)
tensor([-1.9247, -2.8411, -3.1857, -3.6418, -3.8377], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5582, device='cuda:0', dtype=torch.float64)
tensor([-1.9314, -2.8388, -3.1792, -3.6400, -3.8353], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7527, device='cuda:0', dtype=torch.float64)
tensor([-1.9399, -2.8388, -3.1703, -3.6343, -3.8350], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7292, device='cuda:0', dtype=torch.float64)
tensor([-1.9372, -2.8389, -3.1701, -3.6359, -3.8328], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6370, device='cuda:0', dtype=torch.float64)
tensor([-1.9300, -2.8393, -3.1734, -3.6407, -3.8310], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6525, device='cuda:0', dtype=torch.float64)
tensor([-1.9228, -2.8434, -3.1724, -3.6362, -3.8303], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5588, device='cuda:0', dtype=torch.float64)
tensor([-1.9171, -2.8490, -3.1714, -3.6297, -3.8295], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6344, device='cuda:0', dtype=torch.float64)
tensor([-1.9173, -2.8471, -3.1729, -3.6239, -3.8265], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6561, device='cuda:0', dtype=torch.float64)
tensor([-1.9245, -2.8407, -3.1756, -3.6080, -3.8234], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6167, device='cuda:0', dtype=torch.float64)
tensor([-1.9335, -2.8374, -3.1736, -3.5961, -3.8222], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7222, device='cuda:0', dtype=torch.float64)
tensor([-1.9351, -2.8364, -3.1700, -3.6035, -3.8217], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7713, device='cuda:0', dtype=torch.float64)
tensor([-1.9322, -2.8380, -3.1705, -3.6034, -3.8220], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7107, device='cuda:0', dtype=torch.float64)
tensor([-1.9235, -2.8413, -3.1768, -3.6075, -3.8179], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7842, device='cuda:0', dtype=torch.float64)
tensor([-1.9183, -2.8486, -3.1761, -3.6151, -3.8128], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7653, device='cuda:0', dtype=torch.float64)
tensor([-1.9233, -2.8522, -3.1690, -3.6066, -3.8100], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7661, device='cuda:0', dtype=torch.float64)
tensor([-1.9292, -2.8491, -3.1590, -3.5972, -3.8081], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7674, device='cuda:0', dtype=torch.float64)
tensor([-1.9294, -2.8392, -3.1568, -3.6028, -3.8121], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6849, device='cuda:0', dtype=torch.float64)
tensor([-1.9279, -2.8310, -3.1629, -3.6066, -3.8150], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8528, device='cuda:0', dtype=torch.float64)
tensor([-1.9238, -2.8258, -3.1793, -3.6046, -3.8123], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8911, device='cuda:0', dtype=torch.float64)
tensor([-1.9197, -2.8229, -3.1932, -3.6149, -3.8058], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6529, device='cuda:0', dtype=torch.float64)
tensor([-1.9196, -2.8243, -3.1903, -3.6219, -3.8027], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7247, device='cuda:0', dtype=torch.float64)
tensor([-1.9232, -2.8302, -3.1703, -3.6162, -3.7995], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6704, device='cuda:0', dtype=torch.float64)
tensor([-1.9250, -2.8366, -3.1552, -3.6128, -3.7996], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6694, device='cuda:0', dtype=torch.float64)
tensor([-1.9221, -2.8356, -3.1487, -3.6140, -3.8033], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6327, device='cuda:0', dtype=torch.float64)
tensor([-1.9200, -2.8293, -3.1453, -3.6123, -3.8058], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6192, device='cuda:0', dtype=torch.float64)
tensor([-1.9176, -2.8241, -3.1462, -3.6040, -3.8039], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6900, device='cuda:0', dtype=torch.float64)
tensor([-1.9145, -2.8206, -3.1533, -3.6056, -3.7958], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6648, device='cuda:0', dtype=torch.float64)
tensor([-1.9180, -2.8248, -3.1586, -3.6030, -3.7881], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7495, device='cuda:0', dtype=torch.float64)
tensor([-1.9262, -2.8327, -3.1627, -3.6017, -3.7856], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7524, device='cuda:0', dtype=torch.float64)
tensor([-1.9303, -2.8382, -3.1607, -3.6091, -3.7900], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6194, device='cuda:0', dtype=torch.float64)
tensor([-1.9304, -2.8410, -3.1648, -3.6081, -3.7934], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8797, device='cuda:0', dtype=torch.float64)
tensor([-1.9225, -2.8290, -3.1763, -3.6081, -3.7926], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6055, device='cuda:0', dtype=torch.float64)
tensor([-1.9167, -2.8205, -3.1748, -3.6044, -3.7948], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7507, device='cuda:0', dtype=torch.float64)
tensor([-1.9167, -2.8191, -3.1621, -3.5941, -3.7960], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6818, device='cuda:0', dtype=torch.float64)
tensor([-1.9173, -2.8244, -3.1535, -3.5827, -3.7909], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6429, device='cuda:0', dtype=torch.float64)
tensor([-1.9184, -2.8308, -3.1519, -3.5743, -3.7844], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7696, device='cuda:0', dtype=torch.float64)
tensor([-1.9168, -2.8330, -3.1497, -3.5699, -3.7847], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6276, device='cuda:0', dtype=torch.float64)
tensor([-1.9142, -2.8305, -3.1454, -3.5710, -3.7908], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5635, device='cuda:0', dtype=torch.float64)
tensor([-1.9118, -2.8201, -3.1496, -3.5756, -3.7898], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7354, device='cuda:0', dtype=torch.float64)
tensor([-1.9131, -2.8112, -3.1574, -3.5776, -3.7813], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7230, device='cuda:0', dtype=torch.float64)
tensor([-1.9168, -2.8143, -3.1548, -3.5796, -3.7742], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8325, device='cuda:0', dtype=torch.float64)
tensor([-1.9169, -2.8210, -3.1445, -3.5678, -3.7686], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0867, device='cuda:0', dtype=torch.float64)
tensor([-1.9086, -2.8212, -3.1436, -3.5837, -3.7694], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6554, device='cuda:0', dtype=torch.float64)
tensor([-1.9064, -2.8226, -3.1416, -3.5891, -3.7768], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8693, device='cuda:0', dtype=torch.float64)
tensor([-1.9105, -2.8263, -3.1371, -3.5759, -3.7799], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5673, device='cuda:0', dtype=torch.float64)
tensor([-1.9167, -2.8279, -3.1348, -3.5656, -3.7765], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7771, device='cuda:0', dtype=torch.float64)
tensor([-1.9179, -2.8227, -3.1362, -3.5762, -3.7702], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7663, device='cuda:0', dtype=torch.float64)
tensor([-1.9226, -2.8239, -3.1314, -3.5702, -3.7679], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6726, device='cuda:0', dtype=torch.float64)
tensor([-1.9243, -2.8272, -3.1262, -3.5732, -3.7650], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6586, device='cuda:0', dtype=torch.float64)
tensor([-1.9170, -2.8240, -3.1321, -3.5889, -3.7570], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7010, device='cuda:0', dtype=torch.float64)
tensor([-1.9139, -2.8199, -3.1414, -3.5890, -3.7448], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7375, device='cuda:0', dtype=torch.float64)
tensor([-1.9101, -2.8189, -3.1458, -3.5908, -3.7407], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6387, device='cuda:0', dtype=torch.float64)
tensor([-1.9099, -2.8193, -3.1417, -3.5792, -3.7452], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7610, device='cuda:0', dtype=torch.float64)
tensor([-1.9117, -2.8193, -3.1430, -3.5696, -3.7486], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7632, device='cuda:0', dtype=torch.float64)
tensor([-1.9162, -2.8244, -3.1399, -3.5707, -3.7560], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8568, device='cuda:0', dtype=torch.float64)
tensor([-1.9229, -2.8287, -3.1343, -3.5569, -3.7599], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6073, device='cuda:0', dtype=torch.float64)
tensor([-1.9242, -2.8272, -3.1312, -3.5535, -3.7592], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8344, device='cuda:0', dtype=torch.float64)
tensor([-1.9207, -2.8203, -3.1247, -3.5707, -3.7544], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7763, device='cuda:0', dtype=torch.float64)
tensor([-1.9169, -2.8164, -3.1254, -3.5684, -3.7521], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6365, device='cuda:0', dtype=torch.float64)
tensor([-1.9165, -2.8140, -3.1326, -3.5629, -3.7484], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7149, device='cuda:0', dtype=torch.float64)
tensor([-1.9078, -2.8088, -3.1396, -3.5780, -3.7423], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8009, device='cuda:0', dtype=torch.float64)
tensor([-1.9008, -2.8050, -3.1416, -3.5765, -3.7416], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7671, device='cuda:0', dtype=torch.float64)
tensor([-1.9037, -2.8089, -3.1340, -3.5612, -3.7450], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0677, device='cuda:0', dtype=torch.float64)
tensor([-1.9076, -2.8112, -3.1316, -3.5681, -3.7445], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7419, device='cuda:0', dtype=torch.float64)
tensor([-1.9151, -2.8149, -3.1309, -3.5558, -3.7420], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6023, device='cuda:0', dtype=torch.float64)
tensor([-1.9213, -2.8158, -3.1320, -3.5366, -3.7447], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8505, device='cuda:0', dtype=torch.float64)
tensor([-1.9219, -2.8128, -3.1324, -3.5363, -3.7507], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8391, device='cuda:0', dtype=torch.float64)
tensor([-1.9183, -2.8080, -3.1312, -3.5366, -3.7557], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6012, device='cuda:0', dtype=torch.float64)
tensor([-1.9147, -2.8016, -3.1296, -3.5402, -3.7543], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6062, device='cuda:0', dtype=torch.float64)
tensor([-1.9136, -2.8008, -3.1267, -3.5433, -3.7458], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8202, device='cuda:0', dtype=torch.float64)
tensor([-1.9070, -2.7974, -3.1252, -3.5581, -3.7398], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7066, device='cuda:0', dtype=torch.float64)
tensor([-1.9084, -2.7995, -3.1159, -3.5583, -3.7355], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8796, device='cuda:0', dtype=torch.float64)
tensor([-1.9161, -2.8045, -3.1095, -3.5440, -3.7381], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6319, device='cuda:0', dtype=torch.float64)
tensor([-1.9216, -2.8102, -3.1081, -3.5454, -3.7453], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6541, device='cuda:0', dtype=torch.float64)
tensor([-1.9206, -2.8111, -3.1081, -3.5485, -3.7490], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6918, device='cuda:0', dtype=torch.float64)
tensor([-1.9149, -2.8056, -3.1068, -3.5524, -3.7426], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7248, device='cuda:0', dtype=torch.float64)
tensor([-1.9052, -2.7963, -3.1075, -3.5643, -3.7329], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7162, device='cuda:0', dtype=torch.float64)
tensor([-1.9017, -2.7927, -3.1060, -3.5658, -3.7252], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8370, device='cuda:0', dtype=torch.float64)
tensor([-1.9030, -2.7918, -3.1070, -3.5506, -3.7209], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8223, device='cuda:0', dtype=torch.float64)
tensor([-1.9087, -2.7935, -3.1101, -3.5428, -3.7169], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0081, device='cuda:0', dtype=torch.float64)
tensor([-1.9193, -2.8019, -3.1033, -3.5376, -3.7172], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0019, device='cuda:0', dtype=torch.float64)
tensor([-1.9245, -2.8024, -3.0969, -3.5142, -3.7156], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7669, device='cuda:0', dtype=torch.float64)
tensor([-1.9230, -2.7974, -3.0977, -3.5164, -3.7086], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6745, device='cuda:0', dtype=torch.float64)
tensor([-1.9125, -2.7921, -3.1137, -3.5418, -3.7071], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8617, device='cuda:0', dtype=torch.float64)
tensor([-1.9100, -2.7956, -3.1270, -3.5416, -3.7054], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5893, device='cuda:0', dtype=torch.float64)
tensor([-1.9097, -2.8019, -3.1260, -3.5392, -3.7015], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8457, device='cuda:0', dtype=torch.float64)
tensor([-1.9109, -2.8057, -3.1201, -3.5417, -3.7039], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9385, device='cuda:0', dtype=torch.float64)
tensor([-1.9120, -2.8087, -3.1171, -3.5314, -3.7095], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5976, device='cuda:0', dtype=torch.float64)
tensor([-1.9114, -2.8089, -3.1171, -3.5299, -3.7127], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6745, device='cuda:0', dtype=torch.float64)
tensor([-1.9056, -2.8080, -3.1134, -3.5344, -3.7122], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6600, device='cuda:0', dtype=torch.float64)
tensor([-1.9014, -2.8042, -3.1095, -3.5325, -3.7100], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6506, device='cuda:0', dtype=torch.float64)
tensor([-1.9030, -2.7979, -3.1027, -3.5309, -3.7048], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7427, device='cuda:0', dtype=torch.float64)
tensor([-1.9086, -2.7919, -3.1028, -3.5188, -3.6997], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7140, device='cuda:0', dtype=torch.float64)
tensor([-1.9145, -2.7852, -3.1021, -3.5210, -3.7036], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7245, device='cuda:0', dtype=torch.float64)
tensor([-1.9150, -2.7833, -3.0987, -3.5363, -3.7075], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9234, device='cuda:0', dtype=torch.float64)
tensor([-1.9085, -2.7832, -3.0962, -3.5316, -3.7089], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8539, device='cuda:0', dtype=torch.float64)
tensor([-1.9045, -2.7893, -3.0922, -3.5297, -3.7076], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6904, device='cuda:0', dtype=torch.float64)
tensor([-1.9077, -2.7995, -3.0937, -3.5257, -3.7057], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9160, device='cuda:0', dtype=torch.float64)
tensor([-1.9104, -2.7932, -3.1019, -3.5159, -3.7028], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8369, device='cuda:0', dtype=torch.float64)
tensor([-1.9117, -2.7867, -3.1022, -3.5208, -3.6995], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7746, device='cuda:0', dtype=torch.float64)
tensor([-1.9146, -2.7814, -3.0925, -3.5235, -3.7007], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9599, device='cuda:0', dtype=torch.float64)
tensor([-1.9109, -2.7768, -3.0868, -3.5129, -3.7018], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8015, device='cuda:0', dtype=torch.float64)
tensor([-1.9021, -2.7738, -3.0916, -3.5230, -3.7017], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6613, device='cuda:0', dtype=torch.float64)
tensor([-1.8990, -2.7827, -3.0907, -3.5274, -3.7041], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7826, device='cuda:0', dtype=torch.float64)
tensor([-1.8986, -2.7890, -3.0887, -3.5261, -3.7039], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7335, device='cuda:0', dtype=torch.float64)
tensor([-1.8990, -2.7890, -3.0935, -3.5396, -3.6965], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6845, device='cuda:0', dtype=torch.float64)
tensor([-1.8996, -2.7825, -3.1014, -3.5516, -3.6903], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0131, device='cuda:0', dtype=torch.float64)
tensor([-1.9047, -2.7799, -3.1030, -3.5348, -3.6900], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6060, device='cuda:0', dtype=torch.float64)
tensor([-1.9077, -2.7821, -3.1017, -3.5126, -3.6873], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9220, device='cuda:0', dtype=torch.float64)
tensor([-1.9039, -2.7846, -3.1053, -3.5167, -3.6811], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8346, device='cuda:0', dtype=torch.float64)
tensor([-1.9057, -2.7905, -3.1033, -3.4965, -3.6770], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7358, device='cuda:0', dtype=torch.float64)
tensor([-1.9056, -2.7948, -3.0960, -3.4850, -3.6750], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7144, device='cuda:0', dtype=torch.float64)
tensor([-1.9014, -2.7952, -3.0906, -3.4952, -3.6704], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7564, device='cuda:0', dtype=torch.float64)
tensor([-1.9008, -2.7882, -3.0931, -3.5057, -3.6708], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6951, device='cuda:0', dtype=torch.float64)
tensor([-1.9036, -2.7790, -3.0817, -3.5065, -3.6749], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6928, device='cuda:0', dtype=torch.float64)
tensor([-1.9054, -2.7714, -3.0642, -3.4970, -3.6763], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9278, device='cuda:0', dtype=torch.float64)
tensor([-1.8944, -2.7625, -3.0664, -3.5105, -3.6731], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7458, device='cuda:0', dtype=torch.float64)
tensor([-1.8898, -2.7710, -3.0707, -3.5118, -3.6738], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8880, device='cuda:0', dtype=torch.float64)
tensor([-1.8960, -2.7878, -3.0657, -3.4928, -3.6729], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7855, device='cuda:0', dtype=torch.float64)
tensor([-1.9029, -2.7910, -3.0658, -3.4970, -3.6669], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7948, device='cuda:0', dtype=torch.float64)
tensor([-1.9046, -2.7801, -3.0805, -3.5022, -3.6651], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6610, device='cuda:0', dtype=torch.float64)
tensor([-1.9046, -2.7766, -3.0858, -3.5045, -3.6693], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7349, device='cuda:0', dtype=torch.float64)
tensor([-1.9055, -2.7828, -3.0866, -3.5135, -3.6743], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8319, device='cuda:0', dtype=torch.float64)
tensor([-1.9093, -2.7810, -3.0902, -3.5137, -3.6691], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6147, device='cuda:0', dtype=torch.float64)
tensor([-1.9102, -2.7739, -3.0877, -3.5115, -3.6636], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6993, device='cuda:0', dtype=torch.float64)
tensor([-1.9048, -2.7659, -3.0823, -3.5156, -3.6596], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0475, device='cuda:0', dtype=torch.float64)
tensor([-1.8983, -2.7660, -3.0793, -3.4989, -3.6597], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6302, device='cuda:0', dtype=torch.float64)
tensor([-1.8871, -2.7731, -3.0833, -3.4892, -3.6589], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7845, device='cuda:0', dtype=torch.float64)
tensor([-1.8796, -2.7806, -3.0863, -3.4871, -3.6563], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7478, device='cuda:0', dtype=torch.float64)
tensor([-1.8862, -2.7865, -3.0825, -3.4701, -3.6537], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7588, device='cuda:0', dtype=torch.float64)
tensor([-1.8983, -2.7885, -3.0771, -3.4639, -3.6548], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7502, device='cuda:0', dtype=torch.float64)
tensor([-1.9067, -2.7816, -3.0773, -3.4720, -3.6512], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6874, device='cuda:0', dtype=torch.float64)
tensor([-1.9089, -2.7718, -3.0846, -3.4792, -3.6505], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6246, device='cuda:0', dtype=torch.float64)
tensor([-1.9014, -2.7670, -3.0817, -3.4950, -3.6573], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7868, device='cuda:0', dtype=torch.float64)
tensor([-1.8908, -2.7684, -3.0753, -3.5175, -3.6650], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8826, device='cuda:0', dtype=torch.float64)
tensor([-1.8945, -2.7790, -3.0588, -3.5028, -3.6694], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7072, device='cuda:0', dtype=torch.float64)
tensor([-1.9065, -2.7861, -3.0449, -3.4809, -3.6678], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7747, device='cuda:0', dtype=torch.float64)
tensor([-1.9065, -2.7777, -3.0500, -3.4783, -3.6570], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7536, device='cuda:0', dtype=torch.float64)
tensor([-1.9002, -2.7704, -3.0605, -3.4764, -3.6507], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7117, device='cuda:0', dtype=torch.float64)
tensor([-1.8884, -2.7669, -3.0694, -3.4739, -3.6542], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8354, device='cuda:0', dtype=torch.float64)
tensor([-1.8751, -2.7587, -3.0782, -3.4911, -3.6501], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6860, device='cuda:0', dtype=torch.float64)
tensor([-1.8727, -2.7495, -3.0804, -3.5025, -3.6425], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8722, device='cuda:0', dtype=torch.float64)
tensor([-1.8919, -2.7549, -3.0619, -3.4747, -3.6427], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6011, device='cuda:0', dtype=torch.float64)
tensor([-1.9068, -2.7657, -3.0415, -3.4601, -3.6440], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7139, device='cuda:0', dtype=torch.float64)
tensor([-1.9111, -2.7744, -3.0390, -3.4653, -3.6434], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7796, device='cuda:0', dtype=torch.float64)
tensor([-1.9025, -2.7759, -3.0531, -3.4601, -3.6449], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8253, device='cuda:0', dtype=torch.float64)
tensor([-1.8891, -2.7701, -3.0618, -3.4701, -3.6496], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7357, device='cuda:0', dtype=torch.float64)
tensor([-1.8838, -2.7623, -3.0629, -3.4722, -3.6504], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8327, device='cuda:0', dtype=torch.float64)
tensor([-1.8763, -2.7544, -3.0675, -3.4901, -3.6370], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7774, device='cuda:0', dtype=torch.float64)
tensor([-1.8812, -2.7579, -3.0676, -3.4846, -3.6273], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8072, device='cuda:0', dtype=torch.float64)
tensor([-1.8938, -2.7698, -3.0552, -3.4623, -3.6292], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6298, device='cuda:0', dtype=torch.float64)
tensor([-1.9029, -2.7777, -3.0458, -3.4510, -3.6375], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0038, device='cuda:0', dtype=torch.float64)
tensor([-1.9002, -2.7799, -3.0558, -3.4464, -3.6378], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8506, device='cuda:0', dtype=torch.float64)
tensor([-1.8968, -2.7826, -3.0688, -3.4571, -3.6352], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7354, device='cuda:0', dtype=torch.float64)
tensor([-1.8933, -2.7786, -3.0713, -3.4629, -3.6290], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9542, device='cuda:0', dtype=torch.float64)
tensor([-1.8801, -2.7613, -3.0809, -3.4824, -3.6159], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7071, device='cuda:0', dtype=torch.float64)
tensor([-1.8843, -2.7564, -3.0750, -3.4917, -3.6140], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0645, device='cuda:0', dtype=torch.float64)
tensor([-1.8974, -2.7644, -3.0457, -3.4866, -3.6321], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0456, device='cuda:0', dtype=torch.float64)
tensor([-1.9033, -2.7694, -3.0326, -3.4644, -3.6436], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8327, device='cuda:0', dtype=torch.float64)
tensor([-1.8945, -2.7672, -3.0403, -3.4698, -3.6413], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7277, device='cuda:0', dtype=torch.float64)
tensor([-1.8960, -2.7662, -3.0446, -3.4640, -3.6344], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8556, device='cuda:0', dtype=torch.float64)
tensor([-1.9012, -2.7641, -3.0483, -3.4369, -3.6246], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1731, device='cuda:0', dtype=torch.float64)
tensor([-1.9045, -2.7608, -3.0548, -3.4454, -3.6174], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8289, device='cuda:0', dtype=torch.float64)
tensor([-1.8958, -2.7548, -3.0688, -3.4614, -3.6134], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2887, device='cuda:0', dtype=torch.float64)
tensor([-1.8995, -2.7525, -3.0605, -3.4431, -3.6263], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8655, device='cuda:0', dtype=torch.float64)
tensor([-1.8968, -2.7488, -3.0508, -3.4548, -3.6369], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8990, device='cuda:0', dtype=torch.float64)
tensor([-1.8835, -2.7525, -3.0489, -3.4645, -3.6328], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7617, device='cuda:0', dtype=torch.float64)
tensor([-1.8783, -2.7684, -3.0387, -3.4634, -3.6270], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7299, device='cuda:0', dtype=torch.float64)
tensor([-1.8843, -2.7788, -3.0254, -3.4428, -3.6247], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7314, device='cuda:0', dtype=torch.float64)
tensor([-1.8902, -2.7668, -3.0287, -3.4425, -3.6201], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8992, device='cuda:0', dtype=torch.float64)
tensor([-1.8949, -2.7494, -3.0422, -3.4673, -3.6284], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6801, device='cuda:0', dtype=torch.float64)
tensor([-1.9074, -2.7492, -3.0422, -3.4380, -3.6368], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1620, device='cuda:0', dtype=torch.float64)
tensor([-1.8961, -2.7453, -3.0509, -3.4563, -3.6355], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8021, device='cuda:0', dtype=torch.float64)
tensor([-1.8783, -2.7446, -3.0643, -3.4827, -3.6272], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3570, device='cuda:0', dtype=torch.float64)
tensor([-1.8823, -2.7553, -3.0543, -3.4607, -3.6213], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7602, device='cuda:0', dtype=torch.float64)
tensor([-1.8910, -2.7645, -3.0399, -3.4512, -3.6135], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0096, device='cuda:0', dtype=torch.float64)
tensor([-1.8934, -2.7588, -3.0382, -3.4627, -3.6020], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0812, device='cuda:0', dtype=torch.float64)
tensor([-1.9047, -2.7555, -3.0318, -3.4420, -3.6012], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7961, device='cuda:0', dtype=torch.float64)
tensor([-1.9106, -2.7567, -3.0278, -3.4402, -3.6011], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0927, device='cuda:0', dtype=torch.float64)
tensor([-1.8993, -2.7481, -3.0413, -3.4531, -3.5880], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7345, device='cuda:0', dtype=torch.float64)
tensor([-1.8858, -2.7447, -3.0449, -3.4661, -3.5874], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8181, device='cuda:0', dtype=torch.float64)
tensor([-1.8798, -2.7465, -3.0290, -3.4754, -3.5964], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1078, device='cuda:0', dtype=torch.float64)
tensor([-1.8748, -2.7468, -3.0157, -3.4802, -3.6027], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6282, device='cuda:0', dtype=torch.float64)
tensor([-1.8822, -2.7524, -3.0100, -3.4737, -3.6083], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9541, device='cuda:0', dtype=torch.float64)
tensor([-1.9014, -2.7587, -3.0085, -3.4606, -3.6148], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9950, device='cuda:0', dtype=torch.float64)
tensor([-1.9117, -2.7547, -3.0188, -3.4289, -3.6107], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9316, device='cuda:0', dtype=torch.float64)
tensor([-1.8981, -2.7472, -3.0391, -3.4296, -3.5992], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7536, device='cuda:0', dtype=torch.float64)
tensor([-1.8815, -2.7430, -3.0542, -3.4425, -3.5918], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2595, device='cuda:0', dtype=torch.float64)
tensor([-1.8673, -2.7430, -3.0709, -3.4236, -3.5893], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9187, device='cuda:0', dtype=torch.float64)
tensor([-1.8622, -2.7505, -3.0714, -3.4326, -3.5909], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6652, device='cuda:0', dtype=torch.float64)
tensor([-1.8770, -2.7628, -3.0537, -3.4286, -3.5988], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8065, device='cuda:0', dtype=torch.float64)
tensor([-1.8947, -2.7691, -3.0291, -3.4142, -3.6030], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0279, device='cuda:0', dtype=torch.float64)
tensor([-1.9018, -2.7680, -3.0083, -3.4374, -3.6030], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8937, device='cuda:0', dtype=torch.float64)
tensor([-1.8949, -2.7570, -3.0112, -3.4539, -3.5959], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8040, device='cuda:0', dtype=torch.float64)
tensor([-1.8868, -2.7474, -3.0228, -3.4487, -3.5922], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0432, device='cuda:0', dtype=torch.float64)
tensor([-1.8741, -2.7398, -3.0325, -3.4737, -3.5879], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4116, device='cuda:0', dtype=torch.float64)
tensor([-1.8683, -2.7381, -3.0308, -3.4522, -3.5875], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3297, device='cuda:0', dtype=torch.float64)
tensor([-1.8773, -2.7439, -3.0124, -3.4549, -3.5888], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6326, device='cuda:0', dtype=torch.float64)
tensor([-1.8921, -2.7506, -3.0023, -3.4494, -3.5817], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4762, device='cuda:0', dtype=torch.float64)
tensor([-1.9040, -2.7505, -3.0045, -3.4039, -3.5749], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5904, device='cuda:0', dtype=torch.float64)
tensor([-1.8983, -2.7444, -3.0153, -3.4202, -3.5780], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9844, device='cuda:0', dtype=torch.float64)
tensor([-1.8859, -2.7368, -3.0347, -3.4240, -3.5813], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9597, device='cuda:0', dtype=torch.float64)
tensor([-1.8774, -2.7321, -3.0423, -3.4129, -3.5902], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3243, device='cuda:0', dtype=torch.float64)
tensor([-1.8639, -2.7212, -3.0485, -3.4563, -3.5899], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3275, device='cuda:0', dtype=torch.float64)
tensor([-1.8678, -2.7073, -3.0527, -3.4446, -3.5864], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9458, device='cuda:0', dtype=torch.float64)
tensor([-1.8881, -2.7136, -3.0378, -3.4149, -3.5880], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1464, device='cuda:0', dtype=torch.float64)
tensor([-1.9033, -2.7237, -3.0200, -3.4131, -3.5884], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3688, device='cuda:0', dtype=torch.float64)
tensor([-1.9034, -2.7280, -3.0139, -3.4034, -3.5824], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0123, device='cuda:0', dtype=torch.float64)
tensor([-1.8995, -2.7368, -3.0063, -3.4141, -3.5783], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7145, device='cuda:0', dtype=torch.float64)
tensor([-1.8855, -2.7405, -3.0052, -3.4372, -3.5792], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0951, device='cuda:0', dtype=torch.float64)
tensor([-1.8742, -2.7382, -3.0149, -3.4314, -3.5759], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1581, device='cuda:0', dtype=torch.float64)
tensor([-1.8685, -2.7384, -3.0192, -3.4477, -3.5707], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7634, device='cuda:0', dtype=torch.float64)
tensor([-1.8646, -2.7387, -3.0282, -3.4538, -3.5678], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0008, device='cuda:0', dtype=torch.float64)
tensor([-1.8796, -2.7488, -3.0182, -3.4333, -3.5687], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0384, device='cuda:0', dtype=torch.float64)
tensor([-1.8920, -2.7577, -3.0027, -3.4393, -3.5705], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6917, device='cuda:0', dtype=torch.float64)
tensor([-1.8999, -2.7549, -2.9987, -3.4285, -3.5700], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8580, device='cuda:0', dtype=torch.float64)
tensor([-1.8946, -2.7482, -3.0004, -3.4094, -3.5690], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9492, device='cuda:0', dtype=torch.float64)
tensor([-1.8764, -2.7324, -3.0070, -3.4221, -3.5635], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8331, device='cuda:0', dtype=torch.float64)
tensor([-1.8653, -2.7188, -3.0116, -3.4301, -3.5553], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8861, device='cuda:0', dtype=torch.float64)
tensor([-1.8709, -2.7236, -3.0129, -3.4156, -3.5575], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7243, device='cuda:0', dtype=torch.float64)
tensor([-1.8824, -2.7349, -3.0137, -3.4139, -3.5664], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9034, device='cuda:0', dtype=torch.float64)
tensor([-1.8887, -2.7439, -3.0234, -3.4107, -3.5731], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0122, device='cuda:0', dtype=torch.float64)
tensor([-1.8975, -2.7492, -3.0146, -3.3985, -3.5808], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7077, device='cuda:0', dtype=torch.float64)
tensor([-1.8929, -2.7438, -3.0119, -3.4140, -3.5851], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0331, device='cuda:0', dtype=torch.float64)
tensor([-1.8734, -2.7325, -3.0207, -3.4338, -3.5828], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9575, device='cuda:0', dtype=torch.float64)
tensor([-1.8681, -2.7339, -3.0126, -3.4167, -3.5859], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7857, device='cuda:0', dtype=torch.float64)
tensor([-1.8722, -2.7311, -3.0083, -3.4114, -3.5762], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0419, device='cuda:0', dtype=torch.float64)
tensor([-1.8779, -2.7264, -3.0051, -3.4036, -3.5587], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6432, device='cuda:0', dtype=torch.float64)
tensor([-1.8895, -2.7292, -3.0000, -3.3990, -3.5505], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6713, device='cuda:0', dtype=torch.float64)
tensor([-1.8955, -2.7266, -3.0031, -3.4056, -3.5497], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6802, device='cuda:0', dtype=torch.float64)
tensor([-1.8960, -2.7198, -3.0067, -3.4000, -3.5536], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7532, device='cuda:0', dtype=torch.float64)
tensor([-1.8908, -2.7166, -3.0001, -3.3850, -3.5624], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7473, device='cuda:0', dtype=torch.float64)
tensor([-1.8794, -2.7205, -2.9992, -3.3907, -3.5614], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6165, device='cuda:0', dtype=torch.float64)
tensor([-1.8679, -2.7302, -2.9976, -3.4055, -3.5557], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6159, device='cuda:0', dtype=torch.float64)
tensor([-1.8681, -2.7384, -2.9945, -3.4115, -3.5555], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6518, device='cuda:0', dtype=torch.float64)
tensor([-1.8724, -2.7362, -2.9929, -3.4208, -3.5545], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7969, device='cuda:0', dtype=torch.float64)
tensor([-1.8845, -2.7365, -2.9860, -3.4113, -3.5638], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8053, device='cuda:0', dtype=torch.float64)
tensor([-1.8882, -2.7349, -2.9828, -3.4185, -3.5685], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8114, device='cuda:0', dtype=torch.float64)
tensor([-1.8837, -2.7346, -2.9871, -3.4358, -3.5606], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0943, device='cuda:0', dtype=torch.float64)
tensor([-1.8823, -2.7438, -2.9962, -3.4054, -3.5472], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8643, device='cuda:0', dtype=torch.float64)
tensor([-1.8680, -2.7381, -3.0041, -3.4047, -3.5353], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7812, device='cuda:0', dtype=torch.float64)
tensor([-1.8516, -2.7207, -3.0095, -3.4108, -3.5390], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7970, device='cuda:0', dtype=torch.float64)
tensor([-1.8538, -2.7169, -3.0095, -3.4000, -3.5576], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6650, device='cuda:0', dtype=torch.float64)
tensor([-1.8762, -2.7316, -3.0034, -3.3671, -3.5749], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8033, device='cuda:0', dtype=torch.float64)
tensor([-1.8975, -2.7469, -2.9960, -3.3616, -3.5800], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9156, device='cuda:0', dtype=torch.float64)
tensor([-1.8988, -2.7430, -2.9978, -3.3679, -3.5678], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8515, device='cuda:0', dtype=torch.float64)
tensor([-1.8822, -2.7302, -3.0061, -3.3975, -3.5562], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7553, device='cuda:0', dtype=torch.float64)
tensor([-1.8650, -2.7148, -3.0037, -3.4256, -3.5525], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9352, device='cuda:0', dtype=torch.float64)
tensor([-1.8612, -2.7103, -2.9970, -3.4142, -3.5511], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9287, device='cuda:0', dtype=torch.float64)
tensor([-1.8683, -2.7074, -2.9900, -3.4066, -3.5582], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7720, device='cuda:0', dtype=torch.float64)
tensor([-1.8796, -2.7122, -2.9771, -3.3946, -3.5667], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8354, device='cuda:0', dtype=torch.float64)
tensor([-1.8847, -2.7180, -2.9646, -3.3778, -3.5710], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0489, device='cuda:0', dtype=torch.float64)
tensor([-1.8736, -2.7279, -2.9684, -3.3967, -3.5701], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8541, device='cuda:0', dtype=torch.float64)
tensor([-1.8638, -2.7399, -2.9834, -3.3989, -3.5626], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1332, device='cuda:0', dtype=torch.float64)
tensor([-1.8743, -2.7430, -2.9955, -3.3618, -3.5552], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3396, device='cuda:0', dtype=torch.float64)
tensor([-1.8775, -2.7336, -3.0065, -3.3773, -3.5436], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3948, device='cuda:0', dtype=torch.float64)
tensor([-1.8732, -2.7195, -3.0253, -3.3789, -3.5270], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0798, device='cuda:0', dtype=torch.float64)
tensor([-1.8770, -2.7196, -3.0152, -3.3826, -3.5241], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9381, device='cuda:0', dtype=torch.float64)
tensor([-1.8777, -2.7316, -2.9927, -3.3943, -3.5426], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7504, device='cuda:0', dtype=torch.float64)
tensor([-1.8605, -2.7271, -2.9947, -3.4033, -3.5356], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9953, device='cuda:0', dtype=torch.float64)
tensor([-1.8652, -2.7284, -2.9899, -3.4178, -3.5265], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0283, device='cuda:0', dtype=torch.float64)
tensor([-1.8877, -2.7399, -2.9760, -3.4026, -3.5153], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0753, device='cuda:0', dtype=torch.float64)
tensor([-1.8956, -2.7374, -2.9799, -3.3699, -3.5092], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1304, device='cuda:0', dtype=torch.float64)
tensor([-1.8760, -2.7217, -3.0011, -3.3819, -3.5147], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1205, device='cuda:0', dtype=torch.float64)
tensor([-1.8624, -2.7196, -3.0059, -3.3633, -3.5351], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8452, device='cuda:0', dtype=torch.float64)
tensor([-1.8514, -2.7119, -3.0098, -3.3590, -3.5426], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9736, device='cuda:0', dtype=torch.float64)
tensor([-1.8574, -2.7045, -3.0046, -3.3859, -3.5355], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9987, device='cuda:0', dtype=torch.float64)
tensor([-1.8833, -2.7066, -2.9832, -3.3803, -3.5385], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7433, device='cuda:0', dtype=torch.float64)
tensor([-1.8949, -2.7093, -2.9749, -3.3773, -3.5398], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9878, device='cuda:0', dtype=torch.float64)
tensor([-1.8826, -2.7060, -2.9964, -3.3853, -3.5297], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0810, device='cuda:0', dtype=torch.float64)
tensor([-1.8644, -2.7082, -3.0049, -3.4136, -3.5298], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0660, device='cuda:0', dtype=torch.float64)
tensor([-1.8587, -2.7154, -2.9922, -3.3844, -3.5368], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9557, device='cuda:0', dtype=torch.float64)
tensor([-1.8523, -2.7104, -2.9854, -3.3820, -3.5348], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8004, device='cuda:0', dtype=torch.float64)
tensor([-1.8568, -2.7106, -2.9835, -3.3910, -3.5253], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1349, device='cuda:0', dtype=torch.float64)
tensor([-1.8752, -2.7200, -2.9713, -3.3675, -3.5285], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0632, device='cuda:0', dtype=torch.float64)
tensor([-1.8777, -2.7267, -2.9707, -3.3827, -3.5369], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8820, device='cuda:0', dtype=torch.float64)
tensor([-1.8681, -2.7220, -2.9808, -3.4012, -3.5365], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7509, device='cuda:0', dtype=torch.float64)
tensor([-1.8650, -2.7144, -2.9906, -3.4077, -3.5234], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1262, device='cuda:0', dtype=torch.float64)
tensor([-1.8815, -2.7114, -2.9762, -3.3695, -3.5230], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3447, device='cuda:0', dtype=torch.float64)
tensor([-1.8939, -2.7153, -2.9601, -3.3713, -3.5244], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1205, device='cuda:0', dtype=torch.float64)
tensor([-1.8912, -2.7193, -2.9628, -3.3518, -3.5293], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8099, device='cuda:0', dtype=torch.float64)
tensor([-1.8698, -2.7249, -2.9741, -3.3652, -3.5323], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7454, device='cuda:0', dtype=torch.float64)
tensor([-1.8454, -2.7171, -2.9958, -3.3934, -3.5264], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0198, device='cuda:0', dtype=torch.float64)
tensor([-1.8481, -2.7073, -2.9977, -3.3851, -3.5181], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0110, device='cuda:0', dtype=torch.float64)
tensor([-1.8711, -2.7115, -2.9759, -3.3790, -3.5121], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9334, device='cuda:0', dtype=torch.float64)
tensor([-1.8864, -2.7205, -2.9562, -3.3594, -3.5137], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6698, device='cuda:0', dtype=torch.float64)
tensor([-1.8842, -2.7235, -2.9535, -3.3433, -3.5159], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8054, device='cuda:0', dtype=torch.float64)
tensor([-1.8766, -2.7206, -2.9569, -3.3519, -3.5180], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9953, device='cuda:0', dtype=torch.float64)
tensor([-1.8705, -2.7128, -2.9755, -3.3464, -3.5100], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9513, device='cuda:0', dtype=torch.float64)
tensor([-1.8564, -2.7060, -2.9997, -3.3638, -3.4959], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9024, device='cuda:0', dtype=torch.float64)
tensor([-1.8515, -2.7016, -2.9998, -3.3949, -3.4899], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2675, device='cuda:0', dtype=torch.float64)
tensor([-1.8662, -2.7028, -2.9916, -3.3654, -3.4946], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0265, device='cuda:0', dtype=torch.float64)
tensor([-1.8813, -2.7070, -2.9786, -3.3667, -3.5065], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7258, device='cuda:0', dtype=torch.float64)
tensor([-1.8830, -2.7184, -2.9703, -3.3663, -3.5220], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8514, device='cuda:0', dtype=torch.float64)
tensor([-1.8746, -2.7218, -2.9679, -3.3507, -3.5300], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2785, device='cuda:0', dtype=torch.float64)
tensor([-1.8660, -2.7143, -2.9569, -3.3682, -3.5329], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8647, device='cuda:0', dtype=torch.float64)
tensor([-1.8619, -2.6993, -2.9560, -3.3745, -3.5296], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9505, device='cuda:0', dtype=torch.float64)
tensor([-1.8738, -2.7042, -2.9511, -3.3470, -3.5285], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0592, device='cuda:0', dtype=torch.float64)
tensor([-1.8827, -2.7166, -2.9514, -3.3626, -3.5231], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8147, device='cuda:0', dtype=torch.float64)
tensor([-1.8773, -2.7231, -2.9634, -3.3709, -3.5163], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9236, device='cuda:0', dtype=torch.float64)
tensor([-1.8657, -2.7171, -2.9763, -3.3628, -3.5118], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9930, device='cuda:0', dtype=torch.float64)
tensor([-1.8510, -2.7017, -2.9733, -3.3871, -3.5125], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0821, device='cuda:0', dtype=torch.float64)
tensor([-1.8596, -2.6995, -2.9578, -3.3723, -3.5104], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8201, device='cuda:0', dtype=torch.float64)
tensor([-1.8681, -2.7152, -2.9547, -3.3595, -3.4993], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5307, device='cuda:0', dtype=torch.float64)
tensor([-1.8741, -2.7362, -2.9566, -3.3923, -3.4883], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9393, device='cuda:0', dtype=torch.float64)
tensor([-1.8847, -2.7374, -2.9582, -3.3388, -3.4926], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6606, device='cuda:0', dtype=torch.float64)
tensor([-1.8718, -2.7146, -2.9694, -3.3674, -3.5007], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9613, device='cuda:0', dtype=torch.float64)
tensor([-1.8546, -2.6974, -2.9891, -3.3706, -3.4997], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0696, device='cuda:0', dtype=torch.float64)
tensor([-1.8555, -2.6963, -2.9966, -3.3447, -3.4966], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7135, device='cuda:0', dtype=torch.float64)
tensor([-1.8557, -2.6975, -2.9898, -3.3807, -3.4979], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9428, device='cuda:0', dtype=torch.float64)
tensor([-1.8651, -2.7008, -2.9932, -3.3473, -3.4956], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4317, device='cuda:0', dtype=torch.float64)
tensor([-1.8828, -2.7123, -2.9694, -3.3324, -3.5090], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7458, device='cuda:0', dtype=torch.float64)
tensor([-1.8845, -2.7120, -2.9438, -3.3502, -3.5241], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3739, device='cuda:0', dtype=torch.float64)
tensor([-1.8650, -2.6978, -2.9352, -3.3646, -3.5256], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6421, device='cuda:0', dtype=torch.float64)
tensor([-1.8555, -2.6894, -2.9169, -3.3936, -3.5207], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2217, device='cuda:0', dtype=torch.float64)
tensor([-1.8631, -2.6940, -2.9160, -3.3639, -3.5112], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9929, device='cuda:0', dtype=torch.float64)
tensor([-1.8652, -2.6974, -2.9473, -3.3475, -3.4828], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1642, device='cuda:0', dtype=torch.float64)
tensor([-1.8625, -2.7055, -2.9666, -3.3548, -3.4697], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3759, device='cuda:0', dtype=torch.float64)
tensor([-1.8741, -2.7237, -2.9560, -3.3145, -3.4751], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4532, device='cuda:0', dtype=torch.float64)
tensor([-1.8583, -2.7114, -2.9625, -3.3333, -3.4678], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8404, device='cuda:0', dtype=torch.float64)
tensor([-1.8543, -2.6970, -2.9617, -3.3618, -3.4715], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6514, device='cuda:0', dtype=torch.float64)
tensor([-1.8726, -2.7043, -2.9505, -3.3045, -3.4887], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0913, device='cuda:0', dtype=torch.float64)
tensor([-1.8593, -2.6945, -2.9681, -3.3040, -3.4900], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2161, device='cuda:0', dtype=torch.float64)
tensor([-1.8435, -2.6889, -2.9839, -3.3510, -3.4861], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9952, device='cuda:0', dtype=torch.float64)
tensor([-1.8707, -2.7039, -2.9695, -3.3009, -3.4926], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6719, device='cuda:0', dtype=torch.float64)
tensor([-1.8886, -2.7138, -2.9559, -3.3337, -3.4862], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3874, device='cuda:0', dtype=torch.float64)
tensor([-1.8867, -2.7092, -2.9628, -3.3620, -3.4717], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1504, device='cuda:0', dtype=torch.float64)
tensor([-1.8832, -2.7107, -2.9557, -3.3600, -3.4796], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9452, device='cuda:0', dtype=torch.float64)
tensor([-1.8567, -2.7134, -2.9590, -3.3893, -3.4937], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6556, device='cuda:0', dtype=torch.float64)
tensor([-1.8266, -2.6920, -2.9844, -3.4018, -3.4851], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5641, device='cuda:0', dtype=torch.float64)
tensor([-1.8372, -2.6982, -2.9725, -3.4013, -3.4764], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4702, device='cuda:0', dtype=torch.float64)
tensor([-1.8783, -2.7197, -2.9402, -3.3313, -3.4777], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3740, device='cuda:0', dtype=torch.float64)
tensor([-1.8816, -2.7172, -2.9356, -3.3396, -3.4828], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7679, device='cuda:0', dtype=torch.float64)
tensor([-1.8677, -2.6998, -2.9449, -3.3589, -3.4930], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1028, device='cuda:0', dtype=torch.float64)
tensor([-1.8719, -2.6968, -2.9379, -3.3397, -3.5129], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0824, device='cuda:0', dtype=torch.float64)
tensor([-1.8603, -2.6934, -2.9422, -3.3601, -3.5145], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8481, device='cuda:0', dtype=torch.float64)
tensor([-1.8499, -2.6928, -2.9496, -3.3691, -3.4994], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0310, device='cuda:0', dtype=torch.float64)
tensor([-1.8660, -2.7082, -2.9431, -3.3315, -3.4965], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7593, device='cuda:0', dtype=torch.float64)
tensor([-1.8756, -2.7200, -2.9392, -3.3030, -3.5019], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0294, device='cuda:0', dtype=torch.float64)
tensor([-1.8623, -2.7046, -2.9575, -3.3140, -3.4945], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8720, device='cuda:0', dtype=torch.float64)
tensor([-1.8471, -2.6854, -2.9568, -3.3362, -3.4974], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0105, device='cuda:0', dtype=torch.float64)
tensor([-1.8516, -2.6822, -2.9369, -3.3547, -3.5046], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4996, device='cuda:0', dtype=torch.float64)
tensor([-1.8597, -2.6758, -2.9508, -3.3417, -3.4764], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1112, device='cuda:0', dtype=torch.float64)
tensor([-1.8852, -2.6966, -2.9419, -3.3152, -3.4636], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8461, device='cuda:0', dtype=torch.float64)
tensor([-1.8907, -2.7138, -2.9483, -3.3041, -3.4534], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8455, device='cuda:0', dtype=torch.float64)
tensor([-1.8630, -2.7087, -2.9745, -3.3263, -3.4478], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8705, device='cuda:0', dtype=torch.float64)
tensor([-1.8376, -2.6947, -2.9850, -3.3792, -3.4581], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3390, device='cuda:0', dtype=torch.float64)
tensor([-1.8468, -2.6788, -2.9619, -3.3706, -3.4752], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0930, device='cuda:0', dtype=torch.float64)
tensor([-1.8571, -2.6813, -2.9228, -3.3764, -3.4799], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9102, device='cuda:0', dtype=torch.float64)
tensor([-1.8787, -2.6975, -2.8942, -3.3654, -3.4754], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5099, device='cuda:0', dtype=torch.float64)
tensor([-1.8909, -2.7124, -2.8869, -3.2997, -3.4719], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9195, device='cuda:0', dtype=torch.float64)
tensor([-1.8682, -2.7038, -2.9142, -3.3460, -3.4589], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8067, device='cuda:0', dtype=torch.float64)
tensor([-1.8539, -2.6917, -2.9533, -3.3460, -3.4461], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2415, device='cuda:0', dtype=torch.float64)
tensor([-1.8508, -2.6986, -2.9518, -3.3509, -3.4598], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8751, device='cuda:0', dtype=torch.float64)
tensor([-1.8611, -2.7089, -2.9266, -3.3704, -3.4878], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9766, device='cuda:0', dtype=torch.float64)
tensor([-1.8574, -2.6967, -2.9340, -3.3426, -3.4946], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8902, device='cuda:0', dtype=torch.float64)
tensor([-1.8679, -2.6952, -2.9276, -3.3398, -3.4886], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2780, device='cuda:0', dtype=torch.float64)
tensor([-1.8802, -2.7025, -2.9259, -3.2988, -3.4765], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2852, device='cuda:0', dtype=torch.float64)
tensor([-1.8557, -2.6823, -2.9611, -3.3123, -3.4451], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8484, device='cuda:0', dtype=torch.float64)
tensor([-1.8363, -2.6748, -2.9720, -3.3607, -3.4408], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8171, device='cuda:0', dtype=torch.float64)
tensor([-1.8490, -2.6844, -2.9657, -3.3130, -3.4597], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1593, device='cuda:0', dtype=torch.float64)
tensor([-1.8631, -2.6900, -2.9578, -3.3126, -3.4715], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0247, device='cuda:0', dtype=torch.float64)
tensor([-1.8654, -2.6883, -2.9464, -3.3366, -3.4655], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3782, device='cuda:0', dtype=torch.float64)
tensor([-1.8694, -2.6934, -2.9297, -3.3058, -3.4626], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9940, device='cuda:0', dtype=torch.float64)
tensor([-1.8650, -2.6972, -2.9196, -3.3038, -3.4695], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8867, device='cuda:0', dtype=torch.float64)
tensor([-1.8492, -2.6934, -2.9339, -3.3318, -3.4721], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3267, device='cuda:0', dtype=torch.float64)
tensor([-1.8518, -2.6993, -2.9325, -3.3171, -3.4945], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2941, device='cuda:0', dtype=torch.float64)
tensor([-1.8509, -2.6939, -2.9306, -3.3531, -3.4967], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2809, device='cuda:0', dtype=torch.float64)
tensor([-1.8579, -2.6865, -2.9453, -3.3344, -3.4694], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8157, device='cuda:0', dtype=torch.float64)
tensor([-1.8650, -2.6758, -2.9603, -3.3206, -3.4387], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7309, device='cuda:0', dtype=torch.float64)
tensor([-1.8582, -2.6757, -2.9731, -3.3156, -3.4172], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8627, device='cuda:0', dtype=torch.float64)
tensor([-1.8539, -2.6820, -2.9586, -3.3141, -3.4192], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7772, device='cuda:0', dtype=torch.float64)
tensor([-1.8511, -2.6793, -2.9388, -3.3131, -3.4363], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7330, device='cuda:0', dtype=torch.float64)
tensor([-1.8570, -2.6790, -2.9078, -3.3119, -3.4587], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0805, device='cuda:0', dtype=torch.float64)
tensor([-1.8607, -2.6864, -2.8859, -3.3073, -3.4693], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9772, device='cuda:0', dtype=torch.float64)
tensor([-1.8546, -2.6879, -2.8907, -3.3161, -3.4622], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9129, device='cuda:0', dtype=torch.float64)
tensor([-1.8656, -2.6982, -2.8997, -3.3177, -3.4519], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8104, device='cuda:0', dtype=torch.float64)
tensor([-1.8724, -2.7117, -2.9240, -3.3209, -3.4389], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7431, device='cuda:0', dtype=torch.float64)
tensor([-1.8704, -2.7089, -2.9482, -3.3371, -3.4439], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9420, device='cuda:0', dtype=torch.float64)
tensor([-1.8595, -2.6924, -2.9718, -3.3395, -3.4559], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8422, device='cuda:0', dtype=torch.float64)
tensor([-1.8486, -2.6854, -2.9732, -3.3481, -3.4596], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0055, device='cuda:0', dtype=torch.float64)
tensor([-1.8491, -2.6789, -2.9641, -3.3373, -3.4429], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1861, device='cuda:0', dtype=torch.float64)
tensor([-1.8511, -2.6809, -2.9428, -3.3505, -3.4265], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1750, device='cuda:0', dtype=torch.float64)
tensor([-1.8620, -2.6864, -2.9167, -3.3199, -3.4336], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8056, device='cuda:0', dtype=torch.float64)
tensor([-1.8615, -2.6843, -2.9154, -3.3210, -3.4395], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8965, device='cuda:0', dtype=torch.float64)
tensor([-1.8569, -2.6899, -2.9254, -3.3443, -3.4451], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4209, device='cuda:0', dtype=torch.float64)
tensor([-1.8670, -2.7115, -2.9213, -3.2983, -3.4549], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1138, device='cuda:0', dtype=torch.float64)
tensor([-1.8620, -2.7162, -2.9205, -3.2981, -3.4661], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0820, device='cuda:0', dtype=torch.float64)
tensor([-1.8403, -2.6870, -2.9368, -3.3312, -3.4632], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9258, device='cuda:0', dtype=torch.float64)
tensor([-1.8340, -2.6647, -2.9383, -3.3302, -3.4532], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3255, device='cuda:0', dtype=torch.float64)
tensor([-1.8385, -2.6627, -2.9257, -3.3568, -3.4522], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8588, device='cuda:0', dtype=torch.float64)
tensor([-1.8446, -2.6692, -2.9187, -3.3172, -3.4390], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6960, device='cuda:0', dtype=torch.float64)
tensor([-1.8594, -2.6845, -2.8996, -3.3361, -3.4348], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8191, device='cuda:0', dtype=torch.float64)
tensor([-1.8797, -2.6891, -2.8887, -3.2798, -3.4445], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5089, device='cuda:0', dtype=torch.float64)
tensor([-1.8639, -2.6733, -2.9004, -3.3024, -3.4510], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0540, device='cuda:0', dtype=torch.float64)
tensor([-1.8380, -2.6537, -2.9301, -3.3234, -3.4437], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9027, device='cuda:0', dtype=torch.float64)
tensor([-1.8547, -2.6644, -2.9367, -3.2951, -3.4412], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0008, device='cuda:0', dtype=torch.float64)
tensor([-1.8951, -2.6909, -2.9195, -3.2592, -3.4401], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0040, device='cuda:0', dtype=torch.float64)
tensor([-1.8962, -2.7007, -2.9117, -3.2584, -3.4340], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9458, device='cuda:0', dtype=torch.float64)
tensor([-1.8633, -2.6921, -2.9104, -3.3173, -3.4296], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0195, device='cuda:0', dtype=torch.float64)
tensor([-1.8399, -2.6893, -2.9059, -3.3523, -3.4408], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0848, device='cuda:0', dtype=torch.float64)
tensor([-1.8394, -2.6893, -2.9205, -3.3455, -3.4426], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8599, device='cuda:0', dtype=torch.float64)
tensor([-1.8442, -2.6939, -2.9408, -3.3424, -3.4371], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1330, device='cuda:0', dtype=torch.float64)
tensor([-1.8669, -2.7157, -2.9238, -3.2934, -3.4446], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8829, device='cuda:0', dtype=torch.float64)
tensor([-1.8630, -2.7127, -2.9136, -3.2819, -3.4482], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0042, device='cuda:0', dtype=torch.float64)
tensor([-1.8347, -2.6868, -2.9229, -3.3041, -3.4413], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2285, device='cuda:0', dtype=torch.float64)
tensor([-1.8321, -2.6674, -2.9249, -3.2835, -3.4420], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8718, device='cuda:0', dtype=torch.float64)
tensor([-1.8322, -2.6572, -2.9321, -3.2910, -3.4336], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8748, device='cuda:0', dtype=torch.float64)
tensor([-1.8499, -2.6677, -2.9230, -3.2939, -3.4213], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0049, device='cuda:0', dtype=torch.float64)
tensor([-1.8755, -2.6775, -2.9043, -3.2655, -3.4160], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5681, device='cuda:0', dtype=torch.float64)
tensor([-1.8813, -2.6758, -2.8930, -3.3154, -3.4154], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8427, device='cuda:0', dtype=torch.float64)
tensor([-1.8747, -2.6676, -2.8916, -3.3077, -3.4178], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9856, device='cuda:0', dtype=torch.float64)
tensor([-1.8614, -2.6683, -2.8884, -3.3146, -3.4189], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5512, device='cuda:0', dtype=torch.float64)
tensor([-1.8296, -2.6703, -2.9102, -3.3820, -3.4097], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6161, device='cuda:0', dtype=torch.float64)
tensor([-1.8322, -2.6741, -2.9347, -3.3430, -3.4151], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3955, device='cuda:0', dtype=torch.float64)
tensor([-1.8586, -2.6816, -2.9174, -3.3192, -3.4374], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8334, device='cuda:0', dtype=torch.float64)
tensor([-1.8770, -2.6788, -2.9056, -3.3194, -3.4553], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4050, device='cuda:0', dtype=torch.float64)
tensor([-1.8772, -2.6742, -2.9138, -3.2852, -3.4488], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.4137, device='cuda:0', dtype=torch.float64)
tensor([-1.8532, -2.6945, -2.9036, -3.3141, -3.4563], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.3787, device='cuda:0', dtype=torch.float64)
tensor([-1.8196, -2.6793, -2.9334, -3.3155, -3.4323], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0009, device='cuda:0', dtype=torch.float64)
tensor([-1.8111, -2.6714, -2.9338, -3.3666, -3.4171], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9609, device='cuda:0', dtype=torch.float64)
tensor([-1.8605, -2.6920, -2.8938, -3.2980, -3.4241], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2620, device='cuda:0', dtype=torch.float64)
tensor([-1.8668, -2.6835, -2.8872, -3.2834, -3.4322], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6499, device='cuda:0', dtype=torch.float64)
tensor([-1.8334, -2.6708, -2.9021, -3.3483, -3.4295], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9777, device='cuda:0', dtype=torch.float64)
tensor([-1.8354, -2.6778, -2.9112, -3.3018, -3.4271], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0926, device='cuda:0', dtype=torch.float64)
tensor([-1.8482, -2.6917, -2.9154, -3.2740, -3.4281], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0232, device='cuda:0', dtype=torch.float64)
tensor([-1.8648, -2.6866, -2.9182, -3.2835, -3.4182], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9511, device='cuda:0', dtype=torch.float64)
tensor([-1.8698, -2.6741, -2.9120, -3.2819, -3.4153], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1259, device='cuda:0', dtype=torch.float64)
tensor([-1.8682, -2.6659, -2.9030, -3.3099, -3.4163], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8497, device='cuda:0', dtype=torch.float64)
tensor([-1.8565, -2.6634, -2.8947, -3.3275, -3.4169], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9854, device='cuda:0', dtype=torch.float64)
tensor([-1.8534, -2.6710, -2.8980, -3.2991, -3.4164], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1030, device='cuda:0', dtype=torch.float64)
tensor([-1.8532, -2.6830, -2.8997, -3.3019, -3.4178], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6695, device='cuda:0', dtype=torch.float64)
tensor([-1.8535, -2.6807, -2.9132, -3.2758, -3.3978], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7138, device='cuda:0', dtype=torch.float64)
tensor([-1.8495, -2.6709, -2.9187, -3.3111, -3.3976], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5448, device='cuda:0', dtype=torch.float64)
tensor([-1.8425, -2.6606, -2.9270, -3.2825, -3.4065], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1049, device='cuda:0', dtype=torch.float64)
tensor([-1.8359, -2.6664, -2.9244, -3.2887, -3.4240], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6837, device='cuda:0', dtype=torch.float64)
tensor([-1.8551, -2.6739, -2.9029, -3.2865, -3.4277], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9152, device='cuda:0', dtype=torch.float64)
tensor([-1.8639, -2.6811, -2.8814, -3.2837, -3.4105], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2880, device='cuda:0', dtype=torch.float64)
tensor([-1.8491, -2.6825, -2.8679, -3.3263, -3.3879], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4492, device='cuda:0', dtype=torch.float64)
tensor([-1.8502, -2.6812, -2.8642, -3.3111, -3.3767], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9388, device='cuda:0', dtype=torch.float64)
tensor([-1.8446, -2.6709, -2.8773, -3.3299, -3.3907], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7880, device='cuda:0', dtype=torch.float64)
tensor([-1.8393, -2.6690, -2.8871, -3.3376, -3.4101], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7873, device='cuda:0', dtype=torch.float64)
tensor([-1.8486, -2.6776, -2.8840, -3.3175, -3.4162], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7911, device='cuda:0', dtype=torch.float64)
tensor([-1.8732, -2.6892, -2.8745, -3.2797, -3.4061], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9654, device='cuda:0', dtype=torch.float64)
tensor([-1.8732, -2.6869, -2.8841, -3.2721, -3.4025], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1388, device='cuda:0', dtype=torch.float64)
tensor([-1.8580, -2.6731, -2.9187, -3.2494, -3.4013], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3130, device='cuda:0', dtype=torch.float64)
tensor([-1.8286, -2.6577, -2.9479, -3.2995, -3.4008], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2943, device='cuda:0', dtype=torch.float64)
tensor([-1.8390, -2.6574, -2.9436, -3.2823, -3.4069], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8192, device='cuda:0', dtype=torch.float64)
tensor([-1.8589, -2.6543, -2.9269, -3.2606, -3.4059], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2866, device='cuda:0', dtype=torch.float64)
tensor([-1.8682, -2.6564, -2.9076, -3.2848, -3.4036], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5106, device='cuda:0', dtype=torch.float64)
tensor([-1.8782, -2.6594, -2.8950, -3.2596, -3.4029], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4986, device='cuda:0', dtype=torch.float64)
tensor([-1.8586, -2.6705, -2.8863, -3.3020, -3.4052], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2534, device='cuda:0', dtype=torch.float64)
tensor([-1.8383, -2.6752, -2.8713, -3.3238, -3.4138], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0365, device='cuda:0', dtype=torch.float64)
tensor([-1.8519, -2.6787, -2.8532, -3.3039, -3.4294], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9731, device='cuda:0', dtype=torch.float64)
tensor([-1.8694, -2.6812, -2.8467, -3.2784, -3.4378], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1740, device='cuda:0', dtype=torch.float64)
tensor([-1.8401, -2.6682, -2.8870, -3.2736, -3.4243], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4082, device='cuda:0', dtype=torch.float64)
tensor([-1.8142, -2.6647, -2.9161, -3.3105, -3.4131], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2125, device='cuda:0', dtype=torch.float64)
tensor([-1.8236, -2.6853, -2.9048, -3.2762, -3.4144], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9946, device='cuda:0', dtype=torch.float64)
tensor([-1.8389, -2.6986, -2.8966, -3.2785, -3.4097], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0413, device='cuda:0', dtype=torch.float64)
tensor([-1.8813, -2.7056, -2.8877, -3.2481, -3.4006], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0781, device='cuda:0', dtype=torch.float64)
tensor([-1.8875, -2.6901, -2.8935, -3.2732, -3.3901], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8433, device='cuda:0', dtype=torch.float64)
tensor([-1.8661, -2.6589, -2.9031, -3.2967, -3.4017], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8207, device='cuda:0', dtype=torch.float64)
tensor([-1.8290, -2.6472, -2.9206, -3.3274, -3.4085], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9677, device='cuda:0', dtype=torch.float64)
tensor([-1.8222, -2.6592, -2.9180, -3.3312, -3.4082], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8305, device='cuda:0', dtype=torch.float64)
tensor([-1.8441, -2.6746, -2.9029, -3.3136, -3.3927], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9130, device='cuda:0', dtype=torch.float64)
tensor([-1.8658, -2.6842, -2.8723, -3.2910, -3.3814], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9896, device='cuda:0', dtype=torch.float64)
tensor([-1.8730, -2.6833, -2.8613, -3.2706, -3.3798], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9174, device='cuda:0', dtype=torch.float64)
tensor([-1.8525, -2.6649, -2.8781, -3.2780, -3.3822], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9258, device='cuda:0', dtype=torch.float64)
tensor([-1.8288, -2.6633, -2.8930, -3.3012, -3.3906], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0486, device='cuda:0', dtype=torch.float64)
tensor([-1.8310, -2.6866, -2.8820, -3.2692, -3.4020], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3383, device='cuda:0', dtype=torch.float64)
tensor([-1.8381, -2.6988, -2.8913, -3.2769, -3.3977], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9774, device='cuda:0', dtype=torch.float64)
tensor([-1.8507, -2.6989, -2.9014, -3.2776, -3.3797], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5061, device='cuda:0', dtype=torch.float64)
tensor([-1.8672, -2.6852, -2.8773, -3.2574, -3.3788], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3455, device='cuda:0', dtype=torch.float64)
tensor([-1.8487, -2.6623, -2.8631, -3.3007, -3.3813], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9487, device='cuda:0', dtype=torch.float64)
tensor([-1.8319, -2.6627, -2.8610, -3.2919, -3.3857], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9612, device='cuda:0', dtype=torch.float64)
tensor([-1.8263, -2.6685, -2.8651, -3.2774, -3.4034], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4543, device='cuda:0', dtype=torch.float64)
tensor([-1.8195, -2.6541, -2.8940, -3.2952, -3.4031], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2441, device='cuda:0', dtype=torch.float64)
tensor([-1.8604, -2.6680, -2.8828, -3.2374, -3.4249], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3588, device='cuda:0', dtype=torch.float64)
tensor([-1.8896, -2.6952, -2.8595, -3.2271, -3.4440], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4727, device='cuda:0', dtype=torch.float64)
tensor([-1.8720, -2.6955, -2.8695, -3.2391, -3.4263], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3858, device='cuda:0', dtype=torch.float64)
tensor([-1.8411, -2.6849, -2.8751, -3.2932, -3.4073], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0134, device='cuda:0', dtype=torch.float64)
tensor([-1.8258, -2.6560, -2.9005, -3.3162, -3.3870], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8404, device='cuda:0', dtype=torch.float64)
tensor([-1.8461, -2.6312, -2.9211, -3.3046, -3.3895], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9614, device='cuda:0', dtype=torch.float64)
tensor([-1.8719, -2.6399, -2.9156, -3.3021, -3.3980], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2987, device='cuda:0', dtype=torch.float64)
tensor([-1.8839, -2.6639, -2.9042, -3.2570, -3.3908], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0455, device='cuda:0', dtype=torch.float64)
tensor([-1.8536, -2.6685, -2.8983, -3.2815, -3.3764], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0463, device='cuda:0', dtype=torch.float64)
tensor([-1.8435, -2.6718, -2.8814, -3.2787, -3.3757], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8854, device='cuda:0', dtype=torch.float64)
tensor([-1.8409, -2.6705, -2.8593, -3.2692, -3.3691], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0867, device='cuda:0', dtype=torch.float64)
tensor([-1.8402, -2.6680, -2.8495, -3.2928, -3.3551], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4341, device='cuda:0', dtype=torch.float64)
tensor([-1.8617, -2.6769, -2.8391, -3.2493, -3.3641], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4624, device='cuda:0', dtype=torch.float64)
tensor([-1.8542, -2.6738, -2.8520, -3.2678, -3.3791], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2200, device='cuda:0', dtype=torch.float64)
tensor([-1.8406, -2.6606, -2.8774, -3.2611, -3.3984], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0047, device='cuda:0', dtype=torch.float64)
tensor([-1.8286, -2.6620, -2.8863, -3.2670, -3.3988], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7656, device='cuda:0', dtype=torch.float64)
tensor([-1.8254, -2.6663, -2.8887, -3.2879, -3.3736], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8654, device='cuda:0', dtype=torch.float64)
tensor([-1.8408, -2.6695, -2.8875, -3.2771, -3.3693], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9015, device='cuda:0', dtype=torch.float64)
tensor([-1.8570, -2.6636, -2.8736, -3.2773, -3.3679], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0396, device='cuda:0', dtype=torch.float64)
tensor([-1.8523, -2.6428, -2.8784, -3.2874, -3.3659], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1598, device='cuda:0', dtype=torch.float64)
tensor([-1.8377, -2.6314, -2.8912, -3.3284, -3.3632], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1981, device='cuda:0', dtype=torch.float64)
tensor([-1.8427, -2.6412, -2.9006, -3.3008, -3.3733], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1183, device='cuda:0', dtype=torch.float64)
tensor([-1.8455, -2.6449, -2.9124, -3.3154, -3.3838], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8751, device='cuda:0', dtype=torch.float64)
tensor([-1.8631, -2.6676, -2.9030, -3.2895, -3.3997], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9482, device='cuda:0', dtype=torch.float64)
tensor([-1.8793, -2.6850, -2.8749, -3.2364, -3.4040], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6823, device='cuda:0', dtype=torch.float64)
tensor([-1.8452, -2.6870, -2.8564, -3.2742, -3.3917], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8174, device='cuda:0', dtype=torch.float64)
tensor([-1.8214, -2.6675, -2.8512, -3.2653, -3.3714], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6015, device='cuda:0', dtype=torch.float64)
tensor([-1.8306, -2.6665, -2.8359, -3.2841, -3.3764], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2725, device='cuda:0', dtype=torch.float64)
tensor([-1.8506, -2.6787, -2.8422, -3.2602, -3.3788], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1399, device='cuda:0', dtype=torch.float64)
tensor([-1.8371, -2.6822, -2.8738, -3.2821, -3.3730], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1512, device='cuda:0', dtype=torch.float64)
tensor([-1.8399, -2.6894, -2.8694, -3.3169, -3.3989], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9527, device='cuda:0', dtype=torch.float64)
tensor([-1.8465, -2.6932, -2.8595, -3.2601, -3.4037], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9198, device='cuda:0', dtype=torch.float64)
tensor([-1.8364, -2.6655, -2.8736, -3.2983, -3.3857], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2659, device='cuda:0', dtype=torch.float64)
tensor([-1.8374, -2.6591, -2.8806, -3.2844, -3.3670], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1495, device='cuda:0', dtype=torch.float64)
tensor([-1.8309, -2.6535, -2.8775, -3.2558, -3.3604], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.6959, device='cuda:0', dtype=torch.float64)
tensor([-1.8277, -2.6407, -2.8814, -3.3398, -3.3635], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(3.0699, device='cuda:0', dtype=torch.float64)
tensor([-1.8753, -2.6555, -2.8656, -3.2332, -3.3768], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.7202, device='cuda:0', dtype=torch.float64)
tensor([-1.8907, -2.6610, -2.8554, -3.2700, -3.3753], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.9142, device='cuda:0', dtype=torch.float64)
tensor([-1.8603, -2.6472, -2.8789, -3.2344, -3.3608], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.7914, device='cuda:0', dtype=torch.float64)
tensor([-1.8368, -2.6527, -2.8802, -3.2799, -3.3688], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.3827, device='cuda:0', dtype=torch.float64)
tensor([-1.8309, -2.6654, -2.8829, -3.2398, -3.3759], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3431, device='cuda:0', dtype=torch.float64)
tensor([-1.8340, -2.6670, -2.8835, -3.2476, -3.3789], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0518, device='cuda:0', dtype=torch.float64)
tensor([-1.8493, -2.6704, -2.8607, -3.2580, -3.3855], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5463, device='cuda:0', dtype=torch.float64)
tensor([-1.8660, -2.6790, -2.8414, -3.2192, -3.3751], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.2066, device='cuda:0', dtype=torch.float64)
tensor([-1.8528, -2.6757, -2.8580, -3.2897, -3.3674], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9974, device='cuda:0', dtype=torch.float64)
tensor([-1.8481, -2.6826, -2.8582, -3.2477, -3.3692], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4745, device='cuda:0', dtype=torch.float64)
tensor([-1.8121, -2.6712, -2.8683, -3.2876, -3.3600], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0202, device='cuda:0', dtype=torch.float64)
tensor([-1.8021, -2.6544, -2.8856, -3.3083, -3.3551], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2368, device='cuda:0', dtype=torch.float64)
tensor([-1.8287, -2.6638, -2.8820, -3.2625, -3.3578], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2614, device='cuda:0', dtype=torch.float64)
tensor([-1.8585, -2.6831, -2.8659, -3.2376, -3.3701], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1987, device='cuda:0', dtype=torch.float64)
tensor([-1.8527, -2.6743, -2.8798, -3.2268, -3.3634], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0300, device='cuda:0', dtype=torch.float64)
tensor([-1.8438, -2.6580, -2.9013, -3.2267, -3.3610], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7939, device='cuda:0', dtype=torch.float64)
tensor([-1.8370, -2.6427, -2.9066, -3.2378, -3.3650], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2053, device='cuda:0', dtype=torch.float64)
tensor([-1.8223, -2.6416, -2.9098, -3.2622, -3.3666], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2279, device='cuda:0', dtype=torch.float64)
tensor([-1.8498, -2.6681, -2.8664, -3.2646, -3.3884], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2861, device='cuda:0', dtype=torch.float64)
tensor([-1.8715, -2.6805, -2.8426, -3.2429, -3.3894], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4137, device='cuda:0', dtype=torch.float64)
tensor([-1.8642, -2.6570, -2.8690, -3.2836, -3.3734], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4146, device='cuda:0', dtype=torch.float64)
tensor([-1.8624, -2.6421, -2.8785, -3.2579, -3.3615], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9220, device='cuda:0', dtype=torch.float64)
tensor([-1.8515, -2.6418, -2.8659, -3.2729, -3.3484], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2401, device='cuda:0', dtype=torch.float64)
tensor([-1.8373, -2.6620, -2.8480, -3.2959, -3.3357], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6403, device='cuda:0', dtype=torch.float64)
tensor([-1.8570, -2.6896, -2.8114, -3.2441, -3.3405], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9772, device='cuda:0', dtype=torch.float64)
tensor([-1.8418, -2.6965, -2.8172, -3.2496, -3.3548], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1349, device='cuda:0', dtype=torch.float64)
tensor([-1.8072, -2.6837, -2.8571, -3.2956, -3.3608], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6203, device='cuda:0', dtype=torch.float64)
tensor([-1.8395, -2.6946, -2.8560, -3.2573, -3.3807], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1524, device='cuda:0', dtype=torch.float64)
tensor([-1.8429, -2.6640, -2.8818, -3.2712, -3.3761], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3669, device='cuda:0', dtype=torch.float64)
tensor([-1.8413, -2.6370, -2.8901, -3.3202, -3.3648], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7110, device='cuda:0', dtype=torch.float64)
tensor([-1.8523, -2.6315, -2.8477, -3.2737, -3.3739], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1372, device='cuda:0', dtype=torch.float64)
tensor([-1.8478, -2.6347, -2.8313, -3.2707, -3.3772], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2244, device='cuda:0', dtype=torch.float64)
tensor([-1.8264, -2.6293, -2.8719, -3.2989, -3.3761], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4451, device='cuda:0', dtype=torch.float64)
tensor([-1.8475, -2.6559, -2.8897, -3.2563, -3.3779], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5711, device='cuda:0', dtype=torch.float64)
tensor([-1.8615, -2.6796, -2.8670, -3.2744, -3.3780], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5482, device='cuda:0', dtype=torch.float64)
tensor([-1.8536, -2.6813, -2.8631, -3.2656, -3.3609], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0753, device='cuda:0', dtype=torch.float64)
tensor([-1.8262, -2.6584, -2.8525, -3.2635, -3.3605], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1824, device='cuda:0', dtype=torch.float64)
tensor([-1.8199, -2.6378, -2.8458, -3.2538, -3.3743], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7362, device='cuda:0', dtype=torch.float64)
tensor([-1.8194, -2.6300, -2.8627, -3.2512, -3.3673], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7980, device='cuda:0', dtype=torch.float64)
tensor([-1.8384, -2.6530, -2.8700, -3.2740, -3.3651], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7401, device='cuda:0', dtype=torch.float64)
tensor([-1.8703, -2.6892, -2.8617, -3.2211, -3.3657], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4390, device='cuda:0', dtype=torch.float64)
tensor([-1.8539, -2.6840, -2.8681, -3.2366, -3.3482], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0631, device='cuda:0', dtype=torch.float64)
tensor([-1.8346, -2.6616, -2.8498, -3.2799, -3.3418], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4802, device='cuda:0', dtype=torch.float64)
tensor([-1.8329, -2.6405, -2.8315, -3.2447, -3.3255], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.2442, device='cuda:0', dtype=torch.float64)
tensor([-1.8158, -2.6148, -2.8433, -3.3072, -3.3271], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9276, device='cuda:0', dtype=torch.float64)
tensor([-1.8241, -2.6304, -2.8653, -3.2654, -3.3433], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4648, device='cuda:0', dtype=torch.float64)
tensor([-1.8490, -2.6697, -2.8596, -3.2548, -3.3780], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0654, device='cuda:0', dtype=torch.float64)
tensor([-1.8666, -2.6997, -2.8404, -3.2481, -3.4059], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1722, device='cuda:0', dtype=torch.float64)
tensor([-1.8698, -2.6964, -2.8147, -3.2209, -3.4071], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2700, device='cuda:0', dtype=torch.float64)
tensor([-1.8494, -2.6599, -2.8223, -3.2645, -3.3889], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1841, device='cuda:0', dtype=torch.float64)
tensor([-1.8421, -2.6343, -2.8374, -3.2624, -3.3669], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0933, device='cuda:0', dtype=torch.float64)
tensor([-1.8204, -2.6272, -2.8732, -3.2714, -3.3472], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6578, device='cuda:0', dtype=torch.float64)
tensor([-1.8206, -2.6450, -2.8943, -3.3204, -3.3306], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9256, device='cuda:0', dtype=torch.float64)
tensor([-1.8680, -2.6772, -2.8781, -3.2319, -3.3321], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0711, device='cuda:0', dtype=torch.float64)
tensor([-1.8612, -2.6806, -2.8429, -3.2499, -3.3426], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6668, device='cuda:0', dtype=torch.float64)
tensor([-1.8299, -2.6720, -2.8307, -3.2354, -3.3546], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9640, device='cuda:0', dtype=torch.float64)
tensor([-1.8296, -2.6669, -2.8202, -3.2070, -3.3753], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7818, device='cuda:0', dtype=torch.float64)
tensor([-1.8433, -2.6569, -2.8394, -3.2494, -3.3861], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(3.3230, device='cuda:0', dtype=torch.float64)
tensor([-1.8650, -2.6328, -2.8912, -3.2069, -3.3682], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(5.1661, device='cuda:0', dtype=torch.float64)
tensor([-1.8694, -2.7447, -2.8959, -3.4980, -3.4115], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(13.3903, device='cuda:0', dtype=torch.float64)
tensor([-50.9220, -11.5886, -26.1960, -10.0313,  -3.9978], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(183.9783, device='cuda:0', dtype=torch.float64)
tensor([ -725.8094, -1949.7210, -1039.7052,  -905.4996,  -846.9985],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1283.9834, device='cuda:0', dtype=torch.float64)
tensor([-213.7198, -558.3651, -132.3867, -165.5702, -312.2430],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(608.2938, device='cuda:0', dtype=torch.float64)
tensor([-1275.3457, -1092.3439,  -400.3563,  -814.2415,  -880.8081],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1278.1033, device='cuda:0', dtype=torch.float64)
tensor([-129.1018, -411.6105, -164.2424, -429.6716, -481.4306],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(496.5516, device='cuda:0', dtype=torch.float64)
tensor([ -43.5823, -132.8917,  -78.5239, -212.5320, -104.7624],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(149.4687, device='cuda:0', dtype=torch.float64)
tensor([-105.6461, -176.8755,  -93.8783, -176.3061,  -85.3425],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(235.9727, device='cuda:0', dtype=torch.float64)
tensor([-161.3030, -212.0597, -157.9521, -198.6812, -114.9040],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(254.2691, device='cuda:0', dtype=torch.float64)
tensor([-170.6712, -246.1686, -169.4810, -210.8531, -131.8289],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(254.7110, device='cuda:0', dtype=torch.float64)
tensor([-147.4939, -207.0914, -148.6824, -201.8198, -135.6246],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(210.5601, device='cuda:0', dtype=torch.float64)
tensor([-105.2085, -155.1846,  -98.4053, -183.8824, -131.3332],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(161.6449, device='cuda:0', dtype=torch.float64)
tensor([ -66.8329, -134.4335,  -66.5847, -157.4031, -115.8398],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(129.4995, device='cuda:0', dtype=torch.float64)
tensor([ -39.7514, -116.2909,  -49.6811, -120.4939, -103.2027],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(98.5347, device='cuda:0', dtype=torch.float64)
tensor([ -35.9547, -102.4860,  -43.7049,  -89.9640,  -92.4990],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(82.3475, device='cuda:0', dtype=torch.float64)
tensor([-40.5068, -93.8972, -42.5457, -73.7994, -84.7286], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(77.6336, device='cuda:0', dtype=torch.float64)
tensor([-42.6522, -90.9733, -43.7662, -64.8458, -79.1605], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(79.6869, device='cuda:0', dtype=torch.float64)
tensor([-41.8943, -91.7742, -43.7535, -59.5407, -71.6023], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(75.5835, device='cuda:0', dtype=torch.float64)
tensor([-38.4337, -88.6881, -44.1481, -54.9313, -63.1316], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(67.6982, device='cuda:0', dtype=torch.float64)
tensor([-31.8773, -76.7675, -41.4782, -50.0380, -55.8169], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(60.3086, device='cuda:0', dtype=torch.float64)
tensor([-24.7092, -59.4751, -37.1480, -46.7646, -50.4273], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(54.7156, device='cuda:0', dtype=torch.float64)
tensor([-18.2254, -45.4271, -33.2285, -45.1822, -47.6269], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(47.5425, device='cuda:0', dtype=torch.float64)
tensor([-14.1468, -38.7619, -29.5463, -44.2297, -46.7952], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(40.9069, device='cuda:0', dtype=torch.float64)
tensor([-12.4118, -37.6708, -26.5544, -43.1577, -46.7221], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(38.5138, device='cuda:0', dtype=torch.float64)
tensor([-11.5458, -38.1464, -24.1690, -40.8457, -46.6160], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(36.1748, device='cuda:0', dtype=torch.float64)
tensor([-11.1249, -37.5698, -22.3131, -37.8246, -46.3873], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(33.7860, device='cuda:0', dtype=torch.float64)
tensor([-11.0165, -35.9870, -21.0254, -34.7727, -46.1379], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(31.8764, device='cuda:0', dtype=torch.float64)
tensor([-11.0371, -33.8244, -20.0423, -31.7866, -45.9166], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(30.0744, device='cuda:0', dtype=torch.float64)
tensor([-11.0261, -31.3751, -19.1791, -28.7264, -45.5083], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(28.1989, device='cuda:0', dtype=torch.float64)
tensor([-11.0230, -29.0678, -18.2793, -25.9563, -44.6996], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(26.4952, device='cuda:0', dtype=torch.float64)
tensor([-11.1268, -27.2882, -17.4155, -23.9471, -43.4462], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(24.4714, device='cuda:0', dtype=torch.float64)
tensor([-11.3223, -26.2898, -16.7516, -22.6910, -41.8168], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(22.7876, device='cuda:0', dtype=torch.float64)
tensor([-11.4785, -26.0344, -16.3095, -21.7978, -40.0530], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(21.4667, device='cuda:0', dtype=torch.float64)
tensor([-11.4776, -26.1169, -15.9935, -21.0237, -38.3451], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(20.7396, device='cuda:0', dtype=torch.float64)
tensor([-11.2722, -26.1504, -15.7175, -20.2537, -36.6702], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(20.4964, device='cuda:0', dtype=torch.float64)
tensor([-10.8607, -25.9712, -15.3964, -19.4528, -34.9210], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(20.4042, device='cuda:0', dtype=torch.float64)
tensor([-10.2689, -25.6167, -14.9754, -18.6458, -33.0289], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(19.8536, device='cuda:0', dtype=torch.float64)
tensor([ -9.5655, -25.2728, -14.4354, -17.9264, -31.0118], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(18.5660, device='cuda:0', dtype=torch.float64)
tensor([ -8.8469, -25.0300, -13.8258, -17.3521, -28.9828], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(16.9063, device='cuda:0', dtype=torch.float64)
tensor([ -8.2086, -24.8380, -13.2355, -16.9129, -27.0681], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(15.3892, device='cuda:0', dtype=torch.float64)
tensor([ -7.6665, -24.6497, -12.7250, -16.6645, -25.3733], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(13.9080, device='cuda:0', dtype=torch.float64)
tensor([ -7.2031, -24.4175, -12.3310, -16.5667, -23.9692], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(12.5706, device='cuda:0', dtype=torch.float64)
tensor([ -6.7989, -24.0736, -12.0584, -16.5528, -22.8698], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(11.5025, device='cuda:0', dtype=torch.float64)
tensor([ -6.4432, -23.6068, -11.8950, -16.5577, -22.0470], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(10.8174, device='cuda:0', dtype=torch.float64)
tensor([ -6.1258, -23.0109, -11.8139, -16.5469, -21.4458], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(10.4551, device='cuda:0', dtype=torch.float64)
tensor([ -5.8562, -22.2941, -11.7848, -16.4954, -21.0126], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(10.0718, device='cuda:0', dtype=torch.float64)
tensor([ -5.6438, -21.4879, -11.7782, -16.3839, -20.7024], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(9.7416, device='cuda:0', dtype=torch.float64)
tensor([ -5.4941, -20.6426, -11.7660, -16.2130, -20.4892], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(9.3655, device='cuda:0', dtype=torch.float64)
tensor([ -5.4100, -19.8121, -11.7328, -16.0007, -20.3550], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(9.0285, device='cuda:0', dtype=torch.float64)
tensor([ -5.3799, -19.0337, -11.6786, -15.7746, -20.2830], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(8.6041, device='cuda:0', dtype=torch.float64)
tensor([ -5.3884, -18.3369, -11.6044, -15.5545, -20.2538], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(8.3619, device='cuda:0', dtype=torch.float64)
tensor([ -5.4176, -17.7345, -11.5159, -15.3600, -20.2448], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(8.2611, device='cuda:0', dtype=torch.float64)
tensor([ -5.4473, -17.2271, -11.4131, -15.1882, -20.2281], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(8.1497, device='cuda:0', dtype=torch.float64)
tensor([ -5.4575, -16.8043, -11.2992, -15.0339, -20.1745], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(7.8448, device='cuda:0', dtype=torch.float64)
tensor([ -5.4335, -16.4563, -11.1735, -14.8859, -20.0675], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(7.8039, device='cuda:0', dtype=torch.float64)
tensor([ -5.3699, -16.1660, -11.0393, -14.7329, -19.8979], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(7.6132, device='cuda:0', dtype=torch.float64)
tensor([ -5.2732, -15.9249, -10.8985, -14.5673, -19.6679], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(7.5095, device='cuda:0', dtype=torch.float64)
tensor([ -5.1511, -15.7179, -10.7606, -14.3854, -19.3903], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(7.1721, device='cuda:0', dtype=torch.float64)
tensor([ -5.0225, -15.5410, -10.6267, -14.1893, -19.0799], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(7.0007, device='cuda:0', dtype=torch.float64)
tensor([ -4.8992, -15.3842, -10.5009, -13.9769, -18.7543], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(6.7386, device='cuda:0', dtype=torch.float64)
tensor([ -4.7898, -15.2378, -10.3863, -13.7507, -18.4288], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(6.5717, device='cuda:0', dtype=torch.float64)
tensor([ -4.7003, -15.0949, -10.2855, -13.5157, -18.1186], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(6.3346, device='cuda:0', dtype=torch.float64)
tensor([ -4.6299, -14.9480, -10.2002, -13.2813, -17.8352], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(6.0586, device='cuda:0', dtype=torch.float64)
tensor([ -4.5753, -14.8000, -10.1275, -13.0544, -17.5811], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(5.8521, device='cuda:0', dtype=torch.float64)
tensor([ -4.5338, -14.6475, -10.0649, -12.8443, -17.3545], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(5.6120, device='cuda:0', dtype=torch.float64)
tensor([ -4.5016, -14.4845, -10.0099, -12.6536, -17.1583], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(5.4228, device='cuda:0', dtype=torch.float64)
tensor([ -4.4740, -14.3103,  -9.9576, -12.4803, -16.9859], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(5.3452, device='cuda:0', dtype=torch.float64)
tensor([ -4.4494, -14.1295,  -9.9059, -12.3288, -16.8324], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(5.1180, device='cuda:0', dtype=torch.float64)
tensor([ -4.4256, -13.9434,  -9.8550, -12.1973, -16.6923], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(5.0116, device='cuda:0', dtype=torch.float64)
tensor([ -4.4005, -13.7546,  -9.8027, -12.0895, -16.5652], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(5.0112, device='cuda:0', dtype=torch.float64)
tensor([ -4.3755, -13.5662,  -9.7483, -12.0014, -16.4489], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(4.9494, device='cuda:0', dtype=torch.float64)
tensor([ -4.3506, -13.3842,  -9.6918, -11.9315, -16.3401], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(4.8584, device='cuda:0', dtype=torch.float64)
tensor([ -4.3267, -13.2077,  -9.6344, -11.8767, -16.2370], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(4.8984, device='cuda:0', dtype=torch.float64)
tensor([ -4.3011, -13.0359,  -9.5779, -11.8330, -16.1371], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(4.9017, device='cuda:0', dtype=torch.float64)
tensor([ -4.2762, -12.8713,  -9.5230, -11.7966, -16.0374], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(4.8736, device='cuda:0', dtype=torch.float64)
tensor([ -4.2498, -12.7138,  -9.4721, -11.7665, -15.9344], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(4.8276, device='cuda:0', dtype=torch.float64)
tensor([ -4.2198, -12.5653,  -9.4262, -11.7426, -15.8293], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(4.7683, device='cuda:0', dtype=torch.float64)
tensor([ -4.1865, -12.4251,  -9.3856, -11.7222, -15.7218], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(4.4887, device='cuda:0', dtype=torch.float64)
tensor([ -4.1506, -12.2897,  -9.3489, -11.7053, -15.6131], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(4.3693, device='cuda:0', dtype=torch.float64)
tensor([ -4.1141, -12.1592,  -9.3137, -11.6911, -15.5063], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(4.2918, device='cuda:0', dtype=torch.float64)
tensor([ -4.0791, -12.0358,  -9.2778, -11.6808, -15.4026], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(4.1561, device='cuda:0', dtype=torch.float64)
tensor([ -4.0438, -11.9182,  -9.2405, -11.6761, -15.3028], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(4.0512, device='cuda:0', dtype=torch.float64)
tensor([ -4.0103, -11.8074,  -9.1988, -11.6793, -15.2034], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(4.0358, device='cuda:0', dtype=torch.float64)
tensor([ -3.9775, -11.7010,  -9.1530, -11.6829, -15.1060], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(3.9416, device='cuda:0', dtype=torch.float64)
tensor([ -3.9456, -11.5968,  -9.1022, -11.6852, -15.0129], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(3.8575, device='cuda:0', dtype=torch.float64)
tensor([ -3.9143, -11.4976,  -9.0454, -11.6835, -14.9222], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(3.8018, device='cuda:0', dtype=torch.float64)
tensor([ -3.8836, -11.4015,  -8.9852, -11.6743, -14.8357], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(3.7909, device='cuda:0', dtype=torch.float64)
tensor([ -3.8547, -11.3102,  -8.9202, -11.6594, -14.7501], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(3.7741, device='cuda:0', dtype=torch.float64)
tensor([ -3.8306, -11.2247,  -8.8531, -11.6381, -14.6659], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(3.7270, device='cuda:0', dtype=torch.float64)
tensor([ -3.8145, -11.1461,  -8.7799, -11.6069, -14.5857], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(3.6595, device='cuda:0', dtype=torch.float64)
tensor([ -3.8054, -11.0733,  -8.7028, -11.5709, -14.5110], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(3.6718, device='cuda:0', dtype=torch.float64)
tensor([ -3.7998, -11.0033,  -8.6261, -11.5304, -14.4381], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(3.6654, device='cuda:0', dtype=torch.float64)
tensor([ -3.8018, -10.9427,  -8.5479, -11.4896, -14.3659], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(3.6343, device='cuda:0', dtype=torch.float64)
tensor([ -3.8079, -10.8892,  -8.4694, -11.4480, -14.2948], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(3.6187, device='cuda:0', dtype=torch.float64)
tensor([ -3.8156, -10.8363,  -8.3924, -11.4091, -14.2223], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(3.5236, device='cuda:0', dtype=torch.float64)
tensor([ -3.8258, -10.7869,  -8.3164, -11.3706, -14.1503], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(3.4398, device='cuda:0', dtype=torch.float64)
tensor([ -3.8339, -10.7383,  -8.2446, -11.3334, -14.0775], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(3.4861, device='cuda:0', dtype=torch.float64)
tensor([ -3.8370, -10.6851,  -8.1773, -11.2996, -14.0090], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(3.4356, device='cuda:0', dtype=torch.float64)
tensor([ -3.8353, -10.6295,  -8.1145, -11.2675, -13.9422], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(3.3902, device='cuda:0', dtype=torch.float64)
tensor([ -3.8286, -10.5747,  -8.0561, -11.2440, -13.8761], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(3.4236, device='cuda:0', dtype=torch.float64)
tensor([ -3.8162, -10.5188,  -7.9997, -11.2257, -13.8090], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(3.3538, device='cuda:0', dtype=torch.float64)
tensor([ -3.7984, -10.4592,  -7.9465, -11.2071, -13.7432], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(3.3047, device='cuda:0', dtype=torch.float64)
tensor([ -3.7771, -10.3985,  -7.8966, -11.1913, -13.6755], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(3.2645, device='cuda:0', dtype=torch.float64)
tensor([ -3.7537, -10.3338,  -7.8473, -11.1749, -13.6109], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(3.2632, device='cuda:0', dtype=torch.float64)
tensor([ -3.7287, -10.2672,  -7.7999, -11.1551, -13.5459], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(3.1887, device='cuda:0', dtype=torch.float64)
tensor([ -3.7020, -10.1973,  -7.7548, -11.1314, -13.4817], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(3.1593, device='cuda:0', dtype=torch.float64)
tensor([ -3.6763, -10.1245,  -7.7125, -11.0997, -13.4158], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(3.1210, device='cuda:0', dtype=torch.float64)
tensor([ -3.6531, -10.0517,  -7.6716, -11.0594, -13.3477], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(3.0910, device='cuda:0', dtype=torch.float64)
tensor([ -3.6322,  -9.9800,  -7.6323, -11.0191, -13.2803], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(3.0853, device='cuda:0', dtype=torch.float64)
tensor([ -3.6145,  -9.9117,  -7.5956, -10.9766, -13.2106], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(3.0474, device='cuda:0', dtype=torch.float64)
tensor([ -3.6012,  -9.8504,  -7.5596, -10.9309, -13.1378], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(3.0769, device='cuda:0', dtype=torch.float64)
tensor([ -3.5923,  -9.7947,  -7.5228, -10.8846, -13.0620], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(3.0863, device='cuda:0', dtype=torch.float64)
tensor([ -3.5876,  -9.7426,  -7.4843, -10.8386, -12.9825], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(3.1039, device='cuda:0', dtype=torch.float64)
tensor([ -3.5839,  -9.6937,  -7.4469, -10.7936, -12.9012], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(3.0842, device='cuda:0', dtype=torch.float64)
tensor([ -3.5810,  -9.6462,  -7.4083, -10.7511, -12.8181], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(3.0084, device='cuda:0', dtype=torch.float64)
tensor([ -3.5781,  -9.5995,  -7.3705, -10.7118, -12.7372], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.9815, device='cuda:0', dtype=torch.float64)
tensor([ -3.5749,  -9.5530,  -7.3342, -10.6772, -12.6571], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(3.0164, device='cuda:0', dtype=torch.float64)
tensor([ -3.5701,  -9.5017,  -7.2996, -10.6438, -12.5817], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.9396, device='cuda:0', dtype=torch.float64)
tensor([ -3.5621,  -9.4453,  -7.2670, -10.6133, -12.5083], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.9304, device='cuda:0', dtype=torch.float64)
tensor([ -3.5525,  -9.3873,  -7.2366, -10.5796, -12.4394], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.9333, device='cuda:0', dtype=torch.float64)
tensor([ -3.5425,  -9.3288,  -7.2072, -10.5489, -12.3705], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.9276, device='cuda:0', dtype=torch.float64)
tensor([ -3.5332,  -9.2711,  -7.1761, -10.5204, -12.3014], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.9343, device='cuda:0', dtype=torch.float64)
tensor([ -3.5248,  -9.2147,  -7.1447, -10.4921, -12.2323], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.9694, device='cuda:0', dtype=torch.float64)
tensor([ -3.5171,  -9.1609,  -7.1140, -10.4641, -12.1634], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.8140, device='cuda:0', dtype=torch.float64)
tensor([ -3.5095,  -9.1081,  -7.0830, -10.4369, -12.0978], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.8330, device='cuda:0', dtype=torch.float64)
tensor([ -3.4981,  -9.0535,  -7.0534, -10.4122, -12.0329], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.7482, device='cuda:0', dtype=torch.float64)
tensor([ -3.4862,  -8.9990,  -7.0219, -10.3883, -11.9683], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.8076, device='cuda:0', dtype=torch.float64)
tensor([ -3.4729,  -8.9446,  -6.9897, -10.3598, -11.9046], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.7638, device='cuda:0', dtype=torch.float64)
tensor([ -3.4601,  -8.8894,  -6.9570, -10.3288, -11.8413], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.8090, device='cuda:0', dtype=torch.float64)
tensor([ -3.4470,  -8.8348,  -6.9256, -10.2976, -11.7790], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.7793, device='cuda:0', dtype=torch.float64)
tensor([ -3.4354,  -8.7829,  -6.8947, -10.2680, -11.7205], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.7392, device='cuda:0', dtype=torch.float64)
tensor([ -3.4242,  -8.7333,  -6.8642, -10.2381, -11.6647], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.7069, device='cuda:0', dtype=torch.float64)
tensor([ -3.4133,  -8.6857,  -6.8330, -10.2077, -11.6077], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.7229, device='cuda:0', dtype=torch.float64)
tensor([ -3.4013,  -8.6375,  -6.8023, -10.1762, -11.5524], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.6473, device='cuda:0', dtype=torch.float64)
tensor([ -3.3916,  -8.5914,  -6.7708, -10.1415, -11.4946], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.6734, device='cuda:0', dtype=torch.float64)
tensor([ -3.3826,  -8.5466,  -6.7407, -10.1094, -11.4357], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.6837, device='cuda:0', dtype=torch.float64)
tensor([ -3.3746,  -8.5047,  -6.7100, -10.0789, -11.3759], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.6840, device='cuda:0', dtype=torch.float64)
tensor([ -3.3672,  -8.4651,  -6.6785, -10.0520, -11.3147], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.6027, device='cuda:0', dtype=torch.float64)
tensor([ -3.3607,  -8.4277,  -6.6468, -10.0254, -11.2545], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.6116, device='cuda:0', dtype=torch.float64)
tensor([ -3.3527,  -8.3933,  -6.6165, -10.0008, -11.1974], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.6215, device='cuda:0', dtype=torch.float64)
tensor([ -3.3432,  -8.3596,  -6.5855,  -9.9770, -11.1407], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.5646, device='cuda:0', dtype=torch.float64)
tensor([ -3.3314,  -8.3249,  -6.5531,  -9.9543, -11.0854], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.6538, device='cuda:0', dtype=torch.float64)
tensor([ -3.3212,  -8.2906,  -6.5160,  -9.9332, -11.0313], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.6263, device='cuda:0', dtype=torch.float64)
tensor([ -3.3110,  -8.2563,  -6.4773,  -9.9115, -10.9813], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.5323, device='cuda:0', dtype=torch.float64)
tensor([ -3.3023,  -8.2234,  -6.4337,  -9.8865, -10.9333], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.5759, device='cuda:0', dtype=torch.float64)
tensor([ -3.2933,  -8.1913,  -6.3862,  -9.8627, -10.8847], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.5811, device='cuda:0', dtype=torch.float64)
tensor([ -3.2816,  -8.1613,  -6.3423,  -9.8405, -10.8371], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.5749, device='cuda:0', dtype=torch.float64)
tensor([ -3.2701,  -8.1342,  -6.3009,  -9.8192, -10.7900], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.5031, device='cuda:0', dtype=torch.float64)
tensor([ -3.2590,  -8.1100,  -6.2623,  -9.7958, -10.7398], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.5357, device='cuda:0', dtype=torch.float64)
tensor([ -3.2491,  -8.0872,  -6.2276,  -9.7725, -10.6892], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.5655, device='cuda:0', dtype=torch.float64)
tensor([ -3.2387,  -8.0648,  -6.1969,  -9.7517, -10.6395], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.5796, device='cuda:0', dtype=torch.float64)
tensor([ -3.2291,  -8.0411,  -6.1697,  -9.7295, -10.5899], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.5237, device='cuda:0', dtype=torch.float64)
tensor([ -3.2204,  -8.0193,  -6.1466,  -9.7040, -10.5388], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.5571, device='cuda:0', dtype=torch.float64)
tensor([ -3.2121,  -7.9974,  -6.1264,  -9.6802, -10.4890], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.4863, device='cuda:0', dtype=torch.float64)
tensor([ -3.2065,  -7.9729,  -6.1080,  -9.6509, -10.4414], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.5565, device='cuda:0', dtype=torch.float64)
tensor([ -3.2016,  -7.9461,  -6.0935,  -9.6209, -10.3931], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.4690, device='cuda:0', dtype=torch.float64)
tensor([ -3.1963,  -7.9163,  -6.0786,  -9.5937, -10.3469], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.4887, device='cuda:0', dtype=torch.float64)
tensor([ -3.1924,  -7.8850,  -6.0634,  -9.5632, -10.3021], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.4518, device='cuda:0', dtype=torch.float64)
tensor([ -3.1865,  -7.8509,  -6.0502,  -9.5318, -10.2581], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.4174, device='cuda:0', dtype=torch.float64)
tensor([ -3.1809,  -7.8154,  -6.0362,  -9.5011, -10.2141], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.4585, device='cuda:0', dtype=torch.float64)
tensor([ -3.1762,  -7.7799,  -6.0202,  -9.4720, -10.1706], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.4373, device='cuda:0', dtype=torch.float64)
tensor([ -3.1710,  -7.7430,  -6.0028,  -9.4464, -10.1288], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.4156, device='cuda:0', dtype=torch.float64)
tensor([ -3.1663,  -7.7076,  -5.9837,  -9.4270, -10.0862], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.3917, device='cuda:0', dtype=torch.float64)
tensor([ -3.1621,  -7.6763,  -5.9649,  -9.4098, -10.0423], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.3790, device='cuda:0', dtype=torch.float64)
tensor([-3.1588, -7.6485, -5.9462, -9.3965, -9.9955], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.3222, device='cuda:0', dtype=torch.float64)
tensor([-3.1550, -7.6206, -5.9299, -9.3820, -9.9504], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.3384, device='cuda:0', dtype=torch.float64)
tensor([-3.1484, -7.5927, -5.9164, -9.3678, -9.9031], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.3384, device='cuda:0', dtype=torch.float64)
tensor([-3.1408, -7.5637, -5.9042, -9.3567, -9.8593], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.3048, device='cuda:0', dtype=torch.float64)
tensor([-3.1303, -7.5343, -5.8933, -9.3486, -9.8139], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.3701, device='cuda:0', dtype=torch.float64)
tensor([-3.1198, -7.5032, -5.8842, -9.3389, -9.7714], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.3481, device='cuda:0', dtype=torch.float64)
tensor([-3.1097, -7.4713, -5.8748, -9.3267, -9.7302], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.3534, device='cuda:0', dtype=torch.float64)
tensor([-3.1007, -7.4386, -5.8650, -9.3083, -9.6911], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.3057, device='cuda:0', dtype=torch.float64)
tensor([-3.0919, -7.4060, -5.8528, -9.2872, -9.6515], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.3398, device='cuda:0', dtype=torch.float64)
tensor([-3.0850, -7.3743, -5.8393, -9.2594, -9.6118], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.3309, device='cuda:0', dtype=torch.float64)
tensor([-3.0793, -7.3432, -5.8221, -9.2285, -9.5720], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.2996, device='cuda:0', dtype=torch.float64)
tensor([-3.0755, -7.3145, -5.8022, -9.1958, -9.5323], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.2582, device='cuda:0', dtype=torch.float64)
tensor([-3.0712, -7.2871, -5.7836, -9.1654, -9.4962], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.3300, device='cuda:0', dtype=torch.float64)
tensor([-3.0678, -7.2607, -5.7639, -9.1348, -9.4606], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.2472, device='cuda:0', dtype=torch.float64)
tensor([-3.0628, -7.2361, -5.7441, -9.1066, -9.4255], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.2608, device='cuda:0', dtype=torch.float64)
tensor([-3.0587, -7.2137, -5.7236, -9.0812, -9.3898], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.2362, device='cuda:0', dtype=torch.float64)
tensor([-3.0533, -7.1924, -5.7057, -9.0563, -9.3566], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.2567, device='cuda:0', dtype=torch.float64)
tensor([-3.0450, -7.1710, -5.6916, -9.0319, -9.3234], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.2600, device='cuda:0', dtype=torch.float64)
tensor([-3.0356, -7.1495, -5.6771, -9.0078, -9.2884], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1648, device='cuda:0', dtype=torch.float64)
tensor([-3.0266, -7.1261, -5.6615, -8.9863, -9.2523], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.2176, device='cuda:0', dtype=torch.float64)
tensor([-3.0180, -7.0998, -5.6440, -8.9664, -9.2158], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1948, device='cuda:0', dtype=torch.float64)
tensor([-3.0088, -7.0735, -5.6252, -8.9538, -9.1791], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1948, device='cuda:0', dtype=torch.float64)
tensor([-3.0006, -7.0471, -5.6065, -8.9383, -9.1436], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1977, device='cuda:0', dtype=torch.float64)
tensor([-2.9949, -7.0210, -5.5869, -8.9207, -9.1062], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.2505, device='cuda:0', dtype=torch.float64)
tensor([-2.9908, -6.9958, -5.5651, -8.9037, -9.0689], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.2464, device='cuda:0', dtype=torch.float64)
tensor([-2.9860, -6.9708, -5.5442, -8.8869, -9.0304], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.3045, device='cuda:0', dtype=torch.float64)
tensor([-2.9826, -6.9476, -5.5231, -8.8695, -8.9914], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1956, device='cuda:0', dtype=torch.float64)
tensor([-2.9804, -6.9265, -5.5035, -8.8529, -8.9526], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1881, device='cuda:0', dtype=torch.float64)
tensor([-2.9775, -6.9059, -5.4875, -8.8371, -8.9153], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.2077, device='cuda:0', dtype=torch.float64)
tensor([-2.9743, -6.8869, -5.4737, -8.8225, -8.8799], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1335, device='cuda:0', dtype=torch.float64)
tensor([-2.9725, -6.8677, -5.4613, -8.8033, -8.8436], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1958, device='cuda:0', dtype=torch.float64)
tensor([-2.9717, -6.8496, -5.4492, -8.7823, -8.8071], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1825, device='cuda:0', dtype=torch.float64)
tensor([-2.9698, -6.8314, -5.4393, -8.7625, -8.7706], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1929, device='cuda:0', dtype=torch.float64)
tensor([-2.9666, -6.8101, -5.4309, -8.7412, -8.7321], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1366, device='cuda:0', dtype=torch.float64)
tensor([-2.9605, -6.7891, -5.4239, -8.7222, -8.6894], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1432, device='cuda:0', dtype=torch.float64)
tensor([-2.9555, -6.7673, -5.4150, -8.6980, -8.6439], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1470, device='cuda:0', dtype=torch.float64)
tensor([-2.9490, -6.7430, -5.4047, -8.6792, -8.6017], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1049, device='cuda:0', dtype=torch.float64)
tensor([-2.9418, -6.7160, -5.3933, -8.6604, -8.5608], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1807, device='cuda:0', dtype=torch.float64)
tensor([-2.9337, -6.6857, -5.3815, -8.6447, -8.5234], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1743, device='cuda:0', dtype=torch.float64)
tensor([-2.9258, -6.6568, -5.3689, -8.6284, -8.4858], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1347, device='cuda:0', dtype=torch.float64)
tensor([-2.9180, -6.6281, -5.3546, -8.6088, -8.4444], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0677, device='cuda:0', dtype=torch.float64)
tensor([-2.9105, -6.6013, -5.3417, -8.5899, -8.4026], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0604, device='cuda:0', dtype=torch.float64)
tensor([-2.9024, -6.5754, -5.3286, -8.5683, -8.3593], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0749, device='cuda:0', dtype=torch.float64)
tensor([-2.8966, -6.5525, -5.3145, -8.5428, -8.3158], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0568, device='cuda:0', dtype=torch.float64)
tensor([-2.8905, -6.5302, -5.3033, -8.5167, -8.2753], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0312, device='cuda:0', dtype=torch.float64)
tensor([-2.8856, -6.5081, -5.2904, -8.4897, -8.2401], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0439, device='cuda:0', dtype=torch.float64)
tensor([-2.8827, -6.4870, -5.2754, -8.4638, -8.2067], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0545, device='cuda:0', dtype=torch.float64)
tensor([-2.8797, -6.4665, -5.2626, -8.4409, -8.1765], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9697, device='cuda:0', dtype=torch.float64)
tensor([-2.8776, -6.4496, -5.2521, -8.4169, -8.1465], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9981, device='cuda:0', dtype=torch.float64)
tensor([-2.8739, -6.4306, -5.2434, -8.3931, -8.1196], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9979, device='cuda:0', dtype=torch.float64)
tensor([-2.8709, -6.4098, -5.2343, -8.3726, -8.0955], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9798, device='cuda:0', dtype=torch.float64)
tensor([-2.8688, -6.3878, -5.2248, -8.3508, -8.0710], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0201, device='cuda:0', dtype=torch.float64)
tensor([-2.8667, -6.3691, -5.2175, -8.3339, -8.0446], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9805, device='cuda:0', dtype=torch.float64)
tensor([-2.8626, -6.3520, -5.2109, -8.3182, -8.0153], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9692, device='cuda:0', dtype=torch.float64)
tensor([-2.8583, -6.3347, -5.2030, -8.3014, -7.9851], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0195, device='cuda:0', dtype=torch.float64)
tensor([-2.8531, -6.3166, -5.1942, -8.2836, -7.9549], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9468, device='cuda:0', dtype=torch.float64)
tensor([-2.8483, -6.2972, -5.1816, -8.2697, -7.9245], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9753, device='cuda:0', dtype=torch.float64)
tensor([-2.8425, -6.2735, -5.1695, -8.2541, -7.8958], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9284, device='cuda:0', dtype=torch.float64)
tensor([-2.8369, -6.2487, -5.1581, -8.2348, -7.8671], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8539, device='cuda:0', dtype=torch.float64)
tensor([-2.8298, -6.2251, -5.1487, -8.2185, -7.8405], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9131, device='cuda:0', dtype=torch.float64)
tensor([-2.8239, -6.2031, -5.1387, -8.2046, -7.8147], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9064, device='cuda:0', dtype=torch.float64)
tensor([-2.8211, -6.1820, -5.1274, -8.1896, -7.7927], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9264, device='cuda:0', dtype=torch.float64)
tensor([-2.8191, -6.1617, -5.1165, -8.1756, -7.7734], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8718, device='cuda:0', dtype=torch.float64)
tensor([-2.8174, -6.1437, -5.1065, -8.1647, -7.7567], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8476, device='cuda:0', dtype=torch.float64)
tensor([-2.8163, -6.1264, -5.0953, -8.1475, -7.7374], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8466, device='cuda:0', dtype=torch.float64)
tensor([-2.8132, -6.1086, -5.0851, -8.1274, -7.7179], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8603, device='cuda:0', dtype=torch.float64)
tensor([-2.8100, -6.0890, -5.0754, -8.1087, -7.6976], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8622, device='cuda:0', dtype=torch.float64)
tensor([-2.8069, -6.0687, -5.0645, -8.0862, -7.6766], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8687, device='cuda:0', dtype=torch.float64)
tensor([-2.8044, -6.0516, -5.0539, -8.0586, -7.6569], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8542, device='cuda:0', dtype=torch.float64)
tensor([-2.8020, -6.0357, -5.0420, -8.0361, -7.6389], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8840, device='cuda:0', dtype=torch.float64)
tensor([-2.7984, -6.0192, -5.0308, -8.0233, -7.6236], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8840, device='cuda:0', dtype=torch.float64)
tensor([-2.7950, -6.0030, -5.0204, -8.0127, -7.6070], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8337, device='cuda:0', dtype=torch.float64)
tensor([-2.7908, -5.9857, -5.0102, -7.9999, -7.5889], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8838, device='cuda:0', dtype=torch.float64)
tensor([-2.7858, -5.9652, -5.0008, -7.9898, -7.5685], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7961, device='cuda:0', dtype=torch.float64)
tensor([-2.7777, -5.9450, -4.9945, -7.9797, -7.5455], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8176, device='cuda:0', dtype=torch.float64)
tensor([-2.7689, -5.9250, -4.9876, -7.9669, -7.5231], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8220, device='cuda:0', dtype=torch.float64)
tensor([-2.7610, -5.9062, -4.9806, -7.9536, -7.4995], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8177, device='cuda:0', dtype=torch.float64)
tensor([-2.7546, -5.8887, -4.9731, -7.9358, -7.4771], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8826, device='cuda:0', dtype=torch.float64)
tensor([-2.7525, -5.8753, -4.9628, -7.9099, -7.4537], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7781, device='cuda:0', dtype=torch.float64)
tensor([-2.7504, -5.8643, -4.9519, -7.8829, -7.4298], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8118, device='cuda:0', dtype=torch.float64)
tensor([-2.7509, -5.8556, -4.9400, -7.8549, -7.4065], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8131, device='cuda:0', dtype=torch.float64)
tensor([-2.7512, -5.8469, -4.9283, -7.8255, -7.3829], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7687, device='cuda:0', dtype=torch.float64)
tensor([-2.7519, -5.8361, -4.9167, -7.7954, -7.3637], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8074, device='cuda:0', dtype=torch.float64)
tensor([-2.7531, -5.8250, -4.9070, -7.7651, -7.3477], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7744, device='cuda:0', dtype=torch.float64)
tensor([-2.7521, -5.8117, -4.8973, -7.7389, -7.3319], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7301, device='cuda:0', dtype=torch.float64)
tensor([-2.7513, -5.7978, -4.8843, -7.7179, -7.3184], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7047, device='cuda:0', dtype=torch.float64)
tensor([-2.7485, -5.7827, -4.8726, -7.7032, -7.3058], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7658, device='cuda:0', dtype=torch.float64)
tensor([-2.7453, -5.7684, -4.8621, -7.6905, -7.2942], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7920, device='cuda:0', dtype=torch.float64)
tensor([-2.7426, -5.7537, -4.8540, -7.6810, -7.2820], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8418, device='cuda:0', dtype=torch.float64)
tensor([-2.7411, -5.7379, -4.8427, -7.6698, -7.2674], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7472, device='cuda:0', dtype=torch.float64)
tensor([-2.7389, -5.7203, -4.8309, -7.6588, -7.2483], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8220, device='cuda:0', dtype=torch.float64)
tensor([-2.7371, -5.7013, -4.8168, -7.6479, -7.2288], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6670, device='cuda:0', dtype=torch.float64)
tensor([-2.7332, -5.6813, -4.8051, -7.6378, -7.2076], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7385, device='cuda:0', dtype=torch.float64)
tensor([-2.7275, -5.6619, -4.7935, -7.6275, -7.1869], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6554, device='cuda:0', dtype=torch.float64)
tensor([-2.7216, -5.6440, -4.7825, -7.6187, -7.1675], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7171, device='cuda:0', dtype=torch.float64)
tensor([-2.7136, -5.6234, -4.7738, -7.6095, -7.1474], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7573, device='cuda:0', dtype=torch.float64)
tensor([-2.7063, -5.6030, -4.7669, -7.6011, -7.1296], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6541, device='cuda:0', dtype=torch.float64)
tensor([-2.6979, -5.5832, -4.7605, -7.5915, -7.1121], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6879, device='cuda:0', dtype=torch.float64)
tensor([-2.6920, -5.5637, -4.7545, -7.5759, -7.0951], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6739, device='cuda:0', dtype=torch.float64)
tensor([-2.6856, -5.5467, -4.7502, -7.5570, -7.0778], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6781, device='cuda:0', dtype=torch.float64)
tensor([-2.6815, -5.5343, -4.7432, -7.5325, -7.0600], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7423, device='cuda:0', dtype=torch.float64)
tensor([-2.6796, -5.5269, -4.7358, -7.5039, -7.0418], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6935, device='cuda:0', dtype=torch.float64)
tensor([-2.6782, -5.5193, -4.7264, -7.4762, -7.0229], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6532, device='cuda:0', dtype=torch.float64)
tensor([-2.6776, -5.5150, -4.7173, -7.4479, -7.0035], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6448, device='cuda:0', dtype=torch.float64)
tensor([-2.6780, -5.5089, -4.7100, -7.4216, -6.9831], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6811, device='cuda:0', dtype=torch.float64)
tensor([-2.6761, -5.5054, -4.7068, -7.4031, -6.9629], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6485, device='cuda:0', dtype=torch.float64)
tensor([-2.6747, -5.5021, -4.7010, -7.3861, -6.9435], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7024, device='cuda:0', dtype=torch.float64)
tensor([-2.6687, -5.4946, -4.6984, -7.3750, -6.9273], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6615, device='cuda:0', dtype=torch.float64)
tensor([-2.6616, -5.4812, -4.6953, -7.3641, -6.9123], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6729, device='cuda:0', dtype=torch.float64)
tensor([-2.6545, -5.4640, -4.6924, -7.3542, -6.9015], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6084, device='cuda:0', dtype=torch.float64)
tensor([-2.6471, -5.4448, -4.6882, -7.3484, -6.8938], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6328, device='cuda:0', dtype=torch.float64)
tensor([-2.6412, -5.4259, -4.6823, -7.3407, -6.8864], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6022, device='cuda:0', dtype=torch.float64)
tensor([-2.6381, -5.4060, -4.6733, -7.3317, -6.8778], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6163, device='cuda:0', dtype=torch.float64)
tensor([-2.6397, -5.3902, -4.6596, -7.3197, -6.8678], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6227, device='cuda:0', dtype=torch.float64)
tensor([-2.6419, -5.3795, -4.6469, -7.3022, -6.8544], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5859, device='cuda:0', dtype=torch.float64)
tensor([-2.6460, -5.3705, -4.6327, -7.2808, -6.8382], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5603, device='cuda:0', dtype=torch.float64)
tensor([-2.6474, -5.3592, -4.6200, -7.2591, -6.8195], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5829, device='cuda:0', dtype=torch.float64)
tensor([-2.6478, -5.3517, -4.6107, -7.2338, -6.7969], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6463, device='cuda:0', dtype=torch.float64)
tensor([-2.6485, -5.3447, -4.6017, -7.2100, -6.7729], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5807, device='cuda:0', dtype=torch.float64)
tensor([-2.6482, -5.3355, -4.5936, -7.1895, -6.7505], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6417, device='cuda:0', dtype=torch.float64)
tensor([-2.6471, -5.3245, -4.5852, -7.1673, -6.7278], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5750, device='cuda:0', dtype=torch.float64)
tensor([-2.6435, -5.3113, -4.5815, -7.1448, -6.7087], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5805, device='cuda:0', dtype=torch.float64)
tensor([-2.6409, -5.2955, -4.5784, -7.1252, -6.6933], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6182, device='cuda:0', dtype=torch.float64)
tensor([-2.6402, -5.2807, -4.5729, -7.1080, -6.6809], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6008, device='cuda:0', dtype=torch.float64)
tensor([-2.6371, -5.2641, -4.5693, -7.0936, -6.6676], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6179, device='cuda:0', dtype=torch.float64)
tensor([-2.6314, -5.2460, -4.5662, -7.0821, -6.6559], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5490, device='cuda:0', dtype=torch.float64)
tensor([-2.6283, -5.2317, -4.5605, -7.0711, -6.6419], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5410, device='cuda:0', dtype=torch.float64)
tensor([-2.6263, -5.2223, -4.5523, -7.0600, -6.6243], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5281, device='cuda:0', dtype=torch.float64)
tensor([-2.6224, -5.2154, -4.5442, -7.0509, -6.6058], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5727, device='cuda:0', dtype=torch.float64)
tensor([-2.6176, -5.2089, -4.5362, -7.0435, -6.5861], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5761, device='cuda:0', dtype=torch.float64)
tensor([-2.6140, -5.2021, -4.5283, -7.0328, -6.5658], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5474, device='cuda:0', dtype=torch.float64)
tensor([-2.6103, -5.1940, -4.5213, -7.0209, -6.5448], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5405, device='cuda:0', dtype=torch.float64)
tensor([-2.6071, -5.1849, -4.5140, -7.0070, -6.5276], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6027, device='cuda:0', dtype=torch.float64)
tensor([-2.6054, -5.1729, -4.5097, -6.9878, -6.5113], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4819, device='cuda:0', dtype=torch.float64)
tensor([-2.6016, -5.1580, -4.5067, -6.9678, -6.4961], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4642, device='cuda:0', dtype=torch.float64)
tensor([-2.5961, -5.1421, -4.5063, -6.9471, -6.4843], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5847, device='cuda:0', dtype=torch.float64)
tensor([-2.5922, -5.1278, -4.5053, -6.9252, -6.4728], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5256, device='cuda:0', dtype=torch.float64)
tensor([-2.5894, -5.1154, -4.5042, -6.9012, -6.4635], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5058, device='cuda:0', dtype=torch.float64)
tensor([-2.5867, -5.1020, -4.5008, -6.8776, -6.4528], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4401, device='cuda:0', dtype=torch.float64)
tensor([-2.5826, -5.0901, -4.4977, -6.8580, -6.4429], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4973, device='cuda:0', dtype=torch.float64)
tensor([-2.5813, -5.0783, -4.4918, -6.8408, -6.4307], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4976, device='cuda:0', dtype=torch.float64)
tensor([-2.5810, -5.0677, -4.4827, -6.8275, -6.4181], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4851, device='cuda:0', dtype=torch.float64)
tensor([-2.5804, -5.0586, -4.4736, -6.8171, -6.4058], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4297, device='cuda:0', dtype=torch.float64)
tensor([-2.5797, -5.0512, -4.4626, -6.8077, -6.3921], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4576, device='cuda:0', dtype=torch.float64)
tensor([-2.5816, -5.0457, -4.4510, -6.7965, -6.3805], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5060, device='cuda:0', dtype=torch.float64)
tensor([-2.5849, -5.0416, -4.4390, -6.7826, -6.3686], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4735, device='cuda:0', dtype=torch.float64)
tensor([-2.5874, -5.0347, -4.4294, -6.7691, -6.3578], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4889, device='cuda:0', dtype=torch.float64)
tensor([-2.5873, -5.0246, -4.4228, -6.7586, -6.3473], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4912, device='cuda:0', dtype=torch.float64)
tensor([-2.5864, -5.0144, -4.4157, -6.7462, -6.3359], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4869, device='cuda:0', dtype=torch.float64)
tensor([-2.5850, -5.0053, -4.4105, -6.7314, -6.3242], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4591, device='cuda:0', dtype=torch.float64)
tensor([-2.5836, -4.9959, -4.4067, -6.7148, -6.3116], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3748, device='cuda:0', dtype=torch.float64)
tensor([-2.5816, -4.9882, -4.4047, -6.7016, -6.2968], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4793, device='cuda:0', dtype=torch.float64)
tensor([-2.5778, -4.9799, -4.4034, -6.6910, -6.2783], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3815, device='cuda:0', dtype=torch.float64)
tensor([-2.5741, -4.9707, -4.4009, -6.6786, -6.2583], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4377, device='cuda:0', dtype=torch.float64)
tensor([-2.5704, -4.9608, -4.3988, -6.6655, -6.2415], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5632, device='cuda:0', dtype=torch.float64)
tensor([-2.5695, -4.9519, -4.3949, -6.6540, -6.2292], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4201, device='cuda:0', dtype=torch.float64)
tensor([-2.5674, -4.9429, -4.3902, -6.6425, -6.2207], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4243, device='cuda:0', dtype=torch.float64)
tensor([-2.5659, -4.9311, -4.3843, -6.6299, -6.2148], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4820, device='cuda:0', dtype=torch.float64)
tensor([-2.5626, -4.9170, -4.3765, -6.6204, -6.2074], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4417, device='cuda:0', dtype=torch.float64)
tensor([-2.5584, -4.9022, -4.3707, -6.6126, -6.2007], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4454, device='cuda:0', dtype=torch.float64)
tensor([-2.5541, -4.8877, -4.3665, -6.6034, -6.1967], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4278, device='cuda:0', dtype=torch.float64)
tensor([-2.5515, -4.8753, -4.3621, -6.5890, -6.1898], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3693, device='cuda:0', dtype=torch.float64)
tensor([-2.5487, -4.8645, -4.3574, -6.5746, -6.1775], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3505, device='cuda:0', dtype=torch.float64)
tensor([-2.5477, -4.8567, -4.3512, -6.5582, -6.1628], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3814, device='cuda:0', dtype=torch.float64)
tensor([-2.5481, -4.8526, -4.3463, -6.5360, -6.1467], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4901, device='cuda:0', dtype=torch.float64)
tensor([-2.5496, -4.8508, -4.3395, -6.5116, -6.1296], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4333, device='cuda:0', dtype=torch.float64)
tensor([-2.5504, -4.8499, -4.3335, -6.4874, -6.1133], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4095, device='cuda:0', dtype=torch.float64)
tensor([-2.5498, -4.8491, -4.3273, -6.4630, -6.1000], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3476, device='cuda:0', dtype=torch.float64)
tensor([-2.5463, -4.8450, -4.3239, -6.4413, -6.0901], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4456, device='cuda:0', dtype=torch.float64)
tensor([-2.5424, -4.8371, -4.3241, -6.4252, -6.0826], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3305, device='cuda:0', dtype=torch.float64)
tensor([-2.5371, -4.8279, -4.3247, -6.4145, -6.0767], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3834, device='cuda:0', dtype=torch.float64)
tensor([-2.5280, -4.8166, -4.3261, -6.4082, -6.0687], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3630, device='cuda:0', dtype=torch.float64)
tensor([-2.5217, -4.8081, -4.3239, -6.4048, -6.0597], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4639, device='cuda:0', dtype=torch.float64)
tensor([-2.5170, -4.8005, -4.3190, -6.4012, -6.0501], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3936, device='cuda:0', dtype=torch.float64)
tensor([-2.5139, -4.7922, -4.3125, -6.3992, -6.0372], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3896, device='cuda:0', dtype=torch.float64)
tensor([-2.5151, -4.7850, -4.3016, -6.3949, -6.0223], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3965, device='cuda:0', dtype=torch.float64)
tensor([-2.5161, -4.7776, -4.2929, -6.3902, -6.0098], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4276, device='cuda:0', dtype=torch.float64)
tensor([-2.5179, -4.7747, -4.2813, -6.3793, -5.9948], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3554, device='cuda:0', dtype=torch.float64)
tensor([-2.5199, -4.7696, -4.2698, -6.3649, -5.9789], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3664, device='cuda:0', dtype=torch.float64)
tensor([-2.5193, -4.7618, -4.2627, -6.3513, -5.9658], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4637, device='cuda:0', dtype=torch.float64)
tensor([-2.5167, -4.7504, -4.2572, -6.3384, -5.9543], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3227, device='cuda:0', dtype=torch.float64)
tensor([-2.5112, -4.7397, -4.2553, -6.3256, -5.9411], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3215, device='cuda:0', dtype=torch.float64)
tensor([-2.5045, -4.7289, -4.2535, -6.3144, -5.9282], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3630, device='cuda:0', dtype=torch.float64)
tensor([-2.4986, -4.7164, -4.2507, -6.3026, -5.9165], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3691, device='cuda:0', dtype=torch.float64)
tensor([-2.4948, -4.7053, -4.2448, -6.2915, -5.9104], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3930, device='cuda:0', dtype=torch.float64)
tensor([-2.4931, -4.6978, -4.2373, -6.2794, -5.9040], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3720, device='cuda:0', dtype=torch.float64)
tensor([-2.4929, -4.6928, -4.2305, -6.2687, -5.8967], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3951, device='cuda:0', dtype=torch.float64)
tensor([-2.4927, -4.6874, -4.2240, -6.2570, -5.8891], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3553, device='cuda:0', dtype=torch.float64)
tensor([-2.4940, -4.6838, -4.2151, -6.2442, -5.8797], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3204, device='cuda:0', dtype=torch.float64)
tensor([-2.4971, -4.6815, -4.2068, -6.2279, -5.8674], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4000, device='cuda:0', dtype=torch.float64)
tensor([-2.5013, -4.6797, -4.1978, -6.2107, -5.8564], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3665, device='cuda:0', dtype=torch.float64)
tensor([-2.5023, -4.6748, -4.1894, -6.1988, -5.8451], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2585, device='cuda:0', dtype=torch.float64)
tensor([-2.5023, -4.6689, -4.1834, -6.1873, -5.8328], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4063, device='cuda:0', dtype=torch.float64)
tensor([-2.5005, -4.6609, -4.1774, -6.1747, -5.8184], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3519, device='cuda:0', dtype=torch.float64)
tensor([-2.5006, -4.6513, -4.1720, -6.1617, -5.8046], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2661, device='cuda:0', dtype=torch.float64)
tensor([-2.4968, -4.6392, -4.1703, -6.1493, -5.7944], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2873, device='cuda:0', dtype=torch.float64)
tensor([-2.4933, -4.6298, -4.1710, -6.1387, -5.7856], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2715, device='cuda:0', dtype=torch.float64)
tensor([-2.4902, -4.6200, -4.1709, -6.1269, -5.7788], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3034, device='cuda:0', dtype=torch.float64)
tensor([-2.4864, -4.6111, -4.1719, -6.1203, -5.7700], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3184, device='cuda:0', dtype=torch.float64)
tensor([-2.4829, -4.6017, -4.1729, -6.1130, -5.7615], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3477, device='cuda:0', dtype=torch.float64)
tensor([-2.4803, -4.5964, -4.1732, -6.1054, -5.7546], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3486, device='cuda:0', dtype=torch.float64)
tensor([-2.4789, -4.5933, -4.1709, -6.0962, -5.7451], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2439, device='cuda:0', dtype=torch.float64)
tensor([-2.4755, -4.5884, -4.1673, -6.0883, -5.7361], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3060, device='cuda:0', dtype=torch.float64)
tensor([-2.4727, -4.5809, -4.1644, -6.0828, -5.7273], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3862, device='cuda:0', dtype=torch.float64)
tensor([-2.4700, -4.5718, -4.1609, -6.0789, -5.7186], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3479, device='cuda:0', dtype=torch.float64)
tensor([-2.4693, -4.5625, -4.1586, -6.0675, -5.7095], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4088, device='cuda:0', dtype=torch.float64)
tensor([-2.4715, -4.5561, -4.1524, -6.0532, -5.7011], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3511, device='cuda:0', dtype=torch.float64)
tensor([-2.4734, -4.5493, -4.1449, -6.0401, -5.6923], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3019, device='cuda:0', dtype=torch.float64)
tensor([-2.4757, -4.5437, -4.1357, -6.0280, -5.6823], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2653, device='cuda:0', dtype=torch.float64)
tensor([-2.4764, -4.5365, -4.1274, -6.0130, -5.6701], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3014, device='cuda:0', dtype=torch.float64)
tensor([-2.4761, -4.5280, -4.1209, -5.9990, -5.6582], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3292, device='cuda:0', dtype=torch.float64)
tensor([-2.4757, -4.5195, -4.1155, -5.9852, -5.6460], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3261, device='cuda:0', dtype=torch.float64)
tensor([-2.4740, -4.5102, -4.1108, -5.9740, -5.6336], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2523, device='cuda:0', dtype=torch.float64)
tensor([-2.4714, -4.5002, -4.1070, -5.9660, -5.6239], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2917, device='cuda:0', dtype=torch.float64)
tensor([-2.4672, -4.4881, -4.1059, -5.9627, -5.6164], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4675, device='cuda:0', dtype=torch.float64)
tensor([-2.4647, -4.4766, -4.1066, -5.9605, -5.6119], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3134, device='cuda:0', dtype=torch.float64)
tensor([-2.4630, -4.4642, -4.1079, -5.9570, -5.6063], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1964, device='cuda:0', dtype=torch.float64)
tensor([-2.4612, -4.4532, -4.1074, -5.9501, -5.5986], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3035, device='cuda:0', dtype=torch.float64)
tensor([-2.4597, -4.4458, -4.1050, -5.9396, -5.5865], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2692, device='cuda:0', dtype=torch.float64)
tensor([-2.4560, -4.4391, -4.1046, -5.9272, -5.5713], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3658, device='cuda:0', dtype=torch.float64)
tensor([-2.4504, -4.4336, -4.1041, -5.9165, -5.5547], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2796, device='cuda:0', dtype=torch.float64)
tensor([-2.4453, -4.4307, -4.1027, -5.9051, -5.5396], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3671, device='cuda:0', dtype=torch.float64)
tensor([-2.4419, -4.4290, -4.1006, -5.8927, -5.5261], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2527, device='cuda:0', dtype=torch.float64)
tensor([-2.4402, -4.4303, -4.0993, -5.8816, -5.5170], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3147, device='cuda:0', dtype=torch.float64)
tensor([-2.4412, -4.4304, -4.0966, -5.8713, -5.5126], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2377, device='cuda:0', dtype=torch.float64)
tensor([-2.4423, -4.4274, -4.0922, -5.8610, -5.5102], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2230, device='cuda:0', dtype=torch.float64)
tensor([-2.4442, -4.4225, -4.0838, -5.8509, -5.5095], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2018, device='cuda:0', dtype=torch.float64)
tensor([-2.4443, -4.4144, -4.0767, -5.8366, -5.5060], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1949, device='cuda:0', dtype=torch.float64)
tensor([-2.4433, -4.4061, -4.0673, -5.8228, -5.4993], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2334, device='cuda:0', dtype=torch.float64)
tensor([-2.4441, -4.3997, -4.0570, -5.8095, -5.4905], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2398, device='cuda:0', dtype=torch.float64)
tensor([-2.4439, -4.3916, -4.0458, -5.7981, -5.4812], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2713, device='cuda:0', dtype=torch.float64)
tensor([-2.4430, -4.3843, -4.0370, -5.7920, -5.4728], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2515, device='cuda:0', dtype=torch.float64)
tensor([-2.4418, -4.3784, -4.0309, -5.7902, -5.4633], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2888, device='cuda:0', dtype=torch.float64)
tensor([-2.4431, -4.3749, -4.0248, -5.7892, -5.4536], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2567, device='cuda:0', dtype=torch.float64)
tensor([-2.4426, -4.3694, -4.0233, -5.7865, -5.4463], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2828, device='cuda:0', dtype=torch.float64)
tensor([-2.4387, -4.3610, -4.0253, -5.7850, -5.4441], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2424, device='cuda:0', dtype=torch.float64)
tensor([-2.4327, -4.3536, -4.0279, -5.7776, -5.4444], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2189, device='cuda:0', dtype=torch.float64)
tensor([-2.4284, -4.3510, -4.0290, -5.7668, -5.4432], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2953, device='cuda:0', dtype=torch.float64)
tensor([-2.4264, -4.3481, -4.0273, -5.7519, -5.4382], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1757, device='cuda:0', dtype=torch.float64)
tensor([-2.4238, -4.3452, -4.0259, -5.7360, -5.4339], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2600, device='cuda:0', dtype=torch.float64)
tensor([-2.4231, -4.3421, -4.0247, -5.7197, -5.4305], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2737, device='cuda:0', dtype=torch.float64)
tensor([-2.4219, -4.3371, -4.0212, -5.7059, -5.4231], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2453, device='cuda:0', dtype=torch.float64)
tensor([-2.4196, -4.3324, -4.0172, -5.6947, -5.4159], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2287, device='cuda:0', dtype=torch.float64)
tensor([-2.4151, -4.3244, -4.0142, -5.6899, -5.4102], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1811, device='cuda:0', dtype=torch.float64)
tensor([-2.4100, -4.3154, -4.0116, -5.6877, -5.4046], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2173, device='cuda:0', dtype=torch.float64)
tensor([-2.4031, -4.3041, -4.0111, -5.6880, -5.3957], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2417, device='cuda:0', dtype=torch.float64)
tensor([-2.3965, -4.2926, -4.0120, -5.6856, -5.3893], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2522, device='cuda:0', dtype=torch.float64)
tensor([-2.3912, -4.2800, -4.0131, -5.6831, -5.3850], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3714, device='cuda:0', dtype=torch.float64)
tensor([-2.3881, -4.2683, -4.0136, -5.6771, -5.3845], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2442, device='cuda:0', dtype=torch.float64)
tensor([-2.3902, -4.2608, -4.0125, -5.6661, -5.3828], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2843, device='cuda:0', dtype=torch.float64)
tensor([-2.3939, -4.2552, -4.0091, -5.6526, -5.3805], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2092, device='cuda:0', dtype=torch.float64)
tensor([-2.3995, -4.2514, -4.0013, -5.6362, -5.3750], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2131, device='cuda:0', dtype=torch.float64)
tensor([-2.4049, -4.2512, -3.9942, -5.6183, -5.3654], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2660, device='cuda:0', dtype=torch.float64)
tensor([-2.4110, -4.2506, -3.9873, -5.6019, -5.3553], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1929, device='cuda:0', dtype=torch.float64)
tensor([-2.4142, -4.2506, -3.9801, -5.5882, -5.3444], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3077, device='cuda:0', dtype=torch.float64)
tensor([-2.4144, -4.2514, -3.9753, -5.5785, -5.3336], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2681, device='cuda:0', dtype=torch.float64)
tensor([-2.4132, -4.2508, -3.9706, -5.5714, -5.3218], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2347, device='cuda:0', dtype=torch.float64)
tensor([-2.4097, -4.2463, -3.9681, -5.5670, -5.3117], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2126, device='cuda:0', dtype=torch.float64)
tensor([-2.4037, -4.2379, -3.9676, -5.5647, -5.3040], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1835, device='cuda:0', dtype=torch.float64)
tensor([-2.3970, -4.2276, -3.9671, -5.5613, -5.2958], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2900, device='cuda:0', dtype=torch.float64)
tensor([-2.3932, -4.2187, -3.9667, -5.5567, -5.2897], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2477, device='cuda:0', dtype=torch.float64)
tensor([-2.3892, -4.2111, -3.9655, -5.5532, -5.2863], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1530, device='cuda:0', dtype=torch.float64)
tensor([-2.3887, -4.2076, -3.9623, -5.5428, -5.2833], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2772, device='cuda:0', dtype=torch.float64)
tensor([-2.3898, -4.2068, -3.9596, -5.5315, -5.2772], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1821, device='cuda:0', dtype=torch.float64)
tensor([-2.3933, -4.2044, -3.9547, -5.5174, -5.2684], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2087, device='cuda:0', dtype=torch.float64)
tensor([-2.3983, -4.2014, -3.9512, -5.5017, -5.2575], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2950, device='cuda:0', dtype=torch.float64)
tensor([-2.3987, -4.1943, -3.9504, -5.4917, -5.2485], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2290, device='cuda:0', dtype=torch.float64)
tensor([-2.4009, -4.1882, -3.9483, -5.4825, -5.2408], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1579, device='cuda:0', dtype=torch.float64)
tensor([-2.4010, -4.1800, -3.9459, -5.4770, -5.2308], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1565, device='cuda:0', dtype=torch.float64)
tensor([-2.3982, -4.1716, -3.9463, -5.4753, -5.2204], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2505, device='cuda:0', dtype=torch.float64)
tensor([-2.3949, -4.1608, -3.9474, -5.4735, -5.2107], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1951, device='cuda:0', dtype=torch.float64)
tensor([-2.3915, -4.1501, -3.9486, -5.4713, -5.2041], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1979, device='cuda:0', dtype=torch.float64)
tensor([-2.3871, -4.1410, -3.9507, -5.4683, -5.1989], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3570, device='cuda:0', dtype=torch.float64)
tensor([-2.3843, -4.1358, -3.9513, -5.4640, -5.1967], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2183, device='cuda:0', dtype=torch.float64)
tensor([-2.3842, -4.1361, -3.9466, -5.4547, -5.1925], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1925, device='cuda:0', dtype=torch.float64)
tensor([-2.3849, -4.1369, -3.9382, -5.4434, -5.1848], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1598, device='cuda:0', dtype=torch.float64)
tensor([-2.3822, -4.1348, -3.9325, -5.4376, -5.1772], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2781, device='cuda:0', dtype=torch.float64)
tensor([-2.3784, -4.1296, -3.9258, -5.4320, -5.1703], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1560, device='cuda:0', dtype=torch.float64)
tensor([-2.3749, -4.1230, -3.9188, -5.4244, -5.1628], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1616, device='cuda:0', dtype=torch.float64)
tensor([-2.3749, -4.1196, -3.9110, -5.4134, -5.1579], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1821, device='cuda:0', dtype=torch.float64)
tensor([-2.3766, -4.1159, -3.9045, -5.4020, -5.1526], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3795, device='cuda:0', dtype=torch.float64)
tensor([-2.3799, -4.1119, -3.8970, -5.3923, -5.1490], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1229, device='cuda:0', dtype=torch.float64)
tensor([-2.3825, -4.1087, -3.8927, -5.3861, -5.1485], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2623, device='cuda:0', dtype=torch.float64)
tensor([-2.3800, -4.1029, -3.8930, -5.3885, -5.1481], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2967, device='cuda:0', dtype=torch.float64)
tensor([-2.3744, -4.0946, -3.8976, -5.3919, -5.1465], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1673, device='cuda:0', dtype=torch.float64)
tensor([-2.3693, -4.0877, -3.8997, -5.3959, -5.1452], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1305, device='cuda:0', dtype=torch.float64)
tensor([-2.3668, -4.0824, -3.8969, -5.3937, -5.1405], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1797, device='cuda:0', dtype=torch.float64)
tensor([-2.3630, -4.0787, -3.8927, -5.3881, -5.1331], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0998, device='cuda:0', dtype=torch.float64)
tensor([-2.3600, -4.0786, -3.8849, -5.3759, -5.1221], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1321, device='cuda:0', dtype=torch.float64)
tensor([-2.3585, -4.0787, -3.8749, -5.3619, -5.1079], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2647, device='cuda:0', dtype=torch.float64)
tensor([-2.3576, -4.0782, -3.8676, -5.3497, -5.0935], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1281, device='cuda:0', dtype=torch.float64)
tensor([-2.3577, -4.0751, -3.8620, -5.3360, -5.0805], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1210, device='cuda:0', dtype=torch.float64)
tensor([-2.3592, -4.0734, -3.8571, -5.3213, -5.0693], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2732, device='cuda:0', dtype=torch.float64)
tensor([-2.3631, -4.0720, -3.8512, -5.3051, -5.0614], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1570, device='cuda:0', dtype=torch.float64)
tensor([-2.3653, -4.0709, -3.8461, -5.2924, -5.0556], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2118, device='cuda:0', dtype=torch.float64)
tensor([-2.3664, -4.0691, -3.8440, -5.2818, -5.0510], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0854, device='cuda:0', dtype=torch.float64)
tensor([-2.3657, -4.0651, -3.8428, -5.2720, -5.0457], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1988, device='cuda:0', dtype=torch.float64)
tensor([-2.3628, -4.0599, -3.8421, -5.2656, -5.0402], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1165, device='cuda:0', dtype=torch.float64)
tensor([-2.3577, -4.0533, -3.8441, -5.2641, -5.0341], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1292, device='cuda:0', dtype=torch.float64)
tensor([-2.3513, -4.0475, -3.8472, -5.2646, -5.0274], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2468, device='cuda:0', dtype=torch.float64)
tensor([-2.3443, -4.0389, -3.8517, -5.2639, -5.0206], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1918, device='cuda:0', dtype=torch.float64)
tensor([-2.3352, -4.0290, -3.8580, -5.2641, -5.0126], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1318, device='cuda:0', dtype=torch.float64)
tensor([-2.3273, -4.0223, -3.8589, -5.2593, -5.0031], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1860, device='cuda:0', dtype=torch.float64)
tensor([-2.3233, -4.0173, -3.8561, -5.2532, -4.9939], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2144, device='cuda:0', dtype=torch.float64)
tensor([-2.3213, -4.0130, -3.8524, -5.2438, -4.9886], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2303, device='cuda:0', dtype=torch.float64)
tensor([-2.3226, -4.0094, -3.8474, -5.2309, -4.9851], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1683, device='cuda:0', dtype=torch.float64)
tensor([-2.3235, -4.0048, -3.8447, -5.2188, -4.9849], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2240, device='cuda:0', dtype=torch.float64)
tensor([-2.3245, -3.9971, -3.8417, -5.2111, -4.9841], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1316, device='cuda:0', dtype=torch.float64)
tensor([-2.3249, -3.9877, -3.8403, -5.2070, -4.9793], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1339, device='cuda:0', dtype=torch.float64)
tensor([-2.3265, -3.9815, -3.8390, -5.2051, -4.9732], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0976, device='cuda:0', dtype=torch.float64)
tensor([-2.3298, -3.9779, -3.8371, -5.2014, -4.9665], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1188, device='cuda:0', dtype=torch.float64)
tensor([-2.3353, -3.9771, -3.8334, -5.1922, -4.9606], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1672, device='cuda:0', dtype=torch.float64)
tensor([-2.3402, -3.9805, -3.8293, -5.1808, -4.9540], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1408, device='cuda:0', dtype=torch.float64)
tensor([-2.3453, -3.9878, -3.8243, -5.1672, -4.9467], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0877, device='cuda:0', dtype=torch.float64)
tensor([-2.3474, -3.9945, -3.8206, -5.1550, -4.9401], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0860, device='cuda:0', dtype=torch.float64)
tensor([-2.3448, -3.9939, -3.8198, -5.1494, -4.9349], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0937, device='cuda:0', dtype=torch.float64)
tensor([-2.3394, -3.9895, -3.8186, -5.1471, -4.9304], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1685, device='cuda:0', dtype=torch.float64)
tensor([-2.3371, -3.9845, -3.8141, -5.1436, -4.9263], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0867, device='cuda:0', dtype=torch.float64)
tensor([-2.3335, -3.9778, -3.8115, -5.1451, -4.9206], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1031, device='cuda:0', dtype=torch.float64)
tensor([-2.3306, -3.9698, -3.8082, -5.1485, -4.9132], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2255, device='cuda:0', dtype=torch.float64)
tensor([-2.3261, -3.9602, -3.8097, -5.1538, -4.9084], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1156, device='cuda:0', dtype=torch.float64)
tensor([-2.3209, -3.9501, -3.8140, -5.1593, -4.9053], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2168, device='cuda:0', dtype=torch.float64)
tensor([-2.3143, -3.9418, -3.8183, -5.1619, -4.9016], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1086, device='cuda:0', dtype=torch.float64)
tensor([-2.3074, -3.9332, -3.8245, -5.1618, -4.8986], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1182, device='cuda:0', dtype=torch.float64)
tensor([-2.3004, -3.9261, -3.8278, -5.1585, -4.8955], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1687, device='cuda:0', dtype=torch.float64)
tensor([-2.2964, -3.9205, -3.8333, -5.1496, -4.8945], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2173, device='cuda:0', dtype=torch.float64)
tensor([-2.2982, -3.9184, -3.8335, -5.1358, -4.8936], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1147, device='cuda:0', dtype=torch.float64)
tensor([-2.3045, -3.9208, -3.8290, -5.1186, -4.8904], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0811, device='cuda:0', dtype=torch.float64)
tensor([-2.3128, -3.9247, -3.8229, -5.0984, -4.8858], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0481, device='cuda:0', dtype=torch.float64)
tensor([-2.3250, -3.9311, -3.8112, -5.0797, -4.8790], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1440, device='cuda:0', dtype=torch.float64)
tensor([-2.3374, -3.9385, -3.7971, -5.0612, -4.8718], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1118, device='cuda:0', dtype=torch.float64)
tensor([-2.3459, -3.9432, -3.7830, -5.0478, -4.8653], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1582, device='cuda:0', dtype=torch.float64)
tensor([-2.3484, -3.9461, -3.7711, -5.0398, -4.8571], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2132, device='cuda:0', dtype=torch.float64)
tensor([-2.3438, -3.9423, -3.7635, -5.0404, -4.8485], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2138, device='cuda:0', dtype=torch.float64)
tensor([-2.3348, -3.9327, -3.7600, -5.0445, -4.8417], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1669, device='cuda:0', dtype=torch.float64)
tensor([-2.3231, -3.9224, -3.7599, -5.0514, -4.8381], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2319, device='cuda:0', dtype=torch.float64)
tensor([-2.3123, -3.9148, -3.7635, -5.0559, -4.8387], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1081, device='cuda:0', dtype=torch.float64)
tensor([-2.3032, -3.9095, -3.7690, -5.0565, -4.8392], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1608, device='cuda:0', dtype=torch.float64)
tensor([-2.2961, -3.9065, -3.7718, -5.0587, -4.8378], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0843, device='cuda:0', dtype=torch.float64)
tensor([-2.2908, -3.9041, -3.7752, -5.0598, -4.8338], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0538, device='cuda:0', dtype=torch.float64)
tensor([-2.2867, -3.8985, -3.7793, -5.0584, -4.8261], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1065, device='cuda:0', dtype=torch.float64)
tensor([-2.2847, -3.8941, -3.7850, -5.0560, -4.8167], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0968, device='cuda:0', dtype=torch.float64)
tensor([-2.2841, -3.8894, -3.7913, -5.0516, -4.8078], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1242, device='cuda:0', dtype=torch.float64)
tensor([-2.2848, -3.8846, -3.7925, -5.0434, -4.7991], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2064, device='cuda:0', dtype=torch.float64)
tensor([-2.2905, -3.8806, -3.7897, -5.0272, -4.7945], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0685, device='cuda:0', dtype=torch.float64)
tensor([-2.2954, -3.8754, -3.7857, -5.0136, -4.7899], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0673, device='cuda:0', dtype=torch.float64)
tensor([-2.2978, -3.8708, -3.7784, -5.0018, -4.7850], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1586, device='cuda:0', dtype=torch.float64)
tensor([-2.3017, -3.8685, -3.7693, -4.9897, -4.7809], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1004, device='cuda:0', dtype=torch.float64)
tensor([-2.3048, -3.8669, -3.7586, -4.9821, -4.7755], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0482, device='cuda:0', dtype=torch.float64)
tensor([-2.3045, -3.8641, -3.7495, -4.9767, -4.7741], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0773, device='cuda:0', dtype=torch.float64)
tensor([-2.3035, -3.8612, -3.7407, -4.9740, -4.7719], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0331, device='cuda:0', dtype=torch.float64)
tensor([-2.3008, -3.8578, -3.7342, -4.9741, -4.7682], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1534, device='cuda:0', dtype=torch.float64)
tensor([-2.2946, -3.8519, -3.7327, -4.9745, -4.7633], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0838, device='cuda:0', dtype=torch.float64)
tensor([-2.2887, -3.8453, -3.7332, -4.9733, -4.7578], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1698, device='cuda:0', dtype=torch.float64)
tensor([-2.2850, -3.8395, -3.7313, -4.9683, -4.7502], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0606, device='cuda:0', dtype=torch.float64)
tensor([-2.2837, -3.8363, -3.7306, -4.9618, -4.7434], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1668, device='cuda:0', dtype=torch.float64)
tensor([-2.2855, -3.8378, -3.7264, -4.9536, -4.7373], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1707, device='cuda:0', dtype=torch.float64)
tensor([-2.2908, -3.8412, -3.7197, -4.9437, -4.7340], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0965, device='cuda:0', dtype=torch.float64)
tensor([-2.2988, -3.8456, -3.7126, -4.9308, -4.7338], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0859, device='cuda:0', dtype=torch.float64)
tensor([-2.3059, -3.8480, -3.7073, -4.9182, -4.7337], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0954, device='cuda:0', dtype=torch.float64)
tensor([-2.3098, -3.8499, -3.7068, -4.9093, -4.7308], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1609, device='cuda:0', dtype=torch.float64)
tensor([-2.3079, -3.8465, -3.7084, -4.9063, -4.7242], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0292, device='cuda:0', dtype=torch.float64)
tensor([-2.3021, -3.8412, -3.7124, -4.9088, -4.7168], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0701, device='cuda:0', dtype=torch.float64)
tensor([-2.2917, -3.8331, -3.7182, -4.9159, -4.7068], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0450, device='cuda:0', dtype=torch.float64)
tensor([-2.2805, -3.8234, -3.7236, -4.9221, -4.6995], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1288, device='cuda:0', dtype=torch.float64)
tensor([-2.2739, -3.8178, -3.7257, -4.9267, -4.6949], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1864, device='cuda:0', dtype=torch.float64)
tensor([-2.2722, -3.8147, -3.7233, -4.9257, -4.6932], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2048, device='cuda:0', dtype=torch.float64)
tensor([-2.2736, -3.8143, -3.7198, -4.9230, -4.6923], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0577, device='cuda:0', dtype=torch.float64)
tensor([-2.2776, -3.8134, -3.7142, -4.9161, -4.6923], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1035, device='cuda:0', dtype=torch.float64)
tensor([-2.2847, -3.8141, -3.7080, -4.9039, -4.6915], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0697, device='cuda:0', dtype=torch.float64)
tensor([-2.2921, -3.8125, -3.7008, -4.8939, -4.6910], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1179, device='cuda:0', dtype=torch.float64)
tensor([-2.2954, -3.8062, -3.6942, -4.8857, -4.6878], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1906, device='cuda:0', dtype=torch.float64)
tensor([-2.2939, -3.7938, -3.6906, -4.8818, -4.6815], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0528, device='cuda:0', dtype=torch.float64)
tensor([-2.2907, -3.7830, -3.6867, -4.8795, -4.6777], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0343, device='cuda:0', dtype=torch.float64)
tensor([-2.2862, -3.7723, -3.6814, -4.8784, -4.6729], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0553, device='cuda:0', dtype=torch.float64)
tensor([-2.2795, -3.7624, -3.6785, -4.8816, -4.6689], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0388, device='cuda:0', dtype=torch.float64)
tensor([-2.2710, -3.7556, -3.6787, -4.8865, -4.6676], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0240, device='cuda:0', dtype=torch.float64)
tensor([-2.2652, -3.7532, -3.6784, -4.8867, -4.6664], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0495, device='cuda:0', dtype=torch.float64)
tensor([-2.2611, -3.7539, -3.6795, -4.8798, -4.6642], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0312, device='cuda:0', dtype=torch.float64)
tensor([-2.2619, -3.7563, -3.6762, -4.8664, -4.6630], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0910, device='cuda:0', dtype=torch.float64)
tensor([-2.2652, -3.7615, -3.6714, -4.8499, -4.6618], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9792, device='cuda:0', dtype=torch.float64)
tensor([-2.2692, -3.7672, -3.6666, -4.8320, -4.6606], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0977, device='cuda:0', dtype=torch.float64)
tensor([-2.2748, -3.7740, -3.6614, -4.8151, -4.6606], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0768, device='cuda:0', dtype=torch.float64)
tensor([-2.2812, -3.7799, -3.6555, -4.7990, -4.6607], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2800, device='cuda:0', dtype=torch.float64)
tensor([-2.2830, -3.7789, -3.6534, -4.7890, -4.6569], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0771, device='cuda:0', dtype=torch.float64)
tensor([-2.2829, -3.7750, -3.6520, -4.7842, -4.6518], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0754, device='cuda:0', dtype=torch.float64)
tensor([-2.2845, -3.7689, -3.6503, -4.7816, -4.6436], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1292, device='cuda:0', dtype=torch.float64)
tensor([-2.2844, -3.7581, -3.6497, -4.7845, -4.6351], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0874, device='cuda:0', dtype=torch.float64)
tensor([-2.2830, -3.7481, -3.6493, -4.7889, -4.6261], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0447, device='cuda:0', dtype=torch.float64)
tensor([-2.2805, -3.7425, -3.6478, -4.7919, -4.6201], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1109, device='cuda:0', dtype=torch.float64)
tensor([-2.2800, -3.7420, -3.6448, -4.7902, -4.6139], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0211, device='cuda:0', dtype=torch.float64)
tensor([-2.2769, -3.7407, -3.6430, -4.7922, -4.6088], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1325, device='cuda:0', dtype=torch.float64)
tensor([-2.2718, -3.7390, -3.6430, -4.7941, -4.6068], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9994, device='cuda:0', dtype=torch.float64)
tensor([-2.2678, -3.7356, -3.6443, -4.7929, -4.6043], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1096, device='cuda:0', dtype=torch.float64)
tensor([-2.2639, -3.7316, -3.6472, -4.7912, -4.6013], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0061, device='cuda:0', dtype=torch.float64)
tensor([-2.2601, -3.7274, -3.6516, -4.7871, -4.5996], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0538, device='cuda:0', dtype=torch.float64)
tensor([-2.2553, -3.7212, -3.6543, -4.7841, -4.5973], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9802, device='cuda:0', dtype=torch.float64)
tensor([-2.2503, -3.7152, -3.6549, -4.7832, -4.5907], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2525, device='cuda:0', dtype=torch.float64)
tensor([-2.2425, -3.7088, -3.6568, -4.7858, -4.5845], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0402, device='cuda:0', dtype=torch.float64)
tensor([-2.2377, -3.7054, -3.6546, -4.7870, -4.5784], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1035, device='cuda:0', dtype=torch.float64)
tensor([-2.2381, -3.7020, -3.6507, -4.7821, -4.5737], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1858, device='cuda:0', dtype=torch.float64)
tensor([-2.2399, -3.6971, -3.6464, -4.7770, -4.5701], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0804, device='cuda:0', dtype=torch.float64)
tensor([-2.2459, -3.6946, -3.6398, -4.7685, -4.5696], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1125, device='cuda:0', dtype=torch.float64)
tensor([-2.2519, -3.6944, -3.6304, -4.7587, -4.5696], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0408, device='cuda:0', dtype=torch.float64)
tensor([-2.2560, -3.6939, -3.6222, -4.7492, -4.5692], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0761, device='cuda:0', dtype=torch.float64)
tensor([-2.2618, -3.6947, -3.6155, -4.7434, -4.5712], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9995, device='cuda:0', dtype=torch.float64)
tensor([-2.2641, -3.6953, -3.6112, -4.7405, -4.5718], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0153, device='cuda:0', dtype=torch.float64)
tensor([-2.2651, -3.7003, -3.6072, -4.7389, -4.5694], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0104, device='cuda:0', dtype=torch.float64)
tensor([-2.2628, -3.7030, -3.6055, -4.7389, -4.5652], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0480, device='cuda:0', dtype=torch.float64)
tensor([-2.2596, -3.7054, -3.6031, -4.7382, -4.5588], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0429, device='cuda:0', dtype=torch.float64)
tensor([-2.2558, -3.7063, -3.6012, -4.7361, -4.5506], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0609, device='cuda:0', dtype=torch.float64)
tensor([-2.2504, -3.7039, -3.5988, -4.7380, -4.5435], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0082, device='cuda:0', dtype=torch.float64)
tensor([-2.2437, -3.6978, -3.6001, -4.7386, -4.5359], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0199, device='cuda:0', dtype=torch.float64)
tensor([-2.2380, -3.6909, -3.6035, -4.7431, -4.5308], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1316, device='cuda:0', dtype=torch.float64)
tensor([-2.2367, -3.6861, -3.6063, -4.7461, -4.5286], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0574, device='cuda:0', dtype=torch.float64)
tensor([-2.2401, -3.6839, -3.6078, -4.7456, -4.5268], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0222, device='cuda:0', dtype=torch.float64)
tensor([-2.2405, -3.6800, -3.6133, -4.7464, -4.5274], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0257, device='cuda:0', dtype=torch.float64)
tensor([-2.2435, -3.6783, -3.6149, -4.7415, -4.5256], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1835, device='cuda:0', dtype=torch.float64)
tensor([-2.2479, -3.6801, -3.6141, -4.7329, -4.5243], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0425, device='cuda:0', dtype=torch.float64)
tensor([-2.2510, -3.6810, -3.6143, -4.7240, -4.5213], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0490, device='cuda:0', dtype=torch.float64)
tensor([-2.2530, -3.6801, -3.6151, -4.7153, -4.5167], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0423, device='cuda:0', dtype=torch.float64)
tensor([-2.2538, -3.6773, -3.6162, -4.7084, -4.5132], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0730, device='cuda:0', dtype=torch.float64)
tensor([-2.2532, -3.6707, -3.6198, -4.7040, -4.5091], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9502, device='cuda:0', dtype=torch.float64)
tensor([-2.2514, -3.6616, -3.6219, -4.6971, -4.5062], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0699, device='cuda:0', dtype=torch.float64)
tensor([-2.2486, -3.6534, -3.6220, -4.6935, -4.5051], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1931, device='cuda:0', dtype=torch.float64)
tensor([-2.2460, -3.6456, -3.6209, -4.6888, -4.5049], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9914, device='cuda:0', dtype=torch.float64)
tensor([-2.2419, -3.6353, -3.6194, -4.6856, -4.5048], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0403, device='cuda:0', dtype=torch.float64)
tensor([-2.2402, -3.6286, -3.6139, -4.6836, -4.5046], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1981, device='cuda:0', dtype=torch.float64)
tensor([-2.2420, -3.6281, -3.6059, -4.6787, -4.5021], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1046, device='cuda:0', dtype=torch.float64)
tensor([-2.2421, -3.6287, -3.5995, -4.6726, -4.4990], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1330, device='cuda:0', dtype=torch.float64)
tensor([-2.2428, -3.6332, -3.5913, -4.6678, -4.4975], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0468, device='cuda:0', dtype=torch.float64)
tensor([-2.2413, -3.6360, -3.5878, -4.6655, -4.4951], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1604, device='cuda:0', dtype=torch.float64)
tensor([-2.2416, -3.6381, -3.5827, -4.6629, -4.4919], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0255, device='cuda:0', dtype=torch.float64)
tensor([-2.2453, -3.6386, -3.5773, -4.6604, -4.4859], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0593, device='cuda:0', dtype=torch.float64)
tensor([-2.2473, -3.6361, -3.5724, -4.6558, -4.4797], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0968, device='cuda:0', dtype=torch.float64)
tensor([-2.2473, -3.6313, -3.5696, -4.6543, -4.4735], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1171, device='cuda:0', dtype=torch.float64)
tensor([-2.2469, -3.6265, -3.5679, -4.6504, -4.4686], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0088, device='cuda:0', dtype=torch.float64)
tensor([-2.2459, -3.6231, -3.5675, -4.6472, -4.4642], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0246, device='cuda:0', dtype=torch.float64)
tensor([-2.2446, -3.6186, -3.5669, -4.6394, -4.4606], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9531, device='cuda:0', dtype=torch.float64)
tensor([-2.2375, -3.6115, -3.5700, -4.6387, -4.4564], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9777, device='cuda:0', dtype=torch.float64)
tensor([-2.2293, -3.6017, -3.5718, -4.6391, -4.4531], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0829, device='cuda:0', dtype=torch.float64)
tensor([-2.2246, -3.5941, -3.5690, -4.6388, -4.4490], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0111, device='cuda:0', dtype=torch.float64)
tensor([-2.2210, -3.5882, -3.5662, -4.6385, -4.4472], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0442, device='cuda:0', dtype=torch.float64)
tensor([-2.2196, -3.5849, -3.5658, -4.6362, -4.4472], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0047, device='cuda:0', dtype=torch.float64)
tensor([-2.2220, -3.5849, -3.5625, -4.6322, -4.4497], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9867, device='cuda:0', dtype=torch.float64)
tensor([-2.2248, -3.5862, -3.5590, -4.6274, -4.4516], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9546, device='cuda:0', dtype=torch.float64)
tensor([-2.2270, -3.5881, -3.5570, -4.6234, -4.4523], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1134, device='cuda:0', dtype=torch.float64)
tensor([-2.2290, -3.5908, -3.5567, -4.6186, -4.4538], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9465, device='cuda:0', dtype=torch.float64)
tensor([-2.2323, -3.5945, -3.5537, -4.6104, -4.4523], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9408, device='cuda:0', dtype=torch.float64)
tensor([-2.2365, -3.5972, -3.5515, -4.6031, -4.4505], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9905, device='cuda:0', dtype=torch.float64)
tensor([-2.2393, -3.5984, -3.5493, -4.5967, -4.4459], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1684, device='cuda:0', dtype=torch.float64)
tensor([-2.2414, -3.5979, -3.5496, -4.5916, -4.4373], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9653, device='cuda:0', dtype=torch.float64)
tensor([-2.2402, -3.5951, -3.5528, -4.5892, -4.4292], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9548, device='cuda:0', dtype=torch.float64)
tensor([-2.2359, -3.5906, -3.5576, -4.5918, -4.4212], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0597, device='cuda:0', dtype=torch.float64)
tensor([-2.2347, -3.5887, -3.5605, -4.5919, -4.4150], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9679, device='cuda:0', dtype=torch.float64)
tensor([-2.2335, -3.5870, -3.5643, -4.5895, -4.4108], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0245, device='cuda:0', dtype=torch.float64)
tensor([-2.2314, -3.5841, -3.5648, -4.5910, -4.4082], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9701, device='cuda:0', dtype=torch.float64)
tensor([-2.2290, -3.5801, -3.5625, -4.5907, -4.4056], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0077, device='cuda:0', dtype=torch.float64)
tensor([-2.2283, -3.5761, -3.5544, -4.5881, -4.4037], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9233, device='cuda:0', dtype=torch.float64)
tensor([-2.2280, -3.5722, -3.5453, -4.5848, -4.4025], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0038, device='cuda:0', dtype=torch.float64)
tensor([-2.2283, -3.5669, -3.5365, -4.5815, -4.4010], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8423, device='cuda:0', dtype=torch.float64)
tensor([-2.2282, -3.5636, -3.5288, -4.5776, -4.3989], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0482, device='cuda:0', dtype=torch.float64)
tensor([-2.2259, -3.5604, -3.5239, -4.5751, -4.3995], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0284, device='cuda:0', dtype=torch.float64)
tensor([-2.2220, -3.5572, -3.5227, -4.5721, -4.4004], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0173, device='cuda:0', dtype=torch.float64)
tensor([-2.2187, -3.5588, -3.5218, -4.5678, -4.4005], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0763, device='cuda:0', dtype=torch.float64)
tensor([-2.2161, -3.5617, -3.5215, -4.5637, -4.3996], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1028, device='cuda:0', dtype=torch.float64)
tensor([-2.2109, -3.5614, -3.5274, -4.5636, -4.3973], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0483, device='cuda:0', dtype=torch.float64)
tensor([-2.2077, -3.5641, -3.5310, -4.5638, -4.3953], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1850, device='cuda:0', dtype=torch.float64)
tensor([-2.2090, -3.5699, -3.5325, -4.5619, -4.3954], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0445, device='cuda:0', dtype=torch.float64)
tensor([-2.2125, -3.5733, -3.5322, -4.5604, -4.3953], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9952, device='cuda:0', dtype=torch.float64)
tensor([-2.2157, -3.5768, -3.5281, -4.5606, -4.3931], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9528, device='cuda:0', dtype=torch.float64)
tensor([-2.2195, -3.5788, -3.5233, -4.5589, -4.3899], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0287, device='cuda:0', dtype=torch.float64)
tensor([-2.2222, -3.5792, -3.5173, -4.5557, -4.3860], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0161, device='cuda:0', dtype=torch.float64)
tensor([-2.2224, -3.5738, -3.5137, -4.5536, -4.3836], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9669, device='cuda:0', dtype=torch.float64)
tensor([-2.2225, -3.5643, -3.5104, -4.5516, -4.3819], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0590, device='cuda:0', dtype=torch.float64)
tensor([-2.2231, -3.5553, -3.5075, -4.5475, -4.3826], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1036, device='cuda:0', dtype=torch.float64)
tensor([-2.2217, -3.5436, -3.5086, -4.5458, -4.3855], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0436, device='cuda:0', dtype=torch.float64)
tensor([-2.2219, -3.5387, -3.5090, -4.5423, -4.3892], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1071, device='cuda:0', dtype=torch.float64)
tensor([-2.2226, -3.5367, -3.5076, -4.5350, -4.3924], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0662, device='cuda:0', dtype=torch.float64)
tensor([-2.2247, -3.5380, -3.5041, -4.5253, -4.3953], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9774, device='cuda:0', dtype=torch.float64)
tensor([-2.2212, -3.5412, -3.5045, -4.5180, -4.3967], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0087, device='cuda:0', dtype=torch.float64)
tensor([-2.2159, -3.5437, -3.5043, -4.5151, -4.3968], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0730, device='cuda:0', dtype=torch.float64)
tensor([-2.2071, -3.5425, -3.5060, -4.5174, -4.3935], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9889, device='cuda:0', dtype=torch.float64)
tensor([-2.2002, -3.5420, -3.5050, -4.5222, -4.3898], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0811, device='cuda:0', dtype=torch.float64)
tensor([-2.1961, -3.5381, -3.5037, -4.5258, -4.3855], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0673, device='cuda:0', dtype=torch.float64)
tensor([-2.1932, -3.5338, -3.5022, -4.5299, -4.3785], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9148, device='cuda:0', dtype=torch.float64)
tensor([-2.1894, -3.5267, -3.5018, -4.5356, -4.3716], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0260, device='cuda:0', dtype=torch.float64)
tensor([-2.1910, -3.5193, -3.4994, -4.5380, -4.3649], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9503, device='cuda:0', dtype=torch.float64)
tensor([-2.1979, -3.5176, -3.4923, -4.5349, -4.3594], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9780, device='cuda:0', dtype=torch.float64)
tensor([-2.2010, -3.5146, -3.4888, -4.5333, -4.3542], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1341, device='cuda:0', dtype=torch.float64)
tensor([-2.2019, -3.5113, -3.4857, -4.5295, -4.3529], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8855, device='cuda:0', dtype=torch.float64)
tensor([-2.2016, -3.5104, -3.4836, -4.5250, -4.3533], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1317, device='cuda:0', dtype=torch.float64)
tensor([-2.1960, -3.5087, -3.4873, -4.5221, -4.3509], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0952, device='cuda:0', dtype=torch.float64)
tensor([-2.1869, -3.5066, -3.4923, -4.5211, -4.3461], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0262, device='cuda:0', dtype=torch.float64)
tensor([-2.1779, -3.5008, -3.4972, -4.5217, -4.3415], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0316, device='cuda:0', dtype=torch.float64)
tensor([-2.1696, -3.4978, -3.4995, -4.5208, -4.3374], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0535, device='cuda:0', dtype=torch.float64)
tensor([-2.1658, -3.4934, -3.5021, -4.5182, -4.3315], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0556, device='cuda:0', dtype=torch.float64)
tensor([-2.1686, -3.4909, -3.5018, -4.5100, -4.3295], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1746, device='cuda:0', dtype=torch.float64)
tensor([-2.1764, -3.4960, -3.5013, -4.4972, -4.3326], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9256, device='cuda:0', dtype=torch.float64)
tensor([-2.1859, -3.5030, -3.4966, -4.4833, -4.3353], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0159, device='cuda:0', dtype=torch.float64)
tensor([-2.1934, -3.5098, -3.4908, -4.4706, -4.3385], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0327, device='cuda:0', dtype=torch.float64)
tensor([-2.2011, -3.5141, -3.4839, -4.4602, -4.3391], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1090, device='cuda:0', dtype=torch.float64)
tensor([-2.2079, -3.5136, -3.4761, -4.4525, -4.3377], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9079, device='cuda:0', dtype=torch.float64)
tensor([-2.2098, -3.5110, -3.4713, -4.4495, -4.3346], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9055, device='cuda:0', dtype=torch.float64)
tensor([-2.2059, -3.5033, -3.4685, -4.4509, -4.3302], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9268, device='cuda:0', dtype=torch.float64)
tensor([-2.2000, -3.4960, -3.4681, -4.4551, -4.3241], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9597, device='cuda:0', dtype=torch.float64)
tensor([-2.1936, -3.4903, -3.4692, -4.4595, -4.3184], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0080, device='cuda:0', dtype=torch.float64)
tensor([-2.1885, -3.4855, -3.4676, -4.4609, -4.3104], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0307, device='cuda:0', dtype=torch.float64)
tensor([-2.1845, -3.4836, -3.4658, -4.4626, -4.3011], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9444, device='cuda:0', dtype=torch.float64)
tensor([-2.1790, -3.4812, -3.4636, -4.4639, -4.2927], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9611, device='cuda:0', dtype=torch.float64)
tensor([-2.1730, -3.4777, -3.4630, -4.4684, -4.2848], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9654, device='cuda:0', dtype=torch.float64)
tensor([-2.1700, -3.4731, -3.4620, -4.4691, -4.2787], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9434, device='cuda:0', dtype=torch.float64)
tensor([-2.1711, -3.4705, -3.4577, -4.4658, -4.2725], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0159, device='cuda:0', dtype=torch.float64)
tensor([-2.1763, -3.4677, -3.4529, -4.4595, -4.2689], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1259, device='cuda:0', dtype=torch.float64)
tensor([-2.1818, -3.4653, -3.4514, -4.4542, -4.2655], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9804, device='cuda:0', dtype=torch.float64)
tensor([-2.1872, -3.4596, -3.4519, -4.4509, -4.2624], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0022, device='cuda:0', dtype=torch.float64)
tensor([-2.1932, -3.4578, -3.4535, -4.4446, -4.2625], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0452, device='cuda:0', dtype=torch.float64)
tensor([-2.1962, -3.4583, -3.4568, -4.4384, -4.2605], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9087, device='cuda:0', dtype=torch.float64)
tensor([-2.1973, -3.4606, -3.4621, -4.4303, -4.2614], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9518, device='cuda:0', dtype=torch.float64)
tensor([-2.1970, -3.4637, -3.4665, -4.4262, -4.2637], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1180, device='cuda:0', dtype=torch.float64)
tensor([-2.1915, -3.4636, -3.4726, -4.4298, -4.2648], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0246, device='cuda:0', dtype=torch.float64)
tensor([-2.1855, -3.4626, -3.4758, -4.4364, -4.2656], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9709, device='cuda:0', dtype=torch.float64)
tensor([-2.1782, -3.4611, -3.4770, -4.4442, -4.2658], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1629, device='cuda:0', dtype=torch.float64)
tensor([-2.1736, -3.4589, -3.4761, -4.4495, -4.2660], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0708, device='cuda:0', dtype=torch.float64)
tensor([-2.1707, -3.4562, -3.4730, -4.4494, -4.2662], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0820, device='cuda:0', dtype=torch.float64)
tensor([-2.1721, -3.4536, -3.4670, -4.4444, -4.2681], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9478, device='cuda:0', dtype=torch.float64)
tensor([-2.1735, -3.4506, -3.4613, -4.4359, -4.2697], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1496, device='cuda:0', dtype=torch.float64)
tensor([-2.1789, -3.4501, -3.4542, -4.4233, -4.2719], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8917, device='cuda:0', dtype=torch.float64)
tensor([-2.1844, -3.4523, -3.4482, -4.4128, -4.2746], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0401, device='cuda:0', dtype=torch.float64)
tensor([-2.1883, -3.4565, -3.4444, -4.4027, -4.2759], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9594, device='cuda:0', dtype=torch.float64)
tensor([-2.1878, -3.4570, -3.4433, -4.3957, -4.2756], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0268, device='cuda:0', dtype=torch.float64)
tensor([-2.1805, -3.4530, -3.4480, -4.3949, -4.2748], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0889, device='cuda:0', dtype=torch.float64)
tensor([-2.1690, -3.4452, -3.4554, -4.4004, -4.2734], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9183, device='cuda:0', dtype=torch.float64)
tensor([-2.1605, -3.4390, -3.4594, -4.4050, -4.2718], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9790, device='cuda:0', dtype=torch.float64)
tensor([-2.1552, -3.4349, -3.4603, -4.4081, -4.2700], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9503, device='cuda:0', dtype=torch.float64)
tensor([-2.1547, -3.4312, -3.4575, -4.4061, -4.2677], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9144, device='cuda:0', dtype=torch.float64)
tensor([-2.1560, -3.4294, -3.4525, -4.4024, -4.2626], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9806, device='cuda:0', dtype=torch.float64)
tensor([-2.1609, -3.4307, -3.4435, -4.3939, -4.2574], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0928, device='cuda:0', dtype=torch.float64)
tensor([-2.1668, -3.4333, -3.4335, -4.3873, -4.2535], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0006, device='cuda:0', dtype=torch.float64)
tensor([-2.1730, -3.4361, -3.4208, -4.3841, -4.2506], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0150, device='cuda:0', dtype=torch.float64)
tensor([-2.1758, -3.4367, -3.4091, -4.3848, -4.2464], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0647, device='cuda:0', dtype=torch.float64)
tensor([-2.1766, -3.4387, -3.4025, -4.3815, -4.2388], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9853, device='cuda:0', dtype=torch.float64)
tensor([-2.1735, -3.4389, -3.4036, -4.3847, -4.2309], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1707, device='cuda:0', dtype=torch.float64)
tensor([-2.1683, -3.4396, -3.4068, -4.3881, -4.2243], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9956, device='cuda:0', dtype=torch.float64)
tensor([-2.1617, -3.4388, -3.4144, -4.3921, -4.2195], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9044, device='cuda:0', dtype=torch.float64)
tensor([-2.1528, -3.4368, -3.4230, -4.3973, -4.2161], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9707, device='cuda:0', dtype=torch.float64)
tensor([-2.1443, -3.4327, -3.4334, -4.4018, -4.2107], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9547, device='cuda:0', dtype=torch.float64)
tensor([-2.1409, -3.4283, -3.4379, -4.3990, -4.2047], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0491, device='cuda:0', dtype=torch.float64)
tensor([-2.1412, -3.4262, -3.4362, -4.3953, -4.2000], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0526, device='cuda:0', dtype=torch.float64)
tensor([-2.1466, -3.4288, -3.4299, -4.3840, -4.1953], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1365, device='cuda:0', dtype=torch.float64)
tensor([-2.1538, -3.4281, -3.4223, -4.3750, -4.1926], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0299, device='cuda:0', dtype=torch.float64)
tensor([-2.1630, -3.4283, -3.4174, -4.3650, -4.1937], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0164, device='cuda:0', dtype=torch.float64)
tensor([-2.1704, -3.4282, -3.4165, -4.3545, -4.1976], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0837, device='cuda:0', dtype=torch.float64)
tensor([-2.1724, -3.4241, -3.4200, -4.3494, -4.2000], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1291, device='cuda:0', dtype=torch.float64)
tensor([-2.1655, -3.4174, -3.4281, -4.3498, -4.1997], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9752, device='cuda:0', dtype=torch.float64)
tensor([-2.1565, -3.4111, -3.4356, -4.3509, -4.1986], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9287, device='cuda:0', dtype=torch.float64)
tensor([-2.1495, -3.4082, -3.4394, -4.3509, -4.1982], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0351, device='cuda:0', dtype=torch.float64)
tensor([-2.1452, -3.4084, -3.4384, -4.3466, -4.1985], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0257, device='cuda:0', dtype=torch.float64)
tensor([-2.1430, -3.4112, -3.4328, -4.3401, -4.1989], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0274, device='cuda:0', dtype=torch.float64)
tensor([-2.1430, -3.4139, -3.4248, -4.3357, -4.2021], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0361, device='cuda:0', dtype=torch.float64)
tensor([-2.1467, -3.4183, -3.4131, -4.3322, -4.2042], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3287, device='cuda:0', dtype=torch.float64)
tensor([-2.1538, -3.4159, -3.3996, -4.3311, -4.2061], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0843, device='cuda:0', dtype=torch.float64)
tensor([-2.1609, -3.4081, -3.3889, -4.3323, -4.2066], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9561, device='cuda:0', dtype=torch.float64)
tensor([-2.1668, -3.3994, -3.3793, -4.3309, -4.2070], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0054, device='cuda:0', dtype=torch.float64)
tensor([-2.1715, -3.3941, -3.3747, -4.3294, -4.2038], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8971, device='cuda:0', dtype=torch.float64)
tensor([-2.1713, -3.3873, -3.3764, -4.3306, -4.1983], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0449, device='cuda:0', dtype=torch.float64)
tensor([-2.1752, -3.3902, -3.3768, -4.3263, -4.1946], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0283, device='cuda:0', dtype=torch.float64)
tensor([-2.1767, -3.3930, -3.3789, -4.3226, -4.1903], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0227, device='cuda:0', dtype=torch.float64)
tensor([-2.1746, -3.3978, -3.3823, -4.3213, -4.1865], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9168, device='cuda:0', dtype=torch.float64)
tensor([-2.1679, -3.3995, -3.3880, -4.3230, -4.1833], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0298, device='cuda:0', dtype=torch.float64)
tensor([-2.1587, -3.4016, -3.3968, -4.3290, -4.1795], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8960, device='cuda:0', dtype=torch.float64)
tensor([-2.1475, -3.4003, -3.4051, -4.3402, -4.1737], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9059, device='cuda:0', dtype=torch.float64)
tensor([-2.1385, -3.3971, -3.4110, -4.3452, -4.1683], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1434, device='cuda:0', dtype=torch.float64)
tensor([-2.1364, -3.3981, -3.4132, -4.3419, -4.1642], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0019, device='cuda:0', dtype=torch.float64)
tensor([-2.1330, -3.3977, -3.4164, -4.3395, -4.1630], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0597, device='cuda:0', dtype=torch.float64)
tensor([-2.1310, -3.3962, -3.4194, -4.3399, -4.1628], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0191, device='cuda:0', dtype=torch.float64)
tensor([-2.1311, -3.3917, -3.4180, -4.3388, -4.1657], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0846, device='cuda:0', dtype=torch.float64)
tensor([-2.1346, -3.3826, -3.4144, -4.3372, -4.1706], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0833, device='cuda:0', dtype=torch.float64)
tensor([-2.1438, -3.3734, -3.4079, -4.3302, -4.1758], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0502, device='cuda:0', dtype=torch.float64)
tensor([-2.1536, -3.3689, -3.3985, -4.3213, -4.1808], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0377, device='cuda:0', dtype=torch.float64)
tensor([-2.1627, -3.3662, -3.3862, -4.3117, -4.1852], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9745, device='cuda:0', dtype=torch.float64)
tensor([-2.1658, -3.3624, -3.3738, -4.3088, -4.1836], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0293, device='cuda:0', dtype=torch.float64)
tensor([-2.1634, -3.3593, -3.3650, -4.3106, -4.1801], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1064, device='cuda:0', dtype=torch.float64)
tensor([-2.1543, -3.3521, -3.3637, -4.3206, -4.1732], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9851, device='cuda:0', dtype=torch.float64)
tensor([-2.1428, -3.3443, -3.3668, -4.3324, -4.1665], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0212, device='cuda:0', dtype=torch.float64)
tensor([-2.1340, -3.3414, -3.3692, -4.3401, -4.1597], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8686, device='cuda:0', dtype=torch.float64)
tensor([-2.1260, -3.3413, -3.3722, -4.3428, -4.1535], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1299, device='cuda:0', dtype=torch.float64)
tensor([-2.1231, -3.3435, -3.3760, -4.3391, -4.1493], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9195, device='cuda:0', dtype=torch.float64)
tensor([-2.1252, -3.3489, -3.3777, -4.3295, -4.1459], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9467, device='cuda:0', dtype=torch.float64)
tensor([-2.1298, -3.3525, -3.3810, -4.3218, -4.1457], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0058, device='cuda:0', dtype=torch.float64)
tensor([-2.1357, -3.3531, -3.3864, -4.3149, -4.1453], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0215, device='cuda:0', dtype=torch.float64)
tensor([-2.1405, -3.3562, -3.3923, -4.3112, -4.1441], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9742, device='cuda:0', dtype=torch.float64)
tensor([-2.1450, -3.3602, -3.3957, -4.3066, -4.1402], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9828, device='cuda:0', dtype=torch.float64)
tensor([-2.1479, -3.3629, -3.3965, -4.3042, -4.1358], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9116, device='cuda:0', dtype=torch.float64)
tensor([-2.1506, -3.3679, -3.3938, -4.3019, -4.1333], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9351, device='cuda:0', dtype=torch.float64)
tensor([-2.1511, -3.3696, -3.3901, -4.3019, -4.1275], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8810, device='cuda:0', dtype=torch.float64)
tensor([-2.1518, -3.3698, -3.3841, -4.3011, -4.1214], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0386, device='cuda:0', dtype=torch.float64)
tensor([-2.1550, -3.3707, -3.3758, -4.2968, -4.1160], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8940, device='cuda:0', dtype=torch.float64)
tensor([-2.1564, -3.3720, -3.3692, -4.2945, -4.1111], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1358, device='cuda:0', dtype=torch.float64)
tensor([-2.1571, -3.3726, -3.3644, -4.2883, -4.1109], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8762, device='cuda:0', dtype=torch.float64)
tensor([-2.1528, -3.3679, -3.3641, -4.2816, -4.1084], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0503, device='cuda:0', dtype=torch.float64)
tensor([-2.1432, -3.3571, -3.3687, -4.2817, -4.1046], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0278, device='cuda:0', dtype=torch.float64)
tensor([-2.1319, -3.3476, -3.3739, -4.2846, -4.1003], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8539, device='cuda:0', dtype=torch.float64)
tensor([-2.1270, -3.3431, -3.3758, -4.2842, -4.0951], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0769, device='cuda:0', dtype=torch.float64)
tensor([-2.1266, -3.3456, -3.3761, -4.2787, -4.0903], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9443, device='cuda:0', dtype=torch.float64)
tensor([-2.1302, -3.3511, -3.3754, -4.2727, -4.0869], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9982, device='cuda:0', dtype=torch.float64)
tensor([-2.1357, -3.3569, -3.3725, -4.2644, -4.0860], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9297, device='cuda:0', dtype=torch.float64)
tensor([-2.1379, -3.3625, -3.3710, -4.2587, -4.0821], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0593, device='cuda:0', dtype=torch.float64)
tensor([-2.1420, -3.3692, -3.3688, -4.2549, -4.0778], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0257, device='cuda:0', dtype=torch.float64)
tensor([-2.1459, -3.3708, -3.3619, -4.2495, -4.0740], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0853, device='cuda:0', dtype=torch.float64)
tensor([-2.1443, -3.3666, -3.3551, -4.2499, -4.0687], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9892, device='cuda:0', dtype=torch.float64)
tensor([-2.1421, -3.3594, -3.3475, -4.2538, -4.0658], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0205, device='cuda:0', dtype=torch.float64)
tensor([-2.1392, -3.3532, -3.3404, -4.2562, -4.0655], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1406, device='cuda:0', dtype=torch.float64)
tensor([-2.1345, -3.3470, -3.3371, -4.2609, -4.0661], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9829, device='cuda:0', dtype=torch.float64)
tensor([-2.1310, -3.3408, -3.3390, -4.2615, -4.0716], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9378, device='cuda:0', dtype=torch.float64)
tensor([-2.1288, -3.3334, -3.3432, -4.2619, -4.0785], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2006, device='cuda:0', dtype=torch.float64)
tensor([-2.1304, -3.3338, -3.3441, -4.2554, -4.0860], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9323, device='cuda:0', dtype=torch.float64)
tensor([-2.1285, -3.3341, -3.3475, -4.2527, -4.0928], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0820, device='cuda:0', dtype=torch.float64)
tensor([-2.1202, -3.3306, -3.3539, -4.2585, -4.0968], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0651, device='cuda:0', dtype=torch.float64)
tensor([-2.1119, -3.3263, -3.3613, -4.2611, -4.0949], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0559, device='cuda:0', dtype=torch.float64)
tensor([-2.1102, -3.3261, -3.3636, -4.2601, -4.0927], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9514, device='cuda:0', dtype=torch.float64)
tensor([-2.1116, -3.3255, -3.3661, -4.2580, -4.0887], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9685, device='cuda:0', dtype=torch.float64)
tensor([-2.1169, -3.3289, -3.3651, -4.2519, -4.0844], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1174, device='cuda:0', dtype=torch.float64)
tensor([-2.1295, -3.3376, -3.3595, -4.2393, -4.0799], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0068, device='cuda:0', dtype=torch.float64)
tensor([-2.1423, -3.3449, -3.3517, -4.2333, -4.0760], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9140, device='cuda:0', dtype=torch.float64)
tensor([-2.1486, -3.3481, -3.3487, -4.2343, -4.0695], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0275, device='cuda:0', dtype=torch.float64)
tensor([-2.1517, -3.3494, -3.3494, -4.2354, -4.0650], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0551, device='cuda:0', dtype=torch.float64)
tensor([-2.1510, -3.3477, -3.3535, -4.2380, -4.0639], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8911, device='cuda:0', dtype=torch.float64)
tensor([-2.1467, -3.3404, -3.3577, -4.2427, -4.0634], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0120, device='cuda:0', dtype=torch.float64)
tensor([-2.1411, -3.3337, -3.3634, -4.2475, -4.0625], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9560, device='cuda:0', dtype=torch.float64)
tensor([-2.1334, -3.3267, -3.3688, -4.2538, -4.0600], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0084, device='cuda:0', dtype=torch.float64)
tensor([-2.1261, -3.3185, -3.3733, -4.2598, -4.0583], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0730, device='cuda:0', dtype=torch.float64)
tensor([-2.1219, -3.3162, -3.3721, -4.2626, -4.0563], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9035, device='cuda:0', dtype=torch.float64)
tensor([-2.1201, -3.3153, -3.3683, -4.2630, -4.0544], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0362, device='cuda:0', dtype=torch.float64)
tensor([-2.1219, -3.3181, -3.3627, -4.2577, -4.0531], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1261, device='cuda:0', dtype=torch.float64)
tensor([-2.1292, -3.3245, -3.3530, -4.2465, -4.0538], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2020, device='cuda:0', dtype=torch.float64)
tensor([-2.1375, -3.3308, -3.3425, -4.2325, -4.0574], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9152, device='cuda:0', dtype=torch.float64)
tensor([-2.1422, -3.3344, -3.3370, -4.2214, -4.0635], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9664, device='cuda:0', dtype=torch.float64)
tensor([-2.1462, -3.3350, -3.3338, -4.2130, -4.0702], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2205, device='cuda:0', dtype=torch.float64)
tensor([-2.1441, -3.3290, -3.3348, -4.2124, -4.0743], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9871, device='cuda:0', dtype=torch.float64)
tensor([-2.1365, -3.3204, -3.3404, -4.2159, -4.0752], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9474, device='cuda:0', dtype=torch.float64)
tensor([-2.1274, -3.3136, -3.3450, -4.2185, -4.0740], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8972, device='cuda:0', dtype=torch.float64)
tensor([-2.1172, -3.3081, -3.3482, -4.2216, -4.0718], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0814, device='cuda:0', dtype=torch.float64)
tensor([-2.1093, -3.3047, -3.3481, -4.2224, -4.0707], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0046, device='cuda:0', dtype=torch.float64)
tensor([-2.1021, -3.3020, -3.3496, -4.2195, -4.0672], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0650, device='cuda:0', dtype=torch.float64)
tensor([-2.1011, -3.3013, -3.3474, -4.2149, -4.0642], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1491, device='cuda:0', dtype=torch.float64)
tensor([-2.1045, -3.3021, -3.3409, -4.2078, -4.0633], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0645, device='cuda:0', dtype=torch.float64)
tensor([-2.1085, -3.3055, -3.3356, -4.2010, -4.0636], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8885, device='cuda:0', dtype=torch.float64)
tensor([-2.1116, -3.3082, -3.3325, -4.1968, -4.0622], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8704, device='cuda:0', dtype=torch.float64)
tensor([-2.1102, -3.3047, -3.3343, -4.1982, -4.0569], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9769, device='cuda:0', dtype=torch.float64)
tensor([-2.1073, -3.3017, -3.3340, -4.2008, -4.0512], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0145, device='cuda:0', dtype=torch.float64)
tensor([-2.1041, -3.2988, -3.3339, -4.2047, -4.0453], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9383, device='cuda:0', dtype=torch.float64)
tensor([-2.0996, -3.2971, -3.3379, -4.2096, -4.0393], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0590, device='cuda:0', dtype=torch.float64)
tensor([-2.0964, -3.2978, -3.3397, -4.2116, -4.0357], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9154, device='cuda:0', dtype=torch.float64)
tensor([-2.0966, -3.2967, -3.3393, -4.2097, -4.0357], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9534, device='cuda:0', dtype=torch.float64)
tensor([-2.0969, -3.2964, -3.3391, -4.2033, -4.0376], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8945, device='cuda:0', dtype=torch.float64)
tensor([-2.0962, -3.2935, -3.3400, -4.2021, -4.0394], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9352, device='cuda:0', dtype=torch.float64)
tensor([-2.0935, -3.2894, -3.3428, -4.2059, -4.0434], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9467, device='cuda:0', dtype=torch.float64)
tensor([-2.0942, -3.2893, -3.3435, -4.2054, -4.0487], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9465, device='cuda:0', dtype=torch.float64)
tensor([-2.0956, -3.2916, -3.3398, -4.2009, -4.0506], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9499, device='cuda:0', dtype=torch.float64)
tensor([-2.0950, -3.2908, -3.3381, -4.2000, -4.0482], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0885, device='cuda:0', dtype=torch.float64)
tensor([-2.0944, -3.2865, -3.3385, -4.1993, -4.0431], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0113, device='cuda:0', dtype=torch.float64)
tensor([-2.0997, -3.2813, -3.3387, -4.1936, -4.0363], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9787, device='cuda:0', dtype=torch.float64)
tensor([-2.1072, -3.2822, -3.3366, -4.1839, -4.0290], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9351, device='cuda:0', dtype=torch.float64)
tensor([-2.1163, -3.2879, -3.3331, -4.1729, -4.0215], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0256, device='cuda:0', dtype=torch.float64)
tensor([-2.1275, -3.2974, -3.3287, -4.1585, -4.0174], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0370, device='cuda:0', dtype=torch.float64)
tensor([-2.1334, -3.3039, -3.3278, -4.1492, -4.0139], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9612, device='cuda:0', dtype=torch.float64)
tensor([-2.1344, -3.3057, -3.3292, -4.1450, -4.0114], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9092, device='cuda:0', dtype=torch.float64)
tensor([-2.1315, -3.3049, -3.3321, -4.1479, -4.0093], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9290, device='cuda:0', dtype=torch.float64)
tensor([-2.1243, -3.3035, -3.3349, -4.1546, -4.0085], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9777, device='cuda:0', dtype=torch.float64)
tensor([-2.1094, -3.2992, -3.3403, -4.1691, -4.0076], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9791, device='cuda:0', dtype=torch.float64)
tensor([-2.0971, -3.2954, -3.3442, -4.1808, -4.0054], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0127, device='cuda:0', dtype=torch.float64)
tensor([-2.0873, -3.2910, -3.3472, -4.1900, -4.0043], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9516, device='cuda:0', dtype=torch.float64)
tensor([-2.0821, -3.2853, -3.3432, -4.1930, -4.0045], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9873, device='cuda:0', dtype=torch.float64)
tensor([-2.0834, -3.2818, -3.3357, -4.1890, -4.0051], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9030, device='cuda:0', dtype=torch.float64)
tensor([-2.0881, -3.2786, -3.3258, -4.1826, -4.0028], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9184, device='cuda:0', dtype=torch.float64)
tensor([-2.0939, -3.2742, -3.3129, -4.1739, -4.0015], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9251, device='cuda:0', dtype=torch.float64)
tensor([-2.0990, -3.2668, -3.3019, -4.1620, -3.9991], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0750, device='cuda:0', dtype=torch.float64)
tensor([-2.1020, -3.2588, -3.2912, -4.1522, -3.9974], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8439, device='cuda:0', dtype=torch.float64)
tensor([-2.1044, -3.2536, -3.2862, -4.1446, -3.9948], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0149, device='cuda:0', dtype=torch.float64)
tensor([-2.1084, -3.2532, -3.2799, -4.1383, -3.9969], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9640, device='cuda:0', dtype=torch.float64)
tensor([-2.1124, -3.2593, -3.2761, -4.1334, -3.9980], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8998, device='cuda:0', dtype=torch.float64)
tensor([-2.1118, -3.2639, -3.2771, -4.1339, -3.9975], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0578, device='cuda:0', dtype=torch.float64)
tensor([-2.1093, -3.2690, -3.2788, -4.1372, -3.9988], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8189, device='cuda:0', dtype=torch.float64)
tensor([-2.1044, -3.2703, -3.2827, -4.1436, -4.0011], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9923, device='cuda:0', dtype=torch.float64)
tensor([-2.1009, -3.2687, -3.2875, -4.1490, -4.0034], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0497, device='cuda:0', dtype=torch.float64)
tensor([-2.0953, -3.2640, -3.2926, -4.1591, -4.0033], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0041, device='cuda:0', dtype=torch.float64)
tensor([-2.0923, -3.2582, -3.2981, -4.1676, -4.0043], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9183, device='cuda:0', dtype=torch.float64)
tensor([-2.0936, -3.2570, -3.2986, -4.1693, -4.0031], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9864, device='cuda:0', dtype=torch.float64)
tensor([-2.0962, -3.2560, -3.3019, -4.1710, -4.0001], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9223, device='cuda:0', dtype=torch.float64)
tensor([-2.0993, -3.2569, -3.3027, -4.1693, -3.9971], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9833, device='cuda:0', dtype=torch.float64)
tensor([-2.1006, -3.2570, -3.3082, -4.1656, -3.9936], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0007, device='cuda:0', dtype=torch.float64)
tensor([-2.1016, -3.2574, -3.3140, -4.1607, -3.9875], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0781, device='cuda:0', dtype=torch.float64)
tensor([-2.1022, -3.2569, -3.3167, -4.1563, -3.9815], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9814, device='cuda:0', dtype=torch.float64)
tensor([-2.1030, -3.2525, -3.3191, -4.1527, -3.9730], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9642, device='cuda:0', dtype=torch.float64)
tensor([-2.1047, -3.2493, -3.3181, -4.1484, -3.9637], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9827, device='cuda:0', dtype=torch.float64)
tensor([-2.1054, -3.2442, -3.3182, -4.1448, -3.9591], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2232, device='cuda:0', dtype=torch.float64)
tensor([-2.1089, -3.2430, -3.3176, -4.1393, -3.9566], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9585, device='cuda:0', dtype=torch.float64)
tensor([-2.1135, -3.2448, -3.3140, -4.1292, -3.9579], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9602, device='cuda:0', dtype=torch.float64)
tensor([-2.1157, -3.2466, -3.3139, -4.1212, -3.9621], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8506, device='cuda:0', dtype=torch.float64)
tensor([-2.1145, -3.2495, -3.3166, -4.1155, -3.9667], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0520, device='cuda:0', dtype=torch.float64)
tensor([-2.1114, -3.2498, -3.3218, -4.1122, -3.9738], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0910, device='cuda:0', dtype=torch.float64)
tensor([-2.1035, -3.2439, -3.3261, -4.1211, -3.9787], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0178, device='cuda:0', dtype=torch.float64)
tensor([-2.0932, -3.2370, -3.3291, -4.1340, -3.9815], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8995, device='cuda:0', dtype=torch.float64)
tensor([-2.0855, -3.2308, -3.3297, -4.1442, -3.9822], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0263, device='cuda:0', dtype=torch.float64)
tensor([-2.0830, -3.2280, -3.3262, -4.1499, -3.9839], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1277, device='cuda:0', dtype=torch.float64)
tensor([-2.0852, -3.2298, -3.3180, -4.1484, -3.9857], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1041, device='cuda:0', dtype=torch.float64)
tensor([-2.0890, -3.2325, -3.3100, -4.1467, -3.9857], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9391, device='cuda:0', dtype=torch.float64)
tensor([-2.0993, -3.2413, -3.2971, -4.1352, -3.9851], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0102, device='cuda:0', dtype=torch.float64)
tensor([-2.1055, -3.2489, -3.2829, -4.1252, -3.9828], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9442, device='cuda:0', dtype=torch.float64)
tensor([-2.1066, -3.2542, -3.2706, -4.1208, -3.9762], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9742, device='cuda:0', dtype=torch.float64)
tensor([-2.1046, -3.2576, -3.2616, -4.1224, -3.9680], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0240, device='cuda:0', dtype=torch.float64)
tensor([-2.0973, -3.2563, -3.2576, -4.1302, -3.9639], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9415, device='cuda:0', dtype=torch.float64)
tensor([-2.0882, -3.2526, -3.2591, -4.1404, -3.9607], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0246, device='cuda:0', dtype=torch.float64)
tensor([-2.0801, -3.2448, -3.2662, -4.1486, -3.9601], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0003, device='cuda:0', dtype=torch.float64)
tensor([-2.0743, -3.2385, -3.2725, -4.1522, -3.9624], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9234, device='cuda:0', dtype=torch.float64)
tensor([-2.0703, -3.2371, -3.2772, -4.1547, -3.9625], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0611, device='cuda:0', dtype=torch.float64)
tensor([-2.0733, -3.2421, -3.2767, -4.1507, -3.9635], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9739, device='cuda:0', dtype=torch.float64)
tensor([-2.0797, -3.2489, -3.2717, -4.1406, -3.9634], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9915, device='cuda:0', dtype=torch.float64)
tensor([-2.0864, -3.2549, -3.2632, -4.1296, -3.9621], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9762, device='cuda:0', dtype=torch.float64)
tensor([-2.0941, -3.2591, -3.2517, -4.1202, -3.9587], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0654, device='cuda:0', dtype=torch.float64)
tensor([-2.0974, -3.2587, -3.2452, -4.1148, -3.9567], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9211, device='cuda:0', dtype=torch.float64)
tensor([-2.0962, -3.2594, -3.2435, -4.1158, -3.9533], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0388, device='cuda:0', dtype=torch.float64)
tensor([-2.0909, -3.2584, -3.2475, -4.1238, -3.9482], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9373, device='cuda:0', dtype=torch.float64)
tensor([-2.0883, -3.2551, -3.2525, -4.1314, -3.9438], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9561, device='cuda:0', dtype=torch.float64)
tensor([-2.0827, -3.2477, -3.2592, -4.1404, -3.9421], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1146, device='cuda:0', dtype=torch.float64)
tensor([-2.0807, -3.2378, -3.2682, -4.1456, -3.9407], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0054, device='cuda:0', dtype=torch.float64)
tensor([-2.0816, -3.2314, -3.2753, -4.1445, -3.9422], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8988, device='cuda:0', dtype=torch.float64)
tensor([-2.0871, -3.2308, -3.2777, -4.1357, -3.9448], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8585, device='cuda:0', dtype=torch.float64)
tensor([-2.0914, -3.2326, -3.2787, -4.1238, -3.9478], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0094, device='cuda:0', dtype=torch.float64)
tensor([-2.0923, -3.2363, -3.2809, -4.1119, -3.9511], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0283, device='cuda:0', dtype=torch.float64)
tensor([-2.0875, -3.2343, -3.2870, -4.1030, -3.9542], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0412, device='cuda:0', dtype=torch.float64)
tensor([-2.0794, -3.2275, -3.2919, -4.0984, -3.9541], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0335, device='cuda:0', dtype=torch.float64)
tensor([-2.0702, -3.2193, -3.2959, -4.0974, -3.9540], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9316, device='cuda:0', dtype=torch.float64)
tensor([-2.0670, -3.2129, -3.2952, -4.0942, -3.9519], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0342, device='cuda:0', dtype=torch.float64)
tensor([-2.0689, -3.2108, -3.2893, -4.0881, -3.9515], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1881, device='cuda:0', dtype=torch.float64)
tensor([-2.0766, -3.2135, -3.2790, -4.0750, -3.9520], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9389, device='cuda:0', dtype=torch.float64)
tensor([-2.0854, -3.2198, -3.2679, -4.0648, -3.9531], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1859, device='cuda:0', dtype=torch.float64)
tensor([-2.0911, -3.2268, -3.2607, -4.0580, -3.9580], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0228, device='cuda:0', dtype=torch.float64)
tensor([-2.0893, -3.2296, -3.2552, -4.0600, -3.9614], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9381, device='cuda:0', dtype=torch.float64)
tensor([-2.0825, -3.2262, -3.2533, -4.0689, -3.9607], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2491, device='cuda:0', dtype=torch.float64)
tensor([-2.0739, -3.2176, -3.2537, -4.0828, -3.9578], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1645, device='cuda:0', dtype=torch.float64)
tensor([-2.0657, -3.2061, -3.2538, -4.0955, -3.9552], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0003, device='cuda:0', dtype=torch.float64)
tensor([-2.0620, -3.1955, -3.2544, -4.1058, -3.9524], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0223, device='cuda:0', dtype=torch.float64)
tensor([-2.0621, -3.1891, -3.2563, -4.1129, -3.9507], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9527, device='cuda:0', dtype=torch.float64)
tensor([-2.0656, -3.1845, -3.2552, -4.1104, -3.9523], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0061, device='cuda:0', dtype=torch.float64)
tensor([-2.0722, -3.1866, -3.2530, -4.1038, -3.9492], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0062, device='cuda:0', dtype=torch.float64)
tensor([-2.0796, -3.1947, -3.2520, -4.0933, -3.9479], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9618, device='cuda:0', dtype=torch.float64)
tensor([-2.0882, -3.2073, -3.2504, -4.0831, -3.9482], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9190, device='cuda:0', dtype=torch.float64)
tensor([-2.0928, -3.2172, -3.2508, -4.0802, -3.9470], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9203, device='cuda:0', dtype=torch.float64)
tensor([-2.0893, -3.2251, -3.2576, -4.0820, -3.9451], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9115, device='cuda:0', dtype=torch.float64)
tensor([-2.0823, -3.2259, -3.2670, -4.0894, -3.9388], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0448, device='cuda:0', dtype=torch.float64)
tensor([-2.0723, -3.2183, -3.2779, -4.0954, -3.9303], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9533, device='cuda:0', dtype=torch.float64)
tensor([-2.0659, -3.2077, -3.2856, -4.0979, -3.9220], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9349, device='cuda:0', dtype=torch.float64)
tensor([-2.0607, -3.1968, -3.2908, -4.1000, -3.9144], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9573, device='cuda:0', dtype=torch.float64)
tensor([-2.0603, -3.1899, -3.2929, -4.0998, -3.9092], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9600, device='cuda:0', dtype=torch.float64)
tensor([-2.0657, -3.1873, -3.2887, -4.0967, -3.9060], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9945, device='cuda:0', dtype=torch.float64)
tensor([-2.0763, -3.1888, -3.2818, -4.0857, -3.9042], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1305, device='cuda:0', dtype=torch.float64)
tensor([-2.0884, -3.1929, -3.2754, -4.0724, -3.9053], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9591, device='cuda:0', dtype=torch.float64)
tensor([-2.0940, -3.1950, -3.2699, -4.0623, -3.9057], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9849, device='cuda:0', dtype=torch.float64)
tensor([-2.0970, -3.1998, -3.2710, -4.0554, -3.9060], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9459, device='cuda:0', dtype=torch.float64)
tensor([-2.0965, -3.2005, -3.2723, -4.0526, -3.9054], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2285, device='cuda:0', dtype=torch.float64)
tensor([-2.0886, -3.1936, -3.2749, -4.0583, -3.9037], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1536, device='cuda:0', dtype=torch.float64)
tensor([-2.0805, -3.1898, -3.2759, -4.0647, -3.9042], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0290, device='cuda:0', dtype=torch.float64)
tensor([-2.0723, -3.1874, -3.2778, -4.0725, -3.9025], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0644, device='cuda:0', dtype=torch.float64)
tensor([-2.0648, -3.1877, -3.2755, -4.0815, -3.9047], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9533, device='cuda:0', dtype=torch.float64)
tensor([-2.0628, -3.1896, -3.2718, -4.0856, -3.9108], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0356, device='cuda:0', dtype=torch.float64)
tensor([-2.0646, -3.1893, -3.2687, -4.0853, -3.9169], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9615, device='cuda:0', dtype=torch.float64)
tensor([-2.0682, -3.1927, -3.2617, -4.0801, -3.9198], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9955, device='cuda:0', dtype=torch.float64)
tensor([-2.0778, -3.2002, -3.2486, -4.0692, -3.9248], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1758, device='cuda:0', dtype=torch.float64)
tensor([-2.0868, -3.2080, -3.2362, -4.0551, -3.9276], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9917, device='cuda:0', dtype=torch.float64)
tensor([-2.0940, -3.2133, -3.2260, -4.0427, -3.9273], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0683, device='cuda:0', dtype=torch.float64)
tensor([-2.0936, -3.2130, -3.2206, -4.0390, -3.9237], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1033, device='cuda:0', dtype=torch.float64)
tensor([-2.0838, -3.2050, -3.2244, -4.0492, -3.9178], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0816, device='cuda:0', dtype=torch.float64)
tensor([-2.0733, -3.1943, -3.2346, -4.0619, -3.9112], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0362, device='cuda:0', dtype=torch.float64)
tensor([-2.0620, -3.1860, -3.2450, -4.0749, -3.9071], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9884, device='cuda:0', dtype=torch.float64)
tensor([-2.0569, -3.1810, -3.2542, -4.0857, -3.9044], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1143, device='cuda:0', dtype=torch.float64)
tensor([-2.0555, -3.1816, -3.2598, -4.0875, -3.9030], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9745, device='cuda:0', dtype=torch.float64)
tensor([-2.0558, -3.1849, -3.2634, -4.0855, -3.9025], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0029, device='cuda:0', dtype=torch.float64)
tensor([-2.0573, -3.1870, -3.2625, -4.0803, -3.9003], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9582, device='cuda:0', dtype=torch.float64)
tensor([-2.0602, -3.1891, -3.2568, -4.0751, -3.8978], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9396, device='cuda:0', dtype=torch.float64)
tensor([-2.0630, -3.1884, -3.2484, -4.0722, -3.8968], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9538, device='cuda:0', dtype=torch.float64)
tensor([-2.0647, -3.1887, -3.2411, -4.0688, -3.8924], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9898, device='cuda:0', dtype=torch.float64)
tensor([-2.0654, -3.1898, -3.2376, -4.0636, -3.8888], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0279, device='cuda:0', dtype=torch.float64)
tensor([-2.0647, -3.1892, -3.2363, -4.0608, -3.8903], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0621, device='cuda:0', dtype=torch.float64)
tensor([-2.0651, -3.1845, -3.2377, -4.0545, -3.8930], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9288, device='cuda:0', dtype=torch.float64)
tensor([-2.0647, -3.1793, -3.2401, -4.0500, -3.8976], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8807, device='cuda:0', dtype=torch.float64)
tensor([-2.0615, -3.1710, -3.2454, -4.0489, -3.9040], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0065, device='cuda:0', dtype=torch.float64)
tensor([-2.0594, -3.1612, -3.2497, -4.0493, -3.9068], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8645, device='cuda:0', dtype=torch.float64)
tensor([-2.0593, -3.1523, -3.2526, -4.0496, -3.9093], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9657, device='cuda:0', dtype=torch.float64)
tensor([-2.0601, -3.1479, -3.2530, -4.0510, -3.9093], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9191, device='cuda:0', dtype=torch.float64)
tensor([-2.0620, -3.1445, -3.2524, -4.0495, -3.9072], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0467, device='cuda:0', dtype=torch.float64)
tensor([-2.0637, -3.1438, -3.2491, -4.0470, -3.9017], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0283, device='cuda:0', dtype=torch.float64)
tensor([-2.0609, -3.1401, -3.2476, -4.0502, -3.8961], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1181, device='cuda:0', dtype=torch.float64)
tensor([-2.0596, -3.1401, -3.2440, -4.0515, -3.8915], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9917, device='cuda:0', dtype=torch.float64)
tensor([-2.0591, -3.1435, -3.2414, -4.0513, -3.8892], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8736, device='cuda:0', dtype=torch.float64)
tensor([-2.0581, -3.1433, -3.2406, -4.0506, -3.8890], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8947, device='cuda:0', dtype=torch.float64)
tensor([-2.0572, -3.1441, -3.2410, -4.0562, -3.8918], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9778, device='cuda:0', dtype=torch.float64)
tensor([-2.0564, -3.1444, -3.2440, -4.0592, -3.8938], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9428, device='cuda:0', dtype=torch.float64)
tensor([-2.0516, -3.1425, -3.2496, -4.0626, -3.8941], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9759, device='cuda:0', dtype=torch.float64)
tensor([-2.0462, -3.1417, -3.2599, -4.0668, -3.8894], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8852, device='cuda:0', dtype=torch.float64)
tensor([-2.0443, -3.1447, -3.2661, -4.0659, -3.8854], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9378, device='cuda:0', dtype=torch.float64)
tensor([-2.0416, -3.1456, -3.2741, -4.0694, -3.8835], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9762, device='cuda:0', dtype=torch.float64)
tensor([-2.0462, -3.1474, -3.2757, -4.0652, -3.8881], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1757, device='cuda:0', dtype=torch.float64)
tensor([-2.0546, -3.1521, -3.2731, -4.0578, -3.8952], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0188, device='cuda:0', dtype=torch.float64)
tensor([-2.0654, -3.1558, -3.2678, -4.0498, -3.9043], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0520, device='cuda:0', dtype=torch.float64)
tensor([-2.0739, -3.1609, -3.2613, -4.0392, -3.9079], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8969, device='cuda:0', dtype=torch.float64)
tensor([-2.0797, -3.1648, -3.2528, -4.0300, -3.9108], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0029, device='cuda:0', dtype=torch.float64)
tensor([-2.0818, -3.1652, -3.2406, -4.0223, -3.9087], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1304, device='cuda:0', dtype=torch.float64)
tensor([-2.0789, -3.1563, -3.2315, -4.0223, -3.9003], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9174, device='cuda:0', dtype=torch.float64)
tensor([-2.0737, -3.1444, -3.2270, -4.0267, -3.8881], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1221, device='cuda:0', dtype=torch.float64)
tensor([-2.0703, -3.1371, -3.2264, -4.0299, -3.8778], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1934, device='cuda:0', dtype=torch.float64)
tensor([-2.0707, -3.1369, -3.2257, -4.0292, -3.8718], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0010, device='cuda:0', dtype=torch.float64)
tensor([-2.0699, -3.1364, -3.2283, -4.0292, -3.8694], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9807, device='cuda:0', dtype=torch.float64)
tensor([-2.0714, -3.1386, -3.2305, -4.0246, -3.8678], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2566, device='cuda:0', dtype=torch.float64)
tensor([-2.0753, -3.1460, -3.2308, -4.0178, -3.8653], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0780, device='cuda:0', dtype=torch.float64)
tensor([-2.0781, -3.1517, -3.2356, -4.0140, -3.8611], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1530, device='cuda:0', dtype=torch.float64)
tensor([-2.0771, -3.1507, -3.2430, -4.0170, -3.8513], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9270, device='cuda:0', dtype=torch.float64)
tensor([-2.0708, -3.1462, -3.2482, -4.0251, -3.8405], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9256, device='cuda:0', dtype=torch.float64)
tensor([-2.0624, -3.1404, -3.2510, -4.0345, -3.8370], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9898, device='cuda:0', dtype=torch.float64)
tensor([-2.0593, -3.1377, -3.2504, -4.0330, -3.8362], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0569, device='cuda:0', dtype=torch.float64)
tensor([-2.0606, -3.1397, -3.2418, -4.0286, -3.8396], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9629, device='cuda:0', dtype=torch.float64)
tensor([-2.0608, -3.1430, -3.2318, -4.0236, -3.8447], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9638, device='cuda:0', dtype=torch.float64)
tensor([-2.0597, -3.1482, -3.2267, -4.0153, -3.8534], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1039, device='cuda:0', dtype=torch.float64)
tensor([-2.0571, -3.1503, -3.2243, -4.0105, -3.8604], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0238, device='cuda:0', dtype=torch.float64)
tensor([-2.0562, -3.1464, -3.2225, -4.0094, -3.8624], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2057, device='cuda:0', dtype=torch.float64)
tensor([-2.0606, -3.1394, -3.2176, -4.0085, -3.8591], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9294, device='cuda:0', dtype=torch.float64)
tensor([-2.0645, -3.1324, -3.2134, -4.0076, -3.8565], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0266, device='cuda:0', dtype=torch.float64)
tensor([-2.0664, -3.1233, -3.2110, -4.0100, -3.8515], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3723, device='cuda:0', dtype=torch.float64)
tensor([-2.0703, -3.1201, -3.2079, -4.0023, -3.8469], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1163, device='cuda:0', dtype=torch.float64)
tensor([-2.0735, -3.1181, -3.2084, -3.9956, -3.8448], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0546, device='cuda:0', dtype=torch.float64)
tensor([-2.0694, -3.1140, -3.2127, -3.9969, -3.8469], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9834, device='cuda:0', dtype=torch.float64)
tensor([-2.0618, -3.1142, -3.2195, -4.0029, -3.8499], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9235, device='cuda:0', dtype=torch.float64)
tensor([-2.0511, -3.1119, -3.2295, -4.0119, -3.8499], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1302, device='cuda:0', dtype=torch.float64)
tensor([-2.0382, -3.1097, -3.2341, -4.0233, -3.8457], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0863, device='cuda:0', dtype=torch.float64)
tensor([-2.0258, -3.1063, -3.2370, -4.0352, -3.8426], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0601, device='cuda:0', dtype=torch.float64)
tensor([-2.0133, -3.1006, -3.2368, -4.0452, -3.8392], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9124, device='cuda:0', dtype=torch.float64)
tensor([-2.0039, -3.0942, -3.2353, -4.0562, -3.8388], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9738, device='cuda:0', dtype=torch.float64)
tensor([-1.9997, -3.0898, -3.2343, -4.0614, -3.8419], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0809, device='cuda:0', dtype=torch.float64)
tensor([-1.9993, -3.0902, -3.2322, -4.0603, -3.8498], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0185, device='cuda:0', dtype=torch.float64)
tensor([-2.0084, -3.0965, -3.2254, -4.0473, -3.8606], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9192, device='cuda:0', dtype=torch.float64)
tensor([-2.0272, -3.1031, -3.2144, -4.0281, -3.8712], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9429, device='cuda:0', dtype=torch.float64)
tensor([-2.0497, -3.1116, -3.2033, -4.0079, -3.8779], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9560, device='cuda:0', dtype=torch.float64)
tensor([-2.0691, -3.1203, -3.1929, -3.9898, -3.8806], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2168, device='cuda:0', dtype=torch.float64)
tensor([-2.0773, -3.1235, -3.1857, -3.9845, -3.8777], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0531, device='cuda:0', dtype=torch.float64)
tensor([-2.0820, -3.1212, -3.1843, -3.9811, -3.8703], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9638, device='cuda:0', dtype=torch.float64)
tensor([-2.0835, -3.1172, -3.1851, -3.9786, -3.8614], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9740, device='cuda:0', dtype=torch.float64)
tensor([-2.0753, -3.1160, -3.1915, -3.9852, -3.8527], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9002, device='cuda:0', dtype=torch.float64)
tensor([-2.0578, -3.1118, -3.2009, -3.9998, -3.8462], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1806, device='cuda:0', dtype=torch.float64)
tensor([-2.0451, -3.1090, -3.2083, -4.0080, -3.8438], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9617, device='cuda:0', dtype=torch.float64)
tensor([-2.0371, -3.1080, -3.2107, -4.0118, -3.8489], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9677, device='cuda:0', dtype=torch.float64)
tensor([-2.0307, -3.1062, -3.2124, -4.0136, -3.8566], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9889, device='cuda:0', dtype=torch.float64)
tensor([-2.0268, -3.1044, -3.2135, -4.0125, -3.8657], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9603, device='cuda:0', dtype=torch.float64)
tensor([-2.0272, -3.1043, -3.2139, -4.0106, -3.8745], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1874, device='cuda:0', dtype=torch.float64)
tensor([-2.0283, -3.1047, -3.2122, -4.0092, -3.8806], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9504, device='cuda:0', dtype=torch.float64)
tensor([-2.0366, -3.1038, -3.2064, -4.0045, -3.8836], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9604, device='cuda:0', dtype=torch.float64)
tensor([-2.0471, -3.1068, -3.1981, -3.9966, -3.8825], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9167, device='cuda:0', dtype=torch.float64)
tensor([-2.0571, -3.1085, -3.1907, -3.9878, -3.8770], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1302, device='cuda:0', dtype=torch.float64)
tensor([-2.0665, -3.1127, -3.1832, -3.9763, -3.8693], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9801, device='cuda:0', dtype=torch.float64)
tensor([-2.0740, -3.1148, -3.1807, -3.9613, -3.8613], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9368, device='cuda:0', dtype=torch.float64)
tensor([-2.0754, -3.1148, -3.1825, -3.9521, -3.8524], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0797, device='cuda:0', dtype=torch.float64)
tensor([-2.0775, -3.1167, -3.1843, -3.9432, -3.8481], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9446, device='cuda:0', dtype=torch.float64)
tensor([-2.0765, -3.1201, -3.1896, -3.9353, -3.8429], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0957, device='cuda:0', dtype=torch.float64)
tensor([-2.0696, -3.1201, -3.1948, -3.9359, -3.8368], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1147, device='cuda:0', dtype=torch.float64)
tensor([-2.0616, -3.1192, -3.1998, -3.9390, -3.8278], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9213, device='cuda:0', dtype=torch.float64)
tensor([-2.0501, -3.1181, -3.2070, -3.9473, -3.8183], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9440, device='cuda:0', dtype=torch.float64)
tensor([-2.0370, -3.1117, -3.2170, -3.9622, -3.8110], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7811, device='cuda:0', dtype=torch.float64)
tensor([-2.0254, -3.1036, -3.2243, -3.9754, -3.8046], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0677, device='cuda:0', dtype=torch.float64)
tensor([-2.0181, -3.0970, -3.2324, -3.9840, -3.8005], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1040, device='cuda:0', dtype=torch.float64)
tensor([-2.0244, -3.0979, -3.2288, -3.9776, -3.8006], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9545, device='cuda:0', dtype=torch.float64)
tensor([-2.0328, -3.1000, -3.2213, -3.9679, -3.8001], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0015, device='cuda:0', dtype=torch.float64)
tensor([-2.0420, -3.1022, -3.2133, -3.9566, -3.7977], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9642, device='cuda:0', dtype=torch.float64)
tensor([-2.0517, -3.1022, -3.2040, -3.9483, -3.7905], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9053, device='cuda:0', dtype=torch.float64)
tensor([-2.0530, -3.0939, -3.2001, -3.9498, -3.7812], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9423, device='cuda:0', dtype=torch.float64)
tensor([-2.0476, -3.0838, -3.2014, -3.9537, -3.7740], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9891, device='cuda:0', dtype=torch.float64)
tensor([-2.0373, -3.0753, -3.2066, -3.9579, -3.7713], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0114, device='cuda:0', dtype=torch.float64)
tensor([-2.0318, -3.0725, -3.2082, -3.9611, -3.7742], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1931, device='cuda:0', dtype=torch.float64)
tensor([-2.0269, -3.0714, -3.2161, -3.9660, -3.7729], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1105, device='cuda:0', dtype=torch.float64)
tensor([-2.0272, -3.0764, -3.2190, -3.9650, -3.7718], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0509, device='cuda:0', dtype=torch.float64)
tensor([-2.0262, -3.0805, -3.2215, -3.9648, -3.7734], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9255, device='cuda:0', dtype=torch.float64)
tensor([-2.0298, -3.0893, -3.2226, -3.9584, -3.7760], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0373, device='cuda:0', dtype=torch.float64)
tensor([-2.0366, -3.0989, -3.2241, -3.9536, -3.7782], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0046, device='cuda:0', dtype=torch.float64)
tensor([-2.0429, -3.1061, -3.2284, -3.9494, -3.7832], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0058, device='cuda:0', dtype=torch.float64)
tensor([-2.0407, -3.1058, -3.2387, -3.9589, -3.7864], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8959, device='cuda:0', dtype=torch.float64)
tensor([-2.0389, -3.1033, -3.2473, -3.9664, -3.7893], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0452, device='cuda:0', dtype=torch.float64)
tensor([-2.0341, -3.0968, -3.2585, -3.9743, -3.7915], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9448, device='cuda:0', dtype=torch.float64)
tensor([-2.0331, -3.0898, -3.2615, -3.9776, -3.7922], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1391, device='cuda:0', dtype=torch.float64)
tensor([-2.0410, -3.0871, -3.2526, -3.9656, -3.7888], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1528, device='cuda:0', dtype=torch.float64)
tensor([-2.0554, -3.0892, -3.2374, -3.9478, -3.7834], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9325, device='cuda:0', dtype=torch.float64)
tensor([-2.0679, -3.0915, -3.2174, -3.9340, -3.7789], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8396, device='cuda:0', dtype=torch.float64)
tensor([-2.0745, -3.0916, -3.2009, -3.9223, -3.7778], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9896, device='cuda:0', dtype=torch.float64)
tensor([-2.0747, -3.0903, -3.1853, -3.9186, -3.7774], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9504, device='cuda:0', dtype=torch.float64)
tensor([-2.0696, -3.0863, -3.1754, -3.9207, -3.7778], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8140, device='cuda:0', dtype=torch.float64)
tensor([-2.0594, -3.0849, -3.1708, -3.9275, -3.7816], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9771, device='cuda:0', dtype=torch.float64)
tensor([-2.0424, -3.0815, -3.1706, -3.9399, -3.7889], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0647, device='cuda:0', dtype=torch.float64)
tensor([-2.0240, -3.0752, -3.1766, -3.9599, -3.7969], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0244, device='cuda:0', dtype=torch.float64)
tensor([-2.0061, -3.0691, -3.1844, -3.9813, -3.8034], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0112, device='cuda:0', dtype=torch.float64)
tensor([-1.9956, -3.0653, -3.1904, -3.9964, -3.8123], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9480, device='cuda:0', dtype=torch.float64)
tensor([-2.0026, -3.0659, -3.1918, -3.9954, -3.8196], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1570, device='cuda:0', dtype=torch.float64)
tensor([-2.0169, -3.0623, -3.1883, -3.9921, -3.8237], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0630, device='cuda:0', dtype=torch.float64)
tensor([-2.0387, -3.0661, -3.1794, -3.9777, -3.8278], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9339, device='cuda:0', dtype=torch.float64)
tensor([-2.0604, -3.0713, -3.1694, -3.9634, -3.8281], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0606, device='cuda:0', dtype=torch.float64)
tensor([-2.0767, -3.0731, -3.1629, -3.9515, -3.8243], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9372, device='cuda:0', dtype=torch.float64)
tensor([-2.0813, -3.0718, -3.1641, -3.9444, -3.8162], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1356, device='cuda:0', dtype=torch.float64)
tensor([-2.0749, -3.0660, -3.1712, -3.9481, -3.8032], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9930, device='cuda:0', dtype=torch.float64)
tensor([-2.0646, -3.0613, -3.1797, -3.9483, -3.7892], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9363, device='cuda:0', dtype=torch.float64)
tensor([-2.0510, -3.0550, -3.1912, -3.9521, -3.7762], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0630, device='cuda:0', dtype=torch.float64)
tensor([-2.0344, -3.0491, -3.2035, -3.9571, -3.7683], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9967, device='cuda:0', dtype=torch.float64)
tensor([-2.0259, -3.0450, -3.2097, -3.9606, -3.7654], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0238, device='cuda:0', dtype=torch.float64)
tensor([-2.0261, -3.0451, -3.2087, -3.9521, -3.7642], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0727, device='cuda:0', dtype=torch.float64)
tensor([-2.0365, -3.0526, -3.2009, -3.9318, -3.7642], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0035, device='cuda:0', dtype=torch.float64)
tensor([-2.0508, -3.0642, -3.1883, -3.9083, -3.7651], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0656, device='cuda:0', dtype=torch.float64)
tensor([-2.0633, -3.0791, -3.1733, -3.8863, -3.7681], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9391, device='cuda:0', dtype=torch.float64)
tensor([-2.0687, -3.0915, -3.1632, -3.8724, -3.7744], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9446, device='cuda:0', dtype=torch.float64)
tensor([-2.0652, -3.0985, -3.1567, -3.8703, -3.7783], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8625, device='cuda:0', dtype=torch.float64)
tensor([-2.0577, -3.0976, -3.1579, -3.8727, -3.7840], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2592, device='cuda:0', dtype=torch.float64)
tensor([-2.0466, -3.0907, -3.1669, -3.8883, -3.7819], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0075, device='cuda:0', dtype=torch.float64)
tensor([-2.0306, -3.0793, -3.1817, -3.9095, -3.7796], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8778, device='cuda:0', dtype=torch.float64)
tensor([-2.0195, -3.0680, -3.1969, -3.9268, -3.7780], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0666, device='cuda:0', dtype=torch.float64)
tensor([-2.0142, -3.0584, -3.2082, -3.9390, -3.7770], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0620, device='cuda:0', dtype=torch.float64)
tensor([-2.0170, -3.0569, -3.2099, -3.9413, -3.7775], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0102, device='cuda:0', dtype=torch.float64)
tensor([-2.0235, -3.0578, -3.2050, -3.9406, -3.7774], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0052, device='cuda:0', dtype=torch.float64)
tensor([-2.0363, -3.0593, -3.1923, -3.9398, -3.7758], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0059, device='cuda:0', dtype=torch.float64)
tensor([-2.0527, -3.0604, -3.1760, -3.9332, -3.7760], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0737, device='cuda:0', dtype=torch.float64)
tensor([-2.0624, -3.0635, -3.1623, -3.9283, -3.7771], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1771, device='cuda:0', dtype=torch.float64)
tensor([-2.0629, -3.0619, -3.1555, -3.9289, -3.7722], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9201, device='cuda:0', dtype=torch.float64)
tensor([-2.0527, -3.0583, -3.1548, -3.9385, -3.7644], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9952, device='cuda:0', dtype=torch.float64)
tensor([-2.0455, -3.0589, -3.1533, -3.9422, -3.7563], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0878, device='cuda:0', dtype=torch.float64)
tensor([-2.0396, -3.0601, -3.1532, -3.9468, -3.7517], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9946, device='cuda:0', dtype=torch.float64)
tensor([-2.0365, -3.0659, -3.1567, -3.9468, -3.7442], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9724, device='cuda:0', dtype=torch.float64)
tensor([-2.0378, -3.0715, -3.1631, -3.9398, -3.7401], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1576, device='cuda:0', dtype=torch.float64)
tensor([-2.0423, -3.0750, -3.1687, -3.9304, -3.7358], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9497, device='cuda:0', dtype=torch.float64)
tensor([-2.0486, -3.0795, -3.1728, -3.9182, -3.7331], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7988, device='cuda:0', dtype=torch.float64)
tensor([-2.0513, -3.0804, -3.1769, -3.9088, -3.7325], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9570, device='cuda:0', dtype=torch.float64)
tensor([-2.0480, -3.0813, -3.1812, -3.9024, -3.7353], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0783, device='cuda:0', dtype=torch.float64)
tensor([-2.0403, -3.0821, -3.1822, -3.8971, -3.7402], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1448, device='cuda:0', dtype=torch.float64)
tensor([-2.0321, -3.0821, -3.1846, -3.8937, -3.7470], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9861, device='cuda:0', dtype=torch.float64)
tensor([-2.0219, -3.0796, -3.1873, -3.8987, -3.7521], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0451, device='cuda:0', dtype=torch.float64)
tensor([-2.0176, -3.0810, -3.1873, -3.9006, -3.7621], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1340, device='cuda:0', dtype=torch.float64)
tensor([-2.0218, -3.0803, -3.1869, -3.8968, -3.7702], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8952, device='cuda:0', dtype=torch.float64)
tensor([-2.0243, -3.0774, -3.1890, -3.8913, -3.7791], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9038, device='cuda:0', dtype=torch.float64)
tensor([-2.0280, -3.0754, -3.1936, -3.8821, -3.7909], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9902, device='cuda:0', dtype=torch.float64)
tensor([-2.0274, -3.0725, -3.1993, -3.8782, -3.8010], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1263, device='cuda:0', dtype=torch.float64)
tensor([-2.0260, -3.0713, -3.2066, -3.8779, -3.8124], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9419, device='cuda:0', dtype=torch.float64)
tensor([-2.0250, -3.0702, -3.2104, -3.8820, -3.8222], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9466, device='cuda:0', dtype=torch.float64)
tensor([-2.0240, -3.0682, -3.2125, -3.8843, -3.8258], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8677, device='cuda:0', dtype=torch.float64)
tensor([-2.0256, -3.0683, -3.2102, -3.8875, -3.8288], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9536, device='cuda:0', dtype=torch.float64)
tensor([-2.0234, -3.0672, -3.2051, -3.8924, -3.8298], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9886, device='cuda:0', dtype=torch.float64)
tensor([-2.0215, -3.0665, -3.1995, -3.8950, -3.8216], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0117, device='cuda:0', dtype=torch.float64)
tensor([-2.0226, -3.0641, -3.1898, -3.8946, -3.8111], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0384, device='cuda:0', dtype=torch.float64)
tensor([-2.0281, -3.0596, -3.1817, -3.8885, -3.8004], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1083, device='cuda:0', dtype=torch.float64)
tensor([-2.0291, -3.0539, -3.1784, -3.8884, -3.7886], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9202, device='cuda:0', dtype=torch.float64)
tensor([-2.0251, -3.0448, -3.1780, -3.8956, -3.7778], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8860, device='cuda:0', dtype=torch.float64)
tensor([-2.0161, -3.0372, -3.1815, -3.9086, -3.7684], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1995, device='cuda:0', dtype=torch.float64)
tensor([-2.0138, -3.0361, -3.1828, -3.9165, -3.7619], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0395, device='cuda:0', dtype=torch.float64)
tensor([-2.0176, -3.0395, -3.1775, -3.9197, -3.7601], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0180, device='cuda:0', dtype=torch.float64)
tensor([-2.0215, -3.0419, -3.1711, -3.9217, -3.7589], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9606, device='cuda:0', dtype=torch.float64)
tensor([-2.0271, -3.0482, -3.1631, -3.9214, -3.7579], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9296, device='cuda:0', dtype=torch.float64)
tensor([-2.0355, -3.0547, -3.1560, -3.9152, -3.7570], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8806, device='cuda:0', dtype=torch.float64)
tensor([-2.0368, -3.0567, -3.1497, -3.9130, -3.7575], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9502, device='cuda:0', dtype=torch.float64)
tensor([-2.0353, -3.0594, -3.1479, -3.9066, -3.7552], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9935, device='cuda:0', dtype=torch.float64)
tensor([-2.0315, -3.0601, -3.1478, -3.8978, -3.7537], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0203, device='cuda:0', dtype=torch.float64)
tensor([-2.0268, -3.0634, -3.1493, -3.8884, -3.7473], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1352, device='cuda:0', dtype=torch.float64)
tensor([-2.0243, -3.0627, -3.1546, -3.8797, -3.7415], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8242, device='cuda:0', dtype=torch.float64)
tensor([-2.0208, -3.0586, -3.1617, -3.8754, -3.7367], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9644, device='cuda:0', dtype=torch.float64)
tensor([-2.0215, -3.0524, -3.1693, -3.8711, -3.7353], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8719, device='cuda:0', dtype=torch.float64)
tensor([-2.0227, -3.0483, -3.1766, -3.8679, -3.7341], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0648, device='cuda:0', dtype=torch.float64)
tensor([-2.0264, -3.0436, -3.1815, -3.8657, -3.7344], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0892, device='cuda:0', dtype=torch.float64)
tensor([-2.0297, -3.0361, -3.1822, -3.8654, -3.7318], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8667, device='cuda:0', dtype=torch.float64)
tensor([-2.0307, -3.0304, -3.1851, -3.8667, -3.7285], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8906, device='cuda:0', dtype=torch.float64)
tensor([-2.0296, -3.0247, -3.1869, -3.8701, -3.7233], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8560, device='cuda:0', dtype=torch.float64)
tensor([-2.0290, -3.0176, -3.1922, -3.8725, -3.7216], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9403, device='cuda:0', dtype=torch.float64)
tensor([-2.0275, -3.0126, -3.1966, -3.8738, -3.7218], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9536, device='cuda:0', dtype=torch.float64)
tensor([-2.0281, -3.0099, -3.2002, -3.8756, -3.7232], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0534, device='cuda:0', dtype=torch.float64)
tensor([-2.0342, -3.0108, -3.1986, -3.8705, -3.7228], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9668, device='cuda:0', dtype=torch.float64)
tensor([-2.0426, -3.0176, -3.1937, -3.8602, -3.7236], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0496, device='cuda:0', dtype=torch.float64)
tensor([-2.0505, -3.0281, -3.1829, -3.8542, -3.7279], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2200, device='cuda:0', dtype=torch.float64)
tensor([-2.0570, -3.0386, -3.1723, -3.8511, -3.7350], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9866, device='cuda:0', dtype=torch.float64)
tensor([-2.0569, -3.0472, -3.1649, -3.8507, -3.7399], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2250, device='cuda:0', dtype=torch.float64)
tensor([-2.0572, -3.0552, -3.1580, -3.8486, -3.7451], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0339, device='cuda:0', dtype=torch.float64)
tensor([-2.0477, -3.0550, -3.1591, -3.8529, -3.7457], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0871, device='cuda:0', dtype=torch.float64)
tensor([-2.0350, -3.0480, -3.1647, -3.8585, -3.7455], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8457, device='cuda:0', dtype=torch.float64)
tensor([-2.0188, -3.0444, -3.1684, -3.8669, -3.7440], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0183, device='cuda:0', dtype=torch.float64)
tensor([-2.0103, -3.0445, -3.1678, -3.8692, -3.7415], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0956, device='cuda:0', dtype=torch.float64)
tensor([-2.0036, -3.0449, -3.1664, -3.8661, -3.7408], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8227, device='cuda:0', dtype=torch.float64)
tensor([-2.0004, -3.0452, -3.1601, -3.8634, -3.7424], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0413, device='cuda:0', dtype=torch.float64)
tensor([-2.0003, -3.0441, -3.1528, -3.8627, -3.7441], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0762, device='cuda:0', dtype=torch.float64)
tensor([-2.0030, -3.0389, -3.1452, -3.8618, -3.7444], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9012, device='cuda:0', dtype=torch.float64)
tensor([-2.0104, -3.0335, -3.1361, -3.8579, -3.7451], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9464, device='cuda:0', dtype=torch.float64)
tensor([-2.0213, -3.0329, -3.1250, -3.8466, -3.7464], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0045, device='cuda:0', dtype=torch.float64)
tensor([-2.0333, -3.0365, -3.1157, -3.8334, -3.7484], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1368, device='cuda:0', dtype=torch.float64)
tensor([-2.0455, -3.0403, -3.1048, -3.8210, -3.7532], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9721, device='cuda:0', dtype=torch.float64)
tensor([-2.0482, -3.0421, -3.1005, -3.8124, -3.7572], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9533, device='cuda:0', dtype=torch.float64)
tensor([-2.0470, -3.0387, -3.1072, -3.8124, -3.7541], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9732, device='cuda:0', dtype=torch.float64)
tensor([-2.0382, -3.0329, -3.1210, -3.8171, -3.7495], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0368, device='cuda:0', dtype=torch.float64)
tensor([-2.0254, -3.0261, -3.1420, -3.8265, -3.7411], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0451, device='cuda:0', dtype=torch.float64)
tensor([-2.0182, -3.0213, -3.1605, -3.8331, -3.7353], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7441, device='cuda:0', dtype=torch.float64)
tensor([-2.0121, -3.0178, -3.1765, -3.8395, -3.7279], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9604, device='cuda:0', dtype=torch.float64)
tensor([-2.0083, -3.0170, -3.1862, -3.8460, -3.7231], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9856, device='cuda:0', dtype=torch.float64)
tensor([-2.0052, -3.0155, -3.1916, -3.8556, -3.7173], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9722, device='cuda:0', dtype=torch.float64)
tensor([-2.0060, -3.0175, -3.1844, -3.8651, -3.7144], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8401, device='cuda:0', dtype=torch.float64)
tensor([-2.0035, -3.0189, -3.1797, -3.8751, -3.7121], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0404, device='cuda:0', dtype=torch.float64)
tensor([-2.0080, -3.0205, -3.1694, -3.8801, -3.7147], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1501, device='cuda:0', dtype=torch.float64)
tensor([-2.0155, -3.0179, -3.1561, -3.8833, -3.7189], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0339, device='cuda:0', dtype=torch.float64)
tensor([-2.0233, -3.0138, -3.1442, -3.8785, -3.7281], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9904, device='cuda:0', dtype=torch.float64)
tensor([-2.0287, -3.0092, -3.1381, -3.8722, -3.7351], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1204, device='cuda:0', dtype=torch.float64)
tensor([-2.0333, -3.0093, -3.1368, -3.8596, -3.7412], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0355, device='cuda:0', dtype=torch.float64)
tensor([-2.0358, -3.0117, -3.1420, -3.8554, -3.7459], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9094, device='cuda:0', dtype=torch.float64)
tensor([-2.0349, -3.0147, -3.1471, -3.8511, -3.7460], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1020, device='cuda:0', dtype=torch.float64)
tensor([-2.0329, -3.0242, -3.1540, -3.8428, -3.7417], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1480, device='cuda:0', dtype=torch.float64)
tensor([-2.0307, -3.0378, -3.1610, -3.8320, -3.7334], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9583, device='cuda:0', dtype=torch.float64)
tensor([-2.0252, -3.0476, -3.1664, -3.8249, -3.7244], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1710, device='cuda:0', dtype=torch.float64)
tensor([-2.0227, -3.0578, -3.1651, -3.8150, -3.7168], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0165, device='cuda:0', dtype=torch.float64)
tensor([-2.0230, -3.0670, -3.1604, -3.8081, -3.7127], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1937, device='cuda:0', dtype=torch.float64)
tensor([-2.0183, -3.0684, -3.1586, -3.8126, -3.7057], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0427, device='cuda:0', dtype=torch.float64)
tensor([-2.0118, -3.0655, -3.1600, -3.8220, -3.7007], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9971, device='cuda:0', dtype=torch.float64)
tensor([-2.0088, -3.0550, -3.1611, -3.8281, -3.6986], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0765, device='cuda:0', dtype=torch.float64)
tensor([-2.0051, -3.0380, -3.1596, -3.8400, -3.6957], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9729, device='cuda:0', dtype=torch.float64)
tensor([-1.9988, -3.0220, -3.1582, -3.8509, -3.6969], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1419, device='cuda:0', dtype=torch.float64)
tensor([-2.0057, -3.0130, -3.1465, -3.8463, -3.7011], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1670, device='cuda:0', dtype=torch.float64)
tensor([-2.0192, -3.0100, -3.1319, -3.8309, -3.7093], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0988, device='cuda:0', dtype=torch.float64)
tensor([-2.0310, -3.0098, -3.1156, -3.8142, -3.7149], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0244, device='cuda:0', dtype=torch.float64)
tensor([-2.0399, -3.0114, -3.1024, -3.7984, -3.7220], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8175, device='cuda:0', dtype=torch.float64)
tensor([-2.0430, -3.0139, -3.0962, -3.7873, -3.7303], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9623, device='cuda:0', dtype=torch.float64)
tensor([-2.0370, -3.0145, -3.1010, -3.7863, -3.7343], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9667, device='cuda:0', dtype=torch.float64)
tensor([-2.0274, -3.0176, -3.1102, -3.7946, -3.7392], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0940, device='cuda:0', dtype=torch.float64)
tensor([-2.0101, -3.0142, -3.1302, -3.8151, -3.7414], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1439, device='cuda:0', dtype=torch.float64)
tensor([-1.9977, -3.0151, -3.1434, -3.8286, -3.7442], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8879, device='cuda:0', dtype=torch.float64)
tensor([-1.9920, -3.0165, -3.1530, -3.8380, -3.7481], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0067, device='cuda:0', dtype=torch.float64)
tensor([-1.9928, -3.0215, -3.1602, -3.8445, -3.7481], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1592, device='cuda:0', dtype=torch.float64)
tensor([-1.9988, -3.0259, -3.1630, -3.8464, -3.7510], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0069, device='cuda:0', dtype=torch.float64)
tensor([-2.0109, -3.0261, -3.1598, -3.8505, -3.7515], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0463, device='cuda:0', dtype=torch.float64)
tensor([-2.0227, -3.0205, -3.1535, -3.8545, -3.7462], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0936, device='cuda:0', dtype=torch.float64)
tensor([-2.0383, -3.0159, -3.1421, -3.8557, -3.7383], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9681, device='cuda:0', dtype=torch.float64)
tensor([-2.0484, -3.0115, -3.1304, -3.8598, -3.7308], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0075, device='cuda:0', dtype=torch.float64)
tensor([-2.0480, -3.0071, -3.1244, -3.8684, -3.7246], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0985, device='cuda:0', dtype=torch.float64)
tensor([-2.0396, -2.9985, -3.1243, -3.8774, -3.7151], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0808, device='cuda:0', dtype=torch.float64)
tensor([-2.0236, -2.9908, -3.1304, -3.8900, -3.7048], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9003, device='cuda:0', dtype=torch.float64)
tensor([-2.0087, -2.9878, -3.1354, -3.8945, -3.6978], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0252, device='cuda:0', dtype=torch.float64)
tensor([-1.9966, -2.9894, -3.1450, -3.8893, -3.6958], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9881, device='cuda:0', dtype=torch.float64)
tensor([-1.9897, -2.9930, -3.1524, -3.8829, -3.6951], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0105, device='cuda:0', dtype=torch.float64)
tensor([-1.9869, -3.0006, -3.1552, -3.8699, -3.6974], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8920, device='cuda:0', dtype=torch.float64)
tensor([-1.9881, -3.0127, -3.1538, -3.8523, -3.6977], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1722, device='cuda:0', dtype=torch.float64)
tensor([-1.9885, -3.0232, -3.1541, -3.8431, -3.6979], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9556, device='cuda:0', dtype=torch.float64)
tensor([-1.9932, -3.0352, -3.1511, -3.8314, -3.6980], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9208, device='cuda:0', dtype=torch.float64)
tensor([-2.0041, -3.0461, -3.1442, -3.8158, -3.7016], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1354, device='cuda:0', dtype=torch.float64)
tensor([-2.0176, -3.0518, -3.1353, -3.8066, -3.7057], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0987, device='cuda:0', dtype=torch.float64)
tensor([-2.0285, -3.0528, -3.1272, -3.8019, -3.7078], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0255, device='cuda:0', dtype=torch.float64)
tensor([-2.0335, -3.0446, -3.1236, -3.8005, -3.7051], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8350, device='cuda:0', dtype=torch.float64)
tensor([-2.0304, -3.0304, -3.1240, -3.8061, -3.7046], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9596, device='cuda:0', dtype=torch.float64)
tensor([-2.0263, -3.0201, -3.1251, -3.8070, -3.7041], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0117, device='cuda:0', dtype=torch.float64)
tensor([-2.0210, -3.0109, -3.1279, -3.8097, -3.7035], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9024, device='cuda:0', dtype=torch.float64)
tensor([-2.0124, -3.0022, -3.1293, -3.8173, -3.6983], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8880, device='cuda:0', dtype=torch.float64)
tensor([-2.0039, -3.0001, -3.1300, -3.8227, -3.6943], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0102, device='cuda:0', dtype=torch.float64)
tensor([-1.9998, -3.0059, -3.1298, -3.8224, -3.6903], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9998, device='cuda:0', dtype=torch.float64)
tensor([-1.9979, -3.0130, -3.1241, -3.8154, -3.6888], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9118, device='cuda:0', dtype=torch.float64)
tensor([-1.9959, -3.0197, -3.1226, -3.8063, -3.6865], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9566, device='cuda:0', dtype=torch.float64)
tensor([-1.9933, -3.0203, -3.1248, -3.8006, -3.6823], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0965, device='cuda:0', dtype=torch.float64)
tensor([-1.9913, -3.0207, -3.1286, -3.7962, -3.6814], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1281, device='cuda:0', dtype=torch.float64)
tensor([-1.9962, -3.0235, -3.1282, -3.7842, -3.6852], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9187, device='cuda:0', dtype=torch.float64)
tensor([-2.0012, -3.0244, -3.1333, -3.7749, -3.6899], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0776, device='cuda:0', dtype=torch.float64)
tensor([-2.0098, -3.0236, -3.1387, -3.7653, -3.6943], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9838, device='cuda:0', dtype=torch.float64)
tensor([-2.0202, -3.0204, -3.1396, -3.7603, -3.6969], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1528, device='cuda:0', dtype=torch.float64)
tensor([-2.0313, -3.0195, -3.1377, -3.7537, -3.7041], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9732, device='cuda:0', dtype=torch.float64)
tensor([-2.0385, -3.0214, -3.1335, -3.7494, -3.7112], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8783, device='cuda:0', dtype=torch.float64)
tensor([-2.0429, -3.0220, -3.1330, -3.7492, -3.7145], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1468, device='cuda:0', dtype=torch.float64)
tensor([-2.0429, -3.0177, -3.1365, -3.7566, -3.7153], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0526, device='cuda:0', dtype=torch.float64)
tensor([-2.0334, -3.0076, -3.1430, -3.7719, -3.7097], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8778, device='cuda:0', dtype=torch.float64)
tensor([-2.0204, -2.9952, -3.1442, -3.7913, -3.7047], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9102, device='cuda:0', dtype=torch.float64)
tensor([-2.0048, -2.9814, -3.1472, -3.8082, -3.7006], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9790, device='cuda:0', dtype=torch.float64)
tensor([-1.9971, -2.9716, -3.1406, -3.8185, -3.6961], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9242, device='cuda:0', dtype=torch.float64)
tensor([-1.9921, -2.9640, -3.1339, -3.8258, -3.6933], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1705, device='cuda:0', dtype=torch.float64)
tensor([-1.9917, -2.9647, -3.1266, -3.8240, -3.6945], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4988, device='cuda:0', dtype=torch.float64)
tensor([-1.9901, -2.9686, -3.1197, -3.8196, -3.6937], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9194, device='cuda:0', dtype=torch.float64)
tensor([-1.9907, -2.9762, -3.1120, -3.8119, -3.6965], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0120, device='cuda:0', dtype=torch.float64)
tensor([-1.9987, -2.9921, -3.1026, -3.7984, -3.7006], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1551, device='cuda:0', dtype=torch.float64)
tensor([-2.0113, -3.0083, -3.0971, -3.7828, -3.7058], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3024, device='cuda:0', dtype=torch.float64)
tensor([-2.0194, -3.0142, -3.0987, -3.7714, -3.7043], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9863, device='cuda:0', dtype=torch.float64)
tensor([-2.0227, -3.0167, -3.1076, -3.7644, -3.6990], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9891, device='cuda:0', dtype=torch.float64)
tensor([-2.0257, -3.0178, -3.1175, -3.7613, -3.6919], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0512, device='cuda:0', dtype=torch.float64)
tensor([-2.0321, -3.0186, -3.1248, -3.7558, -3.6872], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8898, device='cuda:0', dtype=torch.float64)
tensor([-2.0333, -3.0139, -3.1322, -3.7544, -3.6817], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2101, device='cuda:0', dtype=torch.float64)
tensor([-2.0296, -3.0093, -3.1351, -3.7544, -3.6785], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2181, device='cuda:0', dtype=torch.float64)
tensor([-2.0193, -3.0030, -3.1395, -3.7610, -3.6758], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2397, device='cuda:0', dtype=torch.float64)
tensor([-2.0057, -2.9916, -3.1480, -3.7725, -3.6713], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9160, device='cuda:0', dtype=torch.float64)
tensor([-1.9877, -2.9774, -3.1583, -3.7888, -3.6649], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2449, device='cuda:0', dtype=torch.float64)
tensor([-1.9764, -2.9685, -3.1555, -3.8030, -3.6589], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1237, device='cuda:0', dtype=torch.float64)
tensor([-1.9696, -2.9632, -3.1546, -3.8130, -3.6590], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1348, device='cuda:0', dtype=torch.float64)
tensor([-1.9668, -2.9588, -3.1523, -3.8227, -3.6557], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0328, device='cuda:0', dtype=torch.float64)
tensor([-1.9744, -2.9678, -3.1446, -3.8210, -3.6560], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8959, device='cuda:0', dtype=torch.float64)
tensor([-1.9925, -2.9843, -3.1341, -3.8097, -3.6616], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0442, device='cuda:0', dtype=torch.float64)
tensor([-2.0092, -3.0036, -3.1294, -3.7996, -3.6693], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1047, device='cuda:0', dtype=torch.float64)
tensor([-2.0210, -3.0184, -3.1293, -3.7965, -3.6743], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9120, device='cuda:0', dtype=torch.float64)
tensor([-2.0326, -3.0261, -3.1259, -3.7942, -3.6764], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2666, device='cuda:0', dtype=torch.float64)
tensor([-2.0404, -3.0252, -3.1230, -3.7942, -3.6774], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1072, device='cuda:0', dtype=torch.float64)
tensor([-2.0392, -3.0147, -3.1261, -3.8003, -3.6751], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0981, device='cuda:0', dtype=torch.float64)
tensor([-2.0367, -3.0049, -3.1247, -3.8045, -3.6722], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1431, device='cuda:0', dtype=torch.float64)
tensor([-2.0342, -2.9923, -3.1244, -3.8059, -3.6723], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9353, device='cuda:0', dtype=torch.float64)
tensor([-2.0284, -2.9794, -3.1235, -3.8033, -3.6753], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9824, device='cuda:0', dtype=torch.float64)
tensor([-2.0142, -2.9640, -3.1301, -3.8044, -3.6810], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1388, device='cuda:0', dtype=torch.float64)
tensor([-2.0032, -2.9536, -3.1341, -3.8030, -3.6877], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1320, device='cuda:0', dtype=torch.float64)
tensor([-1.9933, -2.9489, -3.1400, -3.7967, -3.6914], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9013, device='cuda:0', dtype=torch.float64)
tensor([-1.9889, -2.9477, -3.1405, -3.7863, -3.6940], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8584, device='cuda:0', dtype=torch.float64)
tensor([-1.9849, -2.9508, -3.1372, -3.7795, -3.6916], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7746, device='cuda:0', dtype=torch.float64)
tensor([-1.9899, -2.9573, -3.1324, -3.7672, -3.6901], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2401, device='cuda:0', dtype=torch.float64)
tensor([-1.9943, -2.9635, -3.1261, -3.7550, -3.6875], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8967, device='cuda:0', dtype=torch.float64)
tensor([-2.0015, -2.9734, -3.1160, -3.7382, -3.6896], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1503, device='cuda:0', dtype=torch.float64)
tensor([-2.0145, -2.9838, -3.1025, -3.7213, -3.6908], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8563, device='cuda:0', dtype=torch.float64)
tensor([-2.0257, -2.9902, -3.0925, -3.7131, -3.6923], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1241, device='cuda:0', dtype=torch.float64)
tensor([-2.0318, -2.9907, -3.0931, -3.7127, -3.6913], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9120, device='cuda:0', dtype=torch.float64)
tensor([-2.0281, -2.9845, -3.0994, -3.7259, -3.6882], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0724, device='cuda:0', dtype=torch.float64)
tensor([-2.0187, -2.9707, -3.1070, -3.7467, -3.6786], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0679, device='cuda:0', dtype=torch.float64)
tensor([-1.9992, -2.9495, -3.1222, -3.7762, -3.6695], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0898, device='cuda:0', dtype=torch.float64)
tensor([-1.9850, -2.9291, -3.1302, -3.7998, -3.6630], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0904, device='cuda:0', dtype=torch.float64)
tensor([-1.9805, -2.9171, -3.1293, -3.8152, -3.6549], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2479, device='cuda:0', dtype=torch.float64)
tensor([-1.9853, -2.9150, -3.1245, -3.8154, -3.6468], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0754, device='cuda:0', dtype=torch.float64)
tensor([-1.9986, -2.9215, -3.1159, -3.8048, -3.6416], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0232, device='cuda:0', dtype=torch.float64)
tensor([-2.0132, -2.9349, -3.1043, -3.7913, -3.6390], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2154, device='cuda:0', dtype=torch.float64)
tensor([-2.0218, -2.9452, -3.0975, -3.7843, -3.6352], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0240, device='cuda:0', dtype=torch.float64)
tensor([-2.0253, -2.9569, -3.0951, -3.7764, -3.6298], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9735, device='cuda:0', dtype=torch.float64)
tensor([-2.0207, -2.9671, -3.0987, -3.7734, -3.6243], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3490, device='cuda:0', dtype=torch.float64)
tensor([-2.0105, -2.9731, -3.1073, -3.7736, -3.6204], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8665, device='cuda:0', dtype=torch.float64)
tensor([-2.0017, -2.9765, -3.1166, -3.7756, -3.6215], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1367, device='cuda:0', dtype=torch.float64)
tensor([-1.9978, -2.9779, -3.1190, -3.7754, -3.6260], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1186, device='cuda:0', dtype=torch.float64)
tensor([-2.0013, -2.9789, -3.1241, -3.7666, -3.6328], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2756, device='cuda:0', dtype=torch.float64)
tensor([-2.0058, -2.9841, -3.1342, -3.7546, -3.6441], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9198, device='cuda:0', dtype=torch.float64)
tensor([-2.0109, -2.9844, -3.1366, -3.7435, -3.6532], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1479, device='cuda:0', dtype=torch.float64)
tensor([-2.0109, -2.9793, -3.1362, -3.7406, -3.6573], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9484, device='cuda:0', dtype=torch.float64)
tensor([-2.0090, -2.9768, -3.1361, -3.7428, -3.6595], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1356, device='cuda:0', dtype=torch.float64)
tensor([-2.0013, -2.9740, -3.1364, -3.7517, -3.6577], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9859, device='cuda:0', dtype=torch.float64)
tensor([-1.9952, -2.9736, -3.1369, -3.7589, -3.6573], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9661, device='cuda:0', dtype=torch.float64)
tensor([-1.9923, -2.9724, -3.1413, -3.7642, -3.6534], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4302, device='cuda:0', dtype=torch.float64)
tensor([-1.9976, -2.9753, -3.1410, -3.7581, -3.6519], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0338, device='cuda:0', dtype=torch.float64)
tensor([-2.0046, -2.9778, -3.1411, -3.7496, -3.6477], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0322, device='cuda:0', dtype=torch.float64)
tensor([-2.0110, -2.9821, -3.1391, -3.7402, -3.6432], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0100, device='cuda:0', dtype=torch.float64)
tensor([-2.0121, -2.9854, -3.1371, -3.7322, -3.6374], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0380, device='cuda:0', dtype=torch.float64)
tensor([-2.0093, -2.9839, -3.1374, -3.7271, -3.6309], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3468, device='cuda:0', dtype=torch.float64)
tensor([-2.0025, -2.9757, -3.1395, -3.7342, -3.6229], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9833, device='cuda:0', dtype=torch.float64)
tensor([-2.0049, -2.9696, -3.1362, -3.7344, -3.6229], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1858, device='cuda:0', dtype=torch.float64)
tensor([-2.0055, -2.9636, -3.1352, -3.7344, -3.6246], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0369, device='cuda:0', dtype=torch.float64)
tensor([-2.0068, -2.9598, -3.1360, -3.7305, -3.6278], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0944, device='cuda:0', dtype=torch.float64)
tensor([-2.0010, -2.9570, -3.1381, -3.7270, -3.6302], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8809, device='cuda:0', dtype=torch.float64)
tensor([-1.9960, -2.9603, -3.1388, -3.7229, -3.6344], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0896, device='cuda:0', dtype=torch.float64)
tensor([-1.9928, -2.9569, -3.1359, -3.7266, -3.6389], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1125, device='cuda:0', dtype=torch.float64)
tensor([-1.9943, -2.9528, -3.1240, -3.7325, -3.6433], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9213, device='cuda:0', dtype=torch.float64)
tensor([-2.0020, -2.9474, -3.1030, -3.7370, -3.6443], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2131, device='cuda:0', dtype=torch.float64)
tensor([-2.0144, -2.9478, -3.0765, -3.7325, -3.6494], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9310, device='cuda:0', dtype=torch.float64)
tensor([-2.0269, -2.9490, -3.0495, -3.7287, -3.6547], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0171, device='cuda:0', dtype=torch.float64)
tensor([-2.0289, -2.9487, -3.0330, -3.7322, -3.6567], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1345, device='cuda:0', dtype=torch.float64)
tensor([-2.0235, -2.9453, -3.0306, -3.7414, -3.6540], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9386, device='cuda:0', dtype=torch.float64)
tensor([-2.0123, -2.9380, -3.0414, -3.7572, -3.6490], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0668, device='cuda:0', dtype=torch.float64)
tensor([-1.9997, -2.9358, -3.0544, -3.7711, -3.6448], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0282, device='cuda:0', dtype=torch.float64)
tensor([-1.9889, -2.9399, -3.0692, -3.7791, -3.6434], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9105, device='cuda:0', dtype=torch.float64)
tensor([-1.9872, -2.9492, -3.0818, -3.7792, -3.6425], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9746, device='cuda:0', dtype=torch.float64)
tensor([-1.9897, -2.9563, -3.0950, -3.7731, -3.6395], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2649, device='cuda:0', dtype=torch.float64)
tensor([-1.9903, -2.9607, -3.1125, -3.7667, -3.6330], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0053, device='cuda:0', dtype=torch.float64)
tensor([-1.9936, -2.9638, -3.1302, -3.7571, -3.6283], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0240, device='cuda:0', dtype=torch.float64)
tensor([-1.9978, -2.9693, -3.1441, -3.7437, -3.6241], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9560, device='cuda:0', dtype=torch.float64)
tensor([-2.0059, -2.9749, -3.1561, -3.7308, -3.6207], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9907, device='cuda:0', dtype=torch.float64)
tensor([-2.0131, -2.9727, -3.1638, -3.7212, -3.6213], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1517, device='cuda:0', dtype=torch.float64)
tensor([-2.0185, -2.9680, -3.1666, -3.7166, -3.6250], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0987, device='cuda:0', dtype=torch.float64)
tensor([-2.0316, -2.9626, -3.1607, -3.7036, -3.6293], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0151, device='cuda:0', dtype=torch.float64)
tensor([-2.0383, -2.9567, -3.1521, -3.6957, -3.6343], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0713, device='cuda:0', dtype=torch.float64)
tensor([-2.0383, -2.9514, -3.1392, -3.6968, -3.6415], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9775, device='cuda:0', dtype=torch.float64)
tensor([-2.0368, -2.9469, -3.1248, -3.7027, -3.6469], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4406, device='cuda:0', dtype=torch.float64)
tensor([-2.0337, -2.9455, -3.1070, -3.7118, -3.6506], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0215, device='cuda:0', dtype=torch.float64)
tensor([-2.0243, -2.9430, -3.0903, -3.7231, -3.6504], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0388, device='cuda:0', dtype=torch.float64)
tensor([-2.0154, -2.9464, -3.0793, -3.7343, -3.6463], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0794, device='cuda:0', dtype=torch.float64)
tensor([-2.0076, -2.9543, -3.0704, -3.7410, -3.6391], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0138, device='cuda:0', dtype=torch.float64)
tensor([-2.0010, -2.9621, -3.0636, -3.7473, -3.6336], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2158, device='cuda:0', dtype=torch.float64)
tensor([-2.0001, -2.9640, -3.0597, -3.7475, -3.6317], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1258, device='cuda:0', dtype=torch.float64)
tensor([-2.0069, -2.9689, -3.0541, -3.7382, -3.6339], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0051, device='cuda:0', dtype=torch.float64)
tensor([-2.0060, -2.9679, -3.0540, -3.7332, -3.6376], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8605, device='cuda:0', dtype=torch.float64)
tensor([-1.9969, -2.9593, -3.0634, -3.7319, -3.6433], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9231, device='cuda:0', dtype=torch.float64)
tensor([-1.9834, -2.9469, -3.0716, -3.7297, -3.6480], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1470, device='cuda:0', dtype=torch.float64)
tensor([-1.9717, -2.9306, -3.0815, -3.7277, -3.6517], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2360, device='cuda:0', dtype=torch.float64)
tensor([-1.9673, -2.9176, -3.0884, -3.7234, -3.6536], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9635, device='cuda:0', dtype=torch.float64)
tensor([-1.9690, -2.9057, -3.0906, -3.7205, -3.6560], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2014, device='cuda:0', dtype=torch.float64)
tensor([-1.9825, -2.9046, -3.0848, -3.7122, -3.6587], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0971, device='cuda:0', dtype=torch.float64)
tensor([-1.9971, -2.9093, -3.0774, -3.7073, -3.6662], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2414, device='cuda:0', dtype=torch.float64)
tensor([-2.0089, -2.9172, -3.0715, -3.7094, -3.6748], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0446, device='cuda:0', dtype=torch.float64)
tensor([-2.0214, -2.9269, -3.0672, -3.7144, -3.6818], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1993, device='cuda:0', dtype=torch.float64)
tensor([-2.0372, -2.9404, -3.0620, -3.7129, -3.6873], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8995, device='cuda:0', dtype=torch.float64)
tensor([-2.0461, -2.9495, -3.0572, -3.7141, -3.6893], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0890, device='cuda:0', dtype=torch.float64)
tensor([-2.0443, -2.9512, -3.0584, -3.7146, -3.6877], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2896, device='cuda:0', dtype=torch.float64)
tensor([-2.0357, -2.9455, -3.0697, -3.7222, -3.6836], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8920, device='cuda:0', dtype=torch.float64)
tensor([-2.0183, -2.9375, -3.0877, -3.7327, -3.6774], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1864, device='cuda:0', dtype=torch.float64)
tensor([-2.0054, -2.9358, -3.1039, -3.7311, -3.6683], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1455, device='cuda:0', dtype=torch.float64)
tensor([-2.0027, -2.9397, -3.1130, -3.7220, -3.6576], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1786, device='cuda:0', dtype=torch.float64)
tensor([-2.0044, -2.9469, -3.1192, -3.7081, -3.6481], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0771, device='cuda:0', dtype=torch.float64)
tensor([-2.0097, -2.9531, -3.1245, -3.6942, -3.6352], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2060, device='cuda:0', dtype=torch.float64)
tensor([-2.0157, -2.9589, -3.1245, -3.6836, -3.6224], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9311, device='cuda:0', dtype=torch.float64)
tensor([-2.0214, -2.9604, -3.1249, -3.6772, -3.6072], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0655, device='cuda:0', dtype=torch.float64)
tensor([-2.0150, -2.9576, -3.1327, -3.6834, -3.5922], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9709, device='cuda:0', dtype=torch.float64)
tensor([-2.0046, -2.9553, -3.1404, -3.6938, -3.5786], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8848, device='cuda:0', dtype=torch.float64)
tensor([-1.9953, -2.9582, -3.1422, -3.6996, -3.5784], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9711, device='cuda:0', dtype=torch.float64)
tensor([-1.9873, -2.9624, -3.1363, -3.7051, -3.5872], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9965, device='cuda:0', dtype=torch.float64)
tensor([-1.9880, -2.9630, -3.1272, -3.7057, -3.5999], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9495, device='cuda:0', dtype=torch.float64)
tensor([-1.9925, -2.9654, -3.1168, -3.7018, -3.6161], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9833, device='cuda:0', dtype=torch.float64)
tensor([-1.9993, -2.9684, -3.1063, -3.6987, -3.6317], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0957, device='cuda:0', dtype=torch.float64)
tensor([-2.0023, -2.9667, -3.1014, -3.6979, -3.6434], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1624, device='cuda:0', dtype=torch.float64)
tensor([-2.0039, -2.9650, -3.1026, -3.6994, -3.6492], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1130, device='cuda:0', dtype=torch.float64)
tensor([-2.0153, -2.9727, -3.1004, -3.6922, -3.6516], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9970, device='cuda:0', dtype=torch.float64)
tensor([-2.0237, -2.9804, -3.0997, -3.6858, -3.6501], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1402, device='cuda:0', dtype=torch.float64)
tensor([-2.0224, -2.9846, -3.0997, -3.6869, -3.6438], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2036, device='cuda:0', dtype=torch.float64)
tensor([-2.0154, -2.9840, -3.1018, -3.6939, -3.6369], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1252, device='cuda:0', dtype=torch.float64)
tensor([-1.9996, -2.9753, -3.1105, -3.7069, -3.6351], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0742, device='cuda:0', dtype=torch.float64)
tensor([-1.9945, -2.9684, -3.1090, -3.7140, -3.6386], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9106, device='cuda:0', dtype=torch.float64)
tensor([-1.9849, -2.9604, -3.1141, -3.7240, -3.6409], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3767, device='cuda:0', dtype=torch.float64)
tensor([-1.9810, -2.9526, -3.1157, -3.7352, -3.6424], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1154, device='cuda:0', dtype=torch.float64)
tensor([-1.9821, -2.9467, -3.1129, -3.7452, -3.6407], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9816, device='cuda:0', dtype=torch.float64)
tensor([-1.9867, -2.9439, -3.1072, -3.7511, -3.6361], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9870, device='cuda:0', dtype=torch.float64)
tensor([-1.9866, -2.9400, -3.0998, -3.7593, -3.6271], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0142, device='cuda:0', dtype=torch.float64)
tensor([-1.9940, -2.9402, -3.0843, -3.7596, -3.6128], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2285, device='cuda:0', dtype=torch.float64)
tensor([-2.0061, -2.9432, -3.0644, -3.7563, -3.6022], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0457, device='cuda:0', dtype=torch.float64)
tensor([-2.0203, -2.9481, -3.0501, -3.7510, -3.5947], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0832, device='cuda:0', dtype=torch.float64)
tensor([-2.0374, -2.9570, -3.0341, -3.7402, -3.5901], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1092, device='cuda:0', dtype=torch.float64)
tensor([-2.0425, -2.9587, -3.0296, -3.7360, -3.5838], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1802, device='cuda:0', dtype=torch.float64)
tensor([-2.0373, -2.9499, -3.0354, -3.7345, -3.5777], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1314, device='cuda:0', dtype=torch.float64)
tensor([-2.0248, -2.9404, -3.0494, -3.7428, -3.5734], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8791, device='cuda:0', dtype=torch.float64)
tensor([-2.0103, -2.9275, -3.0647, -3.7478, -3.5780], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0433, device='cuda:0', dtype=torch.float64)
tensor([-1.9972, -2.9222, -3.0866, -3.7513, -3.5841], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0236, device='cuda:0', dtype=torch.float64)
tensor([-1.9859, -2.9207, -3.1081, -3.7502, -3.5906], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1119, device='cuda:0', dtype=torch.float64)
tensor([-1.9782, -2.9183, -3.1241, -3.7497, -3.5952], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0584, device='cuda:0', dtype=torch.float64)
tensor([-1.9869, -2.9192, -3.1290, -3.7381, -3.6034], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1726, device='cuda:0', dtype=torch.float64)
tensor([-2.0022, -2.9210, -3.1243, -3.7263, -3.6113], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0808, device='cuda:0', dtype=torch.float64)
tensor([-2.0258, -2.9241, -3.1147, -3.7065, -3.6167], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0023, device='cuda:0', dtype=torch.float64)
tensor([-2.0525, -2.9279, -3.1022, -3.6858, -3.6203], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2306, device='cuda:0', dtype=torch.float64)
tensor([-2.0587, -2.9228, -3.0981, -3.6849, -3.6184], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1469, device='cuda:0', dtype=torch.float64)
tensor([-2.0515, -2.9160, -3.1018, -3.6961, -3.6141], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9985, device='cuda:0', dtype=torch.float64)
tensor([-2.0282, -2.9088, -3.1197, -3.7165, -3.6064], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9462, device='cuda:0', dtype=torch.float64)
tensor([-2.0075, -2.9069, -3.1346, -3.7368, -3.6024], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9949, device='cuda:0', dtype=torch.float64)
tensor([-1.9873, -2.9100, -3.1440, -3.7509, -3.5987], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2506, device='cuda:0', dtype=torch.float64)
tensor([-1.9720, -2.9177, -3.1519, -3.7556, -3.5982], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9597, device='cuda:0', dtype=torch.float64)
tensor([-1.9670, -2.9295, -3.1538, -3.7532, -3.6018], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9411, device='cuda:0', dtype=torch.float64)
tensor([-1.9739, -2.9424, -3.1486, -3.7418, -3.6035], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1438, device='cuda:0', dtype=torch.float64)
tensor([-1.9905, -2.9514, -3.1422, -3.7232, -3.6080], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3593, device='cuda:0', dtype=torch.float64)
tensor([-1.9980, -2.9483, -3.1342, -3.7089, -3.6079], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9818, device='cuda:0', dtype=torch.float64)
tensor([-2.0004, -2.9390, -3.1295, -3.7001, -3.6064], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9070, device='cuda:0', dtype=torch.float64)
tensor([-2.0025, -2.9318, -3.1244, -3.6898, -3.6029], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9885, device='cuda:0', dtype=torch.float64)
tensor([-1.9996, -2.9244, -3.1243, -3.6861, -3.5999], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0119, device='cuda:0', dtype=torch.float64)
tensor([-1.9867, -2.9176, -3.1285, -3.6908, -3.5951], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0916, device='cuda:0', dtype=torch.float64)
tensor([-1.9796, -2.9162, -3.1272, -3.6931, -3.5942], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0768, device='cuda:0', dtype=torch.float64)
tensor([-1.9812, -2.9212, -3.1178, -3.6908, -3.5930], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9690, device='cuda:0', dtype=torch.float64)
tensor([-1.9858, -2.9275, -3.1024, -3.6877, -3.5944], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0441, device='cuda:0', dtype=torch.float64)
tensor([-1.9941, -2.9361, -3.0879, -3.6821, -3.5960], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9671, device='cuda:0', dtype=torch.float64)
tensor([-2.0033, -2.9435, -3.0727, -3.6808, -3.5984], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9431, device='cuda:0', dtype=torch.float64)
tensor([-2.0127, -2.9484, -3.0576, -3.6797, -3.5995], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9497, device='cuda:0', dtype=torch.float64)
tensor([-2.0175, -2.9498, -3.0502, -3.6823, -3.5991], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2012, device='cuda:0', dtype=torch.float64)
tensor([-2.0174, -2.9452, -3.0492, -3.6893, -3.5959], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0414, device='cuda:0', dtype=torch.float64)
tensor([-2.0131, -2.9392, -3.0516, -3.6962, -3.5909], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0836, device='cuda:0', dtype=torch.float64)
tensor([-2.0072, -2.9246, -3.0597, -3.7032, -3.5858], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0540, device='cuda:0', dtype=torch.float64)
tensor([-1.9976, -2.9102, -3.0715, -3.7078, -3.5817], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0781, device='cuda:0', dtype=torch.float64)
tensor([-1.9923, -2.9006, -3.0787, -3.7069, -3.5883], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1861, device='cuda:0', dtype=torch.float64)
tensor([-1.9978, -2.9015, -3.0788, -3.6980, -3.5969], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1575, device='cuda:0', dtype=torch.float64)
tensor([-2.0049, -2.9069, -3.0716, -3.6888, -3.6047], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2032, device='cuda:0', dtype=torch.float64)
tensor([-2.0081, -2.9062, -3.0755, -3.6809, -3.6155], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9275, device='cuda:0', dtype=torch.float64)
tensor([-2.0115, -2.9060, -3.0827, -3.6716, -3.6244], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1337, device='cuda:0', dtype=torch.float64)
tensor([-2.0079, -2.9053, -3.0913, -3.6687, -3.6273], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0594, device='cuda:0', dtype=torch.float64)
tensor([-2.0032, -2.9039, -3.0991, -3.6666, -3.6257], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2367, device='cuda:0', dtype=torch.float64)
tensor([-1.9950, -2.9052, -3.1048, -3.6655, -3.6195], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9637, device='cuda:0', dtype=torch.float64)
tensor([-1.9918, -2.9061, -3.1069, -3.6601, -3.6085], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9043, device='cuda:0', dtype=torch.float64)
tensor([-1.9939, -2.9045, -3.1060, -3.6523, -3.5982], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1281, device='cuda:0', dtype=torch.float64)
tensor([-1.9950, -2.9036, -3.1084, -3.6483, -3.5895], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3045, device='cuda:0', dtype=torch.float64)
tensor([-2.0008, -2.9037, -3.1072, -3.6411, -3.5892], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2191, device='cuda:0', dtype=torch.float64)
tensor([-2.0206, -2.9140, -3.0982, -3.6234, -3.5931], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0560, device='cuda:0', dtype=torch.float64)
tensor([-2.0329, -2.9253, -3.0915, -3.6118, -3.5973], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1376, device='cuda:0', dtype=torch.float64)
tensor([-2.0332, -2.9328, -3.0891, -3.6112, -3.5990], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3250, device='cuda:0', dtype=torch.float64)
tensor([-2.0163, -2.9301, -3.0997, -3.6262, -3.5988], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2861, device='cuda:0', dtype=torch.float64)
tensor([-1.9980, -2.9244, -3.1103, -3.6499, -3.5896], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1154, device='cuda:0', dtype=torch.float64)
tensor([-1.9822, -2.9216, -3.1132, -3.6723, -3.5779], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1867, device='cuda:0', dtype=torch.float64)
tensor([-1.9693, -2.9200, -3.1175, -3.6890, -3.5648], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0096, device='cuda:0', dtype=torch.float64)
tensor([-1.9663, -2.9244, -3.1141, -3.6971, -3.5569], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9819, device='cuda:0', dtype=torch.float64)
tensor([-1.9710, -2.9309, -3.1043, -3.6982, -3.5524], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0575, device='cuda:0', dtype=torch.float64)
tensor([-1.9828, -2.9341, -3.0859, -3.6911, -3.5493], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1232, device='cuda:0', dtype=torch.float64)
tensor([-1.9944, -2.9325, -3.0679, -3.6841, -3.5503], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1099, device='cuda:0', dtype=torch.float64)
tensor([-2.0007, -2.9213, -3.0562, -3.6823, -3.5547], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1725, device='cuda:0', dtype=torch.float64)
tensor([-2.0062, -2.9084, -3.0502, -3.6837, -3.5601], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4513, device='cuda:0', dtype=torch.float64)
tensor([-2.0071, -2.8978, -3.0518, -3.6867, -3.5733], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0878, device='cuda:0', dtype=torch.float64)
tensor([-2.0126, -2.8922, -3.0537, -3.6834, -3.5908], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0164, device='cuda:0', dtype=torch.float64)
tensor([-2.0140, -2.8933, -3.0641, -3.6787, -3.6084], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9714, device='cuda:0', dtype=torch.float64)
tensor([-2.0104, -2.8949, -3.0790, -3.6819, -3.6271], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2217, device='cuda:0', dtype=torch.float64)
tensor([-2.0036, -2.8945, -3.1060, -3.6851, -3.6400], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1522, device='cuda:0', dtype=torch.float64)
tensor([-1.9953, -2.8948, -3.1280, -3.6900, -3.6475], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0070, device='cuda:0', dtype=torch.float64)
tensor([-1.9907, -2.9010, -3.1438, -3.6944, -3.6506], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0340, device='cuda:0', dtype=torch.float64)
tensor([-1.9872, -2.9041, -3.1504, -3.6981, -3.6464], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0075, device='cuda:0', dtype=torch.float64)
tensor([-1.9849, -2.9052, -3.1521, -3.6992, -3.6381], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7909, device='cuda:0', dtype=torch.float64)
tensor([-1.9875, -2.9073, -3.1449, -3.6969, -3.6217], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9711, device='cuda:0', dtype=torch.float64)
tensor([-1.9929, -2.9117, -3.1277, -3.6937, -3.6038], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1208, device='cuda:0', dtype=torch.float64)
tensor([-2.0088, -2.9172, -3.1035, -3.6762, -3.5900], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0091, device='cuda:0', dtype=torch.float64)
tensor([-2.0210, -2.9236, -3.0856, -3.6539, -3.5835], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0134, device='cuda:0', dtype=torch.float64)
tensor([-2.0263, -2.9251, -3.0734, -3.6364, -3.5709], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0271, device='cuda:0', dtype=torch.float64)
tensor([-2.0263, -2.9259, -3.0715, -3.6213, -3.5636], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1686, device='cuda:0', dtype=torch.float64)
tensor([-2.0212, -2.9259, -3.0820, -3.6130, -3.5560], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2275, device='cuda:0', dtype=torch.float64)
tensor([-2.0026, -2.9200, -3.0976, -3.6168, -3.5499], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9449, device='cuda:0', dtype=torch.float64)
tensor([-1.9830, -2.9117, -3.1151, -3.6269, -3.5478], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0968, device='cuda:0', dtype=torch.float64)
tensor([-1.9617, -2.9033, -3.1322, -3.6430, -3.5455], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0037, device='cuda:0', dtype=torch.float64)
tensor([-1.9497, -2.8957, -3.1435, -3.6562, -3.5453], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2835, device='cuda:0', dtype=torch.float64)
tensor([-1.9526, -2.8950, -3.1413, -3.6554, -3.5463], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0482, device='cuda:0', dtype=torch.float64)
tensor([-1.9683, -2.8984, -3.1270, -3.6426, -3.5522], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2021, device='cuda:0', dtype=torch.float64)
tensor([-1.9908, -2.9083, -3.1069, -3.6286, -3.5607], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1073, device='cuda:0', dtype=torch.float64)
tensor([-2.0090, -2.9152, -3.0933, -3.6240, -3.5677], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0722, device='cuda:0', dtype=torch.float64)
tensor([-2.0256, -2.9217, -3.0761, -3.6262, -3.5696], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9734, device='cuda:0', dtype=torch.float64)
tensor([-2.0310, -2.9224, -3.0695, -3.6349, -3.5680], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1592, device='cuda:0', dtype=torch.float64)
tensor([-2.0285, -2.9166, -3.0687, -3.6506, -3.5635], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0652, device='cuda:0', dtype=torch.float64)
tensor([-2.0231, -2.9106, -3.0637, -3.6702, -3.5604], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1393, device='cuda:0', dtype=torch.float64)
tensor([-2.0087, -2.9043, -3.0687, -3.6951, -3.5588], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3108, device='cuda:0', dtype=torch.float64)
tensor([-1.9980, -2.9088, -3.0649, -3.7023, -3.5626], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1124, device='cuda:0', dtype=torch.float64)
tensor([-1.9926, -2.9161, -3.0615, -3.7007, -3.5708], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1365, device='cuda:0', dtype=torch.float64)
tensor([-1.9896, -2.9262, -3.0529, -3.6965, -3.5800], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1341, device='cuda:0', dtype=torch.float64)
tensor([-1.9923, -2.9379, -3.0449, -3.6881, -3.5854], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2071, device='cuda:0', dtype=torch.float64)
tensor([-1.9936, -2.9403, -3.0429, -3.6818, -3.5835], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4597, device='cuda:0', dtype=torch.float64)
tensor([-1.9923, -2.9324, -3.0495, -3.6824, -3.5774], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1245, device='cuda:0', dtype=torch.float64)
tensor([-1.9932, -2.9280, -3.0567, -3.6752, -3.5746], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9666, device='cuda:0', dtype=torch.float64)
tensor([-1.9969, -2.9197, -3.0605, -3.6664, -3.5737], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3270, device='cuda:0', dtype=torch.float64)
tensor([-1.9990, -2.9148, -3.0627, -3.6542, -3.5778], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1610, device='cuda:0', dtype=torch.float64)
tensor([-2.0035, -2.9115, -3.0640, -3.6383, -3.5870], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1055, device='cuda:0', dtype=torch.float64)
tensor([-2.0112, -2.9148, -3.0628, -3.6209, -3.5916], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0155, device='cuda:0', dtype=torch.float64)
tensor([-2.0108, -2.9163, -3.0593, -3.6112, -3.5944], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9099, device='cuda:0', dtype=torch.float64)
tensor([-2.0077, -2.9207, -3.0541, -3.6064, -3.5989], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2429, device='cuda:0', dtype=torch.float64)
tensor([-2.0012, -2.9238, -3.0444, -3.6124, -3.6003], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0535, device='cuda:0', dtype=torch.float64)
tensor([-1.9902, -2.9252, -3.0356, -3.6252, -3.6003], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1828, device='cuda:0', dtype=torch.float64)
tensor([-1.9858, -2.9265, -3.0312, -3.6381, -3.5962], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8568, device='cuda:0', dtype=torch.float64)
tensor([-1.9839, -2.9218, -3.0318, -3.6522, -3.5878], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8984, device='cuda:0', dtype=torch.float64)
tensor([-1.9846, -2.9174, -3.0342, -3.6621, -3.5749], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9533, device='cuda:0', dtype=torch.float64)
tensor([-1.9859, -2.9167, -3.0389, -3.6701, -3.5600], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0769, device='cuda:0', dtype=torch.float64)
tensor([-1.9892, -2.9169, -3.0473, -3.6747, -3.5454], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0461, device='cuda:0', dtype=torch.float64)
tensor([-1.9918, -2.9150, -3.0528, -3.6712, -3.5369], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9150, device='cuda:0', dtype=torch.float64)
tensor([-1.9936, -2.9114, -3.0591, -3.6638, -3.5255], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9183, device='cuda:0', dtype=torch.float64)
tensor([-1.9889, -2.9078, -3.0647, -3.6545, -3.5232], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1933, device='cuda:0', dtype=torch.float64)
tensor([-1.9794, -2.9033, -3.0751, -3.6477, -3.5198], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8923, device='cuda:0', dtype=torch.float64)
tensor([-1.9765, -2.8969, -3.0843, -3.6396, -3.5202], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2229, device='cuda:0', dtype=torch.float64)
tensor([-1.9853, -2.8996, -3.0827, -3.6274, -3.5228], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9652, device='cuda:0', dtype=torch.float64)
tensor([-1.9915, -2.9050, -3.0805, -3.6181, -3.5244], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3067, device='cuda:0', dtype=torch.float64)
tensor([-1.9900, -2.9117, -3.0814, -3.6177, -3.5273], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1488, device='cuda:0', dtype=torch.float64)
tensor([-1.9902, -2.9170, -3.0808, -3.6251, -3.5277], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1723, device='cuda:0', dtype=torch.float64)
tensor([-1.9914, -2.9230, -3.0811, -3.6346, -3.5320], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0610, device='cuda:0', dtype=torch.float64)
tensor([-1.9965, -2.9302, -3.0773, -3.6380, -3.5402], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0143, device='cuda:0', dtype=torch.float64)
tensor([-1.9960, -2.9316, -3.0808, -3.6455, -3.5484], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9554, device='cuda:0', dtype=torch.float64)
tensor([-1.9978, -2.9278, -3.0855, -3.6511, -3.5516], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7965, device='cuda:0', dtype=torch.float64)
tensor([-1.9935, -2.9173, -3.0912, -3.6565, -3.5535], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0459, device='cuda:0', dtype=torch.float64)
tensor([-1.9864, -2.9040, -3.1035, -3.6602, -3.5535], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9663, device='cuda:0', dtype=torch.float64)
tensor([-1.9796, -2.8872, -3.1118, -3.6670, -3.5507], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9568, device='cuda:0', dtype=torch.float64)
tensor([-1.9815, -2.8795, -3.1064, -3.6609, -3.5491], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0436, device='cuda:0', dtype=torch.float64)
tensor([-1.9822, -2.8765, -3.0979, -3.6597, -3.5440], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1032, device='cuda:0', dtype=torch.float64)
tensor([-1.9866, -2.8807, -3.0879, -3.6537, -3.5363], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0731, device='cuda:0', dtype=torch.float64)
tensor([-1.9924, -2.8864, -3.0780, -3.6447, -3.5376], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1690, device='cuda:0', dtype=torch.float64)
tensor([-1.9951, -2.8911, -3.0722, -3.6344, -3.5411], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2241, device='cuda:0', dtype=torch.float64)
tensor([-1.9973, -2.8960, -3.0628, -3.6186, -3.5438], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1381, device='cuda:0', dtype=torch.float64)
tensor([-2.0001, -2.8978, -3.0550, -3.6074, -3.5427], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0586, device='cuda:0', dtype=torch.float64)
tensor([-1.9889, -2.8947, -3.0599, -3.6075, -3.5383], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8961, device='cuda:0', dtype=torch.float64)
tensor([-1.9763, -2.8910, -3.0606, -3.6132, -3.5349], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2004, device='cuda:0', dtype=torch.float64)
tensor([-1.9608, -2.8860, -3.0679, -3.6259, -3.5318], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1561, device='cuda:0', dtype=torch.float64)
tensor([-1.9611, -2.8889, -3.0659, -3.6251, -3.5349], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1323, device='cuda:0', dtype=torch.float64)
tensor([-1.9773, -2.8953, -3.0646, -3.6069, -3.5385], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9107, device='cuda:0', dtype=torch.float64)
tensor([-1.9883, -2.9002, -3.0712, -3.5920, -3.5457], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9485, device='cuda:0', dtype=torch.float64)
tensor([-1.9921, -2.9071, -3.0775, -3.5832, -3.5570], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8568, device='cuda:0', dtype=torch.float64)
tensor([-1.9860, -2.9140, -3.0901, -3.5794, -3.5697], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2686, device='cuda:0', dtype=torch.float64)
tensor([-1.9774, -2.9161, -3.1046, -3.5811, -3.5760], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1565, device='cuda:0', dtype=torch.float64)
tensor([-1.9579, -2.9074, -3.1235, -3.5984, -3.5742], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0928, device='cuda:0', dtype=torch.float64)
tensor([-1.9490, -2.9036, -3.1316, -3.6097, -3.5683], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1508, device='cuda:0', dtype=torch.float64)
tensor([-1.9536, -2.9019, -3.1335, -3.6088, -3.5609], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1879, device='cuda:0', dtype=torch.float64)
tensor([-1.9640, -2.8972, -3.1187, -3.6033, -3.5541], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0925, device='cuda:0', dtype=torch.float64)
tensor([-1.9791, -2.8934, -3.0970, -3.5953, -3.5527], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9286, device='cuda:0', dtype=torch.float64)
tensor([-1.9990, -2.8920, -3.0690, -3.5805, -3.5582], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1933, device='cuda:0', dtype=torch.float64)
tensor([-2.0202, -2.9004, -3.0349, -3.5684, -3.5646], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0319, device='cuda:0', dtype=torch.float64)
tensor([-2.0317, -2.9088, -3.0091, -3.5683, -3.5725], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1440, device='cuda:0', dtype=torch.float64)
tensor([-2.0248, -2.9096, -2.9992, -3.5878, -3.5736], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0614, device='cuda:0', dtype=torch.float64)
tensor([-2.0007, -2.9066, -3.0016, -3.6189, -3.5723], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0386, device='cuda:0', dtype=torch.float64)
tensor([-1.9745, -2.9056, -3.0089, -3.6495, -3.5707], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9243, device='cuda:0', dtype=torch.float64)
tensor([-1.9572, -2.9053, -3.0183, -3.6675, -3.5713], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9966, device='cuda:0', dtype=torch.float64)
tensor([-1.9480, -2.9008, -3.0196, -3.6823, -3.5714], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1816, device='cuda:0', dtype=torch.float64)
tensor([-1.9511, -2.9023, -3.0085, -3.6809, -3.5754], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1412, device='cuda:0', dtype=torch.float64)
tensor([-1.9711, -2.9110, -2.9893, -3.6615, -3.5792], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0458, device='cuda:0', dtype=torch.float64)
tensor([-1.9926, -2.9220, -2.9719, -3.6384, -3.5832], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0823, device='cuda:0', dtype=torch.float64)
tensor([-2.0144, -2.9302, -2.9600, -3.6164, -3.5829], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0839, device='cuda:0', dtype=torch.float64)
tensor([-2.0252, -2.9270, -2.9664, -3.5973, -3.5770], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0523, device='cuda:0', dtype=torch.float64)
tensor([-2.0218, -2.9193, -2.9861, -3.5937, -3.5667], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9865, device='cuda:0', dtype=torch.float64)
tensor([-2.0061, -2.9057, -3.0139, -3.6024, -3.5558], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1227, device='cuda:0', dtype=torch.float64)
tensor([-1.9844, -2.8936, -3.0482, -3.6220, -3.5431], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1652, device='cuda:0', dtype=torch.float64)
tensor([-1.9655, -2.8885, -3.0757, -3.6392, -3.5328], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1325, device='cuda:0', dtype=torch.float64)
tensor([-1.9528, -2.8905, -3.0969, -3.6475, -3.5256], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0212, device='cuda:0', dtype=torch.float64)
tensor([-1.9539, -2.8970, -3.1019, -3.6443, -3.5251], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9778, device='cuda:0', dtype=torch.float64)
tensor([-1.9600, -2.9027, -3.1075, -3.6336, -3.5224], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0496, device='cuda:0', dtype=torch.float64)
tensor([-1.9699, -2.9066, -3.1063, -3.6226, -3.5196], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3312, device='cuda:0', dtype=torch.float64)
tensor([-1.9917, -2.9164, -3.0953, -3.6001, -3.5184], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8000, device='cuda:0', dtype=torch.float64)
tensor([-2.0144, -2.9196, -3.0861, -3.5797, -3.5214], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9779, device='cuda:0', dtype=torch.float64)
tensor([-2.0321, -2.9251, -3.0823, -3.5621, -3.5248], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0486, device='cuda:0', dtype=torch.float64)
tensor([-2.0444, -2.9225, -3.0794, -3.5528, -3.5298], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4988, device='cuda:0', dtype=torch.float64)
tensor([-2.0473, -2.9151, -3.0769, -3.5580, -3.5328], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0748, device='cuda:0', dtype=torch.float64)
tensor([-2.0390, -2.9089, -3.0771, -3.5746, -3.5362], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9916, device='cuda:0', dtype=torch.float64)
tensor([-2.0292, -2.9049, -3.0784, -3.5911, -3.5374], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2354, device='cuda:0', dtype=torch.float64)
tensor([-2.0106, -2.8989, -3.0827, -3.6094, -3.5375], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2287, device='cuda:0', dtype=torch.float64)
tensor([-1.9886, -2.8900, -3.0866, -3.6380, -3.5349], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0398, device='cuda:0', dtype=torch.float64)
tensor([-1.9610, -2.8839, -3.0971, -3.6713, -3.5305], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9788, device='cuda:0', dtype=torch.float64)
tensor([-1.9362, -2.8844, -3.1059, -3.6963, -3.5301], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0882, device='cuda:0', dtype=torch.float64)
tensor([-1.9308, -2.8940, -3.1013, -3.7047, -3.5275], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0441, device='cuda:0', dtype=torch.float64)
tensor([-1.9427, -2.9108, -3.0885, -3.6951, -3.5266], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9345, device='cuda:0', dtype=torch.float64)
tensor([-1.9662, -2.9316, -3.0701, -3.6715, -3.5253], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1967, device='cuda:0', dtype=torch.float64)
tensor([-1.9855, -2.9451, -3.0573, -3.6479, -3.5247], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9833, device='cuda:0', dtype=torch.float64)
tensor([-2.0056, -2.9553, -3.0472, -3.6204, -3.5263], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1376, device='cuda:0', dtype=torch.float64)
tensor([-2.0148, -2.9534, -3.0419, -3.6029, -3.5262], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0082, device='cuda:0', dtype=torch.float64)
tensor([-2.0167, -2.9476, -3.0406, -3.5915, -3.5276], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0497, device='cuda:0', dtype=torch.float64)
tensor([-2.0194, -2.9386, -3.0404, -3.5815, -3.5295], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0468, device='cuda:0', dtype=torch.float64)
tensor([-2.0154, -2.9278, -3.0397, -3.5797, -3.5282], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1026, device='cuda:0', dtype=torch.float64)
tensor([-2.0073, -2.9099, -3.0438, -3.5880, -3.5284], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9671, device='cuda:0', dtype=torch.float64)
tensor([-1.9937, -2.8920, -3.0510, -3.6015, -3.5290], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9489, device='cuda:0', dtype=torch.float64)
tensor([-1.9781, -2.8752, -3.0567, -3.6185, -3.5304], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1188, device='cuda:0', dtype=torch.float64)
tensor([-1.9663, -2.8630, -3.0635, -3.6382, -3.5319], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0487, device='cuda:0', dtype=torch.float64)
tensor([-1.9612, -2.8517, -3.0691, -3.6549, -3.5383], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3655, device='cuda:0', dtype=torch.float64)
tensor([-1.9652, -2.8406, -3.0762, -3.6668, -3.5386], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9420, device='cuda:0', dtype=torch.float64)
tensor([-1.9718, -2.8336, -3.0774, -3.6731, -3.5403], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2915, device='cuda:0', dtype=torch.float64)
tensor([-1.9873, -2.8452, -3.0675, -3.6619, -3.5487], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0295, device='cuda:0', dtype=torch.float64)
tensor([-2.0065, -2.8584, -3.0496, -3.6422, -3.5616], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0607, device='cuda:0', dtype=torch.float64)
tensor([-2.0246, -2.8722, -3.0360, -3.6233, -3.5759], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0686, device='cuda:0', dtype=torch.float64)
tensor([-2.0395, -2.8850, -3.0294, -3.6037, -3.5924], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2362, device='cuda:0', dtype=torch.float64)
tensor([-2.0348, -2.8940, -3.0290, -3.5976, -3.6028], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9793, device='cuda:0', dtype=torch.float64)
tensor([-2.0207, -2.8919, -3.0338, -3.5987, -3.6059], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2093, device='cuda:0', dtype=torch.float64)
tensor([-1.9945, -2.8804, -3.0435, -3.6109, -3.5960], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0476, device='cuda:0', dtype=torch.float64)
tensor([-1.9701, -2.8639, -3.0591, -3.6269, -3.5840], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0569, device='cuda:0', dtype=torch.float64)
tensor([-1.9562, -2.8510, -3.0700, -3.6368, -3.5657], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2218, device='cuda:0', dtype=torch.float64)
tensor([-1.9539, -2.8415, -3.0739, -3.6292, -3.5535], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4274, device='cuda:0', dtype=torch.float64)
tensor([-1.9644, -2.8440, -3.0703, -3.6027, -3.5471], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0304, device='cuda:0', dtype=torch.float64)
tensor([-1.9827, -2.8578, -3.0574, -3.5741, -3.5433], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0188, device='cuda:0', dtype=torch.float64)
tensor([-2.0138, -2.8790, -3.0426, -3.5384, -3.5443], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0613, device='cuda:0', dtype=torch.float64)
tensor([-2.0363, -2.8962, -3.0342, -3.5193, -3.5454], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1780, device='cuda:0', dtype=torch.float64)
tensor([-2.0429, -2.9074, -3.0393, -3.5110, -3.5492], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0440, device='cuda:0', dtype=torch.float64)
tensor([-2.0366, -2.9094, -3.0565, -3.5158, -3.5520], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0012, device='cuda:0', dtype=torch.float64)
tensor([-2.0192, -2.9054, -3.0755, -3.5302, -3.5550], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0460, device='cuda:0', dtype=torch.float64)
tensor([-1.9970, -2.8977, -3.0942, -3.5553, -3.5586], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1744, device='cuda:0', dtype=torch.float64)
tensor([-1.9732, -2.8918, -3.1167, -3.5790, -3.5569], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1227, device='cuda:0', dtype=torch.float64)
tensor([-1.9592, -2.8851, -3.1311, -3.5984, -3.5479], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1916, device='cuda:0', dtype=torch.float64)
tensor([-1.9511, -2.8782, -3.1376, -3.6125, -3.5361], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9139, device='cuda:0', dtype=torch.float64)
tensor([-1.9563, -2.8727, -3.1322, -3.6160, -3.5242], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9086, device='cuda:0', dtype=torch.float64)
tensor([-1.9628, -2.8673, -3.1169, -3.6184, -3.5169], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9422, device='cuda:0', dtype=torch.float64)
tensor([-1.9775, -2.8667, -3.0944, -3.6131, -3.5078], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2154, device='cuda:0', dtype=torch.float64)
tensor([-1.9860, -2.8676, -3.0690, -3.6118, -3.5021], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0344, device='cuda:0', dtype=torch.float64)
tensor([-1.9893, -2.8666, -3.0483, -3.6137, -3.4954], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9289, device='cuda:0', dtype=torch.float64)
tensor([-1.9853, -2.8640, -3.0353, -3.6283, -3.4891], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0839, device='cuda:0', dtype=torch.float64)
tensor([-1.9793, -2.8660, -3.0230, -3.6420, -3.4907], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1822, device='cuda:0', dtype=torch.float64)
tensor([-1.9812, -2.8728, -3.0152, -3.6469, -3.5006], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2161, device='cuda:0', dtype=torch.float64)
tensor([-1.9851, -2.8803, -3.0056, -3.6443, -3.5124], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3416, device='cuda:0', dtype=torch.float64)
tensor([-1.9763, -2.8748, -3.0123, -3.6537, -3.5232], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0325, device='cuda:0', dtype=torch.float64)
tensor([-1.9647, -2.8666, -3.0298, -3.6628, -3.5303], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9204, device='cuda:0', dtype=torch.float64)
tensor([-1.9574, -2.8500, -3.0533, -3.6674, -3.5320], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1496, device='cuda:0', dtype=torch.float64)
tensor([-1.9610, -2.8422, -3.0674, -3.6648, -3.5296], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1250, device='cuda:0', dtype=torch.float64)
tensor([-1.9729, -2.8434, -3.0708, -3.6573, -3.5223], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0761, device='cuda:0', dtype=torch.float64)
tensor([-1.9908, -2.8488, -3.0670, -3.6384, -3.5164], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3968, device='cuda:0', dtype=torch.float64)
tensor([-2.0217, -2.8671, -3.0496, -3.6050, -3.5186], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1101, device='cuda:0', dtype=torch.float64)
tensor([-2.0444, -2.8893, -3.0318, -3.5801, -3.5280], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4066, device='cuda:0', dtype=torch.float64)
tensor([-2.0527, -2.9036, -3.0220, -3.5703, -3.5310], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1144, device='cuda:0', dtype=torch.float64)
tensor([-2.0433, -2.9094, -3.0196, -3.5754, -3.5287], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9275, device='cuda:0', dtype=torch.float64)
tensor([-2.0264, -2.9114, -3.0201, -3.5850, -3.5328], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0728, device='cuda:0', dtype=torch.float64)
tensor([-1.9968, -2.8986, -3.0306, -3.6079, -3.5315], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0468, device='cuda:0', dtype=torch.float64)
tensor([-1.9750, -2.8867, -3.0321, -3.6276, -3.5365], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2594, device='cuda:0', dtype=torch.float64)
tensor([-1.9651, -2.8791, -3.0254, -3.6275, -3.5499], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1776, device='cuda:0', dtype=torch.float64)
tensor([-1.9620, -2.8815, -3.0159, -3.6253, -3.5698], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0391, device='cuda:0', dtype=torch.float64)
tensor([-1.9659, -2.8872, -3.0075, -3.6132, -3.5848], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0644, device='cuda:0', dtype=torch.float64)
tensor([-1.9672, -2.8894, -3.0073, -3.6066, -3.5932], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2632, device='cuda:0', dtype=torch.float64)
tensor([-1.9627, -2.8854, -3.0252, -3.6069, -3.5899], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1872, device='cuda:0', dtype=torch.float64)
tensor([-1.9488, -2.8784, -3.0518, -3.6154, -3.5825], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0102, device='cuda:0', dtype=torch.float64)
tensor([-1.9419, -2.8712, -3.0736, -3.6170, -3.5665], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2867, device='cuda:0', dtype=torch.float64)
tensor([-1.9429, -2.8626, -3.0858, -3.6130, -3.5477], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0902, device='cuda:0', dtype=torch.float64)
tensor([-1.9500, -2.8566, -3.0970, -3.6059, -3.5323], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0103, device='cuda:0', dtype=torch.float64)
tensor([-1.9671, -2.8601, -3.0847, -3.5924, -3.5214], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0922, device='cuda:0', dtype=torch.float64)
tensor([-1.9910, -2.8666, -3.0605, -3.5735, -3.5191], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2844, device='cuda:0', dtype=torch.float64)
tensor([-2.0079, -2.8777, -3.0341, -3.5580, -3.5178], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1587, device='cuda:0', dtype=torch.float64)
tensor([-2.0201, -2.8862, -3.0113, -3.5433, -3.5173], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3226, device='cuda:0', dtype=torch.float64)
tensor([-2.0237, -2.8911, -3.0008, -3.5378, -3.5199], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4294, device='cuda:0', dtype=torch.float64)
tensor([-2.0312, -2.8899, -2.9924, -3.5369, -3.5244], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2890, device='cuda:0', dtype=torch.float64)
tensor([-2.0290, -2.8847, -2.9909, -3.5449, -3.5274], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2765, device='cuda:0', dtype=torch.float64)
tensor([-2.0144, -2.8659, -3.0040, -3.5671, -3.5253], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0153, device='cuda:0', dtype=torch.float64)
tensor([-1.9970, -2.8523, -3.0219, -3.5929, -3.5235], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1327, device='cuda:0', dtype=torch.float64)
tensor([-1.9801, -2.8423, -3.0415, -3.6209, -3.5221], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9541, device='cuda:0', dtype=torch.float64)
tensor([-1.9691, -2.8366, -3.0593, -3.6442, -3.5251], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9490, device='cuda:0', dtype=torch.float64)
tensor([-1.9640, -2.8389, -3.0696, -3.6601, -3.5319], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0384, device='cuda:0', dtype=torch.float64)
tensor([-1.9667, -2.8481, -3.0751, -3.6702, -3.5424], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1208, device='cuda:0', dtype=torch.float64)
tensor([-1.9787, -2.8629, -3.0768, -3.6618, -3.5506], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9790, device='cuda:0', dtype=torch.float64)
tensor([-1.9993, -2.8797, -3.0711, -3.6467, -3.5552], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2163, device='cuda:0', dtype=torch.float64)
tensor([-2.0220, -2.8945, -3.0651, -3.6273, -3.5541], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1312, device='cuda:0', dtype=torch.float64)
tensor([-2.0382, -2.9035, -3.0619, -3.6086, -3.5538], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9562, device='cuda:0', dtype=torch.float64)
tensor([-2.0466, -2.9081, -3.0634, -3.5878, -3.5483], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0855, device='cuda:0', dtype=torch.float64)
tensor([-2.0450, -2.9025, -3.0704, -3.5740, -3.5382], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1766, device='cuda:0', dtype=torch.float64)
tensor([-2.0263, -2.8875, -3.0869, -3.5783, -3.5222], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0410, device='cuda:0', dtype=torch.float64)
tensor([-1.9992, -2.8727, -3.0972, -3.5891, -3.5115], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1455, device='cuda:0', dtype=torch.float64)
tensor([-1.9734, -2.8672, -3.1049, -3.6038, -3.4983], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0942, device='cuda:0', dtype=torch.float64)
tensor([-1.9535, -2.8620, -3.1076, -3.6137, -3.4855], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3790, device='cuda:0', dtype=torch.float64)
tensor([-1.9500, -2.8671, -3.1005, -3.6107, -3.4777], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2127, device='cuda:0', dtype=torch.float64)
tensor([-1.9593, -2.8743, -3.0821, -3.5970, -3.4771], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3007, device='cuda:0', dtype=torch.float64)
tensor([-1.9868, -2.8875, -3.0545, -3.5739, -3.4825], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9979, device='cuda:0', dtype=torch.float64)
tensor([-2.0141, -2.8989, -3.0326, -3.5568, -3.4870], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2313, device='cuda:0', dtype=torch.float64)
tensor([-2.0332, -2.9025, -3.0180, -3.5467, -3.4916], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3772, device='cuda:0', dtype=torch.float64)
tensor([-2.0338, -2.8982, -3.0149, -3.5544, -3.4889], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1392, device='cuda:0', dtype=torch.float64)
tensor([-2.0248, -2.8880, -3.0215, -3.5656, -3.4792], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0157, device='cuda:0', dtype=torch.float64)
tensor([-2.0005, -2.8808, -3.0404, -3.5818, -3.4698], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2206, device='cuda:0', dtype=torch.float64)
tensor([-1.9746, -2.8790, -3.0581, -3.5929, -3.4673], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0600, device='cuda:0', dtype=torch.float64)
tensor([-1.9545, -2.8828, -3.0691, -3.5934, -3.4765], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4587, device='cuda:0', dtype=torch.float64)
tensor([-1.9513, -2.8919, -3.0736, -3.5794, -3.4934], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0722, device='cuda:0', dtype=torch.float64)
tensor([-1.9607, -2.9050, -3.0659, -3.5582, -3.5175], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9892, device='cuda:0', dtype=torch.float64)
tensor([-1.9699, -2.9105, -3.0632, -3.5434, -3.5365], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2101, device='cuda:0', dtype=torch.float64)
tensor([-1.9779, -2.9073, -3.0631, -3.5362, -3.5484], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4781, device='cuda:0', dtype=torch.float64)
tensor([-1.9785, -2.8917, -3.0639, -3.5470, -3.5456], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0975, device='cuda:0', dtype=torch.float64)
tensor([-1.9785, -2.8726, -3.0649, -3.5651, -3.5370], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0491, device='cuda:0', dtype=torch.float64)
tensor([-1.9828, -2.8614, -3.0568, -3.5809, -3.5284], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0955, device='cuda:0', dtype=torch.float64)
tensor([-1.9939, -2.8579, -3.0465, -3.5835, -3.5218], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4594, device='cuda:0', dtype=torch.float64)
tensor([-2.0184, -2.8585, -3.0276, -3.5712, -3.5216], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2291, device='cuda:0', dtype=torch.float64)
tensor([-2.0346, -2.8613, -3.0133, -3.5565, -3.5306], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0482, device='cuda:0', dtype=torch.float64)
tensor([-2.0288, -2.8573, -3.0192, -3.5585, -3.5390], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1171, device='cuda:0', dtype=torch.float64)
tensor([-2.0084, -2.8499, -3.0370, -3.5730, -3.5351], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0551, device='cuda:0', dtype=torch.float64)
tensor([-1.9808, -2.8458, -3.0595, -3.5890, -3.5259], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3906, device='cuda:0', dtype=torch.float64)
tensor([-1.9473, -2.8416, -3.0881, -3.6147, -3.5149], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2439, device='cuda:0', dtype=torch.float64)
tensor([-1.9157, -2.8385, -3.1154, -3.6464, -3.5063], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1046, device='cuda:0', dtype=torch.float64)
tensor([-1.9026, -2.8410, -3.1213, -3.6636, -3.5082], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2224, device='cuda:0', dtype=torch.float64)
tensor([-1.9125, -2.8508, -3.1072, -3.6622, -3.5126], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9698, device='cuda:0', dtype=torch.float64)
tensor([-1.9345, -2.8650, -3.0845, -3.6466, -3.5174], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2138, device='cuda:0', dtype=torch.float64)
tensor([-1.9733, -2.8845, -3.0551, -3.6167, -3.5264], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1759, device='cuda:0', dtype=torch.float64)
tensor([-2.0087, -2.8932, -3.0320, -3.5847, -3.5335], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1179, device='cuda:0', dtype=torch.float64)
tensor([-2.0300, -2.8968, -3.0180, -3.5625, -3.5362], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0982, device='cuda:0', dtype=torch.float64)
tensor([-2.0368, -2.8933, -3.0076, -3.5490, -3.5384], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0164, device='cuda:0', dtype=torch.float64)
tensor([-2.0302, -2.8870, -3.0064, -3.5416, -3.5381], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9605, device='cuda:0', dtype=torch.float64)
tensor([-2.0185, -2.8812, -3.0074, -3.5392, -3.5322], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0592, device='cuda:0', dtype=torch.float64)
tensor([-1.9989, -2.8741, -3.0178, -3.5436, -3.5281], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0116, device='cuda:0', dtype=torch.float64)
tensor([-1.9851, -2.8671, -3.0271, -3.5452, -3.5252], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9969, device='cuda:0', dtype=torch.float64)
tensor([-1.9729, -2.8585, -3.0357, -3.5492, -3.5206], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2195, device='cuda:0', dtype=torch.float64)
tensor([-1.9657, -2.8567, -3.0413, -3.5475, -3.5259], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2922, device='cuda:0', dtype=torch.float64)
tensor([-1.9689, -2.8621, -3.0355, -3.5416, -3.5345], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0734, device='cuda:0', dtype=torch.float64)
tensor([-1.9716, -2.8678, -3.0323, -3.5427, -3.5310], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1995, device='cuda:0', dtype=torch.float64)
tensor([-1.9685, -2.8702, -3.0286, -3.5505, -3.5302], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1011, device='cuda:0', dtype=torch.float64)
tensor([-1.9665, -2.8701, -3.0161, -3.5621, -3.5263], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1332, device='cuda:0', dtype=torch.float64)
tensor([-1.9800, -2.8748, -2.9951, -3.5649, -3.5170], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2092, device='cuda:0', dtype=torch.float64)
tensor([-1.9894, -2.8782, -2.9831, -3.5617, -3.5112], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0896, device='cuda:0', dtype=torch.float64)
tensor([-1.9974, -2.8785, -2.9740, -3.5589, -3.5105], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1781, device='cuda:0', dtype=torch.float64)
tensor([-2.0049, -2.8831, -2.9645, -3.5543, -3.5127], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1718, device='cuda:0', dtype=torch.float64)
tensor([-2.0112, -2.8873, -2.9611, -3.5460, -3.5157], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1736, device='cuda:0', dtype=torch.float64)
tensor([-2.0137, -2.8933, -2.9723, -3.5352, -3.5124], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9919, device='cuda:0', dtype=torch.float64)
tensor([-2.0143, -2.8932, -2.9888, -3.5278, -3.5082], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0668, device='cuda:0', dtype=torch.float64)
tensor([-2.0150, -2.8970, -3.0060, -3.5207, -3.5016], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3602, device='cuda:0', dtype=torch.float64)
tensor([-2.0086, -2.8993, -3.0243, -3.5251, -3.4893], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0972, device='cuda:0', dtype=torch.float64)
tensor([-2.0011, -2.9000, -3.0382, -3.5321, -3.4763], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1712, device='cuda:0', dtype=torch.float64)
tensor([-1.9904, -2.9005, -3.0511, -3.5368, -3.4687], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0605, device='cuda:0', dtype=torch.float64)
tensor([-1.9742, -2.8977, -3.0681, -3.5463, -3.4632], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0339, device='cuda:0', dtype=torch.float64)
tensor([-1.9580, -2.8905, -3.0811, -3.5578, -3.4619], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1712, device='cuda:0', dtype=torch.float64)
tensor([-1.9527, -2.8809, -3.0911, -3.5600, -3.4653], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8984, device='cuda:0', dtype=torch.float64)
tensor([-1.9548, -2.8726, -3.0893, -3.5614, -3.4728], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2053, device='cuda:0', dtype=torch.float64)
tensor([-1.9646, -2.8621, -3.0783, -3.5626, -3.4800], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9840, device='cuda:0', dtype=torch.float64)
tensor([-1.9777, -2.8551, -3.0605, -3.5623, -3.4882], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1641, device='cuda:0', dtype=torch.float64)
tensor([-1.9857, -2.8490, -3.0413, -3.5667, -3.4925], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1775, device='cuda:0', dtype=torch.float64)
tensor([-2.0010, -2.8459, -3.0224, -3.5600, -3.4969], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0794, device='cuda:0', dtype=torch.float64)
tensor([-2.0100, -2.8462, -3.0059, -3.5617, -3.4998], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9022, device='cuda:0', dtype=torch.float64)
tensor([-2.0164, -2.8519, -2.9902, -3.5603, -3.4998], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1024, device='cuda:0', dtype=torch.float64)
tensor([-2.0255, -2.8684, -2.9715, -3.5460, -3.5006], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1697, device='cuda:0', dtype=torch.float64)
tensor([-2.0290, -2.8804, -2.9508, -3.5372, -3.5022], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2139, device='cuda:0', dtype=torch.float64)
tensor([-2.0225, -2.8847, -2.9424, -3.5397, -3.5031], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2269, device='cuda:0', dtype=torch.float64)
tensor([-2.0020, -2.8789, -2.9462, -3.5531, -3.5044], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1875, device='cuda:0', dtype=torch.float64)
tensor([-1.9726, -2.8687, -2.9611, -3.5753, -3.5015], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0418, device='cuda:0', dtype=torch.float64)
tensor([-1.9539, -2.8595, -2.9781, -3.5919, -3.5031], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1820, device='cuda:0', dtype=torch.float64)
tensor([-1.9450, -2.8494, -2.9992, -3.6002, -3.5109], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2524, device='cuda:0', dtype=torch.float64)
tensor([-1.9408, -2.8391, -3.0136, -3.6045, -3.5202], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1367, device='cuda:0', dtype=torch.float64)
tensor([-1.9495, -2.8394, -3.0210, -3.5962, -3.5300], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2032, device='cuda:0', dtype=torch.float64)
tensor([-1.9664, -2.8412, -3.0159, -3.5813, -3.5388], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9913, device='cuda:0', dtype=torch.float64)
tensor([-1.9885, -2.8421, -3.0034, -3.5674, -3.5499], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1305, device='cuda:0', dtype=torch.float64)
tensor([-2.0058, -2.8462, -2.9994, -3.5548, -3.5551], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2151, device='cuda:0', dtype=torch.float64)
tensor([-2.0189, -2.8450, -3.0004, -3.5523, -3.5521], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1115, device='cuda:0', dtype=torch.float64)
tensor([-2.0286, -2.8452, -3.0044, -3.5517, -3.5514], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2957, device='cuda:0', dtype=torch.float64)
tensor([-2.0358, -2.8393, -3.0126, -3.5537, -3.5430], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1080, device='cuda:0', dtype=torch.float64)
tensor([-2.0293, -2.8357, -3.0207, -3.5610, -3.5326], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2296, device='cuda:0', dtype=torch.float64)
tensor([-2.0316, -2.8363, -3.0208, -3.5537, -3.5277], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1866, device='cuda:0', dtype=torch.float64)
tensor([-2.0276, -2.8417, -3.0251, -3.5483, -3.5219], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0196, device='cuda:0', dtype=torch.float64)
tensor([-2.0141, -2.8451, -3.0346, -3.5435, -3.5166], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3453, device='cuda:0', dtype=torch.float64)
tensor([-1.9987, -2.8472, -3.0380, -3.5464, -3.5112], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2180, device='cuda:0', dtype=torch.float64)
tensor([-1.9883, -2.8462, -3.0348, -3.5492, -3.5103], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2425, device='cuda:0', dtype=torch.float64)
tensor([-1.9762, -2.8380, -3.0320, -3.5551, -3.5144], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1880, device='cuda:0', dtype=torch.float64)
tensor([-1.9616, -2.8241, -3.0308, -3.5703, -3.5182], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2034, device='cuda:0', dtype=torch.float64)
tensor([-1.9487, -2.8129, -3.0351, -3.5915, -3.5156], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3132, device='cuda:0', dtype=torch.float64)
tensor([-1.9445, -2.8065, -3.0342, -3.6120, -3.5081], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0395, device='cuda:0', dtype=torch.float64)
tensor([-1.9550, -2.8095, -3.0302, -3.6149, -3.5040], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0512, device='cuda:0', dtype=torch.float64)
tensor([-1.9705, -2.8237, -3.0216, -3.6085, -3.4963], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1887, device='cuda:0', dtype=torch.float64)
tensor([-1.9935, -2.8471, -3.0063, -3.5894, -3.4871], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1438, device='cuda:0', dtype=torch.float64)
tensor([-2.0189, -2.8744, -2.9856, -3.5571, -3.4800], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1227, device='cuda:0', dtype=torch.float64)
tensor([-2.0362, -2.9047, -2.9696, -3.5286, -3.4782], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4165, device='cuda:0', dtype=torch.float64)
tensor([-2.0442, -2.9297, -2.9592, -3.5099, -3.4839], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3128, device='cuda:0', dtype=torch.float64)
tensor([-2.0351, -2.9365, -2.9682, -3.5107, -3.4838], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3556, device='cuda:0', dtype=torch.float64)
tensor([-2.0152, -2.9287, -2.9925, -3.5260, -3.4779], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1173, device='cuda:0', dtype=torch.float64)
tensor([-1.9908, -2.9101, -3.0197, -3.5505, -3.4694], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0569, device='cuda:0', dtype=torch.float64)
tensor([-1.9688, -2.8901, -3.0437, -3.5766, -3.4634], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0616, device='cuda:0', dtype=torch.float64)
tensor([-1.9602, -2.8814, -3.0546, -3.5839, -3.4606], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1965, device='cuda:0', dtype=torch.float64)
tensor([-1.9577, -2.8694, -3.0706, -3.5856, -3.4587], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0350, device='cuda:0', dtype=torch.float64)
tensor([-1.9704, -2.8617, -3.0694, -3.5771, -3.4653], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0215, device='cuda:0', dtype=torch.float64)
tensor([-1.9830, -2.8571, -3.0591, -3.5650, -3.4726], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1119, device='cuda:0', dtype=torch.float64)
tensor([-1.9892, -2.8522, -3.0484, -3.5516, -3.4742], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1881, device='cuda:0', dtype=torch.float64)
tensor([-1.9907, -2.8464, -3.0367, -3.5445, -3.4748], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2143, device='cuda:0', dtype=torch.float64)
tensor([-1.9942, -2.8515, -3.0211, -3.5388, -3.4793], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0482, device='cuda:0', dtype=torch.float64)
tensor([-1.9961, -2.8676, -3.0109, -3.5318, -3.4867], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8883, device='cuda:0', dtype=torch.float64)
tensor([-1.9875, -2.8803, -3.0102, -3.5325, -3.4983], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9460, device='cuda:0', dtype=torch.float64)
tensor([-1.9743, -2.8934, -3.0160, -3.5384, -3.5118], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1259, device='cuda:0', dtype=torch.float64)
tensor([-1.9586, -2.9012, -3.0334, -3.5463, -3.5200], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3389, device='cuda:0', dtype=torch.float64)
tensor([-1.9469, -2.9067, -3.0485, -3.5567, -3.5275], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0084, device='cuda:0', dtype=torch.float64)
tensor([-1.9450, -2.9084, -3.0567, -3.5609, -3.5339], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0010, device='cuda:0', dtype=torch.float64)
tensor([-1.9551, -2.9069, -3.0579, -3.5553, -3.5393], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0196, device='cuda:0', dtype=torch.float64)
tensor([-1.9721, -2.9097, -3.0559, -3.5452, -3.5400], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9704, device='cuda:0', dtype=torch.float64)
tensor([-1.9841, -2.8965, -3.0572, -3.5385, -3.5373], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9129, device='cuda:0', dtype=torch.float64)
tensor([-1.9820, -2.8726, -3.0618, -3.5422, -3.5321], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2378, device='cuda:0', dtype=torch.float64)
tensor([-1.9779, -2.8499, -3.0659, -3.5481, -3.5262], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5238, device='cuda:0', dtype=torch.float64)
tensor([-1.9707, -2.8316, -3.0674, -3.5582, -3.5226], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1088, device='cuda:0', dtype=torch.float64)
tensor([-1.9647, -2.8166, -3.0682, -3.5694, -3.5210], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1470, device='cuda:0', dtype=torch.float64)
tensor([-1.9665, -2.8155, -3.0588, -3.5675, -3.5185], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1561, device='cuda:0', dtype=torch.float64)
tensor([-1.9905, -2.8304, -3.0338, -3.5449, -3.5287], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1989, device='cuda:0', dtype=torch.float64)
tensor([-2.0179, -2.8550, -3.0067, -3.5158, -3.5421], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1622, device='cuda:0', dtype=torch.float64)
tensor([-2.0393, -2.8845, -2.9810, -3.4951, -3.5634], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1335, device='cuda:0', dtype=torch.float64)
tensor([-2.0481, -2.9067, -2.9671, -3.4844, -3.5791], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0897, device='cuda:0', dtype=torch.float64)
tensor([-2.0390, -2.9134, -2.9651, -3.4902, -3.5839], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2738, device='cuda:0', dtype=torch.float64)
tensor([-2.0085, -2.9059, -2.9749, -3.5173, -3.5806], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2521, device='cuda:0', dtype=torch.float64)
tensor([-1.9816, -2.8870, -2.9923, -3.5522, -3.5682], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1029, device='cuda:0', dtype=torch.float64)
tensor([-1.9568, -2.8665, -3.0195, -3.5822, -3.5571], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1039, device='cuda:0', dtype=torch.float64)
tensor([-1.9471, -2.8460, -3.0451, -3.6027, -3.5438], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7012, device='cuda:0', dtype=torch.float64)
tensor([-1.9629, -2.8408, -3.0548, -3.5921, -3.5381], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1724, device='cuda:0', dtype=torch.float64)
tensor([-1.9965, -2.8418, -3.0522, -3.5622, -3.5370], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2560, device='cuda:0', dtype=torch.float64)
tensor([-2.0323, -2.8515, -3.0368, -3.5225, -3.5436], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1084, device='cuda:0', dtype=torch.float64)
tensor([-2.0577, -2.8631, -3.0190, -3.4935, -3.5522], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0810, device='cuda:0', dtype=torch.float64)
tensor([-2.0556, -2.8610, -3.0151, -3.4854, -3.5581], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1786, device='cuda:0', dtype=torch.float64)
tensor([-2.0277, -2.8508, -3.0219, -3.4920, -3.5555], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5279, device='cuda:0', dtype=torch.float64)
tensor([-1.9702, -2.8281, -3.0404, -3.5269, -3.5474], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1513, device='cuda:0', dtype=torch.float64)
tensor([-1.9160, -2.8104, -3.0615, -3.5733, -3.5351], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0438, device='cuda:0', dtype=torch.float64)
tensor([-1.8781, -2.8028, -3.0723, -3.6096, -3.5220], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5084, device='cuda:0', dtype=torch.float64)
tensor([-1.8736, -2.8150, -3.0571, -3.6296, -3.5085], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1195, device='cuda:0', dtype=torch.float64)
tensor([-1.8917, -2.8292, -3.0314, -3.6297, -3.4979], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9778, device='cuda:0', dtype=torch.float64)
tensor([-1.9271, -2.8490, -2.9964, -3.6085, -3.4909], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1601, device='cuda:0', dtype=torch.float64)
tensor([-1.9765, -2.8713, -2.9616, -3.5670, -3.4891], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1433, device='cuda:0', dtype=torch.float64)
tensor([-2.0239, -2.8897, -2.9382, -3.5246, -3.4905], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1809, device='cuda:0', dtype=torch.float64)
tensor([-2.0570, -2.9006, -2.9304, -3.4974, -3.4838], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2493, device='cuda:0', dtype=torch.float64)
tensor([-2.0755, -2.8962, -2.9392, -3.4855, -3.4740], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1717, device='cuda:0', dtype=torch.float64)
tensor([-2.0713, -2.8784, -2.9608, -3.4944, -3.4586], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2136, device='cuda:0', dtype=torch.float64)
tensor([-2.0532, -2.8630, -2.9936, -3.5147, -3.4462], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2557, device='cuda:0', dtype=torch.float64)
tensor([-2.0327, -2.8464, -3.0284, -3.5343, -3.4412], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3837, device='cuda:0', dtype=torch.float64)
tensor([-2.0141, -2.8374, -3.0519, -3.5484, -3.4453], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1123, device='cuda:0', dtype=torch.float64)
tensor([-2.0070, -2.8351, -3.0601, -3.5547, -3.4545], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2439, device='cuda:0', dtype=torch.float64)
tensor([-2.0077, -2.8441, -3.0538, -3.5509, -3.4699], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2020, device='cuda:0', dtype=torch.float64)
tensor([-2.0130, -2.8541, -3.0504, -3.5542, -3.4798], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0521, device='cuda:0', dtype=torch.float64)
tensor([-2.0186, -2.8623, -3.0481, -3.5601, -3.4911], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2543, device='cuda:0', dtype=torch.float64)
tensor([-2.0180, -2.8604, -3.0417, -3.5737, -3.4967], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9813, device='cuda:0', dtype=torch.float64)
tensor([-2.0177, -2.8583, -3.0349, -3.5837, -3.5000], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1305, device='cuda:0', dtype=torch.float64)
tensor([-2.0160, -2.8548, -3.0212, -3.5917, -3.5065], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0934, device='cuda:0', dtype=torch.float64)
tensor([-2.0091, -2.8466, -3.0119, -3.6000, -3.5100], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2410, device='cuda:0', dtype=torch.float64)
tensor([-2.0136, -2.8519, -2.9900, -3.5950, -3.5194], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0414, device='cuda:0', dtype=torch.float64)
tensor([-2.0108, -2.8567, -2.9753, -3.5823, -3.5251], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9655, device='cuda:0', dtype=torch.float64)
tensor([-1.9992, -2.8638, -2.9635, -3.5693, -3.5272], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1498, device='cuda:0', dtype=torch.float64)
tensor([-1.9821, -2.8721, -2.9592, -3.5592, -3.5258], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9765, device='cuda:0', dtype=torch.float64)
tensor([-1.9701, -2.8822, -2.9590, -3.5451, -3.5263], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2155, device='cuda:0', dtype=torch.float64)
tensor([-1.9549, -2.8771, -2.9726, -3.5401, -3.5304], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8872, device='cuda:0', dtype=torch.float64)
tensor([-1.9520, -2.8714, -2.9834, -3.5306, -3.5351], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1067, device='cuda:0', dtype=torch.float64)
tensor([-1.9628, -2.8670, -2.9944, -3.5090, -3.5390], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1584, device='cuda:0', dtype=torch.float64)
tensor([-1.9760, -2.8592, -3.0141, -3.4868, -3.5407], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9316, device='cuda:0', dtype=torch.float64)
tensor([-1.9894, -2.8522, -3.0250, -3.4663, -3.5454], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3241, device='cuda:0', dtype=torch.float64)
tensor([-1.9986, -2.8505, -3.0267, -3.4513, -3.5427], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2511, device='cuda:0', dtype=torch.float64)
tensor([-1.9992, -2.8401, -3.0322, -3.4491, -3.5382], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2523, device='cuda:0', dtype=torch.float64)
tensor([-1.9949, -2.8307, -3.0429, -3.4556, -3.5314], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0531, device='cuda:0', dtype=torch.float64)
tensor([-1.9872, -2.8206, -3.0495, -3.4757, -3.5257], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0982, device='cuda:0', dtype=torch.float64)
tensor([-1.9816, -2.8217, -3.0495, -3.4969, -3.5167], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1353, device='cuda:0', dtype=torch.float64)
tensor([-1.9774, -2.8316, -3.0424, -3.5158, -3.5126], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0639, device='cuda:0', dtype=torch.float64)
tensor([-1.9630, -2.8410, -3.0318, -3.5374, -3.5016], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0187, device='cuda:0', dtype=torch.float64)
tensor([-1.9489, -2.8512, -3.0174, -3.5605, -3.4899], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2755, device='cuda:0', dtype=torch.float64)
tensor([-1.9486, -2.8600, -3.0026, -3.5742, -3.4754], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3272, device='cuda:0', dtype=torch.float64)
tensor([-1.9543, -2.8646, -2.9888, -3.5897, -3.4674], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2242, device='cuda:0', dtype=torch.float64)
tensor([-1.9655, -2.8722, -2.9803, -3.5950, -3.4637], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0879, device='cuda:0', dtype=torch.float64)
tensor([-1.9867, -2.8803, -2.9752, -3.5842, -3.4650], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2512, device='cuda:0', dtype=torch.float64)
tensor([-2.0157, -2.8919, -2.9714, -3.5617, -3.4637], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1095, device='cuda:0', dtype=torch.float64)
tensor([-2.0401, -2.9000, -2.9732, -3.5423, -3.4716], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1862, device='cuda:0', dtype=torch.float64)
tensor([-2.0536, -2.9025, -2.9814, -3.5294, -3.4755], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0540, device='cuda:0', dtype=torch.float64)
tensor([-2.0469, -2.8985, -2.9991, -3.5285, -3.4810], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2414, device='cuda:0', dtype=torch.float64)
tensor([-2.0234, -2.8873, -3.0250, -3.5449, -3.4879], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0818, device='cuda:0', dtype=torch.float64)
tensor([-1.9971, -2.8728, -3.0460, -3.5601, -3.4930], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9325, device='cuda:0', dtype=torch.float64)
tensor([-1.9543, -2.8521, -3.0694, -3.5873, -3.4985], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1313, device='cuda:0', dtype=torch.float64)
tensor([-1.9241, -2.8361, -3.0793, -3.5997, -3.5019], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1276, device='cuda:0', dtype=torch.float64)
tensor([-1.9005, -2.8231, -3.0876, -3.6094, -3.5063], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2115, device='cuda:0', dtype=torch.float64)
tensor([-1.8976, -2.8203, -3.0783, -3.5991, -3.5118], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3746, device='cuda:0', dtype=torch.float64)
tensor([-1.9111, -2.8178, -3.0594, -3.5765, -3.5172], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1543, device='cuda:0', dtype=torch.float64)
tensor([-1.9315, -2.8242, -3.0305, -3.5508, -3.5189], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1461, device='cuda:0', dtype=torch.float64)
tensor([-1.9606, -2.8322, -2.9969, -3.5222, -3.5165], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0753, device='cuda:0', dtype=torch.float64)
tensor([-1.9927, -2.8434, -2.9630, -3.4970, -3.5067], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1736, device='cuda:0', dtype=torch.float64)
tensor([-2.0147, -2.8468, -2.9485, -3.4847, -3.4935], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1217, device='cuda:0', dtype=torch.float64)
tensor([-2.0342, -2.8521, -2.9476, -3.4783, -3.4814], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3221, device='cuda:0', dtype=torch.float64)
tensor([-2.0476, -2.8654, -2.9527, -3.4721, -3.4733], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0846, device='cuda:0', dtype=torch.float64)
tensor([-2.0484, -2.8715, -2.9711, -3.4796, -3.4625], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2424, device='cuda:0', dtype=torch.float64)
tensor([-2.0299, -2.8771, -2.9941, -3.4937, -3.4546], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1218, device='cuda:0', dtype=torch.float64)
tensor([-2.0108, -2.8820, -3.0119, -3.5065, -3.4566], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2531, device='cuda:0', dtype=torch.float64)
tensor([-1.9818, -2.8812, -3.0263, -3.5278, -3.4652], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9982, device='cuda:0', dtype=torch.float64)
tensor([-1.9503, -2.8728, -3.0385, -3.5529, -3.4770], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0863, device='cuda:0', dtype=torch.float64)
tensor([-1.9204, -2.8646, -3.0481, -3.5731, -3.4919], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1538, device='cuda:0', dtype=torch.float64)
tensor([-1.9055, -2.8576, -3.0497, -3.5802, -3.5052], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0356, device='cuda:0', dtype=torch.float64)
tensor([-1.9121, -2.8568, -3.0390, -3.5792, -3.5175], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3670, device='cuda:0', dtype=torch.float64)
tensor([-1.9352, -2.8546, -3.0237, -3.5643, -3.5286], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1477, device='cuda:0', dtype=torch.float64)
tensor([-1.9670, -2.8491, -3.0011, -3.5433, -3.5285], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2262, device='cuda:0', dtype=torch.float64)
tensor([-2.0044, -2.8450, -2.9744, -3.5235, -3.5242], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2185, device='cuda:0', dtype=torch.float64)
tensor([-2.0376, -2.8440, -2.9608, -3.5091, -3.5175], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0128, device='cuda:0', dtype=torch.float64)
tensor([-2.0508, -2.8419, -2.9659, -3.5075, -3.5068], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1184, device='cuda:0', dtype=torch.float64)
tensor([-2.0526, -2.8357, -2.9763, -3.5161, -3.4926], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2342, device='cuda:0', dtype=torch.float64)
tensor([-2.0330, -2.8175, -2.9958, -3.5382, -3.4794], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2484, device='cuda:0', dtype=torch.float64)
tensor([-2.0021, -2.8058, -3.0195, -3.5565, -3.4755], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1252, device='cuda:0', dtype=torch.float64)
tensor([-1.9798, -2.7987, -3.0357, -3.5605, -3.4829], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1332, device='cuda:0', dtype=torch.float64)
tensor([-1.9706, -2.7968, -3.0412, -3.5558, -3.4978], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2563, device='cuda:0', dtype=torch.float64)
tensor([-1.9568, -2.8040, -3.0457, -3.5555, -3.5145], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2301, device='cuda:0', dtype=torch.float64)
tensor([-1.9356, -2.8069, -3.0548, -3.5685, -3.5264], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1920, device='cuda:0', dtype=torch.float64)
tensor([-1.9254, -2.8079, -3.0595, -3.5791, -3.5281], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3555, device='cuda:0', dtype=torch.float64)
tensor([-1.9379, -2.8188, -3.0529, -3.5743, -3.5257], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1932, device='cuda:0', dtype=torch.float64)
tensor([-1.9582, -2.8267, -3.0382, -3.5628, -3.5168], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1345, device='cuda:0', dtype=torch.float64)
tensor([-1.9920, -2.8377, -3.0138, -3.5342, -3.5025], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2795, device='cuda:0', dtype=torch.float64)
tensor([-2.0248, -2.8492, -2.9933, -3.5051, -3.4903], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0230, device='cuda:0', dtype=torch.float64)
tensor([-2.0456, -2.8514, -2.9906, -3.4927, -3.4760], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3020, device='cuda:0', dtype=torch.float64)
tensor([-2.0507, -2.8439, -2.9980, -3.4939, -3.4553], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1173, device='cuda:0', dtype=torch.float64)
tensor([-2.0318, -2.8394, -3.0177, -3.5163, -3.4369], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3046, device='cuda:0', dtype=torch.float64)
tensor([-2.0164, -2.8437, -3.0327, -3.5327, -3.4319], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0245, device='cuda:0', dtype=torch.float64)
tensor([-2.0060, -2.8499, -3.0452, -3.5409, -3.4317], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9941, device='cuda:0', dtype=torch.float64)
tensor([-1.9839, -2.8516, -3.0684, -3.5549, -3.4343], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5187, device='cuda:0', dtype=torch.float64)
tensor([-1.9598, -2.8597, -3.0802, -3.5798, -3.4334], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3259, device='cuda:0', dtype=torch.float64)
tensor([-1.9515, -2.8781, -3.0679, -3.5948, -3.4397], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2313, device='cuda:0', dtype=torch.float64)
tensor([-1.9519, -2.9000, -3.0540, -3.6041, -3.4367], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1463, device='cuda:0', dtype=torch.float64)
tensor([-1.9586, -2.9204, -3.0351, -3.6061, -3.4396], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3155, device='cuda:0', dtype=torch.float64)
tensor([-1.9862, -2.9486, -3.0004, -3.5916, -3.4493], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1861, device='cuda:0', dtype=torch.float64)
tensor([-2.0256, -2.9580, -2.9683, -3.5708, -3.4642], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0770, device='cuda:0', dtype=torch.float64)
tensor([-2.0548, -2.9490, -2.9475, -3.5523, -3.4782], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0116, device='cuda:0', dtype=torch.float64)
tensor([-2.0708, -2.9299, -2.9440, -3.5421, -3.4912], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1161, device='cuda:0', dtype=torch.float64)
tensor([-2.0696, -2.9028, -2.9573, -3.5437, -3.5040], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2552, device='cuda:0', dtype=torch.float64)
tensor([-2.0410, -2.8633, -2.9890, -3.5604, -3.5169], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4244, device='cuda:0', dtype=torch.float64)
tensor([-2.0029, -2.8301, -3.0222, -3.5792, -3.5299], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2931, device='cuda:0', dtype=torch.float64)
tensor([-1.9595, -2.7927, -3.0650, -3.5981, -3.5382], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1300, device='cuda:0', dtype=torch.float64)
tensor([-1.9318, -2.7681, -3.0868, -3.6006, -3.5402], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0659, device='cuda:0', dtype=torch.float64)
tensor([-1.9226, -2.7621, -3.0844, -3.5884, -3.5379], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2877, device='cuda:0', dtype=torch.float64)
tensor([-1.9211, -2.7691, -3.0762, -3.5783, -3.5235], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0763, device='cuda:0', dtype=torch.float64)
tensor([-1.9395, -2.7943, -3.0486, -3.5565, -3.5097], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0367, device='cuda:0', dtype=torch.float64)
tensor([-1.9689, -2.8230, -3.0197, -3.5371, -3.4904], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2590, device='cuda:0', dtype=torch.float64)
tensor([-2.0125, -2.8614, -2.9791, -3.5173, -3.4742], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2513, device='cuda:0', dtype=torch.float64)
tensor([-2.0537, -2.8971, -2.9380, -3.5007, -3.4659], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3344, device='cuda:0', dtype=torch.float64)
tensor([-2.0825, -2.9293, -2.9092, -3.4923, -3.4613], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1651, device='cuda:0', dtype=torch.float64)
tensor([-2.0894, -2.9496, -2.9007, -3.5013, -3.4559], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1615, device='cuda:0', dtype=torch.float64)
tensor([-2.0742, -2.9493, -2.9126, -3.5298, -3.4440], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2035, device='cuda:0', dtype=torch.float64)
tensor([-2.0487, -2.9337, -2.9448, -3.5585, -3.4304], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2287, device='cuda:0', dtype=torch.float64)
tensor([-2.0275, -2.9068, -2.9777, -3.5742, -3.4187], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1577, device='cuda:0', dtype=torch.float64)
tensor([-2.0051, -2.8755, -3.0052, -3.5817, -3.4109], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1194, device='cuda:0', dtype=torch.float64)
tensor([-1.9902, -2.8502, -3.0243, -3.5791, -3.4053], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0613, device='cuda:0', dtype=torch.float64)
tensor([-1.9846, -2.8277, -3.0355, -3.5662, -3.4042], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3035, device='cuda:0', dtype=torch.float64)
tensor([-1.9654, -2.8094, -3.0469, -3.5649, -3.4077], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3219, device='cuda:0', dtype=torch.float64)
tensor([-1.9371, -2.7868, -3.0648, -3.5792, -3.4176], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2031, device='cuda:0', dtype=torch.float64)
tensor([-1.9183, -2.7823, -3.0731, -3.5884, -3.4371], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0358, device='cuda:0', dtype=torch.float64)
tensor([-1.9133, -2.7956, -3.0645, -3.5832, -3.4556], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0632, device='cuda:0', dtype=torch.float64)
tensor([-1.9304, -2.8244, -3.0415, -3.5554, -3.4685], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2788, device='cuda:0', dtype=torch.float64)
tensor([-1.9669, -2.8657, -3.0088, -3.5097, -3.4854], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9913, device='cuda:0', dtype=torch.float64)
tensor([-1.9991, -2.9007, -2.9813, -3.4723, -3.4995], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4073, device='cuda:0', dtype=torch.float64)
tensor([-2.0302, -2.9310, -2.9640, -3.4492, -3.5078], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0143, device='cuda:0', dtype=torch.float64)
tensor([-2.0491, -2.9406, -2.9642, -3.4420, -3.5178], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1756, device='cuda:0', dtype=torch.float64)
tensor([-2.0506, -2.9336, -2.9704, -3.4561, -3.5135], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2084, device='cuda:0', dtype=torch.float64)
tensor([-2.0304, -2.9008, -2.9933, -3.4880, -3.4988], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2497, device='cuda:0', dtype=torch.float64)
tensor([-2.0109, -2.8672, -3.0126, -3.5211, -3.4884], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2809, device='cuda:0', dtype=torch.float64)
tensor([-1.9946, -2.8350, -3.0240, -3.5445, -3.4823], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2238, device='cuda:0', dtype=torch.float64)
tensor([-1.9804, -2.8136, -3.0309, -3.5507, -3.4897], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9463, device='cuda:0', dtype=torch.float64)
tensor([-1.9747, -2.8020, -3.0325, -3.5529, -3.4980], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1919, device='cuda:0', dtype=torch.float64)
tensor([-1.9657, -2.7926, -3.0364, -3.5567, -3.4994], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0536, device='cuda:0', dtype=torch.float64)
tensor([-1.9572, -2.7898, -3.0384, -3.5583, -3.4972], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9850, device='cuda:0', dtype=torch.float64)
tensor([-1.9584, -2.7938, -3.0328, -3.5499, -3.4958], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9113, device='cuda:0', dtype=torch.float64)
tensor([-1.9613, -2.8096, -3.0240, -3.5384, -3.4935], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3080, device='cuda:0', dtype=torch.float64)
tensor([-1.9617, -2.8285, -3.0174, -3.5329, -3.4824], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2286, device='cuda:0', dtype=torch.float64)
tensor([-1.9665, -2.8499, -3.0167, -3.5176, -3.4734], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0711, device='cuda:0', dtype=torch.float64)
tensor([-1.9793, -2.8758, -3.0116, -3.4966, -3.4640], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1583, device='cuda:0', dtype=torch.float64)
tensor([-1.9992, -2.8964, -3.0051, -3.4829, -3.4591], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0540, device='cuda:0', dtype=torch.float64)
tensor([-2.0261, -2.9123, -2.9980, -3.4629, -3.4609], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2515, device='cuda:0', dtype=torch.float64)
tensor([-2.0325, -2.9040, -3.0112, -3.4658, -3.4605], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8929, device='cuda:0', dtype=torch.float64)
tensor([-2.0274, -2.8914, -3.0291, -3.4765, -3.4626], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2503, device='cuda:0', dtype=torch.float64)
tensor([-2.0190, -2.8711, -3.0394, -3.4887, -3.4629], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1588, device='cuda:0', dtype=torch.float64)
tensor([-2.0090, -2.8446, -3.0522, -3.4943, -3.4637], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2874, device='cuda:0', dtype=torch.float64)
tensor([-1.9924, -2.8217, -3.0580, -3.5051, -3.4637], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2225, device='cuda:0', dtype=torch.float64)
tensor([-1.9791, -2.8029, -3.0479, -3.5118, -3.4670], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0585, device='cuda:0', dtype=torch.float64)
tensor([-1.9688, -2.8019, -3.0239, -3.5142, -3.4800], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3121, device='cuda:0', dtype=torch.float64)
tensor([-1.9703, -2.8188, -2.9857, -3.5031, -3.4992], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1073, device='cuda:0', dtype=torch.float64)
tensor([-1.9864, -2.8500, -2.9406, -3.4843, -3.5160], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0878, device='cuda:0', dtype=torch.float64)
tensor([-1.9946, -2.8748, -2.9097, -3.4710, -3.5232], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1838, device='cuda:0', dtype=torch.float64)
tensor([-1.9966, -2.8952, -2.8970, -3.4676, -3.5155], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3611, device='cuda:0', dtype=torch.float64)
tensor([-1.9930, -2.9006, -2.9012, -3.4760, -3.5019], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9241, device='cuda:0', dtype=torch.float64)
tensor([-1.9929, -2.9023, -2.9152, -3.4817, -3.4848], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2230, device='cuda:0', dtype=torch.float64)
tensor([-2.0086, -2.9041, -2.9277, -3.4785, -3.4708], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2155, device='cuda:0', dtype=torch.float64)
tensor([-2.0321, -2.9007, -2.9428, -3.4746, -3.4587], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0550, device='cuda:0', dtype=torch.float64)
tensor([-2.0469, -2.8889, -2.9633, -3.4758, -3.4518], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0814, device='cuda:0', dtype=torch.float64)
tensor([-2.0504, -2.8672, -2.9880, -3.4832, -3.4520], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1274, device='cuda:0', dtype=torch.float64)
tensor([-2.0363, -2.8392, -3.0183, -3.4961, -3.4515], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0704, device='cuda:0', dtype=torch.float64)
tensor([-2.0120, -2.8081, -3.0478, -3.5156, -3.4514], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1102, device='cuda:0', dtype=torch.float64)
tensor([-1.9836, -2.7792, -3.0781, -3.5368, -3.4573], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1156, device='cuda:0', dtype=torch.float64)
tensor([-1.9622, -2.7638, -3.0911, -3.5554, -3.4607], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2920, device='cuda:0', dtype=torch.float64)
tensor([-1.9416, -2.7596, -3.1049, -3.5664, -3.4590], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9850, device='cuda:0', dtype=torch.float64)
tensor([-1.9261, -2.7668, -3.1184, -3.5712, -3.4547], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2802, device='cuda:0', dtype=torch.float64)
tensor([-1.9173, -2.7795, -3.1293, -3.5635, -3.4511], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1940, device='cuda:0', dtype=torch.float64)
tensor([-1.9241, -2.8001, -3.1269, -3.5441, -3.4446], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1478, device='cuda:0', dtype=torch.float64)
tensor([-1.9501, -2.8263, -3.1069, -3.5133, -3.4382], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3705, device='cuda:0', dtype=torch.float64)
tensor([-1.9934, -2.8531, -3.0753, -3.4736, -3.4333], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0244, device='cuda:0', dtype=torch.float64)
tensor([-2.0308, -2.8795, -3.0460, -3.4413, -3.4265], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1813, device='cuda:0', dtype=torch.float64)
tensor([-2.0583, -2.8979, -3.0125, -3.4152, -3.4322], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4291, device='cuda:0', dtype=torch.float64)
tensor([-2.0728, -2.9115, -2.9781, -3.3953, -3.4454], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9310, device='cuda:0', dtype=torch.float64)
tensor([-2.0717, -2.9122, -2.9526, -3.3892, -3.4581], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6086, device='cuda:0', dtype=torch.float64)
tensor([-2.0507, -2.9002, -2.9456, -3.4020, -3.4650], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1562, device='cuda:0', dtype=torch.float64)
tensor([-2.0259, -2.8910, -2.9475, -3.4207, -3.4737], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1253, device='cuda:0', dtype=torch.float64)
tensor([-1.9925, -2.8743, -2.9601, -3.4455, -3.4766], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1354, device='cuda:0', dtype=torch.float64)
tensor([-1.9685, -2.8627, -2.9648, -3.4675, -3.4756], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6316, device='cuda:0', dtype=torch.float64)
tensor([-1.9546, -2.8510, -2.9676, -3.4947, -3.4725], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1522, device='cuda:0', dtype=torch.float64)
tensor([-1.9392, -2.8407, -2.9787, -3.5329, -3.4598], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3917, device='cuda:0', dtype=torch.float64)
tensor([-1.9316, -2.8273, -2.9943, -3.5646, -3.4508], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2667, device='cuda:0', dtype=torch.float64)
tensor([-1.9389, -2.8173, -3.0019, -3.5885, -3.4447], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2216, device='cuda:0', dtype=torch.float64)
tensor([-1.9583, -2.8170, -2.9993, -3.6013, -3.4423], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0990, device='cuda:0', dtype=torch.float64)
tensor([-1.9839, -2.8206, -2.9948, -3.6025, -3.4362], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3835, device='cuda:0', dtype=torch.float64)
tensor([-2.0301, -2.8378, -2.9717, -3.5760, -3.4419], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0120, device='cuda:0', dtype=torch.float64)
tensor([-2.0651, -2.8537, -2.9560, -3.5486, -3.4486], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1356, device='cuda:0', dtype=torch.float64)
tensor([-2.0704, -2.8649, -2.9558, -3.5360, -3.4522], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2514, device='cuda:0', dtype=torch.float64)
tensor([-2.0470, -2.8697, -2.9723, -3.5366, -3.4543], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3475, device='cuda:0', dtype=torch.float64)
tensor([-2.0067, -2.8719, -2.9970, -3.5444, -3.4573], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1029, device='cuda:0', dtype=torch.float64)
tensor([-1.9715, -2.8704, -3.0184, -3.5518, -3.4653], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2952, device='cuda:0', dtype=torch.float64)
tensor([-1.9481, -2.8649, -3.0406, -3.5515, -3.4757], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1846, device='cuda:0', dtype=torch.float64)
tensor([-1.9364, -2.8599, -3.0490, -3.5450, -3.4812], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1947, device='cuda:0', dtype=torch.float64)
tensor([-1.9427, -2.8589, -3.0536, -3.5210, -3.4871], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0557, device='cuda:0', dtype=torch.float64)
tensor([-1.9582, -2.8581, -3.0518, -3.5002, -3.4909], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1057, device='cuda:0', dtype=torch.float64)
tensor([-1.9758, -2.8536, -3.0508, -3.4786, -3.4846], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0357, device='cuda:0', dtype=torch.float64)
tensor([-1.9980, -2.8473, -3.0429, -3.4571, -3.4779], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3447, device='cuda:0', dtype=torch.float64)
tensor([-2.0111, -2.8403, -3.0353, -3.4449, -3.4733], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2422, device='cuda:0', dtype=torch.float64)
tensor([-2.0114, -2.8344, -3.0308, -3.4455, -3.4739], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9146, device='cuda:0', dtype=torch.float64)
tensor([-2.0166, -2.8346, -3.0200, -3.4463, -3.4732], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4591, device='cuda:0', dtype=torch.float64)
tensor([-2.0085, -2.8310, -3.0029, -3.4594, -3.4740], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2308, device='cuda:0', dtype=torch.float64)
tensor([-1.9988, -2.8301, -2.9898, -3.4712, -3.4800], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2755, device='cuda:0', dtype=torch.float64)
tensor([-1.9918, -2.8341, -2.9787, -3.4774, -3.4889], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1398, device='cuda:0', dtype=torch.float64)
tensor([-1.9853, -2.8376, -2.9704, -3.4749, -3.4920], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0496, device='cuda:0', dtype=torch.float64)
tensor([-1.9742, -2.8397, -2.9735, -3.4682, -3.4963], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2542, device='cuda:0', dtype=torch.float64)
tensor([-1.9685, -2.8450, -2.9700, -3.4615, -3.5008], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0461, device='cuda:0', dtype=torch.float64)
tensor([-1.9623, -2.8493, -2.9695, -3.4585, -3.5041], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1186, device='cuda:0', dtype=torch.float64)
tensor([-1.9568, -2.8513, -2.9673, -3.4566, -3.5011], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1075, device='cuda:0', dtype=torch.float64)
tensor([-1.9582, -2.8550, -2.9666, -3.4465, -3.4961], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0894, device='cuda:0', dtype=torch.float64)
tensor([-1.9608, -2.8595, -2.9659, -3.4346, -3.4874], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1043, device='cuda:0', dtype=torch.float64)
tensor([-1.9597, -2.8574, -2.9657, -3.4277, -3.4796], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2001, device='cuda:0', dtype=torch.float64)
tensor([-1.9646, -2.8489, -2.9712, -3.4212, -3.4693], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1797, device='cuda:0', dtype=torch.float64)
tensor([-1.9609, -2.8366, -2.9750, -3.4275, -3.4566], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1615, device='cuda:0', dtype=torch.float64)
tensor([-1.9644, -2.8329, -2.9785, -3.4306, -3.4491], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1426, device='cuda:0', dtype=torch.float64)
tensor([-1.9750, -2.8243, -2.9751, -3.4342, -3.4419], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9834, device='cuda:0', dtype=torch.float64)
tensor([-1.9732, -2.8127, -2.9777, -3.4499, -3.4353], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8712, device='cuda:0', dtype=torch.float64)
tensor([-1.9672, -2.8006, -2.9764, -3.4755, -3.4265], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2384, device='cuda:0', dtype=torch.float64)
tensor([-1.9587, -2.7956, -2.9735, -3.4993, -3.4249], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1528, device='cuda:0', dtype=torch.float64)
tensor([-1.9611, -2.8021, -2.9628, -3.5180, -3.4302], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5697, device='cuda:0', dtype=torch.float64)
tensor([-1.9780, -2.8191, -2.9510, -3.5264, -3.4377], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2682, device='cuda:0', dtype=torch.float64)
tensor([-2.0122, -2.8401, -2.9387, -3.5270, -3.4497], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8999, device='cuda:0', dtype=torch.float64)
tensor([-2.0326, -2.8483, -2.9397, -3.5433, -3.4556], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0866, device='cuda:0', dtype=torch.float64)
tensor([-2.0416, -2.8535, -2.9463, -3.5659, -3.4568], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9882, device='cuda:0', dtype=torch.float64)
tensor([-2.0384, -2.8418, -2.9706, -3.5913, -3.4524], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3674, device='cuda:0', dtype=torch.float64)
tensor([-2.0326, -2.8230, -2.9911, -3.6075, -3.4380], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4573, device='cuda:0', dtype=torch.float64)
tensor([-2.0322, -2.8129, -3.0064, -3.6149, -3.4263], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0850, device='cuda:0', dtype=torch.float64)
tensor([-2.0329, -2.8142, -3.0114, -3.6096, -3.4226], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1305, device='cuda:0', dtype=torch.float64)
tensor([-2.0322, -2.8143, -3.0143, -3.5952, -3.4263], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4608, device='cuda:0', dtype=torch.float64)
tensor([-2.0294, -2.8167, -3.0135, -3.5670, -3.4426], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2252, device='cuda:0', dtype=torch.float64)
tensor([-2.0247, -2.8226, -3.0092, -3.5335, -3.4555], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2120, device='cuda:0', dtype=torch.float64)
tensor([-2.0112, -2.8288, -3.0057, -3.5046, -3.4633], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3792, device='cuda:0', dtype=torch.float64)
tensor([-1.9969, -2.8358, -3.0025, -3.4835, -3.4653], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2519, device='cuda:0', dtype=torch.float64)
tensor([-1.9834, -2.8412, -3.0000, -3.4714, -3.4680], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4046, device='cuda:0', dtype=torch.float64)
tensor([-1.9635, -2.8361, -2.9928, -3.4749, -3.4676], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1576, device='cuda:0', dtype=torch.float64)
tensor([-1.9576, -2.8339, -2.9748, -3.4724, -3.4692], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6904, device='cuda:0', dtype=torch.float64)
tensor([-1.9578, -2.8288, -2.9595, -3.4645, -3.4738], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1911, device='cuda:0', dtype=torch.float64)
tensor([-1.9641, -2.8291, -2.9517, -3.4568, -3.4796], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9837, device='cuda:0', dtype=torch.float64)
tensor([-1.9768, -2.8301, -2.9418, -3.4548, -3.4894], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2295, device='cuda:0', dtype=torch.float64)
tensor([-2.0030, -2.8430, -2.9244, -3.4436, -3.5078], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1799, device='cuda:0', dtype=torch.float64)
tensor([-2.0198, -2.8491, -2.9215, -3.4547, -3.5263], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1972, device='cuda:0', dtype=torch.float64)
tensor([-2.0154, -2.8435, -2.9330, -3.4859, -3.5340], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1495, device='cuda:0', dtype=torch.float64)
tensor([-1.9954, -2.8321, -2.9561, -3.5231, -3.5318], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1135, device='cuda:0', dtype=torch.float64)
tensor([-1.9750, -2.8088, -2.9998, -3.5601, -3.5214], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0589, device='cuda:0', dtype=torch.float64)
tensor([-1.9523, -2.7937, -3.0423, -3.5904, -3.5004], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0289, device='cuda:0', dtype=torch.float64)
tensor([-1.9389, -2.7929, -3.0709, -3.6031, -3.4845], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3900, device='cuda:0', dtype=torch.float64)
tensor([-1.9415, -2.8147, -3.0871, -3.5890, -3.4686], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5050, device='cuda:0', dtype=torch.float64)
tensor([-1.9690, -2.8505, -3.0769, -3.5510, -3.4566], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5475, device='cuda:0', dtype=torch.float64)
tensor([-2.0090, -2.8950, -3.0521, -3.4966, -3.4494], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1849, device='cuda:0', dtype=torch.float64)
tensor([-2.0431, -2.9316, -3.0237, -3.4537, -3.4460], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2849, device='cuda:0', dtype=torch.float64)
tensor([-2.0670, -2.9551, -3.0009, -3.4269, -3.4430], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3369, device='cuda:0', dtype=torch.float64)
tensor([-2.0791, -2.9567, -2.9867, -3.4128, -3.4412], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3737, device='cuda:0', dtype=torch.float64)
tensor([-2.0665, -2.9295, -2.9803, -3.4208, -3.4349], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4018, device='cuda:0', dtype=torch.float64)
tensor([-2.0327, -2.8922, -2.9849, -3.4508, -3.4293], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9815, device='cuda:0', dtype=torch.float64)
tensor([-1.9958, -2.8563, -2.9981, -3.4874, -3.4307], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2344, device='cuda:0', dtype=torch.float64)
tensor([-1.9668, -2.8149, -3.0132, -3.5211, -3.4413], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3841, device='cuda:0', dtype=torch.float64)
tensor([-1.9509, -2.7880, -3.0239, -3.5393, -3.4648], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0863, device='cuda:0', dtype=torch.float64)
tensor([-1.9527, -2.7717, -3.0233, -3.5422, -3.4870], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3028, device='cuda:0', dtype=torch.float64)
tensor([-1.9626, -2.7663, -3.0215, -3.5362, -3.5096], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1212, device='cuda:0', dtype=torch.float64)
tensor([-1.9758, -2.7849, -3.0097, -3.5216, -3.5190], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2892, device='cuda:0', dtype=torch.float64)
tensor([-1.9843, -2.8066, -3.0050, -3.5124, -3.5199], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2191, device='cuda:0', dtype=torch.float64)
tensor([-1.9939, -2.8268, -3.0054, -3.5037, -3.5115], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1476, device='cuda:0', dtype=torch.float64)
tensor([-2.0031, -2.8415, -3.0120, -3.5054, -3.4997], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2591, device='cuda:0', dtype=torch.float64)
tensor([-2.0159, -2.8515, -3.0135, -3.5139, -3.4747], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1690, device='cuda:0', dtype=torch.float64)
tensor([-2.0129, -2.8548, -3.0203, -3.5264, -3.4469], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0688, device='cuda:0', dtype=torch.float64)
tensor([-2.0060, -2.8515, -3.0143, -3.5376, -3.4194], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0599, device='cuda:0', dtype=torch.float64)
tensor([-1.9941, -2.8446, -3.0023, -3.5546, -3.4016], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1915, device='cuda:0', dtype=torch.float64)
tensor([-1.9901, -2.8401, -2.9797, -3.5645, -3.3987], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0713, device='cuda:0', dtype=torch.float64)
tensor([-1.9876, -2.8296, -2.9673, -3.5679, -3.4038], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4934, device='cuda:0', dtype=torch.float64)
tensor([-1.9990, -2.8267, -2.9647, -3.5572, -3.4122], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1215, device='cuda:0', dtype=torch.float64)
tensor([-2.0092, -2.8275, -2.9779, -3.5404, -3.4235], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4013, device='cuda:0', dtype=torch.float64)
tensor([-2.0203, -2.8284, -2.9800, -3.5194, -3.4431], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2051, device='cuda:0', dtype=torch.float64)
tensor([-2.0336, -2.8335, -2.9801, -3.4885, -3.4640], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0818, device='cuda:0', dtype=torch.float64)
tensor([-2.0449, -2.8405, -2.9760, -3.4632, -3.4755], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2231, device='cuda:0', dtype=torch.float64)
tensor([-2.0433, -2.8361, -2.9765, -3.4521, -3.4800], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1911, device='cuda:0', dtype=torch.float64)
tensor([-2.0251, -2.8273, -2.9846, -3.4527, -3.4758], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2919, device='cuda:0', dtype=torch.float64)
tensor([-2.0060, -2.8197, -2.9909, -3.4562, -3.4726], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3640, device='cuda:0', dtype=torch.float64)
tensor([-1.9730, -2.8024, -3.0017, -3.4732, -3.4624], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5643, device='cuda:0', dtype=torch.float64)
tensor([-1.9472, -2.7925, -3.0074, -3.4898, -3.4564], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2561, device='cuda:0', dtype=torch.float64)
tensor([-1.9384, -2.8008, -3.0137, -3.4875, -3.4583], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0402, device='cuda:0', dtype=torch.float64)
tensor([-1.9418, -2.8124, -3.0211, -3.4823, -3.4634], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3094, device='cuda:0', dtype=torch.float64)
tensor([-1.9595, -2.8286, -3.0240, -3.4693, -3.4735], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4907, device='cuda:0', dtype=torch.float64)
tensor([-1.9920, -2.8465, -3.0243, -3.4465, -3.4747], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0695, device='cuda:0', dtype=torch.float64)
tensor([-2.0212, -2.8626, -3.0212, -3.4313, -3.4715], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1607, device='cuda:0', dtype=torch.float64)
tensor([-2.0386, -2.8711, -3.0226, -3.4307, -3.4623], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0190, device='cuda:0', dtype=torch.float64)
tensor([-2.0461, -2.8674, -3.0241, -3.4360, -3.4587], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3494, device='cuda:0', dtype=torch.float64)
tensor([-2.0369, -2.8484, -3.0344, -3.4611, -3.4475], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3249, device='cuda:0', dtype=torch.float64)
tensor([-2.0352, -2.8309, -3.0360, -3.4851, -3.4339], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3439, device='cuda:0', dtype=torch.float64)
tensor([-2.0308, -2.8232, -3.0262, -3.4964, -3.4327], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1864, device='cuda:0', dtype=torch.float64)
tensor([-2.0247, -2.8215, -3.0129, -3.5077, -3.4362], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3406, device='cuda:0', dtype=torch.float64)
tensor([-2.0126, -2.8208, -3.0028, -3.5101, -3.4480], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2109, device='cuda:0', dtype=torch.float64)
tensor([-1.9937, -2.8234, -2.9939, -3.5077, -3.4660], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2246, device='cuda:0', dtype=torch.float64)
tensor([-1.9715, -2.8363, -2.9863, -3.5148, -3.4863], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1307, device='cuda:0', dtype=torch.float64)
tensor([-1.9538, -2.8471, -2.9867, -3.5185, -3.5050], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2066, device='cuda:0', dtype=torch.float64)
tensor([-1.9402, -2.8648, -2.9949, -3.5237, -3.5171], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9886, device='cuda:0', dtype=torch.float64)
tensor([-1.9417, -2.8811, -3.0023, -3.5246, -3.5188], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3662, device='cuda:0', dtype=torch.float64)
tensor([-1.9537, -2.8959, -3.0038, -3.5226, -3.5211], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2803, device='cuda:0', dtype=torch.float64)
tensor([-1.9842, -2.9097, -2.9929, -3.5047, -3.5207], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4118, device='cuda:0', dtype=torch.float64)
tensor([-2.0027, -2.9054, -2.9846, -3.4960, -3.5161], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2856, device='cuda:0', dtype=torch.float64)
tensor([-2.0195, -2.8951, -2.9787, -3.4864, -3.5116], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1359, device='cuda:0', dtype=torch.float64)
tensor([-2.0363, -2.8824, -2.9724, -3.4686, -3.5104], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9941, device='cuda:0', dtype=torch.float64)
tensor([-2.0397, -2.8713, -2.9775, -3.4611, -3.5054], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0966, device='cuda:0', dtype=torch.float64)
tensor([-2.0251, -2.8558, -2.9900, -3.4612, -3.4985], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1287, device='cuda:0', dtype=torch.float64)
tensor([-2.0116, -2.8395, -3.0028, -3.4704, -3.4941], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4583, device='cuda:0', dtype=torch.float64)
tensor([-1.9944, -2.8210, -3.0169, -3.4847, -3.4815], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2615, device='cuda:0', dtype=torch.float64)
tensor([-1.9813, -2.8150, -3.0201, -3.4925, -3.4669], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2298, device='cuda:0', dtype=torch.float64)
tensor([-1.9815, -2.8237, -3.0146, -3.4870, -3.4514], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0357, device='cuda:0', dtype=torch.float64)
tensor([-1.9863, -2.8342, -3.0104, -3.4780, -3.4363], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2600, device='cuda:0', dtype=torch.float64)
tensor([-1.9941, -2.8373, -3.0103, -3.4715, -3.4365], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0187, device='cuda:0', dtype=torch.float64)
tensor([-2.0238, -2.8450, -3.0014, -3.4527, -3.4468], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0380, device='cuda:0', dtype=torch.float64)
tensor([-2.0430, -2.8433, -2.9975, -3.4425, -3.4571], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0883, device='cuda:0', dtype=torch.float64)
tensor([-2.0444, -2.8360, -2.9984, -3.4442, -3.4702], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0860, device='cuda:0', dtype=torch.float64)
tensor([-2.0298, -2.8249, -3.0054, -3.4597, -3.4796], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1535, device='cuda:0', dtype=torch.float64)
tensor([-2.0003, -2.8067, -3.0311, -3.4862, -3.4797], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2380, device='cuda:0', dtype=torch.float64)
tensor([-1.9769, -2.7989, -3.0482, -3.5115, -3.4700], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1386, device='cuda:0', dtype=torch.float64)
tensor([-1.9571, -2.7950, -3.0654, -3.5255, -3.4588], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3718, device='cuda:0', dtype=torch.float64)
tensor([-1.9448, -2.8037, -3.0687, -3.5282, -3.4502], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0279, device='cuda:0', dtype=torch.float64)
tensor([-1.9510, -2.8166, -3.0639, -3.5123, -3.4424], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0282, device='cuda:0', dtype=torch.float64)
tensor([-1.9730, -2.8395, -3.0464, -3.4893, -3.4424], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1777, device='cuda:0', dtype=torch.float64)
tensor([-2.0103, -2.8690, -3.0174, -3.4547, -3.4448], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9952, device='cuda:0', dtype=torch.float64)
tensor([-2.0390, -2.8891, -2.9987, -3.4254, -3.4461], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0527, device='cuda:0', dtype=torch.float64)
tensor([-2.0550, -2.9011, -2.9777, -3.4110, -3.4509], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3049, device='cuda:0', dtype=torch.float64)
tensor([-2.0499, -2.8983, -2.9636, -3.4142, -3.4514], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9719, device='cuda:0', dtype=torch.float64)
tensor([-2.0302, -2.8844, -2.9608, -3.4354, -3.4500], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1514, device='cuda:0', dtype=torch.float64)
tensor([-1.9872, -2.8545, -2.9764, -3.4725, -3.4441], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1557, device='cuda:0', dtype=torch.float64)
tensor([-1.9545, -2.8328, -2.9872, -3.5061, -3.4428], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4807, device='cuda:0', dtype=torch.float64)
tensor([-1.9236, -2.8032, -3.0089, -3.5502, -3.4357], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4334, device='cuda:0', dtype=torch.float64)
tensor([-1.9150, -2.7816, -3.0189, -3.5753, -3.4333], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1574, device='cuda:0', dtype=torch.float64)
tensor([-1.9316, -2.7756, -3.0179, -3.5855, -3.4301], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2982, device='cuda:0', dtype=torch.float64)
tensor([-1.9779, -2.7812, -3.0073, -3.5643, -3.4289], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2073, device='cuda:0', dtype=torch.float64)
tensor([-2.0288, -2.8006, -2.9991, -3.5257, -3.4349], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3339, device='cuda:0', dtype=torch.float64)
tensor([-2.0722, -2.8281, -2.9929, -3.4656, -3.4428], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1994, device='cuda:0', dtype=torch.float64)
tensor([-2.0963, -2.8530, -2.9961, -3.4172, -3.4511], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2632, device='cuda:0', dtype=torch.float64)
tensor([-2.0957, -2.8645, -3.0129, -3.3984, -3.4507], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3151, device='cuda:0', dtype=torch.float64)
tensor([-2.0671, -2.8664, -3.0410, -3.4054, -3.4445], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3552, device='cuda:0', dtype=torch.float64)
tensor([-2.0265, -2.8647, -3.0623, -3.4329, -3.4353], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4513, device='cuda:0', dtype=torch.float64)
tensor([-1.9852, -2.8663, -3.0662, -3.4615, -3.4359], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3514, device='cuda:0', dtype=torch.float64)
tensor([-1.9677, -2.8651, -3.0506, -3.4798, -3.4430], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2094, device='cuda:0', dtype=torch.float64)
tensor([-1.9476, -2.8639, -3.0317, -3.4981, -3.4515], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1259, device='cuda:0', dtype=torch.float64)
tensor([-1.9443, -2.8603, -3.0077, -3.5010, -3.4648], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2499, device='cuda:0', dtype=torch.float64)
tensor([-1.9416, -2.8630, -2.9880, -3.5003, -3.4734], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3932, device='cuda:0', dtype=torch.float64)
tensor([-1.9677, -2.8757, -2.9564, -3.4804, -3.4869], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1635, device='cuda:0', dtype=torch.float64)
tensor([-1.9984, -2.8856, -2.9421, -3.4553, -3.4926], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2366, device='cuda:0', dtype=torch.float64)
tensor([-2.0228, -2.8884, -2.9326, -3.4359, -3.4896], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0537, device='cuda:0', dtype=torch.float64)
tensor([-2.0343, -2.8830, -2.9324, -3.4199, -3.4805], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2748, device='cuda:0', dtype=torch.float64)
tensor([-2.0229, -2.8643, -2.9494, -3.4224, -3.4661], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2415, device='cuda:0', dtype=torch.float64)
tensor([-2.0076, -2.8505, -2.9663, -3.4277, -3.4605], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2881, device='cuda:0', dtype=torch.float64)
tensor([-1.9864, -2.8389, -2.9914, -3.4540, -3.4585], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0636, device='cuda:0', dtype=torch.float64)
tensor([-1.9736, -2.8291, -3.0180, -3.4786, -3.4590], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3779, device='cuda:0', dtype=torch.float64)
tensor([-1.9744, -2.8395, -3.0248, -3.4843, -3.4625], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0255, device='cuda:0', dtype=torch.float64)
tensor([-1.9724, -2.8494, -3.0305, -3.4935, -3.4754], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0877, device='cuda:0', dtype=torch.float64)
tensor([-1.9833, -2.8511, -3.0333, -3.5019, -3.4951], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1897, device='cuda:0', dtype=torch.float64)
tensor([-2.0016, -2.8558, -3.0371, -3.4941, -3.5186], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2718, device='cuda:0', dtype=torch.float64)
tensor([-2.0223, -2.8646, -3.0368, -3.4742, -3.5291], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2186, device='cuda:0', dtype=torch.float64)
tensor([-2.0359, -2.8731, -3.0325, -3.4493, -3.5379], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0090, device='cuda:0', dtype=torch.float64)
tensor([-2.0422, -2.8714, -3.0331, -3.4321, -3.5469], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0840, device='cuda:0', dtype=torch.float64)
tensor([-2.0362, -2.8621, -3.0391, -3.4324, -3.5511], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1997, device='cuda:0', dtype=torch.float64)
tensor([-2.0301, -2.8522, -3.0433, -3.4270, -3.5450], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2144, device='cuda:0', dtype=torch.float64)
tensor([-2.0307, -2.8466, -3.0461, -3.4161, -3.5336], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0743, device='cuda:0', dtype=torch.float64)
tensor([-2.0273, -2.8344, -3.0460, -3.4169, -3.5103], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8148, device='cuda:0', dtype=torch.float64)
tensor([-2.0181, -2.8193, -3.0531, -3.4229, -3.4847], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3263, device='cuda:0', dtype=torch.float64)
tensor([-2.0013, -2.8036, -3.0596, -3.4431, -3.4597], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1450, device='cuda:0', dtype=torch.float64)
tensor([-1.9874, -2.7828, -3.0572, -3.4706, -3.4411], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4454, device='cuda:0', dtype=torch.float64)
tensor([-1.9837, -2.7725, -3.0350, -3.4851, -3.4245], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2874, device='cuda:0', dtype=torch.float64)
tensor([-1.9999, -2.7880, -2.9931, -3.4751, -3.4137], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0537, device='cuda:0', dtype=torch.float64)
tensor([-2.0193, -2.8123, -2.9501, -3.4609, -3.4140], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1390, device='cuda:0', dtype=torch.float64)
tensor([-2.0338, -2.8408, -2.9162, -3.4440, -3.4163], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2429, device='cuda:0', dtype=torch.float64)
tensor([-2.0259, -2.8688, -2.8992, -3.4334, -3.4142], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3057, device='cuda:0', dtype=torch.float64)
tensor([-2.0026, -2.8874, -2.9045, -3.4372, -3.4088], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1607, device='cuda:0', dtype=torch.float64)
tensor([-1.9726, -2.8940, -2.9225, -3.4534, -3.3983], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0648, device='cuda:0', dtype=torch.float64)
tensor([-1.9441, -2.8968, -2.9446, -3.4675, -3.3898], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1550, device='cuda:0', dtype=torch.float64)
tensor([-1.9306, -2.8944, -2.9706, -3.4792, -3.3849], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0991, device='cuda:0', dtype=torch.float64)
tensor([-1.9383, -2.8895, -2.9935, -3.4759, -3.3856], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2507, device='cuda:0', dtype=torch.float64)
tensor([-1.9611, -2.8866, -3.0035, -3.4618, -3.4029], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2367, device='cuda:0', dtype=torch.float64)
tensor([-1.9965, -2.8824, -3.0040, -3.4390, -3.4200], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4919, device='cuda:0', dtype=torch.float64)
tensor([-2.0232, -2.8514, -3.0179, -3.4341, -3.4275], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3116, device='cuda:0', dtype=torch.float64)
tensor([-2.0429, -2.8123, -3.0386, -3.4464, -3.4256], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1092, device='cuda:0', dtype=torch.float64)
tensor([-2.0625, -2.7879, -3.0496, -3.4485, -3.4188], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4415, device='cuda:0', dtype=torch.float64)
tensor([-2.0808, -2.7806, -3.0475, -3.4440, -3.4162], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2169, device='cuda:0', dtype=torch.float64)
tensor([-2.0839, -2.7855, -3.0344, -3.4436, -3.4130], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3265, device='cuda:0', dtype=torch.float64)
tensor([-2.0633, -2.8053, -3.0111, -3.4507, -3.4126], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9628, device='cuda:0', dtype=torch.float64)
tensor([-2.0371, -2.8232, -2.9876, -3.4613, -3.4157], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0541, device='cuda:0', dtype=torch.float64)
tensor([-2.0143, -2.8408, -2.9736, -3.4738, -3.4062], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2075, device='cuda:0', dtype=torch.float64)
tensor([-1.9864, -2.8513, -2.9728, -3.4979, -3.3939], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0714, device='cuda:0', dtype=torch.float64)
tensor([-1.9779, -2.8617, -2.9675, -3.5052, -3.3783], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2865, device='cuda:0', dtype=torch.float64)
tensor([-1.9767, -2.8758, -2.9708, -3.5041, -3.3691], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0983, device='cuda:0', dtype=torch.float64)
tensor([-1.9860, -2.8796, -2.9755, -3.4924, -3.3650], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9873, device='cuda:0', dtype=torch.float64)
tensor([-1.9857, -2.8677, -2.9911, -3.4853, -3.3637], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6690, device='cuda:0', dtype=torch.float64)
tensor([-2.0060, -2.8474, -3.0175, -3.4595, -3.3616], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3491, device='cuda:0', dtype=torch.float64)
tensor([-2.0323, -2.8327, -3.0334, -3.4283, -3.3699], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1058, device='cuda:0', dtype=torch.float64)
tensor([-2.0413, -2.8142, -3.0490, -3.4143, -3.3830], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4510, device='cuda:0', dtype=torch.float64)
tensor([-2.0426, -2.8026, -3.0589, -3.4038, -3.4014], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0618, device='cuda:0', dtype=torch.float64)
tensor([-2.0341, -2.7922, -3.0682, -3.4092, -3.4205], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3260, device='cuda:0', dtype=torch.float64)
tensor([-2.0108, -2.7870, -3.0714, -3.4270, -3.4415], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2151, device='cuda:0', dtype=torch.float64)
tensor([-1.9869, -2.7887, -3.0607, -3.4448, -3.4590], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2720, device='cuda:0', dtype=torch.float64)
tensor([-1.9685, -2.8009, -3.0474, -3.4587, -3.4815], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3157, device='cuda:0', dtype=torch.float64)
tensor([-1.9504, -2.8170, -3.0331, -3.4805, -3.5054], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2820, device='cuda:0', dtype=torch.float64)
tensor([-1.9404, -2.8350, -3.0192, -3.4988, -3.5289], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1256, device='cuda:0', dtype=torch.float64)
tensor([-1.9449, -2.8512, -3.0051, -3.5017, -3.5458], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1843, device='cuda:0', dtype=torch.float64)
tensor([-1.9554, -2.8601, -2.9958, -3.5014, -3.5494], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3091, device='cuda:0', dtype=torch.float64)
tensor([-1.9724, -2.8709, -2.9783, -3.4907, -3.5475], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3161, device='cuda:0', dtype=torch.float64)
tensor([-1.9927, -2.8869, -2.9568, -3.4689, -3.5439], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2208, device='cuda:0', dtype=torch.float64)
tensor([-2.0057, -2.9045, -2.9533, -3.4481, -3.5324], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4347, device='cuda:0', dtype=torch.float64)
tensor([-2.0161, -2.9104, -2.9482, -3.4261, -3.5168], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2473, device='cuda:0', dtype=torch.float64)
tensor([-2.0180, -2.9024, -2.9588, -3.4113, -3.4905], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0791, device='cuda:0', dtype=torch.float64)
tensor([-2.0066, -2.8830, -2.9817, -3.4013, -3.4641], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1904, device='cuda:0', dtype=torch.float64)
tensor([-1.9882, -2.8489, -3.0084, -3.4099, -3.4326], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0485, device='cuda:0', dtype=torch.float64)
tensor([-1.9664, -2.8166, -3.0419, -3.4344, -3.4009], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3371, device='cuda:0', dtype=torch.float64)
tensor([-1.9561, -2.7971, -3.0639, -3.4614, -3.3799], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2749, device='cuda:0', dtype=torch.float64)
tensor([-1.9595, -2.7927, -3.0680, -3.4823, -3.3745], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1324, device='cuda:0', dtype=torch.float64)
tensor([-1.9816, -2.8011, -3.0538, -3.4843, -3.3830], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2316, device='cuda:0', dtype=torch.float64)
tensor([-2.0140, -2.8146, -3.0292, -3.4781, -3.4024], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0226, device='cuda:0', dtype=torch.float64)
tensor([-2.0314, -2.8238, -3.0130, -3.4802, -3.4154], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3476, device='cuda:0', dtype=torch.float64)
tensor([-2.0347, -2.8295, -3.0072, -3.4924, -3.4278], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1919, device='cuda:0', dtype=torch.float64)
tensor([-2.0311, -2.8302, -2.9961, -3.5051, -3.4467], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4895, device='cuda:0', dtype=torch.float64)
tensor([-2.0382, -2.8300, -2.9917, -3.5160, -3.4657], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3308, device='cuda:0', dtype=torch.float64)
tensor([-2.0419, -2.8185, -2.9921, -3.5302, -3.4731], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2340, device='cuda:0', dtype=torch.float64)
tensor([-2.0408, -2.8098, -2.9928, -3.5352, -3.4817], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2925, device='cuda:0', dtype=torch.float64)
tensor([-2.0374, -2.8090, -2.9916, -3.5342, -3.4852], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3974, device='cuda:0', dtype=torch.float64)
tensor([-2.0355, -2.8145, -2.9980, -3.5195, -3.4857], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2173, device='cuda:0', dtype=torch.float64)
tensor([-2.0239, -2.8237, -3.0079, -3.5015, -3.4753], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2227, device='cuda:0', dtype=torch.float64)
tensor([-2.0079, -2.8317, -3.0147, -3.4869, -3.4690], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2688, device='cuda:0', dtype=torch.float64)
tensor([-1.9874, -2.8393, -3.0227, -3.4770, -3.4629], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3162, device='cuda:0', dtype=torch.float64)
tensor([-1.9634, -2.8342, -3.0388, -3.4796, -3.4549], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3171, device='cuda:0', dtype=torch.float64)
tensor([-1.9382, -2.8288, -3.0495, -3.4878, -3.4530], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3219, device='cuda:0', dtype=torch.float64)
tensor([-1.9231, -2.8289, -3.0538, -3.4891, -3.4563], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1722, device='cuda:0', dtype=torch.float64)
tensor([-1.9212, -2.8342, -3.0471, -3.4808, -3.4610], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4034, device='cuda:0', dtype=torch.float64)
tensor([-1.9438, -2.8464, -3.0271, -3.4616, -3.4605], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2802, device='cuda:0', dtype=torch.float64)
tensor([-1.9846, -2.8765, -2.9984, -3.4173, -3.4626], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3285, device='cuda:0', dtype=torch.float64)
tensor([-2.0221, -2.9045, -2.9692, -3.3799, -3.4625], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1609, device='cuda:0', dtype=torch.float64)
tensor([-2.0472, -2.9155, -2.9508, -3.3631, -3.4754], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3156, device='cuda:0', dtype=torch.float64)
tensor([-2.0533, -2.9187, -2.9480, -3.3680, -3.4770], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3876, device='cuda:0', dtype=torch.float64)
tensor([-2.0347, -2.9026, -2.9664, -3.3986, -3.4705], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1809, device='cuda:0', dtype=torch.float64)
tensor([-2.0090, -2.8842, -2.9879, -3.4331, -3.4569], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2849, device='cuda:0', dtype=torch.float64)
tensor([-1.9671, -2.8607, -3.0117, -3.4901, -3.4386], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0029, device='cuda:0', dtype=torch.float64)
tensor([-1.9491, -2.8501, -3.0233, -3.5295, -3.4258], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3317, device='cuda:0', dtype=torch.float64)
tensor([-1.9565, -2.8412, -3.0214, -3.5453, -3.4248], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3469, device='cuda:0', dtype=torch.float64)
tensor([-1.9722, -2.8388, -3.0250, -3.5446, -3.4295], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3210, device='cuda:0', dtype=torch.float64)
tensor([-1.9788, -2.8303, -3.0351, -3.5516, -3.4386], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0625, device='cuda:0', dtype=torch.float64)
tensor([-1.9995, -2.8253, -3.0355, -3.5471, -3.4411], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1195, device='cuda:0', dtype=torch.float64)
tensor([-2.0262, -2.8271, -3.0287, -3.5329, -3.4463], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0808, device='cuda:0', dtype=torch.float64)
tensor([-2.0425, -2.8246, -3.0271, -3.5217, -3.4452], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3933, device='cuda:0', dtype=torch.float64)
tensor([-2.0559, -2.8293, -3.0195, -3.4973, -3.4429], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0939, device='cuda:0', dtype=torch.float64)
tensor([-2.0686, -2.8316, -3.0052, -3.4828, -3.4352], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3005, device='cuda:0', dtype=torch.float64)
tensor([-2.0688, -2.8239, -3.0108, -3.4832, -3.4276], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1992, device='cuda:0', dtype=torch.float64)
tensor([-2.0635, -2.8180, -3.0102, -3.4784, -3.4242], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7273, device='cuda:0', dtype=torch.float64)
tensor([-2.0677, -2.8236, -3.0011, -3.4556, -3.4358], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3957, device='cuda:0', dtype=torch.float64)
tensor([-2.0649, -2.8347, -2.9974, -3.4331, -3.4428], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1235, device='cuda:0', dtype=torch.float64)
tensor([-2.0495, -2.8379, -3.0012, -3.4243, -3.4358], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1731, device='cuda:0', dtype=torch.float64)
tensor([-2.0183, -2.8274, -3.0076, -3.4285, -3.4236], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0976, device='cuda:0', dtype=torch.float64)
tensor([-1.9767, -2.8136, -3.0151, -3.4418, -3.4077], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4367, device='cuda:0', dtype=torch.float64)
tensor([-1.9371, -2.8038, -3.0317, -3.4546, -3.3903], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1169, device='cuda:0', dtype=torch.float64)
tensor([-1.9138, -2.8008, -3.0391, -3.4576, -3.3853], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3749, device='cuda:0', dtype=torch.float64)
tensor([-1.9114, -2.8008, -3.0256, -3.4452, -3.4040], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4078, device='cuda:0', dtype=torch.float64)
tensor([-1.9160, -2.8154, -3.0220, -3.4290, -3.4282], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0907, device='cuda:0', dtype=torch.float64)
tensor([-1.9301, -2.8378, -3.0172, -3.4060, -3.4608], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0962, device='cuda:0', dtype=torch.float64)
tensor([-1.9564, -2.8612, -3.0052, -3.3692, -3.4899], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0419, device='cuda:0', dtype=torch.float64)
tensor([-1.9797, -2.8724, -3.0022, -3.3435, -3.5142], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3154, device='cuda:0', dtype=torch.float64)
tensor([-2.0151, -2.8795, -2.9969, -3.3247, -3.5245], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3141, device='cuda:0', dtype=torch.float64)
tensor([-2.0290, -2.8758, -2.9908, -3.3171, -3.5321], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7169, device='cuda:0', dtype=torch.float64)
tensor([-2.0521, -2.8822, -2.9734, -3.3064, -3.5422], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0876, device='cuda:0', dtype=torch.float64)
tensor([-2.0534, -2.8780, -2.9673, -3.3223, -3.5514], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2005, device='cuda:0', dtype=torch.float64)
tensor([-2.0388, -2.8787, -2.9727, -3.3460, -3.5483], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1130, device='cuda:0', dtype=torch.float64)
tensor([-2.0105, -2.8687, -2.9796, -3.3824, -3.5350], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2565, device='cuda:0', dtype=torch.float64)
tensor([-1.9858, -2.8595, -2.9802, -3.4156, -3.5157], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2504, device='cuda:0', dtype=torch.float64)
tensor([-1.9816, -2.8498, -2.9810, -3.4405, -3.4976], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2251, device='cuda:0', dtype=torch.float64)
tensor([-1.9833, -2.8424, -2.9834, -3.4620, -3.4718], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1323, device='cuda:0', dtype=torch.float64)
tensor([-1.9945, -2.8450, -2.9822, -3.4755, -3.4488], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2866, device='cuda:0', dtype=torch.float64)
tensor([-2.0039, -2.8512, -2.9831, -3.4930, -3.4268], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1101, device='cuda:0', dtype=torch.float64)
tensor([-2.0155, -2.8561, -2.9781, -3.5062, -3.4199], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1899, device='cuda:0', dtype=torch.float64)
tensor([-2.0259, -2.8639, -2.9742, -3.5125, -3.4161], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0502, device='cuda:0', dtype=torch.float64)
tensor([-2.0310, -2.8670, -2.9787, -3.5230, -3.4180], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1012, device='cuda:0', dtype=torch.float64)
tensor([-2.0224, -2.8748, -2.9808, -3.5290, -3.4225], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1307, device='cuda:0', dtype=torch.float64)
tensor([-2.0124, -2.8818, -2.9801, -3.5350, -3.4327], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2160, device='cuda:0', dtype=torch.float64)
tensor([-2.0061, -2.8911, -2.9795, -3.5322, -3.4414], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0943, device='cuda:0', dtype=torch.float64)
tensor([-2.0052, -2.8911, -2.9808, -3.5284, -3.4430], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1704, device='cuda:0', dtype=torch.float64)
tensor([-2.0103, -2.8913, -2.9869, -3.5166, -3.4456], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2124, device='cuda:0', dtype=torch.float64)
tensor([-2.0220, -2.8853, -2.9802, -3.5015, -3.4538], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4530, device='cuda:0', dtype=torch.float64)
tensor([-2.0417, -2.8830, -2.9661, -3.4792, -3.4619], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3040, device='cuda:0', dtype=torch.float64)
tensor([-2.0637, -2.8852, -2.9490, -3.4573, -3.4716], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1258, device='cuda:0', dtype=torch.float64)
tensor([-2.0846, -2.8864, -2.9286, -3.4349, -3.4784], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5016, device='cuda:0', dtype=torch.float64)
tensor([-2.0872, -2.8736, -2.9272, -3.4202, -3.4708], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2651, device='cuda:0', dtype=torch.float64)
tensor([-2.0657, -2.8530, -2.9370, -3.4215, -3.4614], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0619, device='cuda:0', dtype=torch.float64)
tensor([-2.0243, -2.8193, -2.9628, -3.4374, -3.4481], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4529, device='cuda:0', dtype=torch.float64)
tensor([-1.9922, -2.7900, -2.9937, -3.4603, -3.4369], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3121, device='cuda:0', dtype=torch.float64)
tensor([-1.9622, -2.7720, -3.0277, -3.4838, -3.4328], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2098, device='cuda:0', dtype=torch.float64)
tensor([-1.9551, -2.7749, -3.0457, -3.4853, -3.4351], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1565, device='cuda:0', dtype=torch.float64)
tensor([-1.9607, -2.7935, -3.0380, -3.4704, -3.4498], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2203, device='cuda:0', dtype=torch.float64)
tensor([-1.9827, -2.8247, -3.0183, -3.4411, -3.4655], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1618, device='cuda:0', dtype=torch.float64)
tensor([-1.9892, -2.8370, -3.0059, -3.4219, -3.4775], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0934, device='cuda:0', dtype=torch.float64)
tensor([-1.9873, -2.8483, -3.0068, -3.4000, -3.4965], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2873, device='cuda:0', dtype=torch.float64)
tensor([-1.9945, -2.8645, -3.0019, -3.3706, -3.5060], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2433, device='cuda:0', dtype=torch.float64)
tensor([-1.9950, -2.8744, -3.0107, -3.3567, -3.5079], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2136, device='cuda:0', dtype=torch.float64)
tensor([-1.9912, -2.8740, -3.0153, -3.3595, -3.4939], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2057, device='cuda:0', dtype=torch.float64)
tensor([-1.9835, -2.8669, -3.0176, -3.3755, -3.4760], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1052, device='cuda:0', dtype=torch.float64)
tensor([-1.9731, -2.8486, -3.0177, -3.4088, -3.4610], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4172, device='cuda:0', dtype=torch.float64)
tensor([-1.9586, -2.8219, -3.0283, -3.4473, -3.4446], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3362, device='cuda:0', dtype=torch.float64)
tensor([-1.9640, -2.8054, -3.0222, -3.4659, -3.4417], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5201, device='cuda:0', dtype=torch.float64)
tensor([-1.9784, -2.7975, -3.0073, -3.4749, -3.4399], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3456, device='cuda:0', dtype=torch.float64)
tensor([-2.0010, -2.7917, -2.9943, -3.4800, -3.4427], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0202, device='cuda:0', dtype=torch.float64)
tensor([-2.0128, -2.7845, -2.9870, -3.4890, -3.4460], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1886, device='cuda:0', dtype=torch.float64)
tensor([-2.0300, -2.7891, -2.9693, -3.4894, -3.4503], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0578, device='cuda:0', dtype=torch.float64)
tensor([-2.0377, -2.8003, -2.9686, -3.4946, -3.4618], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0018, device='cuda:0', dtype=torch.float64)
tensor([-2.0285, -2.8096, -2.9754, -3.5072, -3.4699], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1090, device='cuda:0', dtype=torch.float64)
tensor([-2.0125, -2.8184, -2.9851, -3.5231, -3.4623], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1097, device='cuda:0', dtype=torch.float64)
tensor([-1.9921, -2.8255, -2.9949, -3.5332, -3.4530], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3241, device='cuda:0', dtype=torch.float64)
tensor([-1.9932, -2.8492, -2.9914, -3.5214, -3.4384], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2805, device='cuda:0', dtype=torch.float64)
tensor([-1.9975, -2.8663, -2.9880, -3.5024, -3.4241], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1172, device='cuda:0', dtype=torch.float64)
tensor([-2.0096, -2.8824, -2.9791, -3.4753, -3.4209], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2596, device='cuda:0', dtype=torch.float64)
tensor([-2.0161, -2.8901, -2.9803, -3.4510, -3.4138], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3338, device='cuda:0', dtype=torch.float64)
tensor([-2.0202, -2.8953, -2.9896, -3.4252, -3.4099], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0538, device='cuda:0', dtype=torch.float64)
tensor([-2.0202, -2.8962, -2.9958, -3.4124, -3.4090], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3982, device='cuda:0', dtype=torch.float64)
tensor([-2.0051, -2.8907, -3.0042, -3.4170, -3.4001], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3231, device='cuda:0', dtype=torch.float64)
tensor([-1.9982, -2.8916, -3.0085, -3.4228, -3.3976], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2816, device='cuda:0', dtype=torch.float64)
tensor([-1.9718, -2.8904, -3.0076, -3.4413, -3.4006], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2453, device='cuda:0', dtype=torch.float64)
tensor([-1.9376, -2.8885, -3.0123, -3.4604, -3.4067], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3993, device='cuda:0', dtype=torch.float64)
tensor([-1.9159, -2.8917, -3.0147, -3.4808, -3.4296], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3298, device='cuda:0', dtype=torch.float64)
tensor([-1.9023, -2.8955, -3.0198, -3.4936, -3.4437], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0658, device='cuda:0', dtype=torch.float64)
tensor([-1.9037, -2.9043, -3.0170, -3.4982, -3.4561], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2884, device='cuda:0', dtype=torch.float64)
tensor([-1.9307, -2.9141, -2.9975, -3.4817, -3.4717], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3010, device='cuda:0', dtype=torch.float64)
tensor([-1.9727, -2.9348, -2.9823, -3.4528, -3.4806], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3026, device='cuda:0', dtype=torch.float64)
tensor([-2.0079, -2.9460, -2.9811, -3.4284, -3.4741], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2070, device='cuda:0', dtype=torch.float64)
tensor([-2.0404, -2.9382, -2.9912, -3.4069, -3.4664], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1719, device='cuda:0', dtype=torch.float64)
tensor([-2.0486, -2.9207, -3.0163, -3.4118, -3.4483], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1910, device='cuda:0', dtype=torch.float64)
tensor([-2.0503, -2.8942, -3.0363, -3.4264, -3.4389], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2356, device='cuda:0', dtype=torch.float64)
tensor([-2.0444, -2.8660, -3.0540, -3.4413, -3.4411], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4461, device='cuda:0', dtype=torch.float64)
tensor([-2.0438, -2.8472, -3.0539, -3.4492, -3.4510], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1784, device='cuda:0', dtype=torch.float64)
tensor([-2.0441, -2.8245, -3.0480, -3.4585, -3.4605], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3025, device='cuda:0', dtype=torch.float64)
tensor([-2.0473, -2.8043, -3.0343, -3.4572, -3.4699], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4128, device='cuda:0', dtype=torch.float64)
tensor([-2.0442, -2.7829, -3.0252, -3.4650, -3.4598], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2090, device='cuda:0', dtype=torch.float64)
tensor([-2.0346, -2.7543, -3.0161, -3.4888, -3.4504], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3944, device='cuda:0', dtype=torch.float64)
tensor([-2.0257, -2.7373, -3.0091, -3.5097, -3.4346], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2964, device='cuda:0', dtype=torch.float64)
tensor([-2.0211, -2.7341, -3.0016, -3.5185, -3.4180], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0342, device='cuda:0', dtype=torch.float64)
tensor([-2.0156, -2.7367, -2.9853, -3.5279, -3.3981], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2917, device='cuda:0', dtype=torch.float64)
tensor([-2.0180, -2.7406, -2.9747, -3.5323, -3.3819], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4234, device='cuda:0', dtype=torch.float64)
tensor([-2.0312, -2.7608, -2.9533, -3.5194, -3.3833], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5580, device='cuda:0', dtype=torch.float64)
tensor([-2.0583, -2.7870, -2.9308, -3.4944, -3.3991], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3493, device='cuda:0', dtype=torch.float64)
tensor([-2.0773, -2.8130, -2.9095, -3.4777, -3.4228], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1068, device='cuda:0', dtype=torch.float64)
tensor([-2.0800, -2.8337, -2.9109, -3.4723, -3.4389], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1516, device='cuda:0', dtype=torch.float64)
tensor([-2.0581, -2.8401, -2.9228, -3.4840, -3.4405], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4371, device='cuda:0', dtype=torch.float64)
tensor([-2.0368, -2.8332, -2.9445, -3.4970, -3.4327], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2502, device='cuda:0', dtype=torch.float64)
tensor([-2.0195, -2.8235, -2.9689, -3.5031, -3.4319], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5622, device='cuda:0', dtype=torch.float64)
tensor([-1.9956, -2.8160, -2.9882, -3.5106, -3.4430], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2011, device='cuda:0', dtype=torch.float64)
tensor([-1.9864, -2.8237, -2.9970, -3.5096, -3.4593], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4434, device='cuda:0', dtype=torch.float64)
tensor([-1.9893, -2.8396, -2.9926, -3.4927, -3.4805], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2515, device='cuda:0', dtype=torch.float64)
tensor([-1.9854, -2.8517, -2.9948, -3.4753, -3.4937], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2035, device='cuda:0', dtype=torch.float64)
tensor([-1.9933, -2.8552, -2.9869, -3.4542, -3.5016], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2956, device='cuda:0', dtype=torch.float64)
tensor([-2.0065, -2.8600, -2.9725, -3.4356, -3.5095], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1589, device='cuda:0', dtype=torch.float64)
tensor([-2.0143, -2.8642, -2.9668, -3.4209, -3.5032], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2641, device='cuda:0', dtype=torch.float64)
tensor([-2.0150, -2.8594, -2.9747, -3.4200, -3.4854], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0038, device='cuda:0', dtype=torch.float64)
tensor([-2.0121, -2.8563, -2.9879, -3.4196, -3.4666], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2271, device='cuda:0', dtype=torch.float64)
tensor([-2.0042, -2.8496, -3.0022, -3.4329, -3.4495], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2343, device='cuda:0', dtype=torch.float64)
tensor([-1.9849, -2.8302, -3.0253, -3.4601, -3.4376], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2156, device='cuda:0', dtype=torch.float64)
tensor([-1.9665, -2.8185, -3.0528, -3.4829, -3.4306], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2754, device='cuda:0', dtype=torch.float64)
tensor([-1.9600, -2.8193, -3.0659, -3.5029, -3.4339], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5235, device='cuda:0', dtype=torch.float64)
tensor([-1.9745, -2.8270, -3.0651, -3.5030, -3.4455], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2844, device='cuda:0', dtype=torch.float64)
tensor([-2.0072, -2.8509, -3.0511, -3.4849, -3.4536], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9149, device='cuda:0', dtype=torch.float64)
tensor([-2.0416, -2.8745, -3.0251, -3.4583, -3.4583], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0810, device='cuda:0', dtype=torch.float64)
tensor([-2.0542, -2.8909, -2.9989, -3.4500, -3.4555], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4437, device='cuda:0', dtype=torch.float64)
tensor([-2.0619, -2.8956, -2.9655, -3.4451, -3.4527], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1585, device='cuda:0', dtype=torch.float64)
tensor([-2.0835, -2.9049, -2.9266, -3.4268, -3.4510], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0889, device='cuda:0', dtype=torch.float64)
tensor([-2.0867, -2.9081, -2.9099, -3.4159, -3.4430], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1541, device='cuda:0', dtype=torch.float64)
tensor([-2.0703, -2.8946, -2.9134, -3.4111, -3.4328], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2421, device='cuda:0', dtype=torch.float64)
tensor([-2.0442, -2.8713, -2.9327, -3.4187, -3.4174], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3246, device='cuda:0', dtype=torch.float64)
tensor([-2.0027, -2.8328, -2.9712, -3.4473, -3.4100], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1291, device='cuda:0', dtype=torch.float64)
tensor([-1.9654, -2.7917, -3.0085, -3.4864, -3.4057], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4087, device='cuda:0', dtype=torch.float64)
tensor([-1.9540, -2.7643, -3.0321, -3.5089, -3.4050], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0881, device='cuda:0', dtype=torch.float64)
tensor([-1.9562, -2.7487, -3.0375, -3.5143, -3.4042], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5852, device='cuda:0', dtype=torch.float64)
tensor([-1.9694, -2.7412, -3.0334, -3.5109, -3.4154], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1444, device='cuda:0', dtype=torch.float64)
tensor([-1.9866, -2.7461, -3.0214, -3.5014, -3.4298], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2175, device='cuda:0', dtype=torch.float64)
tensor([-2.0151, -2.7703, -2.9945, -3.4719, -3.4505], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1939, device='cuda:0', dtype=torch.float64)
tensor([-2.0300, -2.7930, -2.9728, -3.4507, -3.4661], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3055, device='cuda:0', dtype=torch.float64)
tensor([-2.0567, -2.8250, -2.9437, -3.4215, -3.4825], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1372, device='cuda:0', dtype=torch.float64)
tensor([-2.0642, -2.8428, -2.9146, -3.4107, -3.4941], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4917, device='cuda:0', dtype=torch.float64)
tensor([-2.0471, -2.8317, -2.9140, -3.4230, -3.4965], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1369, device='cuda:0', dtype=torch.float64)
tensor([-2.0338, -2.8258, -2.9165, -3.4316, -3.4995], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3046, device='cuda:0', dtype=torch.float64)
tensor([-2.0251, -2.8342, -2.9118, -3.4309, -3.5105], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3608, device='cuda:0', dtype=torch.float64)
tensor([-2.0274, -2.8384, -2.9086, -3.4242, -3.5233], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2383, device='cuda:0', dtype=torch.float64)
tensor([-2.0348, -2.8380, -2.9067, -3.4123, -3.5402], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1802, device='cuda:0', dtype=torch.float64)
tensor([-2.0212, -2.8301, -2.9230, -3.4203, -3.5570], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3425, device='cuda:0', dtype=torch.float64)
tensor([-2.0105, -2.8131, -2.9511, -3.4360, -3.5592], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2205, device='cuda:0', dtype=torch.float64)
tensor([-1.9821, -2.7878, -2.9901, -3.4725, -3.5462], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3212, device='cuda:0', dtype=torch.float64)
tensor([-1.9585, -2.7712, -3.0311, -3.5007, -3.5364], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1263, device='cuda:0', dtype=torch.float64)
tensor([-1.9536, -2.7625, -3.0699, -3.5187, -3.5135], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2930, device='cuda:0', dtype=torch.float64)
tensor([-1.9642, -2.7576, -3.0955, -3.5356, -3.4866], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2047, device='cuda:0', dtype=torch.float64)
tensor([-1.9904, -2.7734, -3.0975, -3.5283, -3.4569], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1328, device='cuda:0', dtype=torch.float64)
tensor([-2.0302, -2.8085, -3.0842, -3.5018, -3.4294], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1371, device='cuda:0', dtype=torch.float64)
tensor([-2.0630, -2.8384, -3.0804, -3.4798, -3.4051], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9410, device='cuda:0', dtype=torch.float64)
tensor([-2.0910, -2.8650, -3.0719, -3.4614, -3.3887], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3993, device='cuda:0', dtype=torch.float64)
tensor([-2.1022, -2.8849, -3.0620, -3.4457, -3.3739], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1007, device='cuda:0', dtype=torch.float64)
tensor([-2.0961, -2.8917, -3.0511, -3.4439, -3.3672], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3028, device='cuda:0', dtype=torch.float64)
tensor([-2.0642, -2.8861, -3.0497, -3.4557, -3.3615], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2103, device='cuda:0', dtype=torch.float64)
tensor([-2.0231, -2.8726, -3.0441, -3.4661, -3.3634], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0121, device='cuda:0', dtype=torch.float64)
tensor([-1.9741, -2.8520, -3.0310, -3.4846, -3.3770], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3896, device='cuda:0', dtype=torch.float64)
tensor([-1.9480, -2.8481, -3.0007, -3.4786, -3.4034], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2442, device='cuda:0', dtype=torch.float64)
tensor([-1.9385, -2.8555, -2.9674, -3.4555, -3.4282], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1638, device='cuda:0', dtype=torch.float64)
tensor([-1.9419, -2.8622, -2.9320, -3.4316, -3.4455], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2857, device='cuda:0', dtype=torch.float64)
tensor([-1.9645, -2.8637, -2.8979, -3.3976, -3.4470], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1502, device='cuda:0', dtype=torch.float64)
tensor([-1.9945, -2.8667, -2.8739, -3.3720, -3.4348], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5762, device='cuda:0', dtype=torch.float64)
tensor([-2.0066, -2.8569, -2.8839, -3.3716, -3.4143], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4230, device='cuda:0', dtype=torch.float64)
tensor([-2.0113, -2.8389, -2.9111, -3.3805, -3.3890], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3034, device='cuda:0', dtype=torch.float64)
tensor([-2.0109, -2.8358, -2.9349, -3.3918, -3.3776], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3699, device='cuda:0', dtype=torch.float64)
tensor([-2.0078, -2.8296, -2.9565, -3.4082, -3.3830], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3813, device='cuda:0', dtype=torch.float64)
tensor([-2.0141, -2.8299, -2.9637, -3.4102, -3.3925], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3516, device='cuda:0', dtype=torch.float64)
tensor([-2.0207, -2.8411, -2.9540, -3.4196, -3.4024], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2667, device='cuda:0', dtype=torch.float64)
tensor([-2.0462, -2.8562, -2.9349, -3.4199, -3.4129], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3366, device='cuda:0', dtype=torch.float64)
tensor([-2.0513, -2.8687, -2.9259, -3.4341, -3.4219], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6510, device='cuda:0', dtype=torch.float64)
tensor([-2.0318, -2.8690, -2.9354, -3.4510, -3.4234], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3519, device='cuda:0', dtype=torch.float64)
tensor([-1.9962, -2.8522, -2.9567, -3.4783, -3.4192], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4267, device='cuda:0', dtype=torch.float64)
tensor([-1.9697, -2.8551, -2.9881, -3.5050, -3.4196], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1814, device='cuda:0', dtype=torch.float64)
tensor([-1.9515, -2.8512, -3.0149, -3.5282, -3.4282], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4971, device='cuda:0', dtype=torch.float64)
tensor([-1.9495, -2.8452, -3.0134, -3.5385, -3.4512], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2889, device='cuda:0', dtype=torch.float64)
tensor([-1.9720, -2.8420, -2.9985, -3.5367, -3.4681], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0699, device='cuda:0', dtype=torch.float64)
tensor([-2.0048, -2.8457, -2.9776, -3.5318, -3.4966], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1021, device='cuda:0', dtype=torch.float64)
tensor([-2.0495, -2.8591, -2.9515, -3.5093, -3.5196], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1308, device='cuda:0', dtype=torch.float64)
tensor([-2.0888, -2.8790, -2.9275, -3.4868, -3.5395], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3255, device='cuda:0', dtype=torch.float64)
tensor([-2.1215, -2.8942, -2.9078, -3.4684, -3.5555], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1962, device='cuda:0', dtype=torch.float64)
tensor([-2.1395, -2.8974, -2.9028, -3.4482, -3.5573], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0001, device='cuda:0', dtype=torch.float64)
tensor([-2.1232, -2.8903, -2.9274, -3.4463, -3.5577], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3113, device='cuda:0', dtype=torch.float64)
tensor([-2.0785, -2.8652, -2.9640, -3.4614, -3.5551], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1141, device='cuda:0', dtype=torch.float64)
tensor([-2.0025, -2.8226, -3.0123, -3.4948, -3.5478], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1620, device='cuda:0', dtype=torch.float64)
tensor([-1.9491, -2.7913, -3.0463, -3.5130, -3.5382], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4123, device='cuda:0', dtype=torch.float64)
tensor([-1.9116, -2.7718, -3.0645, -3.5271, -3.5270], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5038, device='cuda:0', dtype=torch.float64)
tensor([-1.9155, -2.7790, -3.0567, -3.5106, -3.5123], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0198, device='cuda:0', dtype=torch.float64)
tensor([-1.9465, -2.7987, -3.0373, -3.4720, -3.5041], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2132, device='cuda:0', dtype=torch.float64)
tensor([-2.0001, -2.8376, -2.9903, -3.4289, -3.5045], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2544, device='cuda:0', dtype=torch.float64)
tensor([-2.0474, -2.8804, -2.9587, -3.3966, -3.5050], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3819, device='cuda:0', dtype=torch.float64)
tensor([-2.0685, -2.9019, -2.9360, -3.3911, -3.4943], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3498, device='cuda:0', dtype=torch.float64)
tensor([-2.0591, -2.9045, -2.9382, -3.4045, -3.4627], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5000, device='cuda:0', dtype=torch.float64)
tensor([-2.0312, -2.8941, -2.9610, -3.4299, -3.4235], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1044, device='cuda:0', dtype=torch.float64)
tensor([-2.0166, -2.8765, -2.9760, -3.4501, -3.3855], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4537, device='cuda:0', dtype=torch.float64)
tensor([-1.9962, -2.8594, -2.9942, -3.4798, -3.3568], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7176, device='cuda:0', dtype=torch.float64)
tensor([-1.9930, -2.8530, -2.9963, -3.4873, -3.3401], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4233, device='cuda:0', dtype=torch.float64)
tensor([-2.0156, -2.8590, -2.9801, -3.4552, -3.3433], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1655, device='cuda:0', dtype=torch.float64)
tensor([-2.0460, -2.8609, -2.9644, -3.4184, -3.3592], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0881, device='cuda:0', dtype=torch.float64)
tensor([-2.0610, -2.8611, -2.9687, -3.3920, -3.3773], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3064, device='cuda:0', dtype=torch.float64)
tensor([-2.0497, -2.8491, -2.9865, -3.3862, -3.3979], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4265, device='cuda:0', dtype=torch.float64)
tensor([-2.0221, -2.8254, -3.0178, -3.3952, -3.4115], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4119, device='cuda:0', dtype=torch.float64)
tensor([-2.0057, -2.8061, -3.0360, -3.4045, -3.4214], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1639, device='cuda:0', dtype=torch.float64)
tensor([-1.9926, -2.7864, -3.0506, -3.4195, -3.4318], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2004, device='cuda:0', dtype=torch.float64)
tensor([-1.9975, -2.7908, -3.0487, -3.4265, -3.4498], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2916, device='cuda:0', dtype=torch.float64)
tensor([-2.0226, -2.7997, -3.0374, -3.4209, -3.4633], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2689, device='cuda:0', dtype=torch.float64)
tensor([-2.0489, -2.8173, -3.0196, -3.4070, -3.4707], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2918, device='cuda:0', dtype=torch.float64)
tensor([-2.0556, -2.8286, -3.0055, -3.3979, -3.4804], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6242, device='cuda:0', dtype=torch.float64)
tensor([-2.0549, -2.8475, -2.9865, -3.3841, -3.4827], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4795, device='cuda:0', dtype=torch.float64)
tensor([-2.0439, -2.8711, -2.9693, -3.3771, -3.4827], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1397, device='cuda:0', dtype=torch.float64)
tensor([-2.0255, -2.8861, -2.9677, -3.3751, -3.4901], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2704, device='cuda:0', dtype=torch.float64)
tensor([-2.0093, -2.8852, -2.9728, -3.3816, -3.4950], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4196, device='cuda:0', dtype=torch.float64)
tensor([-1.9751, -2.8738, -2.9926, -3.4118, -3.4994], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1904, device='cuda:0', dtype=torch.float64)
tensor([-1.9515, -2.8588, -2.9979, -3.4498, -3.5010], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0905, device='cuda:0', dtype=torch.float64)
tensor([-1.9516, -2.8479, -2.9944, -3.4732, -3.5029], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3446, device='cuda:0', dtype=torch.float64)
tensor([-1.9642, -2.8433, -2.9924, -3.4794, -3.5055], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3170, device='cuda:0', dtype=torch.float64)
tensor([-1.9903, -2.8451, -2.9877, -3.4802, -3.4990], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2765, device='cuda:0', dtype=torch.float64)
tensor([-2.0147, -2.8341, -2.9973, -3.4909, -3.4850], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2946, device='cuda:0', dtype=torch.float64)
tensor([-2.0425, -2.8222, -2.9973, -3.4959, -3.4768], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1306, device='cuda:0', dtype=torch.float64)
tensor([-2.0711, -2.8171, -2.9813, -3.4984, -3.4668], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0605, device='cuda:0', dtype=torch.float64)
tensor([-2.0902, -2.8161, -2.9557, -3.4962, -3.4563], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4726, device='cuda:0', dtype=torch.float64)
tensor([-2.0877, -2.8032, -2.9347, -3.5088, -3.4546], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0715, device='cuda:0', dtype=torch.float64)
tensor([-2.0642, -2.7900, -2.9361, -3.5254, -3.4539], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2235, device='cuda:0', dtype=torch.float64)
tensor([-2.0348, -2.7963, -2.9417, -3.5347, -3.4576], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3424, device='cuda:0', dtype=torch.float64)
tensor([-2.0167, -2.8026, -2.9497, -3.5465, -3.4604], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4014, device='cuda:0', dtype=torch.float64)
tensor([-1.9870, -2.7986, -2.9658, -3.5631, -3.4484], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2223, device='cuda:0', dtype=torch.float64)
tensor([-1.9592, -2.7891, -2.9919, -3.5806, -3.4242], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1670, device='cuda:0', dtype=torch.float64)
tensor([-1.9401, -2.7867, -3.0176, -3.5919, -3.4073], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1675, device='cuda:0', dtype=torch.float64)
tensor([-1.9457, -2.7946, -3.0270, -3.5876, -3.3884], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1605, device='cuda:0', dtype=torch.float64)
tensor([-1.9549, -2.8052, -3.0375, -3.5811, -3.3881], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2246, device='cuda:0', dtype=torch.float64)
tensor([-1.9812, -2.8278, -3.0422, -3.5556, -3.4002], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1227, device='cuda:0', dtype=torch.float64)
tensor([-2.0285, -2.8616, -3.0321, -3.5081, -3.4159], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0882, device='cuda:0', dtype=torch.float64)
tensor([-2.0773, -2.8836, -3.0253, -3.4544, -3.4290], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2444, device='cuda:0', dtype=torch.float64)
tensor([-2.1232, -2.9082, -3.0098, -3.4058, -3.4400], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1135, device='cuda:0', dtype=torch.float64)
tensor([-2.1291, -2.9205, -3.0071, -3.3726, -3.4402], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1803, device='cuda:0', dtype=torch.float64)
tensor([-2.1074, -2.9052, -3.0172, -3.3627, -3.4329], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6013, device='cuda:0', dtype=torch.float64)
tensor([-2.0790, -2.8724, -3.0194, -3.3653, -3.4326], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3026, device='cuda:0', dtype=torch.float64)
tensor([-2.0358, -2.8382, -3.0336, -3.3957, -3.4155], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1587, device='cuda:0', dtype=torch.float64)
tensor([-1.9966, -2.8064, -3.0492, -3.4320, -3.3993], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3811, device='cuda:0', dtype=torch.float64)
tensor([-1.9690, -2.7763, -3.0661, -3.4551, -3.3963], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9816, device='cuda:0', dtype=torch.float64)
tensor([-1.9515, -2.7613, -3.0654, -3.4634, -3.3944], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3425, device='cuda:0', dtype=torch.float64)
tensor([-1.9681, -2.7711, -3.0392, -3.4427, -3.3920], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6348, device='cuda:0', dtype=torch.float64)
tensor([-2.0082, -2.8070, -2.9951, -3.4010, -3.4029], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1756, device='cuda:0', dtype=torch.float64)
tensor([-2.0328, -2.8325, -2.9659, -3.3730, -3.4204], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0623, device='cuda:0', dtype=torch.float64)
tensor([-2.0412, -2.8555, -2.9491, -3.3646, -3.4403], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2310, device='cuda:0', dtype=torch.float64)
tensor([-2.0322, -2.8638, -2.9453, -3.3693, -3.4455], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5220, device='cuda:0', dtype=torch.float64)
tensor([-2.0134, -2.8641, -2.9511, -3.3877, -3.4335], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3768, device='cuda:0', dtype=torch.float64)
tensor([-1.9893, -2.8645, -2.9702, -3.4172, -3.4356], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2385, device='cuda:0', dtype=torch.float64)
tensor([-1.9690, -2.8570, -2.9930, -3.4498, -3.4294], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0181, device='cuda:0', dtype=torch.float64)
tensor([-1.9636, -2.8499, -3.0076, -3.4657, -3.4147], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2264, device='cuda:0', dtype=torch.float64)
tensor([-1.9734, -2.8474, -3.0126, -3.4768, -3.4077], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2211, device='cuda:0', dtype=torch.float64)
tensor([-2.0003, -2.8445, -3.0020, -3.4753, -3.3991], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4571, device='cuda:0', dtype=torch.float64)
tensor([-2.0404, -2.8525, -2.9715, -3.4617, -3.4002], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3025, device='cuda:0', dtype=torch.float64)
tensor([-2.0710, -2.8628, -2.9419, -3.4487, -3.4106], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3456, device='cuda:0', dtype=torch.float64)
tensor([-2.0863, -2.8639, -2.9230, -3.4509, -3.4231], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1915, device='cuda:0', dtype=torch.float64)
tensor([-2.0812, -2.8473, -2.9159, -3.4684, -3.4243], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2178, device='cuda:0', dtype=torch.float64)
tensor([-2.0671, -2.8271, -2.9330, -3.4797, -3.4231], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2801, device='cuda:0', dtype=torch.float64)
tensor([-2.0396, -2.8031, -2.9582, -3.4929, -3.4101], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0054, device='cuda:0', dtype=torch.float64)
tensor([-2.0133, -2.7908, -2.9804, -3.4978, -3.3993], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2016, device='cuda:0', dtype=torch.float64)
tensor([-1.9828, -2.7811, -3.0026, -3.5025, -3.3934], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2354, device='cuda:0', dtype=torch.float64)
tensor([-1.9617, -2.7809, -3.0199, -3.4972, -3.3910], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2232, device='cuda:0', dtype=torch.float64)
tensor([-1.9389, -2.7857, -3.0404, -3.4944, -3.3911], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1443, device='cuda:0', dtype=torch.float64)
tensor([-1.9386, -2.7982, -3.0536, -3.4870, -3.3902], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2197, device='cuda:0', dtype=torch.float64)
tensor([-1.9583, -2.8191, -3.0455, -3.4654, -3.4009], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3718, device='cuda:0', dtype=torch.float64)
tensor([-1.9965, -2.8425, -3.0333, -3.4369, -3.4046], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2943, device='cuda:0', dtype=torch.float64)
tensor([-2.0409, -2.8720, -3.0158, -3.3989, -3.4070], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2944, device='cuda:0', dtype=torch.float64)
tensor([-2.0856, -2.8924, -2.9907, -3.3549, -3.4122], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9216, device='cuda:0', dtype=torch.float64)
tensor([-2.1104, -2.9011, -2.9767, -3.3387, -3.4110], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5221, device='cuda:0', dtype=torch.float64)
tensor([-2.1279, -2.8912, -2.9796, -3.3277, -3.4086], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0385, device='cuda:0', dtype=torch.float64)
tensor([-2.1090, -2.8668, -2.9957, -3.3479, -3.4130], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2106, device='cuda:0', dtype=torch.float64)
tensor([-2.0706, -2.8394, -3.0191, -3.3942, -3.4272], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1165, device='cuda:0', dtype=torch.float64)
tensor([-2.0249, -2.8139, -3.0334, -3.4490, -3.4403], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3969, device='cuda:0', dtype=torch.float64)
tensor([-1.9867, -2.8020, -3.0399, -3.4988, -3.4608], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3652, device='cuda:0', dtype=torch.float64)
tensor([-1.9732, -2.8038, -3.0354, -3.5311, -3.4988], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0795, device='cuda:0', dtype=torch.float64)
tensor([-1.9851, -2.8085, -3.0176, -3.5480, -3.5409], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0884, device='cuda:0', dtype=torch.float64)
tensor([-1.9987, -2.8130, -2.9928, -3.5540, -3.5793], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2116, device='cuda:0', dtype=torch.float64)
tensor([-2.0105, -2.8200, -2.9688, -3.5587, -3.6096], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1689, device='cuda:0', dtype=torch.float64)
tensor([-2.0069, -2.8217, -2.9562, -3.5602, -3.6213], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3749, device='cuda:0', dtype=torch.float64)
tensor([-2.0000, -2.8189, -2.9556, -3.5668, -3.6196], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3063, device='cuda:0', dtype=torch.float64)
tensor([-1.9953, -2.8156, -2.9565, -3.5569, -3.6049], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3870, device='cuda:0', dtype=torch.float64)
tensor([-2.0130, -2.8233, -2.9512, -3.5273, -3.5895], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2456, device='cuda:0', dtype=torch.float64)
tensor([-2.0229, -2.8358, -2.9564, -3.5072, -3.5719], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4507, device='cuda:0', dtype=torch.float64)
tensor([-2.0408, -2.8432, -2.9581, -3.4724, -3.5507], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1803, device='cuda:0', dtype=torch.float64)
tensor([-2.0536, -2.8503, -2.9547, -3.4423, -3.5387], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0356, device='cuda:0', dtype=torch.float64)
tensor([-2.0559, -2.8613, -2.9508, -3.4190, -3.5178], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9777, device='cuda:0', dtype=torch.float64)
tensor([-2.0445, -2.8630, -2.9575, -3.4047, -3.4889], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4258, device='cuda:0', dtype=torch.float64)
tensor([-2.0353, -2.8546, -2.9817, -3.3923, -3.4462], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1336, device='cuda:0', dtype=torch.float64)
tensor([-2.0350, -2.8496, -2.9971, -3.3785, -3.4054], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2299, device='cuda:0', dtype=torch.float64)
tensor([-2.0527, -2.8465, -3.0018, -3.3593, -3.3713], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7959, device='cuda:0', dtype=torch.float64)
tensor([-2.0740, -2.8557, -2.9924, -3.3400, -3.3700], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3677, device='cuda:0', dtype=torch.float64)
tensor([-2.0956, -2.8717, -2.9654, -3.3265, -3.3757], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2607, device='cuda:0', dtype=torch.float64)
tensor([-2.1032, -2.8983, -2.9384, -3.3296, -3.3894], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1916, device='cuda:0', dtype=torch.float64)
tensor([-2.0899, -2.9082, -2.9232, -3.3510, -3.4052], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0948, device='cuda:0', dtype=torch.float64)
tensor([-2.0568, -2.9036, -2.9251, -3.3877, -3.4150], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4972, device='cuda:0', dtype=torch.float64)
tensor([-1.9991, -2.8786, -2.9460, -3.4503, -3.4167], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0804, device='cuda:0', dtype=torch.float64)
tensor([-1.9439, -2.8499, -2.9740, -3.5084, -3.4131], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1509, device='cuda:0', dtype=torch.float64)
tensor([-1.9172, -2.8294, -2.9970, -3.5443, -3.4064], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5411, device='cuda:0', dtype=torch.float64)
tensor([-1.9384, -2.8359, -2.9939, -3.5304, -3.4002], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2526, device='cuda:0', dtype=torch.float64)
tensor([-1.9931, -2.8623, -2.9780, -3.4899, -3.3995], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0177, device='cuda:0', dtype=torch.float64)
tensor([-2.0506, -2.8863, -2.9600, -3.4417, -3.4160], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3735, device='cuda:0', dtype=torch.float64)
tensor([-2.0924, -2.8919, -2.9780, -3.4040, -3.4349], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5079, device='cuda:0', dtype=torch.float64)
tensor([-2.1019, -2.8842, -3.0003, -3.3855, -3.4562], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3379, device='cuda:0', dtype=torch.float64)
tensor([-2.0739, -2.8693, -3.0379, -3.3896, -3.4729], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2558, device='cuda:0', dtype=torch.float64)
tensor([-2.0337, -2.8442, -3.0740, -3.4062, -3.4802], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2242, device='cuda:0', dtype=torch.float64)
tensor([-1.9958, -2.8116, -3.1054, -3.4325, -3.4775], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1580, device='cuda:0', dtype=torch.float64)
tensor([-1.9695, -2.7909, -3.1159, -3.4607, -3.4725], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1868, device='cuda:0', dtype=torch.float64)
tensor([-1.9554, -2.7950, -3.1196, -3.4688, -3.4821], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1957, device='cuda:0', dtype=torch.float64)
tensor([-1.9555, -2.8096, -3.1140, -3.4665, -3.5030], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2811, device='cuda:0', dtype=torch.float64)
tensor([-1.9786, -2.8414, -3.0752, -3.4507, -3.5079], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1480, device='cuda:0', dtype=torch.float64)
tensor([-2.0138, -2.8677, -3.0347, -3.4340, -3.5075], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0202, device='cuda:0', dtype=torch.float64)
tensor([-2.0554, -2.9006, -2.9965, -3.4167, -3.5179], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2656, device='cuda:0', dtype=torch.float64)
tensor([-2.0753, -2.9119, -2.9664, -3.4237, -3.5120], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2810, device='cuda:0', dtype=torch.float64)
tensor([-2.0764, -2.9018, -2.9454, -3.4394, -3.4987], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3889, device='cuda:0', dtype=torch.float64)
tensor([-2.0550, -2.8727, -2.9395, -3.4672, -3.4784], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3088, device='cuda:0', dtype=torch.float64)
tensor([-2.0264, -2.8431, -2.9461, -3.4902, -3.4613], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5787, device='cuda:0', dtype=torch.float64)
tensor([-2.0002, -2.8103, -2.9699, -3.5099, -3.4478], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3464, device='cuda:0', dtype=torch.float64)
tensor([-1.9874, -2.8032, -2.9819, -3.5172, -3.4345], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0337, device='cuda:0', dtype=torch.float64)
tensor([-1.9655, -2.8027, -2.9905, -3.5290, -3.4265], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1665, device='cuda:0', dtype=torch.float64)
tensor([-1.9684, -2.8260, -2.9843, -3.5195, -3.4222], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2859, device='cuda:0', dtype=torch.float64)
tensor([-1.9835, -2.8535, -2.9736, -3.5037, -3.4162], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1641, device='cuda:0', dtype=torch.float64)
tensor([-2.0168, -2.8753, -2.9724, -3.4804, -3.4130], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7681, device='cuda:0', dtype=torch.float64)
tensor([-2.0444, -2.8972, -2.9748, -3.4631, -3.4099], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4647, device='cuda:0', dtype=torch.float64)
tensor([-2.0524, -2.9095, -2.9878, -3.4552, -3.4129], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1968, device='cuda:0', dtype=torch.float64)
tensor([-2.0570, -2.9167, -3.0110, -3.4460, -3.4117], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3000, device='cuda:0', dtype=torch.float64)
tensor([-2.0513, -2.9075, -3.0348, -3.4504, -3.4047], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3081, device='cuda:0', dtype=torch.float64)
tensor([-2.0452, -2.8932, -3.0549, -3.4582, -3.4074], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2851, device='cuda:0', dtype=torch.float64)
tensor([-2.0423, -2.8828, -3.0651, -3.4658, -3.4123], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6672, device='cuda:0', dtype=torch.float64)
tensor([-2.0463, -2.8823, -3.0585, -3.4579, -3.4298], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1332, device='cuda:0', dtype=torch.float64)
tensor([-2.0488, -2.8872, -3.0432, -3.4480, -3.4533], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1415, device='cuda:0', dtype=torch.float64)
tensor([-2.0489, -2.8858, -3.0317, -3.4492, -3.4716], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3669, device='cuda:0', dtype=torch.float64)
tensor([-2.0311, -2.8611, -3.0359, -3.4716, -3.4795], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4694, device='cuda:0', dtype=torch.float64)
tensor([-2.0128, -2.8459, -3.0308, -3.4953, -3.4869], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3924, device='cuda:0', dtype=torch.float64)
tensor([-2.0077, -2.8359, -3.0132, -3.5117, -3.4875], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0135, device='cuda:0', dtype=torch.float64)
tensor([-2.0006, -2.8279, -2.9985, -3.5186, -3.4792], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2313, device='cuda:0', dtype=torch.float64)
tensor([-2.0167, -2.8335, -2.9734, -3.4948, -3.4742], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4389, device='cuda:0', dtype=torch.float64)
tensor([-2.0339, -2.8392, -2.9490, -3.4697, -3.4720], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2970, device='cuda:0', dtype=torch.float64)
tensor([-2.0487, -2.8643, -2.9345, -3.4424, -3.4752], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0793, device='cuda:0', dtype=torch.float64)
tensor([-2.0557, -2.8677, -2.9349, -3.4251, -3.4740], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2046, device='cuda:0', dtype=torch.float64)
tensor([-2.0657, -2.8659, -2.9398, -3.4052, -3.4740], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2079, device='cuda:0', dtype=torch.float64)
tensor([-2.0790, -2.8581, -2.9397, -3.3912, -3.4838], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3435, device='cuda:0', dtype=torch.float64)
tensor([-2.0837, -2.8464, -2.9568, -3.3839, -3.4744], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1850, device='cuda:0', dtype=torch.float64)
tensor([-2.0741, -2.8295, -2.9751, -3.3835, -3.4677], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3546, device='cuda:0', dtype=torch.float64)
tensor([-2.0436, -2.7995, -3.0058, -3.4058, -3.4457], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6254, device='cuda:0', dtype=torch.float64)
tensor([-1.9886, -2.7606, -3.0403, -3.4566, -3.4192], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3274, device='cuda:0', dtype=torch.float64)
tensor([-1.9550, -2.7338, -3.0715, -3.5018, -3.3856], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2430, device='cuda:0', dtype=torch.float64)
tensor([-1.9542, -2.7293, -3.0709, -3.5146, -3.3620], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2961, device='cuda:0', dtype=torch.float64)
tensor([-1.9778, -2.7512, -3.0482, -3.4942, -3.3559], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8286, device='cuda:0', dtype=torch.float64)
tensor([-2.0229, -2.7845, -3.0117, -3.4571, -3.3697], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4633, device='cuda:0', dtype=torch.float64)
tensor([-2.0705, -2.8298, -2.9814, -3.4112, -3.4001], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4930, device='cuda:0', dtype=torch.float64)
tensor([-2.1037, -2.8651, -2.9840, -3.3875, -3.4307], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4497, device='cuda:0', dtype=torch.float64)
tensor([-2.1006, -2.8753, -3.0047, -3.3860, -3.4565], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1715, device='cuda:0', dtype=torch.float64)
tensor([-2.0711, -2.8732, -3.0274, -3.4022, -3.4830], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1579, device='cuda:0', dtype=torch.float64)
tensor([-2.0401, -2.8727, -3.0370, -3.4202, -3.5053], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2172, device='cuda:0', dtype=torch.float64)
tensor([-1.9974, -2.8522, -3.0576, -3.4517, -3.5188], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0612, device='cuda:0', dtype=torch.float64)
tensor([-1.9655, -2.8295, -3.0910, -3.4830, -3.5187], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0581, device='cuda:0', dtype=torch.float64)
tensor([-1.9630, -2.8225, -3.1022, -3.4898, -3.5180], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1194, device='cuda:0', dtype=torch.float64)
tensor([-1.9864, -2.8278, -3.0886, -3.4746, -3.5183], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1018, device='cuda:0', dtype=torch.float64)
tensor([-2.0130, -2.8360, -3.0616, -3.4558, -3.5207], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6345, device='cuda:0', dtype=torch.float64)
tensor([-2.0472, -2.8465, -3.0288, -3.4509, -3.5236], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3498, device='cuda:0', dtype=torch.float64)
tensor([-2.0769, -2.8560, -2.9918, -3.4422, -3.5241], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1849, device='cuda:0', dtype=torch.float64)
tensor([-2.0860, -2.8604, -2.9674, -3.4426, -3.5122], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4250, device='cuda:0', dtype=torch.float64)
tensor([-2.0609, -2.8572, -2.9550, -3.4680, -3.4996], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4467, device='cuda:0', dtype=torch.float64)
tensor([-2.0183, -2.8360, -2.9639, -3.5016, -3.4821], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1098, device='cuda:0', dtype=torch.float64)
tensor([-1.9827, -2.8174, -2.9741, -3.5251, -3.4662], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2136, device='cuda:0', dtype=torch.float64)
tensor([-1.9626, -2.8119, -2.9746, -3.5274, -3.4530], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1260, device='cuda:0', dtype=torch.float64)
tensor([-1.9580, -2.8151, -2.9819, -3.5221, -3.4381], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2079, device='cuda:0', dtype=torch.float64)
tensor([-1.9769, -2.8345, -2.9720, -3.4764, -3.4465], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3284, device='cuda:0', dtype=torch.float64)
tensor([-2.0007, -2.8560, -2.9590, -3.4269, -3.4633], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2275, device='cuda:0', dtype=torch.float64)
tensor([-2.0186, -2.8790, -2.9569, -3.3897, -3.4783], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4904, device='cuda:0', dtype=torch.float64)
tensor([-2.0337, -2.9131, -2.9369, -3.3462, -3.4971], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1414, device='cuda:0', dtype=torch.float64)
tensor([-2.0424, -2.9214, -2.9265, -3.3287, -3.5059], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1566, device='cuda:0', dtype=torch.float64)
tensor([-2.0504, -2.9119, -2.9190, -3.3172, -3.5016], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3155, device='cuda:0', dtype=torch.float64)
tensor([-2.0565, -2.8875, -2.9199, -3.3161, -3.4760], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4526, device='cuda:0', dtype=torch.float64)
tensor([-2.0445, -2.8465, -2.9514, -3.3452, -3.4303], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2971, device='cuda:0', dtype=torch.float64)
tensor([-2.0319, -2.8052, -2.9955, -3.3827, -3.3881], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2030, device='cuda:0', dtype=torch.float64)
tensor([-2.0216, -2.7802, -3.0269, -3.4173, -3.3620], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5849, device='cuda:0', dtype=torch.float64)
tensor([-2.0264, -2.7738, -3.0476, -3.4284, -3.3479], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6372, device='cuda:0', dtype=torch.float64)
tensor([-2.0468, -2.7946, -3.0542, -3.3976, -3.3660], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1669, device='cuda:0', dtype=torch.float64)
tensor([-2.0744, -2.8258, -3.0383, -3.3676, -3.3867], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0894, device='cuda:0', dtype=torch.float64)
tensor([-2.0918, -2.8534, -3.0216, -3.3441, -3.4067], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4902, device='cuda:0', dtype=torch.float64)
tensor([-2.0842, -2.8712, -3.0258, -3.3427, -3.4183], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4874, device='cuda:0', dtype=torch.float64)
tensor([-2.0595, -2.8822, -3.0387, -3.3563, -3.4233], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2459, device='cuda:0', dtype=torch.float64)
tensor([-2.0306, -2.8946, -3.0520, -3.3718, -3.4407], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2314, device='cuda:0', dtype=torch.float64)
tensor([-2.0076, -2.9204, -3.0595, -3.3762, -3.4649], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1734, device='cuda:0', dtype=torch.float64)
tensor([-1.9874, -2.9352, -3.0674, -3.3898, -3.4877], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2615, device='cuda:0', dtype=torch.float64)
tensor([-1.9920, -2.9497, -3.0586, -3.4040, -3.5111], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2986, device='cuda:0', dtype=torch.float64)
tensor([-2.0088, -2.9532, -3.0460, -3.4183, -3.5294], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4328, device='cuda:0', dtype=torch.float64)
tensor([-2.0243, -2.9509, -3.0370, -3.4322, -3.5372], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0928, device='cuda:0', dtype=torch.float64)
tensor([-2.0462, -2.9391, -3.0240, -3.4494, -3.5245], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1919, device='cuda:0', dtype=torch.float64)
tensor([-2.0559, -2.9251, -3.0142, -3.4712, -3.5172], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2024, device='cuda:0', dtype=torch.float64)
tensor([-2.0588, -2.9161, -3.0096, -3.4905, -3.5076], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4174, device='cuda:0', dtype=torch.float64)
tensor([-2.0601, -2.8972, -3.0140, -3.5103, -3.4969], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1818, device='cuda:0', dtype=torch.float64)
tensor([-2.0508, -2.8819, -3.0214, -3.5166, -3.4890], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2789, device='cuda:0', dtype=torch.float64)
tensor([-2.0430, -2.8663, -3.0228, -3.5221, -3.4758], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3437, device='cuda:0', dtype=torch.float64)
tensor([-2.0533, -2.8700, -3.0159, -3.5072, -3.4698], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2820, device='cuda:0', dtype=torch.float64)
tensor([-2.0816, -2.8756, -2.9941, -3.4788, -3.4646], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5346, device='cuda:0', dtype=torch.float64)
tensor([-2.0838, -2.8680, -2.9991, -3.4764, -3.4457], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1903, device='cuda:0', dtype=torch.float64)
tensor([-2.0848, -2.8694, -3.0039, -3.4820, -3.4233], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1901, device='cuda:0', dtype=torch.float64)
tensor([-2.0821, -2.8623, -3.0104, -3.4881, -3.4171], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4279, device='cuda:0', dtype=torch.float64)
tensor([-2.0572, -2.8541, -3.0286, -3.5011, -3.4210], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1384, device='cuda:0', dtype=torch.float64)
tensor([-2.0249, -2.8390, -3.0481, -3.5227, -3.4265], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4411, device='cuda:0', dtype=torch.float64)
tensor([-2.0083, -2.8357, -3.0530, -3.5188, -3.4437], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5374, device='cuda:0', dtype=torch.float64)
tensor([-1.9931, -2.8285, -3.0635, -3.5128, -3.4691], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2770, device='cuda:0', dtype=torch.float64)
tensor([-1.9853, -2.8176, -3.0677, -3.5055, -3.4941], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2131, device='cuda:0', dtype=torch.float64)
tensor([-2.0121, -2.8278, -3.0448, -3.4731, -3.5156], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3533, device='cuda:0', dtype=torch.float64)
tensor([-2.0423, -2.8295, -3.0264, -3.4452, -3.5186], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2806, device='cuda:0', dtype=torch.float64)
tensor([-2.0926, -2.8311, -3.0029, -3.4024, -3.5141], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4504, device='cuda:0', dtype=torch.float64)
tensor([-2.1247, -2.8130, -2.9980, -3.3729, -3.4852], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2438, device='cuda:0', dtype=torch.float64)
tensor([-2.1196, -2.7874, -3.0191, -3.3765, -3.4603], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3245, device='cuda:0', dtype=torch.float64)
tensor([-2.0900, -2.7598, -3.0566, -3.3882, -3.4315], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1342, device='cuda:0', dtype=torch.float64)
tensor([-2.0685, -2.7518, -3.0852, -3.3940, -3.4088], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3722, device='cuda:0', dtype=torch.float64)
tensor([-2.0690, -2.7657, -3.0837, -3.3785, -3.3964], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3639, device='cuda:0', dtype=torch.float64)
tensor([-2.0601, -2.7853, -3.0897, -3.3627, -3.3947], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2276, device='cuda:0', dtype=torch.float64)
tensor([-2.0354, -2.7985, -3.0932, -3.3653, -3.4029], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2429, device='cuda:0', dtype=torch.float64)
tensor([-1.9995, -2.8086, -3.0970, -3.3862, -3.4040], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3285, device='cuda:0', dtype=torch.float64)
tensor([-1.9793, -2.8097, -3.0975, -3.4130, -3.3875], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2720, device='cuda:0', dtype=torch.float64)
tensor([-1.9885, -2.8123, -3.0863, -3.4436, -3.3631], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1460, device='cuda:0', dtype=torch.float64)
tensor([-2.0213, -2.8282, -3.0550, -3.4616, -3.3547], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0251, device='cuda:0', dtype=torch.float64)
tensor([-2.0542, -2.8464, -3.0246, -3.4851, -3.3519], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3400, device='cuda:0', dtype=torch.float64)
tensor([-2.0846, -2.8703, -2.9987, -3.4965, -3.3691], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1974, device='cuda:0', dtype=torch.float64)
tensor([-2.1202, -2.9092, -2.9691, -3.4732, -3.3914], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3982, device='cuda:0', dtype=torch.float64)
tensor([-2.1381, -2.9382, -2.9531, -3.4582, -3.4178], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3173, device='cuda:0', dtype=torch.float64)
tensor([-2.1329, -2.9662, -2.9498, -3.4545, -3.4340], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5002, device='cuda:0', dtype=torch.float64)
tensor([-2.1205, -2.9647, -2.9415, -3.4601, -3.4404], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2769, device='cuda:0', dtype=torch.float64)
tensor([-2.0889, -2.9506, -2.9358, -3.4856, -3.4513], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0664, device='cuda:0', dtype=torch.float64)
tensor([-2.0453, -2.9251, -2.9452, -3.5186, -3.4525], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4201, device='cuda:0', dtype=torch.float64)
tensor([-2.0147, -2.9045, -2.9441, -3.5338, -3.4525], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0773, device='cuda:0', dtype=torch.float64)
tensor([-2.0021, -2.8859, -2.9399, -3.5391, -3.4546], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3583, device='cuda:0', dtype=torch.float64)
tensor([-2.0031, -2.8655, -2.9253, -3.5276, -3.4576], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3230, device='cuda:0', dtype=torch.float64)
tensor([-2.0068, -2.8558, -2.9131, -3.5179, -3.4631], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4087, device='cuda:0', dtype=torch.float64)
tensor([-1.9860, -2.8362, -2.9324, -3.5245, -3.4631], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3130, device='cuda:0', dtype=torch.float64)
tensor([-1.9731, -2.8227, -2.9547, -3.5261, -3.4522], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2489, device='cuda:0', dtype=torch.float64)
tensor([-1.9688, -2.8112, -2.9843, -3.5216, -3.4454], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2083, device='cuda:0', dtype=torch.float64)
tensor([-1.9763, -2.8143, -2.9997, -3.5061, -3.4470], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1070, device='cuda:0', dtype=torch.float64)
tensor([-2.0047, -2.8400, -3.0007, -3.4662, -3.4548], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4871, device='cuda:0', dtype=torch.float64)
tensor([-2.0539, -2.8804, -3.0000, -3.4165, -3.4730], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2934, device='cuda:0', dtype=torch.float64)
tensor([-2.0891, -2.9184, -2.9995, -3.3749, -3.4906], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4194, device='cuda:0', dtype=torch.float64)
tensor([-2.0839, -2.9355, -3.0063, -3.3560, -3.5065], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1815, device='cuda:0', dtype=torch.float64)
tensor([-2.0590, -2.9297, -3.0132, -3.3538, -3.5094], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2650, device='cuda:0', dtype=torch.float64)
tensor([-2.0186, -2.9101, -3.0284, -3.3680, -3.4948], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2512, device='cuda:0', dtype=torch.float64)
tensor([-1.9701, -2.8795, -3.0402, -3.3907, -3.4775], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2542, device='cuda:0', dtype=torch.float64)
tensor([-1.9354, -2.8599, -3.0449, -3.4008, -3.4567], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1103, device='cuda:0', dtype=torch.float64)
tensor([-1.9283, -2.8467, -3.0309, -3.4048, -3.4456], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0888, device='cuda:0', dtype=torch.float64)
tensor([-1.9530, -2.8574, -3.0048, -3.3819, -3.4435], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2742, device='cuda:0', dtype=torch.float64)
tensor([-1.9812, -2.8639, -2.9717, -3.3593, -3.4500], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4209, device='cuda:0', dtype=torch.float64)
tensor([-2.0153, -2.8615, -2.9543, -3.3418, -3.4467], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1784, device='cuda:0', dtype=torch.float64)
tensor([-2.0453, -2.8486, -2.9439, -3.3347, -3.4386], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3532, device='cuda:0', dtype=torch.float64)
tensor([-2.0745, -2.8363, -2.9331, -3.3314, -3.4332], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2954, device='cuda:0', dtype=torch.float64)
tensor([-2.0948, -2.8442, -2.9354, -3.3346, -3.4291], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2817, device='cuda:0', dtype=torch.float64)
tensor([-2.0985, -2.8476, -2.9540, -3.3536, -3.4086], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2889, device='cuda:0', dtype=torch.float64)
tensor([-2.0892, -2.8332, -2.9880, -3.3698, -3.3802], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4469, device='cuda:0', dtype=torch.float64)
tensor([-2.0648, -2.8158, -3.0250, -3.3999, -3.3624], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3434, device='cuda:0', dtype=torch.float64)
tensor([-2.0495, -2.8153, -3.0521, -3.4300, -3.3503], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3238, device='cuda:0', dtype=torch.float64)
tensor([-2.0424, -2.8169, -3.0652, -3.4481, -3.3649], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0790, device='cuda:0', dtype=torch.float64)
tensor([-2.0424, -2.8224, -3.0744, -3.4524, -3.3787], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2597, device='cuda:0', dtype=torch.float64)
tensor([-2.0319, -2.8174, -3.0898, -3.4659, -3.3801], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5062, device='cuda:0', dtype=torch.float64)
tensor([-2.0378, -2.8157, -3.0803, -3.4734, -3.3910], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3168, device='cuda:0', dtype=torch.float64)
tensor([-2.0619, -2.8230, -3.0636, -3.4692, -3.4103], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1345, device='cuda:0', dtype=torch.float64)
tensor([-2.0928, -2.8404, -3.0350, -3.4526, -3.4307], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4529, device='cuda:0', dtype=torch.float64)
tensor([-2.1100, -2.8591, -3.0026, -3.4456, -3.4376], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5561, device='cuda:0', dtype=torch.float64)
tensor([-2.1108, -2.8674, -2.9813, -3.4463, -3.4463], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2975, device='cuda:0', dtype=torch.float64)
tensor([-2.1048, -2.8727, -2.9601, -3.4502, -3.4476], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3402, device='cuda:0', dtype=torch.float64)
tensor([-2.0960, -2.8710, -2.9490, -3.4463, -3.4451], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2363, device='cuda:0', dtype=torch.float64)
tensor([-2.0726, -2.8562, -2.9621, -3.4457, -3.4283], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1967, device='cuda:0', dtype=torch.float64)
tensor([-2.0570, -2.8474, -2.9731, -3.4351, -3.4242], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5451, device='cuda:0', dtype=torch.float64)
tensor([-2.0399, -2.8516, -2.9996, -3.4239, -3.4330], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2330, device='cuda:0', dtype=torch.float64)
tensor([-2.0363, -2.8580, -3.0239, -3.4070, -3.4437], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2715, device='cuda:0', dtype=torch.float64)
tensor([-2.0535, -2.8828, -3.0289, -3.3837, -3.4636], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2673, device='cuda:0', dtype=torch.float64)
tensor([-2.0639, -2.9022, -3.0241, -3.3742, -3.4670], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2255, device='cuda:0', dtype=torch.float64)
tensor([-2.0716, -2.9085, -3.0214, -3.3720, -3.4686], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3418, device='cuda:0', dtype=torch.float64)
tensor([-2.0802, -2.9178, -3.0216, -3.3733, -3.4812], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1225, device='cuda:0', dtype=torch.float64)
tensor([-2.0740, -2.9080, -3.0094, -3.3896, -3.4825], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1368, device='cuda:0', dtype=torch.float64)
tensor([-2.0654, -2.8902, -3.0079, -3.4087, -3.4764], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1060, device='cuda:0', dtype=torch.float64)
tensor([-2.0453, -2.8611, -3.0040, -3.4495, -3.4602], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4310, device='cuda:0', dtype=torch.float64)
tensor([-2.0197, -2.8215, -2.9948, -3.4889, -3.4423], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1552, device='cuda:0', dtype=torch.float64)
tensor([-2.0203, -2.7907, -2.9885, -3.5032, -3.4338], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6210, device='cuda:0', dtype=torch.float64)
tensor([-2.0301, -2.7756, -2.9794, -3.5020, -3.4432], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6547, device='cuda:0', dtype=torch.float64)
tensor([-2.0612, -2.7892, -2.9589, -3.4676, -3.4552], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3834, device='cuda:0', dtype=torch.float64)
tensor([-2.0890, -2.8239, -2.9433, -3.4214, -3.4567], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0893, device='cuda:0', dtype=torch.float64)
tensor([-2.1026, -2.8493, -2.9491, -3.3958, -3.4529], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7056, device='cuda:0', dtype=torch.float64)
tensor([-2.0904, -2.8590, -2.9847, -3.3995, -3.4364], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5598, device='cuda:0', dtype=torch.float64)
tensor([-2.0538, -2.8412, -3.0584, -3.4228, -3.4177], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5489, device='cuda:0', dtype=torch.float64)
tensor([-2.0119, -2.8262, -3.1370, -3.4417, -3.4083], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2729, device='cuda:0', dtype=torch.float64)
tensor([-1.9773, -2.8022, -3.1977, -3.4541, -3.3978], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3723, device='cuda:0', dtype=torch.float64)
tensor([-1.9679, -2.7966, -3.2213, -3.4538, -3.3897], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2175, device='cuda:0', dtype=torch.float64)
tensor([-1.9866, -2.7922, -3.2289, -3.4400, -3.3853], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2322, device='cuda:0', dtype=torch.float64)
tensor([-2.0244, -2.7847, -3.2140, -3.4066, -3.3924], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1581, device='cuda:0', dtype=torch.float64)
tensor([-2.0666, -2.7898, -3.1810, -3.3716, -3.4084], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2832, device='cuda:0', dtype=torch.float64)
tensor([-2.1099, -2.8124, -3.1308, -3.3364, -3.4290], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1263, device='cuda:0', dtype=torch.float64)
tensor([-2.1316, -2.8342, -3.0842, -3.3135, -3.4446], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3833, device='cuda:0', dtype=torch.float64)
tensor([-2.1422, -2.8351, -3.0564, -3.3040, -3.4521], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3012, device='cuda:0', dtype=torch.float64)
tensor([-2.1422, -2.8275, -3.0326, -3.3075, -3.4487], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2277, device='cuda:0', dtype=torch.float64)
tensor([-2.1017, -2.8072, -3.0449, -3.3496, -3.4282], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0838, device='cuda:0', dtype=torch.float64)
tensor([-2.0580, -2.7978, -3.0497, -3.4010, -3.4124], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8944, device='cuda:0', dtype=torch.float64)
tensor([-2.0117, -2.7960, -3.0371, -3.4652, -3.4068], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3416, device='cuda:0', dtype=torch.float64)
tensor([-2.0067, -2.7987, -3.0187, -3.5030, -3.4009], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3884, device='cuda:0', dtype=torch.float64)
tensor([-2.0234, -2.8058, -2.9961, -3.5186, -3.4078], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3301, device='cuda:0', dtype=torch.float64)
tensor([-2.0594, -2.8291, -2.9588, -3.5169, -3.4227], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3507, device='cuda:0', dtype=torch.float64)
tensor([-2.0809, -2.8582, -2.9271, -3.5084, -3.4469], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1545, device='cuda:0', dtype=torch.float64)
tensor([-2.0958, -2.8760, -2.9063, -3.4969, -3.4698], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3202, device='cuda:0', dtype=torch.float64)
tensor([-2.1012, -2.8895, -2.8920, -3.4913, -3.4757], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1699, device='cuda:0', dtype=torch.float64)
tensor([-2.0785, -2.8824, -2.8892, -3.5121, -3.4767], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3907, device='cuda:0', dtype=torch.float64)
tensor([-2.0543, -2.8771, -2.8868, -3.5383, -3.4779], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0696, device='cuda:0', dtype=torch.float64)
tensor([-2.0435, -2.8785, -2.8858, -3.5558, -3.4729], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1590, device='cuda:0', dtype=torch.float64)
tensor([-2.0329, -2.8808, -2.8940, -3.5705, -3.4636], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4457, device='cuda:0', dtype=torch.float64)
tensor([-2.0334, -2.8844, -2.9170, -3.5655, -3.4483], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0315, device='cuda:0', dtype=torch.float64)
tensor([-2.0364, -2.8926, -2.9411, -3.5470, -3.4376], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3879, device='cuda:0', dtype=torch.float64)
tensor([-2.0437, -2.9020, -2.9637, -3.5222, -3.4376], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3497, device='cuda:0', dtype=torch.float64)
tensor([-2.0498, -2.9107, -2.9864, -3.5032, -3.4420], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0935, device='cuda:0', dtype=torch.float64)
tensor([-2.0605, -2.9069, -3.0131, -3.4868, -3.4543], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3480, device='cuda:0', dtype=torch.float64)
tensor([-2.0717, -2.8898, -3.0424, -3.4700, -3.4734], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2591, device='cuda:0', dtype=torch.float64)
tensor([-2.0650, -2.8556, -3.0869, -3.4672, -3.4870], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1540, device='cuda:0', dtype=torch.float64)
tensor([-2.0396, -2.8258, -3.1275, -3.4821, -3.5004], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3397, device='cuda:0', dtype=torch.float64)
tensor([-2.0060, -2.7946, -3.1595, -3.5026, -3.5122], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3166, device='cuda:0', dtype=torch.float64)
tensor([-1.9948, -2.7962, -3.1581, -3.5008, -3.5168], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2681, device='cuda:0', dtype=torch.float64)
tensor([-2.0162, -2.8157, -3.1307, -3.4739, -3.5262], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0806, device='cuda:0', dtype=torch.float64)
tensor([-2.0413, -2.8397, -3.0984, -3.4473, -3.5455], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2944, device='cuda:0', dtype=torch.float64)
tensor([-2.0859, -2.8485, -3.0631, -3.4219, -3.5509], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3492, device='cuda:0', dtype=torch.float64)
tensor([-2.1361, -2.8456, -3.0433, -3.4069, -3.5391], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1770, device='cuda:0', dtype=torch.float64)
tensor([-2.1593, -2.8311, -3.0552, -3.3975, -3.5156], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2200, device='cuda:0', dtype=torch.float64)
tensor([-2.1677, -2.8100, -3.0710, -3.4050, -3.4760], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2789, device='cuda:0', dtype=torch.float64)
tensor([-2.1603, -2.7992, -3.0898, -3.4143, -3.4260], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2547, device='cuda:0', dtype=torch.float64)
tensor([-2.1194, -2.7897, -3.1118, -3.4259, -3.3880], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0927, device='cuda:0', dtype=torch.float64)
tensor([-2.0802, -2.7887, -3.1337, -3.4210, -3.3647], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3782, device='cuda:0', dtype=torch.float64)
tensor([-2.0456, -2.7987, -3.1399, -3.4121, -3.3727], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3883, device='cuda:0', dtype=torch.float64)
tensor([-2.0218, -2.8161, -3.1323, -3.4060, -3.3993], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3104, device='cuda:0', dtype=torch.float64)
tensor([-2.0047, -2.8435, -3.1207, -3.4068, -3.4174], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5746, device='cuda:0', dtype=torch.float64)
tensor([-1.9919, -2.8672, -3.1001, -3.4116, -3.4389], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2753, device='cuda:0', dtype=torch.float64)
tensor([-1.9761, -2.8916, -3.0747, -3.4257, -3.4461], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3644, device='cuda:0', dtype=torch.float64)
tensor([-1.9615, -2.9112, -3.0475, -3.4473, -3.4504], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3442, device='cuda:0', dtype=torch.float64)
tensor([-1.9646, -2.9388, -3.0241, -3.4563, -3.4524], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8785, device='cuda:0', dtype=torch.float64)
tensor([-1.9805, -2.9730, -2.9935, -3.4494, -3.4539], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4119, device='cuda:0', dtype=torch.float64)
tensor([-2.0100, -2.9982, -2.9754, -3.4326, -3.4521], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2663, device='cuda:0', dtype=torch.float64)
tensor([-2.0680, -3.0143, -2.9524, -3.3948, -3.4442], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3659, device='cuda:0', dtype=torch.float64)
tensor([-2.1351, -3.0377, -2.9265, -3.3553, -3.4494], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4486, device='cuda:0', dtype=torch.float64)
tensor([-2.1994, -3.0483, -2.9056, -3.3248, -3.4613], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3153, device='cuda:0', dtype=torch.float64)
tensor([-2.2094, -3.0202, -2.9113, -3.3338, -3.4583], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6745, device='cuda:0', dtype=torch.float64)
tensor([-2.1687, -2.9604, -2.9336, -3.3982, -3.4311], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3925, device='cuda:0', dtype=torch.float64)
tensor([-2.1070, -2.8922, -2.9681, -3.4761, -3.3881], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3482, device='cuda:0', dtype=torch.float64)
tensor([-2.0401, -2.8355, -3.0000, -3.5740, -3.3490], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4009, device='cuda:0', dtype=torch.float64)
tensor([-1.9998, -2.8014, -3.0213, -3.6553, -3.3296], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5586, device='cuda:0', dtype=torch.float64)
tensor([-2.0037, -2.8033, -3.0043, -3.6959, -3.3303], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3596, device='cuda:0', dtype=torch.float64)
tensor([-2.0267, -2.8219, -2.9769, -3.7120, -3.3548], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3407, device='cuda:0', dtype=torch.float64)
tensor([-2.0590, -2.8481, -2.9509, -3.7115, -3.3783], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3730, device='cuda:0', dtype=torch.float64)
tensor([-2.0838, -2.8806, -2.9325, -3.7065, -3.4055], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1029, device='cuda:0', dtype=torch.float64)
tensor([-2.1058, -2.9070, -2.9298, -3.6865, -3.4287], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4149, device='cuda:0', dtype=torch.float64)
tensor([-2.0973, -2.9089, -2.9514, -3.6703, -3.4507], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4213, device='cuda:0', dtype=torch.float64)
tensor([-2.0992, -2.9018, -2.9754, -3.6397, -3.4608], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0707, device='cuda:0', dtype=torch.float64)
tensor([-2.0891, -2.8949, -3.0042, -3.6059, -3.4723], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2594, device='cuda:0', dtype=torch.float64)
tensor([-2.0773, -2.8919, -3.0372, -3.5699, -3.4803], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4887, device='cuda:0', dtype=torch.float64)
tensor([-2.0719, -2.8863, -3.0679, -3.5316, -3.4698], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4477, device='cuda:0', dtype=torch.float64)
tensor([-2.0878, -2.8871, -3.0761, -3.4737, -3.4632], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0843, device='cuda:0', dtype=torch.float64)
tensor([-2.0944, -2.8807, -3.0802, -3.4247, -3.4623], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4173, device='cuda:0', dtype=torch.float64)
tensor([-2.0959, -2.8783, -3.0719, -3.3916, -3.4538], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0908, device='cuda:0', dtype=torch.float64)
tensor([-2.0895, -2.8701, -3.0576, -3.3631, -3.4441], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3261, device='cuda:0', dtype=torch.float64)
tensor([-2.0810, -2.8596, -3.0270, -3.3461, -3.4393], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3512, device='cuda:0', dtype=torch.float64)
tensor([-2.0803, -2.8647, -2.9925, -3.3402, -3.4337], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3553, device='cuda:0', dtype=torch.float64)
tensor([-2.0614, -2.8695, -2.9674, -3.3511, -3.4420], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1088, device='cuda:0', dtype=torch.float64)
tensor([-2.0259, -2.8622, -2.9656, -3.3855, -3.4425], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4535, device='cuda:0', dtype=torch.float64)
tensor([-1.9710, -2.8406, -2.9758, -3.4295, -3.4348], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4871, device='cuda:0', dtype=torch.float64)
tensor([-1.9605, -2.8350, -2.9764, -3.4481, -3.4253], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3824, device='cuda:0', dtype=torch.float64)
tensor([-1.9649, -2.8306, -2.9766, -3.4627, -3.4232], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0093, device='cuda:0', dtype=torch.float64)
tensor([-1.9891, -2.8248, -2.9821, -3.4578, -3.4313], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3977, device='cuda:0', dtype=torch.float64)
tensor([-2.0301, -2.8143, -2.9891, -3.4436, -3.4393], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2076, device='cuda:0', dtype=torch.float64)
tensor([-2.0854, -2.8147, -2.9955, -3.4214, -3.4488], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2443, device='cuda:0', dtype=torch.float64)
tensor([-2.1390, -2.8189, -3.0105, -3.3979, -3.4645], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1242, device='cuda:0', dtype=torch.float64)
tensor([-2.1661, -2.8348, -3.0294, -3.3903, -3.4950], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3844, device='cuda:0', dtype=torch.float64)
tensor([-2.1641, -2.8633, -3.0555, -3.4031, -3.5134], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2852, device='cuda:0', dtype=torch.float64)
tensor([-2.1362, -2.8909, -3.0776, -3.4325, -3.5218], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7097, device='cuda:0', dtype=torch.float64)
tensor([-2.0757, -2.9076, -3.1111, -3.4652, -3.5184], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1592, device='cuda:0', dtype=torch.float64)
tensor([-2.0027, -2.9250, -3.1625, -3.5055, -3.5070], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4619, device='cuda:0', dtype=torch.float64)
tensor([-1.9628, -2.9423, -3.2025, -3.5393, -3.4842], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3978, device='cuda:0', dtype=torch.float64)
tensor([-1.9636, -2.9792, -3.2028, -3.5291, -3.4723], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2866, device='cuda:0', dtype=torch.float64)
tensor([-1.9845, -3.0198, -3.1717, -3.4936, -3.4671], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2022, device='cuda:0', dtype=torch.float64)
tensor([-2.0123, -3.0602, -3.1246, -3.4663, -3.4569], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2436, device='cuda:0', dtype=torch.float64)
tensor([-2.0601, -3.0914, -3.0750, -3.4401, -3.4437], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5356, device='cuda:0', dtype=torch.float64)
tensor([-2.0843, -3.0925, -3.0405, -3.4357, -3.4290], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2134, device='cuda:0', dtype=torch.float64)
tensor([-2.0796, -3.0886, -3.0251, -3.4487, -3.4126], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3021, device='cuda:0', dtype=torch.float64)
tensor([-2.0622, -3.0556, -3.0121, -3.4809, -3.3975], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3825, device='cuda:0', dtype=torch.float64)
tensor([-2.0277, -3.0136, -3.0143, -3.5224, -3.3954], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1739, device='cuda:0', dtype=torch.float64)
tensor([-2.0185, -2.9846, -3.0195, -3.5516, -3.4016], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2505, device='cuda:0', dtype=torch.float64)
tensor([-2.0178, -2.9543, -3.0202, -3.5770, -3.4097], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1486, device='cuda:0', dtype=torch.float64)
tensor([-2.0357, -2.9424, -3.0022, -3.5834, -3.4270], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5548, device='cuda:0', dtype=torch.float64)
tensor([-2.0661, -2.9416, -2.9694, -3.5566, -3.4535], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4257, device='cuda:0', dtype=torch.float64)
tensor([-2.1277, -2.9489, -2.9179, -3.5014, -3.4844], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1845, device='cuda:0', dtype=torch.float64)
tensor([-2.1683, -2.9539, -2.8730, -3.4699, -3.5095], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2939, device='cuda:0', dtype=torch.float64)
tensor([-2.1882, -2.9578, -2.8462, -3.4434, -3.5243], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4030, device='cuda:0', dtype=torch.float64)
tensor([-2.1723, -2.9402, -2.8394, -3.4331, -3.5332], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3486, device='cuda:0', dtype=torch.float64)
tensor([-2.1182, -2.8951, -2.8718, -3.4503, -3.5258], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4469, device='cuda:0', dtype=torch.float64)
tensor([-2.0805, -2.8494, -2.9081, -3.4459, -3.5119], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3150, device='cuda:0', dtype=torch.float64)
tensor([-2.0342, -2.8105, -2.9427, -3.4543, -3.4835], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2126, device='cuda:0', dtype=torch.float64)
tensor([-1.9952, -2.7827, -2.9878, -3.4604, -3.4631], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4620, device='cuda:0', dtype=torch.float64)
tensor([-1.9541, -2.7715, -3.0352, -3.4777, -3.4455], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2375, device='cuda:0', dtype=torch.float64)
tensor([-1.9413, -2.7781, -3.0623, -3.4689, -3.4519], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2610, device='cuda:0', dtype=torch.float64)
tensor([-1.9678, -2.8042, -3.0587, -3.4364, -3.4615], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2602, device='cuda:0', dtype=torch.float64)
tensor([-2.0230, -2.8385, -3.0456, -3.3846, -3.4739], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4176, device='cuda:0', dtype=torch.float64)
tensor([-2.1067, -2.8785, -3.0254, -3.3208, -3.4891], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9783, device='cuda:0', dtype=torch.float64)
tensor([-2.1687, -2.9082, -3.0112, -3.2855, -3.5025], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1818, device='cuda:0', dtype=torch.float64)
tensor([-2.2048, -2.9244, -3.0210, -3.2639, -3.5045], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2787, device='cuda:0', dtype=torch.float64)
tensor([-2.2052, -2.9140, -3.0492, -3.2707, -3.4894], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4057, device='cuda:0', dtype=torch.float64)
tensor([-2.1553, -2.8851, -3.1061, -3.3006, -3.4688], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2576, device='cuda:0', dtype=torch.float64)
tensor([-2.0877, -2.8427, -3.1544, -3.3491, -3.4586], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3013, device='cuda:0', dtype=torch.float64)
tensor([-2.0504, -2.8157, -3.1887, -3.3886, -3.4591], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5077, device='cuda:0', dtype=torch.float64)
tensor([-2.0575, -2.8132, -3.1794, -3.3919, -3.4684], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7085, device='cuda:0', dtype=torch.float64)
tensor([-2.0911, -2.8332, -3.1443, -3.3621, -3.4775], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2852, device='cuda:0', dtype=torch.float64)
tensor([-2.1432, -2.8650, -3.0993, -3.3295, -3.4951], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1017, device='cuda:0', dtype=torch.float64)
tensor([-2.1740, -2.9012, -3.0577, -3.3200, -3.5191], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3198, device='cuda:0', dtype=torch.float64)
tensor([-2.1667, -2.9351, -3.0266, -3.3424, -3.5387], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5680, device='cuda:0', dtype=torch.float64)
tensor([-2.1255, -2.9404, -3.0029, -3.3993, -3.5425], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5828, device='cuda:0', dtype=torch.float64)
tensor([-2.0474, -2.9237, -3.0103, -3.4884, -3.5242], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6315, device='cuda:0', dtype=torch.float64)
tensor([-1.9912, -2.9235, -3.0144, -3.5775, -3.5121], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3461, device='cuda:0', dtype=torch.float64)
tensor([-1.9556, -2.9258, -3.0188, -3.6532, -3.5028], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2998, device='cuda:0', dtype=torch.float64)
tensor([-1.9706, -2.9380, -3.0177, -3.6738, -3.5014], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4644, device='cuda:0', dtype=torch.float64)
tensor([-1.9982, -2.9519, -3.0077, -3.6706, -3.5080], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3363, device='cuda:0', dtype=torch.float64)
tensor([-2.0554, -2.9738, -2.9943, -3.6317, -3.5016], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5674, device='cuda:0', dtype=torch.float64)
tensor([-2.1279, -2.9964, -2.9907, -3.5650, -3.5003], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4712, device='cuda:0', dtype=torch.float64)
tensor([-2.1702, -3.0068, -3.0065, -3.5285, -3.4937], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0761, device='cuda:0', dtype=torch.float64)
tensor([-2.1825, -2.9952, -3.0297, -3.5079, -3.4768], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3099, device='cuda:0', dtype=torch.float64)
tensor([-2.1487, -2.9582, -3.0765, -3.5190, -3.4543], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3566, device='cuda:0', dtype=torch.float64)
tensor([-2.0833, -2.9044, -3.1291, -3.5443, -3.4320], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0658, device='cuda:0', dtype=torch.float64)
tensor([-2.0192, -2.8525, -3.1682, -3.5743, -3.4193], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2561, device='cuda:0', dtype=torch.float64)
tensor([-1.9601, -2.8144, -3.1956, -3.6024, -3.4146], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0977, device='cuda:0', dtype=torch.float64)
tensor([-1.9443, -2.7963, -3.1973, -3.6076, -3.4193], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1052, device='cuda:0', dtype=torch.float64)
tensor([-1.9688, -2.7997, -3.1591, -3.5745, -3.4408], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3546, device='cuda:0', dtype=torch.float64)
tensor([-2.0075, -2.8102, -3.1314, -3.5299, -3.4599], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4449, device='cuda:0', dtype=torch.float64)
tensor([-2.0736, -2.8385, -3.0837, -3.4573, -3.4784], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1872, device='cuda:0', dtype=torch.float64)
tensor([-2.1294, -2.8657, -3.0439, -3.3804, -3.4999], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3378, device='cuda:0', dtype=torch.float64)
tensor([-2.1875, -2.8911, -3.0022, -3.2975, -3.5198], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4291, device='cuda:0', dtype=torch.float64)
tensor([-2.2129, -2.9052, -2.9726, -3.2404, -3.5333], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1900, device='cuda:0', dtype=torch.float64)
tensor([-2.1973, -2.9143, -2.9697, -3.2108, -3.5397], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0662, device='cuda:0', dtype=torch.float64)
tensor([-2.1479, -2.9100, -2.9792, -3.2166, -3.5350], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3016, device='cuda:0', dtype=torch.float64)
tensor([-2.0855, -2.8908, -3.0123, -3.2624, -3.5156], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3628, device='cuda:0', dtype=torch.float64)
tensor([-2.0316, -2.8673, -3.0402, -3.3106, -3.4917], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2060, device='cuda:0', dtype=torch.float64)
tensor([-1.9870, -2.8541, -3.0678, -3.3670, -3.4662], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3816, device='cuda:0', dtype=torch.float64)
tensor([-1.9765, -2.8581, -3.0698, -3.3955, -3.4499], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2809, device='cuda:0', dtype=torch.float64)
tensor([-1.9981, -2.8871, -3.0437, -3.4087, -3.4474], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2820, device='cuda:0', dtype=torch.float64)
tensor([-2.0407, -2.9215, -3.0192, -3.4008, -3.4421], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1766, device='cuda:0', dtype=torch.float64)
tensor([-2.0733, -2.9535, -3.0100, -3.3939, -3.4438], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3159, device='cuda:0', dtype=torch.float64)
tensor([-2.0904, -2.9741, -3.0009, -3.4050, -3.4535], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2683, device='cuda:0', dtype=torch.float64)
tensor([-2.1121, -2.9834, -2.9912, -3.4229, -3.4614], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2001, device='cuda:0', dtype=torch.float64)
tensor([-2.1203, -2.9742, -2.9878, -3.4559, -3.4614], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3229, device='cuda:0', dtype=torch.float64)
tensor([-2.0991, -2.9453, -2.9927, -3.4971, -3.4564], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2245, device='cuda:0', dtype=torch.float64)
tensor([-2.0721, -2.9029, -2.9996, -3.5377, -3.4475], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2729, device='cuda:0', dtype=torch.float64)
tensor([-2.0483, -2.8692, -3.0158, -3.5700, -3.4376], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2470, device='cuda:0', dtype=torch.float64)
tensor([-2.0455, -2.8511, -3.0372, -3.5842, -3.4269], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2645, device='cuda:0', dtype=torch.float64)
tensor([-2.0500, -2.8499, -3.0442, -3.5817, -3.4320], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3606, device='cuda:0', dtype=torch.float64)
tensor([-2.0722, -2.8687, -3.0289, -3.5508, -3.4384], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1552, device='cuda:0', dtype=torch.float64)
tensor([-2.1018, -2.8860, -3.0204, -3.5148, -3.4503], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3066, device='cuda:0', dtype=torch.float64)
tensor([-2.1268, -2.9097, -3.0180, -3.4812, -3.4583], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1803, device='cuda:0', dtype=torch.float64)
tensor([-2.1383, -2.9132, -3.0203, -3.4633, -3.4721], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4830, device='cuda:0', dtype=torch.float64)
tensor([-2.1641, -2.9295, -3.0064, -3.4365, -3.4900], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4168, device='cuda:0', dtype=torch.float64)
tensor([-2.1941, -2.9367, -3.0141, -3.4222, -3.4944], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0335, device='cuda:0', dtype=torch.float64)
tensor([-2.1936, -2.9402, -3.0268, -3.4270, -3.4953], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4286, device='cuda:0', dtype=torch.float64)
tensor([-2.1721, -2.9413, -3.0386, -3.4426, -3.4857], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3474, device='cuda:0', dtype=torch.float64)
tensor([-2.1527, -2.9461, -3.0298, -3.4521, -3.4921], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3722, device='cuda:0', dtype=torch.float64)
tensor([-2.1299, -2.9408, -3.0127, -3.4700, -3.4876], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2931, device='cuda:0', dtype=torch.float64)
tensor([-2.0977, -2.9106, -3.0026, -3.4930, -3.4822], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5506, device='cuda:0', dtype=torch.float64)
tensor([-2.0822, -2.8717, -2.9956, -3.5021, -3.4704], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2646, device='cuda:0', dtype=torch.float64)
tensor([-2.0786, -2.8377, -2.9858, -3.4974, -3.4576], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1254, device='cuda:0', dtype=torch.float64)
tensor([-2.0922, -2.8171, -2.9660, -3.4865, -3.4382], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5119, device='cuda:0', dtype=torch.float64)
tensor([-2.1008, -2.8082, -2.9507, -3.4725, -3.4196], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2401, device='cuda:0', dtype=torch.float64)
tensor([-2.1052, -2.8041, -2.9401, -3.4606, -3.4037], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2204, device='cuda:0', dtype=torch.float64)
tensor([-2.1034, -2.8217, -2.9433, -3.4507, -3.3885], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4611, device='cuda:0', dtype=torch.float64)
tensor([-2.0995, -2.8441, -2.9621, -3.4567, -3.3713], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1430, device='cuda:0', dtype=torch.float64)
tensor([-2.0923, -2.8673, -2.9778, -3.4626, -3.3711], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4780, device='cuda:0', dtype=torch.float64)
tensor([-2.0857, -2.8798, -2.9990, -3.4744, -3.3838], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4654, device='cuda:0', dtype=torch.float64)
tensor([-2.0860, -2.8965, -3.0096, -3.4789, -3.4090], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2787, device='cuda:0', dtype=torch.float64)
tensor([-2.0927, -2.9084, -3.0168, -3.4659, -3.4439], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2767, device='cuda:0', dtype=torch.float64)
tensor([-2.1176, -2.9383, -2.9974, -3.4401, -3.4771], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3049, device='cuda:0', dtype=torch.float64)
tensor([-2.1389, -2.9647, -2.9827, -3.4210, -3.5101], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2683, device='cuda:0', dtype=torch.float64)
tensor([-2.1350, -2.9717, -2.9923, -3.4215, -3.5330], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4919, device='cuda:0', dtype=torch.float64)
tensor([-2.1040, -2.9540, -3.0341, -3.4577, -3.5496], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1255, device='cuda:0', dtype=torch.float64)
tensor([-2.0577, -2.9156, -3.0952, -3.5061, -3.5605], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1461, device='cuda:0', dtype=torch.float64)
tensor([-2.0155, -2.8712, -3.1489, -3.5548, -3.5600], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4243, device='cuda:0', dtype=torch.float64)
tensor([-2.0000, -2.8400, -3.1845, -3.5805, -3.5715], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2370, device='cuda:0', dtype=torch.float64)
tensor([-2.0140, -2.8225, -3.2104, -3.5918, -3.5671], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3393, device='cuda:0', dtype=torch.float64)
tensor([-2.0488, -2.8304, -3.2062, -3.5788, -3.5602], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2466, device='cuda:0', dtype=torch.float64)
tensor([-2.1048, -2.8462, -3.1809, -3.5463, -3.5504], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5033, device='cuda:0', dtype=torch.float64)
tensor([-2.1514, -2.8784, -3.1642, -3.4924, -3.5358], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3137, device='cuda:0', dtype=torch.float64)
tensor([-2.1810, -2.9109, -3.1605, -3.4547, -3.5120], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0185, device='cuda:0', dtype=torch.float64)
tensor([-2.2049, -2.9376, -3.1553, -3.4173, -3.4830], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3123, device='cuda:0', dtype=torch.float64)
tensor([-2.2025, -2.9688, -3.1461, -3.4115, -3.4509], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1223, device='cuda:0', dtype=torch.float64)
tensor([-2.1591, -2.9753, -3.1466, -3.4270, -3.4240], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1558, device='cuda:0', dtype=torch.float64)
tensor([-2.1204, -2.9622, -3.1470, -3.4453, -3.3998], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9669, device='cuda:0', dtype=torch.float64)
tensor([-2.0647, -2.9433, -3.1489, -3.4717, -3.3847], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4267, device='cuda:0', dtype=torch.float64)
tensor([-2.0644, -2.9415, -3.1305, -3.4618, -3.3782], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4004, device='cuda:0', dtype=torch.float64)
tensor([-2.0771, -2.9447, -3.0992, -3.4538, -3.3779], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3528, device='cuda:0', dtype=torch.float64)
tensor([-2.1014, -2.9399, -3.0587, -3.4464, -3.3984], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1001, device='cuda:0', dtype=torch.float64)
tensor([-2.1238, -2.9337, -3.0180, -3.4455, -3.4264], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3770, device='cuda:0', dtype=torch.float64)
tensor([-2.1337, -2.9188, -2.9978, -3.4472, -3.4474], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2745, device='cuda:0', dtype=torch.float64)
tensor([-2.1319, -2.8886, -2.9940, -3.4625, -3.4585], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4947, device='cuda:0', dtype=torch.float64)
tensor([-2.1196, -2.8674, -3.0072, -3.4863, -3.4520], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1486, device='cuda:0', dtype=torch.float64)
tensor([-2.1107, -2.8555, -3.0153, -3.4931, -3.4485], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2622, device='cuda:0', dtype=torch.float64)
tensor([-2.1062, -2.8540, -3.0248, -3.4998, -3.4424], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0767, device='cuda:0', dtype=torch.float64)
tensor([-2.1014, -2.8713, -3.0289, -3.5055, -3.4396], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1181, device='cuda:0', dtype=torch.float64)
tensor([-2.0949, -2.8864, -3.0418, -3.5150, -3.4354], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1418, device='cuda:0', dtype=torch.float64)
tensor([-2.0927, -2.9011, -3.0464, -3.5259, -3.4403], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3269, device='cuda:0', dtype=torch.float64)
tensor([-2.0943, -2.9162, -3.0445, -3.5202, -3.4451], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2121, device='cuda:0', dtype=torch.float64)
tensor([-2.1016, -2.9332, -3.0382, -3.4996, -3.4511], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0949, device='cuda:0', dtype=torch.float64)
tensor([-2.1005, -2.9336, -3.0321, -3.4620, -3.4646], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3301, device='cuda:0', dtype=torch.float64)
tensor([-2.0965, -2.9425, -3.0351, -3.4221, -3.4598], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1996, device='cuda:0', dtype=torch.float64)
tensor([-2.1126, -2.9561, -3.0301, -3.3750, -3.4524], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6105, device='cuda:0', dtype=torch.float64)
tensor([-2.1252, -2.9470, -3.0276, -3.3457, -3.4353], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2322, device='cuda:0', dtype=torch.float64)
tensor([-2.1193, -2.9248, -3.0463, -3.3463, -3.4013], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4473, device='cuda:0', dtype=torch.float64)
tensor([-2.0898, -2.8926, -3.0850, -3.3614, -3.3797], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4558, device='cuda:0', dtype=torch.float64)
tensor([-2.0638, -2.8774, -3.1017, -3.3721, -3.3761], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0853, device='cuda:0', dtype=torch.float64)
tensor([-2.0623, -2.8633, -3.1103, -3.3682, -3.3776], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5698, device='cuda:0', dtype=torch.float64)
tensor([-2.0709, -2.8637, -3.1138, -3.3647, -3.3889], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1465, device='cuda:0', dtype=torch.float64)
tensor([-2.0826, -2.8586, -3.1153, -3.3733, -3.4056], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3542, device='cuda:0', dtype=torch.float64)
tensor([-2.1021, -2.8491, -3.0885, -3.3762, -3.4244], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3639, device='cuda:0', dtype=torch.float64)
tensor([-2.1154, -2.8535, -3.0622, -3.3802, -3.4574], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3196, device='cuda:0', dtype=torch.float64)
tensor([-2.1113, -2.8372, -3.0623, -3.4038, -3.4868], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2758, device='cuda:0', dtype=torch.float64)
tensor([-2.1058, -2.8277, -3.0495, -3.4275, -3.5165], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6160, device='cuda:0', dtype=torch.float64)
tensor([-2.1072, -2.8221, -3.0313, -3.4295, -3.5380], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0777, device='cuda:0', dtype=torch.float64)
tensor([-2.1086, -2.8287, -3.0279, -3.4246, -3.5353], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1820, device='cuda:0', dtype=torch.float64)
tensor([-2.1109, -2.8306, -3.0386, -3.4342, -3.5227], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4176, device='cuda:0', dtype=torch.float64)
tensor([-2.1214, -2.8355, -3.0410, -3.4435, -3.5118], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3692, device='cuda:0', dtype=torch.float64)
tensor([-2.1436, -2.8463, -3.0403, -3.4447, -3.4927], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2456, device='cuda:0', dtype=torch.float64)
tensor([-2.1459, -2.8428, -3.0591, -3.4597, -3.4650], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3881, device='cuda:0', dtype=torch.float64)
tensor([-2.1550, -2.8454, -3.0754, -3.4614, -3.4322], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2197, device='cuda:0', dtype=torch.float64)
tensor([-2.1490, -2.8553, -3.0992, -3.4689, -3.3988], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1211, device='cuda:0', dtype=torch.float64)
tensor([-2.1267, -2.8610, -3.1305, -3.4933, -3.3737], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2522, device='cuda:0', dtype=torch.float64)
tensor([-2.0914, -2.8650, -3.1620, -3.5201, -3.3610], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1472, device='cuda:0', dtype=torch.float64)
tensor([-2.0639, -2.8698, -3.1747, -3.5400, -3.3543], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2563, device='cuda:0', dtype=torch.float64)
tensor([-2.0441, -2.8705, -3.1755, -3.5578, -3.3472], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0248, device='cuda:0', dtype=torch.float64)
tensor([-2.0385, -2.8862, -3.1428, -3.5544, -3.3484], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1245, device='cuda:0', dtype=torch.float64)
tensor([-2.0454, -2.9069, -3.0984, -3.5475, -3.3522], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3220, device='cuda:0', dtype=torch.float64)
tensor([-2.0830, -2.9391, -3.0465, -3.5284, -3.3619], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5194, device='cuda:0', dtype=torch.float64)
tensor([-2.1194, -2.9667, -2.9961, -3.5182, -3.3749], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1269, device='cuda:0', dtype=torch.float64)
tensor([-2.1565, -2.9771, -2.9569, -3.5195, -3.3960], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2052, device='cuda:0', dtype=torch.float64)
tensor([-2.1635, -2.9724, -2.9431, -3.5282, -3.4028], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3089, device='cuda:0', dtype=torch.float64)
tensor([-2.1518, -2.9612, -2.9397, -3.5431, -3.4109], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3755, device='cuda:0', dtype=torch.float64)
tensor([-2.1349, -2.9544, -2.9515, -3.5606, -3.4176], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5248, device='cuda:0', dtype=torch.float64)
tensor([-2.1216, -2.9505, -2.9604, -3.5815, -3.3875], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0228, device='cuda:0', dtype=torch.float64)
tensor([-2.1073, -2.9450, -2.9727, -3.6006, -3.3568], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1151, device='cuda:0', dtype=torch.float64)
tensor([-2.1146, -2.9467, -2.9709, -3.5938, -3.3345], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2204, device='cuda:0', dtype=torch.float64)
tensor([-2.1195, -2.9502, -2.9848, -3.5797, -3.3372], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1918, device='cuda:0', dtype=torch.float64)
tensor([-2.1218, -2.9357, -3.0089, -3.5595, -3.3550], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4259, device='cuda:0', dtype=torch.float64)
tensor([-2.1125, -2.9217, -3.0321, -3.5396, -3.3803], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3172, device='cuda:0', dtype=torch.float64)
tensor([-2.1242, -2.9125, -3.0386, -3.5109, -3.4072], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4273, device='cuda:0', dtype=torch.float64)
tensor([-2.1339, -2.9058, -3.0383, -3.4932, -3.4328], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3454, device='cuda:0', dtype=torch.float64)
tensor([-2.1224, -2.9033, -3.0480, -3.4857, -3.4638], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3994, device='cuda:0', dtype=torch.float64)
tensor([-2.1033, -2.8926, -3.0647, -3.4791, -3.4964], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6624, device='cuda:0', dtype=torch.float64)
tensor([-2.0834, -2.8732, -3.0895, -3.4974, -3.5216], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3669, device='cuda:0', dtype=torch.float64)
tensor([-2.0598, -2.8553, -3.1224, -3.5198, -3.5409], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2584, device='cuda:0', dtype=torch.float64)
tensor([-2.0538, -2.8515, -3.1341, -3.5240, -3.5685], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3808, device='cuda:0', dtype=torch.float64)
tensor([-2.0758, -2.8927, -3.1168, -3.5114, -3.5737], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4562, device='cuda:0', dtype=torch.float64)
tensor([-2.0947, -2.9306, -3.0907, -3.5022, -3.5752], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2917, device='cuda:0', dtype=torch.float64)
tensor([-2.1103, -2.9623, -3.0432, -3.4971, -3.5670], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3925, device='cuda:0', dtype=torch.float64)
tensor([-2.1459, -2.9850, -2.9825, -3.4733, -3.5450], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6159, device='cuda:0', dtype=torch.float64)
tensor([-2.1638, -2.9939, -2.9342, -3.4624, -3.5293], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2124, device='cuda:0', dtype=torch.float64)
tensor([-2.1696, -2.9767, -2.9066, -3.4677, -3.5059], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1803, device='cuda:0', dtype=torch.float64)
tensor([-2.1616, -2.9462, -2.9010, -3.4732, -3.4836], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2174, device='cuda:0', dtype=torch.float64)
tensor([-2.1508, -2.9158, -2.9044, -3.4753, -3.4617], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4128, device='cuda:0', dtype=torch.float64)
tensor([-2.1424, -2.8761, -2.9342, -3.4740, -3.4564], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4193, device='cuda:0', dtype=torch.float64)
tensor([-2.1385, -2.8338, -2.9656, -3.4723, -3.4620], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6880, device='cuda:0', dtype=torch.float64)
tensor([-2.1321, -2.8018, -2.9983, -3.4812, -3.4596], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1727, device='cuda:0', dtype=torch.float64)
tensor([-2.1160, -2.7679, -3.0399, -3.5070, -3.4593], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1388, device='cuda:0', dtype=torch.float64)
tensor([-2.1096, -2.7559, -3.0735, -3.5238, -3.4626], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3135, device='cuda:0', dtype=torch.float64)
tensor([-2.0848, -2.7516, -3.1166, -3.5503, -3.4560], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2290, device='cuda:0', dtype=torch.float64)
tensor([-2.0638, -2.7621, -3.1495, -3.5756, -3.4564], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1898, device='cuda:0', dtype=torch.float64)
tensor([-2.0604, -2.7929, -3.1614, -3.5805, -3.4514], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1486, device='cuda:0', dtype=torch.float64)
tensor([-2.0879, -2.8496, -3.1439, -3.5540, -3.4614], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1486, device='cuda:0', dtype=torch.float64)
tensor([-2.1555, -2.9141, -3.1026, -3.5058, -3.4872], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2869, device='cuda:0', dtype=torch.float64)
tensor([-2.1880, -2.9759, -3.0679, -3.4716, -3.5363], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5843, device='cuda:0', dtype=torch.float64)
tensor([-2.1811, -3.0067, -3.0435, -3.4577, -3.5739], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2612, device='cuda:0', dtype=torch.float64)
tensor([-2.1530, -3.0217, -3.0197, -3.4458, -3.5980], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3774, device='cuda:0', dtype=torch.float64)
tensor([-2.1144, -3.0165, -3.0043, -3.4288, -3.5991], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3891, device='cuda:0', dtype=torch.float64)
tensor([-2.0841, -2.9970, -3.0006, -3.4092, -3.6011], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1227, device='cuda:0', dtype=torch.float64)
tensor([-2.0510, -2.9603, -2.9999, -3.4086, -3.5899], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6213, device='cuda:0', dtype=torch.float64)
tensor([-2.0372, -2.9107, -3.0036, -3.4062, -3.5596], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0353, device='cuda:0', dtype=torch.float64)
tensor([-2.0334, -2.8645, -3.0037, -3.4091, -3.5254], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1441, device='cuda:0', dtype=torch.float64)
tensor([-2.0611, -2.8442, -2.9860, -3.3920, -3.4952], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5184, device='cuda:0', dtype=torch.float64)
tensor([-2.1141, -2.8497, -2.9494, -3.3465, -3.4851], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1125, device='cuda:0', dtype=torch.float64)
tensor([-2.1640, -2.8638, -2.9317, -3.3063, -3.4796], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3508, device='cuda:0', dtype=torch.float64)
tensor([-2.1936, -2.8787, -2.9205, -3.2844, -3.4728], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4624, device='cuda:0', dtype=torch.float64)
tensor([-2.1868, -2.8853, -2.9320, -3.2985, -3.4576], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9374, device='cuda:0', dtype=torch.float64)
tensor([-2.1609, -2.8954, -2.9425, -3.3153, -3.4456], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3378, device='cuda:0', dtype=torch.float64)
tensor([-2.1310, -2.8865, -2.9449, -3.3489, -3.4343], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2881, device='cuda:0', dtype=torch.float64)
tensor([-2.0711, -2.8639, -2.9624, -3.4130, -3.4177], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3697, device='cuda:0', dtype=torch.float64)
tensor([-2.0338, -2.8602, -2.9685, -3.4678, -3.4102], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3658, device='cuda:0', dtype=torch.float64)
tensor([-2.0094, -2.8639, -2.9729, -3.4998, -3.4130], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0693, device='cuda:0', dtype=torch.float64)
tensor([-2.0215, -2.8694, -2.9775, -3.5091, -3.4268], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4299, device='cuda:0', dtype=torch.float64)
tensor([-2.0597, -2.8895, -2.9728, -3.4936, -3.4370], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3287, device='cuda:0', dtype=torch.float64)
tensor([-2.1180, -2.9101, -2.9722, -3.4808, -3.4491], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1558, device='cuda:0', dtype=torch.float64)
tensor([-2.1579, -2.9250, -2.9819, -3.4750, -3.4632], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1655, device='cuda:0', dtype=torch.float64)
tensor([-2.1706, -2.9228, -2.9913, -3.4804, -3.4662], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4829, device='cuda:0', dtype=torch.float64)
tensor([-2.1430, -2.9043, -3.0128, -3.5149, -3.4615], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1780, device='cuda:0', dtype=torch.float64)
tensor([-2.1076, -2.8834, -3.0459, -3.5496, -3.4695], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2095, device='cuda:0', dtype=torch.float64)
tensor([-2.0965, -2.8787, -3.0726, -3.5578, -3.4740], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3658, device='cuda:0', dtype=torch.float64)
tensor([-2.0935, -2.8755, -3.0866, -3.5557, -3.4807], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3931, device='cuda:0', dtype=torch.float64)
tensor([-2.0924, -2.8836, -3.1016, -3.5219, -3.4856], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2470, device='cuda:0', dtype=torch.float64)
tensor([-2.0764, -2.8888, -3.0985, -3.4930, -3.4901], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3492, device='cuda:0', dtype=torch.float64)
tensor([-2.0576, -2.8874, -3.0978, -3.4710, -3.4877], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6899, device='cuda:0', dtype=torch.float64)
tensor([-2.0506, -2.8974, -3.0928, -3.4361, -3.4737], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2700, device='cuda:0', dtype=torch.float64)
tensor([-2.0432, -2.9082, -3.1026, -3.4256, -3.4682], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2477, device='cuda:0', dtype=torch.float64)
tensor([-2.0459, -2.9134, -3.1151, -3.4187, -3.4589], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0891, device='cuda:0', dtype=torch.float64)
tensor([-2.0582, -2.9238, -3.1335, -3.4097, -3.4502], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4881, device='cuda:0', dtype=torch.float64)
tensor([-2.0870, -2.9312, -3.1476, -3.4052, -3.4464], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3287, device='cuda:0', dtype=torch.float64)
tensor([-2.0965, -2.9170, -3.1603, -3.4192, -3.4421], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1104, device='cuda:0', dtype=torch.float64)
tensor([-2.0826, -2.9056, -3.1656, -3.4466, -3.4421], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2008, device='cuda:0', dtype=torch.float64)
tensor([-2.0692, -2.8991, -3.1605, -3.4779, -3.4300], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1018, device='cuda:0', dtype=torch.float64)
tensor([-2.0417, -2.8863, -3.1710, -3.5264, -3.4112], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2030, device='cuda:0', dtype=torch.float64)
tensor([-2.0248, -2.8744, -3.1783, -3.5624, -3.4042], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2256, device='cuda:0', dtype=torch.float64)
tensor([-2.0174, -2.8723, -3.1720, -3.5866, -3.4005], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5087, device='cuda:0', dtype=torch.float64)
tensor([-2.0211, -2.8669, -3.1687, -3.6023, -3.3905], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3212, device='cuda:0', dtype=torch.float64)
tensor([-2.0610, -2.8787, -3.1583, -3.5681, -3.3919], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3939, device='cuda:0', dtype=torch.float64)
tensor([-2.1108, -2.9043, -3.1447, -3.5306, -3.3947], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2871, device='cuda:0', dtype=torch.float64)
tensor([-2.1817, -2.9483, -3.1014, -3.4720, -3.4072], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3419, device='cuda:0', dtype=torch.float64)
tensor([-2.2474, -3.0114, -3.0400, -3.4269, -3.4203], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5939, device='cuda:0', dtype=torch.float64)
tensor([-2.2885, -3.0735, -2.9865, -3.4001, -3.4327], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2198, device='cuda:0', dtype=torch.float64)
tensor([-2.2840, -3.0931, -2.9733, -3.4156, -3.4476], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0731, device='cuda:0', dtype=torch.float64)
tensor([-2.2459, -3.0734, -2.9929, -3.4530, -3.4637], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7177, device='cuda:0', dtype=torch.float64)
tensor([-2.1617, -3.0173, -3.0401, -3.5168, -3.4574], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9479, device='cuda:0', dtype=torch.float64)
tensor([-2.0832, -2.9494, -3.1004, -3.5759, -3.4527], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1735, device='cuda:0', dtype=torch.float64)
tensor([-2.0384, -2.9041, -3.1620, -3.6315, -3.4567], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3011, device='cuda:0', dtype=torch.float64)
tensor([-2.0399, -2.8648, -3.2004, -3.6649, -3.4610], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2625, device='cuda:0', dtype=torch.float64)
tensor([-2.0698, -2.8435, -3.2199, -3.6759, -3.4724], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3611, device='cuda:0', dtype=torch.float64)
tensor([-2.1308, -2.8266, -3.2177, -3.6509, -3.4965], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4544, device='cuda:0', dtype=torch.float64)
tensor([-2.2006, -2.8334, -3.2116, -3.6030, -3.5289], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3871, device='cuda:0', dtype=torch.float64)
tensor([-2.2705, -2.8534, -3.1902, -3.5315, -3.5529], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2564, device='cuda:0', dtype=torch.float64)
tensor([-2.2997, -2.8746, -3.1685, -3.4782, -3.5701], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6394, device='cuda:0', dtype=torch.float64)
tensor([-2.2785, -2.8890, -3.1449, -3.4481, -3.5778], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2722, device='cuda:0', dtype=torch.float64)
tensor([-2.2237, -2.8957, -3.1451, -3.4515, -3.5676], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2321, device='cuda:0', dtype=torch.float64)
tensor([-2.1590, -2.9075, -3.1480, -3.4683, -3.5584], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5097, device='cuda:0', dtype=torch.float64)
tensor([-2.0965, -2.9260, -3.1545, -3.4908, -3.5416], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4771, device='cuda:0', dtype=torch.float64)
tensor([-2.0528, -2.9423, -3.1618, -3.5068, -3.5317], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0950, device='cuda:0', dtype=torch.float64)
tensor([-2.0151, -2.9640, -3.1664, -3.5147, -3.5265], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3580, device='cuda:0', dtype=torch.float64)
tensor([-2.0335, -2.9790, -3.1377, -3.4903, -3.5209], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3627, device='cuda:0', dtype=torch.float64)
tensor([-2.0678, -2.9943, -3.1071, -3.4710, -3.5134], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2280, device='cuda:0', dtype=torch.float64)
tensor([-2.1107, -3.0032, -3.0698, -3.4577, -3.5167], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3186, device='cuda:0', dtype=torch.float64)
tensor([-2.1468, -2.9826, -3.0454, -3.4607, -3.5103], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3459, device='cuda:0', dtype=torch.float64)
tensor([-2.1838, -2.9658, -3.0242, -3.4472, -3.5085], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2206, device='cuda:0', dtype=torch.float64)
tensor([-2.1949, -2.9470, -3.0246, -3.4381, -3.5164], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1806, device='cuda:0', dtype=torch.float64)
tensor([-2.1698, -2.9165, -3.0463, -3.4535, -3.5034], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1341, device='cuda:0', dtype=torch.float64)
tensor([-2.1345, -2.8842, -3.0598, -3.4724, -3.4733], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3612, device='cuda:0', dtype=torch.float64)
tensor([-2.1131, -2.8521, -3.0881, -3.4780, -3.4644], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1897, device='cuda:0', dtype=torch.float64)
tensor([-2.1083, -2.8357, -3.1251, -3.4773, -3.4503], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3817, device='cuda:0', dtype=torch.float64)
tensor([-2.1143, -2.8245, -3.1392, -3.4740, -3.4322], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2266, device='cuda:0', dtype=torch.float64)
tensor([-2.1132, -2.8138, -3.1275, -3.4560, -3.4083], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2443, device='cuda:0', dtype=torch.float64)
tensor([-2.1024, -2.8128, -3.0956, -3.4554, -3.3790], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0120, device='cuda:0', dtype=torch.float64)
tensor([-2.0811, -2.8194, -3.0707, -3.4660, -3.3695], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1784, device='cuda:0', dtype=torch.float64)
tensor([-2.0696, -2.8389, -3.0589, -3.4619, -3.3765], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2601, device='cuda:0', dtype=torch.float64)
tensor([-2.0939, -2.8804, -3.0249, -3.4412, -3.3978], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1788, device='cuda:0', dtype=torch.float64)
tensor([-2.1289, -2.9298, -2.9858, -3.4079, -3.4146], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1430, device='cuda:0', dtype=torch.float64)
tensor([-2.1830, -2.9810, -2.9396, -3.3596, -3.4246], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0554, device='cuda:0', dtype=torch.float64)
tensor([-2.2390, -3.0229, -2.8973, -3.3199, -3.4321], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4309, device='cuda:0', dtype=torch.float64)
tensor([-2.2927, -3.0416, -2.8714, -3.2939, -3.4313], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3007, device='cuda:0', dtype=torch.float64)
tensor([-2.3198, -3.0343, -2.8665, -3.3049, -3.4316], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2795, device='cuda:0', dtype=torch.float64)
tensor([-2.2741, -2.9693, -2.9101, -3.3714, -3.4242], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1937, device='cuda:0', dtype=torch.float64)
tensor([-2.2322, -2.9082, -2.9571, -3.4397, -3.4421], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1996, device='cuda:0', dtype=torch.float64)
tensor([-2.1869, -2.8624, -3.0180, -3.5007, -3.4573], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4057, device='cuda:0', dtype=torch.float64)
tensor([-2.1343, -2.8346, -3.0872, -3.5423, -3.4841], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5040, device='cuda:0', dtype=torch.float64)
tensor([-2.1049, -2.8294, -3.1632, -3.5537, -3.4989], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3208, device='cuda:0', dtype=torch.float64)
tensor([-2.1114, -2.8562, -3.2041, -3.5422, -3.5196], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4090, device='cuda:0', dtype=torch.float64)
tensor([-2.1064, -2.8911, -3.2309, -3.5370, -3.5290], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3968, device='cuda:0', dtype=torch.float64)
tensor([-2.1046, -2.9290, -3.2401, -3.5286, -3.5257], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2852, device='cuda:0', dtype=torch.float64)
tensor([-2.1139, -2.9651, -3.2487, -3.5206, -3.5131], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2123, device='cuda:0', dtype=torch.float64)
tensor([-2.1200, -2.9795, -3.2573, -3.5095, -3.4959], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3272, device='cuda:0', dtype=torch.float64)
tensor([-2.1471, -2.9999, -3.2336, -3.4929, -3.4802], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1691, device='cuda:0', dtype=torch.float64)
tensor([-2.1650, -3.0233, -3.1977, -3.4766, -3.4616], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4288, device='cuda:0', dtype=torch.float64)
tensor([-2.1719, -3.0359, -3.1681, -3.4498, -3.4356], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2443, device='cuda:0', dtype=torch.float64)
tensor([-2.1787, -3.0467, -3.1366, -3.4272, -3.4309], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4136, device='cuda:0', dtype=torch.float64)
tensor([-2.1789, -3.0530, -3.1096, -3.4222, -3.4236], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2558, device='cuda:0', dtype=torch.float64)
tensor([-2.1751, -3.0392, -3.1004, -3.4208, -3.4254], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2776, device='cuda:0', dtype=torch.float64)
tensor([-2.1639, -3.0209, -3.1075, -3.4239, -3.4376], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2861, device='cuda:0', dtype=torch.float64)
tensor([-2.1463, -2.9864, -3.1095, -3.4171, -3.4458], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1229, device='cuda:0', dtype=torch.float64)
tensor([-2.1482, -2.9613, -3.1140, -3.4001, -3.4467], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3751, device='cuda:0', dtype=torch.float64)
tensor([-2.1460, -2.9397, -3.1199, -3.3719, -3.4403], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1981, device='cuda:0', dtype=torch.float64)
tensor([-2.1529, -2.9426, -3.1279, -3.3541, -3.4320], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2994, device='cuda:0', dtype=torch.float64)
tensor([-2.1603, -2.9483, -3.1387, -3.3456, -3.4336], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2815, device='cuda:0', dtype=torch.float64)
tensor([-2.1621, -2.9433, -3.1579, -3.3536, -3.4314], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3599, device='cuda:0', dtype=torch.float64)
tensor([-2.1480, -2.9400, -3.1827, -3.3758, -3.4400], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4349, device='cuda:0', dtype=torch.float64)
tensor([-2.1249, -2.9319, -3.1913, -3.4001, -3.4541], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4896, device='cuda:0', dtype=torch.float64)
tensor([-2.0924, -2.9037, -3.1990, -3.4409, -3.4570], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3809, device='cuda:0', dtype=torch.float64)
tensor([-2.0773, -2.8982, -3.1826, -3.4688, -3.4653], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2884, device='cuda:0', dtype=torch.float64)
tensor([-2.0671, -2.9189, -3.1473, -3.4963, -3.4756], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4132, device='cuda:0', dtype=torch.float64)
tensor([-2.0787, -2.9442, -3.1044, -3.5017, -3.4880], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4005, device='cuda:0', dtype=torch.float64)
tensor([-2.0853, -2.9739, -3.0780, -3.5108, -3.4764], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4233, device='cuda:0', dtype=torch.float64)
tensor([-2.1029, -3.0118, -3.0400, -3.5123, -3.4404], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3682, device='cuda:0', dtype=torch.float64)
tensor([-2.1425, -3.0383, -3.0137, -3.4932, -3.4163], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3720, device='cuda:0', dtype=torch.float64)
tensor([-2.1765, -3.0569, -3.0152, -3.4750, -3.3926], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5775, device='cuda:0', dtype=torch.float64)
tensor([-2.2281, -3.0573, -3.0285, -3.4436, -3.3692], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6761, device='cuda:0', dtype=torch.float64)
tensor([-2.2755, -3.0625, -3.0469, -3.3900, -3.3890], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4233, device='cuda:0', dtype=torch.float64)
tensor([-2.2820, -3.0611, -3.0682, -3.3672, -3.4124], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2399, device='cuda:0', dtype=torch.float64)
tensor([-2.2433, -3.0280, -3.1111, -3.3760, -3.4356], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4812, device='cuda:0', dtype=torch.float64)
tensor([-2.1690, -2.9753, -3.1524, -3.4224, -3.4477], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4893, device='cuda:0', dtype=torch.float64)
tensor([-2.0844, -2.8982, -3.1924, -3.4916, -3.4365], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3019, device='cuda:0', dtype=torch.float64)
tensor([-2.0229, -2.8547, -3.2108, -3.5638, -3.4279], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0944, device='cuda:0', dtype=torch.float64)
tensor([-1.9891, -2.8192, -3.2098, -3.6152, -3.4208], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1691, device='cuda:0', dtype=torch.float64)
tensor([-1.9974, -2.8169, -3.1930, -3.6465, -3.4216], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2458, device='cuda:0', dtype=torch.float64)
tensor([-2.0222, -2.8296, -3.1669, -3.6578, -3.4345], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4629, device='cuda:0', dtype=torch.float64)
tensor([-2.0686, -2.8677, -3.1347, -3.6527, -3.4416], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1427, device='cuda:0', dtype=torch.float64)
tensor([-2.1232, -2.9089, -3.0946, -3.6307, -3.4754], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0715, device='cuda:0', dtype=torch.float64)
tensor([-2.2146, -2.9521, -3.0278, -3.5950, -3.5031], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3228, device='cuda:0', dtype=torch.float64)
tensor([-2.2752, -3.0002, -2.9826, -3.5552, -3.5272], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2513, device='cuda:0', dtype=torch.float64)
tensor([-2.2990, -3.0438, -2.9665, -3.5275, -3.5536], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9232, device='cuda:0', dtype=torch.float64)
tensor([-2.2967, -3.0729, -2.9905, -3.5078, -3.5770], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3284, device='cuda:0', dtype=torch.float64)
tensor([-2.2512, -3.0678, -3.0235, -3.5101, -3.5814], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4549, device='cuda:0', dtype=torch.float64)
tensor([-2.1926, -3.0522, -3.0579, -3.5283, -3.5911], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2150, device='cuda:0', dtype=torch.float64)
tensor([-2.1145, -3.0073, -3.0920, -3.5470, -3.5813], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1894, device='cuda:0', dtype=torch.float64)
tensor([-2.0607, -2.9749, -3.1098, -3.5609, -3.5724], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6763, device='cuda:0', dtype=torch.float64)
tensor([-2.0308, -2.9466, -3.1183, -3.5863, -3.5702], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4466, device='cuda:0', dtype=torch.float64)
tensor([-2.0818, -2.9453, -3.0880, -3.5633, -3.5782], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1819, device='cuda:0', dtype=torch.float64)
tensor([-2.1438, -2.9333, -3.0647, -3.5111, -3.5765], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2682, device='cuda:0', dtype=torch.float64)
tensor([-2.2308, -2.9245, -3.0458, -3.4341, -3.5685], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1606, device='cuda:0', dtype=torch.float64)
tensor([-2.3054, -2.9193, -3.0348, -3.3765, -3.5556], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2532, device='cuda:0', dtype=torch.float64)
tensor([-2.3371, -2.9032, -3.0455, -3.3539, -3.5380], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2793, device='cuda:0', dtype=torch.float64)
tensor([-2.3345, -2.9023, -3.0680, -3.3459, -3.5289], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1244, device='cuda:0', dtype=torch.float64)
tensor([-2.3121, -2.8877, -3.0949, -3.3635, -3.5063], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1989, device='cuda:0', dtype=torch.float64)
tensor([-2.2689, -2.8696, -3.1308, -3.3877, -3.4766], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3999, device='cuda:0', dtype=torch.float64)
tensor([-2.2163, -2.8545, -3.1569, -3.4177, -3.4502], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3744, device='cuda:0', dtype=torch.float64)
tensor([-2.1660, -2.8516, -3.1677, -3.4534, -3.4316], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1283, device='cuda:0', dtype=torch.float64)
tensor([-2.1135, -2.8761, -3.1665, -3.4948, -3.4246], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1735, device='cuda:0', dtype=torch.float64)
tensor([-2.0518, -2.8971, -3.1777, -3.5398, -3.4363], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4222, device='cuda:0', dtype=torch.float64)
tensor([-2.0184, -2.9241, -3.1830, -3.5674, -3.4557], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2153, device='cuda:0', dtype=torch.float64)
tensor([-2.0244, -2.9614, -3.1702, -3.5825, -3.4806], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0888, device='cuda:0', dtype=torch.float64)
tensor([-2.0614, -2.9974, -3.1383, -3.5752, -3.5093], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2678, device='cuda:0', dtype=torch.float64)
tensor([-2.1202, -3.0279, -3.0885, -3.5562, -3.5356], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1487, device='cuda:0', dtype=torch.float64)
tensor([-2.2186, -3.0540, -3.0190, -3.5070, -3.5563], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0375, device='cuda:0', dtype=torch.float64)
tensor([-2.3037, -3.0606, -2.9671, -3.4614, -3.5746], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2298, device='cuda:0', dtype=torch.float64)
tensor([-2.3688, -3.0487, -2.9446, -3.4251, -3.5782], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3353, device='cuda:0', dtype=torch.float64)
tensor([-2.3997, -3.0144, -2.9566, -3.3998, -3.5797], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0689, device='cuda:0', dtype=torch.float64)
tensor([-2.4014, -2.9625, -2.9845, -3.4007, -3.5767], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4493, device='cuda:0', dtype=torch.float64)
tensor([-2.3782, -2.9089, -3.0221, -3.4078, -3.5703], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1857, device='cuda:0', dtype=torch.float64)
tensor([-2.3342, -2.8362, -3.0732, -3.4426, -3.5571], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4427, device='cuda:0', dtype=torch.float64)
tensor([-2.2960, -2.7901, -3.1207, -3.4659, -3.5645], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1706, device='cuda:0', dtype=torch.float64)
tensor([-2.2417, -2.7460, -3.1773, -3.4941, -3.5704], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4535, device='cuda:0', dtype=torch.float64)
tensor([-2.1828, -2.7126, -3.2275, -3.5458, -3.5797], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3831, device='cuda:0', dtype=torch.float64)
tensor([-2.1424, -2.7011, -3.2616, -3.5722, -3.5774], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2209, device='cuda:0', dtype=torch.float64)
tensor([-2.1193, -2.7266, -3.2755, -3.5832, -3.5662], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4713, device='cuda:0', dtype=torch.float64)
tensor([-2.1252, -2.7833, -3.2557, -3.5741, -3.5608], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2319, device='cuda:0', dtype=torch.float64)
tensor([-2.1719, -2.8737, -3.2093, -3.5304, -3.5796], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1538, device='cuda:0', dtype=torch.float64)
tensor([-2.2172, -2.9580, -3.1671, -3.5129, -3.5797], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0689, device='cuda:0', dtype=torch.float64)
tensor([-2.2486, -3.0188, -3.1510, -3.5019, -3.5772], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4106, device='cuda:0', dtype=torch.float64)
tensor([-2.3158, -3.0803, -3.1155, -3.4801, -3.5619], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0820, device='cuda:0', dtype=torch.float64)
tensor([-2.3587, -3.1183, -3.0788, -3.4811, -3.5384], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3783, device='cuda:0', dtype=torch.float64)
tensor([-2.3801, -3.1287, -3.0453, -3.4798, -3.5018], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6883, device='cuda:0', dtype=torch.float64)
tensor([-2.3484, -3.1213, -3.0256, -3.5185, -3.4614], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3602, device='cuda:0', dtype=torch.float64)
tensor([-2.2812, -3.0590, -3.0370, -3.5808, -3.4339], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3247, device='cuda:0', dtype=torch.float64)
tensor([-2.1961, -2.9881, -3.0575, -3.6497, -3.4215], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2227, device='cuda:0', dtype=torch.float64)
tensor([-2.1454, -2.9342, -3.0636, -3.7051, -3.4307], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4054, device='cuda:0', dtype=torch.float64)
tensor([-2.1225, -2.8836, -3.0784, -3.7369, -3.4465], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9208, device='cuda:0', dtype=torch.float64)
tensor([-2.1255, -2.8489, -3.0610, -3.7260, -3.4550], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5020, device='cuda:0', dtype=torch.float64)
tensor([-2.1482, -2.8506, -3.0498, -3.6808, -3.4862], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4782, device='cuda:0', dtype=torch.float64)
tensor([-2.1492, -2.8495, -3.0627, -3.6565, -3.5293], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3119, device='cuda:0', dtype=torch.float64)
tensor([-2.1646, -2.8905, -3.0747, -3.6257, -3.5664], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6720, device='cuda:0', dtype=torch.float64)
tensor([-2.1733, -2.9126, -3.0963, -3.6177, -3.5798], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3265, device='cuda:0', dtype=torch.float64)
tensor([-2.1529, -2.9169, -3.1367, -3.6188, -3.5691], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3071, device='cuda:0', dtype=torch.float64)
tensor([-2.1260, -2.9061, -3.1764, -3.6292, -3.5500], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2779, device='cuda:0', dtype=torch.float64)
tensor([-2.0976, -2.8986, -3.1966, -3.6542, -3.5334], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3476, device='cuda:0', dtype=torch.float64)
tensor([-2.1218, -2.9173, -3.1914, -3.6500, -3.5297], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4758, device='cuda:0', dtype=torch.float64)
tensor([-2.1743, -2.9574, -3.1651, -3.6057, -3.5452], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3022, device='cuda:0', dtype=torch.float64)
tensor([-2.2453, -2.9952, -3.1207, -3.5284, -3.5593], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3672, device='cuda:0', dtype=torch.float64)
tensor([-2.3158, -3.0354, -3.0716, -3.4478, -3.5845], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3534, device='cuda:0', dtype=torch.float64)
tensor([-2.3673, -3.0649, -3.0321, -3.3915, -3.6145], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3940, device='cuda:0', dtype=torch.float64)
tensor([-2.3884, -3.0859, -3.0082, -3.3511, -3.6301], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1586, device='cuda:0', dtype=torch.float64)
tensor([-2.3561, -3.0843, -3.0048, -3.3416, -3.6177], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2586, device='cuda:0', dtype=torch.float64)
tensor([-2.2799, -3.0715, -3.0292, -3.3657, -3.6043], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3070, device='cuda:0', dtype=torch.float64)
tensor([-2.1683, -3.0277, -3.0788, -3.4175, -3.5858], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3146, device='cuda:0', dtype=torch.float64)
tensor([-2.0764, -2.9895, -3.1263, -3.4658, -3.5690], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2113, device='cuda:0', dtype=torch.float64)
tensor([-1.9958, -2.9691, -3.1691, -3.5176, -3.5636], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3562, device='cuda:0', dtype=torch.float64)
tensor([-1.9386, -2.9596, -3.2104, -3.5661, -3.5601], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5720, device='cuda:0', dtype=torch.float64)
tensor([-1.9556, -2.9837, -3.2309, -3.5808, -3.5558], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2668, device='cuda:0', dtype=torch.float64)
tensor([-2.0176, -3.0257, -3.2082, -3.5871, -3.5543], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1397, device='cuda:0', dtype=torch.float64)
tensor([-2.1011, -3.0599, -3.1730, -3.5799, -3.5734], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4745, device='cuda:0', dtype=torch.float64)
tensor([-2.1547, -3.0865, -3.1459, -3.5814, -3.5864], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1218, device='cuda:0', dtype=torch.float64)
tensor([-2.2179, -3.0981, -3.1204, -3.5687, -3.5975], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3356, device='cuda:0', dtype=torch.float64)
tensor([-2.2532, -3.0909, -3.1163, -3.5742, -3.6040], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1901, device='cuda:0', dtype=torch.float64)
tensor([-2.2713, -3.0717, -3.1131, -3.5792, -3.6028], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0908, device='cuda:0', dtype=torch.float64)
tensor([-2.2765, -3.0454, -3.1200, -3.5963, -3.5984], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5387, device='cuda:0', dtype=torch.float64)
tensor([-2.2711, -3.0176, -3.1383, -3.6054, -3.5940], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2176, device='cuda:0', dtype=torch.float64)
tensor([-2.2377, -2.9667, -3.1712, -3.6286, -3.5594], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1082, device='cuda:0', dtype=torch.float64)
tensor([-2.2005, -2.9132, -3.2030, -3.6466, -3.5171], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2531, device='cuda:0', dtype=torch.float64)
tensor([-2.1509, -2.8673, -3.2326, -3.6719, -3.4676], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1424, device='cuda:0', dtype=torch.float64)
tensor([-2.1191, -2.8197, -3.2749, -3.6923, -3.4092], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0787, device='cuda:0', dtype=torch.float64)
tensor([-2.1146, -2.7918, -3.2922, -3.7069, -3.3489], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5036, device='cuda:0', dtype=torch.float64)
tensor([-2.1233, -2.7924, -3.2903, -3.7073, -3.3158], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2001, device='cuda:0', dtype=torch.float64)
tensor([-2.1636, -2.8236, -3.2577, -3.6752, -3.2921], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4676, device='cuda:0', dtype=torch.float64)
tensor([-2.2242, -2.8684, -3.2031, -3.6313, -3.2913], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2550, device='cuda:0', dtype=torch.float64)
tensor([-2.2613, -2.9097, -3.1486, -3.5844, -3.3023], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4480, device='cuda:0', dtype=torch.float64)
tensor([-2.2915, -2.9493, -3.0945, -3.5398, -3.3351], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3311, device='cuda:0', dtype=torch.float64)
tensor([-2.3323, -2.9842, -3.0480, -3.4820, -3.3550], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1763, device='cuda:0', dtype=torch.float64)
tensor([-2.3447, -2.9993, -3.0028, -3.4525, -3.3797], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3181, device='cuda:0', dtype=torch.float64)
tensor([-2.3170, -2.9896, -2.9865, -3.4430, -3.4088], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0201, device='cuda:0', dtype=torch.float64)
tensor([-2.2689, -2.9585, -2.9924, -3.4682, -3.4226], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3274, device='cuda:0', dtype=torch.float64)
tensor([-2.2085, -2.9154, -3.0124, -3.5199, -3.4207], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2642, device='cuda:0', dtype=torch.float64)
tensor([-2.1638, -2.8848, -3.0360, -3.5741, -3.4276], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4942, device='cuda:0', dtype=torch.float64)
tensor([-2.1093, -2.8717, -3.0673, -3.6426, -3.4422], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4023, device='cuda:0', dtype=torch.float64)
tensor([-2.0627, -2.8655, -3.0955, -3.6963, -3.4748], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4037, device='cuda:0', dtype=torch.float64)
tensor([-2.0464, -2.8855, -3.1027, -3.7059, -3.5050], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1283, device='cuda:0', dtype=torch.float64)
tensor([-2.0475, -2.9099, -3.1196, -3.7095, -3.5239], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1603, device='cuda:0', dtype=torch.float64)
tensor([-2.0486, -2.9217, -3.1518, -3.7002, -3.5454], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1474, device='cuda:0', dtype=torch.float64)
tensor([-2.0719, -2.9448, -3.1737, -3.6496, -3.5689], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4286, device='cuda:0', dtype=torch.float64)
tensor([-2.1107, -2.9779, -3.1936, -3.5825, -3.5870], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5171, device='cuda:0', dtype=torch.float64)
tensor([-2.1820, -3.0078, -3.1835, -3.5106, -3.5924], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1916, device='cuda:0', dtype=torch.float64)
tensor([-2.2373, -3.0174, -3.2140, -3.4643, -3.5743], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2191, device='cuda:0', dtype=torch.float64)
tensor([-2.2562, -3.0246, -3.2414, -3.4473, -3.5665], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3890, device='cuda:0', dtype=torch.float64)
tensor([-2.2731, -3.0358, -3.2571, -3.4392, -3.5582], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3950, device='cuda:0', dtype=torch.float64)
tensor([-2.3027, -3.0497, -3.2584, -3.4297, -3.5576], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1485, device='cuda:0', dtype=torch.float64)
tensor([-2.3238, -3.0732, -3.2654, -3.4163, -3.5696], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2527, device='cuda:0', dtype=torch.float64)
tensor([-2.3527, -3.1152, -3.2495, -3.3793, -3.5834], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0738, device='cuda:0', dtype=torch.float64)
tensor([-2.3557, -3.1476, -3.2332, -3.3601, -3.5944], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2148, device='cuda:0', dtype=torch.float64)
tensor([-2.3526, -3.1762, -3.2068, -3.3623, -3.6024], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2987, device='cuda:0', dtype=torch.float64)
tensor([-2.3214, -3.1659, -3.1855, -3.3999, -3.5981], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5483, device='cuda:0', dtype=torch.float64)
tensor([-2.2895, -3.1507, -3.1643, -3.4571, -3.5970], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2885, device='cuda:0', dtype=torch.float64)
tensor([-2.2631, -3.1274, -3.1457, -3.5169, -3.5903], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2516, device='cuda:0', dtype=torch.float64)
tensor([-2.2398, -3.0907, -3.1291, -3.5725, -3.5891], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5149, device='cuda:0', dtype=torch.float64)
tensor([-2.2132, -3.0427, -3.1201, -3.6316, -3.5779], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3510, device='cuda:0', dtype=torch.float64)
tensor([-2.1845, -2.9897, -3.1165, -3.7059, -3.5612], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1952, device='cuda:0', dtype=torch.float64)
tensor([-2.1643, -2.9227, -3.1476, -3.7724, -3.5406], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1256, device='cuda:0', dtype=torch.float64)
tensor([-2.1596, -2.8583, -3.1817, -3.8080, -3.5305], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4651, device='cuda:0', dtype=torch.float64)
tensor([-2.1856, -2.8307, -3.2040, -3.7978, -3.5315], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4780, device='cuda:0', dtype=torch.float64)
tensor([-2.2254, -2.8300, -3.1980, -3.7496, -3.5538], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2995, device='cuda:0', dtype=torch.float64)
tensor([-2.2518, -2.8661, -3.1826, -3.7058, -3.5698], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9882, device='cuda:0', dtype=torch.float64)
tensor([-2.2580, -2.9116, -3.1708, -3.6646, -3.5864], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2130, device='cuda:0', dtype=torch.float64)
tensor([-2.2521, -2.9476, -3.1513, -3.6391, -3.6055], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4903, device='cuda:0', dtype=torch.float64)
tensor([-2.2258, -2.9751, -3.1372, -3.6239, -3.5869], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2516, device='cuda:0', dtype=torch.float64)
tensor([-2.1521, -2.9775, -3.1514, -3.6358, -3.5672], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3568, device='cuda:0', dtype=torch.float64)
tensor([-2.0681, -2.9560, -3.1734, -3.6617, -3.5449], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2343, device='cuda:0', dtype=torch.float64)
tensor([-2.0178, -2.9491, -3.1752, -3.6691, -3.5119], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5426, device='cuda:0', dtype=torch.float64)
tensor([-2.0109, -2.9614, -3.1704, -3.6504, -3.4772], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4894, device='cuda:0', dtype=torch.float64)
tensor([-2.0491, -2.9801, -3.1420, -3.5961, -3.4724], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1038, device='cuda:0', dtype=torch.float64)
tensor([-2.1398, -3.0102, -3.0877, -3.5307, -3.4669], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0748, device='cuda:0', dtype=torch.float64)
tensor([-2.2270, -3.0460, -3.0395, -3.4619, -3.4665], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4872, device='cuda:0', dtype=torch.float64)
tensor([-2.3418, -3.0861, -2.9954, -3.3942, -3.4682], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1479, device='cuda:0', dtype=torch.float64)
tensor([-2.4185, -3.0940, -2.9747, -3.3561, -3.4692], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6320, device='cuda:0', dtype=torch.float64)
tensor([-2.4168, -3.0643, -2.9717, -3.3498, -3.4641], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1368, device='cuda:0', dtype=torch.float64)
tensor([-2.3643, -3.0108, -2.9867, -3.3787, -3.4731], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5793, device='cuda:0', dtype=torch.float64)
tensor([-2.2836, -2.9655, -3.0277, -3.4227, -3.4783], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4904, device='cuda:0', dtype=torch.float64)
tensor([-2.2112, -2.9237, -3.0869, -3.4853, -3.4791], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3760, device='cuda:0', dtype=torch.float64)
tensor([-2.1771, -2.9073, -3.1429, -3.5268, -3.4781], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2432, device='cuda:0', dtype=torch.float64)
tensor([-2.1498, -2.8921, -3.2101, -3.5534, -3.4875], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1531, device='cuda:0', dtype=torch.float64)
tensor([-2.1534, -2.9176, -3.2461, -3.5383, -3.5187], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3243, device='cuda:0', dtype=torch.float64)
tensor([-2.1757, -2.9424, -3.2742, -3.5132, -3.5509], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6715, device='cuda:0', dtype=torch.float64)
tensor([-2.1958, -2.9678, -3.3137, -3.4838, -3.5641], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3019, device='cuda:0', dtype=torch.float64)
tensor([-2.2097, -2.9798, -3.3477, -3.4664, -3.5675], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2514, device='cuda:0', dtype=torch.float64)
tensor([-2.2023, -2.9968, -3.3673, -3.4853, -3.5551], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3753, device='cuda:0', dtype=torch.float64)
tensor([-2.1845, -3.0182, -3.3897, -3.5088, -3.5519], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3438, device='cuda:0', dtype=torch.float64)
tensor([-2.1916, -3.0433, -3.3828, -3.5203, -3.5477], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3365, device='cuda:0', dtype=torch.float64)
tensor([-2.2248, -3.0641, -3.3619, -3.5142, -3.5503], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0969, device='cuda:0', dtype=torch.float64)
tensor([-2.2727, -3.0510, -3.3507, -3.4878, -3.5494], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2827, device='cuda:0', dtype=torch.float64)
tensor([-2.3017, -3.0244, -3.3409, -3.4872, -3.5543], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2837, device='cuda:0', dtype=torch.float64)
tensor([-2.3328, -2.9964, -3.3160, -3.4609, -3.5588], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2399, device='cuda:0', dtype=torch.float64)
tensor([-2.3700, -2.9747, -3.2719, -3.4369, -3.5650], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3108, device='cuda:0', dtype=torch.float64)
tensor([-2.3884, -2.9472, -3.2260, -3.4418, -3.5806], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1849, device='cuda:0', dtype=torch.float64)
tensor([-2.3904, -2.9187, -3.1880, -3.4695, -3.5876], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4668, device='cuda:0', dtype=torch.float64)
tensor([-2.3610, -2.8729, -3.1589, -3.5253, -3.5762], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5060, device='cuda:0', dtype=torch.float64)
tensor([-2.3048, -2.8478, -3.1475, -3.6024, -3.5490], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1409, device='cuda:0', dtype=torch.float64)
tensor([-2.2349, -2.8382, -3.1505, -3.6857, -3.5237], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1662, device='cuda:0', dtype=torch.float64)
tensor([-2.1584, -2.8421, -3.1671, -3.7718, -3.4999], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2339, device='cuda:0', dtype=torch.float64)
tensor([-2.1181, -2.8770, -3.1517, -3.8120, -3.4818], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3499, device='cuda:0', dtype=torch.float64)
tensor([-2.1170, -2.9286, -3.1504, -3.8300, -3.4631], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7129, device='cuda:0', dtype=torch.float64)
tensor([-2.1570, -3.0008, -3.1398, -3.7795, -3.4662], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2733, device='cuda:0', dtype=torch.float64)
tensor([-2.2375, -3.0627, -3.1116, -3.6920, -3.4789], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1586, device='cuda:0', dtype=torch.float64)
tensor([-2.3348, -3.1096, -3.0699, -3.6075, -3.5060], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0547, device='cuda:0', dtype=torch.float64)
tensor([-2.3950, -3.1439, -3.0535, -3.5594, -3.5395], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1867, device='cuda:0', dtype=torch.float64)
tensor([-2.4188, -3.1581, -3.0401, -3.5257, -3.5827], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6369, device='cuda:0', dtype=torch.float64)
tensor([-2.3958, -3.1382, -3.0522, -3.5151, -3.6065], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2408, device='cuda:0', dtype=torch.float64)
tensor([-2.3511, -3.0924, -3.0851, -3.5222, -3.6124], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2270, device='cuda:0', dtype=torch.float64)
tensor([-2.2887, -3.0315, -3.1498, -3.5478, -3.6059], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3070, device='cuda:0', dtype=torch.float64)
tensor([-2.2000, -2.9757, -3.2087, -3.6033, -3.6078], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0732, device='cuda:0', dtype=torch.float64)
tensor([-2.1125, -2.9290, -3.2684, -3.6630, -3.6001], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4930, device='cuda:0', dtype=torch.float64)
tensor([-2.0901, -2.9033, -3.3052, -3.6917, -3.5962], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3240, device='cuda:0', dtype=torch.float64)
tensor([-2.1217, -2.9299, -3.2998, -3.6614, -3.5957], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3235, device='cuda:0', dtype=torch.float64)
tensor([-2.1816, -2.9825, -3.2636, -3.6148, -3.6090], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4643, device='cuda:0', dtype=torch.float64)
tensor([-2.2378, -3.0589, -3.2216, -3.5720, -3.6373], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3212, device='cuda:0', dtype=torch.float64)
tensor([-2.2817, -3.1161, -3.1936, -3.5516, -3.6607], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0603, device='cuda:0', dtype=torch.float64)
tensor([-2.3137, -3.1665, -3.1682, -3.5345, -3.6772], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2233, device='cuda:0', dtype=torch.float64)
tensor([-2.3369, -3.1867, -3.1495, -3.5251, -3.6811], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1740, device='cuda:0', dtype=torch.float64)
tensor([-2.3543, -3.2047, -3.1363, -3.5298, -3.6829], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1911, device='cuda:0', dtype=torch.float64)
tensor([-2.3377, -3.1876, -3.1419, -3.5470, -3.6686], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0745, device='cuda:0', dtype=torch.float64)
tensor([-2.3053, -3.1421, -3.1583, -3.5818, -3.6444], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2665, device='cuda:0', dtype=torch.float64)
tensor([-2.2439, -3.0785, -3.1854, -3.6126, -3.6170], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0872, device='cuda:0', dtype=torch.float64)
tensor([-2.1908, -3.0210, -3.1932, -3.6432, -3.5900], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5420, device='cuda:0', dtype=torch.float64)
tensor([-2.1511, -2.9987, -3.2021, -3.6543, -3.5721], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1521, device='cuda:0', dtype=torch.float64)
tensor([-2.1493, -2.9988, -3.1896, -3.6406, -3.5543], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4657, device='cuda:0', dtype=torch.float64)
tensor([-2.1589, -3.0075, -3.1906, -3.6251, -3.5298], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3602, device='cuda:0', dtype=torch.float64)
tensor([-2.1654, -3.0252, -3.2039, -3.6203, -3.5063], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4516, device='cuda:0', dtype=torch.float64)
tensor([-2.2181, -3.0795, -3.1831, -3.5666, -3.5004], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4578, device='cuda:0', dtype=torch.float64)
tensor([-2.3010, -3.1519, -3.1453, -3.4627, -3.5076], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2928, device='cuda:0', dtype=torch.float64)
tensor([-2.3587, -3.1983, -3.1393, -3.3880, -3.5070], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0671, device='cuda:0', dtype=torch.float64)
tensor([-2.4002, -3.2143, -3.1460, -3.3352, -3.5032], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1458, device='cuda:0', dtype=torch.float64)
tensor([-2.4259, -3.1992, -3.1628, -3.2970, -3.4930], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1306, device='cuda:0', dtype=torch.float64)
tensor([-2.3924, -3.1667, -3.2265, -3.3136, -3.4676], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5790, device='cuda:0', dtype=torch.float64)
tensor([-2.3291, -3.1252, -3.2967, -3.3629, -3.4498], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4199, device='cuda:0', dtype=torch.float64)
tensor([-2.2547, -3.0845, -3.3554, -3.4324, -3.4540], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1425, device='cuda:0', dtype=torch.float64)
tensor([-2.1760, -3.0448, -3.4149, -3.5069, -3.4754], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3951, device='cuda:0', dtype=torch.float64)
tensor([-2.0938, -2.9942, -3.4739, -3.5937, -3.4939], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2946, device='cuda:0', dtype=torch.float64)
tensor([-2.0639, -2.9639, -3.4901, -3.6561, -3.4889], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5015, device='cuda:0', dtype=torch.float64)
tensor([-2.0818, -2.9816, -3.4538, -3.6836, -3.5038], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4077, device='cuda:0', dtype=torch.float64)
tensor([-2.1389, -2.9889, -3.3983, -3.6902, -3.5163], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6139, device='cuda:0', dtype=torch.float64)
tensor([-2.2168, -3.0181, -3.3049, -3.6908, -3.5189], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2734, device='cuda:0', dtype=torch.float64)
tensor([-2.2738, -3.0242, -3.2376, -3.6961, -3.5108], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2388, device='cuda:0', dtype=torch.float64)
tensor([-2.3263, -3.0346, -3.1691, -3.7116, -3.5191], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3863, device='cuda:0', dtype=torch.float64)
tensor([-2.3952, -3.0601, -3.0904, -3.7156, -3.5285], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0284, device='cuda:0', dtype=torch.float64)
tensor([-2.4452, -3.0870, -3.0300, -3.7080, -3.5336], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1863, device='cuda:0', dtype=torch.float64)
tensor([-2.4798, -3.1085, -3.0029, -3.6761, -3.5461], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3345, device='cuda:0', dtype=torch.float64)
tensor([-2.5067, -3.1212, -3.0067, -3.6489, -3.5452], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4145, device='cuda:0', dtype=torch.float64)
tensor([-2.5089, -3.1298, -3.0125, -3.6281, -3.5550], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4867, device='cuda:0', dtype=torch.float64)
tensor([-2.4892, -3.1392, -3.0423, -3.6056, -3.5759], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3545, device='cuda:0', dtype=torch.float64)
tensor([-2.4402, -3.1370, -3.0885, -3.5956, -3.5955], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3173, device='cuda:0', dtype=torch.float64)
tensor([-2.3569, -3.1343, -3.1652, -3.6120, -3.6036], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5144, device='cuda:0', dtype=torch.float64)
tensor([-2.3027, -3.1652, -3.2074, -3.6305, -3.6161], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6169, device='cuda:0', dtype=torch.float64)
tensor([-2.2335, -3.1684, -3.2729, -3.6623, -3.6204], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2616, device='cuda:0', dtype=torch.float64)
tensor([-2.1601, -3.1470, -3.3382, -3.6977, -3.6118], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2383, device='cuda:0', dtype=torch.float64)
tensor([-2.1142, -3.1184, -3.4043, -3.6976, -3.5965], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3185, device='cuda:0', dtype=torch.float64)
tensor([-2.0876, -3.0825, -3.4559, -3.6832, -3.5757], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9878, device='cuda:0', dtype=torch.float64)
tensor([-2.1047, -3.0483, -3.4836, -3.6416, -3.5613], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1554, device='cuda:0', dtype=torch.float64)
tensor([-2.1494, -3.0316, -3.4925, -3.5925, -3.5531], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1922, device='cuda:0', dtype=torch.float64)
tensor([-2.2009, -3.0258, -3.4867, -3.5420, -3.5590], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4311, device='cuda:0', dtype=torch.float64)
tensor([-2.2766, -3.0282, -3.4636, -3.4971, -3.5789], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2302, device='cuda:0', dtype=torch.float64)
tensor([-2.3552, -3.0292, -3.4286, -3.4569, -3.6026], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3083, device='cuda:0', dtype=torch.float64)
tensor([-2.4152, -3.0207, -3.4018, -3.4202, -3.6365], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1926, device='cuda:0', dtype=torch.float64)
tensor([-2.4524, -3.0076, -3.3602, -3.3963, -3.6615], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3560, device='cuda:0', dtype=torch.float64)
tensor([-2.4796, -2.9889, -3.3224, -3.4005, -3.7056], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4243, device='cuda:0', dtype=torch.float64)
tensor([-2.4732, -2.9575, -3.2992, -3.4298, -3.7390], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3539, device='cuda:0', dtype=torch.float64)
tensor([-2.4244, -2.9334, -3.2818, -3.4785, -3.7514], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2856, device='cuda:0', dtype=torch.float64)
tensor([-2.3591, -2.9198, -3.2557, -3.5286, -3.7588], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4019, device='cuda:0', dtype=torch.float64)
tensor([-2.2789, -2.9048, -3.2349, -3.5870, -3.7489], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3218, device='cuda:0', dtype=torch.float64)
tensor([-2.2059, -2.8898, -3.2191, -3.6429, -3.7177], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3427, device='cuda:0', dtype=torch.float64)
tensor([-2.1304, -2.8805, -3.2121, -3.7236, -3.6892], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3882, device='cuda:0', dtype=torch.float64)
tensor([-2.0894, -2.8830, -3.2039, -3.7891, -3.6546], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0281, device='cuda:0', dtype=torch.float64)
tensor([-2.0706, -2.8978, -3.1859, -3.8158, -3.6137], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4644, device='cuda:0', dtype=torch.float64)
tensor([-2.0831, -2.9158, -3.1568, -3.8261, -3.5722], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2900, device='cuda:0', dtype=torch.float64)
tensor([-2.1369, -2.9513, -3.1257, -3.8228, -3.5404], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1916, device='cuda:0', dtype=torch.float64)
tensor([-2.1958, -2.9836, -3.1141, -3.8021, -3.5176], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2816, device='cuda:0', dtype=torch.float64)
tensor([-2.2515, -3.0185, -3.1286, -3.7721, -3.5123], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1289, device='cuda:0', dtype=torch.float64)
tensor([-2.3115, -3.0476, -3.1383, -3.7291, -3.5153], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5056, device='cuda:0', dtype=torch.float64)
tensor([-2.3756, -3.0703, -3.1636, -3.6797, -3.5232], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2925, device='cuda:0', dtype=torch.float64)
tensor([-2.4226, -3.0871, -3.1889, -3.6494, -3.5344], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2165, device='cuda:0', dtype=torch.float64)
tensor([-2.4423, -3.1017, -3.2187, -3.6542, -3.5483], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0888, device='cuda:0', dtype=torch.float64)
tensor([-2.4228, -3.1104, -3.2520, -3.6811, -3.5577], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9705, device='cuda:0', dtype=torch.float64)
tensor([-2.3860, -3.1158, -3.2665, -3.7101, -3.5733], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2917, device='cuda:0', dtype=torch.float64)
tensor([-2.3520, -3.1194, -3.2719, -3.7287, -3.5921], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9967, device='cuda:0', dtype=torch.float64)
tensor([-2.3056, -3.1140, -3.2746, -3.7401, -3.6116], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6046, device='cuda:0', dtype=torch.float64)
tensor([-2.2843, -3.1227, -3.2558, -3.7213, -3.6171], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0931, device='cuda:0', dtype=torch.float64)
tensor([-2.2727, -3.1310, -3.2461, -3.6939, -3.6355], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2437, device='cuda:0', dtype=torch.float64)
tensor([-2.2705, -3.1402, -3.2412, -3.6578, -3.6580], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1934, device='cuda:0', dtype=torch.float64)
tensor([-2.2764, -3.1520, -3.2418, -3.6185, -3.6912], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3418, device='cuda:0', dtype=torch.float64)
tensor([-2.2764, -3.1295, -3.2412, -3.5914, -3.7144], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5571, device='cuda:0', dtype=torch.float64)
tensor([-2.3011, -3.1006, -3.2475, -3.5609, -3.7206], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3250, device='cuda:0', dtype=torch.float64)
tensor([-2.3214, -3.0745, -3.2544, -3.5355, -3.7193], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1374, device='cuda:0', dtype=torch.float64)
tensor([-2.3378, -3.0761, -3.2457, -3.5108, -3.7175], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9962, device='cuda:0', dtype=torch.float64)
tensor([-2.3609, -3.0896, -3.2367, -3.5023, -3.7052], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4698, device='cuda:0', dtype=torch.float64)
tensor([-2.3674, -3.0931, -3.2367, -3.4926, -3.6896], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3387, device='cuda:0', dtype=torch.float64)
tensor([-2.3567, -3.0927, -3.2360, -3.4941, -3.6648], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2458, device='cuda:0', dtype=torch.float64)
tensor([-2.3236, -3.0876, -3.2420, -3.5154, -3.6542], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4024, device='cuda:0', dtype=torch.float64)
tensor([-2.2738, -3.0605, -3.2483, -3.5537, -3.6497], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1812, device='cuda:0', dtype=torch.float64)
tensor([-2.2383, -3.0469, -3.2512, -3.5753, -3.6353], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4881, device='cuda:0', dtype=torch.float64)
tensor([-2.2323, -3.0458, -3.2341, -3.6046, -3.6264], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2577, device='cuda:0', dtype=torch.float64)
tensor([-2.2401, -3.0514, -3.2083, -3.6267, -3.6187], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4678, device='cuda:0', dtype=torch.float64)
tensor([-2.2548, -3.0595, -3.1703, -3.6383, -3.6194], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5035, device='cuda:0', dtype=torch.float64)
tensor([-2.3023, -3.0960, -3.1314, -3.6390, -3.6192], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0630, device='cuda:0', dtype=torch.float64)
tensor([-2.3478, -3.1269, -3.1047, -3.6419, -3.6110], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5185, device='cuda:0', dtype=torch.float64)
tensor([-2.4115, -3.1651, -3.0761, -3.6293, -3.6106], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3731, device='cuda:0', dtype=torch.float64)
tensor([-2.4443, -3.2007, -3.0549, -3.6186, -3.6191], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3112, device='cuda:0', dtype=torch.float64)
tensor([-2.4411, -3.2059, -3.0725, -3.6206, -3.6165], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1463, device='cuda:0', dtype=torch.float64)
tensor([-2.4334, -3.2138, -3.1038, -3.6294, -3.6079], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1698, device='cuda:0', dtype=torch.float64)
tensor([-2.4083, -3.1978, -3.1502, -3.6480, -3.5794], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1802, device='cuda:0', dtype=torch.float64)
tensor([-2.3527, -3.1651, -3.2001, -3.6807, -3.5562], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4297, device='cuda:0', dtype=torch.float64)
tensor([-2.2789, -3.1358, -3.2392, -3.7298, -3.5486], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2496, device='cuda:0', dtype=torch.float64)
tensor([-2.2323, -3.1430, -3.2651, -3.7583, -3.5520], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2217, device='cuda:0', dtype=torch.float64)
tensor([-2.2341, -3.1587, -3.2659, -3.7548, -3.5780], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4131, device='cuda:0', dtype=torch.float64)
tensor([-2.2886, -3.1791, -3.2351, -3.7145, -3.6122], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2656, device='cuda:0', dtype=torch.float64)
tensor([-2.3653, -3.2048, -3.2137, -3.6920, -3.6506], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3524, device='cuda:0', dtype=torch.float64)
tensor([-2.4705, -3.2501, -3.1901, -3.6439, -3.6899], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5003, device='cuda:0', dtype=torch.float64)
tensor([-2.5227, -3.2847, -3.2111, -3.6177, -3.7133], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1387, device='cuda:0', dtype=torch.float64)
tensor([-2.5261, -3.2965, -3.2591, -3.5940, -3.7387], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2482, device='cuda:0', dtype=torch.float64)
tensor([-2.4989, -3.2418, -3.3099, -3.5909, -3.7310], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2695, device='cuda:0', dtype=torch.float64)
tensor([-2.4408, -3.1833, -3.3520, -3.5857, -3.7123], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1274, device='cuda:0', dtype=torch.float64)
tensor([-2.3866, -3.1128, -3.3873, -3.5896, -3.6717], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1332, device='cuda:0', dtype=torch.float64)
tensor([-2.3342, -3.0487, -3.4214, -3.6050, -3.6182], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3455, device='cuda:0', dtype=torch.float64)
tensor([-2.3097, -3.0055, -3.4422, -3.6101, -3.5720], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4021, device='cuda:0', dtype=torch.float64)
tensor([-2.3058, -2.9696, -3.4313, -3.6223, -3.5655], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1820, device='cuda:0', dtype=torch.float64)
tensor([-2.2872, -2.9250, -3.4092, -3.6532, -3.5691], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1645, device='cuda:0', dtype=torch.float64)
tensor([-2.2703, -2.8959, -3.3806, -3.6825, -3.5799], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4146, device='cuda:0', dtype=torch.float64)
tensor([-2.2547, -2.8937, -3.3317, -3.6915, -3.6078], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3749, device='cuda:0', dtype=torch.float64)
tensor([-2.2621, -2.8990, -3.2789, -3.6992, -3.6382], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4430, device='cuda:0', dtype=torch.float64)
tensor([-2.3025, -2.9368, -3.2244, -3.6818, -3.6764], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4749, device='cuda:0', dtype=torch.float64)
tensor([-2.3355, -2.9878, -3.1956, -3.6617, -3.6952], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1978, device='cuda:0', dtype=torch.float64)
tensor([-2.3771, -3.0457, -3.2040, -3.6629, -3.7258], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3105, device='cuda:0', dtype=torch.float64)
tensor([-2.4174, -3.1057, -3.2233, -3.6544, -3.7510], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3593, device='cuda:0', dtype=torch.float64)
tensor([-2.4430, -3.1511, -3.2430, -3.6568, -3.7501], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0604, device='cuda:0', dtype=torch.float64)
tensor([-2.4272, -3.1738, -3.2986, -3.6636, -3.7402], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1671, device='cuda:0', dtype=torch.float64)
tensor([-2.3952, -3.1815, -3.3672, -3.6782, -3.7253], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1345, device='cuda:0', dtype=torch.float64)
tensor([-2.3734, -3.1955, -3.4223, -3.6676, -3.7045], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0820, device='cuda:0', dtype=torch.float64)
tensor([-2.3519, -3.2150, -3.4657, -3.6571, -3.6652], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3707, device='cuda:0', dtype=torch.float64)
tensor([-2.3461, -3.2368, -3.4885, -3.6187, -3.6455], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2752, device='cuda:0', dtype=torch.float64)
tensor([-2.3587, -3.2393, -3.5080, -3.5576, -3.6421], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0966, device='cuda:0', dtype=torch.float64)
tensor([-2.3441, -3.2304, -3.5277, -3.5232, -3.6353], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3504, device='cuda:0', dtype=torch.float64)
tensor([-2.3456, -3.2199, -3.5376, -3.4847, -3.6384], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1216, device='cuda:0', dtype=torch.float64)
tensor([-2.3693, -3.2170, -3.5137, -3.4566, -3.6621], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3380, device='cuda:0', dtype=torch.float64)
tensor([-2.3856, -3.2059, -3.5155, -3.4484, -3.6968], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0897, device='cuda:0', dtype=torch.float64)
tensor([-2.3848, -3.1914, -3.4936, -3.4543, -3.7403], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4106, device='cuda:0', dtype=torch.float64)
tensor([-2.3488, -3.1520, -3.4756, -3.4881, -3.7636], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7404, device='cuda:0', dtype=torch.float64)
tensor([-2.3104, -3.1027, -3.4406, -3.5411, -3.7653], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6211, device='cuda:0', dtype=torch.float64)
tensor([-2.2074, -3.0252, -3.4360, -3.6296, -3.7603], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4655, device='cuda:0', dtype=torch.float64)
tensor([-2.1256, -2.9815, -3.4341, -3.7157, -3.7642], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2393, device='cuda:0', dtype=torch.float64)
tensor([-2.1037, -2.9687, -3.4087, -3.7832, -3.7729], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9275, device='cuda:0', dtype=torch.float64)
tensor([-2.1267, -2.9857, -3.3615, -3.8282, -3.7904], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6443, device='cuda:0', dtype=torch.float64)
tensor([-2.2096, -3.0518, -3.2968, -3.8021, -3.8150], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1440, device='cuda:0', dtype=torch.float64)
tensor([-2.3266, -3.1351, -3.2210, -3.7484, -3.8214], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2952, device='cuda:0', dtype=torch.float64)
tensor([-2.4671, -3.2308, -3.1432, -3.6780, -3.8387], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3631, device='cuda:0', dtype=torch.float64)
tensor([-2.5934, -3.3413, -3.0816, -3.5932, -3.8576], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2548, device='cuda:0', dtype=torch.float64)
tensor([-2.6993, -3.4424, -3.0452, -3.5275, -3.8860], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3389, device='cuda:0', dtype=torch.float64)
tensor([-2.7325, -3.4773, -3.0443, -3.4899, -3.8992], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5579, device='cuda:0', dtype=torch.float64)
tensor([-2.6927, -3.4487, -3.0666, -3.4740, -3.8768], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4144, device='cuda:0', dtype=torch.float64)
tensor([-2.5888, -3.3612, -3.1072, -3.5011, -3.8223], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9850, device='cuda:0', dtype=torch.float64)
tensor([-2.4526, -3.2569, -3.1700, -3.5419, -3.7525], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1022, device='cuda:0', dtype=torch.float64)
tensor([-2.3348, -3.1634, -3.2185, -3.5950, -3.6896], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3227, device='cuda:0', dtype=torch.float64)
tensor([-2.2611, -3.1051, -3.2588, -3.6499, -3.6617], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1971, device='cuda:0', dtype=torch.float64)
tensor([-2.2174, -3.0683, -3.2803, -3.6817, -3.6295], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2357, device='cuda:0', dtype=torch.float64)
tensor([-2.2290, -3.0643, -3.2599, -3.6565, -3.6029], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2290, device='cuda:0', dtype=torch.float64)
tensor([-2.2856, -3.0750, -3.2242, -3.5976, -3.5945], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1393, device='cuda:0', dtype=torch.float64)
tensor([-2.3566, -3.1090, -3.1907, -3.5543, -3.5900], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3682, device='cuda:0', dtype=torch.float64)
tensor([-2.4262, -3.1435, -3.1697, -3.5171, -3.5878], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0713, device='cuda:0', dtype=torch.float64)
tensor([-2.4732, -3.1800, -3.1665, -3.4915, -3.5894], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0645, device='cuda:0', dtype=torch.float64)
tensor([-2.4749, -3.1983, -3.1900, -3.4947, -3.5658], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1283, device='cuda:0', dtype=torch.float64)
tensor([-2.4498, -3.2120, -3.2152, -3.5151, -3.5406], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3912, device='cuda:0', dtype=torch.float64)
tensor([-2.4495, -3.2330, -3.2225, -3.5179, -3.5031], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4056, device='cuda:0', dtype=torch.float64)
tensor([-2.4202, -3.2138, -3.2427, -3.5245, -3.4653], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2562, device='cuda:0', dtype=torch.float64)
tensor([-2.3797, -3.1936, -3.2621, -3.5435, -3.4373], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3480, device='cuda:0', dtype=torch.float64)
tensor([-2.3260, -3.1794, -3.2868, -3.5660, -3.4264], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4128, device='cuda:0', dtype=torch.float64)
tensor([-2.2998, -3.1702, -3.3133, -3.5711, -3.4324], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1121, device='cuda:0', dtype=torch.float64)
tensor([-2.3045, -3.1872, -3.3168, -3.5530, -3.4573], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3073, device='cuda:0', dtype=torch.float64)
tensor([-2.2972, -3.1942, -3.3217, -3.5410, -3.4903], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4472, device='cuda:0', dtype=torch.float64)
tensor([-2.3293, -3.1956, -3.3019, -3.5272, -3.5234], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3509, device='cuda:0', dtype=torch.float64)
tensor([-2.3694, -3.1948, -3.2905, -3.5107, -3.5472], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0186, device='cuda:0', dtype=torch.float64)
tensor([-2.3784, -3.1910, -3.2824, -3.5046, -3.5599], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4702, device='cuda:0', dtype=torch.float64)
tensor([-2.3971, -3.1901, -3.2421, -3.5106, -3.5723], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5606, device='cuda:0', dtype=torch.float64)
tensor([-2.4533, -3.2251, -3.2074, -3.5133, -3.6100], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0407, device='cuda:0', dtype=torch.float64)
tensor([-2.4574, -3.2381, -3.1950, -3.5447, -3.6560], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1697, device='cuda:0', dtype=torch.float64)
tensor([-2.4454, -3.2252, -3.2182, -3.5886, -3.6834], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2925, device='cuda:0', dtype=torch.float64)
tensor([-2.4168, -3.1826, -3.2669, -3.6563, -3.6807], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3969, device='cuda:0', dtype=torch.float64)
tensor([-2.3859, -3.1410, -3.3186, -3.7030, -3.6864], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3360, device='cuda:0', dtype=torch.float64)
tensor([-2.3485, -3.1197, -3.3688, -3.7589, -3.6637], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4245, device='cuda:0', dtype=torch.float64)
tensor([-2.3447, -3.1159, -3.4019, -3.7850, -3.6433], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2436, device='cuda:0', dtype=torch.float64)
tensor([-2.3358, -3.1136, -3.4254, -3.8345, -3.6075], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2026, device='cuda:0', dtype=torch.float64)
tensor([-2.3223, -3.1103, -3.4628, -3.9048, -3.5926], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1979, device='cuda:0', dtype=torch.float64)
tensor([-2.3250, -3.1397, -3.4792, -3.9643, -3.6002], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2790, device='cuda:0', dtype=torch.float64)
tensor([-2.3621, -3.1806, -3.4782, -4.0017, -3.6106], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1786, device='cuda:0', dtype=torch.float64)
tensor([-2.3979, -3.2319, -3.4615, -3.9983, -3.6487], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5047, device='cuda:0', dtype=torch.float64)
tensor([-2.4540, -3.2945, -3.4252, -3.9395, -3.7067], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6147, device='cuda:0', dtype=torch.float64)
tensor([-2.5196, -3.3980, -3.3652, -3.8159, -3.7734], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1232, device='cuda:0', dtype=torch.float64)
tensor([-2.5954, -3.4969, -3.3073, -3.7197, -3.8274], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1749, device='cuda:0', dtype=torch.float64)
tensor([-2.6381, -3.5329, -3.2667, -3.6773, -3.8548], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1753, device='cuda:0', dtype=torch.float64)
tensor([-2.6097, -3.4880, -3.2540, -3.6806, -3.8299], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1330, device='cuda:0', dtype=torch.float64)
tensor([-2.5694, -3.4193, -3.2779, -3.6922, -3.8024], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4242, device='cuda:0', dtype=torch.float64)
tensor([-2.5006, -3.3314, -3.3190, -3.7102, -3.7720], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3233, device='cuda:0', dtype=torch.float64)
tensor([-2.3927, -3.2247, -3.3738, -3.7533, -3.7343], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1202, device='cuda:0', dtype=torch.float64)
tensor([-2.2987, -3.1502, -3.4038, -3.7926, -3.7249], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1727, device='cuda:0', dtype=torch.float64)
tensor([-2.2540, -3.1023, -3.4240, -3.8185, -3.7312], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2355, device='cuda:0', dtype=torch.float64)
tensor([-2.2757, -3.0878, -3.4171, -3.7914, -3.7581], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3091, device='cuda:0', dtype=torch.float64)
tensor([-2.3301, -3.0902, -3.4063, -3.7148, -3.7954], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6388, device='cuda:0', dtype=torch.float64)
tensor([-2.3909, -3.1125, -3.3972, -3.6316, -3.8307], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4682, device='cuda:0', dtype=torch.float64)
tensor([-2.4692, -3.1479, -3.3862, -3.5504, -3.8523], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1813, device='cuda:0', dtype=torch.float64)
tensor([-2.5241, -3.1831, -3.3719, -3.4981, -3.8784], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1889, device='cuda:0', dtype=torch.float64)
tensor([-2.5428, -3.2065, -3.3656, -3.4555, -3.9013], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5175, device='cuda:0', dtype=torch.float64)
tensor([-2.5324, -3.2229, -3.3649, -3.4271, -3.9114], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2342, device='cuda:0', dtype=torch.float64)
tensor([-2.5108, -3.2305, -3.3650, -3.4090, -3.9183], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1842, device='cuda:0', dtype=torch.float64)
tensor([-2.4697, -3.2135, -3.3758, -3.4075, -3.9072], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1642, device='cuda:0', dtype=torch.float64)
tensor([-2.4264, -3.2022, -3.3786, -3.4204, -3.8820], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1218, device='cuda:0', dtype=torch.float64)
tensor([-2.3865, -3.1890, -3.3799, -3.4300, -3.8563], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4204, device='cuda:0', dtype=torch.float64)
tensor([-2.3438, -3.1678, -3.3851, -3.4478, -3.8421], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3060, device='cuda:0', dtype=torch.float64)
tensor([-2.3019, -3.1615, -3.4111, -3.5078, -3.8248], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4106, device='cuda:0', dtype=torch.float64)
tensor([-2.2540, -3.1315, -3.4526, -3.5856, -3.8025], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2778, device='cuda:0', dtype=torch.float64)
tensor([-2.1931, -3.0991, -3.5014, -3.6566, -3.7749], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3907, device='cuda:0', dtype=torch.float64)
tensor([-2.1989, -3.1069, -3.4952, -3.6815, -3.7550], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9785, device='cuda:0', dtype=torch.float64)
tensor([-2.2001, -3.1177, -3.4748, -3.7212, -3.7365], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5948, device='cuda:0', dtype=torch.float64)
tensor([-2.2549, -3.1595, -3.4378, -3.7197, -3.7292], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1956, device='cuda:0', dtype=torch.float64)
tensor([-2.3343, -3.1954, -3.3988, -3.7068, -3.7089], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3127, device='cuda:0', dtype=torch.float64)
tensor([-2.4476, -3.2557, -3.3194, -3.6515, -3.7254], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4831, device='cuda:0', dtype=torch.float64)
tensor([-2.5448, -3.3036, -3.2528, -3.6000, -3.7556], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2265, device='cuda:0', dtype=torch.float64)
tensor([-2.6202, -3.3393, -3.2011, -3.5551, -3.7833], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2145, device='cuda:0', dtype=torch.float64)
tensor([-2.6480, -3.3419, -3.1640, -3.5260, -3.8064], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4336, device='cuda:0', dtype=torch.float64)
tensor([-2.6301, -3.3121, -3.1588, -3.5273, -3.7876], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1722, device='cuda:0', dtype=torch.float64)
tensor([-2.5492, -3.2505, -3.1866, -3.5570, -3.7640], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2469, device='cuda:0', dtype=torch.float64)
tensor([-2.4367, -3.1735, -3.2646, -3.6351, -3.7295], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1217, device='cuda:0', dtype=torch.float64)
tensor([-2.3178, -3.1240, -3.3613, -3.7306, -3.7104], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3160, device='cuda:0', dtype=torch.float64)
tensor([-2.2352, -3.1173, -3.4363, -3.8074, -3.7029], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1749, device='cuda:0', dtype=torch.float64)
tensor([-2.1996, -3.1175, -3.4855, -3.8555, -3.7189], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2084, device='cuda:0', dtype=torch.float64)
tensor([-2.1910, -3.1523, -3.5011, -3.9027, -3.7416], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2011, device='cuda:0', dtype=torch.float64)
tensor([-2.2360, -3.1937, -3.4839, -3.9174, -3.7696], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2948, device='cuda:0', dtype=torch.float64)
tensor([-2.3108, -3.2372, -3.4640, -3.9086, -3.7887], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2869, device='cuda:0', dtype=torch.float64)
tensor([-2.3839, -3.2668, -3.4652, -3.8978, -3.8103], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2026, device='cuda:0', dtype=torch.float64)
tensor([-2.4858, -3.3120, -3.4645, -3.8806, -3.8223], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4791, device='cuda:0', dtype=torch.float64)
tensor([-2.5833, -3.3636, -3.4544, -3.8536, -3.8215], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3019, device='cuda:0', dtype=torch.float64)
tensor([-2.6759, -3.3894, -3.4343, -3.8135, -3.7966], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1716, device='cuda:0', dtype=torch.float64)
tensor([-2.7507, -3.4119, -3.4325, -3.7848, -3.7707], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9661, device='cuda:0', dtype=torch.float64)
tensor([-2.7684, -3.3864, -3.4511, -3.7851, -3.7322], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2473, device='cuda:0', dtype=torch.float64)
tensor([-2.7479, -3.3295, -3.4965, -3.8232, -3.6853], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4046, device='cuda:0', dtype=torch.float64)
tensor([-2.6830, -3.2502, -3.5485, -3.8727, -3.6172], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1855, device='cuda:0', dtype=torch.float64)
tensor([-2.5924, -3.1624, -3.5859, -3.9345, -3.5647], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3231, device='cuda:0', dtype=torch.float64)
tensor([-2.4877, -3.0787, -3.6111, -3.9816, -3.5377], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9760, device='cuda:0', dtype=torch.float64)
tensor([-2.4006, -3.0221, -3.6289, -4.0169, -3.5278], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1113, device='cuda:0', dtype=torch.float64)
tensor([-2.3285, -2.9940, -3.6309, -4.0444, -3.5369], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3264, device='cuda:0', dtype=torch.float64)
tensor([-2.2883, -3.0024, -3.6025, -4.0489, -3.5744], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2277, device='cuda:0', dtype=torch.float64)
tensor([-2.2764, -3.0324, -3.5729, -4.0280, -3.6141], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1917, device='cuda:0', dtype=torch.float64)
tensor([-2.2867, -3.0859, -3.5232, -3.9852, -3.6502], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3743, device='cuda:0', dtype=torch.float64)
tensor([-2.3227, -3.1529, -3.4662, -3.9123, -3.6913], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1367, device='cuda:0', dtype=torch.float64)
tensor([-2.3758, -3.2376, -3.4164, -3.8326, -3.7284], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6823, device='cuda:0', dtype=torch.float64)
tensor([-2.4506, -3.3434, -3.3479, -3.7486, -3.7683], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2209, device='cuda:0', dtype=torch.float64)
tensor([-2.5366, -3.4353, -3.2855, -3.6784, -3.8075], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2291, device='cuda:0', dtype=torch.float64)
tensor([-2.5988, -3.4828, -3.2496, -3.6336, -3.8400], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0171, device='cuda:0', dtype=torch.float64)
tensor([-2.6241, -3.5090, -3.2305, -3.6130, -3.8521], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3071, device='cuda:0', dtype=torch.float64)
tensor([-2.6271, -3.5307, -3.2316, -3.6127, -3.8506], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1297, device='cuda:0', dtype=torch.float64)
tensor([-2.6104, -3.5317, -3.2443, -3.6235, -3.8419], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2165, device='cuda:0', dtype=torch.float64)
tensor([-2.5948, -3.5024, -3.2783, -3.6418, -3.8264], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2390, device='cuda:0', dtype=torch.float64)
tensor([-2.5968, -3.4718, -3.3033, -3.6492, -3.8142], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5294, device='cuda:0', dtype=torch.float64)
tensor([-2.6077, -3.4669, -3.3023, -3.6385, -3.7960], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3363, device='cuda:0', dtype=torch.float64)
tensor([-2.5737, -3.4230, -3.3181, -3.6745, -3.7778], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5696, device='cuda:0', dtype=torch.float64)
tensor([-2.5221, -3.3905, -3.3386, -3.7248, -3.7522], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2682, device='cuda:0', dtype=torch.float64)
tensor([-2.4562, -3.3498, -3.3629, -3.7777, -3.7428], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4585, device='cuda:0', dtype=torch.float64)
tensor([-2.3818, -3.3029, -3.4228, -3.8445, -3.7266], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3427, device='cuda:0', dtype=torch.float64)
tensor([-2.3178, -3.2622, -3.4702, -3.8858, -3.7342], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3886, device='cuda:0', dtype=torch.float64)
tensor([-2.2811, -3.2330, -3.5053, -3.8925, -3.7645], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1965, device='cuda:0', dtype=torch.float64)
tensor([-2.2918, -3.2326, -3.5065, -3.8556, -3.8002], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4748, device='cuda:0', dtype=torch.float64)
tensor([-2.3234, -3.2520, -3.4928, -3.8315, -3.8328], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1402, device='cuda:0', dtype=torch.float64)
tensor([-2.3622, -3.2735, -3.4698, -3.8112, -3.8705], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1790, device='cuda:0', dtype=torch.float64)
tensor([-2.4358, -3.3255, -3.4363, -3.7755, -3.9098], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0360, device='cuda:0', dtype=torch.float64)
tensor([-2.5156, -3.3892, -3.4138, -3.7368, -3.9517], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3124, device='cuda:0', dtype=torch.float64)
tensor([-2.5570, -3.4298, -3.4070, -3.7202, -3.9814], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1595, device='cuda:0', dtype=torch.float64)
tensor([-2.5853, -3.4572, -3.4099, -3.7094, -3.9925], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0304, device='cuda:0', dtype=torch.float64)
tensor([-2.6018, -3.4795, -3.3945, -3.6998, -4.0022], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0928, device='cuda:0', dtype=torch.float64)
tensor([-2.5774, -3.4857, -3.3787, -3.7274, -3.9991], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1351, device='cuda:0', dtype=torch.float64)
tensor([-2.5544, -3.4812, -3.3509, -3.7575, -3.9908], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1806, device='cuda:0', dtype=torch.float64)
tensor([-2.5149, -3.4646, -3.3391, -3.8066, -3.9911], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0428, device='cuda:0', dtype=torch.float64)
tensor([-2.4577, -3.4321, -3.3355, -3.8545, -3.9810], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3127, device='cuda:0', dtype=torch.float64)
tensor([-2.4438, -3.3995, -3.3226, -3.8647, -3.9694], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2651, device='cuda:0', dtype=torch.float64)
tensor([-2.4354, -3.3845, -3.3168, -3.8561, -3.9637], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0683, device='cuda:0', dtype=torch.float64)
tensor([-2.4543, -3.3736, -3.2947, -3.8436, -3.9719], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2740, device='cuda:0', dtype=torch.float64)
tensor([-2.4702, -3.3417, -3.2983, -3.8575, -3.9674], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3701, device='cuda:0', dtype=torch.float64)
tensor([-2.4924, -3.3089, -3.2947, -3.8565, -3.9588], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1549, device='cuda:0', dtype=torch.float64)
tensor([-2.5006, -3.2499, -3.3101, -3.8615, -3.9376], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1665, device='cuda:0', dtype=torch.float64)
tensor([-2.5188, -3.1978, -3.3295, -3.8505, -3.9122], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1718, device='cuda:0', dtype=torch.float64)
tensor([-2.5198, -3.1366, -3.3503, -3.8603, -3.8746], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0254, device='cuda:0', dtype=torch.float64)
tensor([-2.4873, -3.0633, -3.3918, -3.8925, -3.8170], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1359, device='cuda:0', dtype=torch.float64)
tensor([-2.4272, -2.9870, -3.4651, -3.9555, -3.7705], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0540, device='cuda:0', dtype=torch.float64)
tensor([-2.3734, -2.9309, -3.5272, -4.0029, -3.7466], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0758, device='cuda:0', dtype=torch.float64)
tensor([-2.3408, -2.9204, -3.5481, -4.0383, -3.7426], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0561, device='cuda:0', dtype=torch.float64)
tensor([-2.3306, -2.9275, -3.5435, -4.0351, -3.7430], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2963, device='cuda:0', dtype=torch.float64)
tensor([-2.3428, -2.9514, -3.5449, -4.0110, -3.7476], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2349, device='cuda:0', dtype=torch.float64)
tensor([-2.3798, -3.0069, -3.5208, -3.9449, -3.7720], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1365, device='cuda:0', dtype=torch.float64)
tensor([-2.4004, -3.0493, -3.5170, -3.9165, -3.7964], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3742, device='cuda:0', dtype=torch.float64)
tensor([-2.4549, -3.0998, -3.4879, -3.8586, -3.8165], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9661, device='cuda:0', dtype=torch.float64)
tensor([-2.5210, -3.1610, -3.4248, -3.7996, -3.8327], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1779, device='cuda:0', dtype=torch.float64)
tensor([-2.6053, -3.2353, -3.3666, -3.7374, -3.8612], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0133, device='cuda:0', dtype=torch.float64)
tensor([-2.6804, -3.3023, -3.3170, -3.6851, -3.8777], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2271, device='cuda:0', dtype=torch.float64)
tensor([-2.7281, -3.3511, -3.2750, -3.6454, -3.8979], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9034, device='cuda:0', dtype=torch.float64)
tensor([-2.7296, -3.3646, -3.2614, -3.6392, -3.9030], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2835, device='cuda:0', dtype=torch.float64)
tensor([-2.7022, -3.3507, -3.2650, -3.6588, -3.8948], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4806, device='cuda:0', dtype=torch.float64)
tensor([-2.6522, -3.3360, -3.2757, -3.6873, -3.8800], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0759, device='cuda:0', dtype=torch.float64)
tensor([-2.5690, -3.2960, -3.3033, -3.7362, -3.8709], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2059, device='cuda:0', dtype=torch.float64)
tensor([-2.4921, -3.2519, -3.3244, -3.7931, -3.8456], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2848, device='cuda:0', dtype=torch.float64)
tensor([-2.4573, -3.2353, -3.3293, -3.8426, -3.8259], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2464, device='cuda:0', dtype=torch.float64)
tensor([-2.4201, -3.2504, -3.3136, -3.8960, -3.7779], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3071, device='cuda:0', dtype=torch.float64)
tensor([-2.4121, -3.2751, -3.2896, -3.9347, -3.7527], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4989, device='cuda:0', dtype=torch.float64)
tensor([-2.4414, -3.3143, -3.2550, -3.9594, -3.7572], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3450, device='cuda:0', dtype=torch.float64)
tensor([-2.4903, -3.3696, -3.2030, -3.9473, -3.7743], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1022, device='cuda:0', dtype=torch.float64)
tensor([-2.5460, -3.4185, -3.1604, -3.9623, -3.8059], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3807, device='cuda:0', dtype=torch.float64)
tensor([-2.5958, -3.4579, -3.1592, -3.9701, -3.8423], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3316, device='cuda:0', dtype=torch.float64)
tensor([-2.5942, -3.4652, -3.1995, -3.9829, -3.8421], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3307, device='cuda:0', dtype=torch.float64)
tensor([-2.5844, -3.4660, -3.2449, -3.9784, -3.8206], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0880, device='cuda:0', dtype=torch.float64)
tensor([-2.5839, -3.4698, -3.2971, -3.9778, -3.8100], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2917, device='cuda:0', dtype=torch.float64)
tensor([-2.5961, -3.4861, -3.3571, -3.9877, -3.8073], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3281, device='cuda:0', dtype=torch.float64)
tensor([-2.6162, -3.4733, -3.4358, -3.9873, -3.7896], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2074, device='cuda:0', dtype=torch.float64)
tensor([-2.6636, -3.4611, -3.4883, -3.9832, -3.7992], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0712, device='cuda:0', dtype=torch.float64)
tensor([-2.6932, -3.4621, -3.5185, -3.9844, -3.8317], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2265, device='cuda:0', dtype=torch.float64)
tensor([-2.6939, -3.4464, -3.5454, -3.9790, -3.8603], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0731, device='cuda:0', dtype=torch.float64)
tensor([-2.6921, -3.4524, -3.5697, -3.9384, -3.8829], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1245, device='cuda:0', dtype=torch.float64)
tensor([-2.6751, -3.4558, -3.5797, -3.8603, -3.9123], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2722, device='cuda:0', dtype=torch.float64)
tensor([-2.6610, -3.4542, -3.5917, -3.7929, -3.9267], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2405, device='cuda:0', dtype=torch.float64)
tensor([-2.6300, -3.4362, -3.6113, -3.7414, -3.9212], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1825, device='cuda:0', dtype=torch.float64)
tensor([-2.6093, -3.4327, -3.6034, -3.6719, -3.9241], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3647, device='cuda:0', dtype=torch.float64)
tensor([-2.6200, -3.4477, -3.5763, -3.5940, -3.9343], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1076, device='cuda:0', dtype=torch.float64)
tensor([-2.6688, -3.4866, -3.5397, -3.4979, -3.9482], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4093, device='cuda:0', dtype=torch.float64)
tensor([-2.6998, -3.5078, -3.5233, -3.4480, -3.9203], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3429, device='cuda:0', dtype=torch.float64)
tensor([-2.6903, -3.4937, -3.5444, -3.4425, -3.8730], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2194, device='cuda:0', dtype=torch.float64)
tensor([-2.6462, -3.4622, -3.5912, -3.4773, -3.8237], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5413, device='cuda:0', dtype=torch.float64)
tensor([-2.5965, -3.4377, -3.6400, -3.5309, -3.8102], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2082, device='cuda:0', dtype=torch.float64)
tensor([-2.5511, -3.4301, -3.6855, -3.5884, -3.8087], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3423, device='cuda:0', dtype=torch.float64)
tensor([-2.5194, -3.4223, -3.7201, -3.6221, -3.8081], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1653, device='cuda:0', dtype=torch.float64)
tensor([-2.5114, -3.4305, -3.7483, -3.6624, -3.8204], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1227, device='cuda:0', dtype=torch.float64)
tensor([-2.5097, -3.4560, -3.7670, -3.7211, -3.8141], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2201, device='cuda:0', dtype=torch.float64)
tensor([-2.5119, -3.4854, -3.7899, -3.7814, -3.8180], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1974, device='cuda:0', dtype=torch.float64)
tensor([-2.5402, -3.4853, -3.8188, -3.8553, -3.8462], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2063, device='cuda:0', dtype=torch.float64)
tensor([-2.5722, -3.4934, -3.8485, -3.9078, -3.8863], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4443, device='cuda:0', dtype=torch.float64)
tensor([-2.6031, -3.4876, -3.8566, -3.9520, -3.9209], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3042, device='cuda:0', dtype=torch.float64)
tensor([-2.6405, -3.4857, -3.8535, -4.0043, -3.9467], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4267, device='cuda:0', dtype=torch.float64)
tensor([-2.7143, -3.5110, -3.8190, -4.0090, -3.9864], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1422, device='cuda:0', dtype=torch.float64)
tensor([-2.7451, -3.5078, -3.7987, -4.0284, -4.0011], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2293, device='cuda:0', dtype=torch.float64)
tensor([-2.7517, -3.4862, -3.7745, -4.0554, -3.9932], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2258, device='cuda:0', dtype=torch.float64)
tensor([-2.7520, -3.4650, -3.7938, -4.0585, -3.9851], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2695, device='cuda:0', dtype=torch.float64)
tensor([-2.7243, -3.4330, -3.8332, -4.1132, -3.9634], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3652, device='cuda:0', dtype=torch.float64)
tensor([-2.7139, -3.4197, -3.8497, -4.1528, -3.9475], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3698, device='cuda:0', dtype=torch.float64)
tensor([-2.6938, -3.4008, -3.8566, -4.1846, -3.9232], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0412, device='cuda:0', dtype=torch.float64)
tensor([-2.6722, -3.3860, -3.8327, -4.1782, -3.9048], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4487, device='cuda:0', dtype=torch.float64)
tensor([-2.6680, -3.3755, -3.7785, -4.1310, -3.9033], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2752, device='cuda:0', dtype=torch.float64)
tensor([-2.6822, -3.3862, -3.7067, -4.0559, -3.9106], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0678, device='cuda:0', dtype=torch.float64)
tensor([-2.6804, -3.4037, -3.6443, -3.9996, -3.8930], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0972, device='cuda:0', dtype=torch.float64)
tensor([-2.6777, -3.4318, -3.5765, -3.9406, -3.8875], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2998, device='cuda:0', dtype=torch.float64)
tensor([-2.7200, -3.4935, -3.5054, -3.8730, -3.8959], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2674, device='cuda:0', dtype=torch.float64)
tensor([-2.7541, -3.5544, -3.4364, -3.8220, -3.9242], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0991, device='cuda:0', dtype=torch.float64)
tensor([-2.7869, -3.6136, -3.3852, -3.7884, -3.9632], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3175, device='cuda:0', dtype=torch.float64)
tensor([-2.7860, -3.6177, -3.3576, -3.7926, -3.9764], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1150, device='cuda:0', dtype=torch.float64)
tensor([-2.7273, -3.5847, -3.3718, -3.8224, -3.9593], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0930, device='cuda:0', dtype=torch.float64)
tensor([-2.6723, -3.5334, -3.3987, -3.8622, -3.9227], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3942, device='cuda:0', dtype=torch.float64)
tensor([-2.6183, -3.4774, -3.4441, -3.9016, -3.8759], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1664, device='cuda:0', dtype=torch.float64)
tensor([-2.5251, -3.3987, -3.5116, -3.9794, -3.8400], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9917, device='cuda:0', dtype=torch.float64)
tensor([-2.4790, -3.3409, -3.5780, -4.0534, -3.8171], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0843, device='cuda:0', dtype=torch.float64)
tensor([-2.4647, -3.2994, -3.6546, -4.1218, -3.8022], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3291, device='cuda:0', dtype=torch.float64)
tensor([-2.5241, -3.3046, -3.6636, -4.1096, -3.8190], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4238, device='cuda:0', dtype=torch.float64)
tensor([-2.6239, -3.3392, -3.6047, -4.0572, -3.8551], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3203, device='cuda:0', dtype=torch.float64)
tensor([-2.7319, -3.3874, -3.5273, -3.9798, -3.8963], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3325, device='cuda:0', dtype=torch.float64)
tensor([-2.8289, -3.4293, -3.4637, -3.9127, -3.9447], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1468, device='cuda:0', dtype=torch.float64)
tensor([-2.8799, -3.4560, -3.4451, -3.8874, -3.9807], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0089, device='cuda:0', dtype=torch.float64)
tensor([-2.9243, -3.4904, -3.4362, -3.8502, -4.0061], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3248, device='cuda:0', dtype=torch.float64)
tensor([-2.9574, -3.5271, -3.4580, -3.8153, -4.0036], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0123, device='cuda:0', dtype=torch.float64)
tensor([-2.9355, -3.5316, -3.5028, -3.8262, -3.9969], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1619, device='cuda:0', dtype=torch.float64)
tensor([-2.9150, -3.5350, -3.5449, -3.8504, -3.9795], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1664, device='cuda:0', dtype=torch.float64)
tensor([-2.8615, -3.5139, -3.5843, -3.8857, -3.9565], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1650, device='cuda:0', dtype=torch.float64)
tensor([-2.7960, -3.4733, -3.6382, -3.9096, -3.9364], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4671, device='cuda:0', dtype=torch.float64)
tensor([-2.7271, -3.4354, -3.6819, -3.9659, -3.9254], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3122, device='cuda:0', dtype=torch.float64)
tensor([-2.6614, -3.4176, -3.7130, -4.0353, -3.9174], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0544, device='cuda:0', dtype=torch.float64)
tensor([-2.6131, -3.4003, -3.7261, -4.0677, -3.9127], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1964, device='cuda:0', dtype=torch.float64)
tensor([-2.5806, -3.4095, -3.7260, -4.0863, -3.9110], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0531, device='cuda:0', dtype=torch.float64)
tensor([-2.5698, -3.4274, -3.7115, -4.0798, -3.9046], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2274, device='cuda:0', dtype=torch.float64)
tensor([-2.5746, -3.4711, -3.6840, -4.0683, -3.9223], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1851, device='cuda:0', dtype=torch.float64)
tensor([-2.6091, -3.5268, -3.6547, -4.0332, -3.9424], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2934, device='cuda:0', dtype=torch.float64)
tensor([-2.6286, -3.5582, -3.6353, -3.9991, -3.9610], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1872, device='cuda:0', dtype=torch.float64)
tensor([-2.7008, -3.6113, -3.6016, -3.9416, -3.9534], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3096, device='cuda:0', dtype=torch.float64)
tensor([-2.7896, -3.6697, -3.5634, -3.9034, -3.9403], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1873, device='cuda:0', dtype=torch.float64)
tensor([-2.8498, -3.7094, -3.5555, -3.8874, -3.9315], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2557, device='cuda:0', dtype=torch.float64)
tensor([-2.8865, -3.7620, -3.5503, -3.8765, -3.9299], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1354, device='cuda:0', dtype=torch.float64)
tensor([-2.8941, -3.7800, -3.5681, -3.8763, -3.9042], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0959, device='cuda:0', dtype=torch.float64)
tensor([-2.9080, -3.7774, -3.5815, -3.8757, -3.8727], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3546, device='cuda:0', dtype=torch.float64)
tensor([-2.8997, -3.7323, -3.5952, -3.8706, -3.8369], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3221, device='cuda:0', dtype=torch.float64)
tensor([-2.8771, -3.6613, -3.6194, -3.8610, -3.7927], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1729, device='cuda:0', dtype=torch.float64)
tensor([-2.8578, -3.5746, -3.6380, -3.8762, -3.7627], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0694, device='cuda:0', dtype=torch.float64)
tensor([-2.8232, -3.4864, -3.6542, -3.8944, -3.7418], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4356, device='cuda:0', dtype=torch.float64)
tensor([-2.7992, -3.3904, -3.6838, -3.9162, -3.7391], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1032, device='cuda:0', dtype=torch.float64)
tensor([-2.7582, -3.3056, -3.7337, -3.9733, -3.7482], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1394, device='cuda:0', dtype=torch.float64)
tensor([-2.6909, -3.2239, -3.7799, -4.0521, -3.7636], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1424, device='cuda:0', dtype=torch.float64)
tensor([-2.6473, -3.1568, -3.8357, -4.1366, -3.7767], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2836, device='cuda:0', dtype=torch.float64)
tensor([-2.6155, -3.1216, -3.8829, -4.2160, -3.7807], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3356, device='cuda:0', dtype=torch.float64)
tensor([-2.6005, -3.1227, -3.9330, -4.2568, -3.7980], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1796, device='cuda:0', dtype=torch.float64)
tensor([-2.6347, -3.1773, -3.9417, -4.2554, -3.8425], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0745, device='cuda:0', dtype=torch.float64)
tensor([-2.6864, -3.2828, -3.9367, -4.2003, -3.8816], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3153, device='cuda:0', dtype=torch.float64)
tensor([-2.7355, -3.3625, -3.9481, -4.1396, -3.8983], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4504, device='cuda:0', dtype=torch.float64)
tensor([-2.8004, -3.4154, -3.9388, -4.0928, -3.9012], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2597, device='cuda:0', dtype=torch.float64)
tensor([-2.8731, -3.4182, -3.9408, -4.0426, -3.8870], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3610, device='cuda:0', dtype=torch.float64)
tensor([-2.9137, -3.3878, -3.9775, -4.0280, -3.8531], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4095, device='cuda:0', dtype=torch.float64)
tensor([-2.9343, -3.3903, -4.0134, -4.0344, -3.8065], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3972, device='cuda:0', dtype=torch.float64)
tensor([-2.9260, -3.3992, -4.0020, -4.0367, -3.7837], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9646, device='cuda:0', dtype=torch.float64)
tensor([-2.9091, -3.4024, -3.9950, -4.0710, -3.7863], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4148, device='cuda:0', dtype=torch.float64)
tensor([-2.8919, -3.4142, -3.9689, -4.0930, -3.7991], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1584, device='cuda:0', dtype=torch.float64)
tensor([-2.8437, -3.4090, -3.9425, -4.1027, -3.8300], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1822, device='cuda:0', dtype=torch.float64)
tensor([-2.7736, -3.3999, -3.9164, -4.0994, -3.8984], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2606, device='cuda:0', dtype=torch.float64)
tensor([-2.7650, -3.4271, -3.8500, -4.0509, -4.0138], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0888, device='cuda:0', dtype=torch.float64)
tensor([-2.7510, -3.4418, -3.7871, -4.0317, -4.1241], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4446, device='cuda:0', dtype=torch.float64)
tensor([-2.7281, -3.4660, -3.7107, -4.0432, -4.2437], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1468, device='cuda:0', dtype=torch.float64)
tensor([-2.7253, -3.5132, -3.6287, -4.0537, -4.3837], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2437, device='cuda:0', dtype=torch.float64)
tensor([-2.7285, -3.5515, -3.5552, -4.0763, -4.4645], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3490, device='cuda:0', dtype=torch.float64)
tensor([-2.7210, -3.5707, -3.4913, -4.1083, -4.5084], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0673, device='cuda:0', dtype=torch.float64)
tensor([-2.7324, -3.5936, -3.4430, -4.1079, -4.5531], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3300, device='cuda:0', dtype=torch.float64)
tensor([-2.7461, -3.6228, -3.4169, -4.0947, -4.5814], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1453, device='cuda:0', dtype=torch.float64)
tensor([-2.7669, -3.6514, -3.3980, -4.0775, -4.5816], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5254, device='cuda:0', dtype=torch.float64)
tensor([-2.7812, -3.6673, -3.3868, -4.0699, -4.5454], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2747, device='cuda:0', dtype=torch.float64)
tensor([-2.7731, -3.6747, -3.4014, -4.0587, -4.5067], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2610, device='cuda:0', dtype=torch.float64)
tensor([-2.7791, -3.6795, -3.4181, -4.0585, -4.4471], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1558, device='cuda:0', dtype=torch.float64)
tensor([-2.7747, -3.6575, -3.4311, -4.0518, -4.3951], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1563, device='cuda:0', dtype=torch.float64)
tensor([-2.7550, -3.6079, -3.4632, -4.0596, -4.3271], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1288, device='cuda:0', dtype=torch.float64)
tensor([-2.7368, -3.5572, -3.5058, -4.0673, -4.2795], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2503, device='cuda:0', dtype=torch.float64)
tensor([-2.7268, -3.5069, -3.5542, -4.0993, -4.2281], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0971, device='cuda:0', dtype=torch.float64)
tensor([-2.7216, -3.4820, -3.5956, -4.1181, -4.2055], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2154, device='cuda:0', dtype=torch.float64)
tensor([-2.7239, -3.4515, -3.6374, -4.1209, -4.1856], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3262, device='cuda:0', dtype=torch.float64)
tensor([-2.7492, -3.4311, -3.6735, -4.0946, -4.1801], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2584, device='cuda:0', dtype=torch.float64)
tensor([-2.7815, -3.4381, -3.7015, -4.0504, -4.1861], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1181, device='cuda:0', dtype=torch.float64)
tensor([-2.8369, -3.4669, -3.7144, -3.9725, -4.1928], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0827, device='cuda:0', dtype=torch.float64)
tensor([-2.8752, -3.4980, -3.7169, -3.9153, -4.2170], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2661, device='cuda:0', dtype=torch.float64)
tensor([-2.9086, -3.5129, -3.7135, -3.8715, -4.2382], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0983, device='cuda:0', dtype=torch.float64)
tensor([-2.9179, -3.5390, -3.7216, -3.8307, -4.2580], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2635, device='cuda:0', dtype=torch.float64)
tensor([-2.9180, -3.5651, -3.7266, -3.7992, -4.2930], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2066, device='cuda:0', dtype=torch.float64)
tensor([-2.9234, -3.5973, -3.7519, -3.7654, -4.3279], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2981, device='cuda:0', dtype=torch.float64)
tensor([-2.9176, -3.6218, -3.7846, -3.7458, -4.3531], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3468, device='cuda:0', dtype=torch.float64)
tensor([-2.9097, -3.6030, -3.8166, -3.7187, -4.3356], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0454, device='cuda:0', dtype=torch.float64)
tensor([-2.8888, -3.5681, -3.8536, -3.7205, -4.3090], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0904, device='cuda:0', dtype=torch.float64)
tensor([-2.8467, -3.5379, -3.8978, -3.7743, -4.2678], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0202, device='cuda:0', dtype=torch.float64)
tensor([-2.8408, -3.5248, -3.9298, -3.8329, -4.2261], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2189, device='cuda:0', dtype=torch.float64)
tensor([-2.8353, -3.5282, -3.9505, -3.9036, -4.1988], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1204, device='cuda:0', dtype=torch.float64)
tensor([-2.8118, -3.5293, -3.9728, -4.0094, -4.1850], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5642, device='cuda:0', dtype=torch.float64)
tensor([-2.8189, -3.5470, -3.9735, -4.0684, -4.1812], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2084, device='cuda:0', dtype=torch.float64)
tensor([-2.8201, -3.5642, -3.9676, -4.1466, -4.1589], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3344, device='cuda:0', dtype=torch.float64)
tensor([-2.8417, -3.5718, -3.9806, -4.2268, -4.1516], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0839, device='cuda:0', dtype=torch.float64)
tensor([-2.8837, -3.5917, -3.9937, -4.2628, -4.1399], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0972, device='cuda:0', dtype=torch.float64)
tensor([-2.9069, -3.6047, -4.0059, -4.3178, -4.1178], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2144, device='cuda:0', dtype=torch.float64)
tensor([-2.9545, -3.6384, -4.0042, -4.3492, -4.1217], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0773, device='cuda:0', dtype=torch.float64)
tensor([-3.0065, -3.6669, -3.9862, -4.3969, -4.1460], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1475, device='cuda:0', dtype=torch.float64)
tensor([-3.0583, -3.6928, -3.9716, -4.4495, -4.1624], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1758, device='cuda:0', dtype=torch.float64)
tensor([-3.1227, -3.7251, -3.9175, -4.4776, -4.1839], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3293, device='cuda:0', dtype=torch.float64)
tensor([-3.1347, -3.7309, -3.8648, -4.4784, -4.1844], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1332, device='cuda:0', dtype=torch.float64)
tensor([-3.1515, -3.7397, -3.8011, -4.4512, -4.1979], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0877, device='cuda:0', dtype=torch.float64)
tensor([-3.1407, -3.7310, -3.7374, -4.4204, -4.2167], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4936, device='cuda:0', dtype=torch.float64)
tensor([-3.0829, -3.6818, -3.7045, -4.3857, -4.2214], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2479, device='cuda:0', dtype=torch.float64)
tensor([-3.0215, -3.6381, -3.6677, -4.3638, -4.2132], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1084, device='cuda:0', dtype=torch.float64)
tensor([-2.9627, -3.6022, -3.6488, -4.3477, -4.1986], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1156, device='cuda:0', dtype=torch.float64)
tensor([-2.9207, -3.5818, -3.6508, -4.3384, -4.1855], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1697, device='cuda:0', dtype=torch.float64)
tensor([-2.8846, -3.5590, -3.6829, -4.3340, -4.1647], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3576, device='cuda:0', dtype=torch.float64)
tensor([-2.8663, -3.5342, -3.7456, -4.2992, -4.1371], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0656, device='cuda:0', dtype=torch.float64)
tensor([-2.8535, -3.5058, -3.8213, -4.2757, -4.1074], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2316, device='cuda:0', dtype=torch.float64)
tensor([-2.8387, -3.4749, -3.9103, -4.2257, -4.0949], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3995, device='cuda:0', dtype=torch.float64)
tensor([-2.8526, -3.4425, -3.9835, -4.1679, -4.1074], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1355, device='cuda:0', dtype=torch.float64)
tensor([-2.8835, -3.4338, -4.0414, -4.1150, -4.1090], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3856, device='cuda:0', dtype=torch.float64)
tensor([-2.9494, -3.4516, -4.0818, -4.0760, -4.1417], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2478, device='cuda:0', dtype=torch.float64)
tensor([-3.0357, -3.4917, -4.0811, -3.9873, -4.1672], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1331, device='cuda:0', dtype=torch.float64)
tensor([-3.1050, -3.5409, -4.0681, -3.8848, -4.1930], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2073, device='cuda:0', dtype=torch.float64)
tensor([-3.1481, -3.5812, -4.0709, -3.8127, -4.2132], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0512, device='cuda:0', dtype=torch.float64)
tensor([-3.1924, -3.6503, -4.0649, -3.7782, -4.2503], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0449, device='cuda:0', dtype=torch.float64)
tensor([-3.2218, -3.7374, -4.0644, -3.7490, -4.3154], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2590, device='cuda:0', dtype=torch.float64)
tensor([-3.1957, -3.7983, -4.0665, -3.7731, -4.3584], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1451, device='cuda:0', dtype=torch.float64)
tensor([-3.1570, -3.8470, -4.0475, -3.8141, -4.4035], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2483, device='cuda:0', dtype=torch.float64)
tensor([-3.0976, -3.8736, -4.0392, -3.8882, -4.3982], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1333, device='cuda:0', dtype=torch.float64)
tensor([-3.0443, -3.8922, -4.0519, -3.9680, -4.3870], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9821, device='cuda:0', dtype=torch.float64)
tensor([-2.9936, -3.9070, -4.0727, -4.0396, -4.3703], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3865, device='cuda:0', dtype=torch.float64)
tensor([-2.9853, -3.9208, -4.0773, -4.1049, -4.3570], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0739, device='cuda:0', dtype=torch.float64)
tensor([-2.9730, -3.9363, -4.0624, -4.1789, -4.3396], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0322, device='cuda:0', dtype=torch.float64)
tensor([-2.9401, -3.9354, -4.0408, -4.2439, -4.3295], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3585, device='cuda:0', dtype=torch.float64)
tensor([-2.8851, -3.9263, -4.0319, -4.3293, -4.3090], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1418, device='cuda:0', dtype=torch.float64)
tensor([-2.8317, -3.8988, -4.0180, -4.4157, -4.2884], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2432, device='cuda:0', dtype=torch.float64)
tensor([-2.8087, -3.8739, -4.0004, -4.4819, -4.2688], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1217, device='cuda:0', dtype=torch.float64)
tensor([-2.8229, -3.8820, -3.9616, -4.4914, -4.2726], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2110, device='cuda:0', dtype=torch.float64)
tensor([-2.8784, -3.9108, -3.8846, -4.4758, -4.2763], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0921, device='cuda:0', dtype=torch.float64)
tensor([-2.9618, -3.9404, -3.7605, -4.3886, -4.2522], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3083, device='cuda:0', dtype=torch.float64)
tensor([-3.0724, -3.9730, -3.5993, -4.2389, -4.2339], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1940, device='cuda:0', dtype=torch.float64)
tensor([-3.2287, -4.0102, -3.4459, -4.0811, -4.2476], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0578, device='cuda:0', dtype=torch.float64)
tensor([-3.3399, -4.0224, -3.3861, -4.0007, -4.2822], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2627, device='cuda:0', dtype=torch.float64)
tensor([-3.3882, -4.0084, -3.3819, -3.9527, -4.3213], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1789, device='cuda:0', dtype=torch.float64)
tensor([-3.3900, -3.9804, -3.3981, -3.9436, -4.3440], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5298, device='cuda:0', dtype=torch.float64)
tensor([-3.3556, -3.9385, -3.4399, -3.9826, -4.3543], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0693, device='cuda:0', dtype=torch.float64)
tensor([-3.2768, -3.8670, -3.5052, -4.0729, -4.3422], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0016, device='cuda:0', dtype=torch.float64)
tensor([-3.1649, -3.8015, -3.5737, -4.1895, -4.3192], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1745, device='cuda:0', dtype=torch.float64)
tensor([-3.0364, -3.7346, -3.6529, -4.2975, -4.2781], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2085, device='cuda:0', dtype=torch.float64)
tensor([-2.9130, -3.6664, -3.7576, -4.4243, -4.2376], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1657, device='cuda:0', dtype=torch.float64)
tensor([-2.8320, -3.6395, -3.8393, -4.5093, -4.2190], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3858, device='cuda:0', dtype=torch.float64)
tensor([-2.8043, -3.6404, -3.9417, -4.5632, -4.2228], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2347, device='cuda:0', dtype=torch.float64)
tensor([-2.7680, -3.6155, -4.0386, -4.6127, -4.2150], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0826, device='cuda:0', dtype=torch.float64)
tensor([-2.7515, -3.6366, -4.0863, -4.6282, -4.2081], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1222, device='cuda:0', dtype=torch.float64)
tensor([-2.7436, -3.6557, -4.1276, -4.6524, -4.1962], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9217, device='cuda:0', dtype=torch.float64)
tensor([-2.7623, -3.6764, -4.1458, -4.6626, -4.1952], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0329, device='cuda:0', dtype=torch.float64)
tensor([-2.7985, -3.7223, -4.1477, -4.6788, -4.1919], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2366, device='cuda:0', dtype=torch.float64)
tensor([-2.8996, -3.7830, -4.1062, -4.6334, -4.1943], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9866, device='cuda:0', dtype=torch.float64)
tensor([-3.0226, -3.8753, -4.0301, -4.5430, -4.2183], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8236, device='cuda:0', dtype=torch.float64)
tensor([-3.1470, -3.9555, -3.9593, -4.4845, -4.2368], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1859, device='cuda:0', dtype=torch.float64)
tensor([-3.2510, -4.0239, -3.8979, -4.4294, -4.2733], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9466, device='cuda:0', dtype=torch.float64)
tensor([-3.3327, -4.0595, -3.8671, -4.3883, -4.3164], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0760, device='cuda:0', dtype=torch.float64)
tensor([-3.3827, -4.0876, -3.8357, -4.3123, -4.3672], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9472, device='cuda:0', dtype=torch.float64)
tensor([-3.3828, -4.0857, -3.8411, -4.2538, -4.4119], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1669, device='cuda:0', dtype=torch.float64)
tensor([-3.3712, -4.0768, -3.8494, -4.1927, -4.4486], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3163, device='cuda:0', dtype=torch.float64)
tensor([-3.3432, -4.0432, -3.8633, -4.1430, -4.4864], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1055, device='cuda:0', dtype=torch.float64)
tensor([-3.2747, -3.9879, -3.9116, -4.1172, -4.4815], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1716, device='cuda:0', dtype=torch.float64)
tensor([-3.2358, -3.9594, -3.9419, -4.0782, -4.4584], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0054, device='cuda:0', dtype=torch.float64)
tensor([-3.1882, -3.9171, -3.9730, -4.0534, -4.4143], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2867, device='cuda:0', dtype=torch.float64)
tensor([-3.1960, -3.9061, -4.0083, -4.0344, -4.3805], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0020, device='cuda:0', dtype=torch.float64)
tensor([-3.2250, -3.9108, -4.0422, -4.0242, -4.3607], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2394, device='cuda:0', dtype=torch.float64)
tensor([-3.2909, -3.9268, -4.0567, -4.0253, -4.3302], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1619, device='cuda:0', dtype=torch.float64)
tensor([-3.3228, -3.9272, -4.0759, -4.0736, -4.2793], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1379, device='cuda:0', dtype=torch.float64)
tensor([-3.3528, -3.9248, -4.0934, -4.1832, -4.2427], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1916, device='cuda:0', dtype=torch.float64)
tensor([-3.3888, -3.9219, -4.0893, -4.2957, -4.2101], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0626, device='cuda:0', dtype=torch.float64)
tensor([-3.4287, -3.9253, -4.0752, -4.3764, -4.2148], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1161, device='cuda:0', dtype=torch.float64)
tensor([-3.4450, -3.9068, -4.0681, -4.4220, -4.2151], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2485, device='cuda:0', dtype=torch.float64)
tensor([-3.4529, -3.9087, -4.0688, -4.4902, -4.2356], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4133, device='cuda:0', dtype=torch.float64)
tensor([-3.4454, -3.8988, -4.0924, -4.5256, -4.2577], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1605, device='cuda:0', dtype=torch.float64)
tensor([-3.4297, -3.8833, -4.1250, -4.5774, -4.2767], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7677, device='cuda:0', dtype=torch.float64)
tensor([-3.4115, -3.8670, -4.1419, -4.5776, -4.3038], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0003, device='cuda:0', dtype=torch.float64)
tensor([-3.3956, -3.8636, -4.1825, -4.5774, -4.3312], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2604, device='cuda:0', dtype=torch.float64)
tensor([-3.3734, -3.8781, -4.2039, -4.5292, -4.3879], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1622, device='cuda:0', dtype=torch.float64)
tensor([-3.3303, -3.8744, -4.2715, -4.5470, -4.4148], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2515, device='cuda:0', dtype=torch.float64)
tensor([-3.2516, -3.8697, -4.3520, -4.5689, -4.4402], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0900, device='cuda:0', dtype=torch.float64)
tensor([-3.1631, -3.8755, -4.4428, -4.6227, -4.4648], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0297, device='cuda:0', dtype=torch.float64)
tensor([-3.1315, -3.8934, -4.5016, -4.6789, -4.4784], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9097, device='cuda:0', dtype=torch.float64)
tensor([-3.1508, -3.9509, -4.5099, -4.6857, -4.4988], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3463, device='cuda:0', dtype=torch.float64)
tensor([-3.2033, -3.9971, -4.5559, -4.7149, -4.5013], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3753, device='cuda:0', dtype=torch.float64)
tensor([-3.2448, -4.0234, -4.6265, -4.7743, -4.4913], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2262, device='cuda:0', dtype=torch.float64)
tensor([-3.2657, -4.0713, -4.7117, -4.8337, -4.4876], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0909, device='cuda:0', dtype=torch.float64)
tensor([-3.2930, -4.1124, -4.8062, -4.8899, -4.4799], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1796, device='cuda:0', dtype=torch.float64)
tensor([-3.3057, -4.1454, -4.9517, -4.9765, -4.4731], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1344, device='cuda:0', dtype=torch.float64)
tensor([-3.3740, -4.2024, -4.9358, -4.9484, -4.4856], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0551, device='cuda:0', dtype=torch.float64)
tensor([-3.4315, -4.2682, -4.8475, -4.8993, -4.5073], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3003, device='cuda:0', dtype=torch.float64)
tensor([-3.5173, -4.3313, -4.7551, -4.8509, -4.5320], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0619, device='cuda:0', dtype=torch.float64)
tensor([-3.6092, -4.3724, -4.6434, -4.7977, -4.5706], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1942, device='cuda:0', dtype=torch.float64)
tensor([-3.6558, -4.3948, -4.5338, -4.7584, -4.5840], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9233, device='cuda:0', dtype=torch.float64)
tensor([-3.6438, -4.3935, -4.4470, -4.7124, -4.5766], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0088, device='cuda:0', dtype=torch.float64)
tensor([-3.6058, -4.3855, -4.3565, -4.6699, -4.5605], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2493, device='cuda:0', dtype=torch.float64)
tensor([-3.6270, -4.4043, -4.2488, -4.5915, -4.5682], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1876, device='cuda:0', dtype=torch.float64)
tensor([-3.6331, -4.4235, -4.1006, -4.5195, -4.5974], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2871, device='cuda:0', dtype=torch.float64)
tensor([-3.6328, -4.4677, -3.9705, -4.4727, -4.6471], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3117, device='cuda:0', dtype=torch.float64)
tensor([-3.6693, -4.5340, -3.8673, -4.4628, -4.7325], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0357, device='cuda:0', dtype=torch.float64)
tensor([-3.6618, -4.5743, -3.7891, -4.4926, -4.7976], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1643, device='cuda:0', dtype=torch.float64)
tensor([-3.6352, -4.5828, -3.7359, -4.5356, -4.8371], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2162, device='cuda:0', dtype=torch.float64)
tensor([-3.5993, -4.5318, -3.7165, -4.5626, -4.8416], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1690, device='cuda:0', dtype=torch.float64)
tensor([-3.5359, -4.4832, -3.7240, -4.6166, -4.8230], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1435, device='cuda:0', dtype=torch.float64)
tensor([-3.4696, -4.4197, -3.7674, -4.6801, -4.7867], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4592, device='cuda:0', dtype=torch.float64)
tensor([-3.3889, -4.3432, -3.8500, -4.8422, -4.7341], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9848, device='cuda:0', dtype=torch.float64)
tensor([-3.3203, -4.2927, -3.9363, -5.0537, -4.7136], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0901, device='cuda:0', dtype=torch.float64)
tensor([-3.2871, -4.2692, -4.0193, -5.2631, -4.7275], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0016, device='cuda:0', dtype=torch.float64)
tensor([-3.2877, -4.2897, -4.0917, -5.5098, -4.7674], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2111, device='cuda:0', dtype=torch.float64)
tensor([-3.3417, -4.3107, -4.1733, -5.6565, -4.8072], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1025, device='cuda:0', dtype=torch.float64)
tensor([-3.3814, -4.3273, -4.2787, -5.8026, -4.8614], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0360, device='cuda:0', dtype=torch.float64)
tensor([-3.4542, -4.3480, -4.3709, -5.8429, -4.9616], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1046, device='cuda:0', dtype=torch.float64)
tensor([-3.4984, -4.3333, -4.4301, -5.7412, -5.0621], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0784, device='cuda:0', dtype=torch.float64)
tensor([-3.5397, -4.2933, -4.4553, -5.5249, -5.1358], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1920, device='cuda:0', dtype=torch.float64)
tensor([-3.5939, -4.2737, -4.4130, -5.2742, -5.1061], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9588, device='cuda:0', dtype=torch.float64)
tensor([-3.6163, -4.2591, -4.4199, -5.1447, -5.1144], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1740, device='cuda:0', dtype=torch.float64)
tensor([-3.6350, -4.2552, -4.4165, -5.0533, -5.1085], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0324, device='cuda:0', dtype=torch.float64)
tensor([-3.6205, -4.2434, -4.4496, -5.0181, -5.0745], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0149, device='cuda:0', dtype=torch.float64)
tensor([-3.6188, -4.2664, -4.4738, -4.9862, -5.0088], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2400, device='cuda:0', dtype=torch.float64)
tensor([-3.5701, -4.2439, -4.5251, -4.9376, -4.9174], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1209, device='cuda:0', dtype=torch.float64)
tensor([-3.4937, -4.1832, -4.5385, -4.8765, -4.8265], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0039, device='cuda:0', dtype=torch.float64)
tensor([-3.4454, -4.1632, -4.5523, -4.8035, -4.7842], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0788, device='cuda:0', dtype=torch.float64)
tensor([-3.4406, -4.1693, -4.5569, -4.7029, -4.7557], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0352, device='cuda:0', dtype=torch.float64)
tensor([-3.4235, -4.1387, -4.5679, -4.6136, -4.7055], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9454, device='cuda:0', dtype=torch.float64)
tensor([-3.3753, -4.0781, -4.6030, -4.5760, -4.6586], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1048, device='cuda:0', dtype=torch.float64)
tensor([-3.3361, -4.0169, -4.6945, -4.5748, -4.6116], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1265, device='cuda:0', dtype=torch.float64)
tensor([-3.3029, -3.9604, -4.7911, -4.5721, -4.5846], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2533, device='cuda:0', dtype=torch.float64)
tensor([-3.3072, -3.9246, -4.8836, -4.6085, -4.5748], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1444, device='cuda:0', dtype=torch.float64)
tensor([-3.3316, -3.9233, -4.9162, -4.6492, -4.5865], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9472, device='cuda:0', dtype=torch.float64)
tensor([-3.3601, -3.9400, -4.8997, -4.6748, -4.6033], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0192, device='cuda:0', dtype=torch.float64)
tensor([-3.4187, -3.9597, -4.9049, -4.7087, -4.6365], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0985, device='cuda:0', dtype=torch.float64)
tensor([-3.4885, -3.9931, -4.8775, -4.7258, -4.6797], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2779, device='cuda:0', dtype=torch.float64)
tensor([-3.5780, -4.0261, -4.8311, -4.7404, -4.7332], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2774, device='cuda:0', dtype=torch.float64)
tensor([-3.6993, -4.0787, -4.7474, -4.6751, -4.8009], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1462, device='cuda:0', dtype=torch.float64)
tensor([-3.8298, -4.1440, -4.6594, -4.6084, -4.8463], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9632, device='cuda:0', dtype=torch.float64)
tensor([-3.9597, -4.2146, -4.5865, -4.5441, -4.8670], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8943, device='cuda:0', dtype=torch.float64)
tensor([-4.0684, -4.2795, -4.4875, -4.4699, -4.8783], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5149, device='cuda:0', dtype=torch.float64)
tensor([-4.1712, -4.3401, -4.3970, -4.3892, -4.8960], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2364, device='cuda:0', dtype=torch.float64)
tensor([-4.2151, -4.3600, -4.3575, -4.4251, -4.8942], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8505, device='cuda:0', dtype=torch.float64)
tensor([-4.2099, -4.3664, -4.3058, -4.4580, -4.8900], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2569, device='cuda:0', dtype=torch.float64)
tensor([-4.1777, -4.3866, -4.2711, -4.5017, -4.8962], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9762, device='cuda:0', dtype=torch.float64)
tensor([-4.0942, -4.3851, -4.2701, -4.5827, -4.9119], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1723, device='cuda:0', dtype=torch.float64)
tensor([-4.0029, -4.3821, -4.2827, -4.6512, -4.9288], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0399, device='cuda:0', dtype=torch.float64)
tensor([-3.9403, -4.3899, -4.2804, -4.6830, -4.9568], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2947, device='cuda:0', dtype=torch.float64)
tensor([-3.8608, -4.3594, -4.3010, -4.7667, -4.9693], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0284, device='cuda:0', dtype=torch.float64)
tensor([-3.7662, -4.3244, -4.3409, -4.8772, -4.9742], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1483, device='cuda:0', dtype=torch.float64)
tensor([-3.6732, -4.3096, -4.3827, -4.9870, -4.9872], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0794, device='cuda:0', dtype=torch.float64)
tensor([-3.5768, -4.3003, -4.4630, -5.1052, -4.9858], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2066, device='cuda:0', dtype=torch.float64)
tensor([-3.4827, -4.2902, -4.5744, -5.3119, -5.0039], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2699, device='cuda:0', dtype=torch.float64)
tensor([-3.4355, -4.3037, -4.6926, -5.5418, -5.0249], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1231, device='cuda:0', dtype=torch.float64)
tensor([-3.4160, -4.3224, -4.8533, -5.8773, -5.0632], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0671, device='cuda:0', dtype=torch.float64)
tensor([-3.4321, -4.3529, -5.0124, -6.1025, -5.1192], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1533, device='cuda:0', dtype=torch.float64)
tensor([-3.4582, -4.4056, -5.1726, -6.3316, -5.1719], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8314, device='cuda:0', dtype=torch.float64)
tensor([-3.5102, -4.4752, -5.2769, -6.4705, -5.2086], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3199, device='cuda:0', dtype=torch.float64)
tensor([-3.5633, -4.5511, -5.3534, -6.6056, -5.2254], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0230, device='cuda:0', dtype=torch.float64)
tensor([-3.6175, -4.6026, -5.4265, -6.6097, -5.2565], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0655, device='cuda:0', dtype=torch.float64)
tensor([-3.6770, -4.6865, -5.4390, -6.5995, -5.2945], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2603, device='cuda:0', dtype=torch.float64)
tensor([-3.7294, -4.7702, -5.4327, -6.6081, -5.3259], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9793, device='cuda:0', dtype=torch.float64)
tensor([-3.7924, -4.8564, -5.3813, -6.4801, -5.3555], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9224, device='cuda:0', dtype=torch.float64)
tensor([-3.8335, -4.9210, -5.3656, -6.4096, -5.3678], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1730, device='cuda:0', dtype=torch.float64)
tensor([-3.8902, -4.9947, -5.2806, -6.1826, -5.3701], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2113, device='cuda:0', dtype=torch.float64)
tensor([-3.9624, -5.0680, -5.2151, -5.9905, -5.3728], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2309, device='cuda:0', dtype=torch.float64)
tensor([-4.0716, -5.1518, -5.1500, -5.8227, -5.3489], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0498, device='cuda:0', dtype=torch.float64)
tensor([-4.2169, -5.2537, -5.0292, -5.6693, -5.3308], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9130, device='cuda:0', dtype=torch.float64)
tensor([-4.3333, -5.3166, -4.9062, -5.5257, -5.2948], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1348, device='cuda:0', dtype=torch.float64)
tensor([-4.3985, -5.3883, -4.7508, -5.3735, -5.2639], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1660, device='cuda:0', dtype=torch.float64)
tensor([-4.4234, -5.4497, -4.5991, -5.2433, -5.2415], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1800, device='cuda:0', dtype=torch.float64)
tensor([-4.4401, -5.4904, -4.4537, -5.1155, -5.2463], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9670, device='cuda:0', dtype=torch.float64)
tensor([-4.4407, -5.5359, -4.3440, -5.0315, -5.2520], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1084, device='cuda:0', dtype=torch.float64)
tensor([-4.4399, -5.5552, -4.2839, -5.0109, -5.2589], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1501, device='cuda:0', dtype=torch.float64)
tensor([-4.4330, -5.5642, -4.2579, -5.0118, -5.2651], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3278, device='cuda:0', dtype=torch.float64)
tensor([-4.3864, -5.5095, -4.2617, -5.0033, -5.2534], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0812, device='cuda:0', dtype=torch.float64)
tensor([-4.3061, -5.3832, -4.3100, -5.0349, -5.1955], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2302, device='cuda:0', dtype=torch.float64)
tensor([-4.2448, -5.2816, -4.3865, -5.0790, -5.1606], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1066, device='cuda:0', dtype=torch.float64)
tensor([-4.1681, -5.1845, -4.5248, -5.1921, -5.1357], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2624, device='cuda:0', dtype=torch.float64)
tensor([-4.1137, -5.1066, -4.6162, -5.3107, -5.1646], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9871, device='cuda:0', dtype=torch.float64)
tensor([-4.0581, -5.0276, -4.7505, -5.5469, -5.2202], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0631, device='cuda:0', dtype=torch.float64)
tensor([-4.0235, -4.9940, -4.9284, -5.8722, -5.2748], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0622, device='cuda:0', dtype=torch.float64)
tensor([-4.0057, -4.9570, -5.1353, -6.2302, -5.3582], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9723, device='cuda:0', dtype=torch.float64)
tensor([-4.0035, -4.9295, -5.2591, -6.4368, -5.4492], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0431, device='cuda:0', dtype=torch.float64)
tensor([-4.0195, -4.8815, -5.3808, -6.5246, -5.4014], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9857, device='cuda:0', dtype=torch.float64)
tensor([-4.0468, -4.8422, -5.5087, -6.5569, -5.3443], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0235, device='cuda:0', dtype=torch.float64)
tensor([-4.0903, -4.8185, -5.6035, -6.4265, -5.3241], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1452, device='cuda:0', dtype=torch.float64)
tensor([-4.1234, -4.7801, -5.7721, -6.5713, -5.3854], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0058, device='cuda:0', dtype=torch.float64)
tensor([-4.1736, -4.7741, -5.8910, -6.6938, -5.4885], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2022, device='cuda:0', dtype=torch.float64)
tensor([-4.2953, -4.7960, -5.9324, -6.7444, -5.6532], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1393, device='cuda:0', dtype=torch.float64)
tensor([-4.4370, -4.8377, -5.9779, -6.6865, -5.8393], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1460, device='cuda:0', dtype=torch.float64)
tensor([-4.6096, -4.8796, -5.9460, -6.4248, -5.9227], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9285, device='cuda:0', dtype=torch.float64)
tensor([-4.7791, -4.9233, -5.8925, -6.1971, -5.9827], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0486, device='cuda:0', dtype=torch.float64)
tensor([-4.9080, -4.9435, -5.8610, -6.0331, -5.9537], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0841, device='cuda:0', dtype=torch.float64)
tensor([-4.9996, -4.9509, -5.9426, -6.2468, -6.0140], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2652, device='cuda:0', dtype=torch.float64)
tensor([-5.0772, -4.9325, -5.9787, -6.4399, -5.9950], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8262, device='cuda:0', dtype=torch.float64)
tensor([-5.1453, -4.9253, -6.0322, -6.6746, -5.9541], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0640, device='cuda:0', dtype=torch.float64)
tensor([-5.2083, -4.9339, -6.0651, -6.8243, -5.9574], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1064, device='cuda:0', dtype=torch.float64)
tensor([-5.2319, -4.9537, -6.1242, -7.0899, -5.9798], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0943, device='cuda:0', dtype=torch.float64)
tensor([-5.1952, -4.9667, -6.1444, -7.4012, -5.9486], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0721, device='cuda:0', dtype=torch.float64)
tensor([-5.1892, -4.9850, -6.1232, -7.3726, -5.8641], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0632, device='cuda:0', dtype=torch.float64)
tensor([-5.2291, -5.0111, -6.0754, -7.1698, -5.7577], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1191, device='cuda:0', dtype=torch.float64)
tensor([-5.2618, -5.0268, -5.9391, -6.7276, -5.6332], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1039, device='cuda:0', dtype=torch.float64)
tensor([-5.2518, -5.0282, -5.7747, -6.3407, -5.5111], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9006, device='cuda:0', dtype=torch.float64)
tensor([-5.2165, -5.0203, -5.7138, -6.1556, -5.4704], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1059, device='cuda:0', dtype=torch.float64)
tensor([-5.1912, -5.0024, -5.6775, -6.0796, -5.4729], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1379, device='cuda:0', dtype=torch.float64)
tensor([-5.1535, -4.9698, -5.7410, -6.1609, -5.4598], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9142, device='cuda:0', dtype=torch.float64)
tensor([-5.1390, -4.9369, -5.7713, -6.1421, -5.4315], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7839, device='cuda:0', dtype=torch.float64)
tensor([-5.1065, -4.8980, -5.7700, -6.0533, -5.4379], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9485, device='cuda:0', dtype=torch.float64)
tensor([-5.0542, -4.8766, -5.7285, -5.9291, -5.4599], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8805, device='cuda:0', dtype=torch.float64)
tensor([-5.0210, -4.8694, -5.7121, -5.9087, -5.5279], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0202, device='cuda:0', dtype=torch.float64)
tensor([-4.9651, -4.8687, -5.6667, -5.8384, -5.5794], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1410, device='cuda:0', dtype=torch.float64)
tensor([-4.9390, -4.8687, -5.6024, -5.7678, -5.6497], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3162, device='cuda:0', dtype=torch.float64)
tensor([-4.9230, -4.8544, -5.5993, -5.7957, -5.6780], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9173, device='cuda:0', dtype=torch.float64)
tensor([-4.9472, -4.8495, -5.6078, -5.8179, -5.7009], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9644, device='cuda:0', dtype=torch.float64)
tensor([-4.9852, -4.8579, -5.6025, -5.9200, -5.7494], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2248, device='cuda:0', dtype=torch.float64)
tensor([-5.0028, -4.8764, -5.5728, -5.9967, -5.8394], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0379, device='cuda:0', dtype=torch.float64)
tensor([-5.0291, -4.8978, -5.5548, -6.1187, -5.9686], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2185, device='cuda:0', dtype=torch.float64)
tensor([-5.0249, -4.8981, -5.6473, -6.4750, -6.1035], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1592, device='cuda:0', dtype=torch.float64)
tensor([-5.0579, -4.9045, -5.6985, -6.6442, -6.2163], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0453, device='cuda:0', dtype=torch.float64)
tensor([-5.1227, -4.9447, -5.8103, -6.8525, -6.3446], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2607, device='cuda:0', dtype=torch.float64)
tensor([-5.2483, -4.9971, -6.0115, -7.1524, -6.5213], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9523, device='cuda:0', dtype=torch.float64)
tensor([-5.3071, -5.0572, -6.1975, -7.6072, -6.6788], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9886, device='cuda:0', dtype=torch.float64)
tensor([-5.4243, -5.1339, -6.3484, -8.0330, -6.8979], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9096, device='cuda:0', dtype=torch.float64)
tensor([-5.5321, -5.2364, -6.4553, -8.3216, -7.1165], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2079, device='cuda:0', dtype=torch.float64)
tensor([-5.6492, -5.3461, -6.5096, -8.6444, -7.3445], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9173, device='cuda:0', dtype=torch.float64)
tensor([-5.7930, -5.4681, -6.5954, -8.9417, -7.5736], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2350, device='cuda:0', dtype=torch.float64)
tensor([-5.9157, -5.5746, -6.7061, -9.0987, -7.9205], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0595, device='cuda:0', dtype=torch.float64)
tensor([-5.9920, -5.6468, -6.7683, -9.0147, -8.1376], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0771, device='cuda:0', dtype=torch.float64)
tensor([-6.0293, -5.7239, -6.8259, -8.8373, -8.2501], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7886, device='cuda:0', dtype=torch.float64)
tensor([-6.0665, -5.7895, -6.8689, -8.6669, -8.3634], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0316, device='cuda:0', dtype=torch.float64)
tensor([-6.1188, -5.8964, -6.9044, -8.5965, -8.4218], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0402, device='cuda:0', dtype=torch.float64)
tensor([-6.1876, -6.0064, -6.9347, -8.6542, -8.4107], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0131, device='cuda:0', dtype=torch.float64)
tensor([-6.2663, -6.1003, -6.9527, -8.6928, -8.4044], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2554, device='cuda:0', dtype=torch.float64)
tensor([-6.4107, -6.1828, -6.9574, -8.5979, -8.3584], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1032, device='cuda:0', dtype=torch.float64)
tensor([-6.4687, -6.2552, -7.0616, -8.8168, -8.4294], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2455, device='cuda:0', dtype=torch.float64)
tensor([-6.4310, -6.3552, -7.1640, -8.9360, -8.5585], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3347, device='cuda:0', dtype=torch.float64)
tensor([-6.4041, -6.4169, -7.1086, -8.6531, -8.5945], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2631, device='cuda:0', dtype=torch.float64)
tensor([-6.4155, -6.3971, -7.1431, -8.5382, -8.6565], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1930, device='cuda:0', dtype=torch.float64)
tensor([-6.4711, -6.4088, -7.3637, -8.6587, -8.8895], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0469, device='cuda:0', dtype=torch.float64)
tensor([-6.4862, -6.4441, -7.5946, -8.7987, -9.0671], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1475, device='cuda:0', dtype=torch.float64)
tensor([-6.5469, -6.5046, -7.8759, -8.7514, -9.2043], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8623, device='cuda:0', dtype=torch.float64)
tensor([-6.6145, -6.5617, -8.2884, -8.9601, -9.4471], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0650, device='cuda:0', dtype=torch.float64)
tensor([-6.7582, -6.5691, -8.5638, -9.3334, -9.6053], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9778, device='cuda:0', dtype=torch.float64)
tensor([-7.0125, -6.6840, -8.9181, -9.6234, -9.8797], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0853, device='cuda:0', dtype=torch.float64)
tensor([ -7.3001,  -6.8601,  -9.2930, -10.1237, -10.2437], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1462, device='cuda:0', dtype=torch.float64)
tensor([ -7.6208,  -7.0146,  -9.6514, -10.4992, -10.5630], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2050, device='cuda:0', dtype=torch.float64)
tensor([ -7.9986,  -7.2674, -10.2229, -11.4117, -11.2120], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8944, device='cuda:0', dtype=torch.float64)
tensor([ -8.4502,  -7.5269, -10.7492, -12.2824, -11.8315], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9973, device='cuda:0', dtype=torch.float64)
tensor([ -9.0145,  -7.7609, -11.3357, -13.1977, -12.4859], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3162, device='cuda:0', dtype=torch.float64)
tensor([ -9.6062,  -7.9666, -12.0503, -14.0303, -12.9920], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8837, device='cuda:0', dtype=torch.float64)
tensor([-10.2316,  -8.0959, -12.5852, -14.4240, -13.1509], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1476, device='cuda:0', dtype=torch.float64)
tensor([-10.8102,  -8.3801, -13.2678, -14.9028, -13.3858], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2930, device='cuda:0', dtype=torch.float64)
tensor([-11.1778,  -8.7916, -13.7564, -15.7481, -13.7724], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0935, device='cuda:0', dtype=torch.float64)
tensor([-11.5899,  -9.2099, -14.3511, -16.3529, -14.0752], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0644, device='cuda:0', dtype=torch.float64)
tensor([-11.7855,  -9.4177, -14.5382, -16.3167, -13.9956], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2380, device='cuda:0', dtype=torch.float64)
tensor([-12.0615,  -9.2009, -14.4014, -15.8880, -13.8129], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0267, device='cuda:0', dtype=torch.float64)
tensor([-12.3752,  -8.9315, -13.9911, -15.1858, -13.4123], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9219, device='cuda:0', dtype=torch.float64)
tensor([-12.7530,  -8.7435, -13.5889, -14.8388, -13.1810], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1750, device='cuda:0', dtype=torch.float64)
tensor([-12.9452,  -8.4231, -13.2295, -14.4937, -12.7774], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9387, device='cuda:0', dtype=torch.float64)
tensor([-13.2258,  -8.1444, -12.9021, -13.8870, -12.1231], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2789, device='cuda:0', dtype=torch.float64)
tensor([-13.4860,  -7.9426, -12.5880, -13.5943, -11.7035], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9063, device='cuda:0', dtype=torch.float64)
tensor([-13.8205,  -7.7598, -12.2993, -13.0456, -11.1076], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0114, device='cuda:0', dtype=torch.float64)
tensor([-14.2940,  -7.7022, -12.3563, -12.7252, -10.6347], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0060, device='cuda:0', dtype=torch.float64)
tensor([-14.9061,  -7.6653, -12.5675, -12.5858, -10.3859], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0767, device='cuda:0', dtype=torch.float64)
tensor([-15.3540,  -7.6969, -12.8978, -12.4613, -10.1489], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0700, device='cuda:0', dtype=torch.float64)
tensor([-15.4932,  -7.7042, -13.1741, -12.3760,  -9.9136], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0498, device='cuda:0', dtype=torch.float64)
tensor([-15.7906,  -7.7202, -13.4019, -12.3916,  -9.7276], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9807, device='cuda:0', dtype=torch.float64)
tensor([-16.1669,  -7.7445, -14.2778, -12.2883,  -9.5293], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9734, device='cuda:0', dtype=torch.float64)
tensor([-16.5496,  -7.8195, -15.0876, -12.4069,  -9.4131], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9213, device='cuda:0', dtype=torch.float64)
tensor([-16.7409,  -7.9580, -15.8665, -12.8334,  -9.3531], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1020, device='cuda:0', dtype=torch.float64)
tensor([-16.9425,  -8.0531, -16.7228, -12.8999,  -9.2959], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3027, device='cuda:0', dtype=torch.float64)
tensor([-17.1490,  -8.1536, -17.3990, -12.9007,  -9.3050], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8533, device='cuda:0', dtype=torch.float64)
tensor([-17.3889,  -8.2953, -17.9433, -13.0153,  -9.3402], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9560, device='cuda:0', dtype=torch.float64)
tensor([-17.4729,  -8.3851, -18.5284, -13.3211,  -9.3735], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0617, device='cuda:0', dtype=torch.float64)
tensor([-17.5815,  -8.4588, -19.2092, -13.6477,  -9.4157], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9562, device='cuda:0', dtype=torch.float64)
tensor([-17.8409,  -8.4910, -19.8618, -13.8819,  -9.5269], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8908, device='cuda:0', dtype=torch.float64)
tensor([-18.0059,  -8.4842, -20.4291, -14.1159,  -9.5976], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9750, device='cuda:0', dtype=torch.float64)
tensor([-17.9832,  -8.5575, -20.9562, -14.4069,  -9.6525], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2349, device='cuda:0', dtype=torch.float64)
tensor([-17.9332,  -8.6327, -21.3603, -14.9386,  -9.7072], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1442, device='cuda:0', dtype=torch.float64)
tensor([-17.7328,  -8.5297, -21.4078, -15.5459,  -9.7093], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9925, device='cuda:0', dtype=torch.float64)
tensor([-17.3586,  -8.4553, -21.2486, -16.4768,  -9.7586], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1992, device='cuda:0', dtype=torch.float64)
tensor([-17.1063,  -8.4478, -21.4238, -17.0049,  -9.8562], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8616, device='cuda:0', dtype=torch.float64)
tensor([-17.0737,  -8.5562, -21.7098, -17.3750, -10.0011], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3170, device='cuda:0', dtype=torch.float64)
tensor([-16.8463,  -8.5102, -22.1481, -17.8759, -10.2002], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1869, device='cuda:0', dtype=torch.float64)
tensor([-16.5282,  -8.5718, -22.7370, -18.0074, -10.4343], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9479, device='cuda:0', dtype=torch.float64)
tensor([-16.2586,  -8.7157, -23.2746, -18.1300, -10.7473], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0371, device='cuda:0', dtype=torch.float64)
tensor([-15.9614,  -8.8642, -23.7682, -18.2760, -11.1440], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9103, device='cuda:0', dtype=torch.float64)
tensor([-15.7357,  -9.0302, -24.3003, -18.6326, -11.4090], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9463, device='cuda:0', dtype=torch.float64)
tensor([-15.8938,  -9.2956, -24.5698, -19.3214, -11.8397], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1675, device='cuda:0', dtype=torch.float64)
tensor([-16.2338,  -9.6095, -25.0978, -19.6904, -12.1924], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9936, device='cuda:0', dtype=torch.float64)
tensor([-16.7132,  -9.8425, -25.4013, -19.8968, -12.4406], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9036, device='cuda:0', dtype=torch.float64)
tensor([-17.2949, -10.1139, -25.8572, -19.8659, -12.6388], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1529, device='cuda:0', dtype=torch.float64)
tensor([-17.6379, -10.2657, -26.2754, -19.9434, -12.8253], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9946, device='cuda:0', dtype=torch.float64)
tensor([-17.8633, -10.5405, -26.3698, -20.0769, -12.9708], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8340, device='cuda:0', dtype=torch.float64)
tensor([-17.9697, -10.7160, -26.4415, -20.2538, -13.0885], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1815, device='cuda:0', dtype=torch.float64)
tensor([-18.0813, -10.5724, -26.3542, -20.4357, -13.1697], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8899, device='cuda:0', dtype=torch.float64)
tensor([-18.3434, -10.5685, -26.6582, -20.7093, -13.1925], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1377, device='cuda:0', dtype=torch.float64)
tensor([-18.5061, -10.5259, -27.1146, -20.9499, -13.4264], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9962, device='cuda:0', dtype=torch.float64)
tensor([-18.5806, -10.5232, -27.7668, -21.0858, -13.5929], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0113, device='cuda:0', dtype=torch.float64)
tensor([-18.8384, -10.4745, -28.4085, -21.6058, -14.0230], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0401, device='cuda:0', dtype=torch.float64)
tensor([-19.1236, -10.4727, -29.2698, -21.9114, -14.5187], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0493, device='cuda:0', dtype=torch.float64)
tensor([-19.4999, -10.4009, -29.7842, -21.9800, -15.1516], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0119, device='cuda:0', dtype=torch.float64)
tensor([-19.8863, -10.4906, -29.9742, -22.4274, -15.9564], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0217, device='cuda:0', dtype=torch.float64)
tensor([-20.3782, -10.7322, -30.3609, -22.8366, -16.9094], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1157, device='cuda:0', dtype=torch.float64)
tensor([-20.9090, -11.1179, -30.7067, -23.3014, -18.3409], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9643, device='cuda:0', dtype=torch.float64)
tensor([-21.5986, -11.6280, -30.9627, -24.1687, -20.5505], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0207, device='cuda:0', dtype=torch.float64)
tensor([-22.5650, -12.2020, -31.5121, -25.3623, -23.0359], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0457, device='cuda:0', dtype=torch.float64)
tensor([-24.0017, -12.8624, -31.8826, -26.8295, -25.7478], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1784, device='cuda:0', dtype=torch.float64)
tensor([-25.4488, -13.3862, -32.0555, -27.9056, -27.9577], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0737, device='cuda:0', dtype=torch.float64)
tensor([-26.4603, -13.8191, -32.5575, -28.4180, -29.3964], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0381, device='cuda:0', dtype=torch.float64)
tensor([-27.1889, -14.0345, -33.1547, -28.8528, -30.6139], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0031, device='cuda:0', dtype=torch.float64)
tensor([-27.1388, -13.9636, -33.6805, -28.8472, -31.0769], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9889, device='cuda:0', dtype=torch.float64)
tensor([-27.3037, -13.5517, -33.5529, -29.0905, -31.3302], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0735, device='cuda:0', dtype=torch.float64)
tensor([-27.0048, -13.1039, -33.1798, -29.1588, -31.2332], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9147, device='cuda:0', dtype=torch.float64)
tensor([-26.6959, -12.7333, -32.8720, -28.9670, -30.8763], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9121, device='cuda:0', dtype=torch.float64)
tensor([-26.4297, -12.3063, -32.3219, -28.7747, -30.5024], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9216, device='cuda:0', dtype=torch.float64)
tensor([-25.8783, -12.0383, -31.7014, -28.5062, -30.3995], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8948, device='cuda:0', dtype=torch.float64)
tensor([-25.3078, -11.8706, -31.1411, -27.9998, -30.1331], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9932, device='cuda:0', dtype=torch.float64)
tensor([-24.6161, -11.8332, -30.3182, -27.1728, -29.6160], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8594, device='cuda:0', dtype=torch.float64)
tensor([-24.1710, -11.9043, -29.7262, -26.8425, -29.5242], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1609, device='cuda:0', dtype=torch.float64)
tensor([-23.3409, -11.9797, -29.1823, -26.0812, -29.0455], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8803, device='cuda:0', dtype=torch.float64)
tensor([-22.6032, -12.1131, -28.2806, -25.6298, -28.6467], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9683, device='cuda:0', dtype=torch.float64)
tensor([-21.6778, -12.3561, -27.1525, -25.1888, -28.6139], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8536, device='cuda:0', dtype=torch.float64)
tensor([-21.1506, -12.6002, -26.0968, -25.1390, -28.6921], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0443, device='cuda:0', dtype=torch.float64)
tensor([-20.6414, -12.9632, -25.6368, -25.5584, -28.9944], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0521, device='cuda:0', dtype=torch.float64)
tensor([-20.3093, -13.2366, -25.0161, -25.8979, -29.1490], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0196, device='cuda:0', dtype=torch.float64)
tensor([-20.1326, -13.5813, -24.7026, -26.4388, -29.3220], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1028, device='cuda:0', dtype=torch.float64)
tensor([-20.0980, -13.7399, -24.9162, -27.0946, -29.7079], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0122, device='cuda:0', dtype=torch.float64)
tensor([-19.9684, -13.8331, -25.3832, -27.5262, -29.9364], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0316, device='cuda:0', dtype=torch.float64)
tensor([-19.9508, -13.8070, -25.8969, -27.8801, -30.2505], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2150, device='cuda:0', dtype=torch.float64)
tensor([-19.8422, -13.4756, -26.7232, -27.8117, -30.1733], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0302, device='cuda:0', dtype=torch.float64)
tensor([-19.9527, -13.0751, -27.3727, -27.8036, -30.0123], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2994, device='cuda:0', dtype=torch.float64)
tensor([-20.2670, -12.6843, -27.9422, -28.0474, -30.2676], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0835, device='cuda:0', dtype=torch.float64)
tensor([-20.5134, -12.4899, -28.5838, -28.5053, -30.2249], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9841, device='cuda:0', dtype=torch.float64)
tensor([-20.7192, -12.4131, -28.9938, -28.6776, -29.7602], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1525, device='cuda:0', dtype=torch.float64)
tensor([-20.9602, -12.3413, -29.3359, -29.1126, -29.6329], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9041, device='cuda:0', dtype=torch.float64)
tensor([-21.3442, -12.0999, -29.6382, -29.8592, -30.1614], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0886, device='cuda:0', dtype=torch.float64)
tensor([-21.6686, -11.9408, -30.1631, -30.4263, -30.9791], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1256, device='cuda:0', dtype=torch.float64)
tensor([-21.7544, -11.8479, -30.8549, -30.8128, -31.3888], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2021, device='cuda:0', dtype=torch.float64)
tensor([-22.4321, -11.6122, -31.7163, -31.6008, -32.5270], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0153, device='cuda:0', dtype=torch.float64)
tensor([-22.9944, -11.4459, -32.6816, -31.8145, -33.3666], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1845, device='cuda:0', dtype=torch.float64)
tensor([-23.8630, -11.5154, -33.2269, -32.4866, -34.4120], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1362, device='cuda:0', dtype=torch.float64)
tensor([-24.3862, -11.6840, -33.4303, -33.3690, -35.6075], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9333, device='cuda:0', dtype=torch.float64)
tensor([-24.7676, -11.8370, -33.4887, -33.8103, -36.6593], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8676, device='cuda:0', dtype=torch.float64)
tensor([-25.4851, -12.2485, -33.7722, -34.5315, -37.6551], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0167, device='cuda:0', dtype=torch.float64)
tensor([-26.4203, -12.7642, -33.9360, -35.4785, -38.8613], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5348, device='cuda:0', dtype=torch.float64)
tensor([-26.8908, -13.1826, -33.8113, -35.3869, -39.1974], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9877, device='cuda:0', dtype=torch.float64)
tensor([-27.5020, -13.6298, -33.3976, -35.3315, -38.9815], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9411, device='cuda:0', dtype=torch.float64)
tensor([-27.9255, -14.0690, -32.8361, -35.3752, -38.6844], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0694, device='cuda:0', dtype=torch.float64)
tensor([-28.1559, -13.9810, -32.1349, -35.0023, -37.7437], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9840, device='cuda:0', dtype=torch.float64)
tensor([-28.5508, -14.1309, -31.5477, -34.6749, -37.0862], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8435, device='cuda:0', dtype=torch.float64)
tensor([-28.7697, -14.1684, -30.9117, -34.0678, -36.3289], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1175, device='cuda:0', dtype=torch.float64)
tensor([-28.9762, -14.5608, -30.5000, -34.1274, -36.2681], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0586, device='cuda:0', dtype=torch.float64)
tensor([-29.2817, -15.3609, -30.1661, -34.6630, -36.8724], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1383, device='cuda:0', dtype=torch.float64)
tensor([-29.5661, -16.2420, -30.1238, -35.3707, -37.9255], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0881, device='cuda:0', dtype=torch.float64)
tensor([-29.5238, -17.0306, -30.4205, -35.7989, -38.9206], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3102, device='cuda:0', dtype=torch.float64)
tensor([-29.1598, -17.4738, -30.1963, -36.1646, -40.0104], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3533, device='cuda:0', dtype=torch.float64)
tensor([-28.7158, -17.6826, -30.0324, -36.1360, -40.9802], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1203, device='cuda:0', dtype=torch.float64)
tensor([-28.6563, -19.1288, -30.0330, -36.8681, -42.9120], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0919, device='cuda:0', dtype=torch.float64)
tensor([-28.9115, -20.7006, -30.0649, -37.5729, -44.8131], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0120, device='cuda:0', dtype=torch.float64)
tensor([-29.3414, -22.2707, -30.0891, -37.9764, -46.5837], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9263, device='cuda:0', dtype=torch.float64)
tensor([-29.7649, -23.3502, -30.2187, -38.2896, -48.2631], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8826, device='cuda:0', dtype=torch.float64)
tensor([-30.2282, -24.9738, -30.0899, -38.5839, -50.0845], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9752, device='cuda:0', dtype=torch.float64)
tensor([-30.4034, -26.2602, -30.2252, -38.9285, -51.8252], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1333, device='cuda:0', dtype=torch.float64)
tensor([-30.4979, -27.0707, -30.3588, -38.7814, -53.2026], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0393, device='cuda:0', dtype=torch.float64)
tensor([-30.6903, -28.0336, -30.4228, -39.0374, -54.6493], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1711, device='cuda:0', dtype=torch.float64)
tensor([-31.6361, -29.6482, -30.7168, -39.3954, -56.5972], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9375, device='cuda:0', dtype=torch.float64)
tensor([-32.4784, -31.2907, -31.0910, -39.5132, -58.3767], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2160, device='cuda:0', dtype=torch.float64)
tensor([-32.5403, -31.4585, -31.6551, -38.2580, -58.2622], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2596, device='cuda:0', dtype=torch.float64)
tensor([-32.9281, -31.6087, -32.3673, -37.3237, -58.5245], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9014, device='cuda:0', dtype=torch.float64)
tensor([-33.7103, -32.0623, -32.8444, -36.9409, -59.1030], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2996, device='cuda:0', dtype=torch.float64)
tensor([-34.4175, -32.1193, -33.3779, -36.4396, -58.6531], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8524, device='cuda:0', dtype=torch.float64)
tensor([-35.2537, -32.4357, -33.6677, -36.6349, -58.8711], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2545, device='cuda:0', dtype=torch.float64)
tensor([-36.2051, -32.5107, -33.7041, -36.4739, -59.0141], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9673, device='cuda:0', dtype=torch.float64)
tensor([-37.2436, -32.7281, -33.7471, -36.7207, -59.0865], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9964, device='cuda:0', dtype=torch.float64)
tensor([-38.0853, -33.1262, -34.1034, -36.4450, -58.6835], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9810, device='cuda:0', dtype=torch.float64)
tensor([-39.1762, -33.7906, -34.7012, -36.1220, -58.8856], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1132, device='cuda:0', dtype=torch.float64)
tensor([-40.3990, -34.0610, -35.4928, -36.2172, -59.4279], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9432, device='cuda:0', dtype=torch.float64)
tensor([-41.5171, -34.5463, -36.1339, -36.3216, -60.0778], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9752, device='cuda:0', dtype=torch.float64)
tensor([-42.7273, -35.1449, -36.7647, -36.1647, -60.6018], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0394, device='cuda:0', dtype=torch.float64)
tensor([-43.7121, -35.6607, -37.2312, -36.3077, -61.2815], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0956, device='cuda:0', dtype=torch.float64)
tensor([-44.1893, -35.4214, -37.5808, -36.1618, -61.2395], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0835, device='cuda:0', dtype=torch.float64)
tensor([-44.4053, -34.4347, -37.6038, -35.5623, -60.8310], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8311, device='cuda:0', dtype=torch.float64)
tensor([-44.4181, -33.6044, -37.7302, -35.0591, -60.3494], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0642, device='cuda:0', dtype=torch.float64)
tensor([-44.5100, -32.4908, -37.6115, -34.4370, -59.9536], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1796, device='cuda:0', dtype=torch.float64)
tensor([-44.5301, -31.6941, -37.5339, -33.7533, -59.7709], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2493, device='cuda:0', dtype=torch.float64)
tensor([-44.9190, -31.1226, -37.3039, -32.8840, -60.1861], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0549, device='cuda:0', dtype=torch.float64)
tensor([-45.5955, -30.9378, -37.4015, -32.2971, -60.6425], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2235, device='cuda:0', dtype=torch.float64)
tensor([-45.6101, -30.4574, -37.2687, -31.3892, -60.5987], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1103, device='cuda:0', dtype=torch.float64)
tensor([-45.3682, -29.7007, -37.2388, -30.8039, -60.5384], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0790, device='cuda:0', dtype=torch.float64)
tensor([-44.7032, -28.6341, -37.2340, -30.3565, -60.1258], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0988, device='cuda:0', dtype=torch.float64)
tensor([-44.6179, -28.1678, -37.4350, -30.3828, -60.2638], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0389, device='cuda:0', dtype=torch.float64)
tensor([-44.2383, -27.5143, -37.5619, -30.5099, -60.1064], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0719, device='cuda:0', dtype=torch.float64)
tensor([-43.7016, -26.9285, -37.6449, -30.5740, -59.5034], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2921, device='cuda:0', dtype=torch.float64)
tensor([-42.8692, -27.1584, -37.8607, -30.4714, -58.7349], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9974, device='cuda:0', dtype=torch.float64)
tensor([-42.1366, -27.3298, -38.2031, -30.6393, -58.2481], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1298, device='cuda:0', dtype=torch.float64)
tensor([-41.2127, -27.4872, -38.3855, -30.2435, -57.2591], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9843, device='cuda:0', dtype=torch.float64)
tensor([-40.7870, -27.6929, -38.5405, -30.0795, -56.7902], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1700, device='cuda:0', dtype=torch.float64)
tensor([-40.6162, -28.0483, -38.7395, -29.9889, -56.6151], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0461, device='cuda:0', dtype=torch.float64)
tensor([-40.5175, -28.5018, -38.9278, -30.3381, -56.5476], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1154, device='cuda:0', dtype=torch.float64)
tensor([-40.8922, -29.2032, -39.2996, -31.4079, -57.1123], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0789, device='cuda:0', dtype=torch.float64)
tensor([-41.2917, -30.6178, -40.1626, -32.6668, -58.2709], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9000, device='cuda:0', dtype=torch.float64)
tensor([-41.8139, -32.0898, -41.0052, -33.8935, -59.3366], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9586, device='cuda:0', dtype=torch.float64)
tensor([-42.0411, -33.3995, -41.7658, -34.6542, -59.7551], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9938, device='cuda:0', dtype=torch.float64)
tensor([-42.0310, -34.3325, -42.3896, -35.4448, -59.7746], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9135, device='cuda:0', dtype=torch.float64)
tensor([-41.7219, -34.7258, -42.7467, -35.7206, -59.2275], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9835, device='cuda:0', dtype=torch.float64)
tensor([-41.0928, -35.0060, -42.8757, -36.1138, -59.0488], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9888, device='cuda:0', dtype=torch.float64)
tensor([-40.1524, -35.2610, -42.9798, -36.2554, -58.7674], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1579, device='cuda:0', dtype=torch.float64)
tensor([-39.3896, -35.7537, -43.0497, -36.1872, -58.5062], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9666, device='cuda:0', dtype=torch.float64)
tensor([-38.8158, -36.3797, -42.8407, -35.9549, -58.2351], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0117, device='cuda:0', dtype=torch.float64)
tensor([-38.7216, -37.1990, -42.8686, -36.1050, -58.4969], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0781, device='cuda:0', dtype=torch.float64)
tensor([-38.7692, -37.5657, -42.7195, -36.3946, -58.5225], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9670, device='cuda:0', dtype=torch.float64)
tensor([-39.1355, -37.7336, -42.6836, -37.1907, -59.2215], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2464, device='cuda:0', dtype=torch.float64)
tensor([-39.4213, -38.1810, -42.3765, -37.6476, -59.9294], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0551, device='cuda:0', dtype=torch.float64)
tensor([-40.0879, -38.2542, -41.9768, -37.9346, -60.8725], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9046, device='cuda:0', dtype=torch.float64)
tensor([-40.9534, -38.3361, -41.6516, -38.5150, -61.6397], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9526, device='cuda:0', dtype=torch.float64)
tensor([-41.2017, -38.2006, -40.9557, -38.1589, -61.2665], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9821, device='cuda:0', dtype=torch.float64)
tensor([-40.8228, -38.3714, -39.9017, -37.2956, -60.4264], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1461, device='cuda:0', dtype=torch.float64)
tensor([-40.4650, -38.4361, -38.7175, -36.3644, -59.4036], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0629, device='cuda:0', dtype=torch.float64)
tensor([-39.9631, -38.8387, -37.7581, -35.4818, -58.4718], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1419, device='cuda:0', dtype=torch.float64)
tensor([-39.2292, -39.1933, -36.4005, -34.6603, -57.9025], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2593, device='cuda:0', dtype=torch.float64)
tensor([-39.1374, -39.5405, -35.7605, -34.4566, -57.8548], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1235, device='cuda:0', dtype=torch.float64)
tensor([-38.7247, -40.4539, -34.7101, -33.7430, -57.4998], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1439, device='cuda:0', dtype=torch.float64)
tensor([-38.4063, -41.2330, -33.7343, -33.3283, -56.9959], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1387, device='cuda:0', dtype=torch.float64)
tensor([-38.8431, -41.5700, -33.0238, -33.8481, -57.3313], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0099, device='cuda:0', dtype=torch.float64)
tensor([-38.5619, -41.4616, -32.3065, -34.0226, -57.0869], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0450, device='cuda:0', dtype=torch.float64)
tensor([-38.6945, -41.2045, -31.5541, -34.5307, -57.2766], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1536, device='cuda:0', dtype=torch.float64)
tensor([-39.3831, -41.4807, -30.8926, -35.6182, -58.3660], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9636, device='cuda:0', dtype=torch.float64)
tensor([-40.5476, -42.3177, -30.2494, -37.2698, -60.1762], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0415, device='cuda:0', dtype=torch.float64)
tensor([-42.1295, -43.6816, -29.7427, -39.0257, -62.2693], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9666, device='cuda:0', dtype=torch.float64)
tensor([-43.1212, -44.8953, -29.2308, -40.0826, -63.8768], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9518, device='cuda:0', dtype=torch.float64)
tensor([-44.3775, -46.0189, -28.8449, -41.0227, -65.5050], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0310, device='cuda:0', dtype=torch.float64)
tensor([-46.6139, -47.4100, -28.7608, -42.2471, -67.5318], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8627, device='cuda:0', dtype=torch.float64)
tensor([-49.3438, -48.8865, -29.0708, -43.8650, -69.6749], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0398, device='cuda:0', dtype=torch.float64)
tensor([-52.0172, -51.0249, -29.4138, -45.4427, -72.0852], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1644, device='cuda:0', dtype=torch.float64)
tensor([-53.9866, -52.9308, -29.5504, -46.0574, -73.4533], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8721, device='cuda:0', dtype=torch.float64)
tensor([-56.2780, -54.8698, -29.9344, -46.9526, -75.1910], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9560, device='cuda:0', dtype=torch.float64)
tensor([-58.6693, -57.4259, -30.4853, -48.1357, -77.2736], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9618, device='cuda:0', dtype=torch.float64)
tensor([-61.9660, -59.4217, -31.4948, -49.7616, -79.4913], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9115, device='cuda:0', dtype=torch.float64)
tensor([-64.5577, -61.2631, -32.4501, -51.0258, -81.1089], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0844, device='cuda:0', dtype=torch.float64)
tensor([-66.9272, -62.7023, -33.0668, -52.3360, -82.0112], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0306, device='cuda:0', dtype=torch.float64)
tensor([-67.5432, -64.2397, -33.1176, -52.7990, -81.9810], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8742, device='cuda:0', dtype=torch.float64)
tensor([-67.8114, -65.5354, -33.0898, -53.0042, -81.5346], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8942, device='cuda:0', dtype=torch.float64)
tensor([-68.8396, -67.5636, -33.0965, -53.5360, -81.4553], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0693, device='cuda:0', dtype=torch.float64)
tensor([-69.9233, -70.4113, -32.8634, -53.9165, -82.0729], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0495, device='cuda:0', dtype=torch.float64)
tensor([-71.8640, -72.4784, -32.6261, -54.7670, -82.8039], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9197, device='cuda:0', dtype=torch.float64)
tensor([-73.9076, -74.6739, -32.4431, -55.5298, -83.7526], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4230, device='cuda:0', dtype=torch.float64)
tensor([-73.6655, -77.1535, -31.4401, -55.1838, -83.6973], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9436, device='cuda:0', dtype=torch.float64)
tensor([-73.4428, -79.6912, -30.2621, -54.9881, -83.6049], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9329, device='cuda:0', dtype=torch.float64)
tensor([-72.8865, -81.9761, -28.6610, -54.0505, -83.2909], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9569, device='cuda:0', dtype=torch.float64)
tensor([-72.9884, -84.1910, -27.6122, -53.6143, -83.2771], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0350, device='cuda:0', dtype=torch.float64)
tensor([-72.2852, -85.4793, -26.4178, -52.5087, -82.3482], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9501, device='cuda:0', dtype=torch.float64)
tensor([-71.4535, -86.2953, -25.4301, -51.2029, -81.1195], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9108, device='cuda:0', dtype=torch.float64)
tensor([-70.7082, -87.8407, -24.6862, -50.1874, -80.5287], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1793, device='cuda:0', dtype=torch.float64)
tensor([-70.0682, -88.0738, -23.9296, -48.9593, -79.4668], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2225, device='cuda:0', dtype=torch.float64)
tensor([-69.7896, -88.0302, -23.3444, -47.6056, -78.7859], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0776, device='cuda:0', dtype=torch.float64)
tensor([-68.9941, -87.4567, -22.8634, -45.9975, -77.4979], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9889, device='cuda:0', dtype=torch.float64)
tensor([-68.5448, -86.6794, -22.3941, -44.5998, -76.4588], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2413, device='cuda:0', dtype=torch.float64)
tensor([-68.9234, -85.2610, -22.2659, -43.7202, -75.3024], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9622, device='cuda:0', dtype=torch.float64)
tensor([-68.0102, -83.9785, -22.2985, -42.4723, -73.5336], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0037, device='cuda:0', dtype=torch.float64)
tensor([-67.2270, -82.7804, -22.3964, -41.2025, -71.6908], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1247, device='cuda:0', dtype=torch.float64)
tensor([-67.4904, -81.5235, -22.7409, -40.4793, -70.4485], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9452, device='cuda:0', dtype=torch.float64)
tensor([-67.6031, -79.6983, -23.2182, -39.5733, -68.8309], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1827, device='cuda:0', dtype=torch.float64)
tensor([-67.8559, -77.4181, -24.0099, -39.0314, -67.2920], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0648, device='cuda:0', dtype=torch.float64)
tensor([-67.8111, -75.0303, -24.5413, -38.5498, -65.8298], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0557, device='cuda:0', dtype=torch.float64)
tensor([-68.3967, -73.0863, -25.5722, -38.5728, -64.8631], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2471, device='cuda:0', dtype=torch.float64)
tensor([-68.3520, -71.9475, -26.4665, -38.6446, -64.0302], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9640, device='cuda:0', dtype=torch.float64)
tensor([-67.5523, -70.7734, -27.1874, -38.0794, -62.9862], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0747, device='cuda:0', dtype=torch.float64)
tensor([-67.6668, -70.9550, -27.8808, -38.3185, -63.1337], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1318, device='cuda:0', dtype=torch.float64)
tensor([-68.2416, -71.4339, -28.8362, -38.8059, -63.6813], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0229, device='cuda:0', dtype=torch.float64)
tensor([-68.8218, -71.7495, -29.4896, -39.2665, -64.0281], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0354, device='cuda:0', dtype=torch.float64)
tensor([-69.1262, -72.4005, -30.0713, -39.7162, -64.4856], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0428, device='cuda:0', dtype=torch.float64)
tensor([-70.0751, -72.8056, -30.6236, -40.4560, -65.3367], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8995, device='cuda:0', dtype=torch.float64)
tensor([-71.2593, -73.2767, -31.1198, -41.0226, -66.0865], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1474, device='cuda:0', dtype=torch.float64)
tensor([-72.4971, -74.1214, -31.9741, -41.9543, -66.8824], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0411, device='cuda:0', dtype=torch.float64)
tensor([-73.9806, -74.8193, -33.1447, -42.4424, -67.6810], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9950, device='cuda:0', dtype=torch.float64)
tensor([-76.1404, -76.0705, -34.4807, -43.4293, -69.0200], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9760, device='cuda:0', dtype=torch.float64)
tensor([-78.0897, -77.9878, -35.5740, -44.1708, -70.5105], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9715, device='cuda:0', dtype=torch.float64)
tensor([-80.1832, -79.9134, -36.7149, -45.0433, -72.1842], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0152, device='cuda:0', dtype=torch.float64)
tensor([-82.2966, -80.9591, -37.7601, -46.0922, -73.6309], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1320, device='cuda:0', dtype=torch.float64)
tensor([-84.2864, -81.7633, -39.1596, -46.9327, -74.7846], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9326, device='cuda:0', dtype=torch.float64)
tensor([-85.7664, -83.1402, -40.7643, -47.7492, -75.9636], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0760, device='cuda:0', dtype=torch.float64)
tensor([-87.0936, -84.3809, -42.3835, -48.3118, -77.4851], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9788, device='cuda:0', dtype=torch.float64)
tensor([-88.7383, -86.3769, -44.2207, -49.0582, -79.2688], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8205, device='cuda:0', dtype=torch.float64)
tensor([-90.2291, -88.7759, -45.9257, -49.8133, -81.4582], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1388, device='cuda:0', dtype=torch.float64)
tensor([-91.8232, -91.1469, -47.2681, -51.0784, -83.6554], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1627, device='cuda:0', dtype=torch.float64)
tensor([-93.2804, -93.4802, -48.1834, -52.3362, -86.3023], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0040, device='cuda:0', dtype=torch.float64)
tensor([-94.1857, -95.5916, -48.8341, -53.2809, -88.7013], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9860, device='cuda:0', dtype=torch.float64)
tensor([-94.6902, -97.1307, -49.2355, -53.7422, -90.6562], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1020, device='cuda:0', dtype=torch.float64)
tensor([-95.3672, -99.3037, -49.8273, -54.2325, -93.4883], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9831, device='cuda:0', dtype=torch.float64)
tensor([ -95.7530, -100.9439,  -50.1875,  -54.7427,  -95.6282],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.1373, device='cuda:0', dtype=torch.float64)
tensor([ -96.1819, -102.8300,  -50.7624,  -55.3672,  -97.9649],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0196, device='cuda:0', dtype=torch.float64)
tensor([ -97.3108, -104.0225,  -51.4867,  -56.5915, -100.7731],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9758, device='cuda:0', dtype=torch.float64)
tensor([ -98.0587, -104.5464,  -51.5602,  -58.1121, -103.1503],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.2616, device='cuda:0', dtype=torch.float64)
tensor([ -97.3297, -102.3916,  -51.4401,  -58.4577, -102.4430],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8767, device='cuda:0', dtype=torch.float64)
tensor([ -95.9649, -101.5502,  -51.2512,  -59.0554, -102.3542],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8524, device='cuda:0', dtype=torch.float64)
tensor([ -94.9122, -101.2787,  -51.0695,  -59.6409, -102.9546],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9286, device='cuda:0', dtype=torch.float64)
tensor([ -94.1946, -101.2238,  -50.9972,  -59.7937, -103.5612],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.1349, device='cuda:0', dtype=torch.float64)
tensor([ -94.8088, -101.1075,  -51.0493,  -60.5999, -104.8544],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0231, device='cuda:0', dtype=torch.float64)
tensor([ -95.2956, -101.4181,  -50.8727,  -61.0958, -105.9906],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9399, device='cuda:0', dtype=torch.float64)
tensor([ -95.1539, -102.0580,  -50.4702,  -60.7638, -106.9598],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9586, device='cuda:0', dtype=torch.float64)
tensor([ -94.9683, -103.1116,  -50.4060,  -60.4764, -108.1271],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8395, device='cuda:0', dtype=torch.float64)
tensor([ -95.4326, -104.7992,  -50.6595,  -60.5079, -110.1987],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0412, device='cuda:0', dtype=torch.float64)
tensor([ -96.6293, -106.3504,  -50.9154,  -60.8159, -112.8910],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.1469, device='cuda:0', dtype=torch.float64)
tensor([ -98.2621, -106.5838,  -51.1015,  -60.9731, -114.5099],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0222, device='cuda:0', dtype=torch.float64)
tensor([-100.1935, -105.5034,  -51.2492,  -61.3750, -115.3256],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.2585, device='cuda:0', dtype=torch.float64)
tensor([-101.7223, -104.2761,  -51.2560,  -61.8336, -115.7335],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9151, device='cuda:0', dtype=torch.float64)
tensor([-102.6180, -103.6401,  -50.9316,  -61.9104, -116.2914],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.1531, device='cuda:0', dtype=torch.float64)
tensor([-103.6241, -103.6686,  -50.7895,  -61.8914, -117.3168],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9342, device='cuda:0', dtype=torch.float64)
tensor([-104.6845, -104.1243,  -50.9386,  -62.2730, -118.8193],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9119, device='cuda:0', dtype=torch.float64)
tensor([-106.0279, -105.2485,  -50.8443,  -63.2083, -121.0519],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9123, device='cuda:0', dtype=torch.float64)
tensor([-107.1706, -105.8366,  -50.9452,  -63.9642, -122.1327],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0936, device='cuda:0', dtype=torch.float64)
tensor([-109.2553, -106.8799,  -51.0435,  -66.1006, -125.4049],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9337, device='cuda:0', dtype=torch.float64)
tensor([-111.7710, -109.7333,  -51.2309,  -68.8088, -131.7130],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9360, device='cuda:0', dtype=torch.float64)
tensor([-114.5030, -113.0253,  -51.6497,  -72.3155, -138.6186],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8342, device='cuda:0', dtype=torch.float64)
tensor([-116.9942, -116.2700,  -52.3210,  -75.7539, -145.4410],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8101, device='cuda:0', dtype=torch.float64)
tensor([-119.3428, -119.7632,  -53.0354,  -79.0128, -152.1196],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9782, device='cuda:0', dtype=torch.float64)
tensor([-121.8699, -125.0231,  -53.9731,  -82.4720, -160.3737],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9762, device='cuda:0', dtype=torch.float64)
tensor([-123.7254, -129.8496,  -54.5748,  -84.7076, -166.6122],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9264, device='cuda:0', dtype=torch.float64)
tensor([-124.5957, -132.0083,  -54.7639,  -85.9531, -169.1948],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9068, device='cuda:0', dtype=torch.float64)
tensor([-125.7138, -132.5445,  -54.9430,  -86.8311, -169.2979],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8303, device='cuda:0', dtype=torch.float64)
tensor([-126.6711, -133.6178,  -54.9888,  -87.9789, -169.6566],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.2739, device='cuda:0', dtype=torch.float64)
tensor([-125.7137, -132.3465,  -55.0527,  -87.1499, -166.0613],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8369, device='cuda:0', dtype=torch.float64)
tensor([-124.8328, -130.4294,  -55.5351,  -86.3333, -161.9270],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8776, device='cuda:0', dtype=torch.float64)
tensor([-124.8389, -129.5898,  -56.3540,  -86.2869, -159.5786],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8724, device='cuda:0', dtype=torch.float64)
tensor([-123.9611, -127.8015,  -57.1510,  -85.4073, -155.6816],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8191, device='cuda:0', dtype=torch.float64)
tensor([-123.1669, -126.6579,  -58.0176,  -84.7886, -153.0594],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.1448, device='cuda:0', dtype=torch.float64)
tensor([-122.0792, -124.8018,  -59.0237,  -84.2804, -148.7876],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0335, device='cuda:0', dtype=torch.float64)
tensor([-120.7218, -122.7402,  -59.9370,  -83.2013, -143.9369],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0869, device='cuda:0', dtype=torch.float64)
tensor([-120.4312, -121.8619,  -60.9361,  -82.9827, -141.3654],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8433, device='cuda:0', dtype=torch.float64)
tensor([-119.9712, -120.0014,  -61.3251,  -82.1609, -138.0281],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8567, device='cuda:0', dtype=torch.float64)
tensor([-119.1246, -118.0888,  -61.2693,  -80.9589, -133.9926],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7087, device='cuda:0', dtype=torch.float64)
tensor([-118.6849, -117.0440,  -61.2751,  -80.2989, -131.4715],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9490, device='cuda:0', dtype=torch.float64)
tensor([-118.0866, -115.2288,  -60.9842,  -79.2933, -128.5092],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9260, device='cuda:0', dtype=torch.float64)
tensor([-118.1152, -114.0154,  -60.8634,  -79.1091, -127.4886],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9681, device='cuda:0', dtype=torch.float64)
tensor([-118.2158, -113.2303,  -60.8509,  -79.1827, -127.3138],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9976, device='cuda:0', dtype=torch.float64)
tensor([-119.0019, -112.9611,  -61.5140,  -80.2644, -127.7592],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8200, device='cuda:0', dtype=torch.float64)
tensor([-119.4719, -112.3915,  -62.0353,  -80.8138, -127.8536],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9191, device='cuda:0', dtype=torch.float64)
tensor([-119.9186, -111.5016,  -62.6781,  -81.1673, -127.8509],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8918, device='cuda:0', dtype=torch.float64)
tensor([-120.6412, -110.7887,  -63.3284,  -81.8970, -128.4935],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9437, device='cuda:0', dtype=torch.float64)
tensor([-120.2017, -110.0825,  -63.5703,  -82.4511, -128.2447],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0297, device='cuda:0', dtype=torch.float64)
tensor([-120.6829, -109.6780,  -64.2087,  -83.8676, -129.2918],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0179, device='cuda:0', dtype=torch.float64)
tensor([-121.7228, -110.4868,  -64.9850,  -86.4397, -131.8607],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0002, device='cuda:0', dtype=torch.float64)
tensor([-123.2421, -112.6132,  -65.9311,  -89.7176, -136.1419],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9246, device='cuda:0', dtype=torch.float64)
tensor([-124.6788, -114.8232,  -66.5765,  -93.0856, -140.1774],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.1613, device='cuda:0', dtype=torch.float64)
tensor([-125.3611, -116.6955,  -66.5367,  -95.9161, -143.2204],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9742, device='cuda:0', dtype=torch.float64)
tensor([-125.9392, -118.8430,  -66.7576,  -98.9286, -146.0502],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0720, device='cuda:0', dtype=torch.float64)
tensor([-126.6291, -120.8480,  -67.2856, -101.3305, -148.7894],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9832, device='cuda:0', dtype=torch.float64)
tensor([-127.6527, -122.8939,  -67.5480, -103.5376, -151.6923],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.3356, device='cuda:0', dtype=torch.float64)
tensor([-129.7457, -127.2951,  -67.7487, -106.1448, -157.5374],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9061, device='cuda:0', dtype=torch.float64)
tensor([-132.2377, -132.3002,  -68.1221, -109.1784, -164.5101],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.1629, device='cuda:0', dtype=torch.float64)
tensor([-133.2335, -134.7470,  -68.0520, -109.8125, -168.1323],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0101, device='cuda:0', dtype=torch.float64)
tensor([-133.6441, -137.1648,  -67.7219, -109.3695, -171.5613],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9529, device='cuda:0', dtype=torch.float64)
tensor([-132.8170, -139.1528,  -66.9499, -107.4915, -173.7081],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8881, device='cuda:0', dtype=torch.float64)
tensor([-131.1502, -140.5922,  -66.4016, -104.9696, -175.2662],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0232, device='cuda:0', dtype=torch.float64)
tensor([-130.2360, -142.1034,  -66.0792, -102.5274, -177.0071],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8518, device='cuda:0', dtype=torch.float64)
tensor([-129.7458, -142.7955,  -65.6623, -100.1006, -177.5553],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8839, device='cuda:0', dtype=torch.float64)
tensor([-129.9274, -144.2283,  -65.9585,  -99.1409, -179.4197],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9848, device='cuda:0', dtype=torch.float64)
tensor([-130.8269, -148.0333,  -66.2165,  -99.2221, -184.4017],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9276, device='cuda:0', dtype=torch.float64)
tensor([-132.3613, -153.3160,  -66.2687,  -99.9724, -190.9241],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7280, device='cuda:0', dtype=torch.float64)
tensor([-133.1665, -158.9319,  -66.5409, -100.1659, -197.1314],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9798, device='cuda:0', dtype=torch.float64)
tensor([-134.2759, -164.0660,  -66.8528, -100.0075, -202.3804],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9903, device='cuda:0', dtype=torch.float64)
tensor([-135.3522, -169.5223,  -67.3974, -100.2023, -207.8763],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9209, device='cuda:0', dtype=torch.float64)
tensor([-135.3509, -171.5996,  -67.6370,  -99.1561, -208.8972],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9457, device='cuda:0', dtype=torch.float64)
tensor([-136.7171, -173.9633,  -67.8392,  -99.6576, -210.6969],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7186, device='cuda:0', dtype=torch.float64)
tensor([-138.6412, -177.1143,  -67.9590, -100.4831, -213.7518],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7216, device='cuda:0', dtype=torch.float64)
tensor([-140.2675, -181.1171,  -67.9038, -100.7694, -217.0863],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9021, device='cuda:0', dtype=torch.float64)
tensor([-142.1926, -182.6339,  -67.7886, -101.3669, -218.5066],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8118, device='cuda:0', dtype=torch.float64)
tensor([-143.8266, -183.6160,  -67.2818, -102.1208, -219.0629],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0116, device='cuda:0', dtype=torch.float64)
tensor([-144.9643, -181.6518,  -66.5147, -102.6194, -217.2741],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9439, device='cuda:0', dtype=torch.float64)
tensor([-145.3031, -178.5178,  -65.5857, -102.5427, -214.0675],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8519, device='cuda:0', dtype=torch.float64)
tensor([-144.8915, -173.5000,  -64.1976, -101.6608, -208.6012],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7787, device='cuda:0', dtype=torch.float64)
tensor([-144.0326, -167.0781,  -62.9344, -100.0713, -201.4532],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8403, device='cuda:0', dtype=torch.float64)
tensor([-143.1140, -161.1514,  -61.5381,  -98.6884, -194.5676],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8476, device='cuda:0', dtype=torch.float64)
tensor([-142.5970, -155.3995,  -60.5099,  -97.2537, -187.7252],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8794, device='cuda:0', dtype=torch.float64)
tensor([-140.8809, -148.9204,  -59.3025,  -94.8703, -179.8173],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8317, device='cuda:0', dtype=torch.float64)
tensor([-139.5497, -143.9402,  -58.2090,  -92.8455, -172.9386],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0040, device='cuda:0', dtype=torch.float64)
tensor([-138.8235, -141.6439,  -57.1597,  -92.0697, -169.4150],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8614, device='cuda:0', dtype=torch.float64)
tensor([-138.0574, -139.4267,  -55.9855,  -91.2881, -165.6166],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9751, device='cuda:0', dtype=torch.float64)
tensor([-138.2535, -138.7577,  -55.4146,  -91.4262, -164.0835],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7706, device='cuda:0', dtype=torch.float64)
tensor([-139.0666, -138.5522,  -54.6788,  -91.9929, -163.2454],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8200, device='cuda:0', dtype=torch.float64)
tensor([-140.9351, -139.4512,  -54.2955,  -93.3756, -163.9637],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.1131, device='cuda:0', dtype=torch.float64)
tensor([-141.8789, -138.7871,  -54.1812,  -93.6378, -162.5128],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0126, device='cuda:0', dtype=torch.float64)
tensor([-145.3216, -138.9790,  -54.5193,  -95.1794, -163.1790],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.1904, device='cuda:0', dtype=torch.float64)
tensor([-149.8692, -139.9086,  -54.5357,  -97.6815, -164.7779],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7502, device='cuda:0', dtype=torch.float64)
tensor([-152.8691, -140.1818,  -54.6915,  -99.5367, -164.6678],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7778, device='cuda:0', dtype=torch.float64)
tensor([-155.7114, -140.3229,  -54.6452, -101.5606, -164.8232],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9097, device='cuda:0', dtype=torch.float64)
tensor([-159.6857, -142.3000,  -54.9939, -104.7812, -167.5834],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9772, device='cuda:0', dtype=torch.float64)
tensor([-165.8999, -146.1913,  -56.3265, -109.5627, -174.0671],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7749, device='cuda:0', dtype=torch.float64)
tensor([-171.1435, -148.2443,  -57.4363, -113.3760, -178.1419],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8949, device='cuda:0', dtype=torch.float64)
tensor([-175.5808, -148.6151,  -58.4448, -115.7003, -179.7654],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9834, device='cuda:0', dtype=torch.float64)
tensor([-180.3712, -150.4920,  -59.6600, -118.0391, -182.2790],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9001, device='cuda:0', dtype=torch.float64)
tensor([-183.7588, -150.6400,  -60.6083, -119.0725, -182.9209],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9105, device='cuda:0', dtype=torch.float64)
tensor([-186.2845, -151.8707,  -62.1726, -119.8110, -185.4482],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8754, device='cuda:0', dtype=torch.float64)
tensor([-190.2639, -155.1531,  -64.0138, -121.7172, -190.3397],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9528, device='cuda:0', dtype=torch.float64)
tensor([-193.3046, -157.9431,  -65.4328, -122.6070, -194.1099],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0879, device='cuda:0', dtype=torch.float64)
tensor([-196.3198, -160.5503,  -67.5358, -123.6095, -198.3282],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9687, device='cuda:0', dtype=torch.float64)
tensor([-198.3259, -163.0842,  -69.1962, -124.5610, -201.6266],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8249, device='cuda:0', dtype=torch.float64)
tensor([-197.5190, -164.6683,  -70.0029, -124.1386, -202.2265],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9509, device='cuda:0', dtype=torch.float64)
tensor([-194.6258, -165.0923,  -70.6615, -123.1049, -201.1618],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9444, device='cuda:0', dtype=torch.float64)
tensor([-191.2276, -163.8907,  -70.5461, -121.2167, -198.7185],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9006, device='cuda:0', dtype=torch.float64)
tensor([-186.8615, -162.6473,  -70.0773, -118.7534, -195.6619],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9326, device='cuda:0', dtype=torch.float64)
tensor([-182.8667, -162.7888,  -69.6229, -116.4361, -193.5109],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9338, device='cuda:0', dtype=torch.float64)
tensor([-178.8995, -164.7503,  -68.6283, -114.6716, -192.4809],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7848, device='cuda:0', dtype=torch.float64)
tensor([-173.5526, -165.0143,  -67.2363, -111.6338, -189.1233],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9903, device='cuda:0', dtype=torch.float64)
tensor([-168.7124, -166.2234,  -66.2478, -109.4252, -186.7326],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8121, device='cuda:0', dtype=torch.float64)
tensor([-163.8909, -167.7055,  -65.3285, -107.2444, -184.5773],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9802, device='cuda:0', dtype=torch.float64)
tensor([-159.1530, -165.1782,  -64.0170, -104.6267, -179.5058],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0840, device='cuda:0', dtype=torch.float64)
tensor([-156.9826, -164.8298,  -63.6734, -104.5317, -178.9147],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8454, device='cuda:0', dtype=torch.float64)
tensor([-153.7406, -163.5795,  -62.6954, -103.5065, -177.5331],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7980, device='cuda:0', dtype=torch.float64)
tensor([-151.4758, -161.5830,  -62.1703, -102.9081, -176.0361],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0187, device='cuda:0', dtype=torch.float64)
tensor([-148.2856, -158.9444,  -61.4299, -101.8656, -173.7053],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9742, device='cuda:0', dtype=torch.float64)
tensor([-145.7911, -154.7381,  -60.8080, -100.8476, -170.6127],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7646, device='cuda:0', dtype=torch.float64)
tensor([-144.0771, -149.9056,  -60.2400,  -99.9850, -167.7593],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6996, device='cuda:0', dtype=torch.float64)
tensor([-142.6076, -144.4447,  -59.3457,  -99.3684, -163.7638],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8561, device='cuda:0', dtype=torch.float64)
tensor([-141.4563, -139.3274,  -58.3587,  -98.7061, -160.5165],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9185, device='cuda:0', dtype=torch.float64)
tensor([-138.7477, -133.9307,  -57.1412,  -96.8041, -156.0238],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7548, device='cuda:0', dtype=torch.float64)
tensor([-136.5036, -129.9641,  -56.2745,  -94.5575, -152.2272],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0849, device='cuda:0', dtype=torch.float64)
tensor([-134.1392, -126.8960,  -55.7490,  -92.4220, -148.9787],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8311, device='cuda:0', dtype=torch.float64)
tensor([-132.2136, -125.4146,  -55.4252,  -90.6840, -147.4471],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9816, device='cuda:0', dtype=torch.float64)
tensor([-132.0517, -124.4077,  -55.3224,  -90.5980, -147.6459],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0482, device='cuda:0', dtype=torch.float64)
tensor([-131.6962, -123.3540,  -55.2809,  -90.1179, -146.9259],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8728, device='cuda:0', dtype=torch.float64)
tensor([-131.6645, -120.6808,  -54.9915,  -89.9979, -145.1102],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9540, device='cuda:0', dtype=torch.float64)
tensor([-132.8274, -119.0499,  -55.3506,  -90.1475, -145.1045],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0017, device='cuda:0', dtype=torch.float64)
tensor([-133.8322, -116.7653,  -55.2425,  -90.4698, -144.2235],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7739, device='cuda:0', dtype=torch.float64)
tensor([-134.8687, -114.8367,  -55.1934,  -91.2704, -144.3277],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0892, device='cuda:0', dtype=torch.float64)
tensor([-136.2571, -114.4179,  -55.4583,  -92.8311, -146.4190],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9615, device='cuda:0', dtype=torch.float64)
tensor([-135.8191, -115.4605,  -55.4415,  -93.0450, -147.7128],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0192, device='cuda:0', dtype=torch.float64)
tensor([-135.0913, -116.7536,  -55.7812,  -92.9974, -148.5552],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8799, device='cuda:0', dtype=torch.float64)
tensor([-135.1341, -119.7886,  -56.1942,  -93.6385, -151.6198],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0670, device='cuda:0', dtype=torch.float64)
tensor([-136.6146, -124.3697,  -57.3625,  -95.3995, -156.1711],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8112, device='cuda:0', dtype=torch.float64)
tensor([-137.1939, -129.0264,  -58.5156,  -96.8830, -160.0338],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9749, device='cuda:0', dtype=torch.float64)
tensor([-137.8102, -132.4302,  -59.6233,  -98.2037, -163.1633],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0401, device='cuda:0', dtype=torch.float64)
tensor([-138.2580, -135.3101,  -60.7375, -100.2682, -165.6187],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8605, device='cuda:0', dtype=torch.float64)
tensor([-138.6110, -135.7211,  -62.2357, -101.5047, -166.3588],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8687, device='cuda:0', dtype=torch.float64)
tensor([-138.9112, -134.9391,  -63.3912, -101.8975, -166.5446],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7331, device='cuda:0', dtype=torch.float64)
tensor([-139.0111, -134.1284,  -64.3973, -102.2551, -166.5908],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8143, device='cuda:0', dtype=torch.float64)
tensor([-138.4617, -132.4923,  -64.9569, -101.8552, -165.9956],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0205, device='cuda:0', dtype=torch.float64)
tensor([-138.2783, -134.1360,  -65.8094, -102.4044, -168.8585],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0294, device='cuda:0', dtype=torch.float64)
tensor([-138.4096, -134.1435,  -66.5576, -102.8520, -169.5163],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8116, device='cuda:0', dtype=torch.float64)
tensor([-138.3372, -133.2127,  -67.5038, -103.1123, -170.0257],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.1008, device='cuda:0', dtype=torch.float64)
tensor([-137.2683, -130.9446,  -68.3039, -102.3570, -168.6662],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9143, device='cuda:0', dtype=torch.float64)
tensor([-137.4876, -128.6966,  -68.9322, -102.5841, -168.8365],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7488, device='cuda:0', dtype=torch.float64)
tensor([-138.1936, -126.6143,  -69.5267, -103.3660, -169.7847],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6264, device='cuda:0', dtype=torch.float64)
tensor([-140.1364, -126.1559,  -70.5927, -104.5773, -172.5437],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8761, device='cuda:0', dtype=torch.float64)
tensor([-142.2525, -127.2970,  -71.4607, -106.1817, -177.4553],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7864, device='cuda:0', dtype=torch.float64)
tensor([-142.6688, -126.2365,  -71.8211, -106.1878, -178.9712],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8564, device='cuda:0', dtype=torch.float64)
tensor([-142.6179, -125.7653,  -72.1575, -106.0314, -179.9661],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0172, device='cuda:0', dtype=torch.float64)
tensor([-140.9377, -126.3437,  -72.3156, -104.4627, -179.3917],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9725, device='cuda:0', dtype=torch.float64)
tensor([-140.2912, -128.1847,  -72.7393, -104.2746, -180.7364],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7830, device='cuda:0', dtype=torch.float64)
tensor([-139.2104, -129.3813,  -73.1273, -104.0351, -181.2021],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8920, device='cuda:0', dtype=torch.float64)
tensor([-136.5578, -129.6741,  -72.9235, -102.4813, -178.8370],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7558, device='cuda:0', dtype=torch.float64)
tensor([-134.0450, -131.6327,  -73.4303, -101.1646, -178.5704],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8477, device='cuda:0', dtype=torch.float64)
tensor([-132.6057, -134.1997,  -73.3890, -100.6678, -180.0059],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9751, device='cuda:0', dtype=torch.float64)
tensor([-131.7901, -136.5161,  -73.6646, -100.8733, -182.4239],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7058, device='cuda:0', dtype=torch.float64)
tensor([-132.3943, -140.5670,  -74.2965, -102.2630, -187.5462],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8743, device='cuda:0', dtype=torch.float64)
tensor([-132.5918, -142.8840,  -74.6725, -102.7818, -190.4439],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7366, device='cuda:0', dtype=torch.float64)
tensor([-132.8557, -144.6676,  -74.6554, -103.5687, -193.3497],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8014, device='cuda:0', dtype=torch.float64)
tensor([-132.2546, -145.2212,  -74.3914, -103.1012, -194.3380],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8986, device='cuda:0', dtype=torch.float64)
tensor([-132.0448, -145.4321,  -74.0299, -102.6203, -194.7811],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7481, device='cuda:0', dtype=torch.float64)
tensor([-132.2008, -145.6368,  -73.7688, -102.1898, -195.4228],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9550, device='cuda:0', dtype=torch.float64)
tensor([-132.7939, -146.0192,  -73.7301, -102.1568, -196.5839],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8985, device='cuda:0', dtype=torch.float64)
tensor([-132.6462, -145.5367,  -73.3643, -101.7367, -196.7559],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9364, device='cuda:0', dtype=torch.float64)
tensor([-132.4238, -144.8874,  -72.5974, -101.2013, -197.3015],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9639, device='cuda:0', dtype=torch.float64)
tensor([-132.8294, -143.9828,  -71.9713, -100.9275, -197.7717],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7283, device='cuda:0', dtype=torch.float64)
tensor([-131.6889, -141.4692,  -71.0236,  -99.4869, -195.1906],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9991, device='cuda:0', dtype=torch.float64)
tensor([-131.3091, -139.9990,  -69.8645,  -98.5775, -194.0267],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8952, device='cuda:0', dtype=torch.float64)
tensor([-130.7574, -141.5942,  -68.9767,  -98.7243, -195.8658],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9085, device='cuda:0', dtype=torch.float64)
tensor([-130.8360, -143.1027,  -68.6689,  -99.8218, -198.4506],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9201, device='cuda:0', dtype=torch.float64)
tensor([-130.3928, -145.6698,  -68.5149, -100.8650, -201.1876],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8624, device='cuda:0', dtype=torch.float64)
tensor([-129.5214, -148.1848,  -68.2206, -101.8292, -203.2322],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9177, device='cuda:0', dtype=torch.float64)
tensor([-129.2454, -151.6303,  -67.7518, -103.7381, -207.4923],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8075, device='cuda:0', dtype=torch.float64)
tensor([-130.3942, -156.3615,  -67.1930, -106.8545, -214.3349],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7952, device='cuda:0', dtype=torch.float64)
tensor([-131.0456, -159.6802,  -66.9270, -109.9187, -219.8791],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9426, device='cuda:0', dtype=torch.float64)
tensor([-132.4967, -164.0496,  -67.3595, -114.1190, -227.2478],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8907, device='cuda:0', dtype=torch.float64)
tensor([-136.0402, -170.7907,  -68.9638, -120.0653, -239.3597],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9469, device='cuda:0', dtype=torch.float64)
tensor([-139.3394, -178.2023,  -71.6797, -125.3130, -252.0170],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8312, device='cuda:0', dtype=torch.float64)
tensor([-143.4513, -187.2386,  -74.7753, -131.3348, -266.7528],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6628, device='cuda:0', dtype=torch.float64)
tensor([-147.3627, -195.3798,  -78.0779, -136.8373, -279.4432],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0692, device='cuda:0', dtype=torch.float64)
tensor([-150.6947, -200.0282,  -80.6865, -141.5655, -287.0966],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8261, device='cuda:0', dtype=torch.float64)
tensor([-153.0511, -203.1685,  -82.5218, -145.3083, -292.5707],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7168, device='cuda:0', dtype=torch.float64)
tensor([-155.0737, -204.1026,  -84.1574, -148.0007, -295.9709],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8632, device='cuda:0', dtype=torch.float64)
tensor([-154.7631, -202.6163,  -84.6487, -148.4085, -294.7388],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8270, device='cuda:0', dtype=torch.float64)
tensor([-153.9031, -202.4007,  -85.0659, -148.5901, -293.5592],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9012, device='cuda:0', dtype=torch.float64)
tensor([-152.1731, -198.9380,  -84.8083, -147.0155, -287.6245],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7283, device='cuda:0', dtype=torch.float64)
tensor([-150.0146, -196.3881,  -84.7627, -145.1020, -282.3942],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9784, device='cuda:0', dtype=torch.float64)
tensor([-148.2459, -190.4231,  -84.7178, -142.3395, -274.4691],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8348, device='cuda:0', dtype=torch.float64)
tensor([-147.3789, -188.6629,  -85.6001, -140.8173, -271.2808],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7824, device='cuda:0', dtype=torch.float64)
tensor([-147.2110, -190.5844,  -87.0130, -139.9379, -271.9735],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9086, device='cuda:0', dtype=torch.float64)
tensor([-149.7851, -195.1787,  -88.8887, -140.4913, -277.9633],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8536, device='cuda:0', dtype=torch.float64)
tensor([-150.2949, -196.8065,  -89.7545, -139.0530, -278.9121],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6201, device='cuda:0', dtype=torch.float64)
tensor([-149.7359, -198.9161,  -90.0871, -137.6887, -278.8618],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8269, device='cuda:0', dtype=torch.float64)
tensor([-148.8720, -202.9202,  -89.9233, -136.5336, -279.5043],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9971, device='cuda:0', dtype=torch.float64)
tensor([-147.4074, -205.7814,  -89.1453, -134.8834, -278.4337],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8777, device='cuda:0', dtype=torch.float64)
tensor([-146.5186, -208.5715,  -89.1401, -133.8705, -278.7383],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7019, device='cuda:0', dtype=torch.float64)
tensor([-145.6822, -211.6918,  -89.1916, -133.0503, -279.8320],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9549, device='cuda:0', dtype=torch.float64)
tensor([-146.6701, -216.9129,  -89.8879, -133.9422, -285.5200],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8849, device='cuda:0', dtype=torch.float64)
tensor([-148.4677, -221.1508,  -90.6296, -135.6982, -291.4870],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7122, device='cuda:0', dtype=torch.float64)
tensor([-149.6957, -223.7726,  -91.4835, -136.9601, -295.7176],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9170, device='cuda:0', dtype=torch.float64)
tensor([-152.2118, -225.1107,  -92.2125, -139.1769, -300.4307],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9238, device='cuda:0', dtype=torch.float64)
tensor([-155.0622, -229.1817,  -93.4085, -142.4060, -307.7484],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8423, device='cuda:0', dtype=torch.float64)
tensor([-157.6525, -235.2368,  -95.1451, -146.4373, -315.8693],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7583, device='cuda:0', dtype=torch.float64)
tensor([-160.6128, -242.8368,  -97.7288, -151.1297, -325.4518],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8878, device='cuda:0', dtype=torch.float64)
tensor([-163.6299, -249.6797, -100.3622, -155.3475, -333.2062],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8569, device='cuda:0', dtype=torch.float64)
tensor([-166.0473, -255.0502, -102.9623, -158.7966, -339.1599],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7527, device='cuda:0', dtype=torch.float64)
tensor([-168.3853, -259.1589, -104.9387, -161.5124, -343.6098],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7319, device='cuda:0', dtype=torch.float64)
tensor([-170.9858, -261.1942, -106.2794, -164.3921, -346.6418],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8802, device='cuda:0', dtype=torch.float64)
tensor([-171.9902, -260.7398, -106.8246, -165.6700, -346.4072],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7287, device='cuda:0', dtype=torch.float64)
tensor([-173.6838, -263.1155, -108.3705, -167.4653, -349.3142],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9181, device='cuda:0', dtype=torch.float64)
tensor([-175.0038, -264.9541, -109.1931, -167.9198, -350.8367],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7503, device='cuda:0', dtype=torch.float64)
tensor([-175.5825, -265.3265, -108.9176, -166.9245, -349.4210],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7713, device='cuda:0', dtype=torch.float64)
tensor([-175.8263, -264.8993, -108.3462, -165.1196, -346.8546],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9096, device='cuda:0', dtype=torch.float64)
tensor([-176.7434, -264.3117, -107.7537, -164.1423, -344.9799],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6455, device='cuda:0', dtype=torch.float64)
tensor([-176.1420, -260.3503, -105.6813, -161.6056, -338.0847],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7030, device='cuda:0', dtype=torch.float64)
tensor([-176.1461, -257.9034, -104.1331, -159.9069, -333.2702],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7143, device='cuda:0', dtype=torch.float64)
tensor([-175.8722, -256.1865, -102.4929, -158.3775, -329.2975],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7970, device='cuda:0', dtype=torch.float64)
tensor([-175.9404, -254.5611, -101.1080, -157.4070, -326.8716],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8029, device='cuda:0', dtype=torch.float64)
tensor([-175.0672, -252.8300,  -99.1264, -155.4780, -322.5726],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7122, device='cuda:0', dtype=torch.float64)
tensor([-174.5270, -251.4232,  -97.5207, -154.5601, -319.3378],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7158, device='cuda:0', dtype=torch.float64)
tensor([-175.4280, -249.9652,  -96.7086, -155.0187, -317.6764],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8758, device='cuda:0', dtype=torch.float64)
tensor([-177.4981, -250.8420,  -96.9277, -157.3321, -320.3508],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9303, device='cuda:0', dtype=torch.float64)
tensor([-179.2526, -250.0632,  -96.7434, -159.4299, -322.7312],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8718, device='cuda:0', dtype=torch.float64)
tensor([-182.1349, -251.2509,  -98.1098, -162.6092, -327.9989],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7295, device='cuda:0', dtype=torch.float64)
tensor([-185.0707, -253.5610,  -99.9278, -166.9386, -335.0596],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8278, device='cuda:0', dtype=torch.float64)
tensor([-187.7234, -254.7328, -101.5827, -170.9902, -340.8494],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7345, device='cuda:0', dtype=torch.float64)
tensor([-190.2593, -258.4835, -103.5025, -175.5367, -348.2915],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7066, device='cuda:0', dtype=torch.float64)
tensor([-191.4744, -262.8795, -104.8224, -178.0013, -353.3594],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7378, device='cuda:0', dtype=torch.float64)
tensor([-192.0927, -265.1601, -105.6691, -180.1370, -356.3014],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7328, device='cuda:0', dtype=torch.float64)
tensor([-191.6955, -265.4266, -105.8811, -181.6902, -356.4915],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6968, device='cuda:0', dtype=torch.float64)
tensor([-191.2969, -263.4531, -105.4668, -182.6449, -354.5204],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8009, device='cuda:0', dtype=torch.float64)
tensor([-188.5052, -259.9124, -103.2957, -180.5941, -346.5964],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7570, device='cuda:0', dtype=torch.float64)
tensor([-186.3624, -256.4690, -101.1954, -178.8719, -338.7170],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8049, device='cuda:0', dtype=torch.float64)
tensor([-186.2412, -255.4827, -101.0542, -179.1672, -336.3114],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7536, device='cuda:0', dtype=torch.float64)
tensor([-186.4537, -253.9151, -101.0435, -178.9626, -334.0532],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6684, device='cuda:0', dtype=torch.float64)
tensor([-186.5215, -255.6775, -101.1502, -179.0572, -334.7887],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8000, device='cuda:0', dtype=torch.float64)
tensor([-187.6368, -261.3902, -102.1991, -180.7732, -341.0495],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7784, device='cuda:0', dtype=torch.float64)
tensor([-190.0309, -266.9434, -103.5272, -183.1153, -348.8698],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6446, device='cuda:0', dtype=torch.float64)
tensor([-193.2277, -272.5992, -105.1660, -186.0694, -357.8151],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7296, device='cuda:0', dtype=torch.float64)
tensor([-196.2221, -279.8023, -107.0070, -189.1644, -367.8205],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6555, device='cuda:0', dtype=torch.float64)
tensor([-199.4827, -287.6678, -109.3976, -192.4376, -378.5875],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8290, device='cuda:0', dtype=torch.float64)
tensor([-201.5923, -291.5484, -110.9175, -193.1311, -383.6290],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7049, device='cuda:0', dtype=torch.float64)
tensor([-203.0375, -292.1134, -111.8694, -192.5959, -385.0853],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6794, device='cuda:0', dtype=torch.float64)
tensor([-204.4912, -292.4662, -112.5292, -191.9750, -386.2144],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6961, device='cuda:0', dtype=torch.float64)
tensor([-206.4490, -294.6401, -114.0886, -192.4946, -389.5644],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7444, device='cuda:0', dtype=torch.float64)
tensor([-208.1976, -295.7303, -115.2786, -193.4101, -391.3229],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7934, device='cuda:0', dtype=torch.float64)
tensor([-209.3085, -295.4054, -116.1268, -193.5244, -391.5572],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7658, device='cuda:0', dtype=torch.float64)
tensor([-209.5721, -293.0109, -115.9115, -192.5973, -388.8644],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8160, device='cuda:0', dtype=torch.float64)
tensor([-209.7314, -289.2512, -115.5777, -191.5333, -384.6780],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8058, device='cuda:0', dtype=torch.float64)
tensor([-209.8772, -284.4182, -114.6022, -189.7611, -379.3918],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5746, device='cuda:0', dtype=torch.float64)
tensor([-210.4439, -276.4813, -113.8764, -187.6254, -371.8452],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7308, device='cuda:0', dtype=torch.float64)
tensor([-212.2470, -270.4390, -113.5090, -187.3522, -367.2182],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8099, device='cuda:0', dtype=torch.float64)
tensor([-212.8681, -264.9267, -112.5189, -186.7236, -362.0270],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6613, device='cuda:0', dtype=torch.float64)
tensor([-213.5170, -260.0346, -111.8822, -186.3384, -357.9857],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7664, device='cuda:0', dtype=torch.float64)
tensor([-212.5472, -256.6961, -110.5366, -185.3719, -353.0129],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6713, device='cuda:0', dtype=torch.float64)
tensor([-211.0661, -253.6750, -109.5878, -183.9492, -348.0583],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6425, device='cuda:0', dtype=torch.float64)
tensor([-208.6769, -251.2301, -108.9468, -182.5612, -343.1181],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8614, device='cuda:0', dtype=torch.float64)
tensor([-207.4174, -250.2621, -109.4143, -182.8414, -340.5172],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7800, device='cuda:0', dtype=torch.float64)
tensor([-206.1180, -251.6240, -109.8452, -183.5249, -340.8347],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7681, device='cuda:0', dtype=torch.float64)
tensor([-203.9106, -252.5920, -109.9709, -182.8785, -339.7059],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7646, device='cuda:0', dtype=torch.float64)
tensor([-203.6032, -254.8573, -110.8953, -183.5926, -341.3727],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6974, device='cuda:0', dtype=torch.float64)
tensor([-204.5041, -257.9802, -112.3610, -184.8591, -345.3095],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6680, device='cuda:0', dtype=torch.float64)
tensor([-205.4394, -261.7239, -113.9615, -186.2769, -349.6577],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9753, device='cuda:0', dtype=torch.float64)
tensor([-207.8503, -266.8749, -116.8529, -188.6501, -357.2156],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6815, device='cuda:0', dtype=torch.float64)
tensor([-211.6811, -271.7903, -120.2635, -192.2801, -365.0748],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7667, device='cuda:0', dtype=torch.float64)
tensor([-215.4297, -276.5887, -123.8756, -195.9502, -373.0287],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8043, device='cuda:0', dtype=torch.float64)
tensor([-219.2159, -280.2013, -126.9562, -199.8709, -379.7152],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6608, device='cuda:0', dtype=torch.float64)
tensor([-222.2203, -284.5385, -129.6118, -203.7181, -386.2380],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8019, device='cuda:0', dtype=torch.float64)
tensor([-223.3575, -287.7859, -131.6562, -206.4281, -389.9567],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6543, device='cuda:0', dtype=torch.float64)
tensor([-223.6779, -289.9637, -133.3950, -208.1150, -391.9184],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7373, device='cuda:0', dtype=torch.float64)
tensor([-222.8533, -288.4919, -134.3155, -207.6275, -389.3475],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6883, device='cuda:0', dtype=torch.float64)
tensor([-221.2071, -287.7393, -134.8832, -207.1348, -386.8974],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7095, device='cuda:0', dtype=torch.float64)
tensor([-218.5521, -288.0421, -135.0592, -205.8645, -384.7174],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6824, device='cuda:0', dtype=torch.float64)
tensor([-216.4974, -286.8321, -135.0333, -204.6429, -382.4829],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6509, device='cuda:0', dtype=torch.float64)
tensor([-214.9947, -288.2885, -135.1929, -204.8777, -383.4438],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6004, device='cuda:0', dtype=torch.float64)
tensor([-213.0963, -290.3040, -135.6064, -205.2223, -385.4901],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6367, device='cuda:0', dtype=torch.float64)
tensor([-210.5317, -292.8502, -135.7848, -205.1928, -388.3605],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6196, device='cuda:0', dtype=torch.float64)
tensor([-208.3449, -295.3473, -135.8479, -205.4934, -391.4619],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6576, device='cuda:0', dtype=torch.float64)
tensor([-207.2642, -296.9274, -136.6945, -206.2407, -394.0118],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6709, device='cuda:0', dtype=torch.float64)
tensor([-206.6553, -298.1946, -137.3701, -207.0208, -396.3500],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6560, device='cuda:0', dtype=torch.float64)
tensor([-206.7429, -300.0187, -138.5591, -209.0617, -399.9998],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7077, device='cuda:0', dtype=torch.float64)
tensor([-207.7665, -306.0704, -140.6416, -212.3708, -407.5459],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5961, device='cuda:0', dtype=torch.float64)
tensor([-207.9204, -311.1820, -142.3510, -214.5733, -413.7079],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8510, device='cuda:0', dtype=torch.float64)
tensor([-208.3672, -317.8721, -144.7732, -217.4338, -421.5578],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6927, device='cuda:0', dtype=torch.float64)
tensor([-209.3799, -324.2092, -147.5139, -221.5244, -429.3564],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6583, device='cuda:0', dtype=torch.float64)
tensor([-210.3791, -327.7142, -149.2918, -224.7262, -433.8876],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6181, device='cuda:0', dtype=torch.float64)
tensor([-211.7188, -329.9059, -150.5595, -227.5071, -436.5080],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6565, device='cuda:0', dtype=torch.float64)
tensor([-214.3611, -336.9905, -152.8023, -233.5427, -445.0033],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7135, device='cuda:0', dtype=torch.float64)
tensor([-217.2717, -344.0197, -155.3071, -239.3869, -453.0113],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6886, device='cuda:0', dtype=torch.float64)
tensor([-219.3290, -349.9730, -157.0247, -244.2260, -458.5795],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7344, device='cuda:0', dtype=torch.float64)
tensor([-220.4077, -350.1446, -157.0769, -245.5772, -458.0238],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6694, device='cuda:0', dtype=torch.float64)
tensor([-221.0772, -347.7886, -156.4422, -245.0354, -454.8183],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6777, device='cuda:0', dtype=torch.float64)
tensor([-221.6309, -341.9446, -155.2892, -242.3582, -448.3241],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7617, device='cuda:0', dtype=torch.float64)
tensor([-222.4111, -337.1321, -154.1820, -240.4080, -442.9932],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7595, device='cuda:0', dtype=torch.float64)
tensor([-222.7101, -332.1387, -153.0362, -238.1565, -437.3282],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5903, device='cuda:0', dtype=torch.float64)
tensor([-223.0078, -328.8355, -152.1094, -236.3622, -433.0497],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5421, device='cuda:0', dtype=torch.float64)
tensor([-223.4286, -325.9168, -151.3448, -234.8657, -429.4608],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8285, device='cuda:0', dtype=torch.float64)
tensor([-223.0129, -322.1541, -150.1268, -232.6880, -425.4968],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7867, device='cuda:0', dtype=torch.float64)
tensor([-222.9776, -320.6061, -149.5075, -231.5709, -424.2378],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7072, device='cuda:0', dtype=torch.float64)
tensor([-222.4563, -321.9056, -149.3612, -231.6514, -425.1114],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7107, device='cuda:0', dtype=torch.float64)
tensor([-222.0038, -323.6503, -149.1531, -231.9180, -426.3868],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6012, device='cuda:0', dtype=torch.float64)
tensor([-220.6553, -325.4928, -148.8620, -230.9416, -426.8014],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5820, device='cuda:0', dtype=torch.float64)
tensor([-220.0169, -327.3074, -149.1375, -231.2821, -427.7401],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5875, device='cuda:0', dtype=torch.float64)
tensor([-219.0087, -329.4116, -149.0659, -231.3360, -428.2403],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6262, device='cuda:0', dtype=torch.float64)
tensor([-217.7667, -332.3790, -148.9493, -231.6905, -428.8488],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6003, device='cuda:0', dtype=torch.float64)
tensor([-216.4182, -335.0893, -148.6556, -232.0885, -429.5362],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6049, device='cuda:0', dtype=torch.float64)
tensor([-214.4966, -338.7818, -148.2286, -232.2681, -430.6119],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5796, device='cuda:0', dtype=torch.float64)
tensor([-213.7263, -343.6608, -148.6670, -233.7940, -433.6908],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7377, device='cuda:0', dtype=torch.float64)
tensor([-213.8716, -347.1895, -149.6083, -235.8464, -436.5323],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5806, device='cuda:0', dtype=torch.float64)
tensor([-213.6889, -347.8802, -149.7877, -236.0446, -437.1076],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6015, device='cuda:0', dtype=torch.float64)
tensor([-213.2933, -347.2197, -149.7454, -235.9656, -436.3364],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6688, device='cuda:0', dtype=torch.float64)
tensor([-213.3267, -345.5515, -149.4588, -236.4192, -435.3263],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7287, device='cuda:0', dtype=torch.float64)
tensor([-214.1275, -346.2057, -149.8846, -239.3666, -436.2525],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6915, device='cuda:0', dtype=torch.float64)
tensor([-214.8956, -348.3010, -150.2127, -242.0796, -437.6697],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6358, device='cuda:0', dtype=torch.float64)
tensor([-215.0730, -351.3464, -150.2768, -244.3306, -438.7801],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6707, device='cuda:0', dtype=torch.float64)
tensor([-214.9113, -353.1794, -149.7420, -246.2453, -438.9738],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7201, device='cuda:0', dtype=torch.float64)
tensor([-215.4531, -355.5002, -150.0028, -249.8485, -440.2563],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6860, device='cuda:0', dtype=torch.float64)
tensor([-216.2367, -356.6446, -150.4587, -253.5844, -441.2914],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7404, device='cuda:0', dtype=torch.float64)
tensor([-216.6250, -354.5552, -150.1042, -255.0946, -439.6369],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6710, device='cuda:0', dtype=torch.float64)
tensor([-218.2070, -356.2284, -151.1533, -260.2152, -441.3137],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5753, device='cuda:0', dtype=torch.float64)
tensor([-219.5087, -356.2700, -151.4367, -263.7812, -441.2073],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5809, device='cuda:0', dtype=torch.float64)
tensor([-220.3281, -356.8842, -151.4790, -267.3088, -441.9039],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6306, device='cuda:0', dtype=torch.float64)
tensor([-221.6110, -357.8872, -151.6792, -270.3963, -442.4893],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7161, device='cuda:0', dtype=torch.float64)
tensor([-223.5736, -359.8586, -152.6479, -274.3268, -443.8032],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6648, device='cuda:0', dtype=torch.float64)
tensor([-224.2803, -362.5228, -152.6314, -277.6255, -444.5322],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5901, device='cuda:0', dtype=torch.float64)
tensor([-225.3545, -364.3073, -152.7948, -280.6086, -444.9993],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6114, device='cuda:0', dtype=torch.float64)
tensor([-226.7020, -366.5619, -153.1930, -284.2089, -446.2662],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6484, device='cuda:0', dtype=torch.float64)
tensor([-227.8133, -368.2764, -153.4364, -287.3317, -447.4765],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6548, device='cuda:0', dtype=torch.float64)
tensor([-229.2954, -368.8424, -153.8016, -290.3631, -448.1764],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7785, device='cuda:0', dtype=torch.float64)
tensor([-229.6626, -369.5626, -153.2510, -291.9155, -447.8950],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5479, device='cuda:0', dtype=torch.float64)
tensor([-231.0931, -371.2341, -153.8411, -294.9802, -449.4540],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7854, device='cuda:0', dtype=torch.float64)
tensor([-233.5215, -375.8341, -155.8760, -300.5205, -453.0801],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5580, device='cuda:0', dtype=torch.float64)
tensor([-235.9482, -379.4407, -158.4672, -305.9208, -456.3264],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5606, device='cuda:0', dtype=torch.float64)
tensor([-237.9484, -382.8561, -161.0064, -310.6534, -458.6536],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4962, device='cuda:0', dtype=torch.float64)
tensor([-239.2760, -388.0372, -163.3534, -315.1597, -460.8703],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5698, device='cuda:0', dtype=torch.float64)
tensor([-240.2885, -392.5889, -165.2422, -319.4075, -462.5120],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6587, device='cuda:0', dtype=torch.float64)
tensor([-241.2216, -395.6442, -166.0311, -322.2975, -463.1758],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6255, device='cuda:0', dtype=torch.float64)
tensor([-241.3027, -395.5754, -165.5639, -323.3085, -462.1740],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5362, device='cuda:0', dtype=torch.float64)
tensor([-241.2951, -394.7875, -165.1214, -324.3307, -461.0664],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5516, device='cuda:0', dtype=torch.float64)
tensor([-241.7052, -391.7813, -165.1081, -325.0938, -459.8306],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5109, device='cuda:0', dtype=torch.float64)
tensor([-241.4330, -385.6236, -164.1577, -323.7701, -457.3457],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6633, device='cuda:0', dtype=torch.float64)
tensor([-241.2903, -379.5666, -163.3586, -321.9162, -454.9176],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6838, device='cuda:0', dtype=torch.float64)
tensor([-241.1057, -374.6621, -162.7389, -320.5767, -452.7785],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5575, device='cuda:0', dtype=torch.float64)
tensor([-241.0686, -370.1835, -162.3142, -319.4698, -450.7414],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7272, device='cuda:0', dtype=torch.float64)
tensor([-242.3257, -367.9998, -163.7290, -321.0505, -450.4833],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5248, device='cuda:0', dtype=torch.float64)
tensor([-244.1664, -368.6442, -166.3087, -324.1409, -451.4417],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4575, device='cuda:0', dtype=torch.float64)
tensor([-246.0639, -370.5405, -168.8210, -327.1708, -452.6835],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6165, device='cuda:0', dtype=torch.float64)
tensor([-245.6800, -373.4136, -169.8172, -328.1967, -452.1164],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5153, device='cuda:0', dtype=torch.float64)
tensor([-244.6346, -375.2795, -170.0255, -328.3410, -451.0361],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5155, device='cuda:0', dtype=torch.float64)
tensor([-243.1602, -377.4854, -169.8974, -328.1344, -449.8693],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5661, device='cuda:0', dtype=torch.float64)
tensor([-242.2438, -380.5501, -169.9298, -328.6525, -448.8670],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6472, device='cuda:0', dtype=torch.float64)
tensor([-242.3751, -384.8861, -170.8603, -330.7520, -448.9580],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4703, device='cuda:0', dtype=torch.float64)
tensor([-242.2491, -388.7371, -171.3394, -332.4318, -448.7146],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5837, device='cuda:0', dtype=torch.float64)
tensor([-241.4936, -392.1549, -171.3100, -333.5650, -447.9967],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5555, device='cuda:0', dtype=torch.float64)
tensor([-242.2131, -396.0892, -173.2246, -337.2920, -449.0787],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6718, device='cuda:0', dtype=torch.float64)
tensor([-243.4365, -403.2869, -176.1614, -342.4909, -451.3814],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6025, device='cuda:0', dtype=torch.float64)
tensor([-244.0615, -408.7810, -178.3879, -345.6093, -452.6619],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5120, device='cuda:0', dtype=torch.float64)
tensor([-245.2238, -415.2933, -181.4800, -349.7069, -454.9849],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6256, device='cuda:0', dtype=torch.float64)
tensor([-246.3775, -421.2996, -186.4863, -354.3928, -457.0064],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4350, device='cuda:0', dtype=torch.float64)
tensor([-247.1380, -425.8835, -191.1824, -358.0603, -458.2603],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5685, device='cuda:0', dtype=torch.float64)
tensor([-248.4115, -431.0503, -197.1806, -363.0782, -460.4724],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5400, device='cuda:0', dtype=torch.float64)
tensor([-249.5541, -437.4767, -205.2148, -368.3136, -462.8368],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5895, device='cuda:0', dtype=torch.float64)
tensor([-249.8599, -443.8318, -212.1621, -372.8901, -464.1201],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6323, device='cuda:0', dtype=torch.float64)
tensor([-250.6960, -453.1082, -220.5912, -378.2336, -465.5205],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6587, device='cuda:0', dtype=torch.float64)
tensor([-251.6823, -457.2859, -225.0714, -381.1124, -465.6200],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5419, device='cuda:0', dtype=torch.float64)
tensor([-252.5117, -460.8872, -229.0079, -383.5115, -465.5566],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5901, device='cuda:0', dtype=torch.float64)
tensor([-253.2145, -458.1584, -228.9594, -383.5271, -464.0161],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6516, device='cuda:0', dtype=torch.float64)
tensor([-253.9798, -452.5019, -227.3596, -382.0227, -461.5371],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4835, device='cuda:0', dtype=torch.float64)
tensor([-254.2414, -449.5026, -226.4912, -380.6463, -459.3133],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5984, device='cuda:0', dtype=torch.float64)
tensor([-254.4449, -444.4697, -223.7206, -379.0103, -456.8618],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5391, device='cuda:0', dtype=torch.float64)
tensor([-255.6767, -443.7522, -225.2686, -379.7356, -455.6917],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6407, device='cuda:0', dtype=torch.float64)
tensor([-256.5656, -439.8181, -225.0985, -378.9589, -453.9215],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6652, device='cuda:0', dtype=torch.float64)
tensor([-255.9447, -434.5236, -221.8732, -375.8424, -450.7327],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4442, device='cuda:0', dtype=torch.float64)
tensor([-254.3922, -427.9638, -216.2536, -371.1605, -446.8567],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4428, device='cuda:0', dtype=torch.float64)
tensor([-253.0030, -423.5394, -211.7823, -367.4064, -443.3498],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5642, device='cuda:0', dtype=torch.float64)
tensor([-252.6349, -420.4677, -209.6558, -365.5881, -440.8901],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6394, device='cuda:0', dtype=torch.float64)
tensor([-252.3956, -417.4935, -206.1831, -363.7631, -438.1691],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6382, device='cuda:0', dtype=torch.float64)
tensor([-253.4910, -418.3435, -208.2676, -365.6520, -437.7456],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6632, device='cuda:0', dtype=torch.float64)
tensor([-255.6247, -419.8783, -212.7597, -369.0808, -438.1936],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6600, device='cuda:0', dtype=torch.float64)
tensor([-259.2476, -421.4137, -218.9025, -373.8497, -439.3797],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4414, device='cuda:0', dtype=torch.float64)
tensor([-262.7303, -423.2595, -225.3192, -378.6282, -440.4573],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5764, device='cuda:0', dtype=torch.float64)
tensor([-267.0904, -425.4826, -232.6365, -384.1923, -441.6373],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6158, device='cuda:0', dtype=torch.float64)
tensor([-271.3248, -424.4473, -237.0274, -388.2385, -442.4912],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6399, device='cuda:0', dtype=torch.float64)
tensor([-275.7899, -423.4366, -240.9975, -392.6595, -443.8548],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4718, device='cuda:0', dtype=torch.float64)
tensor([-280.5313, -421.9899, -244.9860, -396.9979, -445.6153],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6729, device='cuda:0', dtype=torch.float64)
tensor([-283.1781, -421.6961, -247.8311, -399.3463, -445.6378],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4956, device='cuda:0', dtype=torch.float64)
tensor([-284.7008, -419.6669, -249.4932, -400.3374, -444.0783],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6043, device='cuda:0', dtype=torch.float64)
tensor([-284.1723, -416.0473, -248.9063, -399.1591, -440.7523],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7291, device='cuda:0', dtype=torch.float64)
tensor([-282.0745, -405.4135, -241.5561, -394.4267, -435.0970],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5640, device='cuda:0', dtype=torch.float64)
tensor([-280.8223, -400.2126, -238.1946, -392.0677, -431.0661],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4954, device='cuda:0', dtype=torch.float64)
tensor([-280.6723, -395.9711, -235.2521, -390.2472, -427.4509],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6466, device='cuda:0', dtype=torch.float64)
tensor([-281.8699, -393.9333, -235.7774, -390.6786, -425.0255],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5765, device='cuda:0', dtype=torch.float64)
tensor([-283.1710, -392.1550, -236.2376, -391.4054, -423.0766],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4613, device='cuda:0', dtype=torch.float64)
tensor([-283.4102, -391.0698, -236.4555, -391.8510, -420.3518],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5176, device='cuda:0', dtype=torch.float64)
tensor([-283.4970, -391.2424, -236.8267, -392.8219, -417.9352],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5802, device='cuda:0', dtype=torch.float64)
tensor([-284.6734, -393.4495, -238.9156, -395.4456, -416.9475],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4518, device='cuda:0', dtype=torch.float64)
tensor([-285.9775, -397.9447, -242.4212, -398.8677, -416.4334],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5866, device='cuda:0', dtype=torch.float64)
tensor([-288.9385, -404.6711, -246.5166, -403.6400, -417.1989],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4065, device='cuda:0', dtype=torch.float64)
tensor([-290.6213, -411.5741, -250.1675, -407.5411, -417.3957],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5071, device='cuda:0', dtype=torch.float64)
tensor([-292.5188, -416.4556, -252.2365, -410.1743, -417.3942],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4689, device='cuda:0', dtype=torch.float64)
tensor([-294.0821, -420.7462, -253.2403, -412.0685, -417.4372],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4200, device='cuda:0', dtype=torch.float64)
tensor([-296.1150, -423.9677, -254.2926, -414.2840, -417.6669],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6029, device='cuda:0', dtype=torch.float64)
tensor([-296.9740, -427.5187, -256.0139, -416.3847, -417.5080],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4725, device='cuda:0', dtype=torch.float64)
tensor([-297.8856, -426.5160, -256.1755, -417.5888, -416.5599],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4052, device='cuda:0', dtype=torch.float64)
tensor([-299.1454, -426.7425, -257.7222, -419.4489, -416.1708],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5046, device='cuda:0', dtype=torch.float64)
tensor([-298.3951, -425.0344, -258.6782, -419.6717, -414.3079],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3699, device='cuda:0', dtype=torch.float64)
tensor([-297.2656, -424.5313, -259.8223, -419.7807, -412.8311],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4472, device='cuda:0', dtype=torch.float64)
tensor([-296.9555, -422.2817, -260.1924, -419.5135, -411.4696],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5280, device='cuda:0', dtype=torch.float64)
tensor([-296.2290, -417.7924, -259.6094, -418.3130, -410.2317],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4590, device='cuda:0', dtype=torch.float64)
tensor([-295.9008, -414.9574, -259.4993, -417.7485, -409.5405],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5215, device='cuda:0', dtype=torch.float64)
tensor([-295.4605, -415.9140, -260.6806, -418.2422, -409.2694],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5098, device='cuda:0', dtype=torch.float64)
tensor([-294.7984, -412.9877, -259.9539, -417.9659, -407.9713],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5058, device='cuda:0', dtype=torch.float64)
tensor([-293.4684, -409.4774, -258.0284, -417.0324, -406.2127],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4778, device='cuda:0', dtype=torch.float64)
tensor([-293.1082, -412.8275, -260.4779, -418.9382, -406.1263],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4772, device='cuda:0', dtype=torch.float64)
tensor([-293.9717, -418.7595, -263.7054, -421.9473, -406.9455],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5591, device='cuda:0', dtype=torch.float64)
tensor([-296.2896, -432.1693, -270.3828, -427.8013, -409.9154],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5463, device='cuda:0', dtype=torch.float64)
tensor([-299.3692, -449.6539, -278.6740, -434.7581, -414.4399],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5200, device='cuda:0', dtype=torch.float64)
tensor([-302.4150, -467.1670, -287.4428, -441.6565, -419.4065],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5228, device='cuda:0', dtype=torch.float64)
tensor([-306.1348, -488.0716, -297.7550, -450.2080, -424.4150],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5130, device='cuda:0', dtype=torch.float64)
tensor([-312.5720, -514.5846, -308.7015, -462.4643, -429.7660],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5976, device='cuda:0', dtype=torch.float64)
tensor([-317.0200, -530.0179, -315.3990, -470.5691, -433.0372],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6603, device='cuda:0', dtype=torch.float64)
tensor([-319.1752, -538.0742, -318.5076, -474.9602, -434.5129],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4423, device='cuda:0', dtype=torch.float64)
tensor([-322.0215, -544.9674, -321.3418, -479.4763, -436.1945],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5853, device='cuda:0', dtype=torch.float64)
tensor([-320.2079, -543.6088, -318.9878, -477.7420, -434.7936],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5626, device='cuda:0', dtype=torch.float64)
tensor([-323.3938, -545.8831, -320.8075, -481.2584, -434.7284],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5477, device='cuda:0', dtype=torch.float64)
tensor([-323.7894, -541.7898, -319.8066, -480.5166, -432.6263],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7081, device='cuda:0', dtype=torch.float64)
tensor([-320.4018, -529.7805, -315.0679, -474.0299, -428.6627],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5486, device='cuda:0', dtype=torch.float64)
tensor([-318.2569, -520.3581, -311.6004, -470.0129, -425.5387],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6509, device='cuda:0', dtype=torch.float64)
tensor([-317.8588, -513.1813, -309.5029, -467.8426, -422.9075],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5185, device='cuda:0', dtype=torch.float64)
tensor([-316.8524, -500.9444, -306.0860, -463.7054, -419.9038],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6503, device='cuda:0', dtype=torch.float64)
tensor([-314.7212, -477.6607, -299.3899, -455.6903, -415.1202],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7646, device='cuda:0', dtype=torch.float64)
tensor([-311.2852, -446.1709, -287.5669, -444.3065, -407.5540],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5374, device='cuda:0', dtype=torch.float64)
tensor([-310.9612, -422.3116, -280.8672, -438.3070, -402.1694],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5236, device='cuda:0', dtype=torch.float64)
tensor([-309.9754, -403.7370, -274.5091, -433.7017, -397.8838],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5501, device='cuda:0', dtype=torch.float64)
tensor([-311.5179, -393.9515, -272.6877, -432.4744, -396.2104],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5426, device='cuda:0', dtype=torch.float64)
tensor([-314.5548, -391.8267, -274.8398, -434.0386, -395.9040],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4930, device='cuda:0', dtype=torch.float64)
tensor([-317.9362, -392.3435, -278.0369, -436.2819, -395.9531],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4580, device='cuda:0', dtype=torch.float64)
tensor([-321.9178, -396.9248, -282.8829, -439.3816, -396.6299],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5878, device='cuda:0', dtype=torch.float64)
tensor([-326.3929, -407.9846, -289.5732, -443.7952, -398.0899],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5377, device='cuda:0', dtype=torch.float64)
tensor([-331.3885, -421.9322, -297.1220, -449.1910, -400.2489],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5871, device='cuda:0', dtype=torch.float64)
tensor([-338.0082, -432.7936, -304.9197, -455.0724, -402.5523],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4543, device='cuda:0', dtype=torch.float64)
tensor([-342.7975, -442.6075, -311.4190, -459.3513, -403.9942],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5904, device='cuda:0', dtype=torch.float64)
tensor([-346.1205, -445.2282, -314.2129, -461.3439, -403.0424],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5268, device='cuda:0', dtype=torch.float64)
tensor([-348.1358, -445.6475, -315.5357, -462.5143, -401.4186],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5216, device='cuda:0', dtype=torch.float64)
tensor([-349.5512, -442.0656, -315.4265, -462.6447, -398.7013],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5443, device='cuda:0', dtype=torch.float64)
tensor([-349.8342, -436.9701, -314.2759, -462.2209, -394.8930],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8380, device='cuda:0', dtype=torch.float64)
tensor([-356.6051, -452.3064, -322.7713, -469.7528, -396.3958],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5625, device='cuda:0', dtype=torch.float64)
tensor([-365.2775, -466.5388, -331.5116, -479.7053, -398.5869],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6099, device='cuda:0', dtype=torch.float64)
tensor([-370.3325, -468.7434, -335.2192, -485.2047, -398.2034],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6352, device='cuda:0', dtype=torch.float64)
tensor([-378.6357, -474.0054, -340.9820, -496.9551, -399.3987],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5690, device='cuda:0', dtype=torch.float64)
tensor([-386.8002, -474.3773, -344.4608, -507.8188, -400.0728],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5924, device='cuda:0', dtype=torch.float64)
tensor([-400.1253, -473.2779, -348.0760, -523.3320, -400.5737],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4696, device='cuda:0', dtype=torch.float64)
tensor([-414.1350, -468.7219, -351.3165, -536.1760, -400.7565],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4742, device='cuda:0', dtype=torch.float64)
tensor([-430.0904, -461.6930, -354.5871, -547.9667, -400.7673],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5087, device='cuda:0', dtype=torch.float64)
tensor([-453.8836, -452.2973, -358.6837, -560.4221, -401.2582],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4299, device='cuda:0', dtype=torch.float64)
tensor([-475.8624, -444.0187, -360.7710, -568.5420, -401.2010],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5141, device='cuda:0', dtype=torch.float64)
tensor([-498.2458, -435.1690, -362.0389, -574.6575, -400.4702],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4633, device='cuda:0', dtype=torch.float64)
tensor([-508.9229, -430.9636, -360.9373, -576.0062, -398.4766],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5247, device='cuda:0', dtype=torch.float64)
tensor([-528.2483, -424.7734, -361.0263, -579.6131, -396.8243],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4331, device='cuda:0', dtype=torch.float64)
tensor([-553.9745, -417.8327, -361.6737, -584.0391, -395.6083],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4334, device='cuda:0', dtype=torch.float64)
tensor([-580.7313, -410.8700, -362.3009, -587.6926, -394.0037],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6719, device='cuda:0', dtype=torch.float64)
tensor([-608.8962, -403.4578, -362.8918, -591.7559, -392.2963],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4310, device='cuda:0', dtype=torch.float64)
tensor([-632.8925, -395.9664, -363.0851, -594.9694, -389.9510],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4313, device='cuda:0', dtype=torch.float64)
tensor([-659.8199, -388.0059, -363.4821, -599.2005, -387.3194],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4216, device='cuda:0', dtype=torch.float64)
tensor([-692.3873, -379.1384, -364.5035, -604.3302, -385.1032],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4370, device='cuda:0', dtype=torch.float64)
tensor([-725.8753, -371.7714, -365.4186, -609.2742, -382.9814],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4607, device='cuda:0', dtype=torch.float64)
tensor([-752.2905, -365.1352, -366.2070, -613.1291, -380.5278],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3821, device='cuda:0', dtype=torch.float64)
tensor([-778.4242, -359.1233, -366.9853, -617.6389, -378.8956],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3908, device='cuda:0', dtype=torch.float64)
tensor([-794.6288, -353.9539, -366.7529, -619.7110, -376.1033],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3762, device='cuda:0', dtype=torch.float64)
tensor([-805.5455, -349.7384, -365.6370, -620.5658, -373.0868],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3850, device='cuda:0', dtype=torch.float64)
tensor([-813.2003, -345.5802, -363.8149, -621.0501, -369.6705],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3479, device='cuda:0', dtype=torch.float64)
tensor([-815.9071, -342.8347, -361.3866, -620.8454, -365.8721],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3901, device='cuda:0', dtype=torch.float64)
tensor([-818.8813, -338.8089, -359.5113, -620.9700, -362.7039],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3732, device='cuda:0', dtype=torch.float64)
tensor([-824.0974, -333.4751, -358.8417, -622.4993, -360.0640],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4102, device='cuda:0', dtype=torch.float64)
tensor([-828.6917, -327.9224, -359.0371, -625.9725, -358.8204],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4679, device='cuda:0', dtype=torch.float64)
tensor([-830.8662, -322.3222, -358.9185, -628.1305, -357.3647],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3335, device='cuda:0', dtype=torch.float64)
tensor([-831.5887, -317.5614, -358.4459, -629.5802, -355.5428],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3665, device='cuda:0', dtype=torch.float64)
tensor([-840.3111, -312.4822, -358.6039, -634.2466, -354.9860],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4234, device='cuda:0', dtype=torch.float64)
tensor([-853.1110, -307.9043, -358.6280, -638.8256, -354.2993],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3648, device='cuda:0', dtype=torch.float64)
tensor([-859.8389, -304.9902, -357.5678, -641.7139, -352.8559],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4257, device='cuda:0', dtype=torch.float64)
tensor([-863.3244, -302.3576, -356.9709, -644.8995, -351.3974],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4601, device='cuda:0', dtype=torch.float64)
tensor([-865.9923, -299.6644, -356.2689, -649.0487, -350.3226],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3177, device='cuda:0', dtype=torch.float64)
tensor([-866.4693, -297.8473, -355.5427, -653.0855, -349.4685],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3493, device='cuda:0', dtype=torch.float64)
tensor([-865.2019, -297.4867, -354.8960, -657.2586, -350.2595],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3491, device='cuda:0', dtype=torch.float64)
tensor([-866.2445, -298.2600, -354.9950, -664.2787, -353.6022],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3677, device='cuda:0', dtype=torch.float64)
tensor([-864.2278, -300.9024, -354.8794, -672.5591, -357.1259],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4686, device='cuda:0', dtype=torch.float64)
tensor([-861.2521, -303.0713, -354.5224, -677.9928, -359.0842],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4070, device='cuda:0', dtype=torch.float64)
tensor([-858.8313, -307.0913, -354.3456, -684.4778, -362.3763],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3517, device='cuda:0', dtype=torch.float64)
tensor([-856.1092, -310.6728, -354.2072, -688.3993, -364.8607],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3696, device='cuda:0', dtype=torch.float64)
tensor([-850.7481, -313.3467, -353.9740, -690.0326, -365.3481],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3405, device='cuda:0', dtype=torch.float64)
tensor([-842.6318, -314.1918, -353.0101, -688.7949, -362.8416],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2843, device='cuda:0', dtype=torch.float64)
tensor([-835.4395, -315.1356, -351.8102, -688.1343, -361.4185],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3683, device='cuda:0', dtype=torch.float64)
tensor([-826.8064, -314.6073, -350.3800, -686.7644, -358.4248],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3552, device='cuda:0', dtype=torch.float64)
tensor([-818.2147, -312.1193, -348.7125, -684.1022, -354.0480],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3752, device='cuda:0', dtype=torch.float64)
tensor([-813.8421, -309.4057, -347.8175, -683.3828, -352.1210],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3428, device='cuda:0', dtype=torch.float64)
tensor([-810.4491, -306.9471, -346.8110, -683.3138, -350.8916],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3467, device='cuda:0', dtype=torch.float64)
tensor([-808.0923, -303.9497, -346.1588, -683.4343, -350.0332],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3574, device='cuda:0', dtype=torch.float64)
tensor([-804.9522, -300.1087, -345.4184, -682.9899, -347.8194],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3536, device='cuda:0', dtype=torch.float64)
tensor([-802.7430, -296.3975, -344.6621, -682.3970, -346.5192],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3050, device='cuda:0', dtype=torch.float64)
tensor([-799.8514, -293.1779, -343.7720, -681.7595, -345.1448],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3836, device='cuda:0', dtype=torch.float64)
tensor([-794.1463, -289.9240, -342.4009, -679.7745, -342.2982],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2805, device='cuda:0', dtype=torch.float64)
tensor([-788.6943, -287.1437, -341.3515, -677.6594, -339.3267],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3858, device='cuda:0', dtype=torch.float64)
tensor([-783.8423, -285.5399, -340.7608, -677.1350, -338.0467],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3827, device='cuda:0', dtype=torch.float64)
tensor([-779.3779, -284.9730, -340.2014, -676.4956, -337.4782],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3684, device='cuda:0', dtype=torch.float64)
tensor([-777.4486, -285.9908, -339.7810, -679.8018, -340.8766],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3010, device='cuda:0', dtype=torch.float64)
tensor([-774.1931, -286.0957, -339.3660, -679.9693, -341.9899],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3438, device='cuda:0', dtype=torch.float64)
tensor([-770.6923, -285.4950, -338.9427, -679.4797, -342.1954],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3079, device='cuda:0', dtype=torch.float64)
tensor([-767.4783, -284.5878, -338.8296, -678.1342, -342.0146],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3311, device='cuda:0', dtype=torch.float64)
tensor([-763.7550, -283.4334, -338.5237, -675.5701, -340.6444],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2777, device='cuda:0', dtype=torch.float64)
tensor([-759.9059, -282.3616, -338.0923, -673.1808, -339.1276],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3428, device='cuda:0', dtype=torch.float64)
tensor([-756.0747, -281.1715, -337.5319, -670.6416, -337.5528],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3259, device='cuda:0', dtype=torch.float64)
tensor([-751.1806, -278.4406, -336.2469, -665.9233, -334.5688],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3420, device='cuda:0', dtype=torch.float64)
tensor([-745.6533, -274.6941, -334.8657, -660.2011, -330.3266],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2957, device='cuda:0', dtype=torch.float64)
tensor([-740.6440, -271.5603, -333.7819, -655.3363, -326.5525],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2858, device='cuda:0', dtype=torch.float64)
tensor([-735.3944, -268.2312, -332.7878, -650.5347, -322.5942],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2619, device='cuda:0', dtype=torch.float64)
tensor([-731.8630, -266.0717, -332.1477, -647.5113, -320.5849],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3202, device='cuda:0', dtype=torch.float64)
tensor([-729.8499, -264.6376, -331.5163, -645.7554, -319.6569],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3012, device='cuda:0', dtype=torch.float64)
tensor([-729.6062, -264.1031, -330.8916, -645.0118, -320.2489],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3541, device='cuda:0', dtype=torch.float64)
tensor([-729.7863, -264.3778, -330.5315, -645.3874, -321.8272],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2329, device='cuda:0', dtype=torch.float64)
tensor([-729.2415, -265.0029, -330.4951, -645.2610, -323.1202],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2643, device='cuda:0', dtype=torch.float64)
tensor([-730.5934, -265.8055, -330.2313, -646.7414, -325.7231],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3529, device='cuda:0', dtype=torch.float64)
tensor([-733.8815, -267.3258, -329.9093, -650.7131, -330.0567],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2845, device='cuda:0', dtype=torch.float64)
tensor([-737.2831, -269.3066, -329.7071, -653.9469, -334.7263],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2405, device='cuda:0', dtype=torch.float64)
tensor([-740.2853, -271.4107, -329.5343, -656.6290, -339.3793],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2674, device='cuda:0', dtype=torch.float64)
tensor([-742.0433, -273.1128, -329.3758, -658.0719, -342.8350],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2925, device='cuda:0', dtype=torch.float64)
tensor([-744.2145, -275.0725, -328.7993, -658.6139, -346.8543],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2617, device='cuda:0', dtype=torch.float64)
tensor([-743.8513, -275.3372, -328.3026, -657.0267, -347.7101],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2951, device='cuda:0', dtype=torch.float64)
tensor([-740.9003, -273.1374, -327.4458, -653.4371, -345.1366],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3062, device='cuda:0', dtype=torch.float64)
tensor([-738.6740, -271.1067, -326.9381, -650.9829, -343.6870],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2826, device='cuda:0', dtype=torch.float64)
tensor([-733.9500, -267.5866, -326.3992, -646.5255, -339.3478],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3007, device='cuda:0', dtype=torch.float64)
tensor([-729.1669, -264.8725, -326.1583, -642.3019, -335.0380],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2662, device='cuda:0', dtype=torch.float64)
tensor([-724.8179, -262.5180, -325.9110, -638.4606, -331.3273],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2867, device='cuda:0', dtype=torch.float64)
tensor([-721.3527, -260.6305, -325.8096, -635.4558, -328.2505],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3096, device='cuda:0', dtype=torch.float64)
tensor([-718.8321, -259.0555, -325.9120, -633.3793, -325.8552],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2608, device='cuda:0', dtype=torch.float64)
tensor([-714.5941, -255.8446, -325.5159, -630.3313, -321.3272],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2213, device='cuda:0', dtype=torch.float64)
tensor([-712.1242, -252.9897, -324.8637, -628.2945, -318.2784],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2222, device='cuda:0', dtype=torch.float64)
tensor([-710.5016, -250.4111, -324.0880, -626.4834, -316.1063],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2303, device='cuda:0', dtype=torch.float64)
tensor([-708.8011, -247.9782, -323.5086, -624.6269, -313.9355],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2640, device='cuda:0', dtype=torch.float64)
tensor([-708.5021, -246.2557, -322.8465, -623.9368, -313.6416],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3069, device='cuda:0', dtype=torch.float64)
tensor([-708.0808, -245.1249, -322.3193, -623.1129, -314.0257],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2574, device='cuda:0', dtype=torch.float64)
tensor([-705.2553, -243.4494, -321.9817, -620.6021, -312.1465],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2498, device='cuda:0', dtype=torch.float64)
tensor([-701.6876, -242.2896, -321.9094, -617.5940, -309.8600],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2563, device='cuda:0', dtype=torch.float64)
tensor([-697.6802, -240.8901, -322.0381, -614.6518, -306.9933],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2608, device='cuda:0', dtype=torch.float64)
tensor([-694.7320, -239.9631, -322.1911, -612.0974, -304.9927],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2128, device='cuda:0', dtype=torch.float64)
tensor([-692.5250, -239.1779, -322.2481, -609.7352, -303.4441],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2181, device='cuda:0', dtype=torch.float64)
tensor([-690.9614, -238.8706, -322.3020, -607.8242, -302.6451],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2006, device='cuda:0', dtype=torch.float64)
tensor([-688.7088, -238.5192, -322.6057, -605.0427, -301.0395],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2927, device='cuda:0', dtype=torch.float64)
tensor([-688.1723, -238.3731, -322.8018, -603.4011, -300.3726],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2311, device='cuda:0', dtype=torch.float64)
tensor([-686.4744, -238.1272, -323.1899, -601.4362, -298.7866],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2937, device='cuda:0', dtype=torch.float64)
tensor([-684.8635, -238.3333, -323.7464, -599.7534, -297.4098],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2326, device='cuda:0', dtype=torch.float64)
tensor([-682.6577, -238.8401, -324.4442, -597.8723, -295.6571],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2100, device='cuda:0', dtype=torch.float64)
tensor([-679.9042, -239.2336, -325.0286, -595.4427, -293.7670],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2576, device='cuda:0', dtype=torch.float64)
tensor([-676.6848, -238.8421, -325.5690, -593.5609, -291.4861],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2734, device='cuda:0', dtype=torch.float64)
tensor([-673.3318, -238.7439, -326.1329, -591.3483, -289.1033],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2294, device='cuda:0', dtype=torch.float64)
tensor([-671.2225, -238.1920, -326.0921, -589.7449, -287.9045],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2736, device='cuda:0', dtype=torch.float64)
tensor([-669.2182, -237.8430, -326.2475, -587.7448, -286.9827],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2492, device='cuda:0', dtype=torch.float64)
tensor([-667.2226, -237.5040, -326.2500, -585.8684, -286.1577],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1975, device='cuda:0', dtype=torch.float64)
tensor([-665.4201, -236.4481, -325.9999, -583.7165, -285.2320],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2044, device='cuda:0', dtype=torch.float64)
tensor([-663.6630, -235.6969, -325.8878, -581.4308, -284.0586],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3209, device='cuda:0', dtype=torch.float64)
tensor([-663.1635, -235.3229, -325.5581, -579.5457, -284.4492],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2302, device='cuda:0', dtype=torch.float64)
tensor([-663.6670, -235.1440, -325.2209, -577.9881, -285.9130],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2219, device='cuda:0', dtype=torch.float64)
tensor([-665.0857, -235.5303, -325.2022, -576.7017, -287.9743],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2417, device='cuda:0', dtype=torch.float64)
tensor([-667.3547, -236.2076, -325.2137, -576.3017, -290.5587],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9702, device='cuda:0', dtype=torch.float64)
tensor([-672.6476, -236.7994, -325.0412, -577.8725, -294.3791],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3065, device='cuda:0', dtype=torch.float64)
tensor([-675.2135, -236.5784, -325.2980, -578.0039, -295.9518],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2042, device='cuda:0', dtype=torch.float64)
tensor([-675.6263, -236.2734, -325.8191, -576.8396, -296.2910],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2424, device='cuda:0', dtype=torch.float64)
tensor([-673.1706, -235.6903, -326.3188, -574.2811, -294.3399],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2287, device='cuda:0', dtype=torch.float64)
tensor([-669.9965, -234.5832, -326.9913, -570.9945, -291.7653],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2046, device='cuda:0', dtype=torch.float64)
tensor([-666.1408, -234.0125, -327.8658, -567.7323, -288.3267],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2929, device='cuda:0', dtype=torch.float64)
tensor([-661.1075, -233.6544, -328.9900, -564.0932, -284.0090],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2249, device='cuda:0', dtype=torch.float64)
tensor([-655.8241, -233.9642, -330.3997, -560.0483, -279.1624],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2408, device='cuda:0', dtype=torch.float64)
tensor([-649.6414, -234.0477, -331.7719, -555.6105, -273.9097],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2340, device='cuda:0', dtype=torch.float64)
tensor([-645.0427, -234.7175, -333.0325, -552.1707, -270.1059],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2365, device='cuda:0', dtype=torch.float64)
tensor([-640.3173, -234.9614, -333.9791, -548.6630, -266.1787],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1950, device='cuda:0', dtype=torch.float64)
tensor([-638.0420, -236.2397, -334.9385, -546.1639, -264.3903],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1995, device='cuda:0', dtype=torch.float64)
tensor([-636.5005, -236.3343, -335.4082, -544.6717, -263.6247],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2816, device='cuda:0', dtype=torch.float64)
tensor([-635.8415, -235.1179, -335.3691, -543.4587, -263.8599],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4393, device='cuda:0', dtype=torch.float64)
tensor([-635.1570, -234.3840, -335.4298, -542.4365, -263.6434],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4413, device='cuda:0', dtype=torch.float64)
tensor([-635.2097, -233.8102, -334.9266, -541.1272, -264.2770],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2426, device='cuda:0', dtype=torch.float64)
tensor([-635.4163, -233.3431, -334.4523, -540.1221, -265.2286],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2464, device='cuda:0', dtype=torch.float64)
tensor([-634.7685, -232.6493, -334.0507, -538.6906, -265.3307],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2714, device='cuda:0', dtype=torch.float64)
tensor([-633.5100, -232.0464, -333.6754, -537.8626, -265.7234],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2509, device='cuda:0', dtype=torch.float64)
tensor([-631.4545, -231.3897, -333.6554, -537.3910, -265.5726],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2892, device='cuda:0', dtype=torch.float64)
tensor([-629.0468, -230.7742, -333.8442, -536.8393, -265.2328],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2116, device='cuda:0', dtype=torch.float64)
tensor([-625.9205, -229.3335, -333.8744, -535.6785, -264.2681],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1922, device='cuda:0', dtype=torch.float64)
tensor([-622.4149, -227.8216, -333.9136, -533.9392, -262.7481],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1550, device='cuda:0', dtype=torch.float64)
tensor([-617.7346, -226.3585, -333.9485, -531.4283, -260.1925],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3145, device='cuda:0', dtype=torch.float64)
tensor([-612.2916, -225.1642, -333.9869, -528.2552, -256.8168],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1824, device='cuda:0', dtype=torch.float64)
tensor([-606.0461, -223.6764, -333.6051, -524.2593, -253.1630],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2313, device='cuda:0', dtype=torch.float64)
tensor([-599.7747, -223.2984, -333.6358, -519.4894, -249.5801],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1871, device='cuda:0', dtype=torch.float64)
tensor([-594.5868, -223.7925, -333.7647, -515.3539, -246.6553],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2137, device='cuda:0', dtype=torch.float64)
tensor([-589.1629, -224.6087, -334.0722, -511.4276, -244.0239],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2141, device='cuda:0', dtype=torch.float64)
tensor([-585.2936, -226.3214, -334.6797, -509.0435, -242.9219],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1915, device='cuda:0', dtype=torch.float64)
tensor([-582.8177, -227.7162, -334.7575, -507.5992, -243.0978],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1835, device='cuda:0', dtype=torch.float64)
tensor([-581.0123, -229.1037, -334.8378, -506.4197, -243.4076],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1547, device='cuda:0', dtype=torch.float64)
tensor([-579.3096, -229.7645, -334.7151, -505.0757, -243.6048],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2001, device='cuda:0', dtype=torch.float64)
tensor([-577.8964, -230.2238, -334.5020, -504.3348, -244.1858],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2384, device='cuda:0', dtype=torch.float64)
tensor([-577.3331, -229.6578, -333.7153, -505.1345, -245.9577],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2828, device='cuda:0', dtype=torch.float64)
tensor([-577.1059, -229.3489, -332.7008, -505.4819, -247.8144],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2356, device='cuda:0', dtype=torch.float64)
tensor([-577.6955, -228.9538, -331.7974, -506.5047, -250.3696],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1535, device='cuda:0', dtype=torch.float64)
tensor([-577.9846, -228.8064, -330.9372, -506.8083, -252.6385],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7767, device='cuda:0', dtype=torch.float64)
tensor([-578.7193, -228.1006, -330.0337, -506.9117, -254.9436],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1476, device='cuda:0', dtype=torch.float64)
tensor([-579.4907, -227.3225, -329.0697, -506.9039, -256.9291],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1988, device='cuda:0', dtype=torch.float64)
tensor([-579.6282, -226.5065, -327.9957, -505.8710, -257.9201],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1808, device='cuda:0', dtype=torch.float64)
tensor([-580.3742, -226.1338, -327.0793, -504.8745, -259.1675],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1860, device='cuda:0', dtype=torch.float64)
tensor([-580.7807, -225.6950, -326.1083, -503.2943, -260.0092],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1681, device='cuda:0', dtype=torch.float64)
tensor([-580.0557, -225.5185, -325.3792, -500.6489, -259.5513],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2056, device='cuda:0', dtype=torch.float64)
tensor([-578.8426, -225.3744, -324.6133, -498.3495, -258.6624],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1987, device='cuda:0', dtype=torch.float64)
tensor([-577.6229, -225.6626, -323.9939, -496.1968, -257.5889],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2235, device='cuda:0', dtype=torch.float64)
tensor([-575.6909, -226.0554, -323.4371, -493.9174, -255.6889],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2061, device='cuda:0', dtype=torch.float64)
tensor([-573.2699, -226.2425, -322.9683, -492.0065, -253.6368],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2135, device='cuda:0', dtype=torch.float64)
tensor([-570.1270, -226.1785, -322.4427, -489.6110, -251.1459],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1835, device='cuda:0', dtype=torch.float64)
tensor([-567.8484, -226.0863, -322.0763, -488.3077, -249.6983],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2501, device='cuda:0', dtype=torch.float64)
tensor([-565.6804, -225.9172, -321.7776, -487.2529, -248.6464],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1691, device='cuda:0', dtype=torch.float64)
tensor([-562.9829, -225.3730, -321.3286, -486.2225, -247.6517],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1695, device='cuda:0', dtype=torch.float64)
tensor([-560.7243, -224.5528, -320.6133, -485.6138, -247.0861],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1710, device='cuda:0', dtype=torch.float64)
tensor([-558.7465, -224.0826, -320.0111, -484.6225, -246.2024],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2132, device='cuda:0', dtype=torch.float64)
tensor([-557.4421, -223.3845, -319.3381, -484.5552, -246.2793],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1947, device='cuda:0', dtype=torch.float64)
tensor([-556.5806, -222.5438, -318.8501, -484.7973, -246.8198],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1600, device='cuda:0', dtype=torch.float64)
tensor([-556.0356, -221.7872, -318.3144, -485.1952, -247.7364],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1752, device='cuda:0', dtype=torch.float64)
tensor([-554.9558, -221.2877, -317.9455, -485.2294, -247.7995],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1725, device='cuda:0', dtype=torch.float64)
tensor([-553.4806, -220.6366, -317.4618, -484.5151, -247.3856],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2016, device='cuda:0', dtype=torch.float64)
tensor([-551.2338, -219.8269, -316.8317, -483.0305, -246.3879],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1910, device='cuda:0', dtype=torch.float64)
tensor([-549.5666, -219.2363, -316.3361, -482.0166, -246.2094],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1605, device='cuda:0', dtype=torch.float64)
tensor([-548.4502, -218.6874, -315.8899, -481.2964, -246.3482],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1752, device='cuda:0', dtype=torch.float64)
tensor([-548.4904, -218.4799, -315.8275, -481.4435, -246.9826],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1443, device='cuda:0', dtype=torch.float64)
tensor([-548.3567, -218.5290, -315.6801, -480.4901, -246.6670],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1383, device='cuda:0', dtype=torch.float64)
tensor([-547.7300, -218.5325, -315.5339, -479.0317, -246.0243],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1519, device='cuda:0', dtype=torch.float64)
tensor([-546.9844, -218.4942, -315.3776, -477.2528, -245.1451],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1514, device='cuda:0', dtype=torch.float64)
tensor([-546.4112, -218.3863, -315.2216, -475.3849, -244.1992],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1506, device='cuda:0', dtype=torch.float64)
tensor([-546.1186, -218.0546, -315.1107, -474.2844, -243.8151],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1850, device='cuda:0', dtype=torch.float64)
tensor([-545.2155, -217.8361, -315.0877, -472.9964, -243.2362],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2037, device='cuda:0', dtype=torch.float64)
tensor([-544.0993, -217.5897, -314.9049, -471.8622, -242.5680],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1488, device='cuda:0', dtype=torch.float64)
tensor([-542.3196, -217.2221, -314.6572, -470.1758, -241.3896],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1888, device='cuda:0', dtype=torch.float64)
tensor([-540.1859, -216.7524, -314.5176, -468.4486, -240.4683],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2318, device='cuda:0', dtype=torch.float64)
tensor([-537.8348, -216.5627, -314.6582, -466.5745, -239.0882],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1723, device='cuda:0', dtype=torch.float64)
tensor([-534.8008, -216.9385, -314.9576, -463.6036, -236.4518],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1612, device='cuda:0', dtype=torch.float64)
tensor([-532.3928, -217.1195, -315.0027, -461.3601, -234.8223],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1818, device='cuda:0', dtype=torch.float64)
tensor([-529.4222, -216.8626, -314.9047, -459.2932, -233.7100],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1761, device='cuda:0', dtype=torch.float64)
tensor([-527.4554, -216.1307, -314.5572, -458.6251, -234.0032],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1614, device='cuda:0', dtype=torch.float64)
tensor([-526.0487, -214.9873, -314.0391, -458.8101, -235.1643],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1754, device='cuda:0', dtype=torch.float64)
tensor([-525.0981, -214.1252, -313.7156, -459.4781, -236.5005],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1589, device='cuda:0', dtype=torch.float64)
tensor([-524.2287, -213.2794, -313.3215, -460.3013, -237.9745],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1598, device='cuda:0', dtype=torch.float64)
tensor([-523.2732, -212.8237, -313.1057, -460.9184, -238.8357],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1624, device='cuda:0', dtype=torch.float64)
tensor([-522.9146, -212.1136, -312.6805, -461.8466, -240.2195],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1610, device='cuda:0', dtype=torch.float64)
tensor([-522.8031, -211.4181, -312.2268, -462.5151, -241.6362],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1691, device='cuda:0', dtype=torch.float64)
tensor([-523.1941, -210.6034, -311.6124, -462.9336, -242.8576],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1391, device='cuda:0', dtype=torch.float64)
tensor([-523.0244, -209.6230, -310.9731, -463.6737, -244.1640],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1755, device='cuda:0', dtype=torch.float64)
tensor([-521.5847, -208.5908, -310.0812, -463.0936, -244.3573],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1956, device='cuda:0', dtype=torch.float64)
tensor([-519.9162, -207.7892, -309.2769, -462.4088, -243.9845],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1309, device='cuda:0', dtype=torch.float64)
tensor([-518.2126, -207.1181, -308.5615, -461.5487, -243.2481],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1312, device='cuda:0', dtype=torch.float64)
tensor([-516.8795, -206.4406, -307.8201, -460.9080, -242.4448],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1447, device='cuda:0', dtype=torch.float64)
tensor([-515.6339, -205.9445, -307.1094, -460.1865, -241.4625],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1308, device='cuda:0', dtype=torch.float64)
tensor([-513.0421, -205.6656, -306.5627, -457.7697, -238.7578],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1599, device='cuda:0', dtype=torch.float64)
tensor([-510.1889, -205.2104, -305.7503, -454.5206, -235.3351],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1481, device='cuda:0', dtype=torch.float64)
tensor([-507.9533, -204.6792, -304.9278, -452.4687, -233.1128],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1596, device='cuda:0', dtype=torch.float64)
tensor([-506.3533, -204.2289, -304.2833, -451.0397, -231.4709],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1423, device='cuda:0', dtype=torch.float64)
tensor([-504.5107, -203.7901, -303.7052, -449.8595, -230.3631],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1376, device='cuda:0', dtype=torch.float64)
tensor([-503.3313, -203.3992, -303.3061, -449.4058, -229.3867],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1206, device='cuda:0', dtype=torch.float64)
tensor([-501.9944, -203.0726, -303.0272, -449.1198, -228.8168],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1685, device='cuda:0', dtype=torch.float64)
tensor([-500.3082, -202.9844, -302.9056, -448.3321, -227.8639],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1618, device='cuda:0', dtype=torch.float64)
tensor([-498.6461, -203.1196, -302.9733, -447.4797, -226.8027],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1355, device='cuda:0', dtype=torch.float64)
tensor([-497.2690, -203.1747, -303.0334, -446.8945, -226.2051],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1373, device='cuda:0', dtype=torch.float64)
tensor([-495.8223, -203.0645, -303.0460, -446.2873, -226.0172],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1411, device='cuda:0', dtype=torch.float64)
tensor([-494.7169, -202.8036, -303.0427, -446.2839, -226.5560],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1130, device='cuda:0', dtype=torch.float64)
tensor([-493.6789, -202.5116, -303.0232, -446.2536, -227.1513],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1081, device='cuda:0', dtype=torch.float64)
tensor([-492.7955, -202.1315, -302.9994, -446.6135, -228.3610],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1420, device='cuda:0', dtype=torch.float64)
tensor([-492.1755, -201.9926, -303.1059, -446.9973, -229.7480],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1865, device='cuda:0', dtype=torch.float64)
tensor([-492.0474, -202.0808, -303.4604, -447.0096, -230.9998],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1360, device='cuda:0', dtype=torch.float64)
tensor([-492.0993, -202.4283, -303.7121, -446.6504, -231.5842],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1523, device='cuda:0', dtype=torch.float64)
tensor([-492.2739, -202.7861, -304.1331, -446.1721, -231.7541],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1275, device='cuda:0', dtype=torch.float64)
tensor([-492.4969, -203.1522, -304.4940, -445.8228, -231.9603],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1418, device='cuda:0', dtype=torch.float64)
tensor([-492.1161, -203.5282, -304.6174, -444.1384, -231.0251],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1509, device='cuda:0', dtype=torch.float64)
tensor([-491.3071, -203.8161, -304.5904, -442.2654, -230.0453],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1547, device='cuda:0', dtype=torch.float64)
tensor([-491.1221, -203.5100, -304.4572, -441.3382, -230.0816],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1259, device='cuda:0', dtype=torch.float64)
tensor([-490.8930, -203.0096, -304.1810, -440.7746, -230.5079],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1465, device='cuda:0', dtype=torch.float64)
tensor([-490.8327, -202.3084, -303.6749, -440.2973, -230.8693],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1284, device='cuda:0', dtype=torch.float64)
tensor([-490.8955, -201.4636, -303.1939, -440.3277, -231.6994],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1231, device='cuda:0', dtype=torch.float64)
tensor([-490.6725, -200.7491, -302.6628, -439.8587, -231.7916],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1306, device='cuda:0', dtype=torch.float64)
tensor([-490.0386, -200.0990, -301.9538, -438.3061, -231.2234],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1063, device='cuda:0', dtype=torch.float64)
tensor([-488.8520, -199.7386, -301.3567, -436.2598, -230.0565],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1759, device='cuda:0', dtype=torch.float64)
tensor([-487.8546, -199.2149, -300.8537, -435.8645, -230.4124],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1223, device='cuda:0', dtype=torch.float64)
tensor([-486.9323, -198.9803, -300.4717, -435.0829, -230.7521],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1195, device='cuda:0', dtype=torch.float64)
tensor([-485.9225, -198.7806, -300.0282, -434.1170, -230.4541],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1299, device='cuda:0', dtype=torch.float64)
tensor([-485.2039, -198.5274, -299.5171, -433.1131, -229.9628],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1461, device='cuda:0', dtype=torch.float64)
tensor([-484.6953, -198.3438, -299.0753, -431.7546, -229.1407],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1600, device='cuda:0', dtype=torch.float64)
tensor([-483.6308, -198.2393, -298.6072, -429.6983, -227.3006],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1383, device='cuda:0', dtype=torch.float64)
tensor([-482.4240, -198.2198, -298.2140, -427.5843, -225.4458],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1285, device='cuda:0', dtype=torch.float64)
tensor([-480.9555, -198.4265, -297.8860, -425.1646, -223.1529],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1809, device='cuda:0', dtype=torch.float64)
tensor([-479.0881, -198.2952, -297.7116, -423.9171, -222.0513],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1211, device='cuda:0', dtype=torch.float64)
tensor([-477.6180, -198.3794, -297.5809, -422.9729, -221.0692],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1415, device='cuda:0', dtype=torch.float64)
tensor([-476.7016, -198.5352, -297.6535, -422.6663, -220.7640],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1594, device='cuda:0', dtype=torch.float64)
tensor([-475.5024, -198.8796, -297.5338, -421.9032, -220.1976],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1217, device='cuda:0', dtype=torch.float64)
tensor([-474.4480, -198.8720, -297.2078, -422.0082, -220.3397],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1368, device='cuda:0', dtype=torch.float64)
tensor([-473.4685, -198.6571, -296.9921, -422.7367, -221.0790],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1446, device='cuda:0', dtype=torch.float64)
tensor([-472.7121, -198.2279, -296.7544, -424.0318, -222.3613],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1569, device='cuda:0', dtype=torch.float64)
tensor([-472.3897, -198.0810, -296.7864, -425.4366, -223.6315],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1355, device='cuda:0', dtype=torch.float64)
tensor([-472.1742, -197.9725, -296.8530, -426.6331, -224.4254],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1191, device='cuda:0', dtype=torch.float64)
tensor([-472.3779, -197.8991, -297.1683, -428.3587, -225.3830],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1332, device='cuda:0', dtype=torch.float64)
tensor([-472.0529, -197.9291, -297.2180, -429.1108, -225.2961],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1404, device='cuda:0', dtype=torch.float64)
tensor([-471.8875, -197.8720, -297.2285, -429.9093, -225.2742],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0997, device='cuda:0', dtype=torch.float64)
tensor([-471.6186, -197.8147, -297.1034, -430.1884, -225.0738],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1142, device='cuda:0', dtype=torch.float64)
tensor([-471.1285, -197.8454, -296.9448, -430.1042, -224.4647],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1553, device='cuda:0', dtype=torch.float64)
tensor([-469.8445, -198.2919, -296.5530, -428.3110, -222.2325],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1466, device='cuda:0', dtype=torch.float64)
tensor([-468.3620, -198.6277, -296.1196, -426.5509, -220.3354],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1461, device='cuda:0', dtype=torch.float64)
tensor([-467.2115, -198.7927, -295.7188, -425.6665, -219.2069],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1619, device='cuda:0', dtype=torch.float64)
tensor([-465.8213, -199.4335, -295.3812, -424.2198, -217.4419],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1310, device='cuda:0', dtype=torch.float64)
tensor([-464.0361, -199.1525, -295.0508, -423.8885, -217.3030],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1355, device='cuda:0', dtype=torch.float64)
tensor([-462.5142, -198.3448, -294.8423, -424.2701, -218.4793],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1612, device='cuda:0', dtype=torch.float64)
tensor([-460.1904, -197.6645, -294.3103, -423.8944, -219.1855],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1013, device='cuda:0', dtype=torch.float64)
tensor([-458.2655, -197.2387, -294.0401, -423.7357, -219.9515],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1183, device='cuda:0', dtype=torch.float64)
tensor([-456.3722, -196.9868, -293.8314, -423.3150, -220.5168],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1126, device='cuda:0', dtype=torch.float64)
tensor([-454.3809, -196.9902, -293.3236, -421.6598, -219.6477],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1551, device='cuda:0', dtype=torch.float64)
tensor([-452.6558, -197.3872, -292.8427, -419.2813, -217.6063],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1107, device='cuda:0', dtype=torch.float64)
tensor([-451.3036, -197.6780, -292.4464, -417.1567, -215.8060],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2502, device='cuda:0', dtype=torch.float64)
tensor([-450.0938, -197.7671, -292.3445, -415.8889, -214.9338],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1730, device='cuda:0', dtype=torch.float64)
tensor([-449.3235, -197.9309, -292.3379, -414.4703, -213.7278],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1376, device='cuda:0', dtype=torch.float64)
tensor([-449.0359, -198.0684, -292.5205, -413.4187, -213.0406],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1414, device='cuda:0', dtype=torch.float64)
tensor([-448.0694, -198.1484, -292.5731, -411.8496, -211.4408],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1442, device='cuda:0', dtype=torch.float64)
tensor([-446.9896, -198.0381, -292.6211, -410.4470, -210.1989],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1132, device='cuda:0', dtype=torch.float64)
tensor([-445.9405, -197.7887, -292.6510, -409.5963, -209.5409],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1630, device='cuda:0', dtype=torch.float64)
tensor([-444.7344, -197.1704, -292.6925, -409.2586, -209.4795],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1179, device='cuda:0', dtype=torch.float64)
tensor([-443.5899, -196.5923, -292.6004, -408.8002, -209.1062],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1378, device='cuda:0', dtype=torch.float64)
tensor([-442.6750, -195.9844, -292.5620, -408.2362, -208.8830],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1318, device='cuda:0', dtype=torch.float64)
tensor([-442.2268, -195.2720, -292.6345, -408.6630, -210.1470],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1581, device='cuda:0', dtype=torch.float64)
tensor([-442.4084, -195.2268, -292.9920, -409.2025, -211.8986],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1108, device='cuda:0', dtype=torch.float64)
tensor([-442.6954, -195.1976, -293.3619, -409.5896, -213.5501],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1263, device='cuda:0', dtype=torch.float64)
tensor([-442.6973, -194.9536, -293.3292, -409.4739, -214.5216],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1255, device='cuda:0', dtype=torch.float64)
tensor([-443.7828, -194.7643, -293.5575, -410.3658, -217.0900],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1256, device='cuda:0', dtype=torch.float64)
tensor([-444.9271, -194.8653, -293.8810, -410.5690, -218.5884],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1320, device='cuda:0', dtype=torch.float64)
tensor([-445.6040, -195.0794, -294.1098, -410.0347, -219.3113],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0862, device='cuda:0', dtype=torch.float64)
tensor([-445.9529, -194.9782, -293.9158, -408.9260, -219.4562],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1162, device='cuda:0', dtype=torch.float64)
tensor([-446.4770, -194.9104, -293.7263, -407.6250, -219.4315],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1235, device='cuda:0', dtype=torch.float64)
tensor([-446.3014, -194.9794, -293.3377, -405.4918, -218.0709],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1026, device='cuda:0', dtype=torch.float64)
tensor([-446.2174, -195.1056, -292.6213, -403.3190, -216.8720],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1209, device='cuda:0', dtype=torch.float64)
tensor([-445.4638, -195.1170, -291.6294, -400.8778, -215.2288],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1126, device='cuda:0', dtype=torch.float64)
tensor([-444.5798, -195.4383, -291.1103, -398.7460, -213.5239],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1020, device='cuda:0', dtype=torch.float64)
tensor([-443.4678, -195.5957, -290.7372, -397.0047, -212.1971],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1162, device='cuda:0', dtype=torch.float64)
tensor([-442.5141, -195.6056, -290.0696, -395.3684, -211.2599],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0907, device='cuda:0', dtype=torch.float64)
tensor([-441.7992, -195.2662, -289.4525, -394.3550, -211.1802],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1035, device='cuda:0', dtype=torch.float64)
tensor([-440.8516, -194.3469, -289.0552, -394.2111, -212.2634],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0978, device='cuda:0', dtype=torch.float64)
tensor([-439.7393, -193.2942, -288.8474, -394.5930, -214.0829],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0866, device='cuda:0', dtype=torch.float64)
tensor([-438.8603, -192.1378, -289.2292, -396.0071, -217.4946],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1069, device='cuda:0', dtype=torch.float64)
tensor([-437.4733, -191.3500, -289.2545, -396.6605, -219.8188],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1578, device='cuda:0', dtype=torch.float64)
tensor([-435.0242, -190.8122, -289.0510, -396.2070, -219.7837],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1193, device='cuda:0', dtype=torch.float64)
tensor([-432.4694, -190.2401, -288.8942, -395.7672, -218.9849],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1172, device='cuda:0', dtype=torch.float64)
tensor([-429.4957, -190.0180, -288.2668, -394.1394, -216.4234],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0930, device='cuda:0', dtype=torch.float64)
tensor([-426.2764, -190.2155, -287.4023, -391.3199, -211.7110],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0939, device='cuda:0', dtype=torch.float64)
tensor([-423.5146, -190.4774, -286.6277, -388.8279, -207.3991],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1242, device='cuda:0', dtype=torch.float64)
tensor([-421.8882, -190.9633, -286.2219, -386.6640, -204.2148],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1351, device='cuda:0', dtype=torch.float64)
tensor([-419.9495, -191.5420, -285.8882, -384.6958, -201.1964],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1588, device='cuda:0', dtype=torch.float64)
tensor([-418.4230, -191.9149, -285.7611, -383.2102, -199.5085],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1031, device='cuda:0', dtype=torch.float64)
tensor([-417.4841, -191.6239, -285.9605, -382.9924, -200.0343],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1287, device='cuda:0', dtype=torch.float64)
tensor([-417.8305, -191.1720, -286.7355, -384.0534, -202.7676],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1283, device='cuda:0', dtype=torch.float64)
tensor([-418.3722, -190.9048, -287.4809, -385.0102, -205.7282],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1054, device='cuda:0', dtype=torch.float64)
tensor([-418.8921, -190.9851, -288.1544, -385.4251, -207.9397],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0991, device='cuda:0', dtype=torch.float64)
tensor([-419.3182, -191.0017, -288.6799, -385.6608, -209.9811],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0902, device='cuda:0', dtype=torch.float64)
tensor([-420.3330, -190.8138, -289.2806, -386.3059, -213.0658],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1245, device='cuda:0', dtype=torch.float64)
tensor([-421.5960, -190.8544, -289.9349, -386.4504, -215.6739],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1223, device='cuda:0', dtype=torch.float64)
tensor([-422.7646, -190.7736, -290.1752, -386.1946, -217.8511],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1213, device='cuda:0', dtype=torch.float64)
tensor([-423.4081, -190.6077, -289.7859, -385.2613, -218.9067],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0989, device='cuda:0', dtype=torch.float64)
tensor([-423.6139, -190.8722, -288.9544, -383.0886, -218.1093],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1230, device='cuda:0', dtype=torch.float64)
tensor([-422.7710, -191.1055, -287.7592, -380.7257, -216.0930],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1087, device='cuda:0', dtype=torch.float64)
tensor([-422.4080, -191.4978, -286.0903, -378.1329, -213.4891],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0827, device='cuda:0', dtype=torch.float64)
tensor([-421.5993, -192.0644, -284.3262, -375.3826, -210.6765],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0960, device='cuda:0', dtype=torch.float64)
tensor([-419.8498, -192.7479, -282.8855, -372.8867, -207.8369],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1264, device='cuda:0', dtype=torch.float64)
tensor([-418.4297, -193.5341, -281.6567, -370.5460, -205.4906],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1150, device='cuda:0', dtype=torch.float64)
tensor([-417.9539, -193.7482, -281.1059, -369.5549, -204.8114],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1090, device='cuda:0', dtype=torch.float64)
tensor([-416.8306, -193.5551, -280.5732, -368.7264, -203.9967],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1058, device='cuda:0', dtype=torch.float64)
tensor([-415.7352, -192.4078, -280.6842, -369.2671, -204.4864],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0831, device='cuda:0', dtype=torch.float64)
tensor([-415.4901, -191.3522, -280.7724, -370.0126, -205.5280],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1021, device='cuda:0', dtype=torch.float64)
tensor([-414.9305, -190.6491, -280.9898, -370.5103, -206.0001],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1148, device='cuda:0', dtype=torch.float64)
tensor([-414.4595, -189.6445, -281.3981, -371.3976, -207.0233],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1285, device='cuda:0', dtype=torch.float64)
tensor([-414.4219, -188.2199, -282.3491, -373.1473, -209.4512],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0693, device='cuda:0', dtype=torch.float64)
tensor([-414.2941, -187.2656, -282.9877, -374.2946, -211.0225],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0903, device='cuda:0', dtype=torch.float64)
tensor([-414.6464, -186.4353, -283.3737, -375.1833, -212.6629],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0618, device='cuda:0', dtype=torch.float64)
tensor([-414.9052, -185.8114, -283.7018, -375.8649, -213.9826],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1192, device='cuda:0', dtype=torch.float64)
tensor([-414.9502, -185.1987, -283.7350, -376.1277, -214.7950],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1131, device='cuda:0', dtype=torch.float64)
tensor([-414.1746, -184.8050, -283.2941, -375.5018, -214.2301],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0997, device='cuda:0', dtype=torch.float64)
tensor([-412.6390, -184.6616, -282.5394, -374.1254, -212.4286],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1067, device='cuda:0', dtype=torch.float64)
tensor([-411.6872, -184.8578, -282.1145, -372.7604, -211.0868],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0791, device='cuda:0', dtype=torch.float64)
tensor([-411.1264, -185.3469, -281.8962, -371.3588, -209.8679],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1359, device='cuda:0', dtype=torch.float64)
tensor([-410.7577, -186.1310, -281.7286, -369.7721, -208.7921],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1075, device='cuda:0', dtype=torch.float64)
tensor([-410.0594, -187.3620, -281.4915, -367.6652, -206.9387],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1176, device='cuda:0', dtype=torch.float64)
tensor([-408.5206, -188.7750, -281.1958, -365.2715, -204.5372],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1238, device='cuda:0', dtype=torch.float64)
tensor([-406.6094, -190.2070, -280.7175, -362.8136, -201.9969],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1222, device='cuda:0', dtype=torch.float64)
tensor([-405.4338, -191.1569, -280.1558, -360.8850, -200.6025],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1030, device='cuda:0', dtype=torch.float64)
tensor([-404.3427, -191.1159, -279.6344, -359.7700, -200.1251],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0867, device='cuda:0', dtype=torch.float64)
tensor([-403.4751, -190.3313, -279.1028, -359.2041, -200.3256],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0798, device='cuda:0', dtype=torch.float64)
tensor([-404.0333, -188.6793, -279.3443, -360.4807, -202.8884],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1069, device='cuda:0', dtype=torch.float64)
tensor([-405.8882, -186.8688, -280.0994, -362.6294, -207.2391],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0944, device='cuda:0', dtype=torch.float64)
tensor([-406.9723, -185.8487, -280.5871, -363.5296, -210.1265],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1039, device='cuda:0', dtype=torch.float64)
tensor([-406.9551, -185.2929, -280.6763, -363.5157, -211.4369],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1078, device='cuda:0', dtype=torch.float64)
tensor([-405.6124, -185.2853, -280.4422, -362.5463, -210.8278],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0847, device='cuda:0', dtype=torch.float64)
tensor([-402.8899, -185.6529, -279.5862, -360.5333, -208.0579],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0993, device='cuda:0', dtype=torch.float64)
tensor([-399.9863, -186.3052, -278.5029, -358.0838, -204.5554],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0907, device='cuda:0', dtype=torch.float64)
tensor([-396.3119, -187.8051, -277.0425, -354.4605, -199.5799],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0828, device='cuda:0', dtype=torch.float64)
tensor([-394.4003, -188.4799, -276.5820, -352.8616, -197.4579],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0866, device='cuda:0', dtype=torch.float64)
tensor([-392.1507, -189.3337, -276.2605, -351.1737, -195.3486],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1006, device='cuda:0', dtype=torch.float64)
tensor([-390.4408, -189.9619, -276.1825, -350.1872, -193.9684],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0809, device='cuda:0', dtype=torch.float64)
tensor([-390.1937, -189.9141, -276.7711, -350.4970, -194.6528],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0970, device='cuda:0', dtype=torch.float64)
tensor([-390.6540, -189.5814, -277.6479, -351.5120, -196.2185],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0763, device='cuda:0', dtype=torch.float64)
tensor([-391.5702, -189.1461, -278.7878, -352.9432, -198.3191],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0956, device='cuda:0', dtype=torch.float64)
tensor([-393.0881, -188.7072, -279.8034, -354.5012, -200.8328],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0808, device='cuda:0', dtype=torch.float64)
tensor([-394.4703, -188.1336, -280.3629, -355.8351, -203.0041],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1049, device='cuda:0', dtype=torch.float64)
tensor([-395.3884, -187.3551, -280.3937, -357.0050, -204.6734],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1233, device='cuda:0', dtype=torch.float64)
tensor([-397.0233, -186.9076, -280.7848, -358.1083, -206.7544],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0891, device='cuda:0', dtype=torch.float64)
tensor([-397.9302, -186.4401, -280.4996, -358.3587, -207.8287],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1008, device='cuda:0', dtype=torch.float64)
tensor([-398.0720, -186.0748, -279.8625, -358.0759, -208.1197],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0918, device='cuda:0', dtype=torch.float64)
tensor([-396.3812, -186.1237, -278.5135, -356.5091, -206.0740],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0729, device='cuda:0', dtype=torch.float64)
tensor([-394.9551, -186.4742, -277.3061, -354.6173, -204.0754],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0771, device='cuda:0', dtype=torch.float64)
tensor([-393.7696, -186.8276, -276.1463, -352.9534, -202.3185],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1089, device='cuda:0', dtype=torch.float64)
tensor([-391.2523, -187.6481, -274.8319, -350.6646, -199.2693],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1093, device='cuda:0', dtype=torch.float64)
tensor([-390.2295, -188.0865, -274.1506, -349.3448, -198.1246],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0981, device='cuda:0', dtype=torch.float64)
tensor([-390.4544, -188.2770, -273.9889, -348.4578, -198.3423],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0863, device='cuda:0', dtype=torch.float64)
tensor([-391.0408, -188.3708, -274.0410, -347.8711, -199.0555],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0884, device='cuda:0', dtype=torch.float64)
tensor([-392.1585, -188.4857, -274.3863, -347.5376, -200.1221],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0822, device='cuda:0', dtype=torch.float64)
tensor([-393.4527, -188.4816, -274.8579, -347.4393, -201.2724],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0988, device='cuda:0', dtype=torch.float64)
tensor([-394.0330, -188.4758, -275.0060, -347.2815, -201.7432],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0642, device='cuda:0', dtype=torch.float64)
tensor([-394.4640, -188.6110, -275.3483, -347.0428, -202.0449],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0729, device='cuda:0', dtype=torch.float64)
tensor([-395.4506, -188.3808, -275.8236, -347.1205, -203.1277],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0681, device='cuda:0', dtype=torch.float64)
tensor([-396.9788, -187.8316, -276.3425, -347.5246, -204.8648],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0945, device='cuda:0', dtype=torch.float64)
tensor([-397.6558, -187.3538, -276.6676, -347.7126, -205.9937],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1080, device='cuda:0', dtype=torch.float64)
tensor([-397.4317, -187.2347, -276.9291, -347.5725, -206.2599],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1042, device='cuda:0', dtype=torch.float64)
tensor([-397.2220, -186.8964, -276.7947, -347.1848, -206.5544],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0736, device='cuda:0', dtype=torch.float64)
tensor([-397.3098, -186.4536, -276.6824, -347.0401, -207.1814],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0755, device='cuda:0', dtype=torch.float64)
tensor([-397.0509, -186.0134, -276.6001, -347.0212, -207.6763],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0706, device='cuda:0', dtype=torch.float64)
tensor([-396.4197, -185.5387, -276.5719, -346.9844, -208.0651],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0895, device='cuda:0', dtype=torch.float64)
tensor([-394.6125, -185.3869, -276.1860, -346.3511, -206.9527],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0999, device='cuda:0', dtype=torch.float64)
tensor([-391.4532, -185.6083, -275.5087, -345.0114, -204.6159],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0885, device='cuda:0', dtype=torch.float64)
tensor([-387.2968, -186.1826, -274.3566, -342.7568, -201.0374],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2407, device='cuda:0', dtype=torch.float64)
tensor([-382.7512, -186.7669, -272.7376, -340.0345, -197.2544],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1021, device='cuda:0', dtype=torch.float64)
tensor([-379.0061, -187.3060, -271.4153, -337.7654, -194.3102],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0824, device='cuda:0', dtype=torch.float64)
tensor([-377.4408, -186.8796, -270.7344, -336.9933, -193.5329],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0896, device='cuda:0', dtype=torch.float64)
tensor([-377.4188, -186.0196, -270.5576, -337.1850, -194.0949],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0804, device='cuda:0', dtype=torch.float64)
tensor([-377.9729, -185.2032, -270.9575, -337.9144, -195.2470],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2212, device='cuda:0', dtype=torch.float64)
tensor([-378.9801, -184.2102, -271.4178, -339.2639, -196.9246],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0821, device='cuda:0', dtype=torch.float64)
tensor([-380.5539, -183.2936, -271.9201, -340.7322, -199.1609],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1123, device='cuda:0', dtype=torch.float64)
tensor([-380.2209, -182.6524, -271.4352, -340.8934, -199.6143],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1014, device='cuda:0', dtype=torch.float64)
tensor([-377.9026, -182.3702, -270.2270, -340.0124, -198.1259],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0829, device='cuda:0', dtype=torch.float64)
tensor([-375.3681, -182.6316, -269.2206, -338.5258, -196.1989],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0806, device='cuda:0', dtype=torch.float64)
tensor([-372.5564, -183.1249, -268.2899, -336.7482, -193.9677],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1024, device='cuda:0', dtype=torch.float64)
tensor([-369.6363, -183.8755, -267.3838, -334.4909, -191.6428],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1176, device='cuda:0', dtype=torch.float64)
tensor([-366.2591, -184.8858, -266.3153, -331.5771, -188.9917],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0872, device='cuda:0', dtype=torch.float64)
tensor([-364.2661, -186.0905, -266.2057, -329.1651, -187.7620],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1006, device='cuda:0', dtype=torch.float64)
tensor([-365.1284, -186.6924, -267.3369, -328.7329, -189.2874],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0886, device='cuda:0', dtype=torch.float64)
tensor([-366.8596, -187.2914, -268.7438, -328.6668, -191.4978],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0889, device='cuda:0', dtype=torch.float64)
tensor([-368.9211, -187.5060, -270.0151, -329.1428, -193.9507],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0876, device='cuda:0', dtype=torch.float64)
tensor([-371.2351, -187.8472, -271.2543, -329.3214, -196.7123],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0901, device='cuda:0', dtype=torch.float64)
tensor([-371.7248, -188.4060, -271.5202, -328.4721, -197.6101],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0916, device='cuda:0', dtype=torch.float64)
tensor([-372.5810, -188.5461, -271.8531, -328.2881, -198.9633],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1699, device='cuda:0', dtype=torch.float64)
tensor([-375.2875, -188.3967, -272.0927, -328.5586, -201.7092],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1055, device='cuda:0', dtype=torch.float64)
tensor([-378.0699, -188.0705, -272.7221, -329.3948, -205.0562],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1082, device='cuda:0', dtype=torch.float64)
tensor([-378.4556, -188.0880, -271.8965, -328.5893, -205.2874],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0811, device='cuda:0', dtype=torch.float64)
tensor([-378.9279, -187.5650, -271.1543, -328.6177, -206.1060],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1027, device='cuda:0', dtype=torch.float64)
tensor([-377.5729, -187.5730, -269.6378, -327.6120, -204.6862],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0812, device='cuda:0', dtype=torch.float64)
tensor([-375.1729, -188.0039, -267.5274, -325.7189, -201.8600],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0746, device='cuda:0', dtype=torch.float64)
tensor([-372.2792, -188.8085, -265.5607, -323.5497, -198.6960],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0777, device='cuda:0', dtype=torch.float64)
tensor([-369.8280, -189.9327, -263.8803, -320.9834, -195.5808],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0743, device='cuda:0', dtype=torch.float64)
tensor([-367.4791, -190.9707, -262.6357, -319.0950, -192.9844],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0784, device='cuda:0', dtype=torch.float64)
tensor([-365.7136, -191.3714, -261.8289, -318.2849, -191.5553],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0696, device='cuda:0', dtype=torch.float64)
tensor([-364.0730, -191.1378, -261.4454, -318.1968, -190.8700],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0717, device='cuda:0', dtype=torch.float64)
tensor([-363.1131, -190.8354, -261.1551, -318.2241, -190.4042],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0657, device='cuda:0', dtype=torch.float64)
tensor([-362.4797, -190.1883, -261.2347, -318.8468, -190.5240],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0718, device='cuda:0', dtype=torch.float64)
tensor([-361.8003, -189.4460, -261.1779, -319.4712, -190.6284],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0843, device='cuda:0', dtype=torch.float64)
tensor([-360.8012, -188.7437, -261.0768, -319.9219, -190.4624],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0895, device='cuda:0', dtype=torch.float64)
tensor([-360.0512, -187.9922, -261.0277, -320.5630, -190.3058],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1056, device='cuda:0', dtype=torch.float64)
tensor([-359.6268, -187.4239, -261.1448, -320.9060, -190.2169],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0662, device='cuda:0', dtype=torch.float64)
tensor([-358.7753, -186.8990, -260.8450, -320.7715, -189.6282],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0624, device='cuda:0', dtype=torch.float64)
tensor([-358.8990, -186.5864, -260.9915, -320.7898, -189.7466],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0854, device='cuda:0', dtype=torch.float64)
tensor([-360.7708, -185.7581, -261.7156, -322.1550, -191.3888],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1146, device='cuda:0', dtype=torch.float64)
tensor([-362.4367, -185.1495, -262.4487, -323.1371, -192.9985],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0919, device='cuda:0', dtype=torch.float64)
tensor([-363.2387, -184.8251, -262.7524, -323.4790, -194.0338],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0829, device='cuda:0', dtype=torch.float64)
tensor([-360.9133, -185.1245, -261.6305, -321.4704, -192.2581],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0701, device='cuda:0', dtype=torch.float64)
tensor([-358.8209, -185.5027, -260.6414, -319.5201, -190.7034],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0828, device='cuda:0', dtype=torch.float64)
tensor([-357.0008, -185.8325, -259.8570, -317.6561, -189.4090],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0766, device='cuda:0', dtype=torch.float64)
tensor([-354.9833, -186.5915, -259.0643, -315.3132, -188.0315],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0615, device='cuda:0', dtype=torch.float64)
tensor([-352.7410, -187.2354, -258.1776, -312.9473, -186.5357],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1010, device='cuda:0', dtype=torch.float64)
tensor([-351.7021, -187.4972, -257.6270, -311.5328, -185.9612],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0779, device='cuda:0', dtype=torch.float64)
tensor([-351.7083, -187.3897, -257.4353, -311.1157, -186.0962],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0542, device='cuda:0', dtype=torch.float64)
tensor([-352.3347, -187.2647, -257.5592, -311.1082, -186.7324],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0709, device='cuda:0', dtype=torch.float64)
tensor([-354.3212, -186.9869, -258.0861, -312.0107, -188.4064],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0756, device='cuda:0', dtype=torch.float64)
tensor([-357.6152, -186.4828, -259.1095, -313.9112, -191.3129],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1116, device='cuda:0', dtype=torch.float64)
tensor([-360.9479, -186.0488, -260.1743, -315.9632, -194.3311],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0634, device='cuda:0', dtype=torch.float64)
tensor([-363.8879, -185.6981, -261.1706, -317.8389, -196.9749],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0804, device='cuda:0', dtype=torch.float64)
tensor([-364.8202, -185.8371, -261.2118, -318.0866, -197.5845],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0813, device='cuda:0', dtype=torch.float64)
tensor([-363.7530, -186.3439, -260.0359, -316.7265, -195.8985],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0556, device='cuda:0', dtype=torch.float64)
tensor([-361.8529, -187.0165, -258.4414, -314.5925, -193.3862],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0653, device='cuda:0', dtype=torch.float64)
tensor([-360.2102, -187.4289, -257.3371, -313.0797, -191.8140],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0700, device='cuda:0', dtype=torch.float64)
tensor([-358.5052, -187.8058, -256.2893, -311.6789, -190.3428],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0671, device='cuda:0', dtype=torch.float64)
tensor([-356.9774, -188.1673, -255.4174, -310.4306, -189.1858],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0611, device='cuda:0', dtype=torch.float64)
tensor([-354.6254, -188.7619, -254.1892, -308.5814, -187.4864],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0606, device='cuda:0', dtype=torch.float64)
tensor([-352.6530, -188.9089, -253.3278, -307.3422, -186.3980],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0846, device='cuda:0', dtype=torch.float64)
tensor([-351.6507, -188.2205, -253.2102, -307.3909, -186.1789],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0611, device='cuda:0', dtype=torch.float64)
tensor([-351.1055, -187.1414, -253.4459, -308.0983, -186.3677],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0469, device='cuda:0', dtype=torch.float64)
tensor([-351.1507, -185.9616, -253.8076, -309.0630, -186.8085],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0606, device='cuda:0', dtype=torch.float64)
tensor([-350.9412, -185.1017, -253.8015, -309.3993, -186.9438],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0706, device='cuda:0', dtype=torch.float64)
tensor([-349.4802, -184.6259, -253.2699, -308.6265, -186.2012],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0904, device='cuda:0', dtype=torch.float64)
tensor([-347.5493, -184.1434, -252.6330, -307.4723, -185.1389],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0799, device='cuda:0', dtype=torch.float64)
tensor([-346.5565, -183.8767, -252.4415, -306.7427, -184.7251],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0631, device='cuda:0', dtype=torch.float64)
tensor([-348.7486, -183.3493, -253.6285, -308.3128, -186.7270],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0993, device='cuda:0', dtype=torch.float64)
tensor([-348.8307, -183.2789, -253.9262, -308.1930, -187.0539],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0758, device='cuda:0', dtype=torch.float64)
tensor([-348.7399, -183.6214, -254.1336, -307.6919, -187.1693],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0757, device='cuda:0', dtype=torch.float64)
tensor([-348.4142, -184.2193, -254.1975, -306.9080, -187.2037],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0625, device='cuda:0', dtype=torch.float64)
tensor([-347.5059, -185.1959, -254.0533, -305.4263, -186.7280],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0866, device='cuda:0', dtype=torch.float64)
tensor([-345.8938, -186.3530, -253.5234, -303.3835, -185.7691],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0980, device='cuda:0', dtype=torch.float64)
tensor([-346.5379, -187.1513, -253.8770, -303.1756, -186.4142],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0624, device='cuda:0', dtype=torch.float64)
tensor([-347.6919, -187.8647, -254.5046, -303.4651, -187.3602],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0699, device='cuda:0', dtype=torch.float64)
tensor([-348.8509, -188.1520, -255.0065, -304.0801, -188.3246],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0835, device='cuda:0', dtype=torch.float64)
tensor([-350.3878, -188.3885, -255.8356, -304.9593, -189.6928],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0665, device='cuda:0', dtype=torch.float64)
tensor([-350.5032, -188.9797, -255.8413, -304.6479, -189.8830],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0759, device='cuda:0', dtype=torch.float64)
tensor([-350.9385, -189.3430, -255.9025, -304.5992, -190.3135],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0741, device='cuda:0', dtype=torch.float64)
tensor([-351.3311, -189.0843, -255.6445, -304.8077, -190.6875],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0640, device='cuda:0', dtype=torch.float64)
tensor([-351.3927, -188.9462, -255.2534, -304.6488, -190.6808],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0607, device='cuda:0', dtype=torch.float64)
tensor([-350.7901, -188.7536, -254.2661, -304.2203, -190.1571],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0659, device='cuda:0', dtype=torch.float64)
tensor([-350.0326, -188.6996, -253.2730, -303.6874, -189.5064],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0775, device='cuda:0', dtype=torch.float64)
tensor([-349.3110, -188.5420, -252.6794, -303.5155, -189.1150],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0638, device='cuda:0', dtype=torch.float64)
tensor([-348.1204, -188.6332, -251.7972, -302.8143, -188.2678],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0735, device='cuda:0', dtype=torch.float64)
tensor([-347.4578, -188.5659, -251.5374, -302.7196, -187.9371],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1382, device='cuda:0', dtype=torch.float64)
tensor([-348.0946, -187.7768, -252.2795, -304.1114, -188.8063],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0915, device='cuda:0', dtype=torch.float64)
tensor([-348.0086, -187.6451, -252.8325, -304.5967, -188.9914],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0885, device='cuda:0', dtype=torch.float64)
tensor([-347.3228, -187.8679, -252.8515, -304.4190, -188.5699],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0750, device='cuda:0', dtype=torch.float64)
tensor([-346.0422, -188.2599, -252.6434, -303.6911, -187.6928],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0700, device='cuda:0', dtype=torch.float64)
tensor([-344.0927, -189.2826, -252.3587, -302.1713, -186.3924],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0517, device='cuda:0', dtype=torch.float64)
tensor([-343.2386, -189.7909, -252.6865, -301.6972, -185.8992],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0626, device='cuda:0', dtype=torch.float64)
tensor([-343.3522, -189.9177, -253.5796, -301.9908, -186.1703],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0656, device='cuda:0', dtype=torch.float64)
tensor([-343.6902, -189.8242, -254.3681, -302.4404, -186.6461],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0772, device='cuda:0', dtype=torch.float64)
tensor([-343.1000, -189.7855, -254.0179, -302.1461, -186.2476],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0604, device='cuda:0', dtype=torch.float64)
tensor([-343.1169, -189.2700, -253.7617, -302.3977, -186.2381],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0657, device='cuda:0', dtype=torch.float64)
tensor([-343.1801, -188.4016, -253.2124, -302.7949, -186.1923],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0650, device='cuda:0', dtype=torch.float64)
tensor([-343.7968, -187.4353, -253.1962, -303.7023, -186.6937],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0522, device='cuda:0', dtype=torch.float64)
tensor([-344.5091, -186.5459, -253.2794, -304.7289, -187.4118],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0701, device='cuda:0', dtype=torch.float64)
tensor([-344.0913, -186.0001, -252.3780, -304.6603, -187.2670],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0497, device='cuda:0', dtype=torch.float64)
tensor([-343.7032, -185.4045, -251.6963, -304.6705, -187.2087],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0693, device='cuda:0', dtype=torch.float64)
tensor([-343.0232, -185.2393, -250.9987, -304.1517, -186.9761],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0752, device='cuda:0', dtype=torch.float64)
tensor([-341.7358, -185.7215, -250.3320, -302.8125, -186.2758],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0692, device='cuda:0', dtype=torch.float64)
tensor([-340.8782, -186.0436, -249.9639, -302.0518, -185.8505],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0767, device='cuda:0', dtype=torch.float64)
tensor([-340.2479, -186.4382, -250.1745, -301.3155, -185.8331],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0726, device='cuda:0', dtype=torch.float64)
tensor([-340.1376, -186.6671, -250.8732, -301.2412, -186.1382],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0710, device='cuda:0', dtype=torch.float64)
tensor([-339.8148, -186.8851, -251.4623, -300.9786, -186.1765],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0811, device='cuda:0', dtype=torch.float64)
tensor([-339.1910, -187.3007, -251.8250, -300.4027, -186.1427],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2406, device='cuda:0', dtype=torch.float64)
tensor([-338.6329, -187.7961, -252.5775, -299.9270, -186.3216],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0599, device='cuda:0', dtype=torch.float64)
tensor([-337.7672, -187.9864, -252.2925, -299.1951, -186.0240],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0563, device='cuda:0', dtype=torch.float64)
tensor([-337.8306, -187.7235, -252.7869, -299.5413, -186.5289],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0544, device='cuda:0', dtype=torch.float64)
tensor([-337.5241, -187.6579, -253.0242, -299.3853, -186.7784],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0644, device='cuda:0', dtype=torch.float64)
tensor([-336.7796, -187.6992, -252.7362, -298.8411, -186.6690],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0604, device='cuda:0', dtype=torch.float64)
tensor([-336.1497, -187.7438, -252.4968, -298.3644, -186.5890],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0664, device='cuda:0', dtype=torch.float64)
tensor([-335.3241, -187.7789, -251.8657, -297.6969, -186.3456],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0568, device='cuda:0', dtype=torch.float64)
tensor([-334.2154, -188.0019, -250.7746, -296.6543, -185.8748],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0702, device='cuda:0', dtype=torch.float64)
tensor([-332.9087, -188.5250, -249.8888, -295.3511, -185.3487],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1210, device='cuda:0', dtype=torch.float64)
tensor([-331.7056, -188.9225, -249.0665, -294.2863, -185.0644],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0488, device='cuda:0', dtype=torch.float64)
tensor([-331.0783, -188.9895, -248.7316, -293.8834, -185.1696],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0532, device='cuda:0', dtype=torch.float64)
tensor([-330.3682, -189.0377, -248.2746, -293.4025, -185.1425],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0507, device='cuda:0', dtype=torch.float64)
tensor([-329.5410, -189.3061, -247.8296, -292.7943, -185.0948],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0458, device='cuda:0', dtype=torch.float64)
tensor([-328.8126, -189.6957, -247.6477, -292.1876, -185.1389],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0612, device='cuda:0', dtype=torch.float64)
tensor([-328.0434, -190.0900, -247.5346, -291.4615, -184.9018],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0568, device='cuda:0', dtype=torch.float64)
tensor([-327.7510, -189.9576, -247.5801, -291.2706, -185.1010],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0671, device='cuda:0', dtype=torch.float64)
tensor([-327.5984, -189.9043, -248.0363, -291.2803, -185.4759],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0565, device='cuda:0', dtype=torch.float64)
tensor([-327.9145, -189.4844, -248.9613, -291.8920, -186.2194],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0509, device='cuda:0', dtype=torch.float64)
tensor([-328.3708, -188.9092, -249.7348, -292.4859, -186.7795],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0672, device='cuda:0', dtype=torch.float64)
tensor([-328.5554, -188.4103, -249.9835, -292.8210, -187.0063],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0531, device='cuda:0', dtype=torch.float64)
tensor([-328.4812, -187.6984, -249.4630, -293.0202, -186.6616],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1019, device='cuda:0', dtype=torch.float64)
tensor([-328.4479, -186.7374, -248.8097, -293.3744, -186.0424],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0574, device='cuda:0', dtype=torch.float64)
tensor([-327.9781, -185.9151, -247.8246, -293.3839, -185.0094],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0518, device='cuda:0', dtype=torch.float64)
tensor([-327.3460, -185.3891, -246.8267, -293.1424, -184.0601],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0496, device='cuda:0', dtype=torch.float64)
tensor([-327.1541, -185.0559, -246.2745, -293.1773, -183.6527],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0539, device='cuda:0', dtype=torch.float64)
tensor([-326.7317, -185.0236, -245.5771, -292.7528, -183.2317],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0670, device='cuda:0', dtype=torch.float64)
tensor([-325.9533, -185.5326, -244.8162, -291.5909, -182.8871],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0554, device='cuda:0', dtype=torch.float64)
tensor([-325.6220, -186.3289, -244.8979, -290.7867, -183.1820],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0485, device='cuda:0', dtype=torch.float64)
tensor([-324.9119, -187.2698, -244.5197, -289.6740, -183.1950],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0435, device='cuda:0', dtype=torch.float64)
tensor([-324.2576, -187.9742, -244.1633, -288.8732, -183.2722],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0664, device='cuda:0', dtype=torch.float64)
tensor([-323.7488, -188.5662, -243.9522, -288.2500, -183.3983],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0549, device='cuda:0', dtype=torch.float64)
tensor([-323.8554, -188.5953, -244.4811, -288.4551, -183.9022],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0500, device='cuda:0', dtype=torch.float64)
tensor([-323.9857, -188.6888, -245.2654, -288.5994, -184.5611],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0560, device='cuda:0', dtype=torch.float64)
tensor([-324.2987, -188.4643, -245.9554, -289.0265, -185.1955],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0513, device='cuda:0', dtype=torch.float64)
tensor([-325.2389, -187.9150, -247.8908, -290.3724, -186.4343],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0560, device='cuda:0', dtype=torch.float64)
tensor([-326.3022, -187.2853, -249.7746, -291.8655, -187.6875],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0709, device='cuda:0', dtype=torch.float64)
tensor([-327.0111, -186.8069, -251.1733, -292.9740, -188.6065],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0649, device='cuda:0', dtype=torch.float64)
tensor([-326.7815, -186.7449, -251.4246, -292.9299, -188.7239],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0439, device='cuda:0', dtype=torch.float64)
tensor([-325.8121, -186.9978, -250.4526, -291.9593, -188.0164],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0559, device='cuda:0', dtype=torch.float64)
tensor([-324.6566, -187.4048, -249.2634, -290.7590, -187.1989],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0632, device='cuda:0', dtype=torch.float64)
tensor([-323.3067, -188.0834, -248.3478, -289.3366, -186.3660],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0602, device='cuda:0', dtype=torch.float64)
tensor([-322.0734, -188.5441, -247.6684, -288.2451, -185.7542],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0621, device='cuda:0', dtype=torch.float64)
tensor([-320.7563, -189.0363, -246.4713, -287.0419, -184.9688],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0666, device='cuda:0', dtype=torch.float64)
tensor([-319.9044, -189.1289, -245.8319, -286.3287, -184.5075],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0604, device='cuda:0', dtype=torch.float64)
tensor([-319.1216, -189.1608, -245.2195, -285.6874, -184.0811],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0497, device='cuda:0', dtype=torch.float64)
tensor([-318.7587, -188.7973, -245.1826, -285.6444, -183.9734],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0738, device='cuda:0', dtype=torch.float64)
tensor([-319.1025, -187.7545, -245.6121, -286.3944, -184.0968],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0533, device='cuda:0', dtype=torch.float64)
tensor([-319.5103, -186.7078, -246.1001, -287.2308, -184.2119],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1029, device='cuda:0', dtype=torch.float64)
tensor([-319.9848, -185.7740, -246.6491, -288.1656, -184.4471],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0424, device='cuda:0', dtype=torch.float64)
tensor([-320.6352, -185.2109, -247.9638, -289.2981, -185.2978],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0417, device='cuda:0', dtype=torch.float64)
tensor([-321.4094, -184.8483, -249.5944, -290.5104, -186.4184],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0483, device='cuda:0', dtype=torch.float64)
tensor([-321.0945, -185.0573, -250.0350, -290.2688, -186.6391],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0450, device='cuda:0', dtype=torch.float64)
tensor([-319.8358, -185.4101, -248.9916, -288.8818, -185.7374],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0497, device='cuda:0', dtype=torch.float64)
tensor([-318.1578, -185.7196, -246.9214, -286.9726, -184.3136],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0464, device='cuda:0', dtype=torch.float64)
tensor([-316.4305, -186.0299, -244.7315, -285.0425, -182.9563],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0422, device='cuda:0', dtype=torch.float64)
tensor([-314.6908, -186.5774, -242.7544, -282.9892, -181.7871],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0582, device='cuda:0', dtype=torch.float64)
tensor([-313.7352, -186.8623, -241.8544, -281.9930, -181.3544],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0553, device='cuda:0', dtype=torch.float64)
tensor([-312.8364, -187.6104, -241.4505, -280.8581, -181.2769],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0509, device='cuda:0', dtype=torch.float64)
tensor([-312.8378, -187.5844, -242.1006, -281.1304, -181.7195],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0438, device='cuda:0', dtype=torch.float64)
tensor([-313.1823, -187.5769, -243.4455, -281.7362, -182.4696],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0541, device='cuda:0', dtype=torch.float64)
tensor([-313.7808, -187.6427, -245.1070, -282.6762, -183.4725],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0539, device='cuda:0', dtype=torch.float64)
tensor([-314.2901, -187.5820, -246.3968, -283.5166, -184.3163],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0554, device='cuda:0', dtype=torch.float64)
tensor([-314.4097, -187.7608, -247.0939, -283.7140, -184.8240],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0610, device='cuda:0', dtype=torch.float64)
tensor([-314.0341, -187.9062, -246.6411, -283.3302, -184.7218],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0583, device='cuda:0', dtype=torch.float64)
tensor([-313.4112, -188.2026, -245.9468, -282.7515, -184.4866],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0424, device='cuda:0', dtype=torch.float64)
tensor([-312.8596, -188.3794, -245.3417, -282.2978, -184.3317],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0560, device='cuda:0', dtype=torch.float64)
tensor([-312.0960, -188.7784, -244.5252, -281.4353, -184.1138],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0491, device='cuda:0', dtype=torch.float64)
tensor([-311.3470, -189.0262, -243.4117, -280.6578, -183.7102],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0545, device='cuda:0', dtype=torch.float64)
tensor([-311.0111, -188.8786, -242.8665, -280.5391, -183.5987],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0475, device='cuda:0', dtype=torch.float64)
tensor([-310.7949, -188.7601, -242.8039, -280.5083, -183.5798],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0507, device='cuda:0', dtype=torch.float64)
tensor([-310.8065, -188.3806, -242.9807, -280.9290, -183.6489],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0533, device='cuda:0', dtype=torch.float64)
tensor([-310.9664, -187.8805, -243.1721, -281.5244, -183.7276],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0672, device='cuda:0', dtype=torch.float64)
tensor([-311.1874, -187.1188, -243.1486, -282.2980, -183.6997],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0358, device='cuda:0', dtype=torch.float64)
tensor([-311.6254, -186.3699, -243.7500, -283.3038, -184.1203],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0409, device='cuda:0', dtype=torch.float64)
tensor([-311.3676, -186.3146, -243.9789, -283.0768, -184.2994],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0608, device='cuda:0', dtype=torch.float64)
tensor([-310.7708, -186.5683, -243.9529, -282.4135, -184.3775],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0520, device='cuda:0', dtype=torch.float64)
tensor([-310.2116, -186.8886, -244.2019, -281.8115, -184.5515],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0592, device='cuda:0', dtype=torch.float64)
tensor([-309.9461, -186.9994, -244.6105, -281.6317, -184.8369],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0588, device='cuda:0', dtype=torch.float64)
tensor([-309.7091, -187.1083, -244.8809, -281.5212, -185.0988],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0414, device='cuda:0', dtype=torch.float64)
tensor([-309.2772, -187.3422, -245.0839, -281.1540, -185.1651],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0493, device='cuda:0', dtype=torch.float64)
tensor([-308.5981, -187.7898, -245.1490, -280.4390, -185.0329],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0544, device='cuda:0', dtype=torch.float64)
tensor([-308.1397, -187.9610, -245.1330, -280.0277, -184.8931],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0396, device='cuda:0', dtype=torch.float64)
tensor([-307.9099, -187.8373, -245.2430, -279.9168, -184.7412],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0576, device='cuda:0', dtype=torch.float64)
tensor([-308.1659, -187.1328, -245.6563, -280.5759, -184.9432],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0378, device='cuda:0', dtype=torch.float64)
tensor([-308.6065, -186.2889, -245.9866, -281.5023, -185.1479],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0495, device='cuda:0', dtype=torch.float64)
tensor([-308.3948, -185.9610, -245.5125, -281.6190, -185.0133],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0498, device='cuda:0', dtype=torch.float64)
tensor([-307.4215, -186.1512, -244.0024, -280.6564, -184.2710],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0503, device='cuda:0', dtype=torch.float64)
tensor([-306.4141, -186.5649, -242.9112, -279.4933, -183.8736],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0517, device='cuda:0', dtype=torch.float64)
tensor([-305.7340, -186.7367, -242.3982, -278.7804, -183.7295],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0479, device='cuda:0', dtype=torch.float64)
tensor([-304.7992, -187.2169, -241.7496, -277.6144, -183.4338],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0371, device='cuda:0', dtype=torch.float64)
tensor([-303.9694, -187.6856, -241.1239, -276.5526, -183.1604],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0505, device='cuda:0', dtype=torch.float64)
tensor([-303.8073, -187.6509, -241.5527, -276.3903, -183.3961],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0516, device='cuda:0', dtype=torch.float64)
tensor([-304.1474, -187.1961, -242.4492, -276.9125, -183.7946],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0431, device='cuda:0', dtype=torch.float64)
tensor([-304.6036, -186.7934, -243.7106, -277.5176, -184.3448],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0477, device='cuda:0', dtype=torch.float64)
tensor([-305.4364, -186.1107, -245.3541, -278.6815, -185.1668],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0433, device='cuda:0', dtype=torch.float64)
tensor([-306.1630, -185.7034, -246.6460, -279.6124, -185.9188],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0397, device='cuda:0', dtype=torch.float64)
tensor([-306.7729, -185.5201, -247.8651, -280.3161, -186.7041],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0346, device='cuda:0', dtype=torch.float64)
tensor([-306.8169, -185.5580, -248.1830, -280.3177, -186.9189],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0334, device='cuda:0', dtype=torch.float64)
tensor([-306.1801, -185.7939, -247.0902, -279.4562, -186.3302],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0483, device='cuda:0', dtype=torch.float64)
tensor([-305.6485, -185.9449, -245.9124, -278.8532, -185.7940],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0416, device='cuda:0', dtype=torch.float64)
tensor([-305.6750, -185.8244, -245.9339, -278.9647, -185.8471],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0442, device='cuda:0', dtype=torch.float64)
tensor([-305.5428, -185.9380, -246.0337, -278.7813, -185.9935],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0375, device='cuda:0', dtype=torch.float64)
tensor([-305.4659, -185.9143, -246.2244, -278.7857, -186.1969],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0481, device='cuda:0', dtype=torch.float64)
tensor([-304.6361, -186.3525, -245.2691, -277.8178, -185.9269],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0561, device='cuda:0', dtype=torch.float64)
tensor([-304.2941, -186.4900, -245.1010, -277.5256, -186.0260],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0340, device='cuda:0', dtype=torch.float64)
tensor([-304.3116, -186.2957, -245.3493, -277.7064, -186.2445],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0398, device='cuda:0', dtype=torch.float64)
tensor([-304.2335, -186.1150, -245.3796, -277.7911, -186.4603],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0398, device='cuda:0', dtype=torch.float64)
tensor([-303.8632, -186.1398, -244.6631, -277.4736, -186.3654],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0590, device='cuda:0', dtype=torch.float64)
tensor([-303.6784, -186.0396, -244.1093, -277.3464, -186.2247],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0768, device='cuda:0', dtype=torch.float64)
tensor([-303.6770, -185.7916, -243.8298, -277.4983, -186.1727],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0540, device='cuda:0', dtype=torch.float64)
tensor([-303.2949, -185.7738, -243.1582, -277.1851, -185.8522],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0562, device='cuda:0', dtype=torch.float64)
tensor([-302.9274, -185.7766, -242.3342, -276.9295, -185.4372],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0467, device='cuda:0', dtype=torch.float64)
tensor([-302.5598, -185.7704, -241.4635, -276.6305, -184.9687],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0489, device='cuda:0', dtype=torch.float64)
tensor([-302.0520, -185.8560, -240.4851, -276.1377, -184.3190],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5279, device='cuda:0', dtype=torch.float64)
tensor([-301.9528, -185.2249, -239.7648, -276.3728, -183.5799],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0439, device='cuda:0', dtype=torch.float64)
tensor([-301.7421, -184.4290, -239.0673, -276.7182, -182.9086],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0455, device='cuda:0', dtype=torch.float64)
tensor([-301.2130, -183.8011, -238.3336, -276.6318, -182.2866],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0424, device='cuda:0', dtype=torch.float64)
tensor([-300.6612, -183.4074, -237.8709, -276.3287, -181.9133],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0510, device='cuda:0', dtype=torch.float64)
tensor([-299.9890, -183.3779, -237.3101, -275.6495, -181.6355],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0345, device='cuda:0', dtype=torch.float64)
tensor([-299.9644, -183.0079, -237.6986, -275.8227, -181.8621],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2071, device='cuda:0', dtype=torch.float64)
tensor([-299.6185, -182.8660, -238.1147, -275.5635, -182.1638],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0399, device='cuda:0', dtype=torch.float64)
tensor([-299.5064, -182.8967, -238.9500, -275.5414, -182.7491],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0525, device='cuda:0', dtype=torch.float64)
tensor([-299.6194, -182.6956, -239.9790, -275.8916, -183.4645],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0396, device='cuda:0', dtype=torch.float64)
tensor([-299.6171, -182.7247, -241.0005, -275.9401, -184.1320],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0419, device='cuda:0', dtype=torch.float64)
tensor([-299.4177, -183.0958, -241.5478, -275.6198, -184.6750],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0362, device='cuda:0', dtype=torch.float64)
tensor([-298.5096, -183.4885, -240.6227, -274.4287, -184.3455],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0485, device='cuda:0', dtype=torch.float64)
tensor([-297.5197, -183.7275, -239.1414, -273.2351, -183.7705],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0572, device='cuda:0', dtype=torch.float64)
tensor([-296.8238, -183.7052, -238.1626, -272.5180, -183.4485],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0933, device='cuda:0', dtype=torch.float64)
tensor([-296.0378, -183.4341, -236.8335, -271.7699, -182.9775],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0470, device='cuda:0', dtype=torch.float64)
tensor([-295.6717, -182.9567, -236.2434, -271.6862, -182.8088],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0964, device='cuda:0', dtype=torch.float64)
tensor([-295.3478, -182.5525, -235.8761, -271.6529, -182.6913],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0359, device='cuda:0', dtype=torch.float64)
tensor([-295.2366, -182.2153, -236.0610, -271.8512, -182.8464],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0394, device='cuda:0', dtype=torch.float64)
tensor([-295.6577, -181.7984, -237.1933, -272.7339, -183.6079],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0425, device='cuda:0', dtype=torch.float64)
tensor([-295.5680, -181.8983, -237.8539, -272.7639, -184.1278],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0363, device='cuda:0', dtype=torch.float64)
tensor([-295.2674, -182.2821, -238.4230, -272.4329, -184.5932],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0343, device='cuda:0', dtype=torch.float64)
tensor([-294.4725, -182.8624, -238.2159, -271.4643, -184.5693],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0422, device='cuda:0', dtype=torch.float64)
tensor([-293.9715, -183.1994, -238.1885, -270.9445, -184.6857],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0454, device='cuda:0', dtype=torch.float64)
tensor([-293.3685, -183.5645, -237.8917, -270.2996, -184.6540],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1314, device='cuda:0', dtype=torch.float64)
tensor([-293.0792, -183.6915, -238.0838, -270.1625, -184.9249],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0778, device='cuda:0', dtype=torch.float64)
tensor([-292.9006, -183.7874, -238.7096, -270.2240, -185.4108],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0446, device='cuda:0', dtype=torch.float64)
tensor([-292.4296, -184.1714, -239.0120, -269.8577, -185.6866],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0349, device='cuda:0', dtype=torch.float64)
tensor([-291.5928, -184.7705, -238.8519, -268.9698, -185.6123],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0476, device='cuda:0', dtype=torch.float64)
tensor([-291.1897, -184.9860, -239.0785, -268.7473, -185.8534],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0416, device='cuda:0', dtype=torch.float64)
tensor([-290.6572, -185.2158, -239.0440, -268.3545, -185.9120],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0503, device='cuda:0', dtype=torch.float64)
tensor([-290.3575, -185.1713, -239.1563, -268.3994, -186.1157],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0532, device='cuda:0', dtype=torch.float64)
tensor([-290.1255, -184.9612, -239.0078, -268.5196, -186.1467],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0606, device='cuda:0', dtype=torch.float64)
tensor([-289.6960, -185.0503, -239.1044, -268.3733, -186.4244],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0387, device='cuda:0', dtype=torch.float64)
tensor([-289.5154, -184.8742, -239.3929, -268.5515, -186.8248],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0435, device='cuda:0', dtype=torch.float64)
tensor([-289.4357, -184.5829, -239.7227, -268.8695, -187.1698],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0433, device='cuda:0', dtype=torch.float64)
tensor([-288.7714, -184.8514, -239.3446, -268.2949, -187.0739],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0375, device='cuda:0', dtype=torch.float64)
tensor([-288.1217, -185.0846, -238.6581, -267.6526, -186.7392],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0477, device='cuda:0', dtype=torch.float64)
tensor([-287.3620, -185.4788, -237.7850, -266.7973, -186.1987],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0405, device='cuda:0', dtype=torch.float64)
tensor([-286.8000, -185.7947, -237.1694, -266.1635, -185.7447],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0332, device='cuda:0', dtype=torch.float64)
tensor([-286.5242, -185.7317, -236.8684, -266.0134, -185.4581],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0421, device='cuda:0', dtype=torch.float64)
tensor([-286.0332, -186.0373, -236.1792, -265.3589, -184.9942],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0446, device='cuda:0', dtype=torch.float64)
tensor([-286.0765, -185.6070, -236.3463, -265.6674, -185.0229],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0317, device='cuda:0', dtype=torch.float64)
tensor([-286.4407, -184.9239, -237.0450, -266.4527, -185.3685],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0433, device='cuda:0', dtype=torch.float64)
tensor([-286.8877, -184.2412, -238.0239, -267.3477, -185.9175],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0411, device='cuda:0', dtype=torch.float64)
tensor([-286.8252, -184.0851, -238.0908, -267.3725, -185.9443],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0360, device='cuda:0', dtype=torch.float64)
tensor([-286.3973, -184.3610, -237.7251, -266.7323, -185.7304],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0405, device='cuda:0', dtype=torch.float64)
tensor([-286.0640, -184.5308, -237.5898, -266.3500, -185.6488],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0434, device='cuda:0', dtype=torch.float64)
tensor([-285.5401, -184.9244, -237.4106, -265.6959, -185.5523],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0555, device='cuda:0', dtype=torch.float64)
tensor([-285.0747, -185.2514, -237.3854, -265.1180, -185.4415],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0673, device='cuda:0', dtype=torch.float64)
tensor([-284.6397, -185.1607, -236.7892, -264.9313, -185.0265],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0462, device='cuda:0', dtype=torch.float64)
tensor([-284.1081, -185.2457, -236.2076, -264.5372, -184.6730],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0478, device='cuda:0', dtype=torch.float64)
tensor([-283.6426, -185.1313, -235.5049, -264.3557, -184.2382],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0407, device='cuda:0', dtype=torch.float64)
tensor([-283.3189, -184.5580, -235.0434, -264.6459, -183.9092],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0548, device='cuda:0', dtype=torch.float64)
tensor([-283.0345, -183.8827, -234.7894, -265.0083, -183.6668],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0396, device='cuda:0', dtype=torch.float64)
tensor([-282.8093, -183.2314, -234.8734, -265.4066, -183.5520],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0361, device='cuda:0', dtype=torch.float64)
tensor([-282.4652, -183.1041, -234.7929, -265.3199, -183.4734],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0414, device='cuda:0', dtype=torch.float64)
tensor([-282.0990, -182.9968, -234.6508, -265.2203, -183.3914],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0618, device='cuda:0', dtype=torch.float64)
tensor([-281.4514, -183.4904, -233.9393, -264.3758, -183.0853],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0457, device='cuda:0', dtype=torch.float64)
tensor([-281.2677, -183.5707, -234.0974, -264.3938, -183.3526],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0376, device='cuda:0', dtype=torch.float64)
tensor([-281.4411, -183.2826, -235.2197, -265.1421, -184.1266],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0288, device='cuda:0', dtype=torch.float64)
tensor([-281.6445, -183.0627, -236.4344, -265.8520, -185.0110],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0821, device='cuda:0', dtype=torch.float64)
tensor([-282.0784, -182.6503, -237.8343, -266.8359, -186.0402],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0513, device='cuda:0', dtype=torch.float64)
tensor([-281.8064, -182.8599, -238.1417, -266.6135, -186.4511],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0384, device='cuda:0', dtype=torch.float64)
tensor([-281.5473, -183.0907, -238.5459, -266.4077, -186.9162],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0606, device='cuda:0', dtype=torch.float64)
tensor([-281.3951, -183.2221, -239.0829, -266.3698, -187.3703],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0505, device='cuda:0', dtype=torch.float64)
tensor([-280.8793, -183.7890, -239.4577, -265.7148, -187.7145],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0563, device='cuda:0', dtype=torch.float64)
tensor([-279.7756, -184.7233, -238.4832, -264.1191, -187.2600],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0385, device='cuda:0', dtype=torch.float64)
tensor([-278.4911, -186.0205, -237.0642, -262.0424, -186.5381],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1311, device='cuda:0', dtype=torch.float64)
tensor([-277.4010, -187.1155, -235.5807, -260.2639, -185.6561],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0657, device='cuda:0', dtype=torch.float64)
tensor([-276.5964, -187.9370, -234.6551, -258.9958, -185.0867],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.2719, device='cuda:0', dtype=torch.float64)
tensor([-276.7159, -187.3529, -235.0415, -259.4922, -184.8648],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0369, device='cuda:0', dtype=torch.float64)
tensor([-276.8015, -186.7529, -235.4236, -260.0815, -184.8588],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0370, device='cuda:0', dtype=torch.float64)
tensor([-277.3186, -185.5716, -236.4984, -261.5840, -185.3462],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(2.0406, device='cuda:0', dtype=torch.float64)
tensor([-278.1923, -183.7871, -237.9328, -263.9315, -185.9091],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0414, device='cuda:0', dtype=torch.float64)
tensor([-278.5320, -182.7305, -237.9822, -264.9528, -185.6947],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0282, device='cuda:0', dtype=torch.float64)
tensor([-278.8382, -181.8899, -237.9847, -265.7155, -185.4110],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1667, device='cuda:0', dtype=torch.float64)
tensor([-278.4709, -181.5021, -236.9651, -265.3638, -184.3410],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0295, device='cuda:0', dtype=torch.float64)
tensor([-277.2871, -181.8367, -234.8255, -263.5945, -182.7453],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0344, device='cuda:0', dtype=torch.float64)
tensor([-276.1210, -182.7625, -232.9220, -261.5642, -181.6331],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0404, device='cuda:0', dtype=torch.float64)
tensor([-275.2431, -183.4624, -231.6527, -260.0096, -180.9337],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0334, device='cuda:0', dtype=torch.float64)
tensor([-274.7818, -184.0434, -231.1821, -259.1522, -180.7591],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0396, device='cuda:0', dtype=torch.float64)
tensor([-275.3361, -183.7503, -232.2068, -260.1975, -181.2290],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0406, device='cuda:0', dtype=torch.float64)
tensor([-276.7930, -182.8694, -234.6135, -262.7184, -182.4090],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0372, device='cuda:0', dtype=torch.float64)
tensor([-278.3101, -182.4026, -237.1145, -265.0037, -183.9712],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0372, device='cuda:0', dtype=torch.float64)
tensor([-278.9541, -182.6423, -238.3608, -265.7902, -184.9994],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0457, device='cuda:0', dtype=torch.float64)
tensor([-279.1267, -183.0139, -238.9798, -265.9052, -185.6658],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0397, device='cuda:0', dtype=torch.float64)
tensor([-278.7729, -183.7292, -239.0390, -265.3030, -186.0100],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0377, device='cuda:0', dtype=torch.float64)
tensor([-278.1124, -184.7626, -238.9448, -264.2389, -186.3318],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0306, device='cuda:0', dtype=torch.float64)
tensor([-276.9762, -186.2354, -238.1042, -262.3254, -186.2077],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0409, device='cuda:0', dtype=torch.float64)
tensor([-276.0249, -187.7394, -237.3804, -260.4735, -186.1677],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0362, device='cuda:0', dtype=torch.float64)
tensor([-275.3402, -188.7706, -237.1114, -259.2631, -186.3389],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0339, device='cuda:0', dtype=torch.float64)
tensor([-274.7560, -189.5853, -237.0946, -258.3361, -186.6305],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0397, device='cuda:0', dtype=torch.float64)
tensor([-274.1184, -190.4736, -236.9187, -257.2229, -186.7983],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0395, device='cuda:0', dtype=torch.float64)
tensor([-273.7409, -190.7048, -237.1458, -256.8503, -187.0311],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0597, device='cuda:0', dtype=torch.float64)
tensor([-273.6763, -190.2641, -237.7860, -257.2372, -187.4343],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0409, device='cuda:0', dtype=torch.float64)
tensor([-273.8739, -189.3638, -238.7835, -258.2430, -188.0315],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0319, device='cuda:0', dtype=torch.float64)
tensor([-274.1103, -188.4841, -239.6539, -259.2985, -188.5858],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0375, device='cuda:0', dtype=torch.float64)
tensor([-274.3314, -187.6911, -240.4364, -260.2543, -189.0631],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0408, device='cuda:0', dtype=torch.float64)
tensor([-274.5818, -186.9361, -241.0858, -261.0713, -189.4387],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0408, device='cuda:0', dtype=torch.float64)
tensor([-274.2273, -186.4848, -240.4127, -260.8718, -188.8988],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0359, device='cuda:0', dtype=torch.float64)
tensor([-273.7176, -186.2229, -239.3007, -260.3080, -188.1082],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0449, device='cuda:0', dtype=torch.float64)
tensor([-273.1373, -185.8379, -238.1182, -259.7617, -187.1764],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0358, device='cuda:0', dtype=torch.float64)
tensor([-272.1446, -186.2630, -236.1109, -258.1352, -185.9708],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0292, device='cuda:0', dtype=torch.float64)
tensor([-271.2368, -186.8233, -234.4305, -256.5604, -185.1225],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0406, device='cuda:0', dtype=torch.float64)
tensor([-270.5771, -187.1643, -233.3580, -255.4528, -184.6913],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0359, device='cuda:0', dtype=torch.float64)
tensor([-270.3692, -186.8331, -233.4551, -255.4848, -184.8057],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0333, device='cuda:0', dtype=torch.float64)
tensor([-270.3553, -186.1961, -234.2298, -256.0754, -185.2012],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0410, device='cuda:0', dtype=torch.float64)
tensor([-270.1809, -185.8215, -234.5656, -256.2305, -185.3447],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0315, device='cuda:0', dtype=torch.float64)
tensor([-270.2400, -185.2071, -235.3899, -256.9020, -185.7343],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0274, device='cuda:0', dtype=torch.float64)
tensor([-270.3109, -184.8376, -236.3569, -257.5073, -186.3373],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0402, device='cuda:0', dtype=torch.float64)
tensor([-270.4701, -184.5714, -237.3992, -258.1617, -187.0463],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0355, device='cuda:0', dtype=torch.float64)
tensor([-270.5163, -184.3982, -238.0720, -258.5883, -187.5507],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0523, device='cuda:0', dtype=torch.float64)
tensor([-270.3241, -184.4051, -238.3005, -258.5783, -187.7728],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0693, device='cuda:0', dtype=torch.float64)
tensor([-269.9316, -184.9065, -238.1362, -257.9588, -187.8304],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0381, device='cuda:0', dtype=torch.float64)
tensor([-269.3477, -185.5950, -237.2857, -256.8204, -187.3824],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0409, device='cuda:0', dtype=torch.float64)
tensor([-268.7561, -186.3615, -236.2601, -255.5677, -186.8741],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0688, device='cuda:0', dtype=torch.float64)
tensor([-268.2880, -186.9805, -235.4211, -254.6455, -186.5363],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1053, device='cuda:0', dtype=torch.float64)
tensor([-268.0225, -187.2584, -234.9760, -254.2049, -186.4314],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0274, device='cuda:0', dtype=torch.float64)
tensor([-267.7613, -187.4248, -234.3299, -253.8331, -186.1998],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0364, device='cuda:0', dtype=torch.float64)
tensor([-267.7314, -187.0515, -234.4414, -254.1901, -186.2705],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0378, device='cuda:0', dtype=torch.float64)
tensor([-268.1698, -186.1564, -235.5511, -255.4398, -186.9197],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2455, device='cuda:0', dtype=torch.float64)
tensor([-268.7007, -185.2437, -236.8888, -256.8325, -187.6596],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0334, device='cuda:0', dtype=torch.float64)
tensor([-268.7114, -185.0429, -237.0289, -257.0003, -187.7197],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0294, device='cuda:0', dtype=torch.float64)
tensor([-268.4996, -185.0520, -236.5658, -256.7128, -187.3960],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0779, device='cuda:0', dtype=torch.float64)
tensor([-267.7343, -186.0297, -235.1347, -255.1698, -186.7207],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0504, device='cuda:0', dtype=torch.float64)
tensor([-267.2919, -186.7239, -234.3363, -254.2366, -186.4631],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0328, device='cuda:0', dtype=torch.float64)
tensor([-266.9973, -187.1095, -233.8784, -253.6870, -186.3151],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0367, device='cuda:0', dtype=torch.float64)
tensor([-266.7990, -187.2598, -233.6572, -253.3906, -186.2406],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0450, device='cuda:0', dtype=torch.float64)
tensor([-266.7268, -187.0054, -233.8599, -253.5496, -186.2703],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0415, device='cuda:0', dtype=torch.float64)
tensor([-266.7027, -186.5699, -234.1492, -253.9011, -186.2470],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0258, device='cuda:0', dtype=torch.float64)
tensor([-266.7166, -186.3159, -234.4943, -254.1680, -186.3584],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0362, device='cuda:0', dtype=torch.float64)
tensor([-266.7039, -186.1975, -234.7825, -254.3212, -186.5223],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0348, device='cuda:0', dtype=torch.float64)
tensor([-266.3428, -186.5539, -234.3639, -253.6982, -186.3290],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0373, device='cuda:0', dtype=torch.float64)
tensor([-266.4415, -186.2021, -234.9869, -254.0775, -186.5579],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0340, device='cuda:0', dtype=torch.float64)
tensor([-266.3971, -186.2383, -235.4767, -254.0693, -186.8425],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0419, device='cuda:0', dtype=torch.float64)
tensor([-266.1857, -186.6632, -235.6316, -253.6607, -187.0793],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0399, device='cuda:0', dtype=torch.float64)
tensor([-266.1624, -186.8364, -236.3789, -253.6839, -187.6637],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0349, device='cuda:0', dtype=torch.float64)
tensor([-266.0884, -187.2936, -236.8278, -253.4163, -188.2403],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0336, device='cuda:0', dtype=torch.float64)
tensor([-265.8728, -188.0582, -237.2941, -252.8090, -188.9274],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0398, device='cuda:0', dtype=torch.float64)
tensor([-265.4821, -188.8410, -237.0133, -251.8954, -189.0354],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0380, device='cuda:0', dtype=torch.float64)
tensor([-265.2405, -189.2753, -236.5356, -251.3378, -189.0027],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0405, device='cuda:0', dtype=torch.float64)
tensor([-265.0945, -189.4461, -236.1264, -251.1848, -189.0028],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0376, device='cuda:0', dtype=torch.float64)
tensor([-264.9906, -189.5261, -235.7838, -251.2380, -188.9318],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0426, device='cuda:0', dtype=torch.float64)
tensor([-264.7729, -189.6523, -235.2884, -251.0878, -188.6310],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0432, device='cuda:0', dtype=torch.float64)
tensor([-264.7642, -189.4152, -235.2930, -251.4224, -188.5639],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0323, device='cuda:0', dtype=torch.float64)
tensor([-264.8627, -188.8597, -235.4887, -252.1656, -188.5576],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0301, device='cuda:0', dtype=torch.float64)
tensor([-264.8172, -188.4049, -235.5309, -252.6817, -188.3807],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0372, device='cuda:0', dtype=torch.float64)
tensor([-264.6593, -187.9291, -235.2642, -253.1291, -187.9591],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0344, device='cuda:0', dtype=torch.float64)
tensor([-264.6224, -187.0501, -235.2357, -253.9469, -187.5476],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0462, device='cuda:0', dtype=torch.float64)
tensor([-264.4081, -186.1419, -235.0395, -254.6009, -186.9473],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0420, device='cuda:0', dtype=torch.float64)
tensor([-264.0141, -185.7433, -234.4490, -254.6185, -186.2724],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0392, device='cuda:0', dtype=torch.float64)
tensor([-263.0639, -186.3456, -232.6880, -253.2693, -185.1180],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0382, device='cuda:0', dtype=torch.float64)
tensor([-262.3366, -187.0240, -231.3670, -252.1476, -184.3852],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0406, device='cuda:0', dtype=torch.float64)
tensor([-261.8733, -187.5483, -230.5849, -251.4221, -184.0713],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0381, device='cuda:0', dtype=torch.float64)
tensor([-261.7019, -187.5193, -230.6407, -251.4789, -184.0946],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0248, device='cuda:0', dtype=torch.float64)
tensor([-261.8323, -186.7773, -231.5234, -252.3685, -184.3937],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0360, device='cuda:0', dtype=torch.float64)
tensor([-262.1438, -186.2125, -232.7473, -253.3336, -185.1317],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0303, device='cuda:0', dtype=torch.float64)
tensor([-262.8243, -185.1091, -234.5172, -255.0094, -186.1568],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0597, device='cuda:0', dtype=torch.float64)
tensor([-262.7022, -185.0982, -234.8558, -255.1376, -186.5551],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0355, device='cuda:0', dtype=torch.float64)
tensor([-262.5902, -185.0189, -235.1382, -255.3360, -186.8440],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0264, device='cuda:0', dtype=torch.float64)
tensor([-262.4059, -184.9902, -235.1312, -255.3453, -186.8831],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0391, device='cuda:0', dtype=torch.float64)
tensor([-261.9271, -185.4025, -234.6807, -254.7137, -186.7398],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0598, device='cuda:0', dtype=torch.float64)
tensor([-261.5004, -185.8989, -234.2538, -254.0375, -186.6675],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0400, device='cuda:0', dtype=torch.float64)
tensor([-260.8904, -186.7845, -233.2801, -252.8109, -186.3243],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0329, device='cuda:0', dtype=torch.float64)
tensor([-260.2740, -187.9805, -232.0875, -251.3259, -185.9797],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0253, device='cuda:0', dtype=torch.float64)
tensor([-259.7485, -189.3939, -230.9418, -249.7788, -185.8407],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0426, device='cuda:0', dtype=torch.float64)
tensor([-259.5525, -190.0611, -230.7432, -249.1692, -186.0543],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0284, device='cuda:0', dtype=torch.float64)
tensor([-259.7446, -189.6045, -231.8468, -249.8023, -186.7050],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0472, device='cuda:0', dtype=torch.float64)
tensor([-260.1934, -188.6591, -233.5541, -251.0430, -187.6079],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0431, device='cuda:0', dtype=torch.float64)
tensor([-260.5732, -187.9816, -234.8356, -252.0019, -188.4202],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0309, device='cuda:0', dtype=torch.float64)
tensor([-260.8942, -187.5468, -235.7800, -252.6448, -189.0418],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0402, device='cuda:0', dtype=torch.float64)
tensor([-261.0367, -187.4478, -236.2153, -252.8093, -189.4343],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0358, device='cuda:0', dtype=torch.float64)
tensor([-260.9344, -187.4931, -235.7455, -252.5056, -189.1588],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0337, device='cuda:0', dtype=torch.float64)
tensor([-260.4065, -188.3909, -234.4269, -251.0315, -188.5544],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0341, device='cuda:0', dtype=torch.float64)
tensor([-259.8544, -189.5603, -233.0184, -249.3929, -188.0613],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0552, device='cuda:0', dtype=torch.float64)
tensor([-259.4544, -190.8629, -231.7798, -247.7920, -187.8586],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0385, device='cuda:0', dtype=torch.float64)
tensor([-259.3450, -191.6437, -231.4254, -246.8911, -188.0832],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0318, device='cuda:0', dtype=torch.float64)
tensor([-259.3814, -192.0431, -231.4926, -246.3783, -188.4071],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0360, device='cuda:0', dtype=torch.float64)
tensor([-259.6313, -191.5560, -232.3057, -246.8390, -188.8451],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0302, device='cuda:0', dtype=torch.float64)
tensor([-260.0566, -190.7318, -233.4158, -247.8249, -189.3732],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0318, device='cuda:0', dtype=torch.float64)
tensor([-260.1656, -190.4849, -233.3897, -248.1522, -189.4075],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0467, device='cuda:0', dtype=torch.float64)
tensor([-260.2379, -190.2322, -233.6559, -248.5506, -189.6437],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0312, device='cuda:0', dtype=torch.float64)
tensor([-260.1807, -190.0878, -233.3378, -248.6746, -189.5070],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0367, device='cuda:0', dtype=torch.float64)
tensor([-259.8706, -190.2641, -232.4421, -248.2417, -189.0581],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0275, device='cuda:0', dtype=torch.float64)
tensor([-259.7948, -189.8445, -232.3246, -248.5506, -188.8491],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0344, device='cuda:0', dtype=torch.float64)
tensor([-259.5971, -189.6183, -231.9349, -248.5458, -188.5104],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0320, device='cuda:0', dtype=torch.float64)
tensor([-259.3970, -189.3880, -231.5764, -248.5337, -188.1772],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1082, device='cuda:0', dtype=torch.float64)
tensor([-258.8720, -189.8477, -230.4126, -247.6668, -187.5875],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0249, device='cuda:0', dtype=torch.float64)
tensor([-258.4214, -190.2352, -229.5394, -246.9565, -187.2194],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0357, device='cuda:0', dtype=torch.float64)
tensor([-258.1885, -189.9708, -229.4060, -246.9893, -187.0782],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0266, device='cuda:0', dtype=torch.float64)
tensor([-258.0209, -189.4922, -229.5609, -247.2823, -187.0630],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0373, device='cuda:0', dtype=torch.float64)
tensor([-257.8777, -188.9970, -229.9144, -247.6777, -187.2305],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0466, device='cuda:0', dtype=torch.float64)
tensor([-257.8801, -188.3436, -230.6628, -248.3754, -187.6532],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0319, device='cuda:0', dtype=torch.float64)
tensor([-257.9621, -187.9387, -231.6038, -248.9486, -188.4095],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0687, device='cuda:0', dtype=torch.float64)
tensor([-258.2063, -187.6247, -232.7231, -249.5416, -189.3499],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0304, device='cuda:0', dtype=torch.float64)
tensor([-258.2230, -187.5798, -233.5468, -249.7278, -190.1869],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0300, device='cuda:0', dtype=torch.float64)
tensor([-257.9191, -187.9415, -233.6812, -249.1991, -190.5768],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0428, device='cuda:0', dtype=torch.float64)
tensor([-257.5086, -188.4499, -233.3186, -248.3625, -190.6445],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0303, device='cuda:0', dtype=torch.float64)
tensor([-257.2192, -188.7540, -233.3444, -247.8940, -190.9206],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0282, device='cuda:0', dtype=torch.float64)
tensor([-256.8796, -189.0807, -233.0147, -247.2536, -190.8956],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0350, device='cuda:0', dtype=torch.float64)
tensor([-256.5529, -189.3983, -232.6321, -246.6745, -190.7979],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0359, device='cuda:0', dtype=torch.float64)
tensor([-255.9028, -190.2292, -231.2004, -245.1656, -190.1923],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0469, device='cuda:0', dtype=torch.float64)
tensor([-255.5657, -190.4720, -230.3472, -244.6768, -189.8282],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0371, device='cuda:0', dtype=torch.float64)
tensor([-255.2209, -190.7214, -229.6655, -244.1669, -189.5399],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0356, device='cuda:0', dtype=torch.float64)
tensor([-255.0254, -190.5697, -229.3238, -244.2723, -189.2947],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0339, device='cuda:0', dtype=torch.float64)
tensor([-254.7240, -190.6288, -228.9193, -244.0891, -189.0427],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0329, device='cuda:0', dtype=torch.float64)
tensor([-254.9000, -189.6572, -229.6991, -245.1861, -189.1534],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0509, device='cuda:0', dtype=torch.float64)
tensor([-254.9093, -189.0819, -230.0006, -245.7232, -189.0718],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0289, device='cuda:0', dtype=torch.float64)
tensor([-254.9937, -188.3494, -230.4715, -246.4613, -189.0773],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0504, device='cuda:0', dtype=torch.float64)
tensor([-254.9268, -187.9136, -230.6488, -246.8176, -188.9262],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0380, device='cuda:0', dtype=torch.float64)
tensor([-254.6784, -187.8678, -230.5025, -246.6642, -188.7829],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0273, device='cuda:0', dtype=torch.float64)
tensor([-254.3520, -187.9418, -230.1625, -246.3032, -188.5878],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0628, device='cuda:0', dtype=torch.float64)
tensor([-254.0329, -188.1964, -229.8756, -245.7887, -188.5319],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0348, device='cuda:0', dtype=torch.float64)
tensor([-253.6178, -188.5427, -229.6278, -245.0839, -188.5877],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0340, device='cuda:0', dtype=torch.float64)
tensor([-253.4154, -188.3776, -229.9109, -245.0697, -188.7160],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0637, device='cuda:0', dtype=torch.float64)
tensor([-253.2114, -188.6047, -230.6523, -244.9696, -189.4034],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0414, device='cuda:0', dtype=torch.float64)
tensor([-253.0847, -188.7961, -231.3732, -244.9372, -190.0040],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0409, device='cuda:0', dtype=torch.float64)
tensor([-252.7061, -189.3831, -231.4887, -244.2368, -190.2871],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0273, device='cuda:0', dtype=torch.float64)
tensor([-252.3414, -189.8847, -231.4969, -243.6204, -190.4753],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0585, device='cuda:0', dtype=torch.float64)
tensor([-251.6691, -190.8328, -230.4650, -242.0808, -190.1231],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0265, device='cuda:0', dtype=torch.float64)
tensor([-251.4661, -191.0104, -230.1189, -241.7055, -189.9723],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0335, device='cuda:0', dtype=torch.float64)
tensor([-251.4628, -190.7891, -230.1163, -241.8979, -189.8802],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0274, device='cuda:0', dtype=torch.float64)
tensor([-251.5921, -190.2328, -230.3322, -242.5275, -189.8201],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0342, device='cuda:0', dtype=torch.float64)
tensor([-251.3203, -190.3645, -229.5807, -242.1131, -189.3355],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0308, device='cuda:0', dtype=torch.float64)
tensor([-251.0747, -190.6120, -229.0297, -241.6822, -189.0665],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0369, device='cuda:0', dtype=torch.float64)
tensor([-250.9024, -190.7299, -228.4697, -241.4117, -188.7124],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0385, device='cuda:0', dtype=torch.float64)
tensor([-250.8857, -190.5137, -228.2775, -241.6034, -188.4556],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0338, device='cuda:0', dtype=torch.float64)
tensor([-251.0286, -190.1614, -228.7318, -242.1043, -188.6712],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0375, device='cuda:0', dtype=torch.float64)
tensor([-251.4524, -189.5228, -230.0192, -243.2652, -189.4036],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0315, device='cuda:0', dtype=torch.float64)
tensor([-251.3929, -189.6910, -230.1409, -243.2296, -189.7232],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1127, device='cuda:0', dtype=torch.float64)
tensor([-251.1423, -190.0907, -229.7985, -242.7766, -189.7157],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0429, device='cuda:0', dtype=torch.float64)
tensor([-251.0403, -190.3397, -229.9489, -242.6345, -190.1738],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0299, device='cuda:0', dtype=torch.float64)
tensor([-250.6507, -191.1116, -229.2062, -241.6255, -190.1581],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0319, device='cuda:0', dtype=torch.float64)
tensor([-250.4633, -191.4607, -228.8555, -241.0845, -190.2143],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0442, device='cuda:0', dtype=torch.float64)
tensor([-250.3041, -191.6613, -228.6647, -240.6432, -190.3047],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0253, device='cuda:0', dtype=torch.float64)
tensor([-250.0342, -192.1903, -228.1078, -239.7179, -190.2440],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0292, device='cuda:0', dtype=torch.float64)
tensor([-249.8603, -192.6133, -227.7018, -238.9310, -190.2148],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0309, device='cuda:0', dtype=torch.float64)
tensor([-249.7820, -192.3717, -227.8919, -238.9585, -190.3312],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0280, device='cuda:0', dtype=torch.float64)
tensor([-249.7270, -191.9774, -228.2988, -239.1995, -190.5485],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0368, device='cuda:0', dtype=torch.float64)
tensor([-249.7972, -191.2713, -229.1305, -240.0070, -190.9450],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0305, device='cuda:0', dtype=torch.float64)
tensor([-249.7751, -190.7527, -229.4704, -240.4362, -191.0170],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0339, device='cuda:0', dtype=torch.float64)
tensor([-249.8328, -190.2238, -229.8991, -240.9594, -191.1337],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0274, device='cuda:0', dtype=torch.float64)
tensor([-249.5257, -190.3734, -229.3062, -240.3615, -190.7595],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.3795, device='cuda:0', dtype=torch.float64)
tensor([-249.6505, -190.5151, -229.2020, -240.2936, -190.6135],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7310, device='cuda:0', dtype=torch.float64)
tensor([-249.9176, -190.8356, -228.8851, -239.9109, -190.3971],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0760, device='cuda:0', dtype=torch.float64)
tensor([-250.0787, -191.4884, -228.1621, -239.1322, -190.1137],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0233, device='cuda:0', dtype=torch.float64)
tensor([-250.2771, -192.1572, -227.7296, -238.5334, -190.0632],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0285, device='cuda:0', dtype=torch.float64)
tensor([-250.6411, -192.3223, -228.0439, -238.6980, -190.3158],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0366, device='cuda:0', dtype=torch.float64)
tensor([-250.8886, -192.5755, -228.2066, -238.7768, -190.4686],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0323, device='cuda:0', dtype=torch.float64)
tensor([-251.3514, -192.1382, -229.3582, -239.8707, -191.1413],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0317, device='cuda:0', dtype=torch.float64)
tensor([-251.9530, -191.6343, -231.1535, -241.3486, -192.3468],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0258, device='cuda:0', dtype=torch.float64)
tensor([-252.0217, -191.9137, -231.3837, -241.3538, -192.7342],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0343, device='cuda:0', dtype=torch.float64)
tensor([-251.5549, -192.7983, -229.9836, -239.8672, -192.0543],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0235, device='cuda:0', dtype=torch.float64)
tensor([-251.0314, -194.2983, -227.8823, -237.5502, -191.0647],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0387, device='cuda:0', dtype=torch.float64)
tensor([-250.7858, -195.2338, -226.8371, -236.3344, -190.6997],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0254, device='cuda:0', dtype=torch.float64)
tensor([-250.7980, -194.9975, -226.9134, -236.6376, -190.7111],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0268, device='cuda:0', dtype=torch.float64)
tensor([-250.9954, -193.8583, -227.9841, -238.1920, -191.0900],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0286, device='cuda:0', dtype=torch.float64)
tensor([-251.1003, -193.1922, -228.3941, -239.0017, -191.0999],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0294, device='cuda:0', dtype=torch.float64)
tensor([-251.4681, -191.8250, -229.6351, -240.7592, -191.3080],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0288, device='cuda:0', dtype=torch.float64)
tensor([-251.9647, -190.5753, -230.9575, -242.4541, -191.4955],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0279, device='cuda:0', dtype=torch.float64)
tensor([-252.0974, -189.8757, -231.3670, -243.1750, -191.2246],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0354, device='cuda:0', dtype=torch.float64)
tensor([-251.9441, -189.5344, -231.1954, -243.2606, -190.6861],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0216, device='cuda:0', dtype=torch.float64)
tensor([-251.3371, -189.9642, -230.1126, -242.2391, -189.8224],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0506, device='cuda:0', dtype=torch.float64)
tensor([-250.5071, -191.0624, -228.6012, -240.4042, -189.2536],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0295, device='cuda:0', dtype=torch.float64)
tensor([-249.6446, -192.3803, -227.3020, -238.5800, -189.1035],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0284, device='cuda:0', dtype=torch.float64)
tensor([-249.2367, -192.7047, -227.4211, -238.0961, -189.7050],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0374, device='cuda:0', dtype=torch.float64)
tensor([-248.7356, -193.1078, -227.5796, -237.5317, -190.4309],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0345, device='cuda:0', dtype=torch.float64)
tensor([-248.1136, -193.6446, -227.3070, -236.5997, -190.8242],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0197, device='cuda:0', dtype=torch.float64)
tensor([-247.8943, -193.5426, -227.8086, -236.6488, -191.3578],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0274, device='cuda:0', dtype=torch.float64)
tensor([-247.6163, -193.5708, -227.7813, -236.3650, -191.5065],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0267, device='cuda:0', dtype=torch.float64)
tensor([-247.5571, -193.1718, -228.1725, -236.7700, -191.7481],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0281, device='cuda:0', dtype=torch.float64)
tensor([-247.2551, -193.2056, -227.5706, -236.2761, -191.3830],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0821, device='cuda:0', dtype=torch.float64)
tensor([-247.0830, -193.1012, -227.5983, -236.2550, -191.4566],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0274, device='cuda:0', dtype=torch.float64)
tensor([-247.1208, -192.5879, -228.0396, -236.8801, -191.6799],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0530, device='cuda:0', dtype=torch.float64)
tensor([-247.2897, -191.9730, -228.7365, -237.7535, -191.9903],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0205, device='cuda:0', dtype=torch.float64)
tensor([-247.1216, -191.7978, -228.3320, -237.6251, -191.5979],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0270, device='cuda:0', dtype=torch.float64)
tensor([-247.1753, -191.3366, -228.2767, -237.9551, -191.2625],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0315, device='cuda:0', dtype=torch.float64)
tensor([-246.9780, -191.2768, -227.6703, -237.6403, -190.5837],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0293, device='cuda:0', dtype=torch.float64)
tensor([-246.5379, -191.8216, -226.6246, -236.6865, -189.8112],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0260, device='cuda:0', dtype=torch.float64)
tensor([-246.1471, -192.1641, -225.7984, -235.9474, -189.2711],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0247, device='cuda:0', dtype=torch.float64)
tensor([-245.8690, -192.4177, -225.4431, -235.5049, -189.1204],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0234, device='cuda:0', dtype=torch.float64)
tensor([-245.6284, -192.6266, -225.2609, -235.1428, -189.1972],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0296, device='cuda:0', dtype=torch.float64)
tensor([-245.6935, -192.1136, -226.1280, -235.8149, -189.7577],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0284, device='cuda:0', dtype=torch.float64)
tensor([-245.5353, -192.0978, -226.3871, -235.8489, -190.1538],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0436, device='cuda:0', dtype=torch.float64)
tensor([-245.5876, -191.7815, -227.2830, -236.4612, -190.9099],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0314, device='cuda:0', dtype=torch.float64)
tensor([-245.4701, -191.6657, -227.5444, -236.6447, -191.1685],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0217, device='cuda:0', dtype=torch.float64)
tensor([-245.5684, -191.2241, -228.1583, -237.2668, -191.5732],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0311, device='cuda:0', dtype=torch.float64)
tensor([-245.1307, -191.4185, -227.4422, -236.5744, -191.1796],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0390, device='cuda:0', dtype=torch.float64)
tensor([-244.7618, -191.7061, -226.8631, -235.8816, -190.9801],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0485, device='cuda:0', dtype=torch.float64)
tensor([-244.4845, -191.8219, -226.2069, -235.3183, -190.5752],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0282, device='cuda:0', dtype=torch.float64)
tensor([-244.5020, -191.5044, -226.6168, -235.6509, -190.8183],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0257, device='cuda:0', dtype=torch.float64)
tensor([-244.5499, -191.1460, -227.0085, -236.0622, -190.9774],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0226, device='cuda:0', dtype=torch.float64)
tensor([-244.3473, -191.3630, -226.6528, -235.6553, -190.8116],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0682, device='cuda:0', dtype=torch.float64)
tensor([-243.9169, -191.9494, -225.5652, -234.6019, -190.2841],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0340, device='cuda:0', dtype=torch.float64)
tensor([-243.4919, -192.7749, -224.8238, -233.4718, -190.3216],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1013, device='cuda:0', dtype=torch.float64)
tensor([-242.9189, -194.4768, -223.1303, -231.4360, -189.9353],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0298, device='cuda:0', dtype=torch.float64)
tensor([-242.7234, -194.8418, -223.0510, -230.9585, -190.1760],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0266, device='cuda:0', dtype=torch.float64)
tensor([-242.9672, -193.7391, -224.6670, -232.3226, -190.9598],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0325, device='cuda:0', dtype=torch.float64)
tensor([-243.4976, -192.6643, -227.0771, -234.3298, -192.3986],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0341, device='cuda:0', dtype=torch.float64)
tensor([-244.0506, -192.0984, -228.9289, -235.9069, -193.6853],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0403, device='cuda:0', dtype=torch.float64)
tensor([-243.6988, -192.4532, -228.3455, -235.2479, -193.4215],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0306, device='cuda:0', dtype=torch.float64)
tensor([-243.0270, -193.2563, -226.6471, -233.5459, -192.5223],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0289, device='cuda:0', dtype=torch.float64)
tensor([-242.2528, -194.7819, -224.0298, -231.0176, -191.3563],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4482, device='cuda:0', dtype=torch.float64)
tensor([-241.8170, -195.9510, -222.3250, -229.3649, -190.8442],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0264, device='cuda:0', dtype=torch.float64)
tensor([-241.6664, -195.8704, -222.2583, -229.1806, -190.9760],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0375, device='cuda:0', dtype=torch.float64)
tensor([-241.8173, -194.8674, -223.3063, -230.2138, -191.4120],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0236, device='cuda:0', dtype=torch.float64)
tensor([-242.1717, -193.5862, -224.7643, -231.7626, -192.1221],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0255, device='cuda:0', dtype=torch.float64)
tensor([-242.8374, -192.3224, -226.6471, -233.7571, -193.2449],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0359, device='cuda:0', dtype=torch.float64)
tensor([-243.3360, -191.7250, -227.9354, -235.0442, -194.3344],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0328, device='cuda:0', dtype=torch.float64)
tensor([-243.3555, -191.5857, -227.8694, -235.0986, -194.5408],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0277, device='cuda:0', dtype=torch.float64)
tensor([-243.1353, -191.5444, -227.1406, -234.6021, -194.2562],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0284, device='cuda:0', dtype=torch.float64)
tensor([-242.3968, -192.2503, -225.1243, -232.6764, -193.2965],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0249, device='cuda:0', dtype=torch.float64)
tensor([-242.0547, -192.6354, -223.8904, -231.5461, -192.6831],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0394, device='cuda:0', dtype=torch.float64)
tensor([-241.9319, -192.6593, -223.2859, -231.1136, -192.2997],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0267, device='cuda:0', dtype=torch.float64)
tensor([-241.8879, -192.6003, -222.9804, -230.9013, -192.0796],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0384, device='cuda:0', dtype=torch.float64)
tensor([-241.8969, -192.6185, -222.7803, -230.7188, -191.9236],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0302, device='cuda:0', dtype=torch.float64)
tensor([-241.9643, -192.4756, -222.6979, -230.7013, -191.7789],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0290, device='cuda:0', dtype=torch.float64)
tensor([-242.1694, -191.6872, -223.0326, -231.3631, -191.6403],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0228, device='cuda:0', dtype=torch.float64)
tensor([-242.4337, -190.8296, -223.5405, -232.1872, -191.6316],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0308, device='cuda:0', dtype=torch.float64)
tensor([-242.5775, -190.3246, -223.7193, -232.5524, -191.5440],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0296, device='cuda:0', dtype=torch.float64)
tensor([-242.7872, -189.7141, -224.0183, -233.0666, -191.4989],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0290, device='cuda:0', dtype=torch.float64)
tensor([-243.0248, -189.0920, -224.4512, -233.7121, -191.5536],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0295, device='cuda:0', dtype=torch.float64)
tensor([-242.7831, -189.3122, -223.9819, -233.1540, -191.2841],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0477, device='cuda:0', dtype=torch.float64)
tensor([-242.7128, -189.1927, -223.8103, -233.0325, -191.0920],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0360, device='cuda:0', dtype=torch.float64)
tensor([-242.2147, -190.0446, -222.8662, -231.7651, -190.8054],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0560, device='cuda:0', dtype=torch.float64)
tensor([-241.7317, -190.9326, -222.3115, -230.7523, -190.9063],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0384, device='cuda:0', dtype=torch.float64)
tensor([-241.6236, -190.7952, -222.9746, -231.2323, -191.4669],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0294, device='cuda:0', dtype=torch.float64)
tensor([-241.4352, -190.7323, -223.3475, -231.4889, -191.7990],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0279, device='cuda:0', dtype=torch.float64)
tensor([-241.2175, -190.9081, -223.5364, -231.4661, -192.1195],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0245, device='cuda:0', dtype=torch.float64)
tensor([-240.9838, -191.1739, -223.8047, -231.4461, -192.5647],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0262, device='cuda:0', dtype=torch.float64)
tensor([-240.7028, -191.5514, -224.0227, -231.3267, -193.0363],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0326, device='cuda:0', dtype=torch.float64)
tensor([-240.4714, -191.8309, -224.1111, -231.2023, -193.3184],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0317, device='cuda:0', dtype=torch.float64)
tensor([-240.3031, -191.9664, -224.3562, -231.2778, -193.6399],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0253, device='cuda:0', dtype=torch.float64)
tensor([-239.8765, -192.6586, -223.7264, -230.3032, -193.5580],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0432, device='cuda:0', dtype=torch.float64)
tensor([-239.5920, -193.0754, -223.3457, -229.7104, -193.5249],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0300, device='cuda:0', dtype=torch.float64)
tensor([-239.3726, -193.2262, -223.1609, -229.4518, -193.4913],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0358, device='cuda:0', dtype=torch.float64)
tensor([-239.2869, -193.0900, -223.3135, -229.6317, -193.5931],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0294, device='cuda:0', dtype=torch.float64)
tensor([-239.2112, -193.0085, -223.4410, -229.7771, -193.7066],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0301, device='cuda:0', dtype=torch.float64)
tensor([-239.4921, -192.3237, -224.2888, -230.8575, -194.0750],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0564, device='cuda:0', dtype=torch.float64)
tensor([-239.4737, -192.2233, -224.4395, -231.0367, -194.1441],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0320, device='cuda:0', dtype=torch.float64)
tensor([-239.1284, -192.5605, -223.7539, -230.3113, -193.6613],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0397, device='cuda:0', dtype=torch.float64)
tensor([-238.6401, -193.2769, -222.6274, -229.0414, -193.0651],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0213, device='cuda:0', dtype=torch.float64)
tensor([-237.9574, -194.6281, -220.8738, -226.9902, -192.3373],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0365, device='cuda:0', dtype=torch.float64)
tensor([-237.8892, -194.4691, -220.9999, -227.1124, -192.3649],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0185, device='cuda:0', dtype=torch.float64)
tensor([-237.9842, -193.9219, -221.4649, -227.6639, -192.5083],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0273, device='cuda:0', dtype=torch.float64)
tensor([-237.8762, -193.9265, -221.4968, -227.6325, -192.5497],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0325, device='cuda:0', dtype=torch.float64)
tensor([-237.6896, -194.1731, -221.4515, -227.4131, -192.6637],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0247, device='cuda:0', dtype=torch.float64)
tensor([-237.6633, -194.0937, -221.6922, -227.5705, -192.8698],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0251, device='cuda:0', dtype=torch.float64)
tensor([-237.9490, -193.3248, -222.7541, -228.7446, -193.4521],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0262, device='cuda:0', dtype=torch.float64)
tensor([-238.4834, -192.3599, -224.4217, -230.5583, -194.5322],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0320, device='cuda:0', dtype=torch.float64)
tensor([-238.8226, -191.9053, -225.4812, -231.6493, -195.3829],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0216, device='cuda:0', dtype=torch.float64)
tensor([-238.3843, -192.2508, -224.9081, -230.8490, -195.0965],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0370, device='cuda:0', dtype=torch.float64)
tensor([-237.6588, -192.9879, -223.7280, -229.3398, -194.4560],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0277, device='cuda:0', dtype=torch.float64)
tensor([-236.6640, -194.3888, -221.7730, -226.9057, -193.5109],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0280, device='cuda:0', dtype=torch.float64)
tensor([-235.8432, -195.9462, -219.9656, -224.6860, -192.8197],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0208, device='cuda:0', dtype=torch.float64)
tensor([-235.3333, -196.8497, -218.9694, -223.4686, -192.5566],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0310, device='cuda:0', dtype=torch.float64)
tensor([-235.1210, -196.6486, -218.9517, -223.5249, -192.4906],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0463, device='cuda:0', dtype=torch.float64)
tensor([-235.1193, -195.8719, -219.5363, -224.2787, -192.5961],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0325, device='cuda:0', dtype=torch.float64)
tensor([-235.5453, -194.1724, -221.1879, -226.2880, -193.1457],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0221, device='cuda:0', dtype=torch.float64)
tensor([-236.2363, -192.7317, -223.1354, -228.5138, -194.1520],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0335, device='cuda:0', dtype=torch.float64)
tensor([-236.7183, -191.9957, -224.4411, -229.9395, -195.0484],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0259, device='cuda:0', dtype=torch.float64)
tensor([-236.6837, -191.8417, -224.6582, -230.1453, -195.2764],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0410, device='cuda:0', dtype=torch.float64)
tensor([-236.1666, -192.1285, -223.8465, -229.2329, -194.7683],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0265, device='cuda:0', dtype=torch.float64)
tensor([-235.4730, -192.7372, -222.7112, -227.8833, -194.1723],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0533, device='cuda:0', dtype=torch.float64)
tensor([-234.4262, -194.1145, -220.4723, -225.3262, -193.1216],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0361, device='cuda:0', dtype=torch.float64)
tensor([-233.7417, -195.2870, -218.8617, -223.4838, -192.5657],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0355, device='cuda:0', dtype=torch.float64)
tensor([-233.3511, -195.7422, -218.0510, -222.6486, -192.2473],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0283, device='cuda:0', dtype=torch.float64)
tensor([-233.2634, -195.3726, -218.1585, -222.8702, -192.1302],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0387, device='cuda:0', dtype=torch.float64)
tensor([-233.5161, -194.1124, -219.2053, -224.2392, -192.2360],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0311, device='cuda:0', dtype=torch.float64)
tensor([-234.3211, -192.2393, -221.3586, -226.8423, -192.8301],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0301, device='cuda:0', dtype=torch.float64)
tensor([-235.1163, -191.0406, -223.4427, -229.1726, -193.7901],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0465, device='cuda:0', dtype=torch.float64)
tensor([-235.4080, -190.6875, -224.4227, -230.1997, -194.3021],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0325, device='cuda:0', dtype=torch.float64)
tensor([-234.7031, -191.5690, -223.5900, -229.0039, -193.9599],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0328, device='cuda:0', dtype=torch.float64)
tensor([-233.7489, -192.8575, -222.1075, -227.1238, -193.3224],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0307, device='cuda:0', dtype=torch.float64)
tensor([-232.5903, -195.1104, -219.8765, -224.2564, -192.6159],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0320, device='cuda:0', dtype=torch.float64)
tensor([-232.0997, -196.4551, -219.2965, -223.0038, -192.8259],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0223, device='cuda:0', dtype=torch.float64)
tensor([-231.7619, -197.3945, -219.1216, -222.2074, -193.1764],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0922, device='cuda:0', dtype=torch.float64)
tensor([-231.6832, -197.6626, -219.6353, -222.2670, -193.6325],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0307, device='cuda:0', dtype=torch.float64)
tensor([-231.7699, -197.3610, -220.6078, -222.9665, -194.2233],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0272, device='cuda:0', dtype=torch.float64)
tensor([-232.2559, -196.5436, -222.4547, -224.6452, -195.3251],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0259, device='cuda:0', dtype=torch.float64)
tensor([-232.8396, -196.0933, -224.3075, -226.2402, -196.7150],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0239, device='cuda:0', dtype=torch.float64)
tensor([-233.0747, -196.1586, -225.3702, -226.9967, -197.6611],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0248, device='cuda:0', dtype=torch.float64)
tensor([-232.5628, -196.8595, -224.9819, -226.0605, -197.7446],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0311, device='cuda:0', dtype=torch.float64)
tensor([-231.4406, -197.8558, -223.2468, -223.7971, -196.9814],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0259, device='cuda:0', dtype=torch.float64)
tensor([-230.4619, -198.8677, -221.5217, -221.6412, -196.2865],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0289, device='cuda:0', dtype=torch.float64)
tensor([-229.6036, -200.1548, -219.5643, -219.3028, -195.5739],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0326, device='cuda:0', dtype=torch.float64)
tensor([-229.1998, -200.7474, -218.6800, -218.2837, -195.3171],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0211, device='cuda:0', dtype=torch.float64)
tensor([-229.0273, -200.7351, -218.3069, -218.0954, -195.1420],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0260, device='cuda:0', dtype=torch.float64)
tensor([-229.2231, -199.3292, -219.2160, -219.6644, -195.2161],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0261, device='cuda:0', dtype=torch.float64)
tensor([-229.8635, -197.2601, -220.9106, -222.3361, -195.4927],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0217, device='cuda:0', dtype=torch.float64)
tensor([-230.7216, -195.2800, -222.7560, -225.1772, -195.9787],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0335, device='cuda:0', dtype=torch.float64)
tensor([-231.2276, -193.8941, -223.8330, -227.0493, -196.1049],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0273, device='cuda:0', dtype=torch.float64)
tensor([-230.6908, -193.4041, -223.0867, -226.7568, -195.0882],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0236, device='cuda:0', dtype=torch.float64)
tensor([-229.6136, -193.8098, -221.3324, -225.1246, -193.7851],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0240, device='cuda:0', dtype=torch.float64)
tensor([-228.3831, -195.0527, -219.0159, -222.7199, -192.5959],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0322, device='cuda:0', dtype=torch.float64)
tensor([-227.7922, -195.4427, -217.9116, -221.7166, -192.0222],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0214, device='cuda:0', dtype=torch.float64)
tensor([-227.2688, -196.0637, -216.9988, -220.6985, -191.7520],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0362, device='cuda:0', dtype=torch.float64)
tensor([-227.2536, -196.0023, -217.4431, -220.8805, -192.1363],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0292, device='cuda:0', dtype=torch.float64)
tensor([-227.4705, -195.5030, -218.4804, -221.6840, -192.7358],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0269, device='cuda:0', dtype=torch.float64)
tensor([-227.8121, -194.8387, -219.5917, -222.6823, -193.3544],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0316, device='cuda:0', dtype=torch.float64)
tensor([-228.2364, -194.2320, -220.9025, -223.8085, -194.2266],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0293, device='cuda:0', dtype=torch.float64)
tensor([-228.5394, -193.8486, -221.7943, -224.5602, -194.9347],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0233, device='cuda:0', dtype=torch.float64)
tensor([-228.4739, -194.0119, -222.0018, -224.4844, -195.3866],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0273, device='cuda:0', dtype=torch.float64)
tensor([-227.7061, -194.9530, -220.8658, -222.8316, -195.1513],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0273, device='cuda:0', dtype=torch.float64)
tensor([-226.5693, -196.7218, -218.8033, -220.0449, -194.6168],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0307, device='cuda:0', dtype=torch.float64)
tensor([-226.0973, -197.3895, -218.0061, -218.9909, -194.4763],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0252, device='cuda:0', dtype=torch.float64)
tensor([-225.7438, -197.9811, -217.5828, -218.2422, -194.5776],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0257, device='cuda:0', dtype=torch.float64)
tensor([-225.7364, -197.5995, -217.9245, -218.6177, -194.7243],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0183, device='cuda:0', dtype=torch.float64)
tensor([-226.0178, -196.5152, -218.9188, -219.9562, -194.9935],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0201, device='cuda:0', dtype=torch.float64)
tensor([-226.3259, -195.5095, -219.8473, -221.2719, -195.2518],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0430, device='cuda:0', dtype=torch.float64)
tensor([-226.5168, -194.8874, -220.2735, -221.9937, -195.2792],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0300, device='cuda:0', dtype=torch.float64)
tensor([-226.2602, -194.8436, -219.8697, -221.6725, -194.9667],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0251, device='cuda:0', dtype=torch.float64)
tensor([-226.2050, -194.4445, -219.7967, -221.8332, -194.7420],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0332, device='cuda:0', dtype=torch.float64)
tensor([-225.9675, -194.2950, -219.3607, -221.5719, -194.3385],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0291, device='cuda:0', dtype=torch.float64)
tensor([-225.3890, -194.7509, -218.1615, -220.3197, -193.7191],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1478, device='cuda:0', dtype=torch.float64)
tensor([-224.8132, -195.5236, -216.9727, -218.8886, -193.2648],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0263, device='cuda:0', dtype=torch.float64)
tensor([-224.7296, -195.6028, -216.9826, -218.6907, -193.3175],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0218, device='cuda:0', dtype=torch.float64)
tensor([-224.8700, -195.4634, -217.5765, -219.0276, -193.7133],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0250, device='cuda:0', dtype=torch.float64)
tensor([-225.2991, -194.9207, -218.8106, -220.1289, -194.4196],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0189, device='cuda:0', dtype=torch.float64)
tensor([-226.1125, -194.0843, -220.7252, -222.1057, -195.5076],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0236, device='cuda:0', dtype=torch.float64)
tensor([-226.7125, -193.6521, -222.0652, -223.4677, -196.4279],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0257, device='cuda:0', dtype=torch.float64)
tensor([-226.1620, -194.1886, -221.3857, -222.4368, -196.2039],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0280, device='cuda:0', dtype=torch.float64)
tensor([-225.2884, -194.9360, -220.0272, -220.7224, -195.5445],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0249, device='cuda:0', dtype=torch.float64)
tensor([-224.6344, -195.4727, -219.0359, -219.5016, -195.0424],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0326, device='cuda:0', dtype=torch.float64)
tensor([-223.8722, -196.4104, -217.7090, -217.8223, -194.5042],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0227, device='cuda:0', dtype=torch.float64)
tensor([-223.2613, -197.2163, -216.7937, -216.5816, -194.2737],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0224, device='cuda:0', dtype=torch.float64)
tensor([-223.0798, -197.1635, -216.7140, -216.5148, -194.1726],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0229, device='cuda:0', dtype=torch.float64)
tensor([-222.9626, -196.9712, -216.7835, -216.6409, -194.0727],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0201, device='cuda:0', dtype=torch.float64)
tensor([-223.1529, -196.2533, -217.5432, -217.5559, -194.2691],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0299, device='cuda:0', dtype=torch.float64)
tensor([-223.4449, -195.4374, -218.3780, -218.6127, -194.4836],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0347, device='cuda:0', dtype=torch.float64)
tensor([-224.5473, -193.7350, -220.7680, -221.5654, -195.4858],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0369, device='cuda:0', dtype=torch.float64)
tensor([-225.4900, -192.6189, -222.5102, -223.7168, -196.3413],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0268, device='cuda:0', dtype=torch.float64)
tensor([-225.0918, -192.5650, -222.0596, -223.1812, -195.9187],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0377, device='cuda:0', dtype=torch.float64)
tensor([-224.3314, -192.8713, -220.9882, -221.8995, -195.1747],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0379, device='cuda:0', dtype=torch.float64)
tensor([-223.2735, -193.7561, -219.2726, -219.7956, -194.2583],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0279, device='cuda:0', dtype=torch.float64)
tensor([-222.2937, -194.8794, -217.5121, -217.6554, -193.5268],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0242, device='cuda:0', dtype=torch.float64)
tensor([-221.5099, -196.0575, -215.9590, -215.7641, -193.0563],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0471, device='cuda:0', dtype=torch.float64)
tensor([-220.9471, -197.1497, -214.8297, -214.3100, -192.8918],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0269, device='cuda:0', dtype=torch.float64)
tensor([-220.7009, -197.5214, -214.5661, -213.7856, -193.0055],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0335, device='cuda:0', dtype=torch.float64)
tensor([-220.8171, -196.8774, -215.5148, -214.4832, -193.5229],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0246, device='cuda:0', dtype=torch.float64)
tensor([-221.2561, -195.8427, -217.0929, -215.9541, -194.3373],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0302, device='cuda:0', dtype=torch.float64)
tensor([-221.6706, -195.2415, -218.4511, -217.1356, -195.2667],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0234, device='cuda:0', dtype=torch.float64)
tensor([-222.3087, -194.5001, -220.0629, -218.7832, -196.3083],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0232, device='cuda:0', dtype=torch.float64)
tensor([-222.4267, -194.4073, -220.6198, -219.1658, -196.8530],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0245, device='cuda:0', dtype=torch.float64)
tensor([-222.2344, -194.4935, -220.6474, -219.0087, -197.0066],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0307, device='cuda:0', dtype=torch.float64)
tensor([-221.5640, -195.1126, -219.9930, -217.8793, -196.9198],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0276, device='cuda:0', dtype=torch.float64)
tensor([-220.4059, -196.4431, -218.3263, -215.4467, -196.3972],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0526, device='cuda:0', dtype=torch.float64)
tensor([-219.3159, -198.2714, -216.3590, -212.5814, -195.9063],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0373, device='cuda:0', dtype=torch.float64)
tensor([-218.6769, -199.6695, -215.1446, -210.7037, -195.7575],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0233, device='cuda:0', dtype=torch.float64)
tensor([-218.3629, -200.2270, -214.7338, -209.9500, -195.7901],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0257, device='cuda:0', dtype=torch.float64)
tensor([-218.3396, -199.8092, -215.1991, -210.4097, -195.9578],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0265, device='cuda:0', dtype=torch.float64)
tensor([-218.7382, -198.2489, -216.7729, -212.4411, -196.4184],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0233, device='cuda:0', dtype=torch.float64)
tensor([-219.2912, -196.9945, -218.3572, -214.4552, -197.1084],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0357, device='cuda:0', dtype=torch.float64)
tensor([-220.0948, -195.8575, -220.1189, -216.7086, -197.9796],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0222, device='cuda:0', dtype=torch.float64)
tensor([-220.4607, -195.3463, -220.9424, -217.7519, -198.4253],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0237, device='cuda:0', dtype=torch.float64)
tensor([-220.5509, -195.0205, -221.1915, -218.1486, -198.4361],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0267, device='cuda:0', dtype=torch.float64)
tensor([-219.8044, -195.2375, -220.0867, -216.9047, -197.6132],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0181, device='cuda:0', dtype=torch.float64)
tensor([-219.0548, -195.7374, -218.9506, -215.4995, -196.9588],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0261, device='cuda:0', dtype=torch.float64)
tensor([-218.5831, -196.0510, -218.2341, -214.6404, -196.5289],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0358, device='cuda:0', dtype=torch.float64)
tensor([-218.0956, -196.4334, -217.4361, -213.7216, -196.0638],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0228, device='cuda:0', dtype=torch.float64)
tensor([-217.7822, -196.5899, -217.0338, -213.2817, -195.7999],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0257, device='cuda:0', dtype=torch.float64)
tensor([-217.4968, -196.6914, -216.7994, -212.9926, -195.6638],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0209, device='cuda:0', dtype=torch.float64)
tensor([-217.1945, -196.7500, -216.3965, -212.6332, -195.3186],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0577, device='cuda:0', dtype=torch.float64)
tensor([-217.0451, -196.7317, -216.2636, -212.5117, -195.1689],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0317, device='cuda:0', dtype=torch.float64)
tensor([-217.0322, -196.4158, -216.4835, -212.8296, -195.1429],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0254, device='cuda:0', dtype=torch.float64)
tensor([-217.1488, -195.8494, -216.8949, -213.4302, -195.1678],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0278, device='cuda:0', dtype=torch.float64)
tensor([-217.4278, -195.0907, -217.4791, -214.2891, -195.2465],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0300, device='cuda:0', dtype=torch.float64)
tensor([-217.5198, -194.6106, -217.6613, -214.6509, -195.1642],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0286, device='cuda:0', dtype=torch.float64)
tensor([-217.5986, -194.2787, -217.7976, -214.8985, -195.1482],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0219, device='cuda:0', dtype=torch.float64)
tensor([-217.9454, -193.6022, -218.3998, -215.7229, -195.3740],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0213, device='cuda:0', dtype=torch.float64)
tensor([-217.6636, -193.5910, -217.8622, -215.1800, -195.0164],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0234, device='cuda:0', dtype=torch.float64)
tensor([-217.3102, -193.8134, -217.2348, -214.4358, -194.7296],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0309, device='cuda:0', dtype=torch.float64)
tensor([-216.9261, -193.9572, -216.5465, -213.6776, -194.3743],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0400, device='cuda:0', dtype=torch.float64)
tensor([-216.5623, -194.2745, -215.9094, -212.9094, -194.1809],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0288, device='cuda:0', dtype=torch.float64)
tensor([-216.5028, -194.2195, -215.9163, -212.8685, -194.2485],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0247, device='cuda:0', dtype=torch.float64)
tensor([-216.5607, -193.9465, -216.1834, -213.1513, -194.4036],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0212, device='cuda:0', dtype=torch.float64)
tensor([-216.3014, -194.1458, -215.9124, -212.7249, -194.4485],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0220, device='cuda:0', dtype=torch.float64)
tensor([-216.0610, -194.5022, -215.6942, -212.2387, -194.6776],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0520, device='cuda:0', dtype=torch.float64)
tensor([-215.7435, -194.9366, -215.2279, -211.5440, -194.6932],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0250, device='cuda:0', dtype=torch.float64)
tensor([-215.5643, -195.3799, -215.1747, -211.1362, -195.0384],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0310, device='cuda:0', dtype=torch.float64)
tensor([-215.6809, -195.3815, -215.7201, -211.4260, -195.6457],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0237, device='cuda:0', dtype=torch.float64)
tensor([-215.9564, -195.1173, -216.4884, -212.0836, -196.3083],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0422, device='cuda:0', dtype=torch.float64)
tensor([-216.2382, -194.9290, -217.2052, -212.7157, -196.9354],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0244, device='cuda:0', dtype=torch.float64)
tensor([-216.4170, -194.8663, -217.7052, -213.1206, -197.4815],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0374, device='cuda:0', dtype=torch.float64)
tensor([-216.3684, -195.0514, -217.7826, -213.0007, -197.7880],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0296, device='cuda:0', dtype=torch.float64)
tensor([-215.6634, -195.8435, -216.6635, -211.3870, -197.4769],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0193, device='cuda:0', dtype=torch.float64)
tensor([-214.8634, -196.9106, -215.2360, -209.3971, -197.0730],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0236, device='cuda:0', dtype=torch.float64)
tensor([-214.5920, -197.3419, -214.7775, -208.6530, -197.0189],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0240, device='cuda:0', dtype=torch.float64)
tensor([-214.6293, -197.2220, -214.9646, -208.7760, -197.1534],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0248, device='cuda:0', dtype=torch.float64)
tensor([-215.1957, -196.3266, -216.2725, -210.3891, -197.7112],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0251, device='cuda:0', dtype=torch.float64)
tensor([-215.7227, -195.7746, -217.4300, -211.7578, -198.3085],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0242, device='cuda:0', dtype=torch.float64)
tensor([-215.7200, -195.7818, -217.5537, -211.8441, -198.4054],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0281, device='cuda:0', dtype=torch.float64)
tensor([-215.8013, -195.6778, -217.8557, -212.1572, -198.5643],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0279, device='cuda:0', dtype=torch.float64)
tensor([-215.8314, -195.6306, -218.0519, -212.3475, -198.6304],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0229, device='cuda:0', dtype=torch.float64)
tensor([-215.3915, -195.8466, -217.3838, -211.5739, -198.1900],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0311, device='cuda:0', dtype=torch.float64)
tensor([-214.7277, -196.4412, -216.2075, -210.2000, -197.4477],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0125, device='cuda:0', dtype=torch.float64)
tensor([-214.1752, -197.0346, -215.1711, -208.9968, -196.8586],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0207, device='cuda:0', dtype=torch.float64)
tensor([-213.7315, -197.5706, -214.2466, -207.9999, -196.3416],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0277, device='cuda:0', dtype=torch.float64)
tensor([-213.3520, -198.2795, -213.4517, -207.0349, -196.0720],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0254, device='cuda:0', dtype=torch.float64)
tensor([-213.3990, -197.9940, -213.7074, -207.4440, -196.0039],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0223, device='cuda:0', dtype=torch.float64)
tensor([-213.3431, -197.9582, -213.8411, -207.5927, -196.0229],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0219, device='cuda:0', dtype=torch.float64)
tensor([-213.4146, -197.5705, -214.3956, -208.2528, -196.1724],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0371, device='cuda:0', dtype=torch.float64)
tensor([-213.7151, -196.9536, -215.3903, -209.3722, -196.5979],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0325, device='cuda:0', dtype=torch.float64)
tensor([-213.9059, -196.6093, -216.0481, -210.1069, -196.8623],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0203, device='cuda:0', dtype=torch.float64)
tensor([-213.9923, -196.5189, -216.6051, -210.5881, -197.2768],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0179, device='cuda:0', dtype=torch.float64)
tensor([-213.9273, -196.5348, -216.8732, -210.7640, -197.4795],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0257, device='cuda:0', dtype=torch.float64)
tensor([-213.5155, -196.9314, -216.4562, -210.1189, -197.3453],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0250, device='cuda:0', dtype=torch.float64)
tensor([-213.4852, -196.8203, -216.7255, -210.3608, -197.4821],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0193, device='cuda:0', dtype=torch.float64)
tensor([-213.3100, -196.8645, -216.7257, -210.2868, -197.4375],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0324, device='cuda:0', dtype=torch.float64)
tensor([-213.0184, -197.0232, -216.4034, -209.8811, -197.1894],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0228, device='cuda:0', dtype=torch.float64)
tensor([-212.4968, -197.4855, -215.4685, -208.7959, -196.6280],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0246, device='cuda:0', dtype=torch.float64)
tensor([-212.2242, -197.6011, -214.9748, -208.3109, -196.2112],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0259, device='cuda:0', dtype=torch.float64)
tensor([-212.1318, -197.4440, -214.9052, -208.2790, -196.0358],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0214, device='cuda:0', dtype=torch.float64)
tensor([-212.2666, -196.8697, -215.3076, -208.8801, -195.9849],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0203, device='cuda:0', dtype=torch.float64)
tensor([-212.4718, -196.2939, -215.7593, -209.5213, -196.0120],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0297, device='cuda:0', dtype=torch.float64)
tensor([-212.7829, -195.5857, -216.3826, -210.4235, -196.1010],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0207, device='cuda:0', dtype=torch.float64)
tensor([-213.5830, -194.4590, -217.8018, -212.3001, -196.6484],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0324, device='cuda:0', dtype=torch.float64)
tensor([-213.4083, -194.5069, -217.4663, -211.9315, -196.4792],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0243, device='cuda:0', dtype=torch.float64)
tensor([-212.7589, -195.1009, -216.3158, -210.5175, -195.9906],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0219, device='cuda:0', dtype=torch.float64)
tensor([-212.0929, -195.9950, -215.1877, -209.0029, -195.6871],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0288, device='cuda:0', dtype=torch.float64)
tensor([-211.6032, -196.7685, -214.2500, -207.7827, -195.4660],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0266, device='cuda:0', dtype=torch.float64)
tensor([-211.3272, -197.2742, -213.7766, -207.0831, -195.5170],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0316, device='cuda:0', dtype=torch.float64)
tensor([-211.1183, -197.7173, -213.6119, -206.6098, -195.7777],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0207, device='cuda:0', dtype=torch.float64)
tensor([-211.2390, -197.3216, -214.3222, -207.2955, -196.2324],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0243, device='cuda:0', dtype=torch.float64)
tensor([-211.3102, -197.0548, -214.7820, -207.7427, -196.5477],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0219, device='cuda:0', dtype=torch.float64)
tensor([-211.4882, -196.6371, -215.3270, -208.3930, -196.8561],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0268, device='cuda:0', dtype=torch.float64)
tensor([-211.3495, -196.7243, -215.2122, -208.1881, -196.9688],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0326, device='cuda:0', dtype=torch.float64)
tensor([-210.9155, -197.1949, -214.4402, -207.2030, -196.8148],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0291, device='cuda:0', dtype=torch.float64)
tensor([-210.6079, -197.6585, -214.0229, -206.4718, -196.9393],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0233, device='cuda:0', dtype=torch.float64)
tensor([-210.2886, -198.2022, -213.3956, -205.5296, -196.9133],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0247, device='cuda:0', dtype=torch.float64)
tensor([-209.9260, -198.9591, -212.5702, -204.3566, -196.8457],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0241, device='cuda:0', dtype=torch.float64)
tensor([-209.7870, -198.9166, -212.3806, -204.1222, -196.8024],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0241, device='cuda:0', dtype=torch.float64)
tensor([-209.7397, -198.6545, -212.5141, -204.2690, -196.8466],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0268, device='cuda:0', dtype=torch.float64)
tensor([-209.7200, -198.3942, -212.6471, -204.4309, -196.8531],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0177, device='cuda:0', dtype=torch.float64)
tensor([-209.7223, -197.9684, -212.9395, -204.7397, -196.9348],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0235, device='cuda:0', dtype=torch.float64)
tensor([-209.8141, -197.3917, -213.4362, -205.3192, -197.0513],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0345, device='cuda:0', dtype=torch.float64)
tensor([-209.9251, -196.7857, -213.9888, -205.9784, -197.2158],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0211, device='cuda:0', dtype=torch.float64)
tensor([-210.1635, -196.0247, -214.7283, -206.9060, -197.4046],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0301, device='cuda:0', dtype=torch.float64)
tensor([-210.0995, -195.8622, -214.7217, -206.8757, -197.3181],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0212, device='cuda:0', dtype=torch.float64)
tensor([-210.1843, -195.3264, -214.9014, -207.2270, -197.1707],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0284, device='cuda:0', dtype=torch.float64)
tensor([-210.1418, -195.2486, -214.9597, -207.2234, -197.1979],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0243, device='cuda:0', dtype=torch.float64)
tensor([-209.9319, -195.4532, -214.6947, -206.7766, -197.1481],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0211, device='cuda:0', dtype=torch.float64)
tensor([-209.7252, -195.7011, -214.4027, -206.2799, -197.1048],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0323, device='cuda:0', dtype=torch.float64)
tensor([-209.1929, -196.5297, -213.0897, -204.6744, -196.5783],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0291, device='cuda:0', dtype=torch.float64)
tensor([-208.7293, -197.6299, -211.8052, -203.0474, -196.2489],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0253, device='cuda:0', dtype=torch.float64)
tensor([-208.6467, -197.4152, -211.8792, -203.1897, -196.1456],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0296, device='cuda:0', dtype=torch.float64)
tensor([-208.8678, -196.5161, -212.9277, -204.4186, -196.3309],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0211, device='cuda:0', dtype=torch.float64)
tensor([-209.1741, -195.7462, -214.0833, -205.7224, -196.6940],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0241, device='cuda:0', dtype=torch.float64)
tensor([-209.5951, -195.0613, -215.4237, -207.2482, -197.2037],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0301, device='cuda:0', dtype=torch.float64)
tensor([-210.0222, -194.4866, -216.5633, -208.6426, -197.6244],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0257, device='cuda:0', dtype=torch.float64)
tensor([-209.9665, -194.5199, -216.6713, -208.7875, -197.5691],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0397, device='cuda:0', dtype=torch.float64)
tensor([-209.6199, -194.9338, -216.1828, -208.1530, -197.2817],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0259, device='cuda:0', dtype=torch.float64)
tensor([-208.8759, -195.9788, -214.6574, -206.3045, -196.5437],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0205, device='cuda:0', dtype=torch.float64)
tensor([-208.1845, -197.4236, -212.7380, -204.0935, -195.7826],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0228, device='cuda:0', dtype=torch.float64)
tensor([-207.8410, -198.9158, -211.5358, -202.4703, -195.6846],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0227, device='cuda:0', dtype=torch.float64)
tensor([-207.7204, -199.6635, -211.1601, -201.8092, -195.8100],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0270, device='cuda:0', dtype=torch.float64)
tensor([-207.7453, -199.4205, -211.8588, -202.2767, -196.2342],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0324, device='cuda:0', dtype=torch.float64)
tensor([-207.7412, -199.3478, -212.4407, -202.5760, -196.7167],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0244, device='cuda:0', dtype=torch.float64)
tensor([-207.6872, -199.3765, -212.8320, -202.7126, -197.1078],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0216, device='cuda:0', dtype=torch.float64)
tensor([-207.6513, -199.3405, -213.2466, -202.9163, -197.4828],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0252, device='cuda:0', dtype=torch.float64)
tensor([-207.6965, -199.0453, -214.0129, -203.5283, -198.0059],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0298, device='cuda:0', dtype=torch.float64)
tensor([-207.7893, -198.6368, -214.8765, -204.3439, -198.5551],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0274, device='cuda:0', dtype=torch.float64)
tensor([-207.6500, -198.7533, -214.9510, -204.2335, -198.7650],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0236, device='cuda:0', dtype=torch.float64)
tensor([-207.5282, -198.8099, -214.8575, -204.0365, -198.7946],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0385, device='cuda:0', dtype=torch.float64)
tensor([-207.3813, -198.7657, -214.5856, -203.7889, -198.6413],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0225, device='cuda:0', dtype=torch.float64)
tensor([-207.4692, -198.2598, -214.8723, -204.2685, -198.6726],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0256, device='cuda:0', dtype=torch.float64)
tensor([-207.4489, -198.0397, -214.7609, -204.2400, -198.5311],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0361, device='cuda:0', dtype=torch.float64)
tensor([-207.7105, -197.3219, -215.4720, -205.2095, -198.7268],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0255, device='cuda:0', dtype=torch.float64)
tensor([-208.0025, -196.5687, -216.1827, -206.2528, -198.8792],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0246, device='cuda:0', dtype=torch.float64)
tensor([-208.1220, -196.0119, -216.5514, -206.8954, -198.8415],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0312, device='cuda:0', dtype=torch.float64)
tensor([-207.9771, -195.4442, -216.3039, -206.9896, -198.2250],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0370, device='cuda:0', dtype=torch.float64)
tensor([-207.7537, -195.0649, -215.9147, -206.8445, -197.5893],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0306, device='cuda:0', dtype=torch.float64)
tensor([-207.4877, -194.7971, -215.3577, -206.5051, -196.9285],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0239, device='cuda:0', dtype=torch.float64)
tensor([-206.8488, -195.4174, -213.7502, -204.8766, -195.9878],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0250, device='cuda:0', dtype=torch.float64)
tensor([-206.3130, -196.3776, -211.9979, -203.1183, -195.2518],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0297, device='cuda:0', dtype=torch.float64)
tensor([-206.0780, -197.2044, -211.2097, -202.1427, -195.1849],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0257, device='cuda:0', dtype=torch.float64)
tensor([-206.0676, -197.3122, -211.7280, -202.3420, -195.7093],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0198, device='cuda:0', dtype=torch.float64)
tensor([-206.3180, -196.7251, -213.1553, -203.5396, -196.6068],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0201, device='cuda:0', dtype=torch.float64)
tensor([-206.6195, -196.2532, -214.3696, -204.6449, -197.4233],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0230, device='cuda:0', dtype=torch.float64)
tensor([-207.0717, -195.8618, -215.7035, -205.9052, -198.3864],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0302, device='cuda:0', dtype=torch.float64)
tensor([-207.1520, -195.9555, -216.0914, -206.1494, -198.8095],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0303, device='cuda:0', dtype=torch.float64)
tensor([-206.9209, -196.3065, -215.7272, -205.5831, -198.8286],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0218, device='cuda:0', dtype=torch.float64)
tensor([-206.4649, -196.9677, -214.6781, -204.2568, -198.4808],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0241, device='cuda:0', dtype=torch.float64)
tensor([-205.9764, -197.9622, -213.1699, -202.4599, -197.9412],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0237, device='cuda:0', dtype=torch.float64)
tensor([-205.8858, -198.2612, -212.6182, -201.8192, -197.7551],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0168, device='cuda:0', dtype=torch.float64)
tensor([-206.0378, -197.9257, -212.9493, -202.1974, -197.8676],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0265, device='cuda:0', dtype=torch.float64)
tensor([-206.2535, -197.3977, -213.4392, -202.8640, -197.9660],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0215, device='cuda:0', dtype=torch.float64)
tensor([-206.5814, -196.7384, -214.2768, -203.9007, -198.2282],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0228, device='cuda:0', dtype=torch.float64)
tensor([-206.9152, -196.1274, -215.0426, -204.8649, -198.4721],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0292, device='cuda:0', dtype=torch.float64)
tensor([-207.0163, -196.0586, -215.2407, -205.0574, -198.5823],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0222, device='cuda:0', dtype=torch.float64)
tensor([-206.5593, -196.8336, -214.0144, -203.5634, -198.0689],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0240, device='cuda:0', dtype=torch.float64)
tensor([-206.0806, -198.1103, -212.3655, -201.6081, -197.5133],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0305, device='cuda:0', dtype=torch.float64)
tensor([-205.9675, -198.4880, -211.5969, -200.9190, -197.1192],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0251, device='cuda:0', dtype=torch.float64)
tensor([-206.1607, -197.7283, -212.0440, -201.6668, -197.0073],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0206, device='cuda:0', dtype=torch.float64)
tensor([-206.3842, -197.0781, -212.5006, -202.3601, -196.9842],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0217, device='cuda:0', dtype=torch.float64)
tensor([-206.7472, -196.1631, -213.2872, -203.4729, -197.0857],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0211, device='cuda:0', dtype=torch.float64)
tensor([-207.2211, -195.2250, -214.2694, -204.7870, -197.3587],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0243, device='cuda:0', dtype=torch.float64)
tensor([-207.6691, -194.3699, -215.0080, -205.9094, -197.4986],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0269, device='cuda:0', dtype=torch.float64)
tensor([-207.7401, -193.9790, -214.9462, -206.1046, -197.2483],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0321, device='cuda:0', dtype=torch.float64)
tensor([-207.4523, -194.3103, -214.0945, -205.2498, -196.7680],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0305, device='cuda:0', dtype=torch.float64)
tensor([-207.0760, -194.9280, -212.9032, -203.9961, -196.2411],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0262, device='cuda:0', dtype=torch.float64)
tensor([-206.7165, -195.8219, -211.5736, -202.5783, -195.7823],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0183, device='cuda:0', dtype=torch.float64)
tensor([-206.5287, -196.6261, -210.7734, -201.6177, -195.6569],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0246, device='cuda:0', dtype=torch.float64)
tensor([-206.5162, -196.9944, -210.6397, -201.3249, -195.7162],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0239, device='cuda:0', dtype=torch.float64)
tensor([-206.6090, -197.0799, -210.9938, -201.4459, -196.0341],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0222, device='cuda:0', dtype=torch.float64)
tensor([-206.7361, -196.9233, -211.4362, -201.7621, -196.3275],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0229, device='cuda:0', dtype=torch.float64)
tensor([-207.0267, -196.2728, -212.5791, -202.8351, -196.9300],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0333, device='cuda:0', dtype=torch.float64)
tensor([-207.1493, -196.4116, -213.1900, -203.1128, -197.5936],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0290, device='cuda:0', dtype=torch.float64)
tensor([-207.3126, -196.3621, -213.8130, -203.5825, -198.1596],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0197, device='cuda:0', dtype=torch.float64)
tensor([-207.5033, -196.3505, -214.4413, -204.0762, -198.7572],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0256, device='cuda:0', dtype=torch.float64)
tensor([-207.2991, -196.8668, -214.0603, -203.3922, -198.8395],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0384, device='cuda:0', dtype=torch.float64)
tensor([-207.0615, -197.3131, -213.5581, -202.6494, -198.7591],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0282, device='cuda:0', dtype=torch.float64)
tensor([-206.8880, -197.6461, -213.1152, -202.0450, -198.6549],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0373, device='cuda:0', dtype=torch.float64)
tensor([-206.8054, -197.8621, -212.9098, -201.6976, -198.6422],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0205, device='cuda:0', dtype=torch.float64)
tensor([-206.8466, -197.7014, -213.2156, -202.0132, -198.7982],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0230, device='cuda:0', dtype=torch.float64)
tensor([-206.9107, -197.5199, -213.5444, -202.3467, -198.9318],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0225, device='cuda:0', dtype=torch.float64)
tensor([-206.9528, -197.4085, -213.7706, -202.5594, -199.0214],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0194, device='cuda:0', dtype=torch.float64)
tensor([-207.1450, -196.9974, -214.3727, -203.3205, -199.2631],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0292, device='cuda:0', dtype=torch.float64)
tensor([-207.1346, -196.9136, -214.4456, -203.4404, -199.2436],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0273, device='cuda:0', dtype=torch.float64)
tensor([-206.8572, -197.2675, -213.7510, -202.6358, -198.8503],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0250, device='cuda:0', dtype=torch.float64)
tensor([-206.5925, -197.7865, -212.9635, -201.7022, -198.4516],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0272, device='cuda:0', dtype=torch.float64)
tensor([-206.5022, -197.9646, -212.6160, -201.3690, -198.1977],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0272, device='cuda:0', dtype=torch.float64)
tensor([-206.4676, -198.0040, -212.3829, -201.2093, -197.9346],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0207, device='cuda:0', dtype=torch.float64)
tensor([-206.4026, -198.0195, -212.1223, -201.0320, -197.6488],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0207, device='cuda:0', dtype=torch.float64)
tensor([-206.4315, -197.7948, -212.1277, -201.1638, -197.4880],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0302, device='cuda:0', dtype=torch.float64)
tensor([-206.5695, -197.2126, -212.7738, -201.9970, -197.6294],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1406, device='cuda:0', dtype=torch.float64)
tensor([-206.8837, -196.4553, -213.8485, -203.2785, -198.0190],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0197, device='cuda:0', dtype=torch.float64)
tensor([-207.1167, -195.9707, -214.5618, -204.1869, -198.2809],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0234, device='cuda:0', dtype=torch.float64)
tensor([-207.0936, -195.8956, -214.5844, -204.2924, -198.1923],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0213, device='cuda:0', dtype=torch.float64)
tensor([-207.0434, -195.8854, -214.5897, -204.3612, -198.1176],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0202, device='cuda:0', dtype=torch.float64)
tensor([-206.8814, -196.0182, -214.2633, -204.0998, -197.8292],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0170, device='cuda:0', dtype=torch.float64)
tensor([-206.5539, -196.6147, -213.3888, -203.1304, -197.3994],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0222, device='cuda:0', dtype=torch.float64)
tensor([-206.2711, -197.1431, -212.6441, -202.3794, -197.0073],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0240, device='cuda:0', dtype=torch.float64)
tensor([-206.2397, -196.9197, -212.7084, -202.6806, -196.8095],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0261, device='cuda:0', dtype=torch.float64)
tensor([-206.3590, -196.2604, -213.2050, -203.5173, -196.7499],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0299, device='cuda:0', dtype=torch.float64)
tensor([-206.4944, -195.6976, -213.6969, -204.2724, -196.7971],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0258, device='cuda:0', dtype=torch.float64)
tensor([-206.8168, -194.7916, -214.7453, -205.7109, -197.0862],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0260, device='cuda:0', dtype=torch.float64)
tensor([-207.0442, -194.2758, -215.3246, -206.5762, -197.2726],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0282, device='cuda:0', dtype=torch.float64)
tensor([-206.8101, -194.1921, -214.7375, -206.2056, -196.7481],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0190, device='cuda:0', dtype=torch.float64)
tensor([-206.2551, -194.6739, -213.3077, -204.8935, -195.8859],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0287, device='cuda:0', dtype=torch.float64)
tensor([-205.8171, -195.4812, -211.9088, -203.4752, -195.2640],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0227, device='cuda:0', dtype=torch.float64)
tensor([-205.5109, -196.3631, -210.6482, -202.2056, -194.8435],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0153, device='cuda:0', dtype=torch.float64)
tensor([-205.2735, -197.5489, -209.3283, -200.8364, -194.5883],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0270, device='cuda:0', dtype=torch.float64)
tensor([-205.1496, -197.6761, -209.1641, -200.6927, -194.5652],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0280, device='cuda:0', dtype=torch.float64)
tensor([-205.0842, -196.9969, -210.0292, -201.5325, -194.8544],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0193, device='cuda:0', dtype=torch.float64)
tensor([-205.0868, -196.4494, -211.1927, -202.5408, -195.4675],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0277, device='cuda:0', dtype=torch.float64)
tensor([-205.6305, -195.2025, -213.6445, -204.9468, -196.7594],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0163, device='cuda:0', dtype=torch.float64)
tensor([-206.6317, -194.1373, -216.2667, -207.7471, -198.4583],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0270, device='cuda:0', dtype=torch.float64)
tensor([-207.8534, -193.5094, -218.6783, -210.4991, -200.2300],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0224, device='cuda:0', dtype=torch.float64)
tensor([-207.9033, -193.4065, -218.8804, -210.8302, -200.3901],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0247, device='cuda:0', dtype=torch.float64)
tensor([-206.7444, -193.9493, -216.9171, -208.6171, -199.1123],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0168, device='cuda:0', dtype=torch.float64)
tensor([-205.5971, -194.8663, -214.5296, -206.0482, -197.7391],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0242, device='cuda:0', dtype=torch.float64)
tensor([-204.5542, -196.4709, -211.4835, -202.9239, -196.3183],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0189, device='cuda:0', dtype=torch.float64)
tensor([-204.0483, -198.4867, -208.7304, -200.2190, -195.5265],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0331, device='cuda:0', dtype=torch.float64)
tensor([-203.9471, -200.3051, -207.0213, -198.4837, -195.4686],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0365, device='cuda:0', dtype=torch.float64)
tensor([-203.8403, -200.6346, -206.5338, -198.1559, -195.4270],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0369, device='cuda:0', dtype=torch.float64)
tensor([-203.7162, -199.5242, -207.7473, -199.2994, -195.6627],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0289, device='cuda:0', dtype=torch.float64)
tensor([-203.8485, -197.8247, -210.1897, -201.5711, -196.5045],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0259, device='cuda:0', dtype=torch.float64)
tensor([-204.0978, -197.2520, -211.7642, -202.9220, -197.4480],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0303, device='cuda:0', dtype=torch.float64)
tensor([-204.6134, -196.6426, -213.5628, -204.5822, -198.6669],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0204, device='cuda:0', dtype=torch.float64)
tensor([-205.0975, -196.3466, -214.8479, -205.8286, -199.6801],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0234, device='cuda:0', dtype=torch.float64)
tensor([-205.4879, -196.2721, -215.7565, -206.6765, -200.5536],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0274, device='cuda:0', dtype=torch.float64)
tensor([-205.6994, -196.3636, -216.2004, -207.0150, -201.1331],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0351, device='cuda:0', dtype=torch.float64)
tensor([-205.5599, -196.6006, -215.8723, -206.5110, -201.2009],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0351, device='cuda:0', dtype=torch.float64)
tensor([-205.2016, -196.9808, -215.0023, -205.3886, -200.8540],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0212, device='cuda:0', dtype=torch.float64)
tensor([-204.6621, -197.7458, -213.6279, -203.6139, -200.2459],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0250, device='cuda:0', dtype=torch.float64)
tensor([-204.1472, -199.0557, -211.8049, -201.2629, -199.5397],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0142, device='cuda:0', dtype=torch.float64)
tensor([-203.9396, -200.2739, -210.4494, -199.5255, -199.1796],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0229, device='cuda:0', dtype=torch.float64)
tensor([-203.9100, -200.7707, -209.9053, -198.8541, -199.0696],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0289, device='cuda:0', dtype=torch.float64)
tensor([-203.9388, -200.4892, -210.0512, -199.0575, -199.0614],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0262, device='cuda:0', dtype=torch.float64)
tensor([-204.0775, -199.1497, -211.0730, -200.4445, -199.2066],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0199, device='cuda:0', dtype=torch.float64)
tensor([-204.4322, -197.7798, -212.5047, -202.3003, -199.6319],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0177, device='cuda:0', dtype=torch.float64)
tensor([-204.9008, -196.6326, -213.8639, -204.1120, -200.1206],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0353, device='cuda:0', dtype=torch.float64)
tensor([-205.5942, -195.6493, -215.4508, -206.1670, -200.8705],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0179, device='cuda:0', dtype=torch.float64)
tensor([-206.1217, -195.0404, -216.4594, -207.5149, -201.3189],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0363, device='cuda:0', dtype=torch.float64)
tensor([-206.0444, -194.8458, -216.2624, -207.3825, -201.0159],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0200, device='cuda:0', dtype=torch.float64)
tensor([-205.1563, -195.5505, -214.4667, -205.1969, -199.9320],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0183, device='cuda:0', dtype=torch.float64)
tensor([-204.3312, -196.7324, -212.2635, -202.5557, -198.8417],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0229, device='cuda:0', dtype=torch.float64)
tensor([-203.8793, -198.1832, -210.1382, -200.0907, -198.0252],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0235, device='cuda:0', dtype=torch.float64)
tensor([-203.7856, -198.6963, -209.1959, -199.1553, -197.6581],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0264, device='cuda:0', dtype=torch.float64)
tensor([-203.8148, -198.1655, -209.4443, -199.6073, -197.5608],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0212, device='cuda:0', dtype=torch.float64)
tensor([-203.9590, -197.2175, -210.2388, -200.6572, -197.5940],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0281, device='cuda:0', dtype=torch.float64)
tensor([-204.2101, -196.3478, -211.1333, -201.8057, -197.6804],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0152, device='cuda:0', dtype=torch.float64)
tensor([-204.5086, -195.5479, -212.0739, -202.9983, -197.8405],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0201, device='cuda:0', dtype=torch.float64)
tensor([-204.6325, -195.3478, -212.3801, -203.3722, -197.8602],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0219, device='cuda:0', dtype=torch.float64)
tensor([-204.6711, -195.2964, -212.3305, -203.4052, -197.6889],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0185, device='cuda:0', dtype=torch.float64)
tensor([-204.7603, -195.1845, -212.5139, -203.6689, -197.6267],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0186, device='cuda:0', dtype=torch.float64)
tensor([-204.7803, -195.1362, -212.4408, -203.7179, -197.3905],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0202, device='cuda:0', dtype=torch.float64)
tensor([-204.6575, -195.2009, -211.9902, -203.4312, -196.9559],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0165, device='cuda:0', dtype=torch.float64)
tensor([-204.4444, -195.7083, -211.1365, -202.6025, -196.5908],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0293, device='cuda:0', dtype=torch.float64)
tensor([-204.3342, -196.2604, -210.6021, -201.9910, -196.4988],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0224, device='cuda:0', dtype=torch.float64)
tensor([-204.2238, -196.8811, -210.1522, -201.4094, -196.5241],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0417, device='cuda:0', dtype=torch.float64)
tensor([-204.1765, -197.1475, -209.9945, -201.2042, -196.5655],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0276, device='cuda:0', dtype=torch.float64)
tensor([-204.1907, -197.4939, -210.1601, -201.1444, -196.8979],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0167, device='cuda:0', dtype=torch.float64)
tensor([-204.2401, -197.5977, -210.5174, -201.3212, -197.2417],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0320, device='cuda:0', dtype=torch.float64)
tensor([-204.4296, -197.2922, -211.2719, -202.0129, -197.6476],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0204, device='cuda:0', dtype=torch.float64)
tensor([-204.6443, -197.0272, -212.0297, -202.7399, -198.0711],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0205, device='cuda:0', dtype=torch.float64)
tensor([-204.9144, -196.7060, -212.8531, -203.5693, -198.5550],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0276, device='cuda:0', dtype=torch.float64)
tensor([-205.1402, -196.5292, -213.5547, -204.2566, -198.9936],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0183, device='cuda:0', dtype=torch.float64)
tensor([-205.3183, -196.3900, -214.0419, -204.7336, -199.3147],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0173, device='cuda:0', dtype=torch.float64)
tensor([-205.2374, -196.4707, -213.9600, -204.6419, -199.2503],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0171, device='cuda:0', dtype=torch.float64)
tensor([-205.3814, -196.2817, -214.3891, -205.1445, -199.4274],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0289, device='cuda:0', dtype=torch.float64)
tensor([-205.2113, -196.4970, -214.0401, -204.7496, -199.2326],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0219, device='cuda:0', dtype=torch.float64)
tensor([-204.9125, -196.7482, -213.2853, -204.0003, -198.7226],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0154, device='cuda:0', dtype=torch.float64)
tensor([-204.4976, -197.5401, -212.0433, -202.6056, -198.1882],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0285, device='cuda:0', dtype=torch.float64)
tensor([-204.2380, -198.2751, -211.0669, -201.5166, -197.8291],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0191, device='cuda:0', dtype=torch.float64)
tensor([-204.1177, -198.8331, -210.3847, -200.7719, -197.6080],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0202, device='cuda:0', dtype=torch.float64)
tensor([-204.1205, -198.8529, -210.3986, -200.7749, -197.5963],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0202, device='cuda:0', dtype=torch.float64)
tensor([-204.0727, -199.2116, -210.1400, -200.4264, -197.5609],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0264, device='cuda:0', dtype=torch.float64)
tensor([-204.1277, -199.0505, -210.4771, -200.7548, -197.6588],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0241, device='cuda:0', dtype=torch.float64)
tensor([-204.2082, -198.8072, -210.8781, -201.1992, -197.7546],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0512, device='cuda:0', dtype=torch.float64)
tensor([-204.2903, -198.4907, -211.0250, -201.4982, -197.6361],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0175, device='cuda:0', dtype=torch.float64)
tensor([-204.2994, -198.3663, -210.8212, -201.4432, -197.3443],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0269, device='cuda:0', dtype=torch.float64)
tensor([-204.3224, -198.0790, -210.8078, -201.6284, -197.1053],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0239, device='cuda:0', dtype=torch.float64)
tensor([-204.4627, -197.3364, -211.4203, -202.4769, -197.1230],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0166, device='cuda:0', dtype=torch.float64)
tensor([-204.6239, -196.7398, -212.0565, -203.3004, -197.2918],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0197, device='cuda:0', dtype=torch.float64)
tensor([-204.8726, -195.8513, -212.8077, -204.4199, -197.3498],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0185, device='cuda:0', dtype=torch.float64)
tensor([-204.9190, -195.3265, -212.9308, -204.8655, -197.1212],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0231, device='cuda:0', dtype=torch.float64)
tensor([-204.5966, -195.4207, -211.8928, -204.0834, -196.3839],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0175, device='cuda:0', dtype=torch.float64)
tensor([-204.2644, -195.8869, -210.6918, -203.0488, -195.7660],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0267, device='cuda:0', dtype=torch.float64)
tensor([-204.0696, -196.1831, -209.6659, -202.2764, -195.2144],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0151, device='cuda:0', dtype=torch.float64)
tensor([-204.0019, -196.2536, -209.1413, -201.9723, -194.9068],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0335, device='cuda:0', dtype=torch.float64)
tensor([-204.0119, -196.3979, -209.3406, -202.1199, -195.1654],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3354, device='cuda:0', dtype=torch.float64)
tensor([-204.3007, -196.2457, -210.6458, -203.1273, -195.9736],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0235, device='cuda:0', dtype=torch.float64)
tensor([-204.5726, -196.3889, -211.5192, -203.7304, -196.7046],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0240, device='cuda:0', dtype=torch.float64)
tensor([-204.8666, -196.4770, -212.4264, -204.4317, -197.4983],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0255, device='cuda:0', dtype=torch.float64)
tensor([-205.0758, -196.8125, -212.9697, -204.7299, -198.1826],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0186, device='cuda:0', dtype=torch.float64)
tensor([-204.8957, -197.6602, -212.3767, -203.8026, -198.3015],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0345, device='cuda:0', dtype=torch.float64)
tensor([-204.7219, -198.5207, -211.7302, -202.8216, -198.4300],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0951, device='cuda:0', dtype=torch.float64)
tensor([-204.4167, -199.6385, -210.2510, -201.1037, -198.0610],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0247, device='cuda:0', dtype=torch.float64)
tensor([-204.2396, -200.7076, -208.9635, -199.6724, -197.8141],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0235, device='cuda:0', dtype=torch.float64)
tensor([-204.1920, -201.6290, -207.9825, -198.5863, -197.7147],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0235, device='cuda:0', dtype=torch.float64)
tensor([-204.1955, -201.8944, -207.5388, -198.1991, -197.5908],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0219, device='cuda:0', dtype=torch.float64)
tensor([-204.2677, -200.3806, -208.8823, -199.7297, -197.7644],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0189, device='cuda:0', dtype=torch.float64)
tensor([-204.5286, -198.7785, -210.4857, -201.6646, -198.1169],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0220, device='cuda:0', dtype=torch.float64)
tensor([-205.0863, -197.2108, -212.4247, -204.0451, -198.7913],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0261, device='cuda:0', dtype=torch.float64)
tensor([-205.6899, -196.1179, -213.9486, -205.9603, -199.4253],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0242, device='cuda:0', dtype=torch.float64)
tensor([-206.2843, -195.1668, -215.1399, -207.5840, -199.8724],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0244, device='cuda:0', dtype=torch.float64)
tensor([-206.8715, -194.3382, -216.2206, -209.1058, -200.2833],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0209, device='cuda:0', dtype=torch.float64)
tensor([-206.8518, -193.8922, -216.1847, -209.3243, -199.9975],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0200, device='cuda:0', dtype=torch.float64)
tensor([-206.0779, -193.9418, -214.6771, -207.8522, -198.8182],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0201, device='cuda:0', dtype=torch.float64)
tensor([-204.8720, -194.6920, -211.8538, -204.9793, -197.0560],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0220, device='cuda:0', dtype=torch.float64)
tensor([-203.9214, -196.3057, -208.5119, -201.6762, -195.5813],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0349, device='cuda:0', dtype=torch.float64)
tensor([-203.6006, -197.9563, -205.8825, -199.2533, -194.8173],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0189, device='cuda:0', dtype=torch.float64)
tensor([-203.6309, -199.4685, -204.2271, -197.7139, -194.6545],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0237, device='cuda:0', dtype=torch.float64)
tensor([-203.6958, -200.0795, -203.9390, -197.2942, -194.8092],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0196, device='cuda:0', dtype=torch.float64)
tensor([-203.6608, -199.9210, -204.5281, -197.6412, -195.0695],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0180, device='cuda:0', dtype=torch.float64)
tensor([-203.6110, -199.0826, -205.7818, -198.6581, -195.3967],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0313, device='cuda:0', dtype=torch.float64)
tensor([-203.8363, -196.8632, -208.5790, -201.4136, -196.0713],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0302, device='cuda:0', dtype=torch.float64)
tensor([-204.3977, -195.5300, -211.0015, -203.8478, -197.1101],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0138, device='cuda:0', dtype=torch.float64)
tensor([-205.0999, -194.7676, -213.0056, -205.9131, -198.2542],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0244, device='cuda:0', dtype=torch.float64)
tensor([-205.6629, -194.5169, -214.4175, -207.3330, -199.2716],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0262, device='cuda:0', dtype=torch.float64)
tensor([-205.6966, -194.7321, -214.6916, -207.4574, -199.6450],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0237, device='cuda:0', dtype=torch.float64)
tensor([-205.0173, -195.6109, -213.6546, -205.9718, -199.3515],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0176, device='cuda:0', dtype=torch.float64)
tensor([-204.5248, -196.2899, -212.9392, -204.9645, -199.1537],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0239, device='cuda:0', dtype=torch.float64)
tensor([-204.0799, -197.1259, -212.3335, -204.0053, -199.1651],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0212, device='cuda:0', dtype=torch.float64)
tensor([-203.3767, -198.4671, -210.7553, -201.9996, -198.7125],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0216, device='cuda:0', dtype=torch.float64)
tensor([-202.9345, -199.6530, -209.6334, -200.5602, -198.5310],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0222, device='cuda:0', dtype=torch.float64)
tensor([-202.5984, -200.7673, -208.6454, -199.3413, -198.4238],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0166, device='cuda:0', dtype=torch.float64)
tensor([-202.4148, -201.4390, -208.0267, -198.6566, -198.3512],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0195, device='cuda:0', dtype=torch.float64)
tensor([-202.3426, -201.2335, -208.1949, -198.9425, -198.3161],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0188, device='cuda:0', dtype=torch.float64)
tensor([-202.2687, -201.0662, -208.2990, -199.1801, -198.2835],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0337, device='cuda:0', dtype=torch.float64)
tensor([-202.4186, -199.8740, -209.3966, -200.6117, -198.3439],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0189, device='cuda:0', dtype=torch.float64)
tensor([-202.9781, -198.0311, -211.4827, -203.2493, -198.7615],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0295, device='cuda:0', dtype=torch.float64)
tensor([-203.8315, -196.4937, -213.6716, -206.0419, -199.4488],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0176, device='cuda:0', dtype=torch.float64)
tensor([-204.6374, -195.5485, -215.3300, -208.1756, -200.1222],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0162, device='cuda:0', dtype=torch.float64)
tensor([-205.2372, -194.8166, -216.4208, -209.7008, -200.4482],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0248, device='cuda:0', dtype=torch.float64)
tensor([-205.0535, -194.5435, -216.1848, -209.6747, -199.9815],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0162, device='cuda:0', dtype=torch.float64)
tensor([-204.3480, -194.4649, -214.9820, -208.6443, -198.9073],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0192, device='cuda:0', dtype=torch.float64)
tensor([-203.4174, -194.8713, -213.1435, -206.8720, -197.6860],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0323, device='cuda:0', dtype=torch.float64)
tensor([-202.4180, -196.0009, -210.6105, -204.3084, -196.4637],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0208, device='cuda:0', dtype=torch.float64)
tensor([-201.7925, -197.5631, -208.3303, -201.9327, -195.7830],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0237, device='cuda:0', dtype=torch.float64)
tensor([-201.5844, -198.7791, -207.1216, -200.6005, -195.6754],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0180, device='cuda:0', dtype=torch.float64)
tensor([-201.5504, -199.7073, -207.0481, -200.1438, -196.1384],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0196, device='cuda:0', dtype=torch.float64)
tensor([-201.6196, -200.0464, -207.8714, -200.4968, -196.8437],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0288, device='cuda:0', dtype=torch.float64)
tensor([-202.0530, -199.6759, -210.0908, -202.1619, -198.1328],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0146, device='cuda:0', dtype=torch.float64)
tensor([-202.7623, -199.0574, -212.3090, -204.1645, -199.4560],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0243, device='cuda:0', dtype=torch.float64)
tensor([-203.4572, -198.8382, -213.8825, -205.6008, -200.6529],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0445, device='cuda:0', dtype=torch.float64)
tensor([-204.1597, -198.7726, -215.2080, -206.8578, -201.7930],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0248, device='cuda:0', dtype=torch.float64)
tensor([-205.0818, -198.6253, -216.6644, -208.3643, -203.0920],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0147, device='cuda:0', dtype=torch.float64)
tensor([-205.2318, -198.8796, -216.7390, -208.2980, -203.4848],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0199, device='cuda:0', dtype=torch.float64)
tensor([-204.9891, -199.3097, -216.1625, -207.4866, -203.4462],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0302, device='cuda:0', dtype=torch.float64)
tensor([-203.8277, -200.5363, -213.7660, -204.4977, -202.3447],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0189, device='cuda:0', dtype=torch.float64)
tensor([-202.9694, -202.0627, -211.3939, -201.5835, -201.4538],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0219, device='cuda:0', dtype=torch.float64)
tensor([-202.5328, -203.5641, -209.3582, -199.2150, -200.8335],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0217, device='cuda:0', dtype=torch.float64)
tensor([-202.4340, -204.5834, -208.2008, -197.9081, -200.6064],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0231, device='cuda:0', dtype=torch.float64)
tensor([-202.4990, -204.9849, -207.5702, -197.3347, -200.3800],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0249, device='cuda:0', dtype=torch.float64)
tensor([-202.6185, -204.3112, -207.7489, -197.8152, -200.0519],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0172, device='cuda:0', dtype=torch.float64)
tensor([-202.7374, -203.4964, -208.1517, -198.5383, -199.7485],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0188, device='cuda:0', dtype=torch.float64)
tensor([-203.0634, -201.7293, -209.4741, -200.3991, -199.5713],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0165, device='cuda:0', dtype=torch.float64)
tensor([-203.5046, -200.0779, -210.7404, -202.2584, -199.4540],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0220, device='cuda:0', dtype=torch.float64)
tensor([-204.0602, -198.5318, -212.0754, -204.1800, -199.4962],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0189, device='cuda:0', dtype=torch.float64)
tensor([-204.5925, -197.2746, -213.1190, -205.7762, -199.4979],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0181, device='cuda:0', dtype=torch.float64)
tensor([-204.7480, -196.3831, -213.2069, -206.3515, -198.9619],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0407, device='cuda:0', dtype=torch.float64)
tensor([-204.6768, -195.7560, -212.7606, -206.2823, -198.2094],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0249, device='cuda:0', dtype=torch.float64)
tensor([-204.4479, -195.3650, -211.9345, -205.7668, -197.3548],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0273, device='cuda:0', dtype=torch.float64)
tensor([-204.3427, -195.0287, -211.3700, -205.4699, -196.7159],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0162, device='cuda:0', dtype=torch.float64)
tensor([-204.0130, -194.9532, -210.1270, -204.5042, -195.7640],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0233, device='cuda:0', dtype=torch.float64)
tensor([-203.8375, -194.7248, -209.1907, -203.8863, -194.9859],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0381, device='cuda:0', dtype=torch.float64)
tensor([-203.7435, -194.4235, -208.4115, -203.4420, -194.3126],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0433, device='cuda:0', dtype=torch.float64)
tensor([-203.7934, -194.0114, -208.3101, -203.5497, -194.0280],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0224, device='cuda:0', dtype=torch.float64)
tensor([-203.9497, -193.7284, -208.7010, -203.9743, -194.1324],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0166, device='cuda:0', dtype=torch.float64)
tensor([-204.1034, -193.6203, -209.2509, -204.4428, -194.4255],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0266, device='cuda:0', dtype=torch.float64)
tensor([-204.3087, -193.6948, -210.1116, -205.0712, -194.9942],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0225, device='cuda:0', dtype=torch.float64)
tensor([-204.6745, -193.7209, -211.4299, -206.1229, -195.8906],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0226, device='cuda:0', dtype=torch.float64)
tensor([-204.8147, -193.9172, -211.9138, -206.3954, -196.3133],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0195, device='cuda:0', dtype=torch.float64)
tensor([-204.7591, -194.2489, -211.8010, -206.1020, -196.3992],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0194, device='cuda:0', dtype=torch.float64)
tensor([-204.5564, -194.6271, -211.2208, -205.3975, -196.1858],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0148, device='cuda:0', dtype=torch.float64)
tensor([-204.2522, -195.1922, -210.2677, -204.3168, -195.8232],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0263, device='cuda:0', dtype=torch.float64)
tensor([-204.0629, -195.5542, -209.6779, -203.6461, -195.5937],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0205, device='cuda:0', dtype=torch.float64)
tensor([-203.9905, -195.7263, -209.5346, -203.4224, -195.5699],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0217, device='cuda:0', dtype=torch.float64)
tensor([-204.0144, -195.8449, -209.6610, -203.4406, -195.7111],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0163, device='cuda:0', dtype=torch.float64)
tensor([-204.0090, -196.0398, -209.7167, -203.3582, -195.8547],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0197, device='cuda:0', dtype=torch.float64)
tensor([-203.9975, -196.2676, -209.7517, -203.2442, -196.0252],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0282, device='cuda:0', dtype=torch.float64)
tensor([-203.9642, -196.5453, -209.7011, -203.0350, -196.1586],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0206, device='cuda:0', dtype=torch.float64)
tensor([-204.0354, -196.5391, -210.0755, -203.2934, -196.4261],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0171, device='cuda:0', dtype=torch.float64)
tensor([-204.1026, -196.6862, -210.3920, -203.4204, -196.7421],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0253, device='cuda:0', dtype=torch.float64)
tensor([-204.0109, -197.3060, -210.4077, -203.1041, -197.1086],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0142, device='cuda:0', dtype=torch.float64)
tensor([-204.0974, -197.5775, -211.0262, -203.4136, -197.6921],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0193, device='cuda:0', dtype=torch.float64)
tensor([-204.3276, -197.5052, -211.9596, -204.1497, -198.3573],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0228, device='cuda:0', dtype=torch.float64)
tensor([-204.5536, -197.3591, -212.6652, -204.7731, -198.8467],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0163, device='cuda:0', dtype=torch.float64)
tensor([-204.6425, -197.3689, -213.0266, -205.0702, -199.1621],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0165, device='cuda:0', dtype=torch.float64)
tensor([-204.6064, -197.6483, -213.0905, -204.9958, -199.3993],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0126, device='cuda:0', dtype=torch.float64)
tensor([-204.3691, -198.1172, -212.5882, -204.3569, -199.3150],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0177, device='cuda:0', dtype=torch.float64)
tensor([-204.2545, -198.4665, -212.4568, -204.0944, -199.4155],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0166, device='cuda:0', dtype=torch.float64)
tensor([-204.0443, -199.0211, -211.9694, -203.4534, -199.3718],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0731, device='cuda:0', dtype=torch.float64)
tensor([-203.8195, -199.8020, -211.4110, -202.6631, -199.3823],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0282, device='cuda:0', dtype=torch.float64)
tensor([-203.7878, -200.1260, -211.3900, -202.5061, -199.5549],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0196, device='cuda:0', dtype=torch.float64)
tensor([-203.7017, -200.5638, -211.1884, -202.1636, -199.6457],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5200, device='cuda:0', dtype=torch.float64)
tensor([-203.6944, -200.9067, -210.9790, -201.8292, -199.6427],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0213, device='cuda:0', dtype=torch.float64)
tensor([-203.7128, -201.2191, -210.7345, -201.4813, -199.6089],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0412, device='cuda:0', dtype=torch.float64)
tensor([-203.7432, -201.2320, -210.5742, -201.3719, -199.4610],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0266, device='cuda:0', dtype=torch.float64)
tensor([-203.8369, -201.0192, -210.6196, -201.5218, -199.3711],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0180, device='cuda:0', dtype=torch.float64)
tensor([-204.0939, -200.2063, -211.2196, -202.3702, -199.4053],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0263, device='cuda:0', dtype=torch.float64)
tensor([-204.4483, -199.4645, -212.1011, -203.4168, -199.6917],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0211, device='cuda:0', dtype=torch.float64)
tensor([-204.8716, -198.7134, -213.1285, -204.6618, -200.1113],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0136, device='cuda:0', dtype=torch.float64)
tensor([-205.4767, -197.7539, -214.4379, -206.3358, -200.6299],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0179, device='cuda:0', dtype=torch.float64)
tensor([-205.6272, -197.2466, -214.6134, -206.8053, -200.5006],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0147, device='cuda:0', dtype=torch.float64)
tensor([-205.4336, -197.1152, -214.1229, -206.4688, -200.0458],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0256, device='cuda:0', dtype=torch.float64)
tensor([-205.0845, -197.1479, -213.3158, -205.7718, -199.4258],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0174, device='cuda:0', dtype=torch.float64)
tensor([-204.7805, -197.1498, -212.5576, -205.1555, -198.8405],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0229, device='cuda:0', dtype=torch.float64)
tensor([-204.4336, -197.2862, -211.6600, -204.3856, -198.2032],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0167, device='cuda:0', dtype=torch.float64)
tensor([-204.1330, -197.5742, -210.8551, -203.6359, -197.7458],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0139, device='cuda:0', dtype=torch.float64)
tensor([-203.8885, -197.8151, -210.1282, -202.9839, -197.3472],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0207, device='cuda:0', dtype=torch.float64)
tensor([-203.6656, -198.1568, -209.5375, -202.4100, -197.1079],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0174, device='cuda:0', dtype=torch.float64)
tensor([-203.5007, -198.3577, -209.1186, -202.0596, -196.9310],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0272, device='cuda:0', dtype=torch.float64)
tensor([-203.5093, -198.0081, -209.4820, -202.5339, -196.9905],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0173, device='cuda:0', dtype=torch.float64)
tensor([-203.6172, -197.4548, -210.1721, -203.3517, -197.1772],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0174, device='cuda:0', dtype=torch.float64)
tensor([-203.8835, -196.9295, -211.2628, -204.4851, -197.6506],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0138, device='cuda:0', dtype=torch.float64)
tensor([-204.1240, -196.6028, -212.2600, -205.5063, -198.1808],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0195, device='cuda:0', dtype=torch.float64)
tensor([-204.2276, -196.4121, -212.7646, -206.0796, -198.4476],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0861, device='cuda:0', dtype=torch.float64)
tensor([-204.2798, -196.2328, -213.1226, -206.4972, -198.5588],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0198, device='cuda:0', dtype=torch.float64)
tensor([-204.0480, -196.2749, -212.8087, -206.2266, -198.3037],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0155, device='cuda:0', dtype=torch.float64)
tensor([-204.0406, -196.1445, -212.9684, -206.4415, -198.3074],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0221, device='cuda:0', dtype=torch.float64)
tensor([-203.6159, -196.5651, -212.1970, -205.6043, -197.9450],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0174, device='cuda:0', dtype=torch.float64)
tensor([-203.5159, -196.6960, -212.2131, -205.5598, -197.9844],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0121, device='cuda:0', dtype=torch.float64)
tensor([-203.3189, -196.9794, -212.0038, -205.2492, -197.9483],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0211, device='cuda:0', dtype=torch.float64)
tensor([-203.0366, -197.3236, -211.5464, -204.7292, -197.7810],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0248, device='cuda:0', dtype=torch.float64)
tensor([-202.6949, -197.8706, -210.8837, -203.9488, -197.5935],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0221, device='cuda:0', dtype=torch.float64)
tensor([-202.5888, -198.0070, -210.9494, -203.9385, -197.6944],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0224, device='cuda:0', dtype=torch.float64)
tensor([-202.5384, -197.8868, -211.1177, -204.1571, -197.7579],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0179, device='cuda:0', dtype=torch.float64)
tensor([-202.5452, -197.7768, -211.4703, -204.5117, -197.9311],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0241, device='cuda:0', dtype=torch.float64)
tensor([-202.3327, -197.8868, -211.1035, -204.1681, -197.7276],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0184, device='cuda:0', dtype=torch.float64)
tensor([-202.1086, -197.9878, -210.7115, -203.8107, -197.4962],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0175, device='cuda:0', dtype=torch.float64)
tensor([-201.8587, -198.2647, -210.1941, -203.2941, -197.2762],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0140, device='cuda:0', dtype=torch.float64)
tensor([-201.7648, -198.3421, -210.1056, -203.1748, -197.2336],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0884, device='cuda:0', dtype=torch.float64)
tensor([-201.5613, -199.0099, -209.6865, -202.5543, -197.3221],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0190, device='cuda:0', dtype=torch.float64)
tensor([-201.5985, -199.2052, -209.9745, -202.6523, -197.6175],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0171, device='cuda:0', dtype=torch.float64)
tensor([-201.8035, -199.0328, -210.8268, -203.3536, -198.1204],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0173, device='cuda:0', dtype=torch.float64)
tensor([-202.0912, -198.7828, -211.8023, -204.2225, -198.6807],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0193, device='cuda:0', dtype=torch.float64)
tensor([-202.2348, -198.9222, -212.2572, -204.5036, -199.0801],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0154, device='cuda:0', dtype=torch.float64)
tensor([-202.2695, -198.9062, -212.3271, -204.5601, -199.1294],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0227, device='cuda:0', dtype=torch.float64)
tensor([-202.0308, -199.2623, -211.6655, -203.8603, -198.8422],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0145, device='cuda:0', dtype=torch.float64)
tensor([-201.6942, -199.7239, -210.4888, -202.7603, -198.2843],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0191, device='cuda:0', dtype=torch.float64)
tensor([-201.4265, -200.2759, -209.2961, -201.6711, -197.7860],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0186, device='cuda:0', dtype=torch.float64)
tensor([-201.2460, -201.0162, -208.0930, -200.5598, -197.4078],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0205, device='cuda:0', dtype=torch.float64)
tensor([-201.2244, -201.2804, -207.8372, -200.3105, -197.4035],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0180, device='cuda:0', dtype=torch.float64)
tensor([-201.3303, -200.9550, -208.6435, -201.0049, -197.7156],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0209, device='cuda:0', dtype=torch.float64)
tensor([-201.6127, -200.2673, -210.0534, -202.3326, -198.2367],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0158, device='cuda:0', dtype=torch.float64)
tensor([-202.0485, -199.5377, -211.7981, -204.0522, -199.0150],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0156, device='cuda:0', dtype=torch.float64)
tensor([-202.4607, -198.9618, -212.9559, -205.3334, -199.5054],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0254, device='cuda:0', dtype=torch.float64)
tensor([-202.6248, -198.7110, -213.3570, -205.8499, -199.6122],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0188, device='cuda:0', dtype=torch.float64)
tensor([-202.5667, -198.6051, -213.1242, -205.7579, -199.3374],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0208, device='cuda:0', dtype=torch.float64)
tensor([-202.2324, -198.6663, -212.0394, -204.8984, -198.5987],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0151, device='cuda:0', dtype=torch.float64)
tensor([-202.0305, -198.6068, -211.1549, -204.2982, -197.9768],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0195, device='cuda:0', dtype=torch.float64)
tensor([-201.8199, -198.7168, -210.1122, -203.5138, -197.3548],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0214, device='cuda:0', dtype=torch.float64)
tensor([-201.8608, -198.4674, -209.9168, -203.5381, -197.1165],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0158, device='cuda:0', dtype=torch.float64)
tensor([-202.0774, -197.8419, -210.2561, -204.1215, -197.0367],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0293, device='cuda:0', dtype=torch.float64)
tensor([-202.5449, -196.8326, -211.3965, -205.5341, -197.3147],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0234, device='cuda:0', dtype=torch.float64)
tensor([-203.0472, -196.0308, -212.4969, -206.8728, -197.7031],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0217, device='cuda:0', dtype=torch.float64)
tensor([-203.4216, -195.5370, -213.2480, -207.8040, -198.0356],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0139, device='cuda:0', dtype=torch.float64)
tensor([-203.5182, -195.4862, -213.3730, -207.9493, -198.1638],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0222, device='cuda:0', dtype=torch.float64)
tensor([-202.9557, -196.1607, -212.0068, -206.4611, -197.6136],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0133, device='cuda:0', dtype=torch.float64)
tensor([-202.6537, -196.6257, -211.2864, -205.6344, -197.4113],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0188, device='cuda:0', dtype=torch.float64)
tensor([-202.2137, -197.5251, -210.0473, -204.2242, -197.1052],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0149, device='cuda:0', dtype=torch.float64)
tensor([-201.8566, -198.4865, -208.9042, -202.9238, -196.9345],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0199, device='cuda:0', dtype=torch.float64)
tensor([-201.6943, -198.9587, -208.6096, -202.4746, -197.0438],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0146, device='cuda:0', dtype=torch.float64)
tensor([-201.6208, -199.3471, -208.6009, -202.2688, -197.2937],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0677, device='cuda:0', dtype=torch.float64)
tensor([-201.8614, -199.1388, -209.7379, -203.1086, -197.8933],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6742, device='cuda:0', dtype=torch.float64)
tensor([-202.1198, -198.6963, -210.8168, -204.0881, -198.4613],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0161, device='cuda:0', dtype=torch.float64)
tensor([-202.3295, -198.3088, -211.5003, -204.7857, -198.8138],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0125, device='cuda:0', dtype=torch.float64)
tensor([-202.7981, -197.6842, -212.6723, -206.0237, -199.3664],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0148, device='cuda:0', dtype=torch.float64)
tensor([-203.0242, -197.4564, -213.2102, -206.5599, -199.6933],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0173, device='cuda:0', dtype=torch.float64)
tensor([-203.0576, -197.3871, -213.3515, -206.6893, -199.7928],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0298, device='cuda:0', dtype=torch.float64)
tensor([-202.9347, -197.2446, -212.9671, -206.3966, -199.4678],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0139, device='cuda:0', dtype=torch.float64)
tensor([-202.7660, -197.0916, -212.5134, -206.0653, -199.0934],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0291, device='cuda:0', dtype=torch.float64)
tensor([-202.4959, -197.2062, -211.8445, -205.4149, -198.7163],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0156, device='cuda:0', dtype=torch.float64)
tensor([-202.0745, -197.5697, -210.7367, -204.3240, -198.2043],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0219, device='cuda:0', dtype=torch.float64)
tensor([-201.5601, -198.2132, -208.9728, -202.6861, -197.4951],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0153, device='cuda:0', dtype=torch.float64)
tensor([-201.3448, -198.3712, -207.9312, -201.8783, -197.0361],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0265, device='cuda:0', dtype=torch.float64)
tensor([-201.3381, -198.1587, -207.7976, -201.8630, -196.9093],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0180, device='cuda:0', dtype=torch.float64)
tensor([-201.4318, -197.6681, -208.1349, -202.2965, -196.9181],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0160, device='cuda:0', dtype=torch.float64)
tensor([-201.7228, -196.6930, -209.0966, -203.4262, -197.0571],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0160, device='cuda:0', dtype=torch.float64)
tensor([-202.1956, -195.6643, -210.4502, -204.9361, -197.4068],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0135, device='cuda:0', dtype=torch.float64)
tensor([-202.7082, -194.9625, -211.7226, -206.2991, -197.9063],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7844, device='cuda:0', dtype=torch.float64)
tensor([-203.1610, -193.9765, -212.6317, -207.7066, -198.1468],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1194, device='cuda:0', dtype=torch.float64)
tensor([-203.2718, -193.3763, -212.7553, -208.2733, -198.0464],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0150, device='cuda:0', dtype=torch.float64)
tensor([-203.1722, -192.9691, -212.4317, -208.3554, -197.7288],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0182, device='cuda:0', dtype=torch.float64)
tensor([-202.8928, -192.8071, -211.7884, -208.0089, -197.3369],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0240, device='cuda:0', dtype=torch.float64)
tensor([-202.5444, -192.8164, -211.0919, -207.5094, -196.9858],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0171, device='cuda:0', dtype=torch.float64)
tensor([-201.8963, -193.1010, -209.6054, -206.1965, -196.2686],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0198, device='cuda:0', dtype=torch.float64)
tensor([-201.1876, -193.6026, -207.6133, -204.4563, -195.3978],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0161, device='cuda:0', dtype=torch.float64)
tensor([-200.7895, -194.0950, -206.3204, -203.3183, -194.9550],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0162, device='cuda:0', dtype=torch.float64)
tensor([-200.5008, -194.5010, -205.2969, -202.4348, -194.6278],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0219, device='cuda:0', dtype=torch.float64)
tensor([-200.4564, -194.7611, -205.2531, -202.3110, -194.7578],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0187, device='cuda:0', dtype=torch.float64)
tensor([-200.4899, -195.0370, -205.4682, -202.3733, -195.0106],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0253, device='cuda:0', dtype=torch.float64)
tensor([-200.6338, -195.3751, -206.2195, -202.7710, -195.5805],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0172, device='cuda:0', dtype=torch.float64)
tensor([-200.9788, -195.5679, -207.5877, -203.6730, -196.3973],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0168, device='cuda:0', dtype=torch.float64)
tensor([-201.4121, -195.6253, -208.9729, -204.6807, -197.1841],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0177, device='cuda:0', dtype=torch.float64)
tensor([-202.1472, -195.6196, -210.8867, -206.1562, -198.3016],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0298, device='cuda:0', dtype=torch.float64)
tensor([-202.9023, -195.8123, -212.6434, -207.4429, -199.4956],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0188, device='cuda:0', dtype=torch.float64)
tensor([-203.4289, -195.9655, -213.7305, -208.2689, -200.3105],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0176, device='cuda:0', dtype=torch.float64)
tensor([-203.4652, -196.3670, -213.9091, -208.1898, -200.6470],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0224, device='cuda:0', dtype=torch.float64)
tensor([-203.3581, -196.7069, -213.7716, -207.8815, -200.7354],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0176, device='cuda:0', dtype=torch.float64)
tensor([-202.7182, -197.2496, -212.4608, -206.5094, -200.1546],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0119, device='cuda:0', dtype=torch.float64)
tensor([-202.1288, -197.9206, -211.0741, -205.0653, -199.6181],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0146, device='cuda:0', dtype=torch.float64)
tensor([-201.8223, -198.3915, -210.2590, -204.2375, -199.3709],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0287, device='cuda:0', dtype=torch.float64)
tensor([-201.5269, -198.8595, -209.3627, -203.3680, -199.0966],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0227, device='cuda:0', dtype=torch.float64)
tensor([-201.3268, -199.4069, -208.7535, -202.6696, -199.0143],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0152, device='cuda:0', dtype=torch.float64)
tensor([-201.1578, -199.8331, -208.0500, -202.0095, -198.8339],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0141, device='cuda:0', dtype=torch.float64)
tensor([-201.0526, -199.9245, -207.4249, -201.6064, -198.5576],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0130, device='cuda:0', dtype=torch.float64)
tensor([-201.1504, -199.5084, -207.6036, -201.9718, -198.4823],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0270, device='cuda:0', dtype=torch.float64)
tensor([-201.4688, -198.6538, -208.5421, -203.0775, -198.6269],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0162, device='cuda:0', dtype=torch.float64)
tensor([-201.7057, -197.9316, -209.0832, -203.8956, -198.6500],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0146, device='cuda:0', dtype=torch.float64)
tensor([-201.7919, -197.3503, -209.1226, -204.2990, -198.4573],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0158, device='cuda:0', dtype=torch.float64)
tensor([-201.6731, -196.9450, -208.4937, -204.1132, -197.9410],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0217, device='cuda:0', dtype=torch.float64)
tensor([-201.4580, -196.5244, -207.6333, -203.7868, -197.3225],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0178, device='cuda:0', dtype=torch.float64)
tensor([-201.2425, -196.1606, -206.8018, -203.4410, -196.7463],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0162, device='cuda:0', dtype=torch.float64)
tensor([-201.2677, -195.7911, -206.8697, -203.7192, -196.6231],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0375, device='cuda:0', dtype=torch.float64)
tensor([-201.2382, -195.6083, -206.8059, -203.8181, -196.5342],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0165, device='cuda:0', dtype=torch.float64)
tensor([-201.2228, -195.3873, -206.8525, -204.0225, -196.4851],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0162, device='cuda:0', dtype=torch.float64)
tensor([-201.3138, -195.2535, -207.3096, -204.4668, -196.6887],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0140, device='cuda:0', dtype=torch.float64)
tensor([-201.4098, -195.2257, -207.7146, -204.8201, -196.9169],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0188, device='cuda:0', dtype=torch.float64)
tensor([-201.5653, -195.1722, -208.3469, -205.3687, -197.2762],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0163, device='cuda:0', dtype=torch.float64)
tensor([-201.6619, -195.1801, -208.7613, -205.7432, -197.5529],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0167, device='cuda:0', dtype=torch.float64)
tensor([-201.5130, -195.3655, -208.5618, -205.5626, -197.5626],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0147, device='cuda:0', dtype=torch.float64)
tensor([-201.1426, -195.7828, -207.8423, -204.8898, -197.4082],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0211, device='cuda:0', dtype=torch.float64)
tensor([-200.9415, -195.9065, -207.4354, -204.5833, -197.2630],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0153, device='cuda:0', dtype=torch.float64)
tensor([-201.0102, -195.8278, -207.6912, -204.8412, -197.3766],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0153, device='cuda:0', dtype=torch.float64)
tensor([-201.2497, -195.7874, -208.4468, -205.4495, -197.7910],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0188, device='cuda:0', dtype=torch.float64)
tensor([-201.4165, -195.8118, -208.8460, -205.7550, -198.0463],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0204, device='cuda:0', dtype=torch.float64)
tensor([-201.5585, -195.8780, -209.2369, -206.0267, -198.3040],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0153, device='cuda:0', dtype=torch.float64)
tensor([-201.4936, -196.0690, -209.0779, -205.8146, -198.3188],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9063, device='cuda:0', dtype=torch.float64)
tensor([-201.3016, -196.3214, -208.3893, -205.2554, -198.1522],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0258, device='cuda:0', dtype=torch.float64)
tensor([-201.0379, -196.6665, -207.3880, -204.4107, -197.8405],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0115, device='cuda:0', dtype=torch.float64)
tensor([-200.9217, -196.9187, -206.7767, -203.9107, -197.7170],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0201, device='cuda:0', dtype=torch.float64)
tensor([-200.7347, -197.0069, -205.8749, -203.2879, -197.3520],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0167, device='cuda:0', dtype=torch.float64)
tensor([-200.8039, -196.7964, -205.7627, -203.3567, -197.2606],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0165, device='cuda:0', dtype=torch.float64)
tensor([-201.0816, -196.3815, -206.3210, -204.0029, -197.3839],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0169, device='cuda:0', dtype=torch.float64)
tensor([-201.3162, -196.1996, -206.7087, -204.4176, -197.5103],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0163, device='cuda:0', dtype=torch.float64)
tensor([-201.4786, -195.9911, -206.9153, -204.7295, -197.5217],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0217, device='cuda:0', dtype=torch.float64)
tensor([-201.8301, -195.5611, -207.6179, -205.5056, -197.7150],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0145, device='cuda:0', dtype=torch.float64)
tensor([-202.0519, -195.4027, -208.1579, -206.0364, -197.9235],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0146, device='cuda:0', dtype=torch.float64)
tensor([-202.3938, -195.1828, -208.9361, -206.7935, -198.2557],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0182, device='cuda:0', dtype=torch.float64)
tensor([-202.5319, -195.1083, -209.2421, -207.1309, -198.4068],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0155, device='cuda:0', dtype=torch.float64)
tensor([-202.5202, -195.1355, -209.2389, -207.1633, -198.4270],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0159, device='cuda:0', dtype=torch.float64)
tensor([-202.4764, -195.3147, -209.2676, -207.1065, -198.5115],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0202, device='cuda:0', dtype=torch.float64)
tensor([-202.3034, -195.3365, -208.8696, -206.8230, -198.2685],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0312, device='cuda:0', dtype=torch.float64)
tensor([-202.0983, -195.2881, -208.4219, -206.5341, -197.9579],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0199, device='cuda:0', dtype=torch.float64)
tensor([-202.1124, -195.2030, -208.5598, -206.7096, -197.9728],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0139, device='cuda:0', dtype=torch.float64)
tensor([-201.9067, -195.1948, -208.1607, -206.4271, -197.7021],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0160, device='cuda:0', dtype=torch.float64)
tensor([-201.7378, -195.0757, -207.7672, -206.2101, -197.3869],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0183, device='cuda:0', dtype=torch.float64)
tensor([-201.6775, -195.2399, -207.7624, -206.1082, -197.4158],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0183, device='cuda:0', dtype=torch.float64)
tensor([-201.5726, -195.6717, -207.8292, -205.9243, -197.5941],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0157, device='cuda:0', dtype=torch.float64)
tensor([-201.2924, -196.0953, -207.3466, -205.3239, -197.4666],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2056, device='cuda:0', dtype=torch.float64)
tensor([-201.2119, -196.7771, -207.6614, -205.1679, -197.7821],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0137, device='cuda:0', dtype=torch.float64)
tensor([-201.0346, -197.4314, -207.6619, -204.8238, -197.9546],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0188, device='cuda:0', dtype=torch.float64)
tensor([-200.9455, -198.0229, -207.8913, -204.6473, -198.1968],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0168, device='cuda:0', dtype=torch.float64)
tensor([-200.8843, -198.6061, -208.1325, -204.4521, -198.4524],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0192, device='cuda:0', dtype=torch.float64)
tensor([-200.9400, -198.9852, -208.6432, -204.5403, -198.7763],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0141, device='cuda:0', dtype=torch.float64)
tensor([-200.9989, -199.1782, -209.0263, -204.6274, -198.9562],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0186, device='cuda:0', dtype=torch.float64)
tensor([-201.0729, -199.3382, -209.3904, -204.7183, -199.1069],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0339, device='cuda:0', dtype=torch.float64)
tensor([-201.1191, -199.2162, -209.5762, -204.8567, -199.0945],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0295, device='cuda:0', dtype=torch.float64)
tensor([-201.1513, -199.0767, -209.7461, -204.9717, -199.0551],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0163, device='cuda:0', dtype=torch.float64)
tensor([-201.2347, -198.7955, -210.0274, -205.2555, -199.0159],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0200, device='cuda:0', dtype=torch.float64)
tensor([-201.2447, -198.6583, -210.0488, -205.2729, -198.8889],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0310, device='cuda:0', dtype=torch.float64)
tensor([-201.3431, -198.3786, -210.1948, -205.4569, -198.7807],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0126, device='cuda:0', dtype=torch.float64)
tensor([-201.3541, -198.1473, -210.1305, -205.4802, -198.5867],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0175, device='cuda:0', dtype=torch.float64)
tensor([-201.3058, -197.8626, -209.7714, -205.3070, -198.1955],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0126, device='cuda:0', dtype=torch.float64)
tensor([-201.3293, -197.4347, -209.5577, -205.2997, -197.8242],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0154, device='cuda:0', dtype=torch.float64)
tensor([-201.3965, -197.0295, -209.4783, -205.3574, -197.5491],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0178, device='cuda:0', dtype=torch.float64)
tensor([-201.4819, -196.6266, -209.5024, -205.4952, -197.3388],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0180, device='cuda:0', dtype=torch.float64)
tensor([-201.4520, -196.4909, -209.2905, -205.3182, -197.1176],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0158, device='cuda:0', dtype=torch.float64)
tensor([-201.4690, -196.3961, -209.2611, -205.2647, -197.0095],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0245, device='cuda:0', dtype=torch.float64)
tensor([-201.3830, -196.6115, -209.0126, -204.9073, -196.9204],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0300, device='cuda:0', dtype=torch.float64)
tensor([-201.2685, -196.7596, -208.7283, -204.5895, -196.8328],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0177, device='cuda:0', dtype=torch.float64)
tensor([-201.2102, -196.8479, -208.5709, -204.3969, -196.7859],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0168, device='cuda:0', dtype=torch.float64)
tensor([-201.3123, -196.6750, -208.9331, -204.7001, -196.8909],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0155, device='cuda:0', dtype=torch.float64)
tensor([-201.3459, -196.6329, -209.1136, -204.8321, -196.9739],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0184, device='cuda:0', dtype=torch.float64)
tensor([-201.4114, -196.5447, -209.2855, -204.9887, -197.0640],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0161, device='cuda:0', dtype=torch.float64)
tensor([-201.6595, -196.3865, -210.0633, -205.6407, -197.4350],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0154, device='cuda:0', dtype=torch.float64)
tensor([-201.8978, -196.3283, -210.8460, -206.2586, -197.8621],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0224, device='cuda:0', dtype=torch.float64)
tensor([-201.9243, -196.4075, -211.0726, -206.3801, -198.0447],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0171, device='cuda:0', dtype=torch.float64)
tensor([-202.0897, -196.3471, -211.6473, -206.8637, -198.3675],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0134, device='cuda:0', dtype=torch.float64)
tensor([-201.9823, -196.3682, -211.5105, -206.7547, -198.3106],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0158, device='cuda:0', dtype=torch.float64)
tensor([-201.8801, -196.3486, -211.3098, -206.6037, -198.2160],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0163, device='cuda:0', dtype=torch.float64)
tensor([-201.6197, -196.3296, -210.6216, -206.0884, -197.8690],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0112, device='cuda:0', dtype=torch.float64)
tensor([-201.3896, -196.3405, -209.9837, -205.5941, -197.5606],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0178, device='cuda:0', dtype=torch.float64)
tensor([-201.0875, -196.4070, -209.1844, -204.9675, -197.2096],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0153, device='cuda:0', dtype=torch.float64)
tensor([-200.9044, -196.3927, -208.6300, -204.5623, -196.9516],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0178, device='cuda:0', dtype=torch.float64)
tensor([-200.6706, -196.4552, -207.8633, -203.9699, -196.6144],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0129, device='cuda:0', dtype=torch.float64)
tensor([-200.3422, -196.8193, -206.7006, -202.9706, -196.2302],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0126, device='cuda:0', dtype=torch.float64)
tensor([-200.2089, -197.0355, -206.2799, -202.5653, -196.1608],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0185, device='cuda:0', dtype=torch.float64)
tensor([-200.1259, -197.1456, -206.2596, -202.4841, -196.2482],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0173, device='cuda:0', dtype=torch.float64)
tensor([-200.2227, -197.0445, -207.0235, -203.0388, -196.6071],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0241, device='cuda:0', dtype=torch.float64)
tensor([-200.2871, -196.9583, -207.4846, -203.3982, -196.8269],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0167, device='cuda:0', dtype=torch.float64)
tensor([-200.3423, -196.7926, -207.7030, -203.6429, -196.8911],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0152, device='cuda:0', dtype=torch.float64)
tensor([-200.4528, -196.6356, -208.1581, -204.0710, -197.0657],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0163, device='cuda:0', dtype=torch.float64)
tensor([-200.6066, -196.4850, -208.7307, -204.5709, -197.2782],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0139, device='cuda:0', dtype=torch.float64)
tensor([-200.8164, -196.3431, -209.5030, -205.2505, -197.6403],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0185, device='cuda:0', dtype=torch.float64)
tensor([-200.8872, -196.2247, -209.7052, -205.5042, -197.7133],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0163, device='cuda:0', dtype=torch.float64)
tensor([-201.0156, -196.0819, -209.9666, -205.8163, -197.8210],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0153, device='cuda:0', dtype=torch.float64)
tensor([-200.9156, -196.3652, -209.9015, -205.6650, -197.9621],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0229, device='cuda:0', dtype=torch.float64)
tensor([-200.9822, -196.4462, -210.3199, -205.9953, -198.2783],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0296, device='cuda:0', dtype=torch.float64)
tensor([-200.8546, -196.7327, -210.2471, -205.8366, -198.4178],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0177, device='cuda:0', dtype=torch.float64)
tensor([-200.4052, -197.2593, -209.2800, -204.8831, -198.1721],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0173, device='cuda:0', dtype=torch.float64)
tensor([-199.8785, -197.8201, -207.9199, -203.6722, -197.7343],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0177, device='cuda:0', dtype=torch.float64)
tensor([-199.4809, -198.2892, -206.7626, -202.6992, -197.3780],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0120, device='cuda:0', dtype=torch.float64)
tensor([-199.2282, -198.5937, -205.9068, -202.0156, -197.1064],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0265, device='cuda:0', dtype=torch.float64)
tensor([-199.1307, -198.6507, -205.4825, -201.7320, -196.9515],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0205, device='cuda:0', dtype=torch.float64)
tensor([-199.1456, -198.3839, -205.4464, -201.8606, -196.8490],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0167, device='cuda:0', dtype=torch.float64)
tensor([-199.4224, -197.8971, -206.3244, -202.7160, -197.1275],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0291, device='cuda:0', dtype=torch.float64)
tensor([-199.9504, -197.1784, -207.8004, -204.1164, -197.6244],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0176, device='cuda:0', dtype=torch.float64)
tensor([-200.4491, -196.6748, -208.9507, -205.2342, -198.0730],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0257, device='cuda:0', dtype=torch.float64)
tensor([-200.9967, -196.1628, -210.1503, -206.4352, -198.5415],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0191, device='cuda:0', dtype=torch.float64)
tensor([-201.3640, -195.6825, -210.8057, -207.2263, -198.7113],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0164, device='cuda:0', dtype=torch.float64)
tensor([-201.2465, -195.5426, -210.3652, -206.9921, -198.4104],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0169, device='cuda:0', dtype=torch.float64)
tensor([-200.9260, -195.5846, -209.4952, -206.3308, -197.9450],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7608, device='cuda:0', dtype=torch.float64)
tensor([-200.6920, -195.4907, -208.8253, -205.9750, -197.6321],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0163, device='cuda:0', dtype=torch.float64)
tensor([-200.4600, -195.3897, -208.1239, -205.5941, -197.2851],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0162, device='cuda:0', dtype=torch.float64)
tensor([-200.2251, -195.2479, -207.2725, -205.1159, -196.8485],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0185, device='cuda:0', dtype=torch.float64)
tensor([-199.8758, -195.1943, -206.1170, -204.3787, -196.2932],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0455, device='cuda:0', dtype=torch.float64)
tensor([-199.5241, -195.1925, -204.8912, -203.5446, -195.6958],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0164, device='cuda:0', dtype=torch.float64)
tensor([-199.4156, -194.9600, -204.3136, -203.2668, -195.3086],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0206, device='cuda:0', dtype=torch.float64)
tensor([-199.3630, -194.6799, -203.9411, -203.1447, -194.9868],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0178, device='cuda:0', dtype=torch.float64)
tensor([-199.1575, -194.4298, -203.1114, -202.6500, -194.4081],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0182, device='cuda:0', dtype=torch.float64)
tensor([-199.1310, -194.0966, -202.9417, -202.6958, -194.1729],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0192, device='cuda:0', dtype=torch.float64)
tensor([-199.2398, -193.8351, -203.2994, -203.1259, -194.3059],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0167, device='cuda:0', dtype=torch.float64)
tensor([-199.5918, -193.4361, -204.4593, -204.2510, -194.8399],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0173, device='cuda:0', dtype=torch.float64)
tensor([-200.2679, -193.2136, -206.4328, -205.9444, -195.9210],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0142, device='cuda:0', dtype=torch.float64)
tensor([-201.0476, -193.2270, -208.5413, -207.6382, -197.1787],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0179, device='cuda:0', dtype=torch.float64)
tensor([-201.7787, -193.2210, -210.2095, -209.0146, -198.1792],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0125, device='cuda:0', dtype=torch.float64)
tensor([-202.1520, -193.4593, -211.0887, -209.6203, -198.8362],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0196, device='cuda:0', dtype=torch.float64)
tensor([-201.8998, -193.8641, -210.7450, -209.1218, -198.8561],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0210, device='cuda:0', dtype=torch.float64)
tensor([-201.1732, -194.3635, -209.3553, -207.7361, -198.2950],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0164, device='cuda:0', dtype=torch.float64)
tensor([-200.2190, -195.0461, -207.1585, -205.6685, -197.4025],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0130, device='cuda:0', dtype=torch.float64)
tensor([-199.5003, -196.0166, -205.3623, -203.8704, -196.8936],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0177, device='cuda:0', dtype=torch.float64)
tensor([-199.0318, -196.9610, -203.9355, -202.4155, -196.5974],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0152, device='cuda:0', dtype=torch.float64)
tensor([-198.8852, -197.6765, -203.3991, -201.7175, -196.6877],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0190, device='cuda:0', dtype=torch.float64)
tensor([-198.8455, -198.0024, -203.0917, -201.3508, -196.7125],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0269, device='cuda:0', dtype=torch.float64)
tensor([-198.8973, -198.0513, -203.3850, -201.5073, -196.9049],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0228, device='cuda:0', dtype=torch.float64)
tensor([-199.1330, -197.9077, -204.4387, -202.2503, -197.4051],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0180, device='cuda:0', dtype=torch.float64)
tensor([-199.5527, -197.6875, -206.0883, -203.4303, -198.1491],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0162, device='cuda:0', dtype=torch.float64)
tensor([-200.2158, -197.4019, -208.2833, -205.0942, -199.1994],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0131, device='cuda:0', dtype=torch.float64)
tensor([-200.8876, -197.0299, -210.0357, -206.5897, -200.0463],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0136, device='cuda:0', dtype=torch.float64)
tensor([-201.6194, -196.5402, -211.6357, -208.1132, -200.7966],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0164, device='cuda:0', dtype=torch.float64)
tensor([-202.1120, -196.2321, -212.5851, -209.0515, -201.2849],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0220, device='cuda:0', dtype=torch.float64)
tensor([-202.0054, -196.1095, -212.3997, -208.9510, -201.1324],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0136, device='cuda:0', dtype=torch.float64)
tensor([-201.6273, -196.0429, -211.6918, -208.3950, -200.6855],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0151, device='cuda:0', dtype=torch.float64)
tensor([-200.9464, -196.2919, -210.4270, -207.2177, -200.0668],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0142, device='cuda:0', dtype=torch.float64)
tensor([-200.1717, -196.6212, -208.7169, -205.6898, -199.2630],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0208, device='cuda:0', dtype=torch.float64)
tensor([-199.2266, -197.2930, -206.2300, -203.5342, -198.2636],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0196, device='cuda:0', dtype=torch.float64)
tensor([-198.7569, -197.7620, -204.7833, -202.3273, -197.7628],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0162, device='cuda:0', dtype=torch.float64)
tensor([-198.4561, -197.9881, -203.8251, -201.5853, -197.4035],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0168, device='cuda:0', dtype=torch.float64)
tensor([-198.2543, -198.1595, -203.2233, -201.1012, -197.1924],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0215, device='cuda:0', dtype=torch.float64)
tensor([-198.1826, -198.0664, -202.8441, -200.8991, -196.9747],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0135, device='cuda:0', dtype=torch.float64)
tensor([-198.2674, -197.7907, -203.0788, -201.1678, -196.9673],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0268, device='cuda:0', dtype=torch.float64)
tensor([-198.6180, -196.8840, -204.0161, -202.1910, -197.0241],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0169, device='cuda:0', dtype=torch.float64)
tensor([-199.2030, -195.8991, -205.4633, -203.6346, -197.3260],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0235, device='cuda:0', dtype=torch.float64)
tensor([-200.0125, -194.9459, -207.3181, -205.4263, -197.8675],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0182, device='cuda:0', dtype=torch.float64)
tensor([-200.8325, -194.1592, -208.9756, -207.0924, -198.3901],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0195, device='cuda:0', dtype=torch.float64)
tensor([-201.4094, -193.4809, -209.9016, -208.1812, -198.5797],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0146, device='cuda:0', dtype=torch.float64)
tensor([-201.5021, -193.0632, -209.8214, -208.3001, -198.3157],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0151, device='cuda:0', dtype=torch.float64)
tensor([-201.2508, -192.8673, -209.0516, -207.7421, -197.7621],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0146, device='cuda:0', dtype=torch.float64)
tensor([-200.8089, -192.7416, -207.8867, -206.8356, -197.0217],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0172, device='cuda:0', dtype=torch.float64)
tensor([-200.3142, -192.5954, -206.5249, -205.8433, -196.2091],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0225, device='cuda:0', dtype=torch.float64)
tensor([-199.7303, -192.6412, -204.8271, -204.5231, -195.3213],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0152, device='cuda:0', dtype=torch.float64)
tensor([-199.2329, -192.8566, -203.1652, -203.1728, -194.5364],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0237, device='cuda:0', dtype=torch.float64)
tensor([-198.9250, -193.1243, -202.1603, -202.2915, -194.1301],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0420, device='cuda:0', dtype=torch.float64)
tensor([-198.7924, -193.2657, -201.8010, -201.9298, -193.9998],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0156, device='cuda:0', dtype=torch.float64)
tensor([-198.7777, -193.4056, -201.8222, -201.8703, -194.0906],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0210, device='cuda:0', dtype=torch.float64)
tensor([-198.9987, -193.3400, -202.3981, -202.3058, -194.3686],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0163, device='cuda:0', dtype=torch.float64)
tensor([-199.4422, -193.1259, -203.5503, -203.2230, -194.8621],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0199, device='cuda:0', dtype=torch.float64)
tensor([-199.6752, -193.3071, -204.2573, -203.6290, -195.2951],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0219, device='cuda:0', dtype=torch.float64)
tensor([-199.6781, -193.5290, -204.4056, -203.5951, -195.4646],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0141, device='cuda:0', dtype=torch.float64)
tensor([-199.7916, -193.8879, -205.1340, -203.9124, -195.9946],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0142, device='cuda:0', dtype=torch.float64)
tensor([-199.8942, -194.4133, -205.9816, -204.2512, -196.6586],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0236, device='cuda:0', dtype=torch.float64)
tensor([-199.8714, -195.0290, -206.4406, -204.2556, -197.1627],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0247, device='cuda:0', dtype=torch.float64)
tensor([-199.8546, -195.4967, -206.7937, -204.2888, -197.5874],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0225, device='cuda:0', dtype=torch.float64)
tensor([-199.9220, -195.7645, -207.2456, -204.5017, -197.9644],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0147, device='cuda:0', dtype=torch.float64)
tensor([-199.7856, -196.1766, -207.1561, -204.2209, -198.0969],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0245, device='cuda:0', dtype=torch.float64)
tensor([-199.5756, -196.5974, -206.7628, -203.7290, -198.0762],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0232, device='cuda:0', dtype=torch.float64)
tensor([-199.4911, -196.8747, -206.6551, -203.5334, -198.1340],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0121, device='cuda:0', dtype=torch.float64)
tensor([-199.4397, -197.0061, -206.6503, -203.4958, -198.1893],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0479, device='cuda:0', dtype=torch.float64)
tensor([-199.4169, -197.0462, -206.7742, -203.5906, -198.2653],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0113, device='cuda:0', dtype=torch.float64)
tensor([-199.3089, -197.1908, -206.6285, -203.4347, -198.2693],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0145, device='cuda:0', dtype=torch.float64)
tensor([-199.1317, -197.3270, -206.2658, -203.1362, -198.1717],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0175, device='cuda:0', dtype=torch.float64)
tensor([-198.8741, -197.2386, -205.4482, -202.6112, -197.7428],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0163, device='cuda:0', dtype=torch.float64)
tensor([-198.9103, -196.7799, -205.5824, -202.9337, -197.6097],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0137, device='cuda:0', dtype=torch.float64)
tensor([-199.0486, -196.1880, -205.9592, -203.5081, -197.5458],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0169, device='cuda:0', dtype=torch.float64)
tensor([-199.2416, -195.6875, -206.5050, -204.1693, -197.6089],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0132, device='cuda:0', dtype=torch.float64)
tensor([-199.6240, -194.8565, -207.4071, -205.2967, -197.7389],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1151, device='cuda:0', dtype=torch.float64)
tensor([-199.9584, -194.2663, -208.1538, -206.2122, -197.9287],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0171, device='cuda:0', dtype=torch.float64)
tensor([-200.4262, -193.5549, -209.0119, -207.2980, -198.1384],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0170, device='cuda:0', dtype=torch.float64)
tensor([-200.6762, -193.1396, -209.4548, -207.8783, -198.2398],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0134, device='cuda:0', dtype=torch.float64)
tensor([-200.5704, -192.9938, -209.2887, -207.8040, -198.0951],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0137, device='cuda:0', dtype=torch.float64)
tensor([-200.2144, -192.8840, -208.5133, -207.2162, -197.5988],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0173, device='cuda:0', dtype=torch.float64)
tensor([-199.8473, -192.7467, -207.7247, -206.6448, -197.0895],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0218, device='cuda:0', dtype=torch.float64)
tensor([-199.4355, -192.6784, -206.7419, -205.9147, -196.5110],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0168, device='cuda:0', dtype=torch.float64)
tensor([-198.8462, -192.7294, -205.2399, -204.7384, -195.7064],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0212, device='cuda:0', dtype=torch.float64)
tensor([-198.5404, -192.9353, -204.5521, -204.1297, -195.4347],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0173, device='cuda:0', dtype=torch.float64)
tensor([-198.0599, -193.3496, -203.3136, -203.0250, -194.9673],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0143, device='cuda:0', dtype=torch.float64)
tensor([-197.6768, -193.8255, -202.3542, -202.1334, -194.7065],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0163, device='cuda:0', dtype=torch.float64)
tensor([-197.5650, -194.0035, -202.2776, -202.0426, -194.7843],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0341, device='cuda:0', dtype=torch.float64)
tensor([-197.5913, -194.1581, -202.6384, -202.2795, -195.0944],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1643, device='cuda:0', dtype=torch.float64)
tensor([-198.0570, -193.9199, -203.9811, -203.4756, -195.7529],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0223, device='cuda:0', dtype=torch.float64)
tensor([-198.5423, -193.7503, -205.3021, -204.6437, -196.4261],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0161, device='cuda:0', dtype=torch.float64)
tensor([-198.8388, -193.5728, -205.9402, -205.2791, -196.6899],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0139, device='cuda:0', dtype=torch.float64)
tensor([-199.2568, -193.4791, -206.8232, -206.0796, -197.1405],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0146, device='cuda:0', dtype=torch.float64)
tensor([-199.3989, -193.4188, -207.0617, -206.3620, -197.2495],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0271, device='cuda:0', dtype=torch.float64)
tensor([-199.0980, -193.3615, -206.1684, -205.7192, -196.7176],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0119, device='cuda:0', dtype=torch.float64)
tensor([-198.3971, -193.6681, -204.2275, -204.0732, -195.7807],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0113, device='cuda:0', dtype=torch.float64)
tensor([-197.8883, -194.0449, -202.6275, -202.6900, -195.0971],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0232, device='cuda:0', dtype=torch.float64)
tensor([-197.6421, -194.3297, -201.6610, -201.8417, -194.7133],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0173, device='cuda:0', dtype=torch.float64)
tensor([-197.5351, -194.6187, -201.1061, -201.3368, -194.5589],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0139, device='cuda:0', dtype=torch.float64)
tensor([-197.5870, -194.8803, -201.1619, -201.3145, -194.7242],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0184, device='cuda:0', dtype=torch.float64)
tensor([-197.7921, -195.1387, -201.9200, -201.8249, -195.2608],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0143, device='cuda:0', dtype=torch.float64)
tensor([-198.0487, -195.3043, -202.8669, -202.5076, -195.8368],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0146, device='cuda:0', dtype=torch.float64)
tensor([-198.3674, -195.3017, -203.9493, -203.3679, -196.4017],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0225, device='cuda:0', dtype=torch.float64)
tensor([-198.6430, -195.2500, -204.7533, -204.0285, -196.8040],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0248, device='cuda:0', dtype=torch.float64)
tensor([-198.9550, -195.1751, -205.6825, -204.7945, -197.2554],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0154, device='cuda:0', dtype=torch.float64)
tensor([-199.4958, -195.1108, -207.2783, -206.0932, -198.0558],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0276, device='cuda:0', dtype=torch.float64)
tensor([-199.7777, -195.2596, -208.1671, -206.7266, -198.5825],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0215, device='cuda:0', dtype=torch.float64)
tensor([-200.1034, -195.3739, -209.0938, -207.3757, -199.1015],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0202, device='cuda:0', dtype=torch.float64)
tensor([-200.0186, -195.5227, -208.9981, -207.2077, -199.0910],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0122, device='cuda:0', dtype=torch.float64)
tensor([-199.5711, -195.7234, -208.0159, -206.3312, -198.6424],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0135, device='cuda:0', dtype=torch.float64)
tensor([-198.9681, -196.0686, -206.6143, -205.0750, -198.0586],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0132, device='cuda:0', dtype=torch.float64)
tensor([-198.5379, -196.5672, -205.6740, -204.1117, -197.8031],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0199, device='cuda:0', dtype=torch.float64)
tensor([-198.2569, -196.8285, -204.8795, -203.3873, -197.5423],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0141, device='cuda:0', dtype=torch.float64)
tensor([-197.8938, -197.2813, -203.9472, -202.4720, -197.3148],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0156, device='cuda:0', dtype=torch.float64)
tensor([-197.6713, -197.6346, -203.2990, -201.8359, -197.1859],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0146, device='cuda:0', dtype=torch.float64)
tensor([-197.5754, -197.8199, -203.0251, -201.5450, -197.1798],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0153, device='cuda:0', dtype=torch.float64)
tensor([-197.5615, -197.9821, -202.9833, -201.4288, -197.2693],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0134, device='cuda:0', dtype=torch.float64)
tensor([-197.7273, -197.8618, -203.6137, -201.9171, -197.5403],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0120, device='cuda:0', dtype=torch.float64)
tensor([-198.0051, -197.5553, -204.6061, -202.7611, -197.8979],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0217, device='cuda:0', dtype=torch.float64)
tensor([-198.3996, -197.1282, -205.8214, -203.8430, -198.2926],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0150, device='cuda:0', dtype=torch.float64)
tensor([-199.1763, -196.5057, -207.9523, -205.7763, -199.0968],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0122, device='cuda:0', dtype=torch.float64)
tensor([-200.2000, -195.9701, -210.2552, -207.9045, -200.1467],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0166, device='cuda:0', dtype=torch.float64)
tensor([-200.9411, -195.6799, -211.7507, -209.3336, -200.8954],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0234, device='cuda:0', dtype=torch.float64)
tensor([-201.2700, -195.4410, -212.2867, -209.9601, -201.1211],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0164, device='cuda:0', dtype=torch.float64)
tensor([-201.2894, -195.0060, -211.9934, -209.9744, -200.7529],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0157, device='cuda:0', dtype=torch.float64)
tensor([-200.9319, -194.5665, -210.8475, -209.2412, -199.8810],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0256, device='cuda:0', dtype=torch.float64)
tensor([-200.3706, -194.2087, -209.2273, -208.0644, -198.8075],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0140, device='cuda:0', dtype=torch.float64)
tensor([-199.8028, -193.8390, -207.4175, -206.7661, -197.6935],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0152, device='cuda:0', dtype=torch.float64)
tensor([-199.2421, -193.5254, -205.4333, -205.3200, -196.5797],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0210, device='cuda:0', dtype=torch.float64)
tensor([-198.7421, -193.5172, -203.5071, -203.8006, -195.6604],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0183, device='cuda:0', dtype=torch.float64)
tensor([-198.3958, -193.6344, -202.1013, -202.6650, -195.0663],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0198, device='cuda:0', dtype=torch.float64)
tensor([-198.0220, -193.8873, -200.4453, -201.3068, -194.4230],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0161, device='cuda:0', dtype=torch.float64)
tensor([-197.8085, -194.1071, -199.3073, -200.3845, -194.0079],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0138, device='cuda:0', dtype=torch.float64)
tensor([-197.7297, -194.3332, -198.6745, -199.8495, -193.8498],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0141, device='cuda:0', dtype=torch.float64)
tensor([-197.7750, -194.3117, -198.7178, -199.9164, -193.8958],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0187, device='cuda:0', dtype=torch.float64)
tensor([-198.1567, -193.6584, -200.1481, -201.2739, -194.3149],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0127, device='cuda:0', dtype=torch.float64)
tensor([-198.6726, -192.9602, -201.7352, -202.8058, -194.7724],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0125, device='cuda:0', dtype=torch.float64)
tensor([-199.1657, -192.4405, -203.1035, -204.1358, -195.2127],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0148, device='cuda:0', dtype=torch.float64)
tensor([-200.0605, -191.9763, -205.4424, -206.2466, -196.1766],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0101, device='cuda:0', dtype=torch.float64)
tensor([-200.9649, -191.5948, -207.4412, -208.1217, -197.0544],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0165, device='cuda:0', dtype=torch.float64)
tensor([-201.8130, -191.3273, -209.0428, -209.6879, -197.8240],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0102, device='cuda:0', dtype=torch.float64)
tensor([-202.3459, -191.1740, -209.9095, -210.6016, -198.2625],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0166, device='cuda:0', dtype=torch.float64)
tensor([-202.3888, -191.1257, -209.8510, -210.6198, -198.2181],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0183, device='cuda:0', dtype=torch.float64)
tensor([-201.8334, -191.1922, -208.6076, -209.5255, -197.5571],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0132, device='cuda:0', dtype=torch.float64)
tensor([-201.2662, -191.3622, -207.3254, -208.3618, -196.9342],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0192, device='cuda:0', dtype=torch.float64)
tensor([-200.3542, -191.7058, -205.1681, -206.4344, -195.9924],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0173, device='cuda:0', dtype=torch.float64)
tensor([-199.4850, -192.3148, -202.9181, -204.3847, -195.1570],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0155, device='cuda:0', dtype=torch.float64)
tensor([-198.7236, -193.2183, -200.6836, -202.3120, -194.4979],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0101, device='cuda:0', dtype=torch.float64)
tensor([-198.2121, -194.0060, -199.0751, -200.8543, -194.1052],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0137, device='cuda:0', dtype=torch.float64)
tensor([-197.8214, -195.0044, -197.9299, -199.6746, -194.0193],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0204, device='cuda:0', dtype=torch.float64)
tensor([-197.7625, -195.6380, -198.4774, -199.8507, -194.5595],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0148, device='cuda:0', dtype=torch.float64)
tensor([-197.8216, -196.2437, -199.4652, -200.3099, -195.2408],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0141, device='cuda:0', dtype=torch.float64)
tensor([-198.0393, -196.6476, -201.2133, -201.3369, -196.1367],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0142, device='cuda:0', dtype=torch.float64)
tensor([-198.5625, -196.6627, -203.8533, -203.1862, -197.2411],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0140, device='cuda:0', dtype=torch.float64)
tensor([-199.3396, -196.5675, -206.8056, -205.4156, -198.5789],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0164, device='cuda:0', dtype=torch.float64)
tensor([-199.8739, -196.7647, -208.6779, -206.7505, -199.6564],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0135, device='cuda:0', dtype=torch.float64)
tensor([-200.2912, -197.0871, -210.0778, -207.6678, -200.5984],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0164, device='cuda:0', dtype=torch.float64)
tensor([-200.3255, -197.5857, -210.5544, -207.7282, -201.0597],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0126, device='cuda:0', dtype=torch.float64)
tensor([-200.1499, -198.0076, -210.3603, -207.2864, -201.0747],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0147, device='cuda:0', dtype=torch.float64)
tensor([-199.7932, -198.4668, -209.6999, -206.4644, -200.8201],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0236, device='cuda:0', dtype=torch.float64)
tensor([-199.1593, -199.2736, -208.4019, -204.9964, -200.3250],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0206, device='cuda:0', dtype=torch.float64)
tensor([-198.6433, -200.0279, -207.1715, -203.6985, -199.8984],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0169, device='cuda:0', dtype=torch.float64)
tensor([-198.3117, -200.6295, -206.2672, -202.7557, -199.6157],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0287, device='cuda:0', dtype=torch.float64)
tensor([-198.2280, -200.7064, -205.9197, -202.4622, -199.4044],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0173, device='cuda:0', dtype=torch.float64)
tensor([-198.2877, -200.3303, -206.0362, -202.7552, -199.2748],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0181, device='cuda:0', dtype=torch.float64)
tensor([-198.3512, -199.8484, -205.9100, -202.9331, -198.9767],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0167, device='cuda:0', dtype=torch.float64)
tensor([-198.3828, -199.3996, -205.5131, -202.8746, -198.5547],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0159, device='cuda:0', dtype=torch.float64)
tensor([-198.4240, -198.8221, -205.2278, -202.9783, -198.1713],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0296, device='cuda:0', dtype=torch.float64)
tensor([-198.5160, -198.1375, -205.1557, -203.2684, -197.8693],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0123, device='cuda:0', dtype=torch.float64)
tensor([-198.5710, -197.5310, -205.0744, -203.5379, -197.6080],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0233, device='cuda:0', dtype=torch.float64)
tensor([-198.6565, -196.9117, -205.2072, -203.9600, -197.4400],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0252, device='cuda:0', dtype=torch.float64)
tensor([-198.6361, -196.5115, -205.0074, -204.0251, -197.1907],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0321, device='cuda:0', dtype=torch.float64)
tensor([-198.6514, -196.0259, -204.9023, -204.1916, -196.9498],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0157, device='cuda:0', dtype=torch.float64)
tensor([-198.6784, -195.6401, -204.9668, -204.4312, -196.8115],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0141, device='cuda:0', dtype=torch.float64)
tensor([-198.5513, -195.5120, -204.6014, -204.2431, -196.5916],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0162, device='cuda:0', dtype=torch.float64)
tensor([-198.4098, -195.3262, -204.1568, -204.0466, -196.3315],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0168, device='cuda:0', dtype=torch.float64)
tensor([-198.1604, -195.2569, -203.3668, -203.5507, -195.9794],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0153, device='cuda:0', dtype=torch.float64)
tensor([-197.9559, -194.9943, -202.5406, -203.1367, -195.5678],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0189, device='cuda:0', dtype=torch.float64)
tensor([-197.7544, -194.7020, -201.9166, -202.8838, -195.2109],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0517, device='cuda:0', dtype=torch.float64)
tensor([-197.5760, -194.4686, -201.6344, -202.8405, -195.0185],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0164, device='cuda:0', dtype=torch.float64)
tensor([-197.5000, -194.1209, -201.7913, -203.1576, -194.9554],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0132, device='cuda:0', dtype=torch.float64)
tensor([-197.4191, -193.8021, -201.9359, -203.4565, -194.8883],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0475, device='cuda:0', dtype=torch.float64)
tensor([-197.5035, -193.4140, -202.6963, -204.2484, -195.1000],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0194, device='cuda:0', dtype=torch.float64)
tensor([-197.4574, -193.1287, -202.9899, -204.6531, -195.1722],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0149, device='cuda:0', dtype=torch.float64)
tensor([-197.3551, -192.7558, -203.0204, -204.8888, -195.0816],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1896, device='cuda:0', dtype=torch.float64)
tensor([-197.3281, -192.4468, -203.2845, -205.2508, -195.0875],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0134, device='cuda:0', dtype=torch.float64)
tensor([-197.2823, -192.0421, -203.3330, -205.5109, -194.9461],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0150, device='cuda:0', dtype=torch.float64)
tensor([-197.3482, -191.9200, -203.6833, -205.8634, -195.1137],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0160, device='cuda:0', dtype=torch.float64)
tensor([-197.5991, -191.8209, -204.3610, -206.4560, -195.4804],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0134, device='cuda:0', dtype=torch.float64)
tensor([-197.6670, -191.7998, -204.5580, -206.6239, -195.6439],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0096, device='cuda:0', dtype=torch.float64)
tensor([-197.5266, -191.9956, -204.2991, -206.3328, -195.6725],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0159, device='cuda:0', dtype=torch.float64)
tensor([-197.3598, -192.2160, -204.0112, -206.0120, -195.6819],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0190, device='cuda:0', dtype=torch.float64)
tensor([-197.4496, -192.2793, -204.2849, -206.1956, -195.8879],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0268, device='cuda:0', dtype=torch.float64)
tensor([-197.3759, -192.3687, -204.1113, -206.0121, -195.8760],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0167, device='cuda:0', dtype=torch.float64)
tensor([-197.3226, -192.6300, -204.0966, -205.8679, -195.9994],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0121, device='cuda:0', dtype=torch.float64)
tensor([-197.3414, -192.7790, -204.2260, -205.8826, -196.1573],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0132, device='cuda:0', dtype=torch.float64)
tensor([-197.2174, -192.8577, -203.9407, -205.6015, -196.0561],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0179, device='cuda:0', dtype=torch.float64)
tensor([-197.0772, -193.0081, -203.6536, -205.2805, -195.9831],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0142, device='cuda:0', dtype=torch.float64)
tensor([-196.8566, -193.1292, -203.0726, -204.7441, -195.7386],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0143, device='cuda:0', dtype=torch.float64)
tensor([-196.6107, -193.3470, -202.4465, -204.1474, -195.5248],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0147, device='cuda:0', dtype=torch.float64)
tensor([-196.4395, -193.6768, -201.9645, -203.5952, -195.4160],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0193, device='cuda:0', dtype=torch.float64)
tensor([-196.4184, -193.8107, -201.7776, -203.3595, -195.3688],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0138, device='cuda:0', dtype=torch.float64)
tensor([-196.3915, -193.8586, -201.6952, -203.2560, -195.3434],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0203, device='cuda:0', dtype=torch.float64)
tensor([-196.3742, -194.0622, -201.7448, -203.1737, -195.4337],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0129, device='cuda:0', dtype=torch.float64)
tensor([-196.4236, -194.2048, -201.8378, -203.1607, -195.5198],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0151, device='cuda:0', dtype=torch.float64)
tensor([-196.5354, -194.2609, -202.0643, -203.2757, -195.6325],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0135, device='cuda:0', dtype=torch.float64)
tensor([-197.0173, -194.0945, -203.2341, -204.1882, -196.1148],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0219, device='cuda:0', dtype=torch.float64)
tensor([-197.5063, -193.8538, -204.2412, -205.0029, -196.4768],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0182, device='cuda:0', dtype=torch.float64)
tensor([-197.9446, -193.6861, -205.2483, -205.8070, -196.8642],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0153, device='cuda:0', dtype=torch.float64)
tensor([-198.5349, -193.4928, -206.6390, -206.9930, -197.4589],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0129, device='cuda:0', dtype=torch.float64)
tensor([-198.8502, -193.3908, -207.3366, -207.5837, -197.7408],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0117, device='cuda:0', dtype=torch.float64)
tensor([-199.1550, -193.3697, -208.0505, -208.1440, -198.0664],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0156, device='cuda:0', dtype=torch.float64)
tensor([-198.8884, -193.4857, -207.4687, -207.5113, -197.7270],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0146, device='cuda:0', dtype=torch.float64)
tensor([-198.1718, -193.6887, -205.5439, -205.7693, -196.7471],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0147, device='cuda:0', dtype=torch.float64)
tensor([-197.6599, -193.8092, -203.7906, -204.2927, -195.8997],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0278, device='cuda:0', dtype=torch.float64)
tensor([-197.2375, -194.0398, -202.1662, -202.9414, -195.2015],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0189, device='cuda:0', dtype=torch.float64)
tensor([-196.8412, -194.4606, -200.5482, -201.5571, -194.6013],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0476, device='cuda:0', dtype=torch.float64)
tensor([-196.5140, -194.8636, -199.0821, -200.3107, -194.0433],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0126, device='cuda:0', dtype=torch.float64)
tensor([-196.3884, -194.8614, -198.5141, -199.8811, -193.7376],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0347, device='cuda:0', dtype=torch.float64)
tensor([-196.4813, -194.3862, -199.3736, -200.6789, -193.9182],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0120, device='cuda:0', dtype=torch.float64)
tensor([-196.5914, -193.7946, -200.2271, -201.5371, -194.0601],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0139, device='cuda:0', dtype=torch.float64)
tensor([-196.7837, -193.1735, -201.1834, -202.4713, -194.2443],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0134, device='cuda:0', dtype=torch.float64)
tensor([-197.0626, -192.6740, -202.4025, -203.5840, -194.6247],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0139, device='cuda:0', dtype=torch.float64)
tensor([-197.5097, -192.3605, -204.1332, -205.0258, -195.3486],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0189, device='cuda:0', dtype=torch.float64)
tensor([-197.9110, -192.4030, -205.6952, -206.2270, -196.1727],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0221, device='cuda:0', dtype=torch.float64)
tensor([-198.4021, -192.4438, -207.3153, -207.5269, -197.0748],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0172, device='cuda:0', dtype=torch.float64)
tensor([-198.7350, -192.5774, -208.3610, -208.3099, -197.7132],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0149, device='cuda:0', dtype=torch.float64)
tensor([-198.9415, -192.7249, -209.0661, -208.8276, -198.1860],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0194, device='cuda:0', dtype=torch.float64)
tensor([-198.7828, -192.9905, -209.0067, -208.6095, -198.2676],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0142, device='cuda:0', dtype=torch.float64)
tensor([-198.4396, -193.2697, -208.5080, -208.0284, -198.1017],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0200, device='cuda:0', dtype=torch.float64)
tensor([-198.0572, -193.4675, -207.7940, -207.3292, -197.7929],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0109, device='cuda:0', dtype=torch.float64)
tensor([-197.6197, -193.6513, -206.8370, -206.4598, -197.3514],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0186, device='cuda:0', dtype=torch.float64)
tensor([-197.2011, -193.8731, -205.9690, -205.6990, -197.0056],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0149, device='cuda:0', dtype=torch.float64)
tensor([-196.6955, -194.0876, -204.6017, -204.5675, -196.4267],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0188, device='cuda:0', dtype=torch.float64)
tensor([-196.2200, -194.3909, -203.2048, -203.4156, -195.8891],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0146, device='cuda:0', dtype=torch.float64)
tensor([-195.9223, -194.6572, -202.1850, -202.5810, -195.5203],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0176, device='cuda:0', dtype=torch.float64)
tensor([-195.6961, -194.8218, -201.4252, -201.9886, -195.2273],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0168, device='cuda:0', dtype=torch.float64)
tensor([-195.5542, -195.0989, -201.0200, -201.6075, -195.1669],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0150, device='cuda:0', dtype=torch.float64)
tensor([-195.4733, -195.4848, -200.7532, -201.2685, -195.2117],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0150, device='cuda:0', dtype=torch.float64)
tensor([-195.4895, -195.4988, -200.8916, -201.3598, -195.2892],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0149, device='cuda:0', dtype=torch.float64)
tensor([-195.7088, -195.0156, -201.8478, -202.2857, -195.5540],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0175, device='cuda:0', dtype=torch.float64)
tensor([-196.0466, -194.5815, -202.9344, -203.2962, -195.9089],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0176, device='cuda:0', dtype=torch.float64)
tensor([-196.3254, -194.1626, -203.7025, -204.0809, -196.1109],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0148, device='cuda:0', dtype=torch.float64)
tensor([-196.5546, -193.5997, -204.1131, -204.6633, -196.0892],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0130, device='cuda:0', dtype=torch.float64)
tensor([-196.7738, -192.9328, -204.3200, -205.1455, -195.9330],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0110, device='cuda:0', dtype=torch.float64)
tensor([-196.7617, -192.3987, -204.0051, -205.1578, -195.5434],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0151, device='cuda:0', dtype=torch.float64)
tensor([-196.6473, -191.8460, -203.4470, -204.9663, -194.9867],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0139, device='cuda:0', dtype=torch.float64)
tensor([-196.3061, -191.4117, -202.3347, -204.2713, -194.1603],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0199, device='cuda:0', dtype=torch.float64)
tensor([-195.9386, -191.1074, -201.1544, -203.4562, -193.3366],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0132, device='cuda:0', dtype=torch.float64)
tensor([-195.7770, -190.9853, -200.6642, -203.1100, -192.9818],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0142, device='cuda:0', dtype=torch.float64)
tensor([-195.5978, -190.8336, -200.1003, -202.7017, -192.5547],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0148, device='cuda:0', dtype=torch.float64)
tensor([-195.5659, -190.6892, -200.0428, -202.7156, -192.4234],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0157, device='cuda:0', dtype=torch.float64)
tensor([-196.0198, -190.5685, -201.4565, -203.9950, -193.2339],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0152, device='cuda:0', dtype=torch.float64)
tensor([-196.6358, -190.6400, -203.2820, -205.5369, -194.3511],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0285, device='cuda:0', dtype=torch.float64)
tensor([-197.1647, -190.8784, -204.8436, -206.7776, -195.3518],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0254, device='cuda:0', dtype=torch.float64)
tensor([-197.4390, -191.2969, -205.8469, -207.4641, -196.1007],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0144, device='cuda:0', dtype=torch.float64)
tensor([-197.4452, -191.6028, -206.1880, -207.6385, -196.4113],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0159, device='cuda:0', dtype=torch.float64)
tensor([-197.1421, -191.8330, -205.7439, -207.1620, -196.2193],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0199, device='cuda:0', dtype=torch.float64)
tensor([-196.5296, -191.9635, -204.3659, -205.9683, -195.4933],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0138, device='cuda:0', dtype=torch.float64)
tensor([-195.9256, -192.1154, -202.9314, -204.7543, -194.7574],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0117, device='cuda:0', dtype=torch.float64)
tensor([-195.5536, -192.4632, -202.1942, -204.0329, -194.4858],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0165, device='cuda:0', dtype=torch.float64)
tensor([-195.2501, -192.9106, -201.6441, -203.4571, -194.3654],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0157, device='cuda:0', dtype=torch.float64)
tensor([-195.0431, -193.3174, -201.3211, -203.0896, -194.3565],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0244, device='cuda:0', dtype=torch.float64)
tensor([-195.0290, -193.6465, -201.6129, -203.2292, -194.6588],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0128, device='cuda:0', dtype=torch.float64)
tensor([-195.0503, -193.9024, -201.8598, -203.3459, -194.9061],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0163, device='cuda:0', dtype=torch.float64)
tensor([-195.1310, -193.9632, -202.2540, -203.6246, -195.1054],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0125, device='cuda:0', dtype=torch.float64)
tensor([-195.3010, -193.9217, -202.9171, -204.1537, -195.4018],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0192, device='cuda:0', dtype=torch.float64)
tensor([-195.4113, -194.0301, -203.4923, -204.5417, -195.7102],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0143, device='cuda:0', dtype=torch.float64)
tensor([-195.4927, -194.0317, -203.9026, -204.8497, -195.8717],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0166, device='cuda:0', dtype=torch.float64)
tensor([-195.4515, -194.0970, -203.9934, -204.9019, -195.9115],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0117, device='cuda:0', dtype=torch.float64)
tensor([-195.4851, -194.0133, -204.1526, -205.0907, -195.9338],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0121, device='cuda:0', dtype=torch.float64)
tensor([-195.3767, -194.0594, -203.9577, -204.9333, -195.8206],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0142, device='cuda:0', dtype=torch.float64)
tensor([-195.2299, -194.0821, -203.5502, -204.6185, -195.6018],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0183, device='cuda:0', dtype=torch.float64)
tensor([-195.1315, -194.0092, -203.1573, -204.3584, -195.3653],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0313, device='cuda:0', dtype=torch.float64)
tensor([-194.9798, -193.9596, -202.5804, -203.9218, -195.0369],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0148, device='cuda:0', dtype=torch.float64)
tensor([-194.8667, -193.9494, -202.1534, -203.5813, -194.7941],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0168, device='cuda:0', dtype=torch.float64)
tensor([-194.6645, -193.8369, -201.5040, -203.1196, -194.3783],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0222, device='cuda:0', dtype=torch.float64)
tensor([-194.5827, -193.5879, -201.0748, -202.8597, -194.0028],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0140, device='cuda:0', dtype=torch.float64)
tensor([-194.4505, -193.2332, -200.6420, -202.6368, -193.5328],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0175, device='cuda:0', dtype=torch.float64)
tensor([-194.5471, -192.7225, -200.8136, -202.9785, -193.3592],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0156, device='cuda:0', dtype=torch.float64)
tensor([-194.7805, -192.3393, -201.4116, -203.6755, -193.5641],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0232, device='cuda:0', dtype=torch.float64)
tensor([-195.0114, -191.9782, -201.8180, -204.1781, -193.6528],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0146, device='cuda:0', dtype=torch.float64)
tensor([-195.2498, -191.8394, -202.2700, -204.6250, -193.8819],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0138, device='cuda:0', dtype=torch.float64)
tensor([-195.6999, -191.8312, -203.2017, -205.4305, -194.4819],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0170, device='cuda:0', dtype=torch.float64)
tensor([-196.1487, -191.8538, -204.0634, -206.1471, -195.0369],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0124, device='cuda:0', dtype=torch.float64)
tensor([-196.4437, -191.9466, -204.5735, -206.5257, -195.3953],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0139, device='cuda:0', dtype=torch.float64)
tensor([-196.5968, -191.9137, -204.7451, -206.7006, -195.5294],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0268, device='cuda:0', dtype=torch.float64)
tensor([-196.5537, -191.7162, -204.3496, -206.4629, -195.2459],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0141, device='cuda:0', dtype=torch.float64)
tensor([-196.5625, -191.4852, -204.1276, -206.3830, -195.0355],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0248, device='cuda:0', dtype=torch.float64)
tensor([-196.2942, -191.4092, -203.2906, -205.7192, -194.5609],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0168, device='cuda:0', dtype=torch.float64)
tensor([-195.8632, -191.4778, -202.1090, -204.6893, -193.9334],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0180, device='cuda:0', dtype=torch.float64)
tensor([-195.4025, -191.4739, -200.6938, -203.4627, -193.0724],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0251, device='cuda:0', dtype=torch.float64)
tensor([-194.9895, -191.4303, -199.4289, -202.3407, -192.1947],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0133, device='cuda:0', dtype=torch.float64)
tensor([-194.7616, -191.4714, -198.6401, -201.6084, -191.6754],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0167, device='cuda:0', dtype=torch.float64)
tensor([-194.7095, -191.2542, -198.5278, -201.5600, -191.4398],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0218, device='cuda:0', dtype=torch.float64)
tensor([-194.7964, -190.9106, -198.8142, -201.9166, -191.4109],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0138, device='cuda:0', dtype=torch.float64)
tensor([-195.3287, -190.5145, -200.0817, -203.1830, -192.0704],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0202, device='cuda:0', dtype=torch.float64)
tensor([-195.8502, -190.2503, -201.3152, -204.3347, -192.7091],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0143, device='cuda:0', dtype=torch.float64)
tensor([-196.3200, -190.0126, -202.4407, -205.3886, -193.2584],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0232, device='cuda:0', dtype=torch.float64)
tensor([-196.5313, -189.9825, -203.0039, -205.8744, -193.5650],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0143, device='cuda:0', dtype=torch.float64)
tensor([-196.5481, -189.8319, -203.1013, -206.0271, -193.5175],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0174, device='cuda:0', dtype=torch.float64)
tensor([-196.5295, -189.8687, -203.1668, -206.0855, -193.5923],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0126, device='cuda:0', dtype=torch.float64)
tensor([-196.3656, -189.9276, -202.9446, -205.8909, -193.4946],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0161, device='cuda:0', dtype=torch.float64)
tensor([-196.2574, -190.3530, -203.0007, -205.7663, -193.7365],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0253, device='cuda:0', dtype=torch.float64)
tensor([-196.2104, -190.7358, -203.1949, -205.7818, -194.0302],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0125, device='cuda:0', dtype=torch.float64)
tensor([-196.2099, -191.1308, -203.5043, -205.8893, -194.3797],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0421, device='cuda:0', dtype=torch.float64)
tensor([-195.9594, -191.4139, -203.1525, -205.4722, -194.2850],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0152, device='cuda:0', dtype=torch.float64)
tensor([-195.4186, -191.8011, -202.0564, -204.4130, -193.8435],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0144, device='cuda:0', dtype=torch.float64)
tensor([-194.8143, -192.3055, -200.6886, -203.0961, -193.2975],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0160, device='cuda:0', dtype=torch.float64)
tensor([-194.4732, -192.8748, -200.0035, -202.3493, -193.1900],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0135, device='cuda:0', dtype=torch.float64)
tensor([-194.3474, -193.2421, -199.9323, -202.1882, -193.3270],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0144, device='cuda:0', dtype=torch.float64)
tensor([-194.4015, -193.6514, -200.4975, -202.4968, -193.8382],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0174, device='cuda:0', dtype=torch.float64)
tensor([-194.7126, -194.0158, -201.6675, -203.3081, -194.6793],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0129, device='cuda:0', dtype=torch.float64)
tensor([-194.9600, -194.3078, -202.5854, -203.9176, -195.3081],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0133, device='cuda:0', dtype=torch.float64)
tensor([-195.1398, -194.6678, -203.3697, -204.3963, -195.8905],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0205, device='cuda:0', dtype=torch.float64)
tensor([-195.3675, -194.8668, -204.1488, -204.9307, -196.3875],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0146, device='cuda:0', dtype=torch.float64)
tensor([-195.3844, -194.8983, -204.2179, -205.0004, -196.4511],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0186, device='cuda:0', dtype=torch.float64)
tensor([-195.3557, -194.9342, -204.1440, -204.9746, -196.4622],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0188, device='cuda:0', dtype=torch.float64)
tensor([-195.4775, -194.5662, -204.2599, -205.2774, -196.3774],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0132, device='cuda:0', dtype=torch.float64)
tensor([-195.8436, -194.1095, -204.9756, -206.0964, -196.5786],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0116, device='cuda:0', dtype=torch.float64)
tensor([-196.1751, -193.6802, -205.5839, -206.8356, -196.7559],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0187, device='cuda:0', dtype=torch.float64)
tensor([-196.5259, -193.1541, -206.0395, -207.5054, -196.8240],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0142, device='cuda:0', dtype=torch.float64)
tensor([-196.2586, -192.5985, -204.9659, -206.8879, -196.0035],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0130, device='cuda:0', dtype=torch.float64)
tensor([-195.8550, -192.1411, -203.6438, -206.0378, -195.0881],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0138, device='cuda:0', dtype=torch.float64)
tensor([-195.4139, -191.6444, -202.0974, -205.0237, -194.0361],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0146, device='cuda:0', dtype=torch.float64)
tensor([-194.7497, -191.4093, -199.8859, -203.3501, -192.6897],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5292, device='cuda:0', dtype=torch.float64)
tensor([-194.3203, -191.1717, -198.4930, -202.3455, -191.7495],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0138, device='cuda:0', dtype=torch.float64)
tensor([-194.0829, -191.1479, -197.7072, -201.7300, -191.2725],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0200, device='cuda:0', dtype=torch.float64)
tensor([-194.0788, -191.3819, -197.7818, -201.7084, -191.4684],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0218, device='cuda:0', dtype=torch.float64)
tensor([-194.6347, -191.4553, -199.5954, -203.1209, -192.6152],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0177, device='cuda:0', dtype=torch.float64)
tensor([-195.2154, -191.5955, -201.4280, -204.5212, -193.7611],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0196, device='cuda:0', dtype=torch.float64)
tensor([-195.9177, -191.6343, -203.4128, -206.1009, -194.9114],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0151, device='cuda:0', dtype=torch.float64)
tensor([-196.8609, -191.6646, -205.7534, -208.0581, -196.2767],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0131, device='cuda:0', dtype=torch.float64)
tensor([-197.8160, -191.7078, -207.8619, -209.8879, -197.5818],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0245, device='cuda:0', dtype=torch.float64)
tensor([-198.0690, -191.6416, -208.3050, -210.2694, -197.8457],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0115, device='cuda:0', dtype=torch.float64)
tensor([-197.6402, -191.7973, -207.6189, -209.5038, -197.4885],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0149, device='cuda:0', dtype=torch.float64)
tensor([-196.6652, -192.0429, -205.7181, -207.6258, -196.4814],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0127, device='cuda:0', dtype=torch.float64)
tensor([-195.8616, -192.4599, -204.1084, -205.9638, -195.7388],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0151, device='cuda:0', dtype=torch.float64)
tensor([-195.2830, -192.7356, -202.7284, -204.6233, -195.0871],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0130, device='cuda:0', dtype=torch.float64)
tensor([-194.7675, -192.9583, -201.3421, -203.3711, -194.4428],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0220, device='cuda:0', dtype=torch.float64)
tensor([-194.3345, -193.1415, -200.0762, -202.2964, -193.8518],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0138, device='cuda:0', dtype=torch.float64)
tensor([-194.0696, -193.3351, -199.3796, -201.6809, -193.5756],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0241, device='cuda:0', dtype=torch.float64)
tensor([-194.2986, -193.2414, -199.9784, -202.1872, -193.9063],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0272, device='cuda:0', dtype=torch.float64)
tensor([-194.8497, -193.1100, -201.5943, -203.5066, -194.7764],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0171, device='cuda:0', dtype=torch.float64)
tensor([-195.4279, -192.9046, -203.0780, -204.8008, -195.5214],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0101, device='cuda:0', dtype=torch.float64)
tensor([-196.0444, -192.7013, -204.5743, -206.1639, -196.2939],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0156, device='cuda:0', dtype=torch.float64)
tensor([-196.2206, -192.5904, -204.9205, -206.5120, -196.4635],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0140, device='cuda:0', dtype=torch.float64)
tensor([-196.0371, -192.2822, -204.2258, -206.0855, -195.9652],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0111, device='cuda:0', dtype=torch.float64)
tensor([-195.8447, -191.8798, -203.4610, -205.6216, -195.3738],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0150, device='cuda:0', dtype=torch.float64)
tensor([-195.5004, -191.5175, -202.3500, -204.8579, -194.5881],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0170, device='cuda:0', dtype=torch.float64)
tensor([-195.3062, -191.1833, -201.5881, -204.3641, -194.0179],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0163, device='cuda:0', dtype=torch.float64)
tensor([-195.1639, -190.8635, -200.9443, -203.9626, -193.5090],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0157, device='cuda:0', dtype=torch.float64)
tensor([-194.9146, -190.6875, -199.9693, -203.2147, -192.8642],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0113, device='cuda:0', dtype=torch.float64)
tensor([-194.6186, -190.5035, -198.8622, -202.3759, -192.1014],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0160, device='cuda:0', dtype=torch.float64)
tensor([-194.5682, -190.3653, -198.5048, -202.1376, -191.8217],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0229, device='cuda:0', dtype=torch.float64)
tensor([-194.7957, -190.4368, -198.8191, -202.3376, -192.0792],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0131, device='cuda:0', dtype=torch.float64)
tensor([-195.0305, -190.5548, -199.2095, -202.5628, -192.3965],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0300, device='cuda:0', dtype=torch.float64)
tensor([-195.2503, -191.0161, -199.7634, -202.7445, -192.9482],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0144, device='cuda:0', dtype=torch.float64)
tensor([-195.7389, -191.3158, -201.1372, -203.6715, -193.8802],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0197, device='cuda:0', dtype=torch.float64)
tensor([-196.0787, -191.5159, -202.1034, -204.3198, -194.4858],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0139, device='cuda:0', dtype=torch.float64)
tensor([-196.6333, -191.7185, -203.6021, -205.4300, -195.3733],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0142, device='cuda:0', dtype=torch.float64)
tensor([-196.9313, -191.7229, -204.3485, -206.0175, -195.7379],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0127, device='cuda:0', dtype=torch.float64)
tensor([-196.8914, -191.6856, -204.2368, -205.9060, -195.5930],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0128, device='cuda:0', dtype=torch.float64)
tensor([-196.9704, -191.6475, -204.5558, -206.1595, -195.7032],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0142, device='cuda:0', dtype=torch.float64)
tensor([-197.0098, -191.5800, -204.7581, -206.3356, -195.7209],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0126, device='cuda:0', dtype=torch.float64)
tensor([-196.9355, -191.6379, -204.7452, -206.2677, -195.6637],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0152, device='cuda:0', dtype=torch.float64)
tensor([-196.6250, -191.7113, -204.1934, -205.7501, -195.3217],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0121, device='cuda:0', dtype=torch.float64)
tensor([-196.1733, -191.9056, -203.3381, -204.9661, -194.8762],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0164, device='cuda:0', dtype=torch.float64)
tensor([-195.5648, -192.2318, -202.1637, -203.9157, -194.3519],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0159, device='cuda:0', dtype=torch.float64)
tensor([-195.0346, -192.5222, -201.0678, -202.9551, -193.8748],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0123, device='cuda:0', dtype=torch.float64)
tensor([-194.6703, -192.7615, -200.2597, -202.2472, -193.5322],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0114, device='cuda:0', dtype=torch.float64)
tensor([-194.4343, -193.0783, -199.8850, -201.8374, -193.4495],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0164, device='cuda:0', dtype=torch.float64)
tensor([-194.3272, -193.5308, -200.1031, -201.8284, -193.7675],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0153, device='cuda:0', dtype=torch.float64)
tensor([-194.2799, -194.0590, -200.6649, -202.0354, -194.3020],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0121, device='cuda:0', dtype=torch.float64)
tensor([-194.2022, -194.3451, -201.0347, -202.2064, -194.5979],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0101, device='cuda:0', dtype=torch.float64)
tensor([-194.0960, -194.7112, -201.2464, -202.2448, -194.8633],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0315, device='cuda:0', dtype=torch.float64)
tensor([-193.8817, -194.8067, -200.9490, -202.0223, -194.7086],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0218, device='cuda:0', dtype=torch.float64)
tensor([-193.8900, -194.7229, -201.3171, -202.3700, -194.8320],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0188, device='cuda:0', dtype=torch.float64)
tensor([-193.9243, -194.4431, -201.4148, -202.5846, -194.7071],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0181, device='cuda:0', dtype=torch.float64)
tensor([-193.9331, -194.1238, -201.4389, -202.7936, -194.5381],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0182, device='cuda:0', dtype=torch.float64)
tensor([-193.9520, -193.7603, -201.3937, -202.9401, -194.2972],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0147, device='cuda:0', dtype=torch.float64)
tensor([-194.1094, -193.3886, -201.7175, -203.3847, -194.2817],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0289, device='cuda:0', dtype=torch.float64)
tensor([-194.3969, -193.2892, -202.5002, -204.0751, -194.6847],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0280, device='cuda:0', dtype=torch.float64)
tensor([-194.9626, -193.1846, -203.8555, -205.2237, -195.4092],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0117, device='cuda:0', dtype=torch.float64)
tensor([-195.3947, -192.9815, -204.8043, -206.1459, -195.8698],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0126, device='cuda:0', dtype=torch.float64)
tensor([-195.5223, -192.6319, -204.9211, -206.4511, -195.7623],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0147, device='cuda:0', dtype=torch.float64)
tensor([-195.5434, -192.3124, -204.7677, -206.4798, -195.5010],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0156, device='cuda:0', dtype=torch.float64)
tensor([-195.3955, -191.9904, -204.2169, -206.1868, -195.0201],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0122, device='cuda:0', dtype=torch.float64)
tensor([-194.8702, -192.0105, -202.9304, -205.1317, -194.2808],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0127, device='cuda:0', dtype=torch.float64)
tensor([-194.3151, -192.0137, -201.3790, -203.8798, -193.3685],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0142, device='cuda:0', dtype=torch.float64)
tensor([-193.6451, -191.8226, -199.4207, -202.4268, -192.0598],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0200, device='cuda:0', dtype=torch.float64)
tensor([-193.3743, -191.6327, -198.4541, -201.7228, -191.3662],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0232, device='cuda:0', dtype=torch.float64)
tensor([-193.2167, -191.3657, -197.9027, -201.3373, -190.8544],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0130, device='cuda:0', dtype=torch.float64)
tensor([-193.1800, -191.0446, -197.6984, -201.2310, -190.5213],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0183, device='cuda:0', dtype=torch.float64)
tensor([-193.2883, -191.0550, -198.0088, -201.3933, -190.6990],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0192, device='cuda:0', dtype=torch.float64)
tensor([-193.7250, -191.0492, -199.2980, -202.3656, -191.5256],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0132, device='cuda:0', dtype=torch.float64)
tensor([-194.3225, -191.3667, -201.0278, -203.5499, -192.7580],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0280, device='cuda:0', dtype=torch.float64)
tensor([-195.0289, -191.7652, -203.0333, -204.9261, -194.1298],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0197, device='cuda:0', dtype=torch.float64)
tensor([-195.5836, -192.2028, -204.5040, -205.9016, -195.2154],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0149, device='cuda:0', dtype=torch.float64)
tensor([-195.9933, -192.6175, -205.4774, -206.5125, -196.0004],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0113, device='cuda:0', dtype=torch.float64)
tensor([-196.1464, -192.8773, -205.7888, -206.6590, -196.3250],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0142, device='cuda:0', dtype=torch.float64)
tensor([-196.2247, -192.9224, -205.8184, -206.6554, -196.3820],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0117, device='cuda:0', dtype=torch.float64)
tensor([-196.3396, -192.8469, -205.9736, -206.8226, -196.4482],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0228, device='cuda:0', dtype=torch.float64)
tensor([-196.3699, -192.7449, -205.8421, -206.7573, -196.3505],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0126, device='cuda:0', dtype=torch.float64)
tensor([-196.1580, -192.3976, -204.9480, -206.1523, -195.7124],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0178, device='cuda:0', dtype=torch.float64)
tensor([-195.7967, -192.2741, -203.6827, -205.1730, -195.0094],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0102, device='cuda:0', dtype=torch.float64)
tensor([-195.4357, -192.1483, -202.3544, -204.1953, -194.3002],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0155, device='cuda:0', dtype=torch.float64)
tensor([-195.1362, -191.9695, -201.0814, -203.3220, -193.6058],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0132, device='cuda:0', dtype=torch.float64)
tensor([-195.0250, -191.8792, -200.5294, -202.9555, -193.3065],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0125, device='cuda:0', dtype=torch.float64)
tensor([-195.0509, -191.3347, -200.2250, -202.9737, -192.9232],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0127, device='cuda:0', dtype=torch.float64)
tensor([-195.1382, -190.7692, -200.1042, -203.1164, -192.6146],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0168, device='cuda:0', dtype=torch.float64)
tensor([-195.2214, -190.3388, -200.1684, -203.3729, -192.4677],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0135, device='cuda:0', dtype=torch.float64)
tensor([-195.4016, -189.8321, -200.5185, -203.9128, -192.4585],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0140, device='cuda:0', dtype=torch.float64)
tensor([-195.3363, -189.0394, -200.1353, -203.9978, -191.8520],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0156, device='cuda:0', dtype=torch.float64)
tensor([-195.0804, -188.4920, -199.3731, -203.6255, -191.1132],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0137, device='cuda:0', dtype=torch.float64)
tensor([-195.0126, -188.0840, -199.1845, -203.6707, -190.7810],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0145, device='cuda:0', dtype=torch.float64)
tensor([-195.1105, -187.6604, -199.4373, -204.1020, -190.7113],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0153, device='cuda:0', dtype=torch.float64)
tensor([-195.3036, -187.6853, -199.9736, -204.5851, -191.1210],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0130, device='cuda:0', dtype=torch.float64)
tensor([-195.5771, -188.0975, -200.8272, -205.1453, -191.9339],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0133, device='cuda:0', dtype=torch.float64)
tensor([-195.8851, -188.7479, -201.8862, -205.7535, -192.9488],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0243, device='cuda:0', dtype=torch.float64)
tensor([-195.8380, -189.3609, -202.0966, -205.6526, -193.4074],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0155, device='cuda:0', dtype=torch.float64)
tensor([-195.8412, -190.1738, -202.4788, -205.6195, -194.0850],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0144, device='cuda:0', dtype=torch.float64)
tensor([-195.8076, -191.1004, -202.8370, -205.5161, -194.7771],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0558, device='cuda:0', dtype=torch.float64)
tensor([-195.5222, -191.6737, -202.4341, -204.9242, -194.8175],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0518, device='cuda:0', dtype=torch.float64)
tensor([-195.0086, -191.9590, -201.1821, -203.7941, -194.2609],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0134, device='cuda:0', dtype=torch.float64)
tensor([-194.4753, -192.3102, -199.8976, -202.6363, -193.7019],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0223, device='cuda:0', dtype=torch.float64)
tensor([-194.3438, -192.3915, -199.6654, -202.4020, -193.6157],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0134, device='cuda:0', dtype=torch.float64)
tensor([-194.3579, -192.5549, -199.9002, -202.4881, -193.8336],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0157, device='cuda:0', dtype=torch.float64)
tensor([-194.3506, -192.4852, -200.1390, -202.7035, -193.9393],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0130, device='cuda:0', dtype=torch.float64)
tensor([-194.4258, -192.5178, -200.5454, -203.0369, -194.2233],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0162, device='cuda:0', dtype=torch.float64)
tensor([-194.4426, -192.4044, -200.7332, -203.2885, -194.3295],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0714, device='cuda:0', dtype=torch.float64)
tensor([-194.4549, -192.0544, -200.8059, -203.5607, -194.2660],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0117, device='cuda:0', dtype=torch.float64)
tensor([-194.6125, -191.6439, -201.1885, -204.1245, -194.3611],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0134, device='cuda:0', dtype=torch.float64)
tensor([-194.7853, -191.1792, -201.5369, -204.6827, -194.4245],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0145, device='cuda:0', dtype=torch.float64)
tensor([-194.7957, -190.7562, -201.4539, -204.8534, -194.2450],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0130, device='cuda:0', dtype=torch.float64)
tensor([-194.3753, -190.6217, -200.4720, -204.1296, -193.6016],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0136, device='cuda:0', dtype=torch.float64)
tensor([-194.1233, -190.3319, -199.7811, -203.6944, -193.0379],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0127, device='cuda:0', dtype=torch.float64)
tensor([-193.7613, -189.9012, -198.7715, -203.0050, -192.1250],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0142, device='cuda:0', dtype=torch.float64)
tensor([-193.4377, -189.7907, -197.9824, -202.3494, -191.5031],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0159, device='cuda:0', dtype=torch.float64)
tensor([-193.2936, -189.7062, -197.6211, -202.0625, -191.2037],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0187, device='cuda:0', dtype=torch.float64)
tensor([-193.4670, -189.6456, -197.9186, -202.3701, -191.4553],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0116, device='cuda:0', dtype=torch.float64)
tensor([-193.7251, -189.5827, -198.4838, -202.9186, -191.8791],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0136, device='cuda:0', dtype=torch.float64)
tensor([-194.0079, -189.6128, -199.0635, -203.4485, -192.3614],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0171, device='cuda:0', dtype=torch.float64)
tensor([-194.3341, -189.4507, -199.6937, -204.1018, -192.7775],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0178, device='cuda:0', dtype=torch.float64)
tensor([-194.9079, -189.4407, -200.8216, -205.1320, -193.6397],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0139, device='cuda:0', dtype=torch.float64)
tensor([-195.4498, -189.4721, -201.9072, -206.0841, -194.4664],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0143, device='cuda:0', dtype=torch.float64)
tensor([-195.5503, -189.6041, -202.1412, -206.2578, -194.7719],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0113, device='cuda:0', dtype=torch.float64)
tensor([-195.5536, -189.7178, -202.1765, -206.2497, -194.9136],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0240, device='cuda:0', dtype=torch.float64)
tensor([-195.5520, -189.7169, -202.0328, -206.1293, -194.8683],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0099, device='cuda:0', dtype=torch.float64)
tensor([-195.5514, -189.7596, -201.9737, -206.0626, -194.8739],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0123, device='cuda:0', dtype=torch.float64)
tensor([-195.2907, -189.8850, -201.4840, -205.5950, -194.6272],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0179, device='cuda:0', dtype=torch.float64)
tensor([-194.8192, -189.9274, -200.4982, -204.7452, -193.9817],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0198, device='cuda:0', dtype=torch.float64)
tensor([-194.6079, -190.0341, -200.1370, -204.4054, -193.7680],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0150, device='cuda:0', dtype=torch.float64)
tensor([-194.1749, -190.1923, -199.3875, -203.7060, -193.2738],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0141, device='cuda:0', dtype=torch.float64)
tensor([-193.8885, -190.3546, -199.0154, -203.3360, -193.0408],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0150, device='cuda:0', dtype=torch.float64)
tensor([-193.6184, -190.1311, -198.4968, -203.0046, -192.4842],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0130, device='cuda:0', dtype=torch.float64)
tensor([-193.3636, -189.9695, -198.0477, -202.6747, -192.0239],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0168, device='cuda:0', dtype=torch.float64)
tensor([-193.3162, -189.9163, -198.0154, -202.6705, -191.9511],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0142, device='cuda:0', dtype=torch.float64)
tensor([-193.6745, -189.8800, -198.8802, -203.4673, -192.5870],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0181, device='cuda:0', dtype=torch.float64)
tensor([-193.6375, -190.0673, -198.9704, -203.4633, -192.7352],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0147, device='cuda:0', dtype=torch.float64)
tensor([-193.6183, -190.2824, -199.1148, -203.5085, -192.9523],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0210, device='cuda:0', dtype=torch.float64)
tensor([-193.8121, -190.4959, -199.7016, -203.9024, -193.4703],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0201, device='cuda:0', dtype=torch.float64)
tensor([-194.0815, -190.5549, -200.3372, -204.3825, -193.9348],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0156, device='cuda:0', dtype=torch.float64)
tensor([-194.1663, -190.5943, -200.5253, -204.5011, -194.0839],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0188, device='cuda:0', dtype=torch.float64)
tensor([-194.4470, -190.8367, -201.1782, -204.8945, -194.6503],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0243, device='cuda:0', dtype=torch.float64)
tensor([-194.6369, -190.8580, -201.4704, -205.0777, -194.8597],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0117, device='cuda:0', dtype=torch.float64)
tensor([-194.7208, -190.9252, -201.4287, -204.9581, -194.8809],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0191, device='cuda:0', dtype=torch.float64)
tensor([-194.3962, -190.7915, -200.3111, -204.0716, -194.0970],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0132, device='cuda:0', dtype=torch.float64)
tensor([-194.0691, -190.4258, -198.9832, -203.1211, -193.0631],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0117, device='cuda:0', dtype=torch.float64)
tensor([-193.9999, -190.1101, -198.2987, -202.6625, -192.4810],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0227, device='cuda:0', dtype=torch.float64)
tensor([-194.2323, -189.8913, -198.4176, -202.8113, -192.5015],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0160, device='cuda:0', dtype=torch.float64)
tensor([-194.7318, -189.8104, -199.2920, -203.5170, -193.0870],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0140, device='cuda:0', dtype=torch.float64)
tensor([-195.3373, -189.8322, -200.4993, -204.4260, -193.9169],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0149, device='cuda:0', dtype=torch.float64)
tensor([-195.7213, -189.7526, -201.2169, -204.9968, -194.3522],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0106, device='cuda:0', dtype=torch.float64)
tensor([-195.8794, -189.9592, -201.5961, -205.1714, -194.6925],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0093, device='cuda:0', dtype=torch.float64)
tensor([-196.1898, -190.0895, -202.2180, -205.5963, -195.1415],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0178, device='cuda:0', dtype=torch.float64)
tensor([-196.3571, -190.0830, -202.3781, -205.6979, -195.2324],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0177, device='cuda:0', dtype=torch.float64)
tensor([-196.3212, -190.0545, -202.0680, -205.4520, -195.0372],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0176, device='cuda:0', dtype=torch.float64)
tensor([-196.0707, -189.7289, -201.1538, -204.8545, -194.3297],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0148, device='cuda:0', dtype=torch.float64)
tensor([-196.0462, -189.2339, -200.7193, -204.7640, -193.8246],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0142, device='cuda:0', dtype=torch.float64)
tensor([-195.8329, -188.5284, -199.7855, -204.3606, -192.8959],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0140, device='cuda:0', dtype=torch.float64)
tensor([-195.4658, -188.0410, -198.5861, -203.6448, -191.8810],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0156, device='cuda:0', dtype=torch.float64)
tensor([-195.1023, -187.6690, -197.6013, -203.0599, -191.0261],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0146, device='cuda:0', dtype=torch.float64)
tensor([-194.8299, -187.4189, -197.0165, -202.7481, -190.4646],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0128, device='cuda:0', dtype=torch.float64)
tensor([-194.7479, -187.0681, -196.8648, -202.8360, -190.1253],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0130, device='cuda:0', dtype=torch.float64)
tensor([-194.7825, -186.7539, -197.0759, -203.2556, -190.0678],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0121, device='cuda:0', dtype=torch.float64)
tensor([-194.7348, -186.2277, -196.9127, -203.4593, -189.6132],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0178, device='cuda:0', dtype=torch.float64)
tensor([-194.7942, -186.0490, -197.1036, -203.8354, -189.6150],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0135, device='cuda:0', dtype=torch.float64)
tensor([-194.8454, -186.0278, -197.3622, -204.1980, -189.7475],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0161, device='cuda:0', dtype=torch.float64)
tensor([-194.7530, -186.0874, -197.3109, -204.2210, -189.6886],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0130, device='cuda:0', dtype=torch.float64)
tensor([-194.7660, -186.0903, -197.3951, -204.4031, -189.7089],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0101, device='cuda:0', dtype=torch.float64)
tensor([-195.1390, -186.2287, -198.2321, -205.1008, -190.3546],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0192, device='cuda:0', dtype=torch.float64)
tensor([-195.6617, -186.5509, -199.5125, -206.0348, -191.3922],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0120, device='cuda:0', dtype=torch.float64)
tensor([-196.2972, -186.9133, -201.1236, -207.2337, -192.6605],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0116, device='cuda:0', dtype=torch.float64)
tensor([-196.3766, -187.2334, -201.5705, -207.4623, -193.1324],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0121, device='cuda:0', dtype=torch.float64)
tensor([-196.1908, -187.4717, -201.4839, -207.2901, -193.2095],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0354, device='cuda:0', dtype=torch.float64)
tensor([-195.4769, -187.8581, -200.3360, -206.1357, -192.6490],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0190, device='cuda:0', dtype=torch.float64)
tensor([-194.7982, -188.1558, -199.1562, -205.0015, -191.9858],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0142, device='cuda:0', dtype=torch.float64)
tensor([-194.2319, -188.4741, -198.1248, -203.9599, -191.4059],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0216, device='cuda:0', dtype=torch.float64)
tensor([-193.6120, -188.8343, -196.9667, -202.7961, -190.7453],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0127, device='cuda:0', dtype=torch.float64)
tensor([-193.3236, -188.9985, -196.4138, -202.2370, -190.4084],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0125, device='cuda:0', dtype=torch.float64)
tensor([-193.3375, -189.2545, -196.5046, -202.2104, -190.5974],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0136, device='cuda:0', dtype=torch.float64)
tensor([-193.5979, -189.4853, -197.1682, -202.6186, -191.1758],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0120, device='cuda:0', dtype=torch.float64)
tensor([-193.9866, -189.6555, -198.1397, -203.2893, -191.9252],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0097, device='cuda:0', dtype=torch.float64)
tensor([-194.5310, -189.8407, -199.4845, -204.2614, -192.9221],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0129, device='cuda:0', dtype=torch.float64)
tensor([-195.0545, -189.9683, -200.7856, -205.2199, -193.8178],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0153, device='cuda:0', dtype=torch.float64)
tensor([-195.3181, -190.0462, -201.3762, -205.6216, -194.2377],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0117, device='cuda:0', dtype=torch.float64)
tensor([-195.3130, -189.9833, -201.2970, -205.5403, -194.1654],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0121, device='cuda:0', dtype=torch.float64)
tensor([-194.9533, -189.8996, -200.3860, -204.7734, -193.5365],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0159, device='cuda:0', dtype=torch.float64)
tensor([-194.5226, -189.8025, -199.2178, -203.8374, -192.7273],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0156, device='cuda:0', dtype=torch.float64)
tensor([-194.1110, -189.8822, -198.2063, -202.9611, -192.0946],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0168, device='cuda:0', dtype=torch.float64)
tensor([-193.7795, -189.6948, -197.3158, -202.2979, -191.3814],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0171, device='cuda:0', dtype=torch.float64)
tensor([-193.8111, -189.7111, -197.4154, -202.3500, -191.4224],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0141, device='cuda:0', dtype=torch.float64)
tensor([-193.9182, -189.7825, -197.7943, -202.6089, -191.7008],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0266, device='cuda:0', dtype=torch.float64)
tensor([-194.0695, -189.9321, -198.2488, -202.9012, -192.0842],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0110, device='cuda:0', dtype=torch.float64)
tensor([-194.4219, -190.2535, -199.1951, -203.5089, -192.8669],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0210, device='cuda:0', dtype=torch.float64)
tensor([-194.8072, -190.7323, -200.4187, -204.2554, -193.8799],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0131, device='cuda:0', dtype=torch.float64)
tensor([-195.1624, -191.1870, -201.5929, -204.9782, -194.8413],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0153, device='cuda:0', dtype=torch.float64)
tensor([-195.4606, -191.5104, -202.5065, -205.5750, -195.5809],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0125, device='cuda:0', dtype=torch.float64)
tensor([-195.3846, -191.8409, -202.5217, -205.4065, -195.7699],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0168, device='cuda:0', dtype=torch.float64)
tensor([-195.1885, -192.1786, -202.2593, -205.0184, -195.7966],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0142, device='cuda:0', dtype=torch.float64)
tensor([-194.9958, -192.3680, -202.0075, -204.7137, -195.7502],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0173, device='cuda:0', dtype=torch.float64)
tensor([-194.4914, -192.5051, -200.7995, -203.7070, -195.1227],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0116, device='cuda:0', dtype=torch.float64)
tensor([-194.1765, -192.4688, -200.0500, -203.1833, -194.6778],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0129, device='cuda:0', dtype=torch.float64)
tensor([-193.8991, -192.3701, -199.2734, -202.7209, -194.2135],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0155, device='cuda:0', dtype=torch.float64)
tensor([-193.8113, -192.3366, -198.9952, -202.5898, -194.0788],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0117, device='cuda:0', dtype=torch.float64)
tensor([-193.7725, -192.2423, -198.8013, -202.5430, -193.9640],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0122, device='cuda:0', dtype=torch.float64)
tensor([-193.7036, -192.0504, -198.5149, -202.4576, -193.6981],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0130, device='cuda:0', dtype=torch.float64)
tensor([-193.7399, -191.7354, -198.5358, -202.6415, -193.5468],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0108, device='cuda:0', dtype=torch.float64)
tensor([-193.7073, -191.2508, -198.2806, -202.6814, -193.1358],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0133, device='cuda:0', dtype=torch.float64)
tensor([-193.8632, -190.9561, -198.5933, -203.0996, -193.2182],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0171, device='cuda:0', dtype=torch.float64)
tensor([-194.0392, -190.6637, -198.9131, -203.5163, -193.3012],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0139, device='cuda:0', dtype=torch.float64)
tensor([-194.3725, -190.5414, -199.7212, -204.2590, -193.7936],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0219, device='cuda:0', dtype=torch.float64)
tensor([-194.7505, -190.3505, -200.6283, -205.1387, -194.3226],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0178, device='cuda:0', dtype=torch.float64)
tensor([-195.3357, -190.0400, -201.8866, -206.3830, -194.9842],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0125, device='cuda:0', dtype=torch.float64)
tensor([-195.4858, -189.6404, -201.9823, -206.7190, -194.8657],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0150, device='cuda:0', dtype=torch.float64)
tensor([-195.5970, -189.3053, -201.9227, -206.8651, -194.6535],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0155, device='cuda:0', dtype=torch.float64)
tensor([-195.5847, -188.8309, -201.6252, -206.8739, -194.2163],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0195, device='cuda:0', dtype=torch.float64)
tensor([-195.3181, -188.4081, -200.8365, -206.4320, -193.4677],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0102, device='cuda:0', dtype=torch.float64)
tensor([-194.8756, -187.9657, -199.7092, -205.7280, -192.4871],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0581, device='cuda:0', dtype=torch.float64)
tensor([-194.3732, -187.5974, -198.5471, -204.9325, -191.5042],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0135, device='cuda:0', dtype=torch.float64)
tensor([-193.8497, -187.3177, -197.4389, -204.1012, -190.5498],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0173, device='cuda:0', dtype=torch.float64)
tensor([-193.7612, -187.0899, -197.2941, -204.0693, -190.2838],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0218, device='cuda:0', dtype=torch.float64)
tensor([-193.5918, -187.1053, -197.0629, -203.8369, -190.0829],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0130, device='cuda:0', dtype=torch.float64)
tensor([-193.6353, -187.1102, -197.3468, -204.0767, -190.2275],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0149, device='cuda:0', dtype=torch.float64)
tensor([-194.0812, -187.5701, -198.6604, -205.0191, -191.3337],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0117, device='cuda:0', dtype=torch.float64)
tensor([-194.6975, -188.4230, -200.5241, -206.2000, -192.9776],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0141, device='cuda:0', dtype=torch.float64)
tensor([-194.7635, -189.0626, -201.1647, -206.4369, -193.6541],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0141, device='cuda:0', dtype=torch.float64)
tensor([-194.7954, -189.4212, -201.6150, -206.6223, -194.0489],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0144, device='cuda:0', dtype=torch.float64)
tensor([-194.3752, -189.6403, -200.9769, -205.9919, -193.6668],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0120, device='cuda:0', dtype=torch.float64)
tensor([-193.7202, -189.9623, -199.8357, -204.9252, -193.0160],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0110, device='cuda:0', dtype=torch.float64)
tensor([-193.2328, -190.2604, -198.9951, -204.1505, -192.5649],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0140, device='cuda:0', dtype=torch.float64)
tensor([-192.7512, -190.7056, -198.2059, -203.3489, -192.2224],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0116, device='cuda:0', dtype=torch.float64)
tensor([-192.5107, -191.3545, -197.9057, -202.8595, -192.3103],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0115, device='cuda:0', dtype=torch.float64)
tensor([-192.6304, -192.1522, -198.4973, -202.9641, -193.0212],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0146, device='cuda:0', dtype=torch.float64)
tensor([-192.6965, -192.8225, -198.9755, -203.0360, -193.5867],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0140, device='cuda:0', dtype=torch.float64)
tensor([-192.8924, -193.6127, -199.8350, -203.3229, -194.4475],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0189, device='cuda:0', dtype=torch.float64)
tensor([-193.2330, -194.1925, -201.0839, -203.9996, -195.4155],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0111, device='cuda:0', dtype=torch.float64)
tensor([-193.7767, -194.5637, -202.7156, -205.0861, -196.5021],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0146, device='cuda:0', dtype=torch.float64)
tensor([-194.2214, -194.6532, -203.8586, -205.9506, -197.1892],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0139, device='cuda:0', dtype=torch.float64)
tensor([-194.5766, -194.7472, -204.7160, -206.6035, -197.7179],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0116, device='cuda:0', dtype=torch.float64)
tensor([-194.8589, -194.7873, -205.3334, -207.0925, -198.0858],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0108, device='cuda:0', dtype=torch.float64)
tensor([-195.1521, -194.7611, -205.9672, -207.6312, -198.4340],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0145, device='cuda:0', dtype=torch.float64)
tensor([-195.1887, -194.5776, -205.9650, -207.7041, -198.3152],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0152, device='cuda:0', dtype=torch.float64)
tensor([-195.2237, -194.3444, -206.0036, -207.8515, -198.2076],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0113, device='cuda:0', dtype=torch.float64)
tensor([-194.8247, -194.0531, -205.0654, -207.1986, -197.4579],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0127, device='cuda:0', dtype=torch.float64)
tensor([-194.4259, -193.6290, -203.9834, -206.5226, -196.5960],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0112, device='cuda:0', dtype=torch.float64)
tensor([-193.7043, -193.2939, -202.0890, -205.1430, -195.2779],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0126, device='cuda:0', dtype=torch.float64)
tensor([-193.2003, -192.9162, -200.5918, -204.1613, -194.2124],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0187, device='cuda:0', dtype=torch.float64)
tensor([-192.7907, -192.5652, -199.1747, -203.2685, -193.2465],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0249, device='cuda:0', dtype=torch.float64)
tensor([-192.4931, -192.0418, -198.0481, -202.6754, -192.3458],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0145, device='cuda:0', dtype=torch.float64)
tensor([-192.3252, -191.5527, -197.5541, -202.5321, -191.8294],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0158, device='cuda:0', dtype=torch.float64)
tensor([-192.4722, -191.1874, -197.8369, -202.8814, -191.8372],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0122, device='cuda:0', dtype=torch.float64)
tensor([-192.5540, -190.6766, -198.0218, -203.2470, -191.6894],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0149, device='cuda:0', dtype=torch.float64)
tensor([-192.8778, -190.4106, -198.8391, -203.9613, -192.0575],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0135, device='cuda:0', dtype=torch.float64)
tensor([-193.1068, -190.0728, -199.3853, -204.5173, -192.2519],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0472, device='cuda:0', dtype=torch.float64)
tensor([-193.6132, -189.9631, -200.5132, -205.4198, -192.9540],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0157, device='cuda:0', dtype=torch.float64)
tensor([-194.0343, -190.0547, -201.5018, -206.1719, -193.6688],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0143, device='cuda:0', dtype=torch.float64)
tensor([-194.3643, -189.9250, -202.1663, -206.7938, -194.0810],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0135, device='cuda:0', dtype=torch.float64)
tensor([-194.3709, -190.0033, -202.2759, -206.8599, -194.2313],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0093, device='cuda:0', dtype=torch.float64)
tensor([-194.2553, -190.0559, -202.0766, -206.6879, -194.1723],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0142, device='cuda:0', dtype=torch.float64)
tensor([-193.5960, -190.3790, -200.7896, -205.5278, -193.5753],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0145, device='cuda:0', dtype=torch.float64)
tensor([-192.7456, -190.6429, -198.9415, -204.0031, -192.6193],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0134, device='cuda:0', dtype=torch.float64)
tensor([-192.0162, -190.8700, -197.1594, -202.6034, -191.6737],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0133, device='cuda:0', dtype=torch.float64)
tensor([-191.4930, -191.0562, -195.8488, -201.6041, -190.9663],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0141, device='cuda:0', dtype=torch.float64)
tensor([-191.3291, -191.0070, -195.2925, -201.2330, -190.5718],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0580, device='cuda:0', dtype=torch.float64)
tensor([-191.3844, -190.5537, -195.2008, -201.3590, -190.2522],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0158, device='cuda:0', dtype=torch.float64)
tensor([-191.9440, -190.1480, -196.3827, -202.4044, -190.7644],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0170, device='cuda:0', dtype=torch.float64)
tensor([-192.5360, -189.8977, -197.5902, -203.4162, -191.3742],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0111, device='cuda:0', dtype=torch.float64)
tensor([-193.2292, -189.9258, -199.1277, -204.5552, -192.3208],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0137, device='cuda:0', dtype=torch.float64)
tensor([-193.8246, -190.1294, -200.5607, -205.5724, -193.2671],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0142, device='cuda:0', dtype=torch.float64)
tensor([-194.4388, -190.2343, -201.9356, -206.6372, -194.1356],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0121, device='cuda:0', dtype=torch.float64)
tensor([-194.4822, -190.1348, -201.9273, -206.6449, -194.0538],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0125, device='cuda:0', dtype=torch.float64)
tensor([-194.0376, -189.7782, -200.6704, -205.7343, -193.0640],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0168, device='cuda:0', dtype=torch.float64)
tensor([-193.4090, -189.4646, -198.9536, -204.4775, -191.8364],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0122, device='cuda:0', dtype=torch.float64)
tensor([-192.8415, -188.9543, -197.5571, -203.6131, -190.6670],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0148, device='cuda:0', dtype=torch.float64)
tensor([-192.1060, -188.4505, -195.7880, -202.5546, -189.2558],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0120, device='cuda:0', dtype=torch.float64)
tensor([-191.4187, -188.0625, -194.2801, -201.7319, -187.9845],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0180, device='cuda:0', dtype=torch.float64)
tensor([-191.5141, -187.9577, -194.4753, -201.9833, -188.0578],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0152, device='cuda:0', dtype=torch.float64)
tensor([-191.5856, -187.9281, -194.7019, -202.2262, -188.1802],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0123, device='cuda:0', dtype=torch.float64)
tensor([-191.8582, -188.1298, -195.4842, -202.7036, -188.7867],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0130, device='cuda:0', dtype=torch.float64)
tensor([-192.2251, -188.6570, -196.5852, -203.2480, -189.7394],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0113, device='cuda:0', dtype=torch.float64)
tensor([-192.6974, -189.1358, -197.9679, -204.0091, -190.8129],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0126, device='cuda:0', dtype=torch.float64)
tensor([-193.4947, -189.3933, -200.0236, -205.4331, -192.1695],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0109, device='cuda:0', dtype=torch.float64)
tensor([-194.2709, -189.6205, -201.9090, -206.8449, -193.4393],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0120, device='cuda:0', dtype=torch.float64)
tensor([-194.7989, -189.6631, -203.0796, -207.8130, -194.2163],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0132, device='cuda:0', dtype=torch.float64)
tensor([-195.6039, -189.9945, -204.8401, -209.1703, -195.5272],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0097, device='cuda:0', dtype=torch.float64)
tensor([-196.4347, -190.3528, -206.5339, -210.4967, -196.8253],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0182, device='cuda:0', dtype=torch.float64)
tensor([-196.5116, -190.4376, -206.7386, -210.6095, -196.9940],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0122, device='cuda:0', dtype=torch.float64)
tensor([-196.1906, -190.3667, -206.1343, -210.0385, -196.5517],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0152, device='cuda:0', dtype=torch.float64)
tensor([-195.4281, -190.3636, -204.6531, -208.6488, -195.5806],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0162, device='cuda:0', dtype=torch.float64)
tensor([-194.5021, -190.3285, -202.5903, -206.7904, -194.2642],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0118, device='cuda:0', dtype=torch.float64)
tensor([-193.7259, -190.2108, -200.5884, -205.1183, -193.0071],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0130, device='cuda:0', dtype=torch.float64)
tensor([-193.3007, -189.8763, -199.1782, -204.0817, -192.0180],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0194, device='cuda:0', dtype=torch.float64)
tensor([-192.7312, -189.4337, -197.2985, -202.7855, -190.6930],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0108, device='cuda:0', dtype=torch.float64)
tensor([-192.4729, -188.8647, -196.2488, -202.2078, -189.7938],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0158, device='cuda:0', dtype=torch.float64)
tensor([-192.0767, -188.2792, -194.9691, -201.5405, -188.7005],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0164, device='cuda:0', dtype=torch.float64)
tensor([-191.7556, -187.8583, -193.8583, -200.9674, -187.7759],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0174, device='cuda:0', dtype=torch.float64)
tensor([-192.3123, -187.7956, -194.9555, -201.8219, -188.5319],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0131, device='cuda:0', dtype=torch.float64)
tensor([-193.2222, -187.7682, -197.0061, -203.3985, -189.8721],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0118, device='cuda:0', dtype=torch.float64)
tensor([-194.1855, -187.8779, -199.1180, -205.0135, -191.2850],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0156, device='cuda:0', dtype=torch.float64)
tensor([-195.0726, -188.2271, -201.0159, -206.3787, -192.6524],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0113, device='cuda:0', dtype=torch.float64)
tensor([-195.8057, -188.5996, -202.6472, -207.5814, -193.8494],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0142, device='cuda:0', dtype=torch.float64)
tensor([-196.1571, -188.6964, -203.2773, -208.0556, -194.3146],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0136, device='cuda:0', dtype=torch.float64)
tensor([-196.1107, -188.8370, -203.1030, -207.8301, -194.3210],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0173, device='cuda:0', dtype=torch.float64)
tensor([-195.7378, -188.9975, -202.2699, -207.0385, -193.9331],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0147, device='cuda:0', dtype=torch.float64)
tensor([-195.5613, -189.0829, -201.8590, -206.6350, -193.7767],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0112, device='cuda:0', dtype=torch.float64)
tensor([-194.9872, -189.0802, -200.4510, -205.4819, -192.9864],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0106, device='cuda:0', dtype=torch.float64)
tensor([-194.6780, -189.1494, -199.7277, -204.8653, -192.6361],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0232, device='cuda:0', dtype=torch.float64)
tensor([-194.5785, -189.1482, -199.5019, -204.6561, -192.5701],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0158, device='cuda:0', dtype=torch.float64)
tensor([-194.4895, -189.3048, -199.5055, -204.5620, -192.6995],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0139, device='cuda:0', dtype=torch.float64)
tensor([-194.4775, -189.3089, -199.6171, -204.6088, -192.7778],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0116, device='cuda:0', dtype=torch.float64)
tensor([-194.6921, -189.2818, -200.2595, -205.1093, -193.1638],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0121, device='cuda:0', dtype=torch.float64)
tensor([-194.7842, -189.2390, -200.4637, -205.2636, -193.2990],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0124, device='cuda:0', dtype=torch.float64)
tensor([-194.7311, -189.2300, -200.3576, -205.1611, -193.2540],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0113, device='cuda:0', dtype=torch.float64)
tensor([-194.6198, -189.1950, -200.0994, -204.9559, -193.1137],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0128, device='cuda:0', dtype=torch.float64)
tensor([-194.7684, -189.1521, -200.4830, -205.2708, -193.3459],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4411, device='cuda:0', dtype=torch.float64)
tensor([-194.5183, -189.3192, -199.9660, -204.7596, -193.0525],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0197, device='cuda:0', dtype=torch.float64)
tensor([-194.5727, -189.5856, -200.2265, -204.8392, -193.2664],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0161, device='cuda:0', dtype=torch.float64)
tensor([-194.2725, -189.6973, -199.4391, -204.1849, -192.7993],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0130, device='cuda:0', dtype=torch.float64)
tensor([-194.1039, -189.5922, -198.8876, -203.8273, -192.3699],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0105, device='cuda:0', dtype=torch.float64)
tensor([-194.0264, -189.3782, -198.5669, -203.6774, -192.0130],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0136, device='cuda:0', dtype=torch.float64)
tensor([-194.0646, -189.0814, -198.4878, -203.7503, -191.7706],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0191, device='cuda:0', dtype=torch.float64)
tensor([-193.8578, -188.5603, -197.7720, -203.4562, -190.9830],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0125, device='cuda:0', dtype=torch.float64)
tensor([-193.5911, -187.9878, -197.0361, -203.1778, -190.1400],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0190, device='cuda:0', dtype=torch.float64)
tensor([-193.4142, -187.5574, -196.5582, -203.0074, -189.5240],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0122, device='cuda:0', dtype=torch.float64)
tensor([-193.1328, -187.3533, -195.9325, -202.6835, -188.9331],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0152, device='cuda:0', dtype=torch.float64)
tensor([-193.3189, -187.4343, -196.5230, -203.1613, -189.3076],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0149, device='cuda:0', dtype=torch.float64)
tensor([-193.8279, -187.5244, -197.9337, -204.2752, -190.1936],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0170, device='cuda:0', dtype=torch.float64)
tensor([-194.7030, -187.8580, -200.3594, -206.0423, -191.8141],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0187, device='cuda:0', dtype=torch.float64)
tensor([-195.5332, -188.1037, -202.5098, -207.7467, -193.2605],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0116, device='cuda:0', dtype=torch.float64)
tensor([-195.8664, -188.1189, -203.4185, -208.5694, -193.8209],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1697, device='cuda:0', dtype=torch.float64)
tensor([-195.9456, -188.0838, -203.7795, -208.9103, -194.0090],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0239, device='cuda:0', dtype=torch.float64)
tensor([-195.6492, -188.0351, -203.3959, -208.6045, -193.7052],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0137, device='cuda:0', dtype=torch.float64)
tensor([-194.9328, -187.7407, -202.0351, -207.5403, -192.5942],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0133, device='cuda:0', dtype=torch.float64)
tensor([-194.0456, -187.5547, -200.3128, -206.1584, -191.3371],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0136, device='cuda:0', dtype=torch.float64)
tensor([-193.6238, -187.8346, -199.6088, -205.4479, -190.9972],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0142, device='cuda:0', dtype=torch.float64)
tensor([-193.1687, -188.1769, -198.8425, -204.7086, -190.6399],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0137, device='cuda:0', dtype=torch.float64)
tensor([-192.9355, -188.4756, -198.4921, -204.3060, -190.5675],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0112, device='cuda:0', dtype=torch.float64)
tensor([-192.6674, -188.6058, -197.9321, -203.8024, -190.2739],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0151, device='cuda:0', dtype=torch.float64)
tensor([-192.3982, -188.7013, -197.4667, -203.3786, -189.9750],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0234, device='cuda:0', dtype=torch.float64)
tensor([-192.6786, -188.9031, -198.2769, -203.8621, -190.5588],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0375, device='cuda:0', dtype=torch.float64)
tensor([-192.9546, -189.0909, -198.9901, -204.2890, -191.0678],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0128, device='cuda:0', dtype=torch.float64)
tensor([-193.1094, -189.2213, -199.4264, -204.5233, -191.3449],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0147, device='cuda:0', dtype=torch.float64)
tensor([-193.3456, -189.5398, -200.1225, -204.8610, -191.8809],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0123, device='cuda:0', dtype=torch.float64)
tensor([-193.4671, -189.8845, -200.5195, -204.9634, -192.2677],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0172, device='cuda:0', dtype=torch.float64)
tensor([-193.6631, -190.4175, -201.2753, -205.2951, -192.9781],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0174, device='cuda:0', dtype=torch.float64)
tensor([-193.9122, -190.7653, -202.0837, -205.7641, -193.6332],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0117, device='cuda:0', dtype=torch.float64)
tensor([-194.0619, -191.0380, -202.6616, -206.0872, -194.0904],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0097, device='cuda:0', dtype=torch.float64)
tensor([-193.9866, -191.4965, -202.8446, -206.0225, -194.4065],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0124, device='cuda:0', dtype=torch.float64)
tensor([-193.9531, -191.9552, -203.0061, -205.9438, -194.7175],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0123, device='cuda:0', dtype=torch.float64)
tensor([-193.7257, -192.3434, -202.6809, -205.5059, -194.6931],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0117, device='cuda:0', dtype=torch.float64)
tensor([-193.4370, -192.6695, -202.2460, -205.0265, -194.5595],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0130, device='cuda:0', dtype=torch.float64)
tensor([-192.7947, -192.9143, -200.8664, -203.8565, -193.8113],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0184, device='cuda:0', dtype=torch.float64)
tensor([-192.3559, -193.0042, -199.8446, -203.0817, -193.2076],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0181, device='cuda:0', dtype=torch.float64)
tensor([-192.1595, -193.0373, -199.4986, -202.8687, -193.0053],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0184, device='cuda:0', dtype=torch.float64)
tensor([-192.2815, -193.2639, -199.9900, -203.1626, -193.4149],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0115, device='cuda:0', dtype=torch.float64)
tensor([-192.5724, -193.5843, -200.9221, -203.7673, -194.1468],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0125, device='cuda:0', dtype=torch.float64)
tensor([-192.6587, -193.9205, -201.2935, -203.9396, -194.5658],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0106, device='cuda:0', dtype=torch.float64)
tensor([-192.5219, -193.9569, -201.0157, -203.8054, -194.4488],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0114, device='cuda:0', dtype=torch.float64)
tensor([-192.6946, -193.8732, -201.4450, -204.2384, -194.7058],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0142, device='cuda:0', dtype=torch.float64)
tensor([-192.4326, -193.6320, -200.7048, -203.8827, -194.1852],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0143, device='cuda:0', dtype=torch.float64)
tensor([-192.3761, -192.9884, -200.2995, -203.9358, -193.6545],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0100, device='cuda:0', dtype=torch.float64)
tensor([-192.3087, -192.3804, -199.9180, -204.0278, -193.1333],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0116, device='cuda:0', dtype=torch.float64)
tensor([-192.6031, -191.6244, -200.2303, -204.7015, -192.9535],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0148, device='cuda:0', dtype=torch.float64)
tensor([-193.0566, -190.6271, -200.7759, -205.6668, -192.7644],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0167, device='cuda:0', dtype=torch.float64)
tensor([-193.1800, -189.9191, -200.6901, -206.0578, -192.3309],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0113, device='cuda:0', dtype=torch.float64)
tensor([-192.8874, -189.5248, -199.7555, -205.6528, -191.5329],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0119, device='cuda:0', dtype=torch.float64)
tensor([-192.6854, -189.3591, -199.0600, -205.3073, -191.0377],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0125, device='cuda:0', dtype=torch.float64)
tensor([-192.8796, -189.2014, -199.1108, -205.5073, -191.0490],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0148, device='cuda:0', dtype=torch.float64)
tensor([-193.2728, -189.1762, -199.7041, -206.0231, -191.4590],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0179, device='cuda:0', dtype=torch.float64)
tensor([-193.6154, -189.2060, -200.1411, -206.4332, -191.8163],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0146, device='cuda:0', dtype=torch.float64)
tensor([-193.7873, -189.2570, -200.2800, -206.5894, -191.9655],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0154, device='cuda:0', dtype=torch.float64)
tensor([-193.6428, -189.5839, -199.9348, -206.2093, -191.9598],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0119, device='cuda:0', dtype=torch.float64)
tensor([-193.6163, -189.9157, -199.8720, -205.9864, -192.1252],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0135, device='cuda:0', dtype=torch.float64)
tensor([-193.5291, -190.2093, -199.7194, -205.7449, -192.1645],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0655, device='cuda:0', dtype=torch.float64)
tensor([-193.4730, -190.6548, -199.9283, -205.7275, -192.4733],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0170, device='cuda:0', dtype=torch.float64)
tensor([-193.4602, -191.1219, -200.1534, -205.6192, -192.8016],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0110, device='cuda:0', dtype=torch.float64)
tensor([-193.7035, -191.5898, -200.8698, -205.8464, -193.4301],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0176, device='cuda:0', dtype=torch.float64)
tensor([-193.9754, -191.8354, -201.5281, -206.1282, -193.9180],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0200, device='cuda:0', dtype=torch.float64)
tensor([-194.0557, -191.8780, -201.6831, -206.1540, -193.9846],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0172, device='cuda:0', dtype=torch.float64)
tensor([-194.3968, -191.9407, -202.4220, -206.6068, -194.3934],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0095, device='cuda:0', dtype=torch.float64)
tensor([-194.7052, -191.9291, -203.0975, -207.0944, -194.7254],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0488, device='cuda:0', dtype=torch.float64)
tensor([-194.6801, -191.8760, -202.9600, -206.9343, -194.5190],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0148, device='cuda:0', dtype=torch.float64)
tensor([-194.3221, -191.7310, -201.9747, -206.1865, -193.7691],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0110, device='cuda:0', dtype=torch.float64)
tensor([-193.9263, -191.6100, -200.8658, -205.3412, -193.0073],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0113, device='cuda:0', dtype=torch.float64)
tensor([-193.7542, -191.4293, -200.2497, -204.9189, -192.5299],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0124, device='cuda:0', dtype=torch.float64)
tensor([-193.8724, -191.2276, -200.3692, -205.0719, -192.4570],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0132, device='cuda:0', dtype=torch.float64)
tensor([-194.0948, -190.8911, -200.7251, -205.4622, -192.4821],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0166, device='cuda:0', dtype=torch.float64)
tensor([-194.3314, -190.6716, -201.0347, -205.7392, -192.5299],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0120, device='cuda:0', dtype=torch.float64)
tensor([-194.5105, -190.5507, -201.3404, -206.0153, -192.6301],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0124, device='cuda:0', dtype=torch.float64)
tensor([-194.2707, -190.2408, -200.6975, -205.6815, -192.0774],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0108, device='cuda:0', dtype=torch.float64)
tensor([-194.0428, -189.9529, -200.1749, -205.4305, -191.5939],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0107, device='cuda:0', dtype=torch.float64)
tensor([-193.7434, -189.6547, -199.5148, -205.0809, -191.0189],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0114, device='cuda:0', dtype=torch.float64)
tensor([-193.5858, -189.4800, -199.3704, -205.0537, -190.8098],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0115, device='cuda:0', dtype=torch.float64)
tensor([-193.3077, -189.2814, -198.9099, -204.7915, -190.4206],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0134, device='cuda:0', dtype=torch.float64)
tensor([-193.2330, -189.2062, -198.9912, -204.9038, -190.4205],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0124, device='cuda:0', dtype=torch.float64)
tensor([-193.1162, -189.3518, -199.0943, -204.9348, -190.5656],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0141, device='cuda:0', dtype=torch.float64)
tensor([-192.9644, -189.4487, -199.1343, -204.9129, -190.6208],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0154, device='cuda:0', dtype=torch.float64)
tensor([-192.5536, -189.5191, -198.7076, -204.5562, -190.3382],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0171, device='cuda:0', dtype=torch.float64)
tensor([-192.5456, -189.7184, -199.0270, -204.6832, -190.5962],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0121, device='cuda:0', dtype=torch.float64)
tensor([-192.8319, -189.9112, -199.9961, -205.2819, -191.2799],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0134, device='cuda:0', dtype=torch.float64)
tensor([-192.6837, -190.2191, -200.0880, -205.1388, -191.4928],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0129, device='cuda:0', dtype=torch.float64)
tensor([-192.3198, -190.4417, -199.6720, -204.6359, -191.3044],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0128, device='cuda:0', dtype=torch.float64)
tensor([-192.3414, -190.5966, -200.0193, -204.7560, -191.5557],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0145, device='cuda:0', dtype=torch.float64)
tensor([-192.1603, -190.6399, -199.9246, -204.5772, -191.4692],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0107, device='cuda:0', dtype=torch.float64)
tensor([-191.8843, -190.7477, -199.7204, -204.2987, -191.3444],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0127, device='cuda:0', dtype=torch.float64)
tensor([-191.5847, -190.8585, -199.4392, -203.9510, -191.1808],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0122, device='cuda:0', dtype=torch.float64)
tensor([-191.2274, -190.6902, -198.8125, -203.4793, -190.6328],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0189, device='cuda:0', dtype=torch.float64)
tensor([-190.8506, -190.5467, -198.1446, -202.9490, -190.0648],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0125, device='cuda:0', dtype=torch.float64)
tensor([-190.8963, -190.3420, -198.3015, -203.1292, -190.0504],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0094, device='cuda:0', dtype=torch.float64)
tensor([-191.5498, -190.3795, -199.6693, -204.1814, -191.0355],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0131, device='cuda:0', dtype=torch.float64)
tensor([-192.3015, -190.6480, -201.2656, -205.3350, -192.2809],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0181, device='cuda:0', dtype=torch.float64)
tensor([-192.9775, -191.1561, -202.7437, -206.3215, -193.5295],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0135, device='cuda:0', dtype=torch.float64)
tensor([-193.5183, -191.6114, -204.0052, -207.1768, -194.5859],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0118, device='cuda:0', dtype=torch.float64)
tensor([-193.6610, -191.5688, -204.2282, -207.3764, -194.7173],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0202, device='cuda:0', dtype=torch.float64)
tensor([-193.5330, -191.4847, -203.9398, -207.1494, -194.4746],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0130, device='cuda:0', dtype=torch.float64)
tensor([-193.0235, -191.0719, -202.6904, -206.2554, -193.4741],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0093, device='cuda:0', dtype=torch.float64)
tensor([-192.3197, -190.6697, -201.0070, -205.0052, -192.2115],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0148, device='cuda:0', dtype=torch.float64)
tensor([-191.8851, -190.2534, -199.8850, -204.2679, -191.2850],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0126, device='cuda:0', dtype=torch.float64)
tensor([-191.3516, -189.7736, -198.6210, -203.4299, -190.1707],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0120, device='cuda:0', dtype=torch.float64)
tensor([-190.7307, -189.6105, -197.2571, -202.3640, -189.1239],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0137, device='cuda:0', dtype=torch.float64)
tensor([-190.6007, -189.2387, -196.9433, -202.2156, -188.6376],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0122, device='cuda:0', dtype=torch.float64)
tensor([-190.5275, -188.8670, -196.7618, -202.1663, -188.2321],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0145, device='cuda:0', dtype=torch.float64)
tensor([-191.0809, -188.7652, -197.9694, -203.2295, -189.0675],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0166, device='cuda:0', dtype=torch.float64)
tensor([-192.0009, -188.7226, -199.9937, -204.9346, -190.4302],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0114, device='cuda:0', dtype=torch.float64)
tensor([-192.8415, -188.8666, -201.6965, -206.3301, -191.6385],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0130, device='cuda:0', dtype=torch.float64)
tensor([-193.6947, -189.2638, -203.3952, -207.6688, -192.9561],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0095, device='cuda:0', dtype=torch.float64)
tensor([-194.5106, -189.8496, -204.9656, -208.8183, -194.2802],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0115, device='cuda:0', dtype=torch.float64)
tensor([-195.3611, -190.2453, -206.5954, -210.1187, -195.5208],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0125, device='cuda:0', dtype=torch.float64)
tensor([-195.4604, -190.3710, -206.7502, -210.1611, -195.6565],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0107, device='cuda:0', dtype=torch.float64)
tensor([-194.5415, -190.4359, -204.9927, -208.4631, -194.5494],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0249, device='cuda:0', dtype=torch.float64)
tensor([-193.7730, -190.5743, -203.3772, -206.9392, -193.6273],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0130, device='cuda:0', dtype=torch.float64)
tensor([-193.3912, -190.5494, -202.3512, -206.0663, -193.0426],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0145, device='cuda:0', dtype=torch.float64)
tensor([-193.0200, -190.4698, -201.2031, -205.1486, -192.3605],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0148, device='cuda:0', dtype=torch.float64)
tensor([-192.5666, -190.2711, -199.6854, -204.0391, -191.4210],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0149, device='cuda:0', dtype=torch.float64)
tensor([-192.2800, -190.1639, -198.6765, -203.3437, -190.8067],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0126, device='cuda:0', dtype=torch.float64)
tensor([-192.3188, -190.3345, -198.5977, -203.2509, -190.8916],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0127, device='cuda:0', dtype=torch.float64)
tensor([-192.8091, -190.3887, -199.8137, -204.2302, -191.6708],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0123, device='cuda:0', dtype=torch.float64)
tensor([-193.1291, -190.5031, -200.6047, -204.8271, -192.2440],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0106, device='cuda:0', dtype=torch.float64)
tensor([-193.4435, -190.5964, -201.3481, -205.4049, -192.7827],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0103, device='cuda:0', dtype=torch.float64)
tensor([-194.0954, -190.5345, -202.7497, -206.6131, -193.6451],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0097, device='cuda:0', dtype=torch.float64)
tensor([-194.6478, -190.4945, -203.8711, -207.6391, -194.3747],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0133, device='cuda:0', dtype=torch.float64)
tensor([-194.7914, -190.3951, -204.1013, -207.9240, -194.5306],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0146, device='cuda:0', dtype=torch.float64)
tensor([-194.7971, -190.2182, -203.9949, -207.9519, -194.4589],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0120, device='cuda:0', dtype=torch.float64)
tensor([-194.6828, -190.0073, -203.6482, -207.8080, -194.2053],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0115, device='cuda:0', dtype=torch.float64)
tensor([-194.3927, -189.7050, -202.8927, -207.3682, -193.6532],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0117, device='cuda:0', dtype=torch.float64)
tensor([-193.8562, -189.3291, -201.5909, -206.5184, -192.7165],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0122, device='cuda:0', dtype=torch.float64)
tensor([-193.2158, -188.7919, -199.9277, -205.4877, -191.4569],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0110, device='cuda:0', dtype=torch.float64)
tensor([-192.8821, -188.3872, -198.8917, -204.9062, -190.6322],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0135, device='cuda:0', dtype=torch.float64)
tensor([-192.7712, -188.0388, -198.4775, -204.7977, -190.2114],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0123, device='cuda:0', dtype=torch.float64)
tensor([-192.6122, -187.9866, -198.0198, -204.5018, -189.9207],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0134, device='cuda:0', dtype=torch.float64)
tensor([-192.8163, -188.1288, -198.3816, -204.7336, -190.2604],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0096, device='cuda:0', dtype=torch.float64)
tensor([-193.2070, -188.4874, -199.2273, -205.2097, -191.0077],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0111, device='cuda:0', dtype=torch.float64)
tensor([-193.3560, -188.8195, -199.6381, -205.3548, -191.4710],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0104, device='cuda:0', dtype=torch.float64)
tensor([-193.5030, -189.3874, -200.2075, -205.4872, -192.1126],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0131, device='cuda:0', dtype=torch.float64)
tensor([-193.8247, -189.7356, -201.0688, -205.9943, -192.7936],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0106, device='cuda:0', dtype=torch.float64)
tensor([-193.8987, -190.0243, -201.3601, -206.0685, -193.0976],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0137, device='cuda:0', dtype=torch.float64)
tensor([-193.8539, -190.2750, -201.2974, -205.8889, -193.1799],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0091, device='cuda:0', dtype=torch.float64)
tensor([-193.6118, -190.5546, -200.8280, -205.3832, -193.0215],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0135, device='cuda:0', dtype=torch.float64)
tensor([-193.4185, -190.8485, -200.4819, -204.9826, -192.9410],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0142, device='cuda:0', dtype=torch.float64)
tensor([-193.2571, -190.9987, -200.0224, -204.5521, -192.7339],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0141, device='cuda:0', dtype=torch.float64)
tensor([-193.2419, -191.1322, -199.8690, -204.3635, -192.7030],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0128, device='cuda:0', dtype=torch.float64)
tensor([-193.4969, -191.1112, -200.3209, -204.7066, -192.9388],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0115, device='cuda:0', dtype=torch.float64)
tensor([-193.5635, -190.9286, -200.3147, -204.8000, -192.8064],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0160, device='cuda:0', dtype=torch.float64)
tensor([-193.4020, -190.4755, -199.7217, -204.5895, -192.2148],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0111, device='cuda:0', dtype=torch.float64)
tensor([-193.2765, -190.0847, -199.2847, -204.4812, -191.7503],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0104, device='cuda:0', dtype=torch.float64)
tensor([-193.1036, -189.7804, -198.8921, -204.3424, -191.3412],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0128, device='cuda:0', dtype=torch.float64)
tensor([-193.1684, -189.3397, -198.9478, -204.6518, -191.1472],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0118, device='cuda:0', dtype=torch.float64)
tensor([-193.0392, -188.9748, -198.6091, -204.6022, -190.7126],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0147, device='cuda:0', dtype=torch.float64)
tensor([-192.9655, -188.5526, -198.4527, -204.7455, -190.3390],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0131, device='cuda:0', dtype=torch.float64)
tensor([-192.6546, -188.3207, -197.8943, -204.4204, -189.8102],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0121, device='cuda:0', dtype=torch.float64)
tensor([-192.7502, -188.4181, -198.2395, -204.6241, -190.0616],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0113, device='cuda:0', dtype=torch.float64)
tensor([-192.7664, -188.3523, -198.3749, -204.7532, -190.0763],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0108, device='cuda:0', dtype=torch.float64)
tensor([-192.8886, -188.2189, -198.7240, -205.0584, -190.1932],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0131, device='cuda:0', dtype=torch.float64)
tensor([-192.6129, -187.8653, -198.3033, -204.8710, -189.6359],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0149, device='cuda:0', dtype=torch.float64)
tensor([-192.8205, -187.7990, -198.7324, -205.1499, -189.8869],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0187, device='cuda:0', dtype=torch.float64)
tensor([-192.2084, -188.1333, -197.6889, -204.1098, -189.4269],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0142, device='cuda:0', dtype=torch.float64)
tensor([-191.4384, -188.4168, -196.4061, -202.9648, -188.7359],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0130, device='cuda:0', dtype=torch.float64)
tensor([-191.5265, -189.1106, -196.5900, -202.6496, -189.3470],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0186, device='cuda:0', dtype=torch.float64)
tensor([-191.7696, -189.6139, -197.0389, -202.6360, -189.9784],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0139, device='cuda:0', dtype=torch.float64)
tensor([-191.8162, -189.9684, -197.0926, -202.4290, -190.2393],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0133, device='cuda:0', dtype=torch.float64)
tensor([-191.7387, -190.1636, -196.8662, -202.1318, -190.2130],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0191, device='cuda:0', dtype=torch.float64)
tensor([-191.9692, -190.4012, -197.2187, -202.2517, -190.5928],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0145, device='cuda:0', dtype=torch.float64)
tensor([-192.0720, -190.7110, -197.3552, -202.1741, -190.8910],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0123, device='cuda:0', dtype=torch.float64)
tensor([-192.1730, -190.9786, -197.4347, -202.0751, -191.1471],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0150, device='cuda:0', dtype=torch.float64)
tensor([-192.2424, -191.1663, -197.5154, -202.0261, -191.3353],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0132, device='cuda:0', dtype=torch.float64)
tensor([-192.5113, -191.4853, -198.0916, -202.2970, -191.9066],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0126, device='cuda:0', dtype=torch.float64)
tensor([-193.1284, -191.6681, -199.4507, -203.2043, -192.8899],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0119, device='cuda:0', dtype=torch.float64)
tensor([-193.5819, -191.7707, -200.4397, -203.8628, -193.6215],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0109, device='cuda:0', dtype=torch.float64)
tensor([-194.0862, -191.7554, -201.4328, -204.5779, -194.2967],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0120, device='cuda:0', dtype=torch.float64)
tensor([-194.5124, -191.6235, -202.1988, -205.2143, -194.8094],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0131, device='cuda:0', dtype=torch.float64)
tensor([-194.9211, -191.3843, -202.8669, -205.8141, -195.1936],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0107, device='cuda:0', dtype=torch.float64)
tensor([-195.3245, -191.0776, -203.4631, -206.4212, -195.4891],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0116, device='cuda:0', dtype=torch.float64)
tensor([-195.4945, -190.9104, -203.7146, -206.6698, -195.6617],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0132, device='cuda:0', dtype=torch.float64)
tensor([-195.4758, -190.7416, -203.6172, -206.6269, -195.6047],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0141, device='cuda:0', dtype=torch.float64)
tensor([-195.8839, -190.4194, -204.1375, -207.1886, -195.8366],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0121, device='cuda:0', dtype=torch.float64)
tensor([-195.7317, -190.0444, -203.5884, -206.8117, -195.3420],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0101, device='cuda:0', dtype=torch.float64)
tensor([-195.5299, -189.6596, -203.0412, -206.4441, -194.8142],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0132, device='cuda:0', dtype=torch.float64)
tensor([-195.1911, -189.3174, -202.2807, -205.8928, -194.1875],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0255, device='cuda:0', dtype=torch.float64)
tensor([-194.7797, -188.8228, -201.3783, -205.3105, -193.3659],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0124, device='cuda:0', dtype=torch.float64)
tensor([-194.3449, -188.3338, -200.4130, -204.6698, -192.4605],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0109, device='cuda:0', dtype=torch.float64)
tensor([-193.7837, -187.8721, -199.2239, -203.8418, -191.3979],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0122, device='cuda:0', dtype=torch.float64)
tensor([-193.3750, -187.3622, -198.3125, -203.2694, -190.4404],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0132, device='cuda:0', dtype=torch.float64)
tensor([-192.8403, -186.8682, -197.2021, -202.5386, -189.3149],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0148, device='cuda:0', dtype=torch.float64)
tensor([-192.8082, -186.6176, -197.0760, -202.4525, -189.0665],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0131, device='cuda:0', dtype=torch.float64)
tensor([-192.3053, -186.2440, -196.1893, -201.7927, -188.1139],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0122, device='cuda:0', dtype=torch.float64)
tensor([-192.0133, -186.0956, -195.7510, -201.3824, -187.6191],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0155, device='cuda:0', dtype=torch.float64)
tensor([-192.2044, -185.9313, -196.1908, -201.7581, -187.8050],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0156, device='cuda:0', dtype=torch.float64)
tensor([-193.0150, -185.9020, -197.6057, -202.9525, -188.8883],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0126, device='cuda:0', dtype=torch.float64)
tensor([-194.5713, -186.3341, -200.4146, -205.1439, -191.1944],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0125, device='cuda:0', dtype=torch.float64)
tensor([-196.3305, -187.3580, -203.7177, -207.5059, -194.0229],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0133, device='cuda:0', dtype=torch.float64)
tensor([-197.5861, -188.3090, -206.1131, -209.1852, -196.0992],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0128, device='cuda:0', dtype=torch.float64)
tensor([-198.4545, -189.1122, -207.8078, -210.3392, -197.5881],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0127, device='cuda:0', dtype=torch.float64)
tensor([-198.5380, -189.6050, -208.2509, -210.4489, -198.0723],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0117, device='cuda:0', dtype=torch.float64)
tensor([-197.6052, -189.7499, -206.9121, -209.0220, -197.2211],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0121, device='cuda:0', dtype=torch.float64)
tensor([-196.3412, -189.8217, -204.7960, -206.9625, -195.8677],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0111, device='cuda:0', dtype=torch.float64)
tensor([-194.7858, -189.9476, -201.7542, -204.1777, -194.0389],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0149, device='cuda:0', dtype=torch.float64)
tensor([-193.7741, -189.9242, -199.4977, -202.2587, -192.6140],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0131, device='cuda:0', dtype=torch.float64)
tensor([-193.3274, -189.7363, -198.3541, -201.3617, -191.7786],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0110, device='cuda:0', dtype=torch.float64)
tensor([-192.9021, -189.4844, -197.2254, -200.5300, -190.8974],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0132, device='cuda:0', dtype=torch.float64)
tensor([-192.9117, -189.3609, -197.0110, -200.3782, -190.6931],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0126, device='cuda:0', dtype=torch.float64)
tensor([-193.0400, -189.0067, -197.0079, -200.5043, -190.4980],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0108, device='cuda:0', dtype=torch.float64)
tensor([-193.3033, -188.7016, -197.3372, -200.8808, -190.5308],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0105, device='cuda:0', dtype=torch.float64)
tensor([-193.6914, -188.3376, -197.9423, -201.5611, -190.7246],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0179, device='cuda:0', dtype=torch.float64)
tensor([-193.7624, -188.1939, -197.9418, -201.6406, -190.6282],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0100, device='cuda:0', dtype=torch.float64)
tensor([-194.1335, -188.0975, -198.7288, -202.3820, -191.0823],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0104, device='cuda:0', dtype=torch.float64)
tensor([-194.2802, -187.9261, -199.0325, -202.7716, -191.1711],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0121, device='cuda:0', dtype=torch.float64)
tensor([-194.5556, -187.6021, -199.4343, -203.3324, -191.2503],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0148, device='cuda:0', dtype=torch.float64)
tensor([-194.7939, -187.2184, -199.7762, -203.8654, -191.2497],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0218, device='cuda:0', dtype=torch.float64)
tensor([-194.8463, -186.8751, -199.7189, -204.0329, -191.0173],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0107, device='cuda:0', dtype=torch.float64)
tensor([-194.6452, -186.1762, -199.0082, -203.8075, -190.1482],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0142, device='cuda:0', dtype=torch.float64)
tensor([-193.9965, -185.3054, -197.5503, -203.0523, -188.5969],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0137, device='cuda:0', dtype=torch.float64)
tensor([-193.6236, -184.5779, -196.7197, -202.7677, -187.5181],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0112, device='cuda:0', dtype=torch.float64)
tensor([-193.4661, -184.0157, -196.3091, -202.7429, -186.8166],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0185, device='cuda:0', dtype=torch.float64)
tensor([-193.8689, -183.5160, -196.7540, -203.4303, -186.8545],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0150, device='cuda:0', dtype=torch.float64)
tensor([-194.1708, -183.1372, -197.1348, -204.0231, -186.9060],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0161, device='cuda:0', dtype=torch.float64)
tensor([-194.6550, -183.2535, -197.8943, -204.6877, -187.6084],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0146, device='cuda:0', dtype=torch.float64)
tensor([-195.2302, -183.6516, -198.8713, -205.4253, -188.6289],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0166, device='cuda:0', dtype=torch.float64)
tensor([-195.5536, -183.9687, -199.5205, -205.8777, -189.3206],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0204, device='cuda:0', dtype=torch.float64)
tensor([-195.8833, -184.6804, -200.3624, -206.3045, -190.3755],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0183, device='cuda:0', dtype=torch.float64)
tensor([-195.1740, -185.3559, -199.4439, -205.1161, -190.1275],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0115, device='cuda:0', dtype=torch.float64)
tensor([-194.3755, -185.9540, -198.3754, -203.8870, -189.6952],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0104, device='cuda:0', dtype=torch.float64)
tensor([-193.8710, -186.6501, -197.8112, -203.0698, -189.6793],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0141, device='cuda:0', dtype=torch.float64)
tensor([-194.0285, -187.1929, -198.4297, -203.3647, -190.3825],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0127, device='cuda:0', dtype=torch.float64)
tensor([-194.0709, -187.3654, -198.8107, -203.6776, -190.7065],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0151, device='cuda:0', dtype=torch.float64)
tensor([-193.7469, -187.5714, -198.5182, -203.3931, -190.6138],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0119, device='cuda:0', dtype=torch.float64)
tensor([-193.0966, -187.7149, -197.6170, -202.6360, -190.0486],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0145, device='cuda:0', dtype=torch.float64)
tensor([-192.8088, -187.6792, -197.4248, -202.6067, -189.8581],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0137, device='cuda:0', dtype=torch.float64)
tensor([-192.7214, -187.6458, -197.5547, -202.7976, -189.8965],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0102, device='cuda:0', dtype=torch.float64)
tensor([-192.8701, -187.2478, -197.9888, -203.4218, -189.9485],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0106, device='cuda:0', dtype=torch.float64)
tensor([-192.9116, -186.7412, -198.0809, -203.8005, -189.7413],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0105, device='cuda:0', dtype=torch.float64)
tensor([-193.0191, -186.2016, -198.2374, -204.2328, -189.5607],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0099, device='cuda:0', dtype=torch.float64)
tensor([-193.1040, -185.7528, -198.3130, -204.5456, -189.3569],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0115, device='cuda:0', dtype=torch.float64)
tensor([-193.2097, -185.2791, -198.4621, -204.9340, -189.1578],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0149, device='cuda:0', dtype=torch.float64)
tensor([-193.4461, -184.8366, -198.8496, -205.5042, -189.1339],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0219, device='cuda:0', dtype=torch.float64)
tensor([-193.8279, -184.3630, -199.3940, -206.2613, -189.1644],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0150, device='cuda:0', dtype=torch.float64)
tensor([-194.2001, -184.0244, -199.9572, -206.9840, -189.2596],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0121, device='cuda:0', dtype=torch.float64)
tensor([-194.6619, -184.0000, -200.7704, -207.7401, -189.7073],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0121, device='cuda:0', dtype=torch.float64)
tensor([-195.3207, -183.9226, -201.8364, -208.7417, -190.3027],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0130, device='cuda:0', dtype=torch.float64)
tensor([-195.4251, -183.7097, -202.0859, -209.0899, -190.2368],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0162, device='cuda:0', dtype=torch.float64)
tensor([-195.2796, -183.5701, -201.9608, -209.0209, -189.9763],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0119, device='cuda:0', dtype=torch.float64)
tensor([-195.3835, -183.7141, -202.3127, -209.2211, -190.2490],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0131, device='cuda:0', dtype=torch.float64)
tensor([-194.6696, -184.0182, -201.4735, -208.2230, -189.8332],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0133, device='cuda:0', dtype=torch.float64)
tensor([-193.7394, -184.3011, -200.1507, -206.8735, -189.0540],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0131, device='cuda:0', dtype=torch.float64)
tensor([-192.4588, -184.6522, -198.2851, -205.0423, -187.9112],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0174, device='cuda:0', dtype=torch.float64)
tensor([-191.5409, -184.9363, -196.8536, -203.6637, -187.0275],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0136, device='cuda:0', dtype=torch.float64)
tensor([-190.9695, -185.3706, -195.9329, -202.6048, -186.6148],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0149, device='cuda:0', dtype=torch.float64)
tensor([-190.8317, -185.6515, -195.6301, -202.1542, -186.5661],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0163, device='cuda:0', dtype=torch.float64)
tensor([-190.9769, -186.1596, -195.7877, -201.9466, -187.0267],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0217, device='cuda:0', dtype=torch.float64)
tensor([-191.6156, -186.8613, -196.9608, -202.4119, -188.2660],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0161, device='cuda:0', dtype=torch.float64)
tensor([-192.2163, -187.4719, -198.1091, -202.8931, -189.3366],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0160, device='cuda:0', dtype=torch.float64)
tensor([-192.7779, -188.0287, -199.3047, -203.5077, -190.3696],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0119, device='cuda:0', dtype=torch.float64)
tensor([-193.1520, -188.7521, -200.2752, -203.8852, -191.3439],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0115, device='cuda:0', dtype=torch.float64)
tensor([-193.2472, -189.2120, -200.5406, -203.8341, -191.7186],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0126, device='cuda:0', dtype=torch.float64)
tensor([-193.3287, -189.7740, -200.9210, -203.8272, -192.1963],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0131, device='cuda:0', dtype=torch.float64)
tensor([-193.6668, -190.2118, -201.8602, -204.3342, -192.9297],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0150, device='cuda:0', dtype=torch.float64)
tensor([-193.7964, -190.5813, -202.3883, -204.5551, -193.3781],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0120, device='cuda:0', dtype=torch.float64)
tensor([-193.6959, -190.7700, -202.3445, -204.3865, -193.4157],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0133, device='cuda:0', dtype=torch.float64)
tensor([-193.4967, -190.7121, -201.9197, -204.0274, -193.1046],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0114, device='cuda:0', dtype=torch.float64)
tensor([-193.6625, -190.5420, -202.1979, -204.3267, -193.1575],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0123, device='cuda:0', dtype=torch.float64)
tensor([-193.6697, -190.4503, -202.2169, -204.3512, -193.1060],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0129, device='cuda:0', dtype=torch.float64)
tensor([-193.6225, -190.0713, -201.9377, -204.2667, -192.7576],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0313, device='cuda:0', dtype=torch.float64)
tensor([-193.8638, -189.6121, -202.2096, -204.7365, -192.7269],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0138, device='cuda:0', dtype=torch.float64)
tensor([-194.1352, -189.1033, -202.6527, -205.3858, -192.8010],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0130, device='cuda:0', dtype=torch.float64)
tensor([-194.4789, -188.5173, -203.1710, -206.1703, -192.8641],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0105, device='cuda:0', dtype=torch.float64)
tensor([-194.4128, -188.0412, -202.9907, -206.2562, -192.5053],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0123, device='cuda:0', dtype=torch.float64)
tensor([-193.8807, -187.4963, -201.8904, -205.5441, -191.5342],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8826, device='cuda:0', dtype=torch.float64)
tensor([-193.2612, -187.0553, -200.6917, -204.6505, -190.5092],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0123, device='cuda:0', dtype=torch.float64)
tensor([-192.7954, -186.7468, -199.8657, -204.0629, -189.7987],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0215, device='cuda:0', dtype=torch.float64)
tensor([-191.9546, -186.6436, -198.2339, -202.7010, -188.6899],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0114, device='cuda:0', dtype=torch.float64)
tensor([-191.4862, -186.6679, -197.3316, -201.9584, -188.1464],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0134, device='cuda:0', dtype=torch.float64)
tensor([-191.0888, -186.9753, -196.7026, -201.3269, -187.9175],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0119, device='cuda:0', dtype=torch.float64)
tensor([-190.8171, -187.4302, -196.4734, -200.9562, -188.0130],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0103, device='cuda:0', dtype=torch.float64)
tensor([-190.6845, -187.9612, -196.4571, -200.7008, -188.2956],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0145, device='cuda:0', dtype=torch.float64)
tensor([-190.5627, -188.2804, -196.3737, -200.4781, -188.4281],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0122, device='cuda:0', dtype=torch.float64)
tensor([-190.4560, -188.5987, -196.2938, -200.3020, -188.5832],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0119, device='cuda:0', dtype=torch.float64)
tensor([-190.5808, -188.5204, -196.8280, -200.7589, -188.8582],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0126, device='cuda:0', dtype=torch.float64)
tensor([-191.0692, -188.5003, -198.0110, -201.6786, -189.5566],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0123, device='cuda:0', dtype=torch.float64)
tensor([-192.0133, -188.4520, -200.0289, -203.2783, -190.7359],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0165, device='cuda:0', dtype=torch.float64)
tensor([-192.9928, -188.1888, -202.0107, -205.0602, -191.8118],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0131, device='cuda:0', dtype=torch.float64)
tensor([-194.2257, -187.8942, -204.2308, -207.1837, -193.0632],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0106, device='cuda:0', dtype=torch.float64)
tensor([-195.1021, -187.5545, -205.6517, -208.7716, -193.8342],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0116, device='cuda:0', dtype=torch.float64)
tensor([-195.3785, -187.0831, -205.9399, -209.4156, -193.8069],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0153, device='cuda:0', dtype=torch.float64)
tensor([-195.4183, -186.3791, -205.7202, -209.6844, -193.3464],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0108, device='cuda:0', dtype=torch.float64)
tensor([-195.4649, -185.5251, -205.4270, -209.9797, -192.7577],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0126, device='cuda:0', dtype=torch.float64)
tensor([-195.6117, -184.8322, -205.3413, -210.3480, -192.3698],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0107, device='cuda:0', dtype=torch.float64)
tensor([-194.9268, -184.3036, -204.0116, -209.5046, -191.2233],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0118, device='cuda:0', dtype=torch.float64)
tensor([-194.0824, -184.1495, -202.5158, -208.3409, -190.2080],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0131, device='cuda:0', dtype=torch.float64)
tensor([-193.2831, -183.9864, -201.0122, -207.1868, -189.1996],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0214, device='cuda:0', dtype=torch.float64)
tensor([-191.8003, -183.6395, -198.2754, -205.2369, -187.2386],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0113, device='cuda:0', dtype=torch.float64)
tensor([-190.1498, -183.5958, -195.5775, -203.3788, -185.3237],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0120, device='cuda:0', dtype=torch.float64)
tensor([-188.9772, -183.8406, -193.8068, -202.0455, -184.1003],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0137, device='cuda:0', dtype=torch.float64)
tensor([-189.0500, -184.1641, -193.8674, -201.8806, -184.4124],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0182, device='cuda:0', dtype=torch.float64)
tensor([-190.0232, -184.3116, -195.4314, -202.8315, -185.7138],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0122, device='cuda:0', dtype=torch.float64)
tensor([-191.0099, -184.6103, -197.1974, -203.7734, -187.0957],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0131, device='cuda:0', dtype=torch.float64)
tensor([-191.9581, -184.9203, -199.0566, -204.8951, -188.4637],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0128, device='cuda:0', dtype=torch.float64)
tensor([-193.1558, -185.5087, -201.6030, -206.5557, -190.4034],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0139, device='cuda:0', dtype=torch.float64)
tensor([-194.1259, -185.8065, -203.5621, -208.0452, -191.8262],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0116, device='cuda:0', dtype=torch.float64)
tensor([-194.5842, -186.0423, -204.5884, -208.7988, -192.6153],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0155, device='cuda:0', dtype=torch.float64)
tensor([-193.8642, -185.9929, -203.5580, -207.8763, -191.9005],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0139, device='cuda:0', dtype=torch.float64)
tensor([-192.7545, -185.8146, -201.7711, -206.3923, -190.6136],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0109, device='cuda:0', dtype=torch.float64)
tensor([-191.6339, -185.9274, -200.1387, -204.9551, -189.5368],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0139, device='cuda:0', dtype=torch.float64)
tensor([-190.8063, -186.0942, -199.0125, -203.9457, -188.7892],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0120, device='cuda:0', dtype=torch.float64)
tensor([-190.3225, -186.0575, -198.3365, -203.4073, -188.2223],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0119, device='cuda:0', dtype=torch.float64)
tensor([-190.0773, -185.7633, -197.9176, -203.1840, -187.6972],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0140, device='cuda:0', dtype=torch.float64)
tensor([-190.0967, -185.3080, -197.9003, -203.4311, -187.3189],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0119, device='cuda:0', dtype=torch.float64)
tensor([-190.7659, -185.1052, -198.9815, -204.5324, -187.9200],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0235, device='cuda:0', dtype=torch.float64)
tensor([-191.1880, -184.8923, -199.6753, -205.3581, -188.2557],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0149, device='cuda:0', dtype=torch.float64)
tensor([-191.9573, -184.7037, -200.9040, -206.6504, -188.9489],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0237, device='cuda:0', dtype=torch.float64)
tensor([-192.3854, -184.3250, -201.4466, -207.4216, -189.0267],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0141, device='cuda:0', dtype=torch.float64)
tensor([-192.3275, -183.7537, -201.1596, -207.5371, -188.3666],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0113, device='cuda:0', dtype=torch.float64)
tensor([-191.6539, -183.5047, -200.1078, -206.7935, -187.3612],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0130, device='cuda:0', dtype=torch.float64)
tensor([-191.1156, -183.4014, -199.2575, -206.1505, -186.6468],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0153, device='cuda:0', dtype=torch.float64)
tensor([-191.1199, -183.3771, -199.1798, -206.0987, -186.6088],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0157, device='cuda:0', dtype=torch.float64)
tensor([-191.0314, -183.4357, -198.9505, -205.8446, -186.5507],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0241, device='cuda:0', dtype=torch.float64)
tensor([-190.5979, -183.6227, -198.2316, -205.0618, -186.2450],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0126, device='cuda:0', dtype=torch.float64)
tensor([-190.8604, -183.7293, -198.5118, -205.1899, -186.6487],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0123, device='cuda:0', dtype=torch.float64)
tensor([-190.9134, -183.8294, -198.5303, -205.0680, -186.8257],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0191, device='cuda:0', dtype=torch.float64)
tensor([-191.4649, -183.7781, -199.2671, -205.6774, -187.3999],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0125, device='cuda:0', dtype=torch.float64)
tensor([-192.0920, -183.5530, -200.1519, -206.5082, -187.9328],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0111, device='cuda:0', dtype=torch.float64)
tensor([-192.5556, -183.2980, -200.8144, -207.1586, -188.2821],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0163, device='cuda:0', dtype=torch.float64)
tensor([-193.0233, -183.1674, -201.5462, -207.8057, -188.7521],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0105, device='cuda:0', dtype=torch.float64)
tensor([-192.8990, -182.9935, -201.3639, -207.6661, -188.5741],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0121, device='cuda:0', dtype=torch.float64)
tensor([-192.6374, -182.9994, -200.9490, -207.2511, -188.3553],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0123, device='cuda:0', dtype=torch.float64)
tensor([-192.8442, -183.0599, -201.1946, -207.4257, -188.6501],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0118, device='cuda:0', dtype=torch.float64)
tensor([-193.2284, -183.0585, -201.7434, -207.9569, -189.0749],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0115, device='cuda:0', dtype=torch.float64)
tensor([-194.0323, -183.5081, -203.1481, -209.0542, -190.3247],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0103, device='cuda:0', dtype=torch.float64)
tensor([-194.1419, -183.7537, -203.4768, -209.2661, -190.6922],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0127, device='cuda:0', dtype=torch.float64)
tensor([-194.5402, -184.2738, -204.3108, -209.7812, -191.5409],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0124, device='cuda:0', dtype=torch.float64)
tensor([-194.2444, -185.0140, -204.2393, -209.3220, -191.8670],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0095, device='cuda:0', dtype=torch.float64)
tensor([-193.7118, -185.6544, -203.6889, -208.4974, -191.8413],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0074, device='cuda:0', dtype=torch.float64)
tensor([-193.4056, -186.2742, -203.5237, -208.0738, -192.0585],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0105, device='cuda:0', dtype=torch.float64)
tensor([-192.5907, -186.7391, -202.3831, -206.8768, -191.5668],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0106, device='cuda:0', dtype=torch.float64)
tensor([-191.6236, -187.1545, -200.9149, -205.4014, -190.8280],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0102, device='cuda:0', dtype=torch.float64)
tensor([-190.6950, -187.4958, -199.3502, -203.9135, -190.0116],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0107, device='cuda:0', dtype=torch.float64)
tensor([-189.9314, -187.7864, -197.8629, -202.5489, -189.2175],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0202, device='cuda:0', dtype=torch.float64)
tensor([-189.4257, -188.2053, -196.8107, -201.5496, -188.7515],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0110, device='cuda:0', dtype=torch.float64)
tensor([-189.2099, -188.1222, -196.4165, -201.2992, -188.4111],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0165, device='cuda:0', dtype=torch.float64)
tensor([-189.4022, -188.0570, -196.7020, -201.5494, -188.5070],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0145, device='cuda:0', dtype=torch.float64)
tensor([-189.3833, -187.7022, -196.4440, -201.5429, -188.0594],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0158, device='cuda:0', dtype=torch.float64)
tensor([-189.8595, -186.9956, -197.0445, -202.3638, -188.0239],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0150, device='cuda:0', dtype=torch.float64)
tensor([-190.5962, -186.3341, -198.2074, -203.6687, -188.3879],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0152, device='cuda:0', dtype=torch.float64)
tensor([-191.7034, -186.1631, -200.0905, -205.4065, -189.5202],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0154, device='cuda:0', dtype=torch.float64)
tensor([-192.9816, -186.1537, -202.3108, -207.4079, -190.9847],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0127, device='cuda:0', dtype=torch.float64)
tensor([-193.9306, -186.2424, -203.9604, -208.8933, -192.1231],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0111, device='cuda:0', dtype=torch.float64)
tensor([-194.8175, -186.2436, -205.3926, -210.2280, -193.0629],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0111, device='cuda:0', dtype=torch.float64)
tensor([-195.6847, -186.2506, -206.7372, -211.5088, -193.9636],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0122, device='cuda:0', dtype=torch.float64)
tensor([-195.7856, -185.9339, -206.6051, -211.5929, -193.7770],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0105, device='cuda:0', dtype=torch.float64)
tensor([-195.4676, -185.6615, -205.8805, -211.1080, -193.1946],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0106, device='cuda:0', dtype=torch.float64)
tensor([-194.9262, -185.1084, -204.6075, -210.2572, -192.1118],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0116, device='cuda:0', dtype=torch.float64)
tensor([-193.7691, -184.4558, -202.3501, -208.5673, -190.2274],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0165, device='cuda:0', dtype=torch.float64)
tensor([-192.6029, -184.0335, -200.2076, -206.8712, -188.4506],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0131, device='cuda:0', dtype=torch.float64)
tensor([-191.3094, -183.8735, -198.0121, -205.0856, -186.6605],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0130, device='cuda:0', dtype=torch.float64)
tensor([-190.1751, -184.0554, -196.2480, -203.5774, -185.3341],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0135, device='cuda:0', dtype=torch.float64)
tensor([-189.3850, -184.1758, -195.0775, -202.6220, -184.3678],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0120, device='cuda:0', dtype=torch.float64)
tensor([-189.1246, -184.1939, -194.7241, -202.3530, -183.9669],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0146, device='cuda:0', dtype=torch.float64)
tensor([-189.1018, -184.0651, -194.7424, -202.4035, -183.7594],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0126, device='cuda:0', dtype=torch.float64)
tensor([-189.2231, -184.2202, -194.9755, -202.4592, -183.9513],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0148, device='cuda:0', dtype=torch.float64)
tensor([-189.9749, -184.2289, -196.1893, -203.3260, -184.7981],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0189, device='cuda:0', dtype=torch.float64)
tensor([-191.1777, -184.5662, -198.3439, -204.8424, -186.4758],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0147, device='cuda:0', dtype=torch.float64)
tensor([-192.4568, -185.1557, -200.9804, -206.7153, -188.4732],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0149, device='cuda:0', dtype=torch.float64)
tensor([-193.3766, -186.0364, -203.2277, -208.1354, -190.2764],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0152, device='cuda:0', dtype=torch.float64)
tensor([-193.8401, -186.9572, -204.6917, -208.8801, -191.5800],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0136, device='cuda:0', dtype=torch.float64)
tensor([-193.7223, -187.7882, -205.0299, -208.6801, -192.1457],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0116, device='cuda:0', dtype=torch.float64)
tensor([-192.9965, -188.4404, -204.1180, -207.4486, -191.8092],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0116, device='cuda:0', dtype=torch.float64)
tensor([-192.2134, -188.8260, -202.7128, -205.9652, -191.0731],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0126, device='cuda:0', dtype=torch.float64)
tensor([-191.5697, -189.3508, -201.4927, -204.6481, -190.5824],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0105, device='cuda:0', dtype=torch.float64)
tensor([-191.3194, -189.6690, -201.0070, -204.0769, -190.4740],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0130, device='cuda:0', dtype=torch.float64)
tensor([-191.2186, -189.6756, -200.6816, -203.7913, -190.2783],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0183, device='cuda:0', dtype=torch.float64)
tensor([-190.8512, -189.6991, -199.8166, -203.0739, -189.7779],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0108, device='cuda:0', dtype=torch.float64)
tensor([-190.6358, -189.7554, -199.4444, -202.7102, -189.5942],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0146, device='cuda:0', dtype=torch.float64)
tensor([-190.4544, -189.6040, -199.0527, -202.4091, -189.2824],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0158, device='cuda:0', dtype=torch.float64)
tensor([-190.5834, -189.3139, -199.3780, -202.7397, -189.3266],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0107, device='cuda:0', dtype=torch.float64)
tensor([-190.7361, -188.8891, -199.7034, -203.1282, -189.3003],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0119, device='cuda:0', dtype=torch.float64)
tensor([-191.1088, -188.3511, -200.5765, -204.0688, -189.5292],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0200, device='cuda:0', dtype=torch.float64)
tensor([-190.9984, -187.8724, -200.3723, -204.0983, -189.1405],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0131, device='cuda:0', dtype=torch.float64)
tensor([-190.7834, -187.2080, -199.9161, -204.0115, -188.4842],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0106, device='cuda:0', dtype=torch.float64)
tensor([-190.6009, -186.4056, -199.5485, -204.1139, -187.7599],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0108, device='cuda:0', dtype=torch.float64)
tensor([-190.3022, -185.5992, -199.0048, -204.0981, -186.8777],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0140, device='cuda:0', dtype=torch.float64)
tensor([-190.2099, -184.8270, -198.9107, -204.4509, -186.2875],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0134, device='cuda:0', dtype=torch.float64)
tensor([-190.3727, -184.1313, -199.2265, -205.1408, -186.0267],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0120, device='cuda:0', dtype=torch.float64)
tensor([-190.2328, -183.5412, -198.9199, -205.3585, -185.4238],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0146, device='cuda:0', dtype=torch.float64)
tensor([-190.4516, -183.0284, -199.1710, -205.9743, -185.2420],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0116, device='cuda:0', dtype=torch.float64)
tensor([-190.7104, -182.6578, -199.5234, -206.6632, -185.2070],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0115, device='cuda:0', dtype=torch.float64)
tensor([-191.0738, -182.5167, -200.0339, -207.3194, -185.5046],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0133, device='cuda:0', dtype=torch.float64)
tensor([-191.1925, -182.5767, -200.2807, -207.5617, -185.7618],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0119, device='cuda:0', dtype=torch.float64)
tensor([-191.1596, -183.0404, -200.3468, -207.3941, -186.2517],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0171, device='cuda:0', dtype=torch.float64)
tensor([-190.9172, -183.6572, -200.1363, -206.8748, -186.6393],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0111, device='cuda:0', dtype=torch.float64)
tensor([-191.5186, -184.3666, -201.1562, -207.2103, -187.9221],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0151, device='cuda:0', dtype=torch.float64)
tensor([-191.6498, -185.1922, -201.4840, -206.8780, -188.7265],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0140, device='cuda:0', dtype=torch.float64)
tensor([-191.5174, -186.0641, -201.4390, -206.2671, -189.2467],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0123, device='cuda:0', dtype=torch.float64)
tensor([-191.0362, -186.7737, -200.7057, -205.1946, -189.2371],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0104, device='cuda:0', dtype=torch.float64)
tensor([-190.9924, -187.3257, -200.6613, -204.7679, -189.5543],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0111, device='cuda:0', dtype=torch.float64)
tensor([-191.0311, -187.5991, -200.7445, -204.5786, -189.7888],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0117, device='cuda:0', dtype=torch.float64)
tensor([-190.8048, -187.7606, -200.2731, -204.0602, -189.6202],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0109, device='cuda:0', dtype=torch.float64)
tensor([-190.3233, -187.6297, -199.1995, -203.2700, -188.9506],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0119, device='cuda:0', dtype=torch.float64)
tensor([-190.2186, -187.3269, -198.7591, -203.0503, -188.5672],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0143, device='cuda:0', dtype=torch.float64)
tensor([-190.5603, -186.9432, -199.0782, -203.4138, -188.5790],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0110, device='cuda:0', dtype=torch.float64)
tensor([-191.0538, -186.3639, -199.6209, -204.0908, -188.6021],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0101, device='cuda:0', dtype=torch.float64)
tensor([-191.0006, -186.1633, -199.3473, -203.9700, -188.3602],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0120, device='cuda:0', dtype=torch.float64)
tensor([-191.1338, -185.7953, -199.3668, -204.1576, -188.2119],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0157, device='cuda:0', dtype=torch.float64)
tensor([-191.6137, -185.4363, -200.1196, -204.8996, -188.4992],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0134, device='cuda:0', dtype=torch.float64)
tensor([-191.9288, -185.1790, -200.4743, -205.3203, -188.6303],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0113, device='cuda:0', dtype=torch.float64)
tensor([-191.9204, -184.7440, -200.2567, -205.4339, -188.3380],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0114, device='cuda:0', dtype=torch.float64)
tensor([-191.9497, -184.1903, -200.1169, -205.6325, -188.0349],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0118, device='cuda:0', dtype=torch.float64)
tensor([-191.7810, -183.8000, -199.7812, -205.5266, -187.6799],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0134, device='cuda:0', dtype=torch.float64)
tensor([-191.6320, -183.3980, -199.5847, -205.5604, -187.3372],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0131, device='cuda:0', dtype=torch.float64)
tensor([-191.2667, -182.9370, -199.0537, -205.4217, -186.7549],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0111, device='cuda:0', dtype=torch.float64)
tensor([-191.1648, -182.7134, -199.0070, -205.4902, -186.5818],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0122, device='cuda:0', dtype=torch.float64)
tensor([-191.1595, -182.4980, -199.0688, -205.7240, -186.4889],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0142, device='cuda:0', dtype=torch.float64)
tensor([-191.6424, -182.6008, -199.9417, -206.4018, -187.1122],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0134, device='cuda:0', dtype=torch.float64)
tensor([-192.3183, -182.8986, -201.2025, -207.3028, -188.0574],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0103, device='cuda:0', dtype=torch.float64)
tensor([-192.4878, -183.2858, -201.7758, -207.5640, -188.5979],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0261, device='cuda:0', dtype=torch.float64)
tensor([-193.0151, -183.4994, -202.7328, -208.2480, -189.3258],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0114, device='cuda:0', dtype=torch.float64)
tensor([-192.7655, -183.4669, -202.4721, -207.9889, -189.1904],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0127, device='cuda:0', dtype=torch.float64)
tensor([-192.3685, -183.4229, -201.9734, -207.5016, -188.8782],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0155, device='cuda:0', dtype=torch.float64)
tensor([-192.3677, -183.5656, -202.1637, -207.5234, -189.0360],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0181, device='cuda:0', dtype=torch.float64)
tensor([-192.4893, -183.7744, -202.4987, -207.6327, -189.3145],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0109, device='cuda:0', dtype=torch.float64)
tensor([-191.9077, -183.8825, -201.7437, -206.7455, -188.8426],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0118, device='cuda:0', dtype=torch.float64)
tensor([-191.1427, -183.8192, -200.5807, -205.6126, -188.0194],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0125, device='cuda:0', dtype=torch.float64)
tensor([-190.5406, -183.9331, -199.6023, -204.5724, -187.4105],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0102, device='cuda:0', dtype=torch.float64)
tensor([-190.5711, -184.2215, -199.6304, -204.3054, -187.5308],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0165, device='cuda:0', dtype=torch.float64)
tensor([-190.6395, -184.5691, -199.7893, -204.1687, -187.7755],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0117, device='cuda:0', dtype=torch.float64)
tensor([-190.6278, -184.9177, -199.8614, -203.9794, -187.9616],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0139, device='cuda:0', dtype=torch.float64)
tensor([-190.1047, -185.3568, -199.0738, -203.0706, -187.6825],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0123, device='cuda:0', dtype=torch.float64)
tensor([-189.6575, -186.0835, -198.4987, -202.2421, -187.6981],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0121, device='cuda:0', dtype=torch.float64)
tensor([-189.3262, -186.5388, -198.0049, -201.6190, -187.6162],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0124, device='cuda:0', dtype=torch.float64)
tensor([-189.4192, -186.8164, -198.1556, -201.6226, -187.8102],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0136, device='cuda:0', dtype=torch.float64)
tensor([-190.0316, -186.9062, -199.1960, -202.4376, -188.4125],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0115, device='cuda:0', dtype=torch.float64)
tensor([-191.1468, -186.8493, -201.1712, -204.1351, -189.4989],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0160, device='cuda:0', dtype=torch.float64)
tensor([-192.2486, -186.7492, -203.0504, -205.8050, -190.5479],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0089, device='cuda:0', dtype=torch.float64)
tensor([-193.0052, -186.5535, -204.2068, -206.9267, -191.1333],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0122, device='cuda:0', dtype=torch.float64)
tensor([-192.8955, -186.0633, -203.6787, -206.7209, -190.5422],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0158, device='cuda:0', dtype=torch.float64)
tensor([-192.7993, -185.6194, -203.1652, -206.4750, -190.0235],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0136, device='cuda:0', dtype=torch.float64)
tensor([-193.0710, -185.3226, -203.3122, -206.7489, -189.9844],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0123, device='cuda:0', dtype=torch.float64)
tensor([-193.3189, -184.7231, -203.3442, -207.1249, -189.7212],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0146, device='cuda:0', dtype=torch.float64)
tensor([-193.7678, -184.2241, -203.7596, -207.8386, -189.7743],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0133, device='cuda:0', dtype=torch.float64)
tensor([-193.8025, -183.3889, -203.2962, -207.8912, -189.0778],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0129, device='cuda:0', dtype=torch.float64)
tensor([-193.3447, -182.5727, -202.0958, -207.2414, -187.9084],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0133, device='cuda:0', dtype=torch.float64)
tensor([-192.8393, -181.9541, -200.9581, -206.5403, -186.8585],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0123, device='cuda:0', dtype=torch.float64)
tensor([-192.3568, -181.2943, -199.8855, -205.9380, -185.8074],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0149, device='cuda:0', dtype=torch.float64)
tensor([-191.4415, -180.8530, -198.2648, -204.7656, -184.4760],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0148, device='cuda:0', dtype=torch.float64)
tensor([-190.1319, -180.5997, -196.1712, -203.1226, -182.8453],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0135, device='cuda:0', dtype=torch.float64)
tensor([-189.5807, -180.4390, -195.2182, -202.4174, -182.0621],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0130, device='cuda:0', dtype=torch.float64)
tensor([-189.5215, -180.2790, -195.0175, -202.4052, -181.7963],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0172, device='cuda:0', dtype=torch.float64)
tensor([-189.5932, -180.0773, -195.0418, -202.6314, -181.6601],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0122, device='cuda:0', dtype=torch.float64)
tensor([-189.6912, -179.9229, -195.1572, -202.9109, -181.6003],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0160, device='cuda:0', dtype=torch.float64)
tensor([-189.9579, -179.9268, -195.5574, -203.3317, -181.8689],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0190, device='cuda:0', dtype=torch.float64)
tensor([-190.5689, -179.9592, -196.4331, -204.1386, -182.4675],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0163, device='cuda:0', dtype=torch.float64)
tensor([-191.2107, -180.0048, -197.3924, -204.9410, -183.1240],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0135, device='cuda:0', dtype=torch.float64)
tensor([-191.8942, -180.5051, -198.6287, -205.6866, -184.2638],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0144, device='cuda:0', dtype=torch.float64)
tensor([-192.0156, -181.0276, -199.1120, -205.7677, -184.8581],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0115, device='cuda:0', dtype=torch.float64)
tensor([-192.4952, -181.5904, -200.2276, -206.3968, -185.8609],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0149, device='cuda:0', dtype=torch.float64)
tensor([-193.0365, -182.1639, -201.4736, -207.1958, -186.9346],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0149, device='cuda:0', dtype=torch.float64)
tensor([-192.9366, -182.4164, -201.5353, -207.0573, -187.0629],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0113, device='cuda:0', dtype=torch.float64)
tensor([-192.9559, -182.5270, -201.8189, -207.2450, -187.2382],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0103, device='cuda:0', dtype=torch.float64)
tensor([-192.9840, -182.5867, -201.9829, -207.3457, -187.3386],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0108, device='cuda:0', dtype=torch.float64)
tensor([-192.7223, -182.5004, -201.5897, -207.0248, -187.0070],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0117, device='cuda:0', dtype=torch.float64)
tensor([-192.0046, -182.5300, -200.5484, -206.0132, -186.3273],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0120, device='cuda:0', dtype=torch.float64)
tensor([-191.5919, -182.6287, -199.9921, -205.3990, -186.0161],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0111, device='cuda:0', dtype=torch.float64)
tensor([-191.1583, -182.6438, -199.2903, -204.7534, -185.5787],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0115, device='cuda:0', dtype=torch.float64)
tensor([-190.8509, -182.5807, -198.7946, -204.3414, -185.2588],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0117, device='cuda:0', dtype=torch.float64)
tensor([-190.2861, -182.5967, -197.9644, -203.5955, -184.7745],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0117, device='cuda:0', dtype=torch.float64)
tensor([-189.7889, -182.5430, -197.2136, -202.9724, -184.2869],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0101, device='cuda:0', dtype=torch.float64)
tensor([-189.3102, -182.4465, -196.6029, -202.5084, -183.8034],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0113, device='cuda:0', dtype=torch.float64)
tensor([-189.2511, -182.2936, -196.6242, -202.5683, -183.7066],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0126, device='cuda:0', dtype=torch.float64)
tensor([-189.3794, -182.2199, -196.9775, -202.8689, -183.8886],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0117, device='cuda:0', dtype=torch.float64)
tensor([-189.9869, -182.2190, -198.1447, -203.7939, -184.6482],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0105, device='cuda:0', dtype=torch.float64)
tensor([-190.9487, -182.2991, -199.9150, -205.2316, -185.8071],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0145, device='cuda:0', dtype=torch.float64)
tensor([-191.5240, -182.3114, -201.1100, -206.2427, -186.5060],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0139, device='cuda:0', dtype=torch.float64)
tensor([-191.5250, -182.3233, -201.3798, -206.4943, -186.6340],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0168, device='cuda:0', dtype=torch.float64)
tensor([-190.9949, -182.3170, -200.9303, -206.1306, -186.2862],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0123, device='cuda:0', dtype=torch.float64)
tensor([-189.4497, -182.1847, -198.8502, -204.3754, -184.8203],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0126, device='cuda:0', dtype=torch.float64)
tensor([-187.8633, -182.2702, -196.7211, -202.5021, -183.3679],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0772, device='cuda:0', dtype=torch.float64)
tensor([-186.4333, -182.4789, -194.8630, -200.8338, -182.0841],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0123, device='cuda:0', dtype=torch.float64)
tensor([-185.7530, -182.6723, -194.1641, -200.1575, -181.6292],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0170, device='cuda:0', dtype=torch.float64)
tensor([-185.8294, -182.7138, -194.5974, -200.5621, -182.0006],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0121, device='cuda:0', dtype=torch.float64)
tensor([-185.9803, -182.7471, -195.1859, -201.1230, -182.4218],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0152, device='cuda:0', dtype=torch.float64)
tensor([-186.1306, -182.6571, -195.7711, -201.7324, -182.7344],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0122, device='cuda:0', dtype=torch.float64)
tensor([-187.1578, -182.5299, -197.5172, -203.2785, -183.8969],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0204, device='cuda:0', dtype=torch.float64)
tensor([-188.2803, -182.6768, -199.4263, -204.8131, -185.2756],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0205, device='cuda:0', dtype=torch.float64)
tensor([-189.6318, -182.9369, -201.6563, -206.6804, -186.8225],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0127, device='cuda:0', dtype=torch.float64)
tensor([-190.5661, -183.4127, -203.3261, -207.9511, -188.0992],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0123, device='cuda:0', dtype=torch.float64)
tensor([-190.2602, -184.0639, -203.3931, -207.6203, -188.4555],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0122, device='cuda:0', dtype=torch.float64)
tensor([-189.8083, -184.7584, -203.2111, -207.0436, -188.6702],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0135, device='cuda:0', dtype=torch.float64)
tensor([-188.6292, -185.4024, -201.9008, -205.5522, -188.1595],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0144, device='cuda:0', dtype=torch.float64)
tensor([-187.9636, -185.8633, -201.2476, -204.7925, -187.9720],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0122, device='cuda:0', dtype=torch.float64)
tensor([-187.7395, -186.0447, -201.0775, -204.5811, -187.9437],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0124, device='cuda:0', dtype=torch.float64)
tensor([-187.7118, -186.2027, -201.2385, -204.6917, -188.1212],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0183, device='cuda:0', dtype=torch.float64)
tensor([-187.6698, -186.2277, -201.2468, -204.7485, -188.1173],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0142, device='cuda:0', dtype=torch.float64)
tensor([-187.8000, -186.1632, -201.4252, -204.9567, -188.1798],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0110, device='cuda:0', dtype=torch.float64)
tensor([-187.5764, -185.9753, -200.9951, -204.7297, -187.7970],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0242, device='cuda:0', dtype=torch.float64)
tensor([-187.2119, -185.7751, -200.3237, -204.2898, -187.2514],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0120, device='cuda:0', dtype=torch.float64)
tensor([-186.6369, -185.4674, -199.2661, -203.6013, -186.4107],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0153, device='cuda:0', dtype=torch.float64)
tensor([-186.2066, -185.2051, -198.4468, -203.1607, -185.6849],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0102, device='cuda:0', dtype=torch.float64)
tensor([-186.0727, -185.1905, -198.2052, -203.0303, -185.4896],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0123, device='cuda:0', dtype=torch.float64)
tensor([-186.4731, -185.2177, -198.7734, -203.5139, -185.8392],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0116, device='cuda:0', dtype=torch.float64)
tensor([-186.8996, -185.1812, -199.3751, -204.0840, -186.1563],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0101, device='cuda:0', dtype=torch.float64)
tensor([-187.2963, -185.1742, -199.9458, -204.5672, -186.5115],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0120, device='cuda:0', dtype=torch.float64)
tensor([-187.5159, -185.0444, -200.2445, -204.9061, -186.5927],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0216, device='cuda:0', dtype=torch.float64)
tensor([-187.6005, -184.8581, -200.2594, -205.0005, -186.4832],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0090, device='cuda:0', dtype=torch.float64)
tensor([-187.8734, -184.5697, -200.4795, -205.3158, -186.4471],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0133, device='cuda:0', dtype=torch.float64)
tensor([-188.3681, -184.0782, -200.9649, -205.9559, -186.4375],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0113, device='cuda:0', dtype=torch.float64)
tensor([-188.4854, -183.6009, -200.9482, -206.1670, -186.1017],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0127, device='cuda:0', dtype=torch.float64)
tensor([-188.8398, -183.1291, -201.2342, -206.5967, -186.0061],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0136, device='cuda:0', dtype=torch.float64)
tensor([-188.6826, -182.7713, -200.8191, -206.3830, -185.5055],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0111, device='cuda:0', dtype=torch.float64)
tensor([-188.7257, -182.4742, -200.7578, -206.3666, -185.2536],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0129, device='cuda:0', dtype=torch.float64)
tensor([-189.0513, -182.4162, -201.2071, -206.6352, -185.4906],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0139, device='cuda:0', dtype=torch.float64)
tensor([-189.4485, -182.4194, -201.7786, -206.9795, -185.8643],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0112, device='cuda:0', dtype=torch.float64)
tensor([-189.9921, -182.3611, -202.5705, -207.5495, -186.2999],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0119, device='cuda:0', dtype=torch.float64)
tensor([-190.4793, -182.2468, -203.2153, -207.9856, -186.6101],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0104, device='cuda:0', dtype=torch.float64)
tensor([-190.9948, -182.0398, -203.8941, -208.5495, -186.8723],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0133, device='cuda:0', dtype=torch.float64)
tensor([-190.8218, -181.8190, -203.5457, -208.1772, -186.5165],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0181, device='cuda:0', dtype=torch.float64)
tensor([-190.0324, -181.7073, -202.3577, -207.0177, -185.6942],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0125, device='cuda:0', dtype=torch.float64)
tensor([-189.0896, -181.6469, -200.9764, -205.6915, -184.7522],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0108, device='cuda:0', dtype=torch.float64)
tensor([-188.4657, -181.8049, -200.2123, -204.8521, -184.3420],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0109, device='cuda:0', dtype=torch.float64)
tensor([-187.8490, -181.8188, -199.3423, -204.0290, -183.7838],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0100, device='cuda:0', dtype=torch.float64)
tensor([-187.1252, -181.9673, -198.3331, -203.0652, -183.2397],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0127, device='cuda:0', dtype=torch.float64)
tensor([-186.5325, -182.1205, -197.4643, -202.2589, -182.7811],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0176, device='cuda:0', dtype=torch.float64)
tensor([-186.4422, -182.1312, -197.2122, -202.0622, -182.6023],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0111, device='cuda:0', dtype=torch.float64)
tensor([-186.3274, -182.4566, -197.0111, -201.8244, -182.6504],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0196, device='cuda:0', dtype=torch.float64)
tensor([-186.4306, -182.7906, -197.1318, -201.7591, -182.8881],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0135, device='cuda:0', dtype=torch.float64)
tensor([-186.3723, -183.0017, -197.0672, -201.6182, -182.9120],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0130, device='cuda:0', dtype=torch.float64)
tensor([-186.8190, -182.9721, -197.6808, -202.1111, -183.1902],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0104, device='cuda:0', dtype=torch.float64)
tensor([-187.7640, -182.8708, -199.0616, -203.2283, -183.8657],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0113, device='cuda:0', dtype=torch.float64)
tensor([-188.4490, -182.7569, -200.0433, -204.0800, -184.3353],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0103, device='cuda:0', dtype=torch.float64)
tensor([-189.3285, -182.6101, -201.2878, -205.1825, -184.9543],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0111, device='cuda:0', dtype=torch.float64)
tensor([-189.7987, -182.6212, -201.9899, -205.7149, -185.3517],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0118, device='cuda:0', dtype=torch.float64)
tensor([-189.9995, -182.6631, -202.2854, -205.8974, -185.5325],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0126, device='cuda:0', dtype=torch.float64)
tensor([-189.4119, -182.6685, -201.3239, -205.0760, -184.9719],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0126, device='cuda:0', dtype=torch.float64)
tensor([-188.6254, -182.7557, -200.1415, -204.0282, -184.3656],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0130, device='cuda:0', dtype=torch.float64)
tensor([-188.2456, -182.7287, -199.5065, -203.4538, -184.0494],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0111, device='cuda:0', dtype=torch.float64)
tensor([-187.7675, -182.7473, -198.7955, -202.7852, -183.7257],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0127, device='cuda:0', dtype=torch.float64)
tensor([-187.5638, -182.7578, -198.3825, -202.3183, -183.5832],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0110, device='cuda:0', dtype=torch.float64)
tensor([-187.1831, -182.7050, -197.6815, -201.6586, -183.2271],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0154, device='cuda:0', dtype=torch.float64)
tensor([-186.7123, -182.7436, -197.0001, -200.9972, -182.9235],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0099, device='cuda:0', dtype=torch.float64)
tensor([-186.3650, -182.7932, -196.5423, -200.5338, -182.7419],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0191, device='cuda:0', dtype=torch.float64)
tensor([-186.6628, -182.6637, -197.0112, -200.8818, -182.8860],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0122, device='cuda:0', dtype=torch.float64)
tensor([-187.3515, -182.3422, -198.1407, -201.8779, -183.2511],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0112, device='cuda:0', dtype=torch.float64)
tensor([-188.2317, -182.1166, -199.5415, -203.0584, -183.8687],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0193, device='cuda:0', dtype=torch.float64)
tensor([-189.1565, -181.9356, -200.9587, -204.2488, -184.5618],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0106, device='cuda:0', dtype=torch.float64)
tensor([-189.7359, -181.9175, -201.9024, -205.0121, -185.1008],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0137, device='cuda:0', dtype=torch.float64)
tensor([-190.3395, -181.9432, -202.9575, -205.8948, -185.7435],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0131, device='cuda:0', dtype=torch.float64)
tensor([-190.4000, -181.7167, -203.0778, -206.0550, -185.7325],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0124, device='cuda:0', dtype=torch.float64)
tensor([-190.1356, -181.5179, -202.7412, -205.7813, -185.5009],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0113, device='cuda:0', dtype=torch.float64)
tensor([-189.2395, -181.3970, -201.4428, -204.6178, -184.7740],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0121, device='cuda:0', dtype=torch.float64)
tensor([-188.2131, -181.4267, -200.0455, -203.2842, -184.0709],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0115, device='cuda:0', dtype=torch.float64)
tensor([-187.4942, -181.4530, -199.0806, -202.3811, -183.5849],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0157, device='cuda:0', dtype=torch.float64)
tensor([-187.1231, -181.4578, -198.6262, -201.9395, -183.3517],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0134, device='cuda:0', dtype=torch.float64)
tensor([-186.5416, -181.4823, -197.8350, -201.2030, -182.9546],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0185, device='cuda:0', dtype=torch.float64)
tensor([-185.9887, -181.4834, -197.0610, -200.5214, -182.4879],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0130, device='cuda:0', dtype=torch.float64)
tensor([-185.7919, -181.4704, -196.8553, -200.3630, -182.3304],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0135, device='cuda:0', dtype=torch.float64)
tensor([-186.3851, -181.5328, -197.7683, -201.1231, -182.8797],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0132, device='cuda:0', dtype=torch.float64)
tensor([-187.0991, -181.6090, -198.7865, -201.9324, -183.5329],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0152, device='cuda:0', dtype=torch.float64)
tensor([-188.4702, -181.6157, -200.8043, -203.7395, -184.6665],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0119, device='cuda:0', dtype=torch.float64)
tensor([-189.0002, -181.6558, -201.6989, -204.5836, -185.2053],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0130, device='cuda:0', dtype=torch.float64)
tensor([-189.2534, -181.6421, -202.1127, -204.9836, -185.4482],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0104, device='cuda:0', dtype=torch.float64)
tensor([-189.5051, -181.6143, -202.4495, -205.3739, -185.6220],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0109, device='cuda:0', dtype=torch.float64)
tensor([-189.0351, -181.4523, -201.7006, -204.8094, -185.1003],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0128, device='cuda:0', dtype=torch.float64)
tensor([-188.1511, -181.2744, -200.3730, -203.7696, -184.2339],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0149, device='cuda:0', dtype=torch.float64)
tensor([-187.1783, -181.0446, -198.8847, -202.5973, -183.2839],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0119, device='cuda:0', dtype=torch.float64)
tensor([-186.3736, -180.7583, -197.5506, -201.6398, -182.3581],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0124, device='cuda:0', dtype=torch.float64)
tensor([-185.6949, -180.5306, -196.4730, -200.9063, -181.5911],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0149, device='cuda:0', dtype=torch.float64)
tensor([-186.0675, -180.2169, -196.9376, -201.5105, -181.5390],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0122, device='cuda:0', dtype=torch.float64)
tensor([-186.6757, -179.9018, -197.7115, -202.3029, -181.6848],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0121, device='cuda:0', dtype=torch.float64)
tensor([-187.3163, -179.6122, -198.5111, -203.0677, -181.8808],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0145, device='cuda:0', dtype=torch.float64)
tensor([-187.6310, -179.4216, -198.9381, -203.4989, -181.9317],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0131, device='cuda:0', dtype=torch.float64)
tensor([-188.1544, -179.2433, -199.6836, -204.2715, -182.1917],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0109, device='cuda:0', dtype=torch.float64)
tensor([-188.8282, -179.1744, -200.6426, -205.2383, -182.6845],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0116, device='cuda:0', dtype=torch.float64)
tensor([-188.7158, -179.1361, -200.4934, -205.1615, -182.5239],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0112, device='cuda:0', dtype=torch.float64)
tensor([-188.3646, -178.9470, -199.9285, -204.8190, -182.0599],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0117, device='cuda:0', dtype=torch.float64)
tensor([-187.5104, -178.8930, -198.7199, -203.8786, -181.2828],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0122, device='cuda:0', dtype=torch.float64)
tensor([-187.2905, -178.9893, -198.4600, -203.6499, -181.1539],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0138, device='cuda:0', dtype=torch.float64)
tensor([-186.4809, -179.2460, -197.4614, -202.6627, -180.6775],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0142, device='cuda:0', dtype=torch.float64)
tensor([-185.9214, -179.5087, -196.7474, -201.8901, -180.3630],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0125, device='cuda:0', dtype=torch.float64)
tensor([-186.4052, -179.5870, -197.4972, -202.4103, -180.7554],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0376, device='cuda:0', dtype=torch.float64)
tensor([-187.1897, -179.6677, -198.7293, -203.3106, -181.4328],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0107, device='cuda:0', dtype=torch.float64)
tensor([-188.0665, -179.8701, -200.1481, -204.2898, -182.3095],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0113, device='cuda:0', dtype=torch.float64)
tensor([-188.5500, -180.0027, -201.0425, -204.8427, -182.8483],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0121, device='cuda:0', dtype=torch.float64)
tensor([-188.6231, -179.9407, -201.2192, -204.8708, -182.9154],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0109, device='cuda:0', dtype=torch.float64)
tensor([-188.4021, -179.8542, -200.8332, -204.4795, -182.6655],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0143, device='cuda:0', dtype=torch.float64)
tensor([-188.0218, -179.8444, -200.2122, -203.8748, -182.3554],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0107, device='cuda:0', dtype=torch.float64)
tensor([-187.3750, -179.7536, -199.2029, -203.0126, -181.7864],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0146, device='cuda:0', dtype=torch.float64)
tensor([-187.1857, -179.7949, -199.0460, -202.8584, -181.7327],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0128, device='cuda:0', dtype=torch.float64)
tensor([-186.7950, -179.7535, -198.6422, -202.5539, -181.4540],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0136, device='cuda:0', dtype=torch.float64)
tensor([-186.7303, -179.5451, -198.7832, -202.7928, -181.3393],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0119, device='cuda:0', dtype=torch.float64)
tensor([-186.3170, -179.2316, -198.3544, -202.6679, -180.8411],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0133, device='cuda:0', dtype=torch.float64)
tensor([-186.1584, -178.8930, -198.1980, -202.7639, -180.4797],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0184, device='cuda:0', dtype=torch.float64)
tensor([-186.3357, -178.5580, -198.5470, -203.3203, -180.3735],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0179, device='cuda:0', dtype=torch.float64)
tensor([-187.5654, -178.1208, -200.4534, -205.2172, -181.0355],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0128, device='cuda:0', dtype=torch.float64)
tensor([-188.3699, -177.6741, -201.6692, -206.6404, -181.3031],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0114, device='cuda:0', dtype=torch.float64)
tensor([-189.6964, -177.4869, -203.6806, -208.6327, -182.2184],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0111, device='cuda:0', dtype=torch.float64)
tensor([-189.8817, -177.1957, -204.0387, -209.2565, -182.0559],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0117, device='cuda:0', dtype=torch.float64)
tensor([-189.8447, -177.0806, -204.2215, -209.6167, -181.9027],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0107, device='cuda:0', dtype=torch.float64)
tensor([-189.9694, -177.0063, -204.6198, -210.1306, -181.9239],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0140, device='cuda:0', dtype=torch.float64)
tensor([-190.5974, -177.3263, -205.8040, -211.1840, -182.7206],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0121, device='cuda:0', dtype=torch.float64)
tensor([-190.5420, -177.4888, -205.9580, -211.4015, -182.8225],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0125, device='cuda:0', dtype=torch.float64)
tensor([-190.2105, -177.7265, -205.7485, -211.1609, -182.8290],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0204, device='cuda:0', dtype=torch.float64)
tensor([-190.3125, -177.6969, -205.9097, -211.4418, -182.8648],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0104, device='cuda:0', dtype=torch.float64)
tensor([-189.9146, -177.3991, -205.3068, -211.1589, -182.2458],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0139, device='cuda:0', dtype=torch.float64)
tensor([-189.2010, -177.3990, -204.4036, -210.3792, -181.7030],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0102, device='cuda:0', dtype=torch.float64)
tensor([-188.7371, -177.4180, -203.8349, -209.8669, -181.3932],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0110, device='cuda:0', dtype=torch.float64)
tensor([-188.5243, -177.5262, -203.6207, -209.5583, -181.3662],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0133, device='cuda:0', dtype=torch.float64)
tensor([-187.7754, -177.4530, -202.5678, -208.6595, -180.7014],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0109, device='cuda:0', dtype=torch.float64)
tensor([-186.5150, -177.4992, -200.7949, -207.1634, -179.7109],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0117, device='cuda:0', dtype=torch.float64)
tensor([-185.5021, -177.5911, -199.4189, -205.9946, -178.9792],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0137, device='cuda:0', dtype=torch.float64)
tensor([-184.5917, -178.0270, -198.3541, -204.8678, -178.6825],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0125, device='cuda:0', dtype=torch.float64)
tensor([-184.1776, -178.4549, -197.9811, -204.2983, -178.8214],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0149, device='cuda:0', dtype=torch.float64)
tensor([-184.1701, -178.8534, -198.1305, -204.1383, -179.2249],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0108, device='cuda:0', dtype=torch.float64)
tensor([-184.2132, -179.2227, -198.3650, -204.0241, -179.6401],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0136, device='cuda:0', dtype=torch.float64)
tensor([-185.1250, -179.5089, -199.9598, -204.9866, -180.7182],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0125, device='cuda:0', dtype=torch.float64)
tensor([-186.1978, -179.9433, -201.9614, -206.1975, -182.0743],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0119, device='cuda:0', dtype=torch.float64)
tensor([-187.8651, -180.3394, -204.8911, -208.3042, -183.9011],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0154, device='cuda:0', dtype=torch.float64)
tensor([-188.8746, -180.6743, -206.5983, -209.5313, -185.0126],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0110, device='cuda:0', dtype=torch.float64)
tensor([-189.5545, -180.9716, -207.7039, -210.3172, -185.7617],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0106, device='cuda:0', dtype=torch.float64)
tensor([-189.6284, -181.0546, -207.7720, -210.2502, -185.8376],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0142, device='cuda:0', dtype=torch.float64)
tensor([-188.2804, -180.8698, -205.6614, -208.3776, -184.5547],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0159, device='cuda:0', dtype=torch.float64)
tensor([-186.9357, -180.6443, -203.3970, -206.4983, -183.1821],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0127, device='cuda:0', dtype=torch.float64)
tensor([-186.2005, -180.4749, -202.0738, -205.4708, -182.3724],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0138, device='cuda:0', dtype=torch.float64)
tensor([-185.1196, -180.4382, -200.1577, -203.9248, -181.4560],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0134, device='cuda:0', dtype=torch.float64)
tensor([-184.4388, -180.5708, -199.0042, -202.8903, -181.0734],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0118, device='cuda:0', dtype=torch.float64)
tensor([-183.7345, -180.6793, -197.6776, -201.7613, -180.6865],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0116, device='cuda:0', dtype=torch.float64)
tensor([-183.4556, -180.5685, -197.0396, -201.2670, -180.4920],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0126, device='cuda:0', dtype=torch.float64)
tensor([-183.3390, -180.7405, -196.7276, -200.8343, -180.7286],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0135, device='cuda:0', dtype=torch.float64)
tensor([-183.4993, -180.4627, -196.8541, -200.9591, -180.6999],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2188, device='cuda:0', dtype=torch.float64)
tensor([-183.5826, -180.3233, -197.0878, -201.1739, -180.6323],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0105, device='cuda:0', dtype=torch.float64)
tensor([-183.6679, -180.1206, -197.3513, -201.4825, -180.5038],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0139, device='cuda:0', dtype=torch.float64)
tensor([-183.8516, -180.0622, -197.8407, -201.8808, -180.5122],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0134, device='cuda:0', dtype=torch.float64)
tensor([-184.1642, -180.0390, -198.5568, -202.4204, -180.7367],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0113, device='cuda:0', dtype=torch.float64)
tensor([-184.8616, -179.9451, -199.8983, -203.4645, -181.1920],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0139, device='cuda:0', dtype=torch.float64)
tensor([-185.9443, -179.9398, -201.9122, -205.0446, -182.0776],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0136, device='cuda:0', dtype=torch.float64)
tensor([-186.9172, -179.9034, -203.5110, -206.3165, -182.8601],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0122, device='cuda:0', dtype=torch.float64)
tensor([-187.1142, -179.7269, -203.7423, -206.5521, -182.8931],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0118, device='cuda:0', dtype=torch.float64)
tensor([-186.3630, -179.4746, -202.3918, -205.5028, -182.1023],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0131, device='cuda:0', dtype=torch.float64)
tensor([-185.5193, -179.2113, -200.8723, -204.3960, -181.2497],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0115, device='cuda:0', dtype=torch.float64)
tensor([-184.5488, -178.8844, -199.1686, -203.2200, -180.2245],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0139, device='cuda:0', dtype=torch.float64)
tensor([-183.6012, -178.6068, -197.6440, -202.2279, -179.2855],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0117, device='cuda:0', dtype=torch.float64)
tensor([-183.1301, -178.4481, -197.0262, -201.9425, -178.7772],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0132, device='cuda:0', dtype=torch.float64)
tensor([-182.5050, -178.3880, -196.2371, -201.4686, -178.2837],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0153, device='cuda:0', dtype=torch.float64)
tensor([-182.1997, -178.2337, -195.8071, -201.2696, -178.0075],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0145, device='cuda:0', dtype=torch.float64)
tensor([-182.7828, -178.0098, -196.7178, -202.1802, -178.3423],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0180, device='cuda:0', dtype=torch.float64)
tensor([-183.9813, -178.0461, -198.4973, -203.6088, -179.2991],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0118, device='cuda:0', dtype=torch.float64)
tensor([-185.5301, -177.9974, -200.7692, -205.4139, -180.4013],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0123, device='cuda:0', dtype=torch.float64)
tensor([-186.9707, -177.8354, -202.7758, -207.1637, -181.2847],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0102, device='cuda:0', dtype=torch.float64)
tensor([-187.7537, -177.4717, -203.6096, -208.0906, -181.5118],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0113, device='cuda:0', dtype=torch.float64)
tensor([-189.1007, -177.3450, -205.3193, -209.6786, -182.2757],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0175, device='cuda:0', dtype=torch.float64)
tensor([-189.6420, -177.1206, -205.8161, -210.2813, -182.4117],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0120, device='cuda:0', dtype=torch.float64)
tensor([-189.3899, -176.7616, -205.1782, -209.8995, -181.9537],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0120, device='cuda:0', dtype=torch.float64)
tensor([-188.0202, -176.0713, -202.9615, -208.3387, -180.4843],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0132, device='cuda:0', dtype=torch.float64)
tensor([-186.6936, -175.4204, -200.8669, -206.8905, -179.1082],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0115, device='cuda:0', dtype=torch.float64)
tensor([-185.6455, -174.7056, -199.2023, -205.8331, -177.8556],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0126, device='cuda:0', dtype=torch.float64)
tensor([-184.9138, -174.0963, -198.1284, -205.2048, -176.8135],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0209, device='cuda:0', dtype=torch.float64)
tensor([-184.6790, -173.5986, -197.8488, -205.1133, -176.2263],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0153, device='cuda:0', dtype=torch.float64)
tensor([-184.5796, -173.2563, -197.8352, -205.1740, -175.8376],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0121, device='cuda:0', dtype=torch.float64)
tensor([-185.0858, -173.0772, -198.5675, -205.8043, -175.9911],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0139, device='cuda:0', dtype=torch.float64)
tensor([-185.4432, -172.9465, -199.2102, -206.2643, -176.1362],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0111, device='cuda:0', dtype=torch.float64)
tensor([-185.6601, -172.8449, -199.6786, -206.5545, -176.2908],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0113, device='cuda:0', dtype=torch.float64)
tensor([-186.2585, -173.0275, -200.6202, -207.1763, -176.9141],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0122, device='cuda:0', dtype=torch.float64)
tensor([-187.5253, -173.6281, -202.5050, -208.4008, -178.3616],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0115, device='cuda:0', dtype=torch.float64)
tensor([-188.4266, -174.0448, -203.8848, -209.2666, -179.4505],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0121, device='cuda:0', dtype=torch.float64)
tensor([-188.9939, -174.4048, -204.8707, -209.7881, -180.2631],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0124, device='cuda:0', dtype=torch.float64)
tensor([-189.3606, -174.7462, -205.5975, -210.1385, -180.9008],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0132, device='cuda:0', dtype=torch.float64)
tensor([-189.0160, -174.8146, -205.3276, -209.7281, -180.8015],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0144, device='cuda:0', dtype=torch.float64)
tensor([-187.7903, -174.7206, -203.7862, -208.3088, -180.0363],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0127, device='cuda:0', dtype=torch.float64)
tensor([-186.6667, -174.7720, -202.3213, -206.9220, -179.4692],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0153, device='cuda:0', dtype=torch.float64)
tensor([-185.3549, -174.9642, -200.5179, -205.2072, -179.0370],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0120, device='cuda:0', dtype=torch.float64)
tensor([-184.3424, -175.0572, -199.0173, -203.8888, -178.5760],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0142, device='cuda:0', dtype=torch.float64)
tensor([-183.4839, -175.0631, -197.6137, -202.7733, -178.0651],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0120, device='cuda:0', dtype=torch.float64)
tensor([-183.0151, -175.2341, -196.7606, -202.0627, -177.9708],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0135, device='cuda:0', dtype=torch.float64)
tensor([-182.8167, -175.6027, -196.4949, -201.7306, -178.1463],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0163, device='cuda:0', dtype=torch.float64)
tensor([-182.8188, -175.8301, -196.7468, -201.9056, -178.2174],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0131, device='cuda:0', dtype=torch.float64)
tensor([-183.1739, -176.0641, -197.6565, -202.5827, -178.4981],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0110, device='cuda:0', dtype=torch.float64)
tensor([-183.3255, -176.3525, -198.2429, -203.0335, -178.6919],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0120, device='cuda:0', dtype=torch.float64)
tensor([-183.7840, -176.7476, -199.2749, -203.7881, -179.1883],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0156, device='cuda:0', dtype=torch.float64)
tensor([-184.9909, -177.2801, -201.4940, -205.3864, -180.2838],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0127, device='cuda:0', dtype=torch.float64)
tensor([-186.3549, -177.8759, -203.9075, -207.1976, -181.5836],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0656, device='cuda:0', dtype=torch.float64)
tensor([-187.4718, -178.3036, -205.8263, -208.7270, -182.6311],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0156, device='cuda:0', dtype=torch.float64)
tensor([-188.0027, -178.5666, -206.8100, -209.5271, -183.1680],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0123, device='cuda:0', dtype=torch.float64)
tensor([-187.6773, -178.6209, -206.5174, -209.3312, -182.9542],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0136, device='cuda:0', dtype=torch.float64)
tensor([-186.7442, -178.1501, -205.1296, -208.3965, -181.9056],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0107, device='cuda:0', dtype=torch.float64)
tensor([-186.3173, -177.7072, -204.3782, -208.0611, -181.2002],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0135, device='cuda:0', dtype=torch.float64)
tensor([-185.1118, -177.3824, -202.5781, -206.7598, -180.1000],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0100, device='cuda:0', dtype=torch.float64)
tensor([-184.4109, -177.3522, -201.6131, -205.9938, -179.6105],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0105, device='cuda:0', dtype=torch.float64)
tensor([-183.9708, -177.3608, -201.0183, -205.5169, -179.2831],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0140, device='cuda:0', dtype=torch.float64)
tensor([-183.8755, -177.3427, -200.9088, -205.3956, -179.1616],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0153, device='cuda:0', dtype=torch.float64)
tensor([-184.0922, -177.3554, -201.2250, -205.5995, -179.3110],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0121, device='cuda:0', dtype=torch.float64)
tensor([-184.1911, -177.1800, -201.2618, -205.6521, -179.1991],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0116, device='cuda:0', dtype=torch.float64)
tensor([-184.6161, -177.0600, -201.7630, -206.0098, -179.3604],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0133, device='cuda:0', dtype=torch.float64)
tensor([-185.3809, -176.9257, -202.7529, -206.7416, -179.7555],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0115, device='cuda:0', dtype=torch.float64)
tensor([-186.3851, -176.8484, -204.0713, -207.7450, -180.3407],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0123, device='cuda:0', dtype=torch.float64)
tensor([-186.6790, -176.8002, -204.4111, -207.9308, -180.5294],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0151, device='cuda:0', dtype=torch.float64)
tensor([-186.4334, -176.6255, -204.0122, -207.6306, -180.2394],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0127, device='cuda:0', dtype=torch.float64)
tensor([-186.1824, -176.2140, -203.4909, -207.3729, -179.7199],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0113, device='cuda:0', dtype=torch.float64)
tensor([-185.0775, -175.7776, -201.7218, -206.1357, -178.6726],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0132, device='cuda:0', dtype=torch.float64)
tensor([-184.0385, -175.6346, -200.1478, -204.8999, -177.9669],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0130, device='cuda:0', dtype=torch.float64)
tensor([-183.0244, -175.7461, -198.7248, -203.7363, -177.5401],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0127, device='cuda:0', dtype=torch.float64)
tensor([-182.5160, -175.7318, -198.0637, -203.2284, -177.2195],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0127, device='cuda:0', dtype=torch.float64)
tensor([-182.2233, -175.6102, -197.7067, -202.9945, -176.8818],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0123, device='cuda:0', dtype=torch.float64)
tensor([-182.3444, -175.5284, -197.9410, -203.1476, -176.9345],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0124, device='cuda:0', dtype=torch.float64)
tensor([-182.8592, -175.4321, -198.6554, -203.6738, -177.1441],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0118, device='cuda:0', dtype=torch.float64)
tensor([-183.8466, -175.3968, -200.0332, -204.7181, -177.7694],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0140, device='cuda:0', dtype=torch.float64)
tensor([-184.3044, -175.5140, -200.7209, -205.1302, -178.3034],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0145, device='cuda:0', dtype=torch.float64)
tensor([-184.3880, -175.4669, -200.8419, -205.1717, -178.4032],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0131, device='cuda:0', dtype=torch.float64)
tensor([-184.8128, -175.3612, -201.5807, -205.7913, -178.4835],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0138, device='cuda:0', dtype=torch.float64)
tensor([-185.6888, -175.4492, -202.9790, -206.9102, -178.9587],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0110, device='cuda:0', dtype=torch.float64)
tensor([-186.6676, -175.5792, -204.5155, -208.1698, -179.4942],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0121, device='cuda:0', dtype=torch.float64)
tensor([-187.4398, -175.7883, -205.7505, -209.1646, -180.0186],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0145, device='cuda:0', dtype=torch.float64)
tensor([-187.7489, -176.1027, -206.3976, -209.6215, -180.3467],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0132, device='cuda:0', dtype=torch.float64)
tensor([-188.0040, -176.3602, -206.8566, -209.9345, -180.6224],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0103, device='cuda:0', dtype=torch.float64)
tensor([-187.7120, -176.5180, -206.5963, -209.6066, -180.5344],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0145, device='cuda:0', dtype=torch.float64)
tensor([-187.4924, -176.6212, -206.3811, -209.3313, -180.5024],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0114, device='cuda:0', dtype=torch.float64)
tensor([-186.1169, -176.4879, -204.5541, -207.6866, -179.6279],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0149, device='cuda:0', dtype=torch.float64)
tensor([-184.3826, -176.3745, -202.1730, -205.6530, -178.4947],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0146, device='cuda:0', dtype=torch.float64)
tensor([-182.9600, -176.5705, -200.1907, -203.8711, -177.9232],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0131, device='cuda:0', dtype=torch.float64)
tensor([-182.3639, -176.8241, -199.4374, -203.0392, -177.9689],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0124, device='cuda:0', dtype=torch.float64)
tensor([-181.9795, -176.8422, -198.9317, -202.5232, -177.8964],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0109, device='cuda:0', dtype=torch.float64)
tensor([-181.7674, -176.5598, -198.6273, -202.3359, -177.5298],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0105, device='cuda:0', dtype=torch.float64)
tensor([-181.6131, -176.3637, -198.5303, -202.2975, -177.1508],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0127, device='cuda:0', dtype=torch.float64)
tensor([-181.9298, -176.2417, -199.0710, -202.6472, -177.2033],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0110, device='cuda:0', dtype=torch.float64)
tensor([-182.2289, -176.2899, -199.5497, -202.8807, -177.4223],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0250, device='cuda:0', dtype=torch.float64)
tensor([-183.1598, -176.3860, -201.1097, -204.0005, -177.9997],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0127, device='cuda:0', dtype=torch.float64)
tensor([-184.4511, -176.3767, -203.1235, -205.6057, -178.6431],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0149, device='cuda:0', dtype=torch.float64)
tensor([-185.5823, -176.0974, -204.7427, -207.0698, -178.9931],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0116, device='cuda:0', dtype=torch.float64)
tensor([-187.0099, -175.8429, -206.6377, -208.8554, -179.4902],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0162, device='cuda:0', dtype=torch.float64)
tensor([-188.1165, -175.3422, -207.9205, -210.2929, -179.5646],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0152, device='cuda:0', dtype=torch.float64)
tensor([-188.7408, -174.9129, -208.6246, -211.1678, -179.4617],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0160, device='cuda:0', dtype=torch.float64)
tensor([-189.0649, -174.2831, -208.8942, -211.7797, -178.9784],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0136, device='cuda:0', dtype=torch.float64)
tensor([-188.4533, -173.5221, -208.0861, -211.3652, -177.9021],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0116, device='cuda:0', dtype=torch.float64)
tensor([-187.4296, -172.7529, -206.7762, -210.4717, -176.6378],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0123, device='cuda:0', dtype=torch.float64)
tensor([-186.5646, -172.4177, -205.7059, -209.5265, -176.0207],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0091, device='cuda:0', dtype=torch.float64)
tensor([-185.5840, -172.2269, -204.5344, -208.4368, -175.4278],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0295, device='cuda:0', dtype=torch.float64)
tensor([-184.5871, -172.2123, -203.3369, -207.3219, -174.9716],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0114, device='cuda:0', dtype=torch.float64)
tensor([-183.8838, -172.1601, -202.4089, -206.4741, -174.6517],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0140, device='cuda:0', dtype=torch.float64)
tensor([-183.2112, -172.2837, -201.5443, -205.6488, -174.4765],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0143, device='cuda:0', dtype=torch.float64)
tensor([-182.5325, -172.5268, -200.6195, -204.7072, -174.4401],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0129, device='cuda:0', dtype=torch.float64)
tensor([-181.9018, -172.7340, -199.6951, -203.7888, -174.4253],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0128, device='cuda:0', dtype=torch.float64)
tensor([-181.9968, -172.9120, -199.7966, -203.7752, -174.8063],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0140, device='cuda:0', dtype=torch.float64)
tensor([-182.6824, -173.0685, -200.7275, -204.5095, -175.4638],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0113, device='cuda:0', dtype=torch.float64)
tensor([-183.2404, -173.1778, -201.4267, -204.9599, -176.0173],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0124, device='cuda:0', dtype=torch.float64)
tensor([-184.2284, -173.2842, -202.8208, -206.0125, -176.7202],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0118, device='cuda:0', dtype=torch.float64)
tensor([-185.2791, -173.4449, -204.3419, -207.1828, -177.4189],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0095, device='cuda:0', dtype=torch.float64)
tensor([-186.1828, -173.8084, -205.6844, -208.0837, -178.2838],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0126, device='cuda:0', dtype=torch.float64)
tensor([-186.7158, -174.0150, -206.4434, -208.5694, -178.8173],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0142, device='cuda:0', dtype=torch.float64)
tensor([-187.2250, -174.3650, -207.3731, -209.1450, -179.4132],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0148, device='cuda:0', dtype=torch.float64)
tensor([-187.4431, -174.4803, -207.7704, -209.4036, -179.6410],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0124, device='cuda:0', dtype=torch.float64)
tensor([-187.9003, -174.6284, -208.4469, -209.8836, -180.0705],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0137, device='cuda:0', dtype=torch.float64)
tensor([-187.5053, -174.5528, -207.9171, -209.3794, -179.8486],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0088, device='cuda:0', dtype=torch.float64)
tensor([-187.0403, -174.3445, -207.3281, -208.8818, -179.4532],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0167, device='cuda:0', dtype=torch.float64)
tensor([-186.3832, -174.1490, -206.4752, -208.1720, -178.9378],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0120, device='cuda:0', dtype=torch.float64)
tensor([-186.1558, -173.8881, -206.1616, -208.0135, -178.5721],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0130, device='cuda:0', dtype=torch.float64)
tensor([-184.8927, -173.6023, -204.4692, -206.6668, -177.6378],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0136, device='cuda:0', dtype=torch.float64)
tensor([-183.7298, -173.3010, -202.8098, -205.3341, -176.8187],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0113, device='cuda:0', dtype=torch.float64)
tensor([-182.0956, -173.1044, -200.5156, -203.5201, -175.7781],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0126, device='cuda:0', dtype=torch.float64)
tensor([-180.5487, -173.2688, -198.3038, -201.6344, -175.0721],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0247, device='cuda:0', dtype=torch.float64)
tensor([-179.8548, -173.3220, -197.3597, -200.8623, -174.4769],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0135, device='cuda:0', dtype=torch.float64)
tensor([-179.5085, -173.0772, -196.8708, -200.4713, -173.8305],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0109, device='cuda:0', dtype=torch.float64)
tensor([-179.6389, -172.5781, -197.3002, -200.8954, -173.2238],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0129, device='cuda:0', dtype=torch.float64)
tensor([-180.0449, -172.1680, -198.1996, -201.7478, -172.9567],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0120, device='cuda:0', dtype=torch.float64)
tensor([-180.5559, -172.0155, -199.1554, -202.6146, -173.0764],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0116, device='cuda:0', dtype=torch.float64)
tensor([-181.2197, -171.8983, -200.3976, -203.7197, -173.2371],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0551, device='cuda:0', dtype=torch.float64)
tensor([-182.1806, -171.8499, -201.7863, -204.9842, -173.6434],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0117, device='cuda:0', dtype=torch.float64)
tensor([-182.6719, -171.9133, -202.4560, -205.5918, -173.9301],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2540, device='cuda:0', dtype=torch.float64)
tensor([-183.7311, -171.7282, -203.7623, -206.7588, -174.4631],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0113, device='cuda:0', dtype=torch.float64)
tensor([-184.5332, -171.7252, -204.7572, -207.5918, -175.0267],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0114, device='cuda:0', dtype=torch.float64)
tensor([-185.2490, -171.6728, -205.6518, -208.3381, -175.4298],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0118, device='cuda:0', dtype=torch.float64)
tensor([-185.9865, -171.7348, -206.6990, -209.2085, -175.9199],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0143, device='cuda:0', dtype=torch.float64)
tensor([-187.0045, -171.8919, -207.9940, -210.2591, -176.7011],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0110, device='cuda:0', dtype=torch.float64)
tensor([-187.1638, -171.9143, -208.1543, -210.3748, -176.9011],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0137, device='cuda:0', dtype=torch.float64)
tensor([-185.8436, -171.4494, -206.3149, -208.9324, -175.8561],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0115, device='cuda:0', dtype=torch.float64)
tensor([-184.7288, -171.2505, -204.8505, -207.6226, -175.2158],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0131, device='cuda:0', dtype=torch.float64)
tensor([-184.0306, -171.1868, -203.9568, -206.8008, -174.9278],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0130, device='cuda:0', dtype=torch.float64)
tensor([-182.8775, -171.0350, -202.3853, -205.6325, -174.2244],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0107, device='cuda:0', dtype=torch.float64)
tensor([-182.4233, -170.8783, -201.7456, -205.2253, -173.9155],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0105, device='cuda:0', dtype=torch.float64)
tensor([-182.1262, -170.7675, -201.4305, -205.0895, -173.6759],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0126, device='cuda:0', dtype=torch.float64)
tensor([-181.7440, -170.7277, -201.0638, -204.8921, -173.4244],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0112, device='cuda:0', dtype=torch.float64)
tensor([-181.8856, -170.8948, -201.5930, -205.1732, -173.6911],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0106, device='cuda:0', dtype=torch.float64)
tensor([-182.1158, -171.0397, -202.1618, -205.5590, -173.9735],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0122, device='cuda:0', dtype=torch.float64)
tensor([-182.4645, -171.1821, -202.9090, -206.0534, -174.2706],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0118, device='cuda:0', dtype=torch.float64)
tensor([-182.8030, -171.4369, -203.5962, -206.4268, -174.7492],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0126, device='cuda:0', dtype=torch.float64)
tensor([-183.0286, -171.7403, -204.0888, -206.6852, -175.2281],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0135, device='cuda:0', dtype=torch.float64)
tensor([-183.8922, -172.0967, -205.5106, -207.7388, -176.0783],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0127, device='cuda:0', dtype=torch.float64)
tensor([-184.3195, -172.3646, -206.3065, -208.2984, -176.5903],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0130, device='cuda:0', dtype=torch.float64)
tensor([-184.6411, -172.7325, -206.9452, -208.6452, -177.1276],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0130, device='cuda:0', dtype=torch.float64)
tensor([-184.3716, -172.7033, -206.6313, -208.3955, -176.9814],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0106, device='cuda:0', dtype=torch.float64)
tensor([-183.5191, -172.6150, -205.5643, -207.5360, -176.4792],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0151, device='cuda:0', dtype=torch.float64)
tensor([-182.5593, -172.4580, -204.2927, -206.5171, -175.8320],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0132, device='cuda:0', dtype=torch.float64)
tensor([-181.2976, -172.4120, -202.6810, -205.1461, -175.1114],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0123, device='cuda:0', dtype=torch.float64)
tensor([-180.4630, -172.3525, -201.6293, -204.2808, -174.5821],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0148, device='cuda:0', dtype=torch.float64)
tensor([-179.9131, -172.4524, -201.0135, -203.7178, -174.3454],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0123, device='cuda:0', dtype=torch.float64)
tensor([-179.5980, -172.4920, -200.6972, -203.4092, -174.1555],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0126, device='cuda:0', dtype=torch.float64)
tensor([-179.8656, -172.6318, -201.2352, -203.7808, -174.4097],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0131, device='cuda:0', dtype=torch.float64)
tensor([-180.9164, -172.7380, -202.7815, -205.0847, -175.1598],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0134, device='cuda:0', dtype=torch.float64)
tensor([-182.7197, -172.8812, -205.2501, -207.2129, -176.2317],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0127, device='cuda:0', dtype=torch.float64)
tensor([-184.9650, -173.1722, -208.1322, -209.7116, -177.5300],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0131, device='cuda:0', dtype=torch.float64)
tensor([-186.4548, -173.3708, -209.8500, -211.2795, -178.3701],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0131, device='cuda:0', dtype=torch.float64)
tensor([-187.7883, -173.3880, -211.2304, -212.6533, -178.9620],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0140, device='cuda:0', dtype=torch.float64)
tensor([-187.9887, -172.8976, -211.1428, -212.9142, -178.4802],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0110, device='cuda:0', dtype=torch.float64)
tensor([-187.3399, -172.1067, -210.0785, -212.3394, -177.2808],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0123, device='cuda:0', dtype=torch.float64)
tensor([-186.5536, -171.5905, -209.0328, -211.7161, -176.1701],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0122, device='cuda:0', dtype=torch.float64)
tensor([-184.9166, -171.1455, -207.0182, -210.0723, -174.8128],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0121, device='cuda:0', dtype=torch.float64)
tensor([-182.3990, -170.8748, -203.7811, -207.2946, -173.2486],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0124, device='cuda:0', dtype=torch.float64)
tensor([-180.4217, -170.9242, -201.1487, -204.9009, -172.2619],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0104, device='cuda:0', dtype=torch.float64)
tensor([-179.2216, -170.9889, -199.4794, -203.3652, -171.8148],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0169, device='cuda:0', dtype=torch.float64)
tensor([-178.5577, -171.0460, -198.3423, -202.3962, -171.7629],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0116, device='cuda:0', dtype=torch.float64)
tensor([-178.3925, -171.1065, -198.0391, -202.1979, -172.0039],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0131, device='cuda:0', dtype=torch.float64)
tensor([-178.8180, -171.0646, -198.6972, -202.8816, -172.3994],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0124, device='cuda:0', dtype=torch.float64)
tensor([-179.6768, -171.0177, -200.1754, -204.1717, -172.8728],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0144, device='cuda:0', dtype=torch.float64)
tensor([-180.5977, -171.2319, -201.7013, -205.3037, -173.7068],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0130, device='cuda:0', dtype=torch.float64)
tensor([-181.9919, -171.4616, -203.7869, -206.9387, -174.5665],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0173, device='cuda:0', dtype=torch.float64)
tensor([-183.7706, -171.7764, -206.2938, -208.9205, -175.5519],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0144, device='cuda:0', dtype=torch.float64)
tensor([-185.6282, -172.2963, -208.8631, -210.8871, -176.7771],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0125, device='cuda:0', dtype=torch.float64)
tensor([-186.9669, -172.7098, -210.5855, -212.2167, -177.8070],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0108, device='cuda:0', dtype=torch.float64)
tensor([-187.1245, -172.9248, -210.8194, -212.3240, -178.1451],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0135, device='cuda:0', dtype=torch.float64)
tensor([-186.4619, -172.8003, -210.0577, -211.7283, -177.7264],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0133, device='cuda:0', dtype=torch.float64)
tensor([-184.7238, -172.5881, -207.9615, -210.0619, -176.8150],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0150, device='cuda:0', dtype=torch.float64)
tensor([-183.2923, -172.4643, -206.1486, -208.6613, -176.1621],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0132, device='cuda:0', dtype=torch.float64)
tensor([-182.5189, -172.4997, -205.0447, -207.7781, -175.9548],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0153, device='cuda:0', dtype=torch.float64)
tensor([-182.5490, -172.4112, -205.0364, -207.8830, -175.7981],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0137, device='cuda:0', dtype=torch.float64)
tensor([-182.6020, -172.3151, -205.0231, -207.9625, -175.6593],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0136, device='cuda:0', dtype=torch.float64)
tensor([-182.1850, -171.8653, -204.3213, -207.6912, -174.9248],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0115, device='cuda:0', dtype=torch.float64)
tensor([-180.9824, -171.3985, -202.5351, -206.5375, -173.9364],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0112, device='cuda:0', dtype=torch.float64)
tensor([-180.1024, -171.0158, -201.2994, -205.7066, -173.1145],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0126, device='cuda:0', dtype=torch.float64)
tensor([-179.5438, -170.7976, -200.6688, -205.3255, -172.3615],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0158, device='cuda:0', dtype=torch.float64)
tensor([-178.6909, -170.7525, -199.7916, -204.6112, -171.6383],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0130, device='cuda:0', dtype=torch.float64)
tensor([-177.7718, -170.7800, -198.9859, -203.9111, -170.8593],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0120, device='cuda:0', dtype=torch.float64)
tensor([-177.4499, -170.8708, -198.8733, -203.7626, -170.4909],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0130, device='cuda:0', dtype=torch.float64)
tensor([-177.1268, -170.9426, -198.7746, -203.6646, -170.0554],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0130, device='cuda:0', dtype=torch.float64)
tensor([-177.4547, -170.8990, -199.4731, -204.3459, -169.8733],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0124, device='cuda:0', dtype=torch.float64)
tensor([-177.6773, -170.9640, -199.8179, -204.5724, -170.0930],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0156, device='cuda:0', dtype=torch.float64)
tensor([-178.9054, -170.9093, -201.5501, -206.0175, -170.5499],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0148, device='cuda:0', dtype=torch.float64)
tensor([-180.8694, -170.9872, -204.1034, -207.8545, -171.6511],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0100, device='cuda:0', dtype=torch.float64)
tensor([-183.6259, -171.4785, -207.7099, -210.2722, -173.4822],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0159, device='cuda:0', dtype=torch.float64)
tensor([-186.2479, -172.2762, -211.3442, -212.6368, -175.5544],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0150, device='cuda:0', dtype=torch.float64)
tensor([-187.1915, -173.0074, -212.8865, -213.2863, -176.9367],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0119, device='cuda:0', dtype=torch.float64)
tensor([-187.7178, -173.6834, -213.9168, -213.6031, -177.9953],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0093, device='cuda:0', dtype=torch.float64)
tensor([-187.4417, -174.0995, -214.0403, -213.1486, -178.5156],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0120, device='cuda:0', dtype=torch.float64)
tensor([-186.7712, -174.6365, -213.6714, -212.2183, -179.0422],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0102, device='cuda:0', dtype=torch.float64)
tensor([-185.4429, -174.9447, -212.4100, -210.7087, -178.9940],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0138, device='cuda:0', dtype=torch.float64)
tensor([-183.9320, -175.0959, -210.8408, -209.1703, -178.6886],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0140, device='cuda:0', dtype=torch.float64)
tensor([-181.8432, -174.9724, -208.0097, -206.8576, -177.9704],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0104, device='cuda:0', dtype=torch.float64)
tensor([-179.7199, -175.1165, -204.8143, -204.3826, -177.3722],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0131, device='cuda:0', dtype=torch.float64)
tensor([-178.1939, -175.1737, -202.4869, -202.6865, -176.9594],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0267, device='cuda:0', dtype=torch.float64)
tensor([-176.6277, -175.4629, -200.0863, -200.9763, -176.5609],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0148, device='cuda:0', dtype=torch.float64)
tensor([-175.6015, -175.8974, -198.3617, -199.6709, -176.4166],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0132, device='cuda:0', dtype=torch.float64)
tensor([-175.3447, -175.6247, -198.1382, -199.5309, -175.9561],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0112, device='cuda:0', dtype=torch.float64)
tensor([-175.2722, -174.8780, -198.3198, -199.8829, -175.0918],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0186, device='cuda:0', dtype=torch.float64)
tensor([-175.4560, -173.9176, -199.0041, -200.6177, -174.1788],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0170, device='cuda:0', dtype=torch.float64)
tensor([-176.0857, -172.7217, -200.6828, -202.1768, -172.9507],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0139, device='cuda:0', dtype=torch.float64)
tensor([-176.8959, -171.8937, -202.4923, -203.7995, -172.1496],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0133, device='cuda:0', dtype=torch.float64)
tensor([-177.7819, -171.2430, -204.5499, -205.6385, -171.3492],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0141, device='cuda:0', dtype=torch.float64)
tensor([-178.4887, -170.9235, -205.9659, -206.9688, -170.9767],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0118, device='cuda:0', dtype=torch.float64)
tensor([-179.0721, -170.7823, -207.0527, -207.9770, -170.8330],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0182, device='cuda:0', dtype=torch.float64)
tensor([-180.3424, -170.7442, -208.6454, -209.2476, -171.4168],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0174, device='cuda:0', dtype=torch.float64)
tensor([-182.3834, -170.7796, -211.0205, -211.2029, -172.3732],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0143, device='cuda:0', dtype=torch.float64)
tensor([-183.2874, -170.7750, -211.9549, -211.8250, -172.9968],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0127, device='cuda:0', dtype=torch.float64)
tensor([-184.0459, -170.9346, -212.6981, -212.2031, -173.7923],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0127, device='cuda:0', dtype=torch.float64)
tensor([-185.0613, -171.1269, -213.5687, -212.7618, -174.7081],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0112, device='cuda:0', dtype=torch.float64)
tensor([-185.9547, -171.1859, -214.0501, -213.1653, -175.4009],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0091, device='cuda:0', dtype=torch.float64)
tensor([-186.5146, -171.1798, -214.1733, -213.2747, -175.9165],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0106, device='cuda:0', dtype=torch.float64)
tensor([-187.1063, -171.1587, -214.5250, -213.5697, -176.3001],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0225, device='cuda:0', dtype=torch.float64)
tensor([-186.3488, -170.7397, -213.2153, -212.5585, -175.7448],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0139, device='cuda:0', dtype=torch.float64)
tensor([-184.6349, -170.2810, -210.6668, -210.5970, -174.7772],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0127, device='cuda:0', dtype=torch.float64)
tensor([-183.5554, -169.9301, -208.8343, -209.3300, -174.0930],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0118, device='cuda:0', dtype=torch.float64)
tensor([-182.0958, -169.8031, -206.4007, -207.5665, -173.4553],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0146, device='cuda:0', dtype=torch.float64)
tensor([-180.0432, -169.8835, -203.1175, -205.0657, -172.7237],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0135, device='cuda:0', dtype=torch.float64)
tensor([-177.9873, -170.1944, -199.7288, -202.3101, -171.9730],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0169, device='cuda:0', dtype=torch.float64)
tensor([-176.9689, -170.7967, -197.9077, -200.6629, -171.6657],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0131, device='cuda:0', dtype=torch.float64)
tensor([-176.6231, -171.3560, -197.0732, -199.7443, -171.8060],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0145, device='cuda:0', dtype=torch.float64)
tensor([-176.5406, -171.5171, -196.8111, -199.4498, -171.5947],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0119, device='cuda:0', dtype=torch.float64)
tensor([-176.5205, -171.7499, -196.7674, -199.3804, -171.4505],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0139, device='cuda:0', dtype=torch.float64)
tensor([-176.7679, -171.7974, -197.3979, -200.0613, -171.2378],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0131, device='cuda:0', dtype=torch.float64)
tensor([-177.0466, -171.8985, -198.2217, -200.9036, -171.1007],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0153, device='cuda:0', dtype=torch.float64)
tensor([-177.7407, -171.7899, -199.6038, -202.2605, -171.0179],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0170, device='cuda:0', dtype=torch.float64)
tensor([-178.9238, -171.7414, -201.5909, -203.9825, -171.3891],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0108, device='cuda:0', dtype=torch.float64)
tensor([-179.9965, -171.9981, -203.2100, -205.1753, -172.1106],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0165, device='cuda:0', dtype=torch.float64)
tensor([-180.4439, -172.3462, -203.9497, -205.5639, -172.7103],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0142, device='cuda:0', dtype=torch.float64)
tensor([-180.7168, -172.6107, -204.6671, -205.9609, -173.1090],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0139, device='cuda:0', dtype=torch.float64)
tensor([-181.1635, -172.7771, -205.4821, -206.4806, -173.5380],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0173, device='cuda:0', dtype=torch.float64)
tensor([-181.7096, -172.8293, -206.3831, -207.0894, -173.9420],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0110, device='cuda:0', dtype=torch.float64)
tensor([-181.9265, -172.8305, -206.8053, -207.3944, -174.1556],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0131, device='cuda:0', dtype=torch.float64)
tensor([-181.8144, -172.6610, -206.6608, -207.3694, -174.0673],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0132, device='cuda:0', dtype=torch.float64)
tensor([-181.8242, -172.4184, -206.6867, -207.5654, -173.8717],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0142, device='cuda:0', dtype=torch.float64)
tensor([-181.7133, -172.2314, -206.5564, -207.6095, -173.6739],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0159, device='cuda:0', dtype=torch.float64)
tensor([-180.8398, -172.0208, -205.2917, -206.7685, -173.2023],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0133, device='cuda:0', dtype=torch.float64)
tensor([-180.2719, -171.9258, -204.4066, -206.1839, -173.0086],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0120, device='cuda:0', dtype=torch.float64)
tensor([-179.8151, -171.8250, -203.6938, -205.7658, -172.8406],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0132, device='cuda:0', dtype=torch.float64)
tensor([-179.2418, -171.8307, -202.8646, -205.1904, -172.7248],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0132, device='cuda:0', dtype=torch.float64)
tensor([-178.5910, -171.8774, -201.9199, -204.4639, -172.6432],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0130, device='cuda:0', dtype=torch.float64)
tensor([-178.2575, -171.7387, -201.3682, -204.0562, -172.5953],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0126, device='cuda:0', dtype=torch.float64)
tensor([-178.3553, -171.2987, -201.5845, -204.3704, -172.2147],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0112, device='cuda:0', dtype=torch.float64)
tensor([-178.7366, -170.9626, -202.1519, -204.9743, -172.0158],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0122, device='cuda:0', dtype=torch.float64)
tensor([-179.9056, -170.4538, -203.9460, -206.6140, -171.8139],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0133, device='cuda:0', dtype=torch.float64)
tensor([-181.1906, -170.0855, -205.9110, -208.3744, -171.7229],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0113, device='cuda:0', dtype=torch.float64)
tensor([-182.2208, -169.7467, -207.4382, -209.7959, -171.6134],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0129, device='cuda:0', dtype=torch.float64)
tensor([-182.9890, -169.5138, -208.4102, -210.7266, -171.6586],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0155, device='cuda:0', dtype=torch.float64)
tensor([-183.4931, -169.5445, -209.0853, -211.1643, -172.0206],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0129, device='cuda:0', dtype=torch.float64)
tensor([-184.1658, -169.6366, -209.9394, -211.7040, -172.5495],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0158, device='cuda:0', dtype=torch.float64)
tensor([-184.4980, -169.7824, -210.4130, -211.8084, -173.1429],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0144, device='cuda:0', dtype=torch.float64)
tensor([-183.9154, -169.8738, -209.7546, -210.9360, -173.4508],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0127, device='cuda:0', dtype=torch.float64)
tensor([-182.6279, -170.0599, -208.2976, -209.4952, -173.5060],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0164, device='cuda:0', dtype=torch.float64)
tensor([-181.0429, -170.2709, -206.3233, -207.7201, -173.4872],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0128, device='cuda:0', dtype=torch.float64)
tensor([-180.0365, -170.5125, -205.1301, -206.6509, -173.5278],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0325, device='cuda:0', dtype=torch.float64)
tensor([-179.5447, -170.5730, -204.7580, -206.2944, -173.3660],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0150, device='cuda:0', dtype=torch.float64)
tensor([-179.3164, -170.5664, -204.7712, -206.2910, -173.0763],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0122, device='cuda:0', dtype=torch.float64)
tensor([-178.9979, -170.4346, -204.5804, -206.1478, -172.7443],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0119, device='cuda:0', dtype=torch.float64)
tensor([-178.6289, -170.2613, -204.4188, -206.0398, -172.3078],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0230, device='cuda:0', dtype=torch.float64)
tensor([-177.8512, -170.1921, -203.6348, -205.4330, -171.9175],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0136, device='cuda:0', dtype=torch.float64)
tensor([-176.3121, -170.4677, -201.5664, -203.7522, -171.6856],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0130, device='cuda:0', dtype=torch.float64)
tensor([-174.9212, -170.8594, -199.5953, -202.1117, -171.5968],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0122, device='cuda:0', dtype=torch.float64)
tensor([-174.0811, -171.2875, -198.1739, -200.8986, -171.8730],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0118, device='cuda:0', dtype=torch.float64)
tensor([-173.5022, -171.8381, -197.1846, -199.9780, -172.2712],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0124, device='cuda:0', dtype=torch.float64)
tensor([-173.2381, -171.9017, -197.1395, -199.8921, -172.0360],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0172, device='cuda:0', dtype=torch.float64)
tensor([-173.0515, -171.7706, -197.5618, -200.2075, -171.4687],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0141, device='cuda:0', dtype=torch.float64)
tensor([-173.2830, -171.5210, -198.7837, -201.2270, -170.9459],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0148, device='cuda:0', dtype=torch.float64)
tensor([-173.9779, -171.2013, -200.4676, -202.6984, -170.5421],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0124, device='cuda:0', dtype=torch.float64)
tensor([-175.0434, -171.0209, -202.4906, -204.4899, -170.3146],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0115, device='cuda:0', dtype=torch.float64)
tensor([-176.7332, -170.8998, -204.9711, -206.6039, -170.4494],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0153, device='cuda:0', dtype=torch.float64)
tensor([-178.4904, -170.9643, -207.1801, -208.4271, -171.0524],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0125, device='cuda:0', dtype=torch.float64)
tensor([-180.1194, -170.9543, -209.0264, -210.0775, -171.5543],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0141, device='cuda:0', dtype=torch.float64)
tensor([-181.0632, -170.7863, -210.0524, -211.1434, -171.6543],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0141, device='cuda:0', dtype=torch.float64)
tensor([-182.0555, -170.7040, -211.0236, -212.1245, -171.9149],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0129, device='cuda:0', dtype=torch.float64)
tensor([-183.0299, -170.6074, -211.8058, -212.9572, -172.2240],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0146, device='cuda:0', dtype=torch.float64)
tensor([-184.1303, -170.5572, -212.6943, -213.8513, -172.6574],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0135, device='cuda:0', dtype=torch.float64)
tensor([-184.8890, -170.4846, -213.2186, -214.4784, -172.9174],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0135, device='cuda:0', dtype=torch.float64)
tensor([-184.1886, -170.0302, -212.0832, -213.7379, -172.4033],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0165, device='cuda:0', dtype=torch.float64)
tensor([-183.3215, -169.5602, -210.7788, -212.6702, -172.0400],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0142, device='cuda:0', dtype=torch.float64)
tensor([-181.7100, -168.8943, -208.5015, -210.9599, -171.1102],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0130, device='cuda:0', dtype=torch.float64)
tensor([-180.3492, -168.3234, -206.4813, -209.5254, -170.3300],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0132, device='cuda:0', dtype=torch.float64)
tensor([-178.6337, -167.9255, -203.9961, -207.7432, -169.5932],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0290, device='cuda:0', dtype=torch.float64)
tensor([-177.5747, -167.6184, -202.4179, -206.7362, -168.9518],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0139, device='cuda:0', dtype=torch.float64)
tensor([-176.5177, -167.4440, -201.0501, -205.8308, -168.2380],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0129, device='cuda:0', dtype=torch.float64)
tensor([-175.8358, -167.4206, -200.1842, -205.1566, -167.9219],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0128, device='cuda:0', dtype=torch.float64)
tensor([-175.4830, -167.4276, -199.9721, -204.9293, -167.5667],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0129, device='cuda:0', dtype=torch.float64)
tensor([-175.6658, -167.3284, -200.5837, -205.3702, -167.2631],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0134, device='cuda:0', dtype=torch.float64)
tensor([-176.5667, -167.2271, -202.1959, -206.5413, -167.2928],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0116, device='cuda:0', dtype=torch.float64)
tensor([-177.2271, -167.3291, -203.5107, -207.4272, -167.4350],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0174, device='cuda:0', dtype=torch.float64)
tensor([-177.8004, -167.3948, -204.7935, -208.3434, -167.3793],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0235, device='cuda:0', dtype=torch.float64)
tensor([-178.2306, -167.4908, -206.0359, -209.2222, -167.2240],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0136, device='cuda:0', dtype=torch.float64)
tensor([-178.7561, -167.6518, -207.2933, -210.0713, -167.3065],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0125, device='cuda:0', dtype=torch.float64)
tensor([-179.2083, -167.8206, -208.2106, -210.5996, -167.6243],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0141, device='cuda:0', dtype=torch.float64)
tensor([-179.0758, -167.9634, -208.3652, -210.5373, -167.7151],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0148, device='cuda:0', dtype=torch.float64)
tensor([-179.1726, -168.0094, -208.6171, -210.6123, -167.8913],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0147, device='cuda:0', dtype=torch.float64)
tensor([-179.3760, -168.0801, -208.7936, -210.6162, -168.2575],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0133, device='cuda:0', dtype=torch.float64)
tensor([-179.6015, -168.1526, -208.9496, -210.6443, -168.5688],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0112, device='cuda:0', dtype=torch.float64)
tensor([-179.2065, -168.0764, -208.1403, -209.9156, -168.6813],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0119, device='cuda:0', dtype=torch.float64)
tensor([-178.4927, -168.0502, -206.9463, -208.9110, -168.6381],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0124, device='cuda:0', dtype=torch.float64)
tensor([-177.9110, -168.0646, -205.8658, -207.9774, -168.7386],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0128, device='cuda:0', dtype=torch.float64)
tensor([-177.6842, -168.0922, -205.4460, -207.5874, -168.7976],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0101, device='cuda:0', dtype=torch.float64)
tensor([-177.2222, -168.0995, -204.5828, -206.8523, -168.8496],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0168, device='cuda:0', dtype=torch.float64)
tensor([-176.7261, -168.1678, -203.7868, -206.1752, -168.7849],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0143, device='cuda:0', dtype=torch.float64)
tensor([-176.4882, -168.2966, -203.2110, -205.6694, -168.9550],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0144, device='cuda:0', dtype=torch.float64)
tensor([-176.7873, -168.3365, -203.7920, -206.0949, -168.9397],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0119, device='cuda:0', dtype=torch.float64)
tensor([-177.2566, -168.3830, -204.5289, -206.6915, -169.0458],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0150, device='cuda:0', dtype=torch.float64)
tensor([-178.4415, -168.5540, -206.4760, -208.1704, -169.3948],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0129, device='cuda:0', dtype=torch.float64)
tensor([-179.6232, -168.8188, -208.3311, -209.5639, -169.8135],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0137, device='cuda:0', dtype=torch.float64)
tensor([-179.6576, -169.0026, -208.6194, -209.6758, -169.9457],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0127, device='cuda:0', dtype=torch.float64)
tensor([-179.0703, -169.0276, -208.1935, -209.2656, -169.7123],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0127, device='cuda:0', dtype=torch.float64)
tensor([-179.1986, -169.2781, -208.8467, -209.6951, -169.8143],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0144, device='cuda:0', dtype=torch.float64)
tensor([-179.1261, -169.5120, -209.0172, -209.7109, -170.0173],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0152, device='cuda:0', dtype=torch.float64)
tensor([-179.1784, -169.6408, -209.3785, -209.9320, -170.0590],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0115, device='cuda:0', dtype=torch.float64)
tensor([-178.8572, -169.6383, -209.1177, -209.6859, -170.0023],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0108, device='cuda:0', dtype=torch.float64)
tensor([-178.4593, -169.6013, -208.6622, -209.2739, -169.9888],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0128, device='cuda:0', dtype=torch.float64)
tensor([-178.3308, -169.5717, -208.4945, -209.1172, -170.0633],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0149, device='cuda:0', dtype=torch.float64)
tensor([-177.8945, -169.4380, -208.0358, -208.8180, -169.7646],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0133, device='cuda:0', dtype=torch.float64)
tensor([-177.6203, -169.2912, -207.8585, -208.8205, -169.3503],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0143, device='cuda:0', dtype=torch.float64)
tensor([-177.5633, -169.1087, -207.9467, -209.0353, -168.9680],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0126, device='cuda:0', dtype=torch.float64)
tensor([-177.5411, -168.9314, -207.9859, -209.2437, -168.6616],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0124, device='cuda:0', dtype=torch.float64)
tensor([-177.3486, -168.7063, -208.0589, -209.5383, -168.0521],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0150, device='cuda:0', dtype=torch.float64)
tensor([-177.4497, -168.5133, -208.4506, -210.0952, -167.6002],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0139, device='cuda:0', dtype=torch.float64)
tensor([-177.2120, -168.4473, -208.2367, -210.0718, -167.2948],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0125, device='cuda:0', dtype=torch.float64)
tensor([-177.0390, -168.3620, -207.9951, -210.0088, -167.1115],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0117, device='cuda:0', dtype=torch.float64)
tensor([-177.1284, -168.3192, -207.7986, -209.9718, -167.1021],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0133, device='cuda:0', dtype=torch.float64)
tensor([-177.5454, -168.3988, -208.0257, -210.1634, -167.3256],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0156, device='cuda:0', dtype=torch.float64)
tensor([-178.0330, -168.3791, -208.1901, -210.3258, -167.5788],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0122, device='cuda:0', dtype=torch.float64)
tensor([-178.2935, -168.4061, -207.7711, -209.7956, -168.2624],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0151, device='cuda:0', dtype=torch.float64)
tensor([-178.4030, -168.3301, -207.1286, -209.2565, -168.7660],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0113, device='cuda:0', dtype=torch.float64)
tensor([-178.6168, -168.4211, -206.8199, -209.0544, -169.2921],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0116, device='cuda:0', dtype=torch.float64)
tensor([-178.6207, -168.5821, -206.3243, -208.6553, -169.8070],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0146, device='cuda:0', dtype=torch.float64)
tensor([-178.3183, -168.7369, -205.4996, -208.0398, -170.2228],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0127, device='cuda:0', dtype=torch.float64)
tensor([-178.1190, -168.8404, -204.9355, -207.6050, -170.6033],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0139, device='cuda:0', dtype=torch.float64)
tensor([-178.0400, -168.9007, -204.6398, -207.4476, -170.7229],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0135, device='cuda:0', dtype=torch.float64)
tensor([-177.9158, -168.9433, -204.3475, -207.2942, -170.7861],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0139, device='cuda:0', dtype=torch.float64)
tensor([-178.2096, -168.8957, -204.5262, -207.5134, -170.9169],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0145, device='cuda:0', dtype=torch.float64)
tensor([-177.9972, -168.6804, -204.0902, -207.2684, -170.7664],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0156, device='cuda:0', dtype=torch.float64)
tensor([-178.0257, -168.3203, -203.9592, -207.2827, -170.5172],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0142, device='cuda:0', dtype=torch.float64)
tensor([-178.4377, -168.0312, -204.5224, -207.8408, -170.2077],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0136, device='cuda:0', dtype=torch.float64)
tensor([-178.2697, -167.7300, -204.1652, -207.7003, -169.9355],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0137, device='cuda:0', dtype=torch.float64)
tensor([-177.9377, -167.5235, -203.5216, -207.3091, -169.8439],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0135, device='cuda:0', dtype=torch.float64)
tensor([-178.2252, -167.2834, -203.4098, -207.3799, -170.0434],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0123, device='cuda:0', dtype=torch.float64)
tensor([-178.2810, -167.0332, -203.1189, -207.3179, -170.0671],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0127, device='cuda:0', dtype=torch.float64)
tensor([-178.2045, -166.8612, -202.7274, -207.1498, -170.0837],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0145, device='cuda:0', dtype=torch.float64)
tensor([-177.2507, -166.9101, -201.4187, -206.1664, -170.0116],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0123, device='cuda:0', dtype=torch.float64)
tensor([-176.4922, -166.9057, -200.3676, -205.4024, -169.8292],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0114, device='cuda:0', dtype=torch.float64)
tensor([-175.8492, -166.8787, -199.7898, -205.0137, -169.2383],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0153, device='cuda:0', dtype=torch.float64)
tensor([-176.0642, -166.7184, -200.3278, -205.5793, -168.6462],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0712, device='cuda:0', dtype=torch.float64)
tensor([-175.9543, -166.6091, -200.3175, -205.7279, -168.2180],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0129, device='cuda:0', dtype=torch.float64)
tensor([-175.9095, -166.5443, -200.4022, -205.8930, -167.9527],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0150, device='cuda:0', dtype=torch.float64)
tensor([-175.7946, -166.5873, -200.5574, -206.0331, -167.7613],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0134, device='cuda:0', dtype=torch.float64)
tensor([-176.3500, -166.5236, -201.6339, -206.8576, -167.6824],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0127, device='cuda:0', dtype=torch.float64)
tensor([-176.5310, -166.5357, -202.1716, -207.1664, -167.7309],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0145, device='cuda:0', dtype=torch.float64)
tensor([-176.8837, -166.5207, -203.1564, -207.9269, -167.5806],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0106, device='cuda:0', dtype=torch.float64)
tensor([-176.9980, -166.4973, -203.7686, -208.4262, -167.3859],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0134, device='cuda:0', dtype=torch.float64)
tensor([-177.0089, -166.4099, -203.8692, -208.4699, -167.4966],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0158, device='cuda:0', dtype=torch.float64)
tensor([-176.9974, -166.3287, -203.7119, -208.3334, -167.7382],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0125, device='cuda:0', dtype=torch.float64)
tensor([-176.7716, -166.3296, -203.3508, -207.9463, -168.1039],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0115, device='cuda:0', dtype=torch.float64)
tensor([-176.1968, -166.4503, -202.5312, -207.1274, -168.6473],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0136, device='cuda:0', dtype=torch.float64)
tensor([-175.7665, -166.6437, -201.7746, -206.4001, -169.3180],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0119, device='cuda:0', dtype=torch.float64)
tensor([-175.0635, -166.9769, -200.7060, -205.4120, -170.0376],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0141, device='cuda:0', dtype=torch.float64)
tensor([-174.3472, -167.2677, -199.6072, -204.5025, -170.5551],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0145, device='cuda:0', dtype=torch.float64)
tensor([-173.9918, -167.6036, -199.2134, -204.0841, -171.0014],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0135, device='cuda:0', dtype=torch.float64)
tensor([-173.9829, -167.5279, -199.4864, -204.2963, -170.8623],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0137, device='cuda:0', dtype=torch.float64)
tensor([-173.7865, -167.3813, -199.4584, -204.3374, -170.6249],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0138, device='cuda:0', dtype=torch.float64)
tensor([-173.5661, -167.1784, -199.5276, -204.4936, -170.2095],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0140, device='cuda:0', dtype=torch.float64)
tensor([-173.3107, -166.9486, -199.4709, -204.5520, -169.7764],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0231, device='cuda:0', dtype=torch.float64)
tensor([-173.3543, -166.7213, -199.6639, -204.8042, -169.4853],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0130, device='cuda:0', dtype=torch.float64)
tensor([-173.9108, -166.3521, -200.8014, -205.8012, -168.8640],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0167, device='cuda:0', dtype=torch.float64)
tensor([-175.2185, -166.1622, -202.9978, -207.4456, -168.5486],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0116, device='cuda:0', dtype=torch.float64)
tensor([-176.5048, -166.1521, -205.0510, -209.0149, -168.3007],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0153, device='cuda:0', dtype=torch.float64)
tensor([-177.2043, -166.0835, -205.9756, -209.7260, -168.3404],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0132, device='cuda:0', dtype=torch.float64)
tensor([-178.0499, -166.1574, -207.2432, -210.6461, -168.4412],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0188, device='cuda:0', dtype=torch.float64)
tensor([-178.0340, -165.9064, -207.3043, -210.7545, -168.2336],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0125, device='cuda:0', dtype=torch.float64)
tensor([-177.7862, -165.5828, -206.8468, -210.4968, -168.1191],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0136, device='cuda:0', dtype=torch.float64)
tensor([-177.6435, -165.3230, -206.4824, -210.2020, -168.2417],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0145, device='cuda:0', dtype=torch.float64)
tensor([-176.3670, -164.9568, -204.4430, -208.7044, -168.3226],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0118, device='cuda:0', dtype=torch.float64)
tensor([-175.2851, -164.6901, -202.6016, -207.4346, -168.3999],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0137, device='cuda:0', dtype=torch.float64)
tensor([-174.8125, -164.5188, -201.6411, -206.7876, -168.5334],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0138, device='cuda:0', dtype=torch.float64)
tensor([-174.0789, -164.2970, -200.2430, -205.8148, -168.6852],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0140, device='cuda:0', dtype=torch.float64)
tensor([-173.2569, -164.2739, -198.8494, -204.7592, -168.8513],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0157, device='cuda:0', dtype=torch.float64)
tensor([-172.4371, -164.3131, -197.5764, -203.7839, -168.9216],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0141, device='cuda:0', dtype=torch.float64)
tensor([-172.1618, -164.1037, -197.2755, -203.5757, -168.7396],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0191, device='cuda:0', dtype=torch.float64)
tensor([-172.4643, -163.6450, -198.1320, -204.3358, -168.2355],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1402, device='cuda:0', dtype=torch.float64)
tensor([-172.9963, -163.4134, -199.1819, -205.1754, -167.9653],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0138, device='cuda:0', dtype=torch.float64)
tensor([-173.5892, -163.1714, -200.7271, -206.3798, -167.3504],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0135, device='cuda:0', dtype=torch.float64)
tensor([-174.1157, -163.0056, -202.1367, -207.4890, -166.8513],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0152, device='cuda:0', dtype=torch.float64)
tensor([-175.0215, -162.8764, -204.1351, -209.0603, -166.3248],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0183, device='cuda:0', dtype=torch.float64)
tensor([-176.0575, -163.1549, -206.3766, -210.7274, -166.0569],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0115, device='cuda:0', dtype=torch.float64)
tensor([-176.6719, -163.3691, -207.7212, -211.6684, -166.0339],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0123, device='cuda:0', dtype=torch.float64)
tensor([-178.0282, -163.7178, -209.8104, -213.1034, -166.3850],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0110, device='cuda:0', dtype=torch.float64)
tensor([-179.2242, -164.1272, -211.7222, -214.4264, -166.7032],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0148, device='cuda:0', dtype=torch.float64)
tensor([-180.5239, -164.4720, -213.1762, -215.2827, -167.3679],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2139, device='cuda:0', dtype=torch.float64)
tensor([-180.9385, -164.5384, -213.3785, -215.2526, -167.8366],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0148, device='cuda:0', dtype=torch.float64)
tensor([-181.0182, -164.4296, -213.2749, -214.9966, -168.2097],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0124, device='cuda:0', dtype=torch.float64)
tensor([-180.3654, -164.0301, -212.1763, -214.0860, -168.3878],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0119, device='cuda:0', dtype=torch.float64)
tensor([-180.1597, -163.8061, -211.7844, -213.6914, -168.6071],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0140, device='cuda:0', dtype=torch.float64)
tensor([-179.3405, -163.4808, -210.6847, -212.8083, -168.5877],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0135, device='cuda:0', dtype=torch.float64)
tensor([-178.1237, -163.0215, -208.8438, -211.4710, -168.4682],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0123, device='cuda:0', dtype=torch.float64)
tensor([-176.9263, -162.5278, -206.8790, -210.1632, -168.2225],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0173, device='cuda:0', dtype=torch.float64)
tensor([-176.2613, -162.0961, -205.7374, -209.4944, -167.8678],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0144, device='cuda:0', dtype=torch.float64)
tensor([-175.9191, -161.6243, -204.8840, -209.1293, -167.4988],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0133, device='cuda:0', dtype=torch.float64)
tensor([-175.5652, -161.2041, -204.3449, -208.9915, -166.9738],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0116, device='cuda:0', dtype=torch.float64)
tensor([-175.6991, -160.9289, -205.2102, -209.9096, -166.0358],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0137, device='cuda:0', dtype=torch.float64)
tensor([-175.5735, -160.7780, -205.4985, -210.3440, -165.4244],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0147, device='cuda:0', dtype=torch.float64)
tensor([-175.6409, -160.6728, -205.7909, -210.7042, -165.1316],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0146, device='cuda:0', dtype=torch.float64)
tensor([-175.6477, -160.5979, -206.0380, -211.0032, -164.8634],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0160, device='cuda:0', dtype=torch.float64)
tensor([-175.6417, -160.5334, -205.8683, -210.8735, -164.8807],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0124, device='cuda:0', dtype=torch.float64)
tensor([-175.6419, -160.5401, -205.4516, -210.4430, -165.2059],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0130, device='cuda:0', dtype=torch.float64)
tensor([-175.8010, -160.7005, -205.6773, -210.5759, -165.2181],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0126, device='cuda:0', dtype=torch.float64)
tensor([-175.8996, -160.9432, -206.0877, -210.9176, -165.0107],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0135, device='cuda:0', dtype=torch.float64)
tensor([-175.7956, -161.1934, -206.4482, -211.2257, -164.6993],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0128, device='cuda:0', dtype=torch.float64)
tensor([-175.8680, -161.4857, -206.9566, -211.5905, -164.5365],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0120, device='cuda:0', dtype=torch.float64)
tensor([-176.8682, -161.9930, -209.1581, -213.1755, -164.4772],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0140, device='cuda:0', dtype=torch.float64)
tensor([-177.4880, -162.3765, -210.3929, -214.0725, -164.5231],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0118, device='cuda:0', dtype=torch.float64)
tensor([-178.0062, -162.6575, -211.1707, -214.6767, -164.6105],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0104, device='cuda:0', dtype=torch.float64)
tensor([-178.1480, -162.7779, -211.2018, -214.7942, -164.5925],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0134, device='cuda:0', dtype=torch.float64)
tensor([-177.7792, -162.5931, -209.9645, -213.8446, -164.8108],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0115, device='cuda:0', dtype=torch.float64)
tensor([-177.4857, -162.5050, -208.8720, -213.0144, -165.1626],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0134, device='cuda:0', dtype=torch.float64)
tensor([-176.4221, -162.2739, -206.2834, -211.0933, -165.8264],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0146, device='cuda:0', dtype=torch.float64)
tensor([-175.1919, -162.2768, -203.6089, -209.1272, -166.6087],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0135, device='cuda:0', dtype=torch.float64)
tensor([-174.1352, -162.6417, -201.2053, -207.2141, -167.7976],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0155, device='cuda:0', dtype=torch.float64)
tensor([-173.3781, -163.0699, -199.6950, -205.9336, -168.6441],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0125, device='cuda:0', dtype=torch.float64)
tensor([-172.4475, -163.7064, -198.0693, -204.5007, -169.4232],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0143, device='cuda:0', dtype=torch.float64)
tensor([-172.0377, -164.0771, -197.3747, -203.8622, -169.8180],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0160, device='cuda:0', dtype=torch.float64)
tensor([-171.8284, -164.1973, -197.1246, -203.6185, -169.8095],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0160, device='cuda:0', dtype=torch.float64)
tensor([-171.9253, -163.6329, -198.1147, -204.5253, -168.8443],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0152, device='cuda:0', dtype=torch.float64)
tensor([-172.9484, -162.6810, -201.2157, -207.0759, -167.0814],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0144, device='cuda:0', dtype=torch.float64)
tensor([-174.6215, -162.3870, -205.4475, -210.0919, -165.7007],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0110, device='cuda:0', dtype=torch.float64)
tensor([-176.0951, -162.5752, -209.0219, -212.5738, -165.0349],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0134, device='cuda:0', dtype=torch.float64)
tensor([-176.7375, -162.6661, -211.3949, -214.3756, -164.3093],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0131, device='cuda:0', dtype=torch.float64)
tensor([-176.8380, -162.6784, -212.9641, -215.8625, -163.5019],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0125, device='cuda:0', dtype=torch.float64)
tensor([-176.8487, -162.6611, -213.9913, -217.2267, -162.8161],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0138, device='cuda:0', dtype=torch.float64)
tensor([-176.2336, -162.4137, -213.5402, -217.2207, -162.2790],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0128, device='cuda:0', dtype=torch.float64)
tensor([-175.5901, -162.0794, -212.2985, -216.0943, -162.0797],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0160, device='cuda:0', dtype=torch.float64)
tensor([-174.6038, -161.5418, -210.1176, -214.0677, -162.0301],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0147, device='cuda:0', dtype=torch.float64)
tensor([-174.0253, -161.1831, -208.1073, -212.1698, -162.3408],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0137, device='cuda:0', dtype=torch.float64)
tensor([-173.9494, -161.1301, -207.4352, -211.4799, -162.6024],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0134, device='cuda:0', dtype=torch.float64)
tensor([-173.6687, -161.0667, -206.2828, -210.4392, -163.0002],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0122, device='cuda:0', dtype=torch.float64)
tensor([-173.3881, -161.0409, -204.9987, -209.3035, -163.6720],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0142, device='cuda:0', dtype=torch.float64)
tensor([-173.2744, -161.1424, -204.3980, -208.7625, -164.1129],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0139, device='cuda:0', dtype=torch.float64)
tensor([-173.8270, -161.2164, -205.2102, -209.2220, -164.4596],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0132, device='cuda:0', dtype=torch.float64)
tensor([-174.0632, -161.3625, -205.0449, -209.0732, -164.9660],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0145, device='cuda:0', dtype=torch.float64)
tensor([-174.1580, -161.4840, -204.8194, -208.9280, -165.3097],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1413, device='cuda:0', dtype=torch.float64)
tensor([-173.9688, -161.6223, -204.0611, -208.4587, -165.6828],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0122, device='cuda:0', dtype=torch.float64)
tensor([-173.6702, -161.7444, -202.9834, -207.7894, -166.1333],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0146, device='cuda:0', dtype=torch.float64)
tensor([-173.5013, -161.6706, -202.4258, -207.5525, -166.1719],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0126, device='cuda:0', dtype=torch.float64)
tensor([-173.5227, -161.5546, -202.1428, -207.5258, -166.1360],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0135, device='cuda:0', dtype=torch.float64)
tensor([-173.6543, -161.4656, -202.3333, -207.7883, -165.8218],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0130, device='cuda:0', dtype=torch.float64)
tensor([-173.8270, -161.2848, -202.8377, -208.3751, -165.0533],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0181, device='cuda:0', dtype=torch.float64)
tensor([-173.9363, -161.1994, -203.2566, -208.9034, -164.3653],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0149, device='cuda:0', dtype=torch.float64)
tensor([-174.4850, -161.1795, -204.5718, -210.0394, -163.6136],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0169, device='cuda:0', dtype=torch.float64)
tensor([-174.5028, -161.2616, -205.1003, -210.6307, -162.9396],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0128, device='cuda:0', dtype=torch.float64)
tensor([-174.2664, -161.4457, -205.2944, -210.9367, -162.4043],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0182, device='cuda:0', dtype=torch.float64)
tensor([-174.4312, -161.7528, -206.0463, -211.4786, -162.1270],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0130, device='cuda:0', dtype=torch.float64)
tensor([-174.1507, -162.0260, -205.9617, -211.3345, -162.0143],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0136, device='cuda:0', dtype=torch.float64)
tensor([-173.3654, -162.2337, -205.2341, -210.7080, -161.8316],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0128, device='cuda:0', dtype=torch.float64)
tensor([-172.2645, -162.5261, -203.9737, -209.6122, -161.7812],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0137, device='cuda:0', dtype=torch.float64)
tensor([-171.3127, -162.9200, -203.0273, -208.7391, -161.7370],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0146, device='cuda:0', dtype=torch.float64)
tensor([-170.5852, -163.2767, -201.9783, -207.7877, -161.9066],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0163, device='cuda:0', dtype=torch.float64)
tensor([-169.8066, -163.6043, -200.5084, -206.5341, -162.2805],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0130, device='cuda:0', dtype=torch.float64)
tensor([-169.3244, -164.0067, -199.8366, -205.8771, -162.5231],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0140, device='cuda:0', dtype=torch.float64)
tensor([-169.0899, -164.3428, -199.4473, -205.4615, -162.8063],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0152, device='cuda:0', dtype=torch.float64)
tensor([-169.4808, -164.2051, -200.4584, -206.2579, -162.5586],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0120, device='cuda:0', dtype=torch.float64)
tensor([-170.0730, -164.1647, -201.9092, -207.3277, -162.2820],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0142, device='cuda:0', dtype=torch.float64)
tensor([-170.1500, -164.1976, -202.3930, -207.5831, -162.2573],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0161, device='cuda:0', dtype=torch.float64)
tensor([-170.1903, -164.1882, -202.7673, -207.7939, -162.2644],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0127, device='cuda:0', dtype=torch.float64)
tensor([-170.6444, -164.0447, -203.8626, -208.5277, -162.2283],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0136, device='cuda:0', dtype=torch.float64)
tensor([-171.3407, -163.9686, -205.2392, -209.4275, -162.3060],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0136, device='cuda:0', dtype=torch.float64)
tensor([-171.7609, -163.9969, -205.7113, -209.5480, -162.8410],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0159, device='cuda:0', dtype=torch.float64)
tensor([-171.6837, -164.0119, -205.3565, -209.1752, -163.4107],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0140, device='cuda:0', dtype=torch.float64)
tensor([-171.2916, -164.0056, -204.3602, -208.4230, -164.0355],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0161, device='cuda:0', dtype=torch.float64)
tensor([-171.4647, -163.9514, -204.1245, -208.2348, -164.7526],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0137, device='cuda:0', dtype=torch.float64)
tensor([-171.7643, -163.8865, -204.4553, -208.4475, -165.1960],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0130, device='cuda:0', dtype=torch.float64)
tensor([-172.1856, -163.8140, -205.1138, -208.9040, -165.5215],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0146, device='cuda:0', dtype=torch.float64)
tensor([-172.9985, -163.7104, -206.5837, -209.9765, -165.4581],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0130, device='cuda:0', dtype=torch.float64)
tensor([-174.1022, -163.6663, -208.1714, -211.1492, -165.5835],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0166, device='cuda:0', dtype=torch.float64)
tensor([-174.2524, -163.3912, -208.4781, -211.4588, -165.3684],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0134, device='cuda:0', dtype=torch.float64)
tensor([-173.7772, -162.8506, -208.0723, -211.2992, -164.8020],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0129, device='cuda:0', dtype=torch.float64)
tensor([-173.2469, -162.2673, -207.4979, -211.0534, -164.1812],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0139, device='cuda:0', dtype=torch.float64)
tensor([-172.8147, -161.6985, -207.3899, -211.1634, -163.3253],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0131, device='cuda:0', dtype=torch.float64)
tensor([-172.1643, -161.1920, -207.1341, -211.1966, -162.4247],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0169, device='cuda:0', dtype=torch.float64)
tensor([-172.1266, -160.8600, -207.8688, -211.9964, -161.6032],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0172, device='cuda:0', dtype=torch.float64)
tensor([-171.5657, -160.6194, -207.8065, -212.3479, -160.8173],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0177, device='cuda:0', dtype=torch.float64)
tensor([-171.3337, -160.5027, -208.2912, -213.0832, -160.2197],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0147, device='cuda:0', dtype=torch.float64)
tensor([-170.8705, -160.5400, -208.4202, -213.5283, -159.7586],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0148, device='cuda:0', dtype=torch.float64)
tensor([-170.5372, -160.4665, -208.1851, -213.6114, -159.5009],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0144, device='cuda:0', dtype=torch.float64)
tensor([-170.1024, -160.4245, -207.6137, -213.5015, -159.2732],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0142, device='cuda:0', dtype=torch.float64)
tensor([-170.4740, -160.3611, -208.0818, -213.8364, -159.3055],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0164, device='cuda:0', dtype=torch.float64)
tensor([-170.8078, -160.1220, -207.9126, -213.3247, -159.5779],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0130, device='cuda:0', dtype=torch.float64)
tensor([-171.1388, -159.8472, -207.5592, -212.6681, -159.9062],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0143, device='cuda:0', dtype=torch.float64)
tensor([-171.3363, -159.5193, -207.0486, -211.9770, -160.2603],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0147, device='cuda:0', dtype=torch.float64)
tensor([-171.4912, -159.3852, -206.6359, -211.4301, -160.5853],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0119, device='cuda:0', dtype=torch.float64)
tensor([-171.6441, -159.3715, -206.3013, -211.0059, -160.8928],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0136, device='cuda:0', dtype=torch.float64)
tensor([-172.0918, -159.3965, -206.2923, -210.8142, -161.3001],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0160, device='cuda:0', dtype=torch.float64)
tensor([-172.9933, -159.4353, -207.0198, -211.2153, -161.7363],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0147, device='cuda:0', dtype=torch.float64)
tensor([-173.8519, -159.5591, -207.8907, -211.6898, -162.1747],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0157, device='cuda:0', dtype=torch.float64)
tensor([-174.3955, -159.7742, -208.2356, -211.7871, -162.7498],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0128, device='cuda:0', dtype=torch.float64)
tensor([-174.8163, -160.0043, -208.4975, -211.8379, -163.3612],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0149, device='cuda:0', dtype=torch.float64)
tensor([-175.0131, -160.3165, -208.3895, -211.6229, -164.0869],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0137, device='cuda:0', dtype=torch.float64)
tensor([-174.7039, -160.5299, -207.7649, -211.0632, -164.6559],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0167, device='cuda:0', dtype=torch.float64)
tensor([-174.2352, -160.6686, -207.1139, -210.5316, -164.7916],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2034, device='cuda:0', dtype=torch.float64)
tensor([-173.8022, -160.7267, -206.6382, -210.2089, -164.5688],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0159, device='cuda:0', dtype=torch.float64)
tensor([-173.1073, -160.6951, -205.7756, -209.6392, -164.1987],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0158, device='cuda:0', dtype=torch.float64)
tensor([-171.5887, -160.6470, -203.4479, -207.9924, -163.9892],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0117, device='cuda:0', dtype=torch.float64)
tensor([-170.4543, -160.7433, -201.7844, -206.8194, -163.6669],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0155, device='cuda:0', dtype=torch.float64)
tensor([-169.4872, -160.9347, -200.4696, -205.9067, -163.2911],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0169, device='cuda:0', dtype=torch.float64)
tensor([-168.8931, -161.0726, -199.8807, -205.5219, -162.9428],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0126, device='cuda:0', dtype=torch.float64)
tensor([-168.5160, -161.2344, -199.6129, -205.3511, -162.6627],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0165, device='cuda:0', dtype=torch.float64)
tensor([-168.5698, -161.1914, -200.4729, -206.1491, -161.9867],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0159, device='cuda:0', dtype=torch.float64)
tensor([-168.6754, -161.1072, -201.1896, -206.8734, -161.4700],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0132, device='cuda:0', dtype=torch.float64)
tensor([-168.9088, -161.0261, -202.1534, -207.8113, -160.9433],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0149, device='cuda:0', dtype=torch.float64)
tensor([-169.7120, -160.9680, -203.9034, -209.4313, -160.4204],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0146, device='cuda:0', dtype=torch.float64)
tensor([-170.6158, -161.0355, -205.6120, -211.0352, -160.1033],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0140, device='cuda:0', dtype=torch.float64)
tensor([-171.0658, -161.0973, -206.2239, -211.7931, -159.9575],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0151, device='cuda:0', dtype=torch.float64)
tensor([-171.1090, -161.0490, -205.9104, -211.6217, -160.0161],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0135, device='cuda:0', dtype=torch.float64)
tensor([-171.3050, -160.9956, -205.7877, -211.5506, -160.1472],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0151, device='cuda:0', dtype=torch.float64)
tensor([-171.0713, -160.7708, -204.8151, -210.7473, -160.4230],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0165, device='cuda:0', dtype=torch.float64)
tensor([-170.7996, -160.4818, -203.4170, -209.6732, -160.9382],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0141, device='cuda:0', dtype=torch.float64)
tensor([-170.5399, -160.3178, -202.2304, -208.7474, -161.4661],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0155, device='cuda:0', dtype=torch.float64)
tensor([-170.5124, -160.2518, -201.7193, -208.2916, -161.9799],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0169, device='cuda:0', dtype=torch.float64)
tensor([-170.3206, -160.2411, -201.3120, -207.9098, -162.2888],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0177, device='cuda:0', dtype=torch.float64)
tensor([-170.6398, -160.1230, -201.8553, -208.3032, -162.3946],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0188, device='cuda:0', dtype=torch.float64)
tensor([-171.6128, -159.9078, -203.5637, -209.5583, -162.3439],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0138, device='cuda:0', dtype=torch.float64)
tensor([-172.9194, -159.8183, -205.8132, -211.1773, -162.2942],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0181, device='cuda:0', dtype=torch.float64)
tensor([-173.5384, -159.8407, -207.2806, -212.1155, -162.2328],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0158, device='cuda:0', dtype=torch.float64)
tensor([-172.8288, -159.7111, -206.6321, -211.5583, -162.1850],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0751, device='cuda:0', dtype=torch.float64)
tensor([-172.1470, -159.5433, -206.1145, -211.1242, -162.0758],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0225, device='cuda:0', dtype=torch.float64)
tensor([-172.2331, -159.5829, -207.0723, -211.8006, -161.5883],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0185, device='cuda:0', dtype=torch.float64)
tensor([-171.6779, -159.6931, -207.4965, -212.0389, -160.9999],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0175, device='cuda:0', dtype=torch.float64)
tensor([-171.2524, -159.7754, -208.2243, -212.4741, -160.5947],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0145, device='cuda:0', dtype=torch.float64)
tensor([-170.7787, -160.0233, -208.8510, -212.9018, -160.2637],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0133, device='cuda:0', dtype=torch.float64)
tensor([-169.7656, -160.1651, -208.5017, -212.7386, -159.9573],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0153, device='cuda:0', dtype=torch.float64)
tensor([-170.0834, -160.3180, -209.5473, -213.5583, -159.8597],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0162, device='cuda:0', dtype=torch.float64)
tensor([-170.7069, -160.7335, -211.3518, -214.9977, -159.7541],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0164, device='cuda:0', dtype=torch.float64)
tensor([-171.1934, -161.2309, -213.0193, -216.5359, -159.6103],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0133, device='cuda:0', dtype=torch.float64)
tensor([-171.0479, -161.4899, -213.3393, -217.0689, -159.4555],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0143, device='cuda:0', dtype=torch.float64)
tensor([-170.9357, -161.5934, -213.3932, -217.2668, -159.3583],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0152, device='cuda:0', dtype=torch.float64)
tensor([-170.0995, -161.4160, -211.7945, -215.9860, -159.2919],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0163, device='cuda:0', dtype=torch.float64)
tensor([-169.1500, -161.1720, -209.7316, -214.3408, -159.2742],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0389, device='cuda:0', dtype=torch.float64)
tensor([-167.5348, -161.0613, -206.2816, -211.5839, -159.5476],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0146, device='cuda:0', dtype=torch.float64)
tensor([-166.3704, -161.4391, -203.4140, -209.1226, -160.1946],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0147, device='cuda:0', dtype=torch.float64)
tensor([-165.9243, -161.7370, -201.4236, -207.1552, -161.0314],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0194, device='cuda:0', dtype=torch.float64)
tensor([-165.8832, -161.8981, -199.9831, -205.6121, -161.9158],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0174, device='cuda:0', dtype=torch.float64)
tensor([-165.9298, -161.9776, -199.3917, -205.0100, -162.3269],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0168, device='cuda:0', dtype=torch.float64)
tensor([-166.1522, -161.8023, -199.9017, -205.4924, -162.0613],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1437, device='cuda:0', dtype=torch.float64)
tensor([-166.3749, -161.7240, -200.1284, -205.6948, -162.0043],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0156, device='cuda:0', dtype=torch.float64)
tensor([-166.8833, -161.3454, -201.1715, -206.5648, -161.6098],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0156, device='cuda:0', dtype=torch.float64)
tensor([-167.6139, -161.0289, -202.3853, -207.5791, -161.3217],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0170, device='cuda:0', dtype=torch.float64)
tensor([-168.4624, -160.7490, -203.2168, -208.2472, -161.4653],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0170, device='cuda:0', dtype=torch.float64)
tensor([-169.5062, -160.5349, -204.1407, -209.0834, -161.7677],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0160, device='cuda:0', dtype=torch.float64)
tensor([-170.7035, -160.4467, -205.5212, -210.3190, -161.9314],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0155, device='cuda:0', dtype=torch.float64)
tensor([-171.7921, -160.4535, -206.6944, -211.3859, -162.1479],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0139, device='cuda:0', dtype=torch.float64)
tensor([-173.0020, -160.5929, -208.3272, -212.7253, -162.1168],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0116, device='cuda:0', dtype=torch.float64)
tensor([-173.6127, -160.7127, -209.1771, -213.4710, -161.9376],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0143, device='cuda:0', dtype=torch.float64)
tensor([-173.8936, -160.8539, -209.7431, -213.9647, -161.6873],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0161, device='cuda:0', dtype=torch.float64)
tensor([-174.1107, -161.1084, -210.4070, -214.5825, -161.2043],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0143, device='cuda:0', dtype=torch.float64)
tensor([-174.3659, -161.4928, -211.2310, -215.3326, -160.7070],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0138, device='cuda:0', dtype=torch.float64)
tensor([-173.7638, -161.6170, -210.5761, -215.0588, -160.3322],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0167, device='cuda:0', dtype=torch.float64)
tensor([-172.3741, -161.7825, -209.0276, -214.0134, -160.0066],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0161, device='cuda:0', dtype=torch.float64)
tensor([-171.0543, -161.8966, -207.4774, -212.8661, -159.8309],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0171, device='cuda:0', dtype=torch.float64)
tensor([-170.4549, -162.0704, -206.8876, -212.4005, -159.7693],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0146, device='cuda:0', dtype=torch.float64)
tensor([-170.3567, -162.1564, -206.9046, -212.3528, -159.7950],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0175, device='cuda:0', dtype=torch.float64)
tensor([-170.5583, -162.3181, -207.4535, -212.7612, -159.7257],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0165, device='cuda:0', dtype=torch.float64)
tensor([-170.4768, -162.4356, -207.4451, -212.7877, -159.7352],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0150, device='cuda:0', dtype=torch.float64)
tensor([-170.3551, -162.6461, -207.6769, -213.0666, -159.5889],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0162, device='cuda:0', dtype=torch.float64)
tensor([-171.4718, -162.4764, -209.3982, -214.5486, -159.4937],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0160, device='cuda:0', dtype=torch.float64)
tensor([-173.2415, -162.4100, -212.0842, -216.6162, -159.5265],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0154, device='cuda:0', dtype=torch.float64)
tensor([-174.3337, -162.2018, -213.6458, -217.7361, -159.6978],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0146, device='cuda:0', dtype=torch.float64)
tensor([-175.0941, -161.9391, -214.8551, -218.5385, -159.8229],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0158, device='cuda:0', dtype=torch.float64)
tensor([-175.8809, -161.7322, -216.1852, -219.3647, -159.9948],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0135, device='cuda:0', dtype=torch.float64)
tensor([-175.2632, -161.4029, -215.7797, -219.0345, -159.8031],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0156, device='cuda:0', dtype=torch.float64)
tensor([-174.0357, -160.7421, -214.2483, -217.8065, -159.5931],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0149, device='cuda:0', dtype=torch.float64)
tensor([-172.8556, -160.3405, -213.0023, -216.8613, -159.3538],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0158, device='cuda:0', dtype=torch.float64)
tensor([-171.8816, -159.8625, -211.6286, -215.7236, -159.2642],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0143, device='cuda:0', dtype=torch.float64)
tensor([-170.7331, -159.4623, -209.8204, -214.1800, -159.3004],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0146, device='cuda:0', dtype=torch.float64)
tensor([-169.6195, -159.0293, -207.5756, -212.1085, -159.7340],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0157, device='cuda:0', dtype=torch.float64)
tensor([-168.9936, -158.7037, -206.2713, -210.9185, -160.0124],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0166, device='cuda:0', dtype=torch.float64)
tensor([-168.0590, -158.6365, -204.5552, -209.3942, -160.2868],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0144, device='cuda:0', dtype=torch.float64)
tensor([-167.4050, -158.7219, -203.5129, -208.5422, -160.3305],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0146, device='cuda:0', dtype=torch.float64)
tensor([-167.3090, -158.7549, -204.0180, -209.1432, -159.8409],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0175, device='cuda:0', dtype=torch.float64)
tensor([-167.5391, -158.7061, -205.1296, -210.3101, -159.2789],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0164, device='cuda:0', dtype=torch.float64)
tensor([-167.2917, -158.8574, -205.2886, -210.5971, -159.0535],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0137, device='cuda:0', dtype=torch.float64)
tensor([-167.7284, -158.7216, -206.7662, -212.0513, -158.5650],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0173, device='cuda:0', dtype=torch.float64)
tensor([-168.7792, -158.5933, -209.0650, -214.1763, -158.1349],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0153, device='cuda:0', dtype=torch.float64)
tensor([-170.4685, -158.7357, -212.2608, -217.0208, -157.8784],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0176, device='cuda:0', dtype=torch.float64)
tensor([-172.1306, -159.0305, -215.2210, -219.3835, -157.9273],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0130, device='cuda:0', dtype=torch.float64)
tensor([-173.4203, -159.3113, -217.4455, -221.0989, -158.0719],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0156, device='cuda:0', dtype=torch.float64)
tensor([-173.8376, -159.3995, -218.2612, -221.6460, -158.1247],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0157, device='cuda:0', dtype=torch.float64)
tensor([-173.9035, -159.3186, -218.2796, -221.4423, -158.1602],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0148, device='cuda:0', dtype=torch.float64)
tensor([-172.9548, -158.8938, -216.7178, -219.9871, -158.0620],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0167, device='cuda:0', dtype=torch.float64)
tensor([-170.8746, -158.2753, -213.2277, -217.1659, -157.9740],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0166, device='cuda:0', dtype=torch.float64)
tensor([-168.7553, -157.8047, -209.3341, -213.8740, -158.3786],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0125, device='cuda:0', dtype=torch.float64)
tensor([-167.0324, -157.9087, -206.3676, -211.2204, -159.0670],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0148, device='cuda:0', dtype=torch.float64)
tensor([-165.6400, -158.4093, -203.5542, -208.6632, -160.1339],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0158, device='cuda:0', dtype=torch.float64)
tensor([-165.0835, -158.8218, -202.3957, -207.5677, -160.8155],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0169, device='cuda:0', dtype=torch.float64)
tensor([-164.7300, -159.2150, -202.0009, -207.2192, -160.9430],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0173, device='cuda:0', dtype=torch.float64)
tensor([-164.8591, -159.1439, -202.4468, -207.7462, -160.5878],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0153, device='cuda:0', dtype=torch.float64)
tensor([-165.1152, -158.9678, -203.2837, -208.6739, -160.0177],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0187, device='cuda:0', dtype=torch.float64)
tensor([-166.0114, -158.6788, -205.2504, -210.5966, -159.1512],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0132, device='cuda:0', dtype=torch.float64)
tensor([-167.0993, -158.5607, -207.2864, -212.5315, -158.4802],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0175, device='cuda:0', dtype=torch.float64)
tensor([-168.2412, -158.5637, -209.3798, -214.4224, -157.9927],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0181, device='cuda:0', dtype=torch.float64)
tensor([-169.4211, -158.6250, -211.1090, -215.8143, -157.8363],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0154, device='cuda:0', dtype=torch.float64)
tensor([-170.5960, -158.6367, -212.5590, -216.8973, -157.8582],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0175, device='cuda:0', dtype=torch.float64)
tensor([-171.6113, -158.5769, -213.6790, -217.6653, -157.9673],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0157, device='cuda:0', dtype=torch.float64)
tensor([-173.0372, -158.6719, -215.6173, -219.0421, -158.0411],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0146, device='cuda:0', dtype=torch.float64)
tensor([-173.5894, -158.5541, -216.3260, -219.4379, -158.1443],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0112, device='cuda:0', dtype=torch.float64)
tensor([-173.3183, -158.3031, -216.0328, -219.1573, -158.1205],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0145, device='cuda:0', dtype=torch.float64)
tensor([-173.1967, -158.1818, -215.8819, -218.9463, -158.1425],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0167, device='cuda:0', dtype=torch.float64)
tensor([-172.1934, -157.9000, -214.3489, -217.7699, -158.1539],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0144, device='cuda:0', dtype=torch.float64)
tensor([-171.1650, -157.6351, -212.9239, -216.6692, -158.1419],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0651, device='cuda:0', dtype=torch.float64)
tensor([-170.6266, -157.6479, -212.2880, -216.1628, -158.1043],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0125, device='cuda:0', dtype=torch.float64)
tensor([-171.0120, -157.7181, -213.1699, -216.7879, -157.9472],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0155, device='cuda:0', dtype=torch.float64)
tensor([-171.4882, -157.9573, -214.5853, -217.7600, -157.7431],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0207, device='cuda:0', dtype=torch.float64)
tensor([-171.6580, -158.2451, -215.4339, -218.4146, -157.5367],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0138, device='cuda:0', dtype=torch.float64)
tensor([-170.9975, -158.3983, -215.1446, -218.2771, -157.3225],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0171, device='cuda:0', dtype=torch.float64)
tensor([-169.5714, -158.5704, -213.8728, -217.4588, -157.0937],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0159, device='cuda:0', dtype=torch.float64)
tensor([-167.4599, -158.6188, -211.1972, -215.5000, -157.1088],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0171, device='cuda:0', dtype=torch.float64)
tensor([-165.9589, -158.9135, -209.5462, -214.2694, -157.1541],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0178, device='cuda:0', dtype=torch.float64)
tensor([-164.2147, -159.4203, -207.1082, -212.2295, -157.6284],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0142, device='cuda:0', dtype=torch.float64)
tensor([-163.3993, -159.8885, -205.7509, -210.9997, -158.1153],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0173, device='cuda:0', dtype=torch.float64)
tensor([-162.7199, -160.5726, -204.6571, -209.9881, -158.6489],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0134, device='cuda:0', dtype=torch.float64)
tensor([-162.3553, -161.1006, -203.7032, -208.9930, -159.2516],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0152, device='cuda:0', dtype=torch.float64)
tensor([-162.2349, -161.4616, -203.2672, -208.5708, -159.5657],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0156, device='cuda:0', dtype=torch.float64)
tensor([-162.2541, -161.5139, -203.3324, -208.7377, -159.5278],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0171, device='cuda:0', dtype=torch.float64)
tensor([-162.2524, -161.5845, -203.4563, -209.0526, -159.4566],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0146, device='cuda:0', dtype=torch.float64)
tensor([-162.3973, -161.3770, -203.7838, -209.5532, -159.1892],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0212, device='cuda:0', dtype=torch.float64)
tensor([-162.9052, -160.8048, -204.9589, -210.9112, -158.4533],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0170, device='cuda:0', dtype=torch.float64)
tensor([-164.1018, -160.1080, -207.1689, -213.0404, -157.5836],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0147, device='cuda:0', dtype=torch.float64)
tensor([-164.8956, -159.8509, -208.5846, -214.3734, -157.2099],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0157, device='cuda:0', dtype=torch.float64)
tensor([-165.1891, -159.8088, -209.2445, -214.9990, -157.0741],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0160, device='cuda:0', dtype=torch.float64)
tensor([-165.2788, -159.7220, -209.3658, -215.0626, -157.1090],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0184, device='cuda:0', dtype=torch.float64)
tensor([-165.2008, -159.6860, -209.4004, -215.1507, -157.1374],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0161, device='cuda:0', dtype=torch.float64)
tensor([-164.9914, -159.6794, -209.2898, -215.2560, -157.2164],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0166, device='cuda:0', dtype=torch.float64)
tensor([-165.2177, -159.6508, -210.2538, -216.4055, -157.0132],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0145, device='cuda:0', dtype=torch.float64)
tensor([-165.7759, -159.7698, -211.8985, -218.2834, -156.6719],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0162, device='cuda:0', dtype=torch.float64)
tensor([-166.3651, -159.9215, -213.3414, -219.9137, -156.4852],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0145, device='cuda:0', dtype=torch.float64)
tensor([-167.5817, -160.2011, -215.5815, -222.0062, -156.3875],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0126, device='cuda:0', dtype=torch.float64)
tensor([-168.3963, -160.5071, -216.7894, -222.9935, -156.4341],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0135, device='cuda:0', dtype=torch.float64)
tensor([-168.8830, -160.7503, -217.2508, -223.2983, -156.5036],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0176, device='cuda:0', dtype=torch.float64)
tensor([-168.4777, -160.2890, -215.3050, -221.2652, -156.6533],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0151, device='cuda:0', dtype=torch.float64)
tensor([-167.6225, -159.7665, -212.5963, -218.5633, -156.9270],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0159, device='cuda:0', dtype=torch.float64)
tensor([-165.8878, -159.4418, -208.5035, -214.6870, -157.7285],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0124, device='cuda:0', dtype=torch.float64)
tensor([-164.8063, -159.5471, -205.4926, -211.8208, -158.7562],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0165, device='cuda:0', dtype=torch.float64)
tensor([-163.8450, -160.1469, -202.5689, -209.0927, -160.1961],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0170, device='cuda:0', dtype=torch.float64)
tensor([-163.3559, -160.9223, -200.3108, -206.9378, -161.7702],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0160, device='cuda:0', dtype=torch.float64)
tensor([-163.2015, -161.4228, -199.2317, -205.9873, -162.6704],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0334, device='cuda:0', dtype=torch.float64)
tensor([-163.1484, -161.6038, -198.6230, -205.5887, -163.1218],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0144, device='cuda:0', dtype=torch.float64)
tensor([-163.2001, -161.1903, -198.7758, -206.1014, -162.7285],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0132, device='cuda:0', dtype=torch.float64)
tensor([-163.2907, -160.4527, -199.4988, -207.1883, -161.8369],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0204, device='cuda:0', dtype=torch.float64)
tensor([-164.0658, -159.1478, -201.6367, -209.7081, -160.0649],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0171, device='cuda:0', dtype=torch.float64)
tensor([-165.9404, -158.0951, -205.8534, -213.9476, -158.0331],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0168, device='cuda:0', dtype=torch.float64)
tensor([-168.1626, -158.0245, -210.4137, -218.3406, -156.9148],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0235, device='cuda:0', dtype=torch.float64)
tensor([-169.6595, -158.2932, -213.4287, -221.1901, -156.5393],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0171, device='cuda:0', dtype=torch.float64)
tensor([-170.8111, -158.5455, -215.5061, -223.0125, -156.4790],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0135, device='cuda:0', dtype=torch.float64)
tensor([-171.7179, -158.5747, -216.8277, -223.9609, -156.5395],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0168, device='cuda:0', dtype=torch.float64)
tensor([-171.6586, -158.0785, -216.0987, -222.9549, -156.6498],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0171, device='cuda:0', dtype=torch.float64)
tensor([-170.8832, -157.6100, -214.7083, -221.5792, -156.7294],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0149, device='cuda:0', dtype=torch.float64)
tensor([-169.4570, -157.0569, -212.4733, -219.6261, -156.8602],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0149, device='cuda:0', dtype=torch.float64)
tensor([-167.9768, -156.8356, -210.6828, -218.0404, -156.9784],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0166, device='cuda:0', dtype=torch.float64)
tensor([-166.8661, -156.7458, -209.5822, -216.9817, -157.0666],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0176, device='cuda:0', dtype=torch.float64)
tensor([-165.8930, -156.6609, -208.2755, -215.7895, -157.3391],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0164, device='cuda:0', dtype=torch.float64)
tensor([-165.3588, -156.6067, -207.7807, -215.3095, -157.3680],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0172, device='cuda:0', dtype=torch.float64)
tensor([-164.3884, -156.7092, -206.7073, -214.4763, -157.3871],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0138, device='cuda:0', dtype=torch.float64)
tensor([-163.4221, -156.9308, -205.4947, -213.5218, -157.5043],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0168, device='cuda:0', dtype=torch.float64)
tensor([-162.6533, -157.2742, -204.5265, -212.7528, -157.5859],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0169, device='cuda:0', dtype=torch.float64)
tensor([-162.3095, -157.5201, -204.3381, -212.6287, -157.4405],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0162, device='cuda:0', dtype=torch.float64)
tensor([-162.2152, -157.6275, -204.7181, -213.0831, -157.0563],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0152, device='cuda:0', dtype=torch.float64)
tensor([-162.1843, -157.6484, -204.9737, -213.4442, -156.7482],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0161, device='cuda:0', dtype=torch.float64)
tensor([-162.4534, -157.4880, -205.8279, -214.3268, -156.2773],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0171, device='cuda:0', dtype=torch.float64)
tensor([-162.8019, -157.2410, -206.7027, -215.1415, -155.8759],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0166, device='cuda:0', dtype=torch.float64)
tensor([-162.8732, -156.9997, -206.7861, -215.0901, -155.7753],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0174, device='cuda:0', dtype=torch.float64)
tensor([-163.1134, -156.7866, -207.1398, -215.2694, -155.6403],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0144, device='cuda:0', dtype=torch.float64)
tensor([-163.2366, -156.6773, -207.3297, -215.3136, -155.5719],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0138, device='cuda:0', dtype=torch.float64)
tensor([-162.9657, -156.7670, -206.8439, -214.8043, -155.7088],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0156, device='cuda:0', dtype=torch.float64)
tensor([-162.9348, -156.9499, -206.5907, -214.5759, -155.7470],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0166, device='cuda:0', dtype=torch.float64)
tensor([-162.8629, -157.1581, -206.4844, -214.4504, -155.7472],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0152, device='cuda:0', dtype=torch.float64)
tensor([-163.0749, -157.2759, -207.0641, -214.8576, -155.5393],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0133, device='cuda:0', dtype=torch.float64)
tensor([-163.4513, -157.3615, -207.6690, -215.2599, -155.3499],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0149, device='cuda:0', dtype=torch.float64)
tensor([-163.7983, -157.4372, -208.1794, -215.5514, -155.2235],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0166, device='cuda:0', dtype=torch.float64)
tensor([-164.4224, -157.5722, -209.3917, -216.5458, -154.9012],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0202, device='cuda:0', dtype=torch.float64)
tensor([-164.9925, -157.7647, -210.5167, -217.5069, -154.6616],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0177, device='cuda:0', dtype=torch.float64)
tensor([-166.0570, -157.9357, -212.3569, -219.0589, -154.3960],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0179, device='cuda:0', dtype=torch.float64)
tensor([-166.7431, -157.9532, -213.4184, -219.6448, -154.3728],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0194, device='cuda:0', dtype=torch.float64)
tensor([-167.6113, -157.9820, -214.6270, -220.4375, -154.3614],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1870, device='cuda:0', dtype=torch.float64)
tensor([-167.7931, -157.9328, -214.6303, -220.2951, -154.3922],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0139, device='cuda:0', dtype=torch.float64)
tensor([-168.0144, -157.8969, -214.6663, -220.1000, -154.4411],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0128, device='cuda:0', dtype=torch.float64)
tensor([-167.9796, -157.8952, -214.3797, -219.8284, -154.4622],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0171, device='cuda:0', dtype=torch.float64)
tensor([-167.1354, -157.7987, -212.7551, -218.4603, -154.5555],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0171, device='cuda:0', dtype=torch.float64)
tensor([-165.6375, -157.8091, -210.0497, -216.1456, -154.8670],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0171, device='cuda:0', dtype=torch.float64)
tensor([-164.5672, -157.9109, -207.8377, -214.2401, -155.3436],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0155, device='cuda:0', dtype=torch.float64)
tensor([-163.8792, -158.1591, -206.4140, -212.9932, -155.7622],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0202, device='cuda:0', dtype=torch.float64)
tensor([-163.8853, -158.1717, -206.0727, -212.6512, -155.9181],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0142, device='cuda:0', dtype=torch.float64)
tensor([-163.7320, -158.1442, -205.5053, -212.1497, -156.1527],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0172, device='cuda:0', dtype=torch.float64)
tensor([-163.7260, -158.0532, -205.4767, -212.1248, -156.2069],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0156, device='cuda:0', dtype=torch.float64)
tensor([-164.2350, -157.7542, -206.4618, -213.0333, -155.8491],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0155, device='cuda:0', dtype=torch.float64)
tensor([-164.9049, -157.5501, -207.9251, -214.3413, -155.3699],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0171, device='cuda:0', dtype=torch.float64)
tensor([-165.6492, -157.3186, -209.2290, -215.4400, -155.0610],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0147, device='cuda:0', dtype=torch.float64)
tensor([-165.7206, -157.2297, -209.6031, -215.8322, -154.9131],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0175, device='cuda:0', dtype=torch.float64)
tensor([-165.7286, -157.1643, -210.0437, -216.2525, -154.7584],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0152, device='cuda:0', dtype=torch.float64)
tensor([-165.8995, -157.0945, -210.6928, -216.8913, -154.6186],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0188, device='cuda:0', dtype=torch.float64)
tensor([-166.1944, -157.1531, -211.7870, -217.9050, -154.4032],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0136, device='cuda:0', dtype=torch.float64)
tensor([-166.3831, -157.0769, -212.4255, -218.5091, -154.3013],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0180, device='cuda:0', dtype=torch.float64)
tensor([-166.3173, -156.9804, -212.5220, -218.7524, -154.2286],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0125, device='cuda:0', dtype=torch.float64)
tensor([-166.6813, -156.9802, -213.4499, -219.7300, -154.0876],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0153, device='cuda:0', dtype=torch.float64)
tensor([-166.6782, -157.1212, -214.2933, -220.6748, -153.9719],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0175, device='cuda:0', dtype=torch.float64)
tensor([-166.6337, -157.3407, -215.2905, -221.9331, -153.7786],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0180, device='cuda:0', dtype=torch.float64)
tensor([-166.4481, -157.3789, -216.0383, -222.8701, -153.6229],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0146, device='cuda:0', dtype=torch.float64)
tensor([-166.1325, -157.3105, -216.6089, -223.8777, -153.4704],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0169, device='cuda:0', dtype=torch.float64)
tensor([-165.8364, -157.3167, -217.1537, -224.7858, -153.3567],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0170, device='cuda:0', dtype=torch.float64)
tensor([-165.2520, -157.3857, -217.2736, -225.3927, -153.2454],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0128, device='cuda:0', dtype=torch.float64)
tensor([-164.8189, -157.4111, -217.4625, -225.9755, -153.1273],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0151, device='cuda:0', dtype=torch.float64)
tensor([-163.7598, -157.4923, -216.6881, -225.8736, -153.0604],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0140, device='cuda:0', dtype=torch.float64)
tensor([-162.7239, -157.4825, -215.6856, -225.5695, -153.0554],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0153, device='cuda:0', dtype=torch.float64)
tensor([-161.6316, -157.4968, -213.9873, -224.3192, -153.2397],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0170, device='cuda:0', dtype=torch.float64)
tensor([-160.3852, -157.7278, -211.6008, -222.0765, -153.7870],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0185, device='cuda:0', dtype=torch.float64)
tensor([-159.1764, -158.2196, -208.9161, -219.3499, -154.7534],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0145, device='cuda:0', dtype=torch.float64)
tensor([-158.5752, -158.5285, -207.1981, -217.2855, -155.5484],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0167, device='cuda:0', dtype=torch.float64)
tensor([-158.2111, -159.0317, -205.5194, -215.1694, -156.4821],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0166, device='cuda:0', dtype=torch.float64)
tensor([-157.9809, -159.4746, -203.7674, -212.7549, -157.5807],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0163, device='cuda:0', dtype=torch.float64)
tensor([-158.0098, -159.4668, -202.8875, -211.3898, -158.1342],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0180, device='cuda:0', dtype=torch.float64)
tensor([-158.0962, -159.3301, -202.1585, -210.1874, -158.5491],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0199, device='cuda:0', dtype=torch.float64)
tensor([-158.2960, -158.4256, -202.4321, -210.1332, -158.0937],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0231, device='cuda:0', dtype=torch.float64)
tensor([-158.4681, -157.5651, -203.0346, -210.5233, -157.5248],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0162, device='cuda:0', dtype=torch.float64)
tensor([-159.0621, -156.3818, -204.7932, -211.9927, -156.4875],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0142, device='cuda:0', dtype=torch.float64)
tensor([-159.7512, -155.6999, -206.3337, -213.2215, -155.8558],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0177, device='cuda:0', dtype=torch.float64)
tensor([-161.1088, -155.1285, -209.2291, -215.5193, -154.9936],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0161, device='cuda:0', dtype=torch.float64)
tensor([-162.4671, -154.9781, -211.9590, -217.5243, -154.4661],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0185, device='cuda:0', dtype=torch.float64)
tensor([-163.9323, -154.9316, -214.6467, -219.4390, -154.1896],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0184, device='cuda:0', dtype=torch.float64)
tensor([-165.3688, -155.0377, -217.2947, -221.4874, -154.0273],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0194, device='cuda:0', dtype=torch.float64)
tensor([-166.2940, -155.2043, -219.1830, -223.1190, -153.9806],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0157, device='cuda:0', dtype=torch.float64)
tensor([-166.9927, -155.4968, -220.9902, -224.8283, -153.9421],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0174, device='cuda:0', dtype=torch.float64)
tensor([-167.1238, -155.8342, -221.9667, -226.0053, -153.8270],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0159, device='cuda:0', dtype=torch.float64)
tensor([-166.5286, -155.9334, -221.6634, -225.9807, -153.6501],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0166, device='cuda:0', dtype=torch.float64)
tensor([-165.0703, -155.6947, -219.7673, -224.6871, -153.4087],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0165, device='cuda:0', dtype=torch.float64)
tensor([-164.1123, -155.6646, -218.7421, -224.1216, -153.2401],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0198, device='cuda:0', dtype=torch.float64)
tensor([-162.7358, -155.6121, -217.0247, -223.1665, -153.0287],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0147, device='cuda:0', dtype=torch.float64)
tensor([-161.5221, -155.6748, -215.6438, -222.5396, -152.8568],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0193, device='cuda:0', dtype=torch.float64)
tensor([-160.4117, -155.7902, -214.2363, -221.7283, -152.8293],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0157, device='cuda:0', dtype=torch.float64)
tensor([-159.4340, -156.0007, -213.1427, -221.2231, -152.8368],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0175, device='cuda:0', dtype=torch.float64)
tensor([-158.9012, -156.1835, -212.6660, -221.1652, -152.8084],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0161, device='cuda:0', dtype=torch.float64)
tensor([-158.6597, -156.2361, -212.7004, -221.4593, -152.7223],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0154, device='cuda:0', dtype=torch.float64)
tensor([-158.5037, -156.2885, -212.5639, -221.6074, -152.6943],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0169, device='cuda:0', dtype=torch.float64)
tensor([-158.7619, -156.1464, -212.9124, -221.9876, -152.6254],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0147, device='cuda:0', dtype=torch.float64)
tensor([-158.8449, -156.0681, -212.9941, -222.2083, -152.5739],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0122, device='cuda:0', dtype=torch.float64)
tensor([-158.9053, -155.8226, -212.7636, -221.9454, -152.6380],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0137, device='cuda:0', dtype=torch.float64)
tensor([-159.1749, -155.6659, -213.1061, -222.2866, -152.5636],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0166, device='cuda:0', dtype=torch.float64)
tensor([-159.6627, -155.4825, -214.0154, -223.1378, -152.4053],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0145, device='cuda:0', dtype=torch.float64)
tensor([-160.4438, -155.3843, -215.5605, -224.4667, -152.2035],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0169, device='cuda:0', dtype=torch.float64)
tensor([-161.0707, -155.2376, -216.5186, -225.1230, -152.1373],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0145, device='cuda:0', dtype=torch.float64)
tensor([-161.2910, -154.9714, -216.8704, -225.3669, -152.0985],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0169, device='cuda:0', dtype=torch.float64)
tensor([-161.5502, -154.7090, -216.8421, -225.1243, -152.1524],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0138, device='cuda:0', dtype=torch.float64)
tensor([-161.4729, -154.4708, -216.3342, -224.5045, -152.2438],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0163, device='cuda:0', dtype=torch.float64)
tensor([-161.5159, -154.2066, -215.8146, -223.6758, -152.4111],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0167, device='cuda:0', dtype=torch.float64)
tensor([-160.9132, -153.9596, -214.2782, -222.2006, -152.6996],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0134, device='cuda:0', dtype=torch.float64)
tensor([-160.0478, -153.8247, -212.1349, -220.3103, -153.1857],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0473, device='cuda:0', dtype=torch.float64)
tensor([-159.2489, -153.9503, -210.3989, -218.7834, -153.6807],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0144, device='cuda:0', dtype=torch.float64)
tensor([-158.9522, -153.9124, -209.5935, -218.0261, -153.9661],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0168, device='cuda:0', dtype=torch.float64)
tensor([-158.5181, -154.0714, -208.3493, -216.7536, -154.4893],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0173, device='cuda:0', dtype=torch.float64)
tensor([-158.1789, -154.3268, -207.2405, -215.6589, -155.0535],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0178, device='cuda:0', dtype=torch.float64)
tensor([-157.8669, -154.5720, -206.4096, -214.8118, -155.5185],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0155, device='cuda:0', dtype=torch.float64)
tensor([-157.6888, -154.6815, -205.8869, -214.2425, -155.8168],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0182, device='cuda:0', dtype=torch.float64)
tensor([-157.5586, -154.7516, -205.7454, -214.2054, -155.7802],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4782, device='cuda:0', dtype=torch.float64)
tensor([-157.6670, -154.8635, -206.5770, -214.9965, -155.1455],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0181, device='cuda:0', dtype=torch.float64)
tensor([-157.6856, -154.9818, -207.5733, -215.8417, -154.4909],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0204, device='cuda:0', dtype=torch.float64)
tensor([-157.9480, -154.7850, -209.3882, -217.5085, -153.4727],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0226, device='cuda:0', dtype=torch.float64)
tensor([-158.0584, -154.7012, -211.0669, -219.0094, -152.6486],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0179, device='cuda:0', dtype=torch.float64)
tensor([-157.9059, -154.7467, -212.1939, -220.1180, -152.1053],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0181, device='cuda:0', dtype=torch.float64)
tensor([-157.7837, -154.8099, -213.4399, -221.3952, -151.5692],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0164, device='cuda:0', dtype=torch.float64)
tensor([-157.7431, -154.9305, -214.7311, -222.7669, -151.0703],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0188, device='cuda:0', dtype=torch.float64)
tensor([-157.9294, -154.8546, -216.1283, -224.2747, -150.5628],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0175, device='cuda:0', dtype=torch.float64)
tensor([-157.8935, -154.9954, -217.1502, -225.4671, -150.1992],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0139, device='cuda:0', dtype=torch.float64)
tensor([-157.7613, -155.0490, -217.4716, -225.9219, -150.0618],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0176, device='cuda:0', dtype=torch.float64)
tensor([-157.4501, -155.0257, -217.2962, -225.9290, -150.0306],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0146, device='cuda:0', dtype=torch.float64)
tensor([-156.9863, -155.1277, -216.7363, -225.5638, -150.1142],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0156, device='cuda:0', dtype=torch.float64)
tensor([-156.6291, -155.1986, -216.4498, -225.4637, -150.1593],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0163, device='cuda:0', dtype=torch.float64)
tensor([-156.5827, -155.1886, -216.8546, -225.8205, -149.9901],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0166, device='cuda:0', dtype=torch.float64)
tensor([-156.4846, -155.1174, -217.0381, -225.9012, -149.8896],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0154, device='cuda:0', dtype=torch.float64)
tensor([-156.4115, -155.0322, -217.0031, -225.7202, -149.8010],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0154, device='cuda:0', dtype=torch.float64)
tensor([-156.4501, -154.8615, -217.3619, -225.9518, -149.5963],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0202, device='cuda:0', dtype=torch.float64)
tensor([-156.8583, -154.6026, -218.4367, -226.6553, -149.2905],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0168, device='cuda:0', dtype=torch.float64)
tensor([-157.6422, -154.2388, -219.7169, -227.5637, -149.0218],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0167, device='cuda:0', dtype=torch.float64)
tensor([-158.3302, -153.9476, -220.3851, -227.7983, -148.9388],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0167, device='cuda:0', dtype=torch.float64)
tensor([-158.7194, -153.6099, -220.5196, -227.6463, -148.9479],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0156, device='cuda:0', dtype=torch.float64)
tensor([-159.4276, -153.2553, -221.1492, -227.8212, -148.9681],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0151, device='cuda:0', dtype=torch.float64)
tensor([-159.7615, -152.8550, -220.9950, -227.2722, -149.0843],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0182, device='cuda:0', dtype=torch.float64)
tensor([-159.7933, -152.5977, -220.3963, -226.4896, -149.2146],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0144, device='cuda:0', dtype=torch.float64)
tensor([-159.5359, -152.3956, -219.6138, -225.6354, -149.3477],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0250, device='cuda:0', dtype=torch.float64)
tensor([-159.1821, -152.2677, -218.7444, -224.8433, -149.4904],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0158, device='cuda:0', dtype=torch.float64)
tensor([-158.9125, -152.1359, -217.9515, -224.2483, -149.6516],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0169, device='cuda:0', dtype=torch.float64)
tensor([-158.7410, -152.1423, -217.4245, -223.9241, -149.7547],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0174, device='cuda:0', dtype=torch.float64)
tensor([-158.6323, -152.1459, -217.2050, -224.0199, -149.7918],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0155, device='cuda:0', dtype=torch.float64)
tensor([-158.5405, -152.0933, -217.0505, -224.2594, -149.8570],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0131, device='cuda:0', dtype=torch.float64)
tensor([-158.5477, -152.0786, -217.1429, -224.6251, -149.8624],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0161, device='cuda:0', dtype=torch.float64)
tensor([-158.7507, -152.0573, -217.4331, -225.0203, -149.8276],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0171, device='cuda:0', dtype=torch.float64)
tensor([-159.3951, -152.0101, -218.3705, -226.0134, -149.7367],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0187, device='cuda:0', dtype=torch.float64)
tensor([-159.6607, -152.0971, -218.6352, -226.4386, -149.7549],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0188, device='cuda:0', dtype=torch.float64)
tensor([-159.4016, -152.2861, -218.1241, -226.3713, -149.8606],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0182, device='cuda:0', dtype=torch.float64)
tensor([-159.0742, -152.4799, -216.9633, -225.4614, -150.1165],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0171, device='cuda:0', dtype=torch.float64)
tensor([-158.6002, -152.6858, -215.4710, -224.2478, -150.5485],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0175, device='cuda:0', dtype=torch.float64)
tensor([-158.1295, -152.9489, -213.8285, -222.8945, -151.1496],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0139, device='cuda:0', dtype=torch.float64)
tensor([-157.7762, -153.3279, -212.5264, -221.9240, -151.7047],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0160, device='cuda:0', dtype=torch.float64)
tensor([-157.4738, -153.7779, -211.6615, -221.3134, -152.0830],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0195, device='cuda:0', dtype=torch.float64)
tensor([-157.1769, -154.1365, -210.7506, -220.6166, -152.5574],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0193, device='cuda:0', dtype=torch.float64)
tensor([-157.1636, -154.0717, -210.6090, -220.4250, -152.6560],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0169, device='cuda:0', dtype=torch.float64)
tensor([-156.9696, -154.3625, -209.8999, -219.7407, -153.0627],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0177, device='cuda:0', dtype=torch.float64)
tensor([-156.8409, -154.6978, -209.2779, -219.0946, -153.4162],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0166, device='cuda:0', dtype=torch.float64)
tensor([-156.9163, -154.5686, -209.4068, -219.1284, -153.3561],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0210, device='cuda:0', dtype=torch.float64)
tensor([-156.9408, -154.3732, -209.9634, -219.5321, -152.9914],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0183, device='cuda:0', dtype=torch.float64)
tensor([-157.0237, -154.2400, -210.4115, -219.9737, -152.7012],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0169, device='cuda:0', dtype=torch.float64)
tensor([-157.1690, -153.9382, -211.1649, -220.6267, -152.2621],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0193, device='cuda:0', dtype=torch.float64)
tensor([-157.2285, -153.8092, -211.5526, -221.0514, -151.9736],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0162, device='cuda:0', dtype=torch.float64)
tensor([-157.4618, -153.5212, -212.2175, -221.6707, -151.5502],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0154, device='cuda:0', dtype=torch.float64)
tensor([-157.6624, -153.2142, -212.6113, -222.0919, -151.2963],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0180, device='cuda:0', dtype=torch.float64)
tensor([-157.5585, -153.1404, -212.3289, -222.0231, -151.3319],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0193, device='cuda:0', dtype=torch.float64)
tensor([-157.3715, -152.9956, -211.8458, -221.7109, -151.4555],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0166, device='cuda:0', dtype=torch.float64)
tensor([-157.1623, -152.9204, -211.6783, -221.8049, -151.5051],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0173, device='cuda:0', dtype=torch.float64)
tensor([-157.3508, -152.3342, -212.0787, -222.3422, -151.2787],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0154, device='cuda:0', dtype=torch.float64)
tensor([-157.5934, -151.8120, -212.7479, -223.3032, -150.9345],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0166, device='cuda:0', dtype=torch.float64)
tensor([-157.9312, -151.3220, -213.4236, -224.2730, -150.6109],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0173, device='cuda:0', dtype=torch.float64)
tensor([-158.1521, -151.0405, -213.5489, -224.5660, -150.5015],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0151, device='cuda:0', dtype=torch.float64)
tensor([-158.6067, -150.7136, -213.8901, -225.0074, -150.3293],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0186, device='cuda:0', dtype=torch.float64)
tensor([-159.2625, -150.4316, -214.2353, -225.2846, -150.1733],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0191, device='cuda:0', dtype=torch.float64)
tensor([-159.8362, -150.1762, -214.6795, -225.8114, -150.0017],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0166, device='cuda:0', dtype=torch.float64)
tensor([-159.9011, -150.2228, -214.6052, -225.8886, -149.9236],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0183, device='cuda:0', dtype=torch.float64)
tensor([-159.7459, -150.4315, -214.6067, -226.0458, -149.8264],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0132, device='cuda:0', dtype=torch.float64)
tensor([-159.6325, -150.6073, -214.8609, -226.3948, -149.6642],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0614, device='cuda:0', dtype=torch.float64)
tensor([-159.5475, -150.6553, -215.0543, -226.7325, -149.5377],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1090, device='cuda:0', dtype=torch.float64)
tensor([-159.2552, -150.8215, -214.9597, -226.8173, -149.5016],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0154, device='cuda:0', dtype=torch.float64)
tensor([-159.4329, -150.7246, -215.4964, -227.6583, -149.3338],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2228, device='cuda:0', dtype=torch.float64)
tensor([-159.3124, -150.8164, -215.7240, -228.0411, -149.2297],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0144, device='cuda:0', dtype=torch.float64)
tensor([-159.2202, -151.0001, -216.1050, -228.6282, -149.0909],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0603, device='cuda:0', dtype=torch.float64)
tensor([-159.3998, -151.2101, -216.7459, -229.4058, -148.9072],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0169, device='cuda:0', dtype=torch.float64)
tensor([-159.2911, -151.3488, -216.7377, -229.5793, -148.8456],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0175, device='cuda:0', dtype=torch.float64)
tensor([-159.0048, -151.6042, -216.6609, -229.7927, -148.7919],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0161, device='cuda:0', dtype=torch.float64)
tensor([-158.8380, -151.7719, -216.6226, -229.8941, -148.7522],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0160, device='cuda:0', dtype=torch.float64)
tensor([-158.9922, -151.7502, -216.8439, -230.1538, -148.6774],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0141, device='cuda:0', dtype=torch.float64)
tensor([-158.6828, -151.7901, -216.4012, -229.6848, -148.7461],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0169, device='cuda:0', dtype=torch.float64)
tensor([-158.1187, -152.0571, -215.5663, -228.8617, -148.9530],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0160, device='cuda:0', dtype=torch.float64)
tensor([-157.4161, -152.5377, -214.6634, -227.7563, -149.2782],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0448, device='cuda:0', dtype=torch.float64)
tensor([-156.7090, -153.1059, -213.2737, -225.9637, -149.8951],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0138, device='cuda:0', dtype=torch.float64)
tensor([-156.4314, -153.4829, -212.5988, -225.0025, -150.2886],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0178, device='cuda:0', dtype=torch.float64)
tensor([-156.3165, -153.8802, -212.2095, -224.4865, -150.5192],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0177, device='cuda:0', dtype=torch.float64)
tensor([-156.0241, -154.6296, -211.2790, -223.3319, -151.1303],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0155, device='cuda:0', dtype=torch.float64)
tensor([-155.8233, -155.1454, -210.8083, -222.7042, -151.4605],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0173, device='cuda:0', dtype=torch.float64)
tensor([-155.8114, -155.3983, -210.3555, -222.1051, -151.7421],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0177, device='cuda:0', dtype=torch.float64)
tensor([-155.6635, -156.2682, -209.2986, -220.7998, -152.4909],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0151, device='cuda:0', dtype=torch.float64)
tensor([-155.5524, -156.9255, -209.0083, -220.4972, -152.7404],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0175, device='cuda:0', dtype=torch.float64)
tensor([-155.3917, -157.3893, -208.7821, -220.3500, -152.8916],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0194, device='cuda:0', dtype=torch.float64)
tensor([-155.2579, -157.5183, -208.7594, -220.4858, -152.8178],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0163, device='cuda:0', dtype=torch.float64)
tensor([-155.2439, -157.0544, -209.4596, -221.5585, -152.0645],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0199, device='cuda:0', dtype=torch.float64)
tensor([-155.3201, -156.3491, -210.7939, -223.2894, -150.9274],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0166, device='cuda:0', dtype=torch.float64)
tensor([-155.6425, -155.4675, -212.8404, -225.9273, -149.5888],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0148, device='cuda:0', dtype=torch.float64)
tensor([-156.0974, -154.8465, -214.7716, -228.2543, -148.6286],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0171, device='cuda:0', dtype=torch.float64)
tensor([-156.6516, -154.5143, -216.5307, -230.5842, -147.9839],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0190, device='cuda:0', dtype=torch.float64)
tensor([-157.1931, -154.4270, -218.0406, -232.5426, -147.5521],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0145, device='cuda:0', dtype=torch.float64)
tensor([-157.7190, -154.2270, -219.0860, -233.7701, -147.2892],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0189, device='cuda:0', dtype=torch.float64)
tensor([-158.1422, -154.0576, -219.9230, -235.0850, -147.1383],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0179, device='cuda:0', dtype=torch.float64)
tensor([-158.1168, -154.2258, -220.3181, -236.0565, -147.0874],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0144, device='cuda:0', dtype=torch.float64)
tensor([-157.9128, -154.4325, -220.5094, -236.7367, -147.1102],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0155, device='cuda:0', dtype=torch.float64)
tensor([-157.7092, -154.5425, -220.4404, -236.9832, -147.1418],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0852, device='cuda:0', dtype=torch.float64)
tensor([-157.4122, -154.5629, -220.2415, -237.1241, -147.1855],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0153, device='cuda:0', dtype=torch.float64)
tensor([-156.8296, -154.4838, -219.6666, -236.8327, -147.3196],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0138, device='cuda:0', dtype=torch.float64)
tensor([-156.4221, -154.2605, -219.0856, -236.3631, -147.4446],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0175, device='cuda:0', dtype=torch.float64)
tensor([-155.5665, -154.2063, -217.7531, -235.0056, -147.7938],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0157, device='cuda:0', dtype=torch.float64)
tensor([-154.8731, -154.2321, -216.6742, -233.8695, -148.1703],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0165, device='cuda:0', dtype=torch.float64)
tensor([-154.3109, -154.4425, -215.7117, -232.8651, -148.6070],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0184, device='cuda:0', dtype=torch.float64)
tensor([-153.8092, -154.6395, -214.3140, -231.2904, -149.2539],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0494, device='cuda:0', dtype=torch.float64)
tensor([-153.1187, -155.0345, -212.1707, -228.8177, -150.3767],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0165, device='cuda:0', dtype=torch.float64)
tensor([-152.6285, -155.7994, -210.2075, -226.5686, -151.7036],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0175, device='cuda:0', dtype=torch.float64)
tensor([-152.3642, -156.1670, -209.1451, -225.4792, -152.5346],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0165, device='cuda:0', dtype=torch.float64)
tensor([-152.2324, -156.1158, -208.7723, -225.2295, -152.8101],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0183, device='cuda:0', dtype=torch.float64)
tensor([-152.1074, -156.3261, -208.2956, -224.9269, -153.3002],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0186, device='cuda:0', dtype=torch.float64)
tensor([-152.0173, -156.0947, -208.5073, -225.6284, -153.1958],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0179, device='cuda:0', dtype=torch.float64)
tensor([-152.0128, -155.2979, -209.5245, -227.5475, -152.4166],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0181, device='cuda:0', dtype=torch.float64)
tensor([-152.0270, -154.9877, -210.3604, -229.2629, -151.9763],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0215, device='cuda:0', dtype=torch.float64)
tensor([-151.9770, -154.9998, -210.9533, -230.5571, -151.7389],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0177, device='cuda:0', dtype=torch.float64)
tensor([-152.1742, -154.4122, -212.4556, -232.8643, -150.8962],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0156, device='cuda:0', dtype=torch.float64)
tensor([-152.5525, -153.8608, -214.2385, -235.3685, -150.0342],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0149, device='cuda:0', dtype=torch.float64)
tensor([-152.9305, -153.5877, -215.4670, -236.8887, -149.5573],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0226, device='cuda:0', dtype=torch.float64)
tensor([-153.3780, -153.4537, -217.0412, -238.7756, -149.0603],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0168, device='cuda:0', dtype=torch.float64)
tensor([-153.5685, -153.5243, -217.3173, -238.9358, -148.9910],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0190, device='cuda:0', dtype=torch.float64)
tensor([-153.4984, -153.6984, -216.8448, -238.2122, -149.1140],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0142, device='cuda:0', dtype=torch.float64)
tensor([-153.1265, -154.0600, -215.8359, -237.1441, -149.4578],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0160, device='cuda:0', dtype=torch.float64)
tensor([-152.8016, -154.4644, -214.6546, -235.7648, -149.9327],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0190, device='cuda:0', dtype=torch.float64)
tensor([-152.4633, -155.1814, -213.1920, -234.0891, -150.6177],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0149, device='cuda:0', dtype=torch.float64)
tensor([-152.0942, -155.8568, -211.9686, -232.7353, -151.2272],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0172, device='cuda:0', dtype=torch.float64)
tensor([-151.9561, -156.3195, -211.0643, -231.3598, -151.6162],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0154, device='cuda:0', dtype=torch.float64)
tensor([-151.7991, -157.0365, -210.0342, -230.0395, -152.2874],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0176, device='cuda:0', dtype=torch.float64)
tensor([-151.6684, -157.9671, -208.9560, -228.6622, -153.1812],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0185, device='cuda:0', dtype=torch.float64)
tensor([-151.7418, -158.5552, -208.5365, -227.9860, -153.6729],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0185, device='cuda:0', dtype=torch.float64)
tensor([-151.7450, -158.4540, -208.8395, -228.2266, -153.4494],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0168, device='cuda:0', dtype=torch.float64)
tensor([-151.8647, -158.3091, -209.0196, -228.1151, -153.2868],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0177, device='cuda:0', dtype=torch.float64)
tensor([-151.9506, -157.9480, -209.6648, -228.7335, -152.8461],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0179, device='cuda:0', dtype=torch.float64)
tensor([-152.0743, -157.2688, -210.3520, -229.4050, -152.3284],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0726, device='cuda:0', dtype=torch.float64)
tensor([-152.2228, -156.4869, -211.1340, -230.4305, -151.8147],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0154, device='cuda:0', dtype=torch.float64)
tensor([-152.3953, -155.9768, -211.9107, -231.6663, -151.4317],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0206, device='cuda:0', dtype=torch.float64)
tensor([-152.4847, -155.3193, -212.6796, -232.7872, -151.0670],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0273, device='cuda:0', dtype=torch.float64)
tensor([-152.6138, -154.6307, -213.0529, -233.2305, -150.8119],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0179, device='cuda:0', dtype=torch.float64)
tensor([-152.7628, -154.1794, -213.3027, -233.6317, -150.6413],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0170, device='cuda:0', dtype=torch.float64)
tensor([-152.9387, -153.7040, -213.4025, -233.7763, -150.5353],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0185, device='cuda:0', dtype=torch.float64)
tensor([-153.1847, -152.8665, -214.2734, -234.7973, -150.0629],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0192, device='cuda:0', dtype=torch.float64)
tensor([-153.3516, -152.2825, -214.8175, -235.4999, -149.7816],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0211, device='cuda:0', dtype=torch.float64)
tensor([-153.7364, -151.4975, -216.0832, -236.8414, -149.2364],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0164, device='cuda:0', dtype=torch.float64)
tensor([-153.9351, -151.0755, -217.0247, -237.9971, -148.9219],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0162, device='cuda:0', dtype=torch.float64)
tensor([-153.9667, -150.7854, -217.3939, -238.3938, -148.7337],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0184, device='cuda:0', dtype=torch.float64)
tensor([-153.9537, -150.3790, -217.7256, -238.7807, -148.6128],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0176, device='cuda:0', dtype=torch.float64)
tensor([-153.8430, -150.1579, -217.9974, -239.0339, -148.5044],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0161, device='cuda:0', dtype=torch.float64)
tensor([-153.7099, -149.9365, -218.1481, -239.0747, -148.4182],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0156, device='cuda:0', dtype=torch.float64)
tensor([-153.6194, -149.7180, -218.4497, -239.4558, -148.2800],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0159, device='cuda:0', dtype=torch.float64)
tensor([-153.4973, -149.5880, -218.5636, -239.3746, -148.1992],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0173, device='cuda:0', dtype=torch.float64)
tensor([-153.2420, -149.6260, -218.1427, -238.7559, -148.2887],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0143, device='cuda:0', dtype=torch.float64)
tensor([-152.7805, -149.6845, -217.3770, -237.9605, -148.5406],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0179, device='cuda:0', dtype=torch.float64)
tensor([-152.2908, -149.8974, -216.6022, -237.1751, -148.8673],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0448, device='cuda:0', dtype=torch.float64)
tensor([-151.9488, -150.0219, -216.4762, -237.1657, -148.9795],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0171, device='cuda:0', dtype=torch.float64)
tensor([-151.7468, -149.8955, -216.5206, -237.0445, -149.0160],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0149, device='cuda:0', dtype=torch.float64)
tensor([-151.6128, -149.7785, -216.6861, -237.1309, -148.9903],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0600, device='cuda:0', dtype=torch.float64)
tensor([-151.0330, -150.1288, -215.7820, -236.1310, -149.4161],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0169, device='cuda:0', dtype=torch.float64)
tensor([-150.6655, -150.4839, -214.9641, -235.0997, -149.8283],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0203, device='cuda:0', dtype=torch.float64)
tensor([-150.4239, -150.5997, -214.7531, -234.8476, -149.9679],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0187, device='cuda:0', dtype=torch.float64)
tensor([-150.2998, -150.5190, -214.6226, -234.5647, -150.0496],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0172, device='cuda:0', dtype=torch.float64)
tensor([-150.1747, -150.6289, -214.4254, -234.0953, -150.2184],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0152, device='cuda:0', dtype=torch.float64)
tensor([-149.9750, -151.0085, -214.1118, -233.8426, -150.5291],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0517, device='cuda:0', dtype=torch.float64)
tensor([-149.8103, -151.3727, -213.8092, -233.6613, -150.9298],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0194, device='cuda:0', dtype=torch.float64)
tensor([-149.6430, -151.8551, -213.3539, -233.4058, -151.5275],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0184, device='cuda:0', dtype=torch.float64)
tensor([-149.4970, -152.2421, -213.2577, -233.3706, -151.8968],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0212, device='cuda:0', dtype=torch.float64)
tensor([-149.4228, -152.4042, -213.3529, -233.3932, -152.0613],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0171, device='cuda:0', dtype=torch.float64)
tensor([-149.3075, -152.1201, -213.6002, -233.6862, -152.0105],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0197, device='cuda:0', dtype=torch.float64)
tensor([-149.1390, -151.9932, -213.4546, -233.5841, -152.2570],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0192, device='cuda:0', dtype=torch.float64)
tensor([-148.9120, -152.1175, -213.5693, -233.9648, -152.3724],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0161, device='cuda:0', dtype=torch.float64)
tensor([-148.7389, -152.0108, -213.6427, -234.2821, -152.4296],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0148, device='cuda:0', dtype=torch.float64)
tensor([-148.6466, -151.7685, -213.6605, -234.3782, -152.5062],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0151, device='cuda:0', dtype=torch.float64)
tensor([-148.5767, -151.5162, -213.3494, -233.8163, -152.7796],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0233, device='cuda:0', dtype=torch.float64)
tensor([-148.5197, -150.3212, -213.4547, -233.8586, -152.4193],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0178, device='cuda:0', dtype=torch.float64)
tensor([-148.4641, -149.3298, -213.6604, -234.4501, -152.0881],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0225, device='cuda:0', dtype=torch.float64)
tensor([-148.5277, -147.7584, -214.5438, -235.6772, -151.1521],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0179, device='cuda:0', dtype=torch.float64)
tensor([-148.5305, -146.6658, -214.9169, -236.1155, -150.7233],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0165, device='cuda:0', dtype=torch.float64)
tensor([-148.7151, -145.4606, -215.7137, -237.2350, -150.0437],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0735, device='cuda:0', dtype=torch.float64)
tensor([-148.9014, -144.6159, -216.1497, -237.5591, -149.7048],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0195, device='cuda:0', dtype=torch.float64)
tensor([-148.8109, -144.6519, -216.0835, -237.4431, -149.8093],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0183, device='cuda:0', dtype=torch.float64)
tensor([-148.6956, -144.7856, -216.0692, -237.4075, -149.9220],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0162, device='cuda:0', dtype=torch.float64)
tensor([-148.5591, -144.9757, -216.1485, -237.4994, -149.9955],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0186, device='cuda:0', dtype=torch.float64)
tensor([-148.4777, -145.0533, -216.5335, -238.2255, -149.8206],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0173, device='cuda:0', dtype=torch.float64)
tensor([-148.3605, -145.2644, -217.0115, -239.0582, -149.6030],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0185, device='cuda:0', dtype=torch.float64)
tensor([-148.3438, -145.3384, -218.0479, -240.6512, -149.0851],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0167, device='cuda:0', dtype=torch.float64)
tensor([-148.1402, -145.9148, -218.7065, -241.8491, -148.9055],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0160, device='cuda:0', dtype=torch.float64)
tensor([-147.8770, -146.5484, -219.2900, -242.9706, -148.7950],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0200, device='cuda:0', dtype=torch.float64)
tensor([-147.3799, -147.5503, -219.3919, -243.5786, -149.0675],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0144, device='cuda:0', dtype=torch.float64)
tensor([-147.0834, -148.2245, -219.7320, -244.3577, -149.1850],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0726, device='cuda:0', dtype=torch.float64)
tensor([-146.7712, -148.8592, -219.5637, -244.0745, -149.5294],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0162, device='cuda:0', dtype=torch.float64)
tensor([-146.4779, -149.1828, -219.4154, -243.8254, -149.8072],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0195, device='cuda:0', dtype=torch.float64)
tensor([-146.1878, -149.5874, -218.8857, -242.7789, -150.3009],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0156, device='cuda:0', dtype=torch.float64)
tensor([-146.0338, -149.5534, -218.9592, -242.5529, -150.3312],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0191, device='cuda:0', dtype=torch.float64)
tensor([-146.0140, -149.1088, -219.1019, -242.4081, -150.1756],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0151, device='cuda:0', dtype=torch.float64)
tensor([-145.8267, -149.0029, -218.9387, -241.8862, -150.2901],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0224, device='cuda:0', dtype=torch.float64)
tensor([-145.5532, -149.2515, -218.5763, -241.3660, -150.6317],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0182, device='cuda:0', dtype=torch.float64)
tensor([-145.4641, -149.3304, -218.3354, -240.9655, -150.8144],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0171, device='cuda:0', dtype=torch.float64)
tensor([-145.2531, -149.4465, -218.3393, -240.8959, -150.8596],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0152, device='cuda:0', dtype=torch.float64)
tensor([-145.1566, -149.3737, -218.8080, -241.4801, -150.5423],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0154, device='cuda:0', dtype=torch.float64)
tensor([-145.0493, -149.5752, -218.8543, -241.7350, -150.5403],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0146, device='cuda:0', dtype=torch.float64)
tensor([-144.8916, -149.7426, -219.0057, -242.3425, -150.4435],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0312, device='cuda:0', dtype=torch.float64)
tensor([-144.7300, -149.4153, -219.7640, -243.7689, -149.8856],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0167, device='cuda:0', dtype=torch.float64)
tensor([-144.6019, -149.2416, -220.4839, -245.3042, -149.4246],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0173, device='cuda:0', dtype=torch.float64)
tensor([-144.6539, -148.6712, -221.3036, -246.8497, -148.8355],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0172, device='cuda:0', dtype=torch.float64)
tensor([-144.7293, -148.2847, -222.1609, -248.5265, -148.3419],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0180, device='cuda:0', dtype=torch.float64)
tensor([-145.0295, -147.9851, -223.5170, -250.8902, -147.7936],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0163, device='cuda:0', dtype=torch.float64)
tensor([-145.0223, -148.0812, -223.9568, -251.9835, -147.6849],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0195, device='cuda:0', dtype=torch.float64)
tensor([-144.6332, -148.3545, -223.5988, -252.1583, -147.9128],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0182, device='cuda:0', dtype=torch.float64)
tensor([-144.1587, -149.1131, -223.1496, -252.5454, -148.3367],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0141, device='cuda:0', dtype=torch.float64)
tensor([-143.9436, -149.6104, -223.2296, -253.6641, -148.5715],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0162, device='cuda:0', dtype=torch.float64)
tensor([-143.7639, -150.3198, -223.4641, -254.8495, -148.8473],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0183, device='cuda:0', dtype=torch.float64)
tensor([-143.7919, -150.7580, -224.1735, -256.7715, -148.8078],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0208, device='cuda:0', dtype=torch.float64)
tensor([-143.9629, -151.1805, -224.5470, -258.1186, -148.8943],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0189, device='cuda:0', dtype=torch.float64)
tensor([-144.0921, -151.5462, -224.3866, -258.1230, -149.1080],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0160, device='cuda:0', dtype=torch.float64)
tensor([-144.1038, -152.3062, -223.5814, -257.0450, -149.6756],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0138, device='cuda:0', dtype=torch.float64)
tensor([-144.1101, -153.0216, -223.0562, -256.4658, -150.2280],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0177, device='cuda:0', dtype=torch.float64)
tensor([-144.1925, -153.4870, -222.4715, -255.5937, -150.7916],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0173, device='cuda:0', dtype=torch.float64)
tensor([-144.3518, -154.1128, -221.8457, -254.1964, -151.4459],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0158, device='cuda:0', dtype=torch.float64)
tensor([-144.4583, -154.4476, -221.3444, -252.8929, -151.9122],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0151, device='cuda:0', dtype=torch.float64)
tensor([-144.5403, -155.4907, -220.1312, -250.6994, -153.0136],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0193, device='cuda:0', dtype=torch.float64)
tensor([-144.7440, -156.0124, -219.4679, -249.5223, -153.6881],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0189, device='cuda:0', dtype=torch.float64)
tensor([-144.8695, -156.9438, -218.8848, -248.3134, -154.5268],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0165, device='cuda:0', dtype=torch.float64)
tensor([-144.9341, -157.2239, -218.5754, -247.2245, -154.9095],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0153, device='cuda:0', dtype=torch.float64)
tensor([-145.0276, -157.5911, -218.2717, -246.3000, -155.3844],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0169, device='cuda:0', dtype=torch.float64)
tensor([-145.1574, -158.6948, -217.6142, -245.1054, -156.5529],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0162, device='cuda:0', dtype=torch.float64)
tensor([-145.1646, -158.4212, -217.6189, -244.5500, -156.6465],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0254, device='cuda:0', dtype=torch.float64)
tensor([-145.0655, -156.6423, -218.4262, -244.9230, -155.4797],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0162, device='cuda:0', dtype=torch.float64)
tensor([-145.0301, -155.3034, -218.9328, -244.7111, -154.7177],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0171, device='cuda:0', dtype=torch.float64)
tensor([-145.0342, -154.4911, -219.1611, -244.0863, -154.2907],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0168, device='cuda:0', dtype=torch.float64)
tensor([-145.0565, -152.7656, -220.2595, -244.9019, -153.0525],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0140, device='cuda:0', dtype=torch.float64)
tensor([-145.1515, -151.2897, -220.9896, -245.3767, -152.2962],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0156, device='cuda:0', dtype=torch.float64)
tensor([-145.2444, -150.3603, -221.3520, -245.4348, -151.9932],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0163, device='cuda:0', dtype=torch.float64)
tensor([-145.3022, -149.8674, -221.2229, -245.2547, -152.1245],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0193, device='cuda:0', dtype=torch.float64)
tensor([-145.2075, -149.8561, -220.6294, -244.7280, -152.6001],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0859, device='cuda:0', dtype=torch.float64)
tensor([-145.1308, -150.1817, -219.8569, -243.3875, -153.3332],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0148, device='cuda:0', dtype=torch.float64)
tensor([-145.0471, -150.7496, -218.8784, -241.7840, -154.3272],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0158, device='cuda:0', dtype=torch.float64)
tensor([-144.9989, -151.6601, -218.0563, -240.4813, -155.3861],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0172, device='cuda:0', dtype=torch.float64)
tensor([-144.9842, -152.1443, -217.3649, -239.2409, -156.3339],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0192, device='cuda:0', dtype=torch.float64)
tensor([-145.0592, -152.7812, -216.8082, -238.2131, -157.3055],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0184, device='cuda:0', dtype=torch.float64)
tensor([-145.0998, -153.4974, -216.5020, -237.8688, -158.0494],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0195, device='cuda:0', dtype=torch.float64)
tensor([-145.0047, -153.3456, -216.6439, -238.0708, -158.0718],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0167, device='cuda:0', dtype=torch.float64)
tensor([-144.7748, -152.8218, -217.0712, -238.7576, -157.6223],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0152, device='cuda:0', dtype=torch.float64)
tensor([-144.4678, -152.2317, -217.7493, -240.0423, -156.8049],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0161, device='cuda:0', dtype=torch.float64)
tensor([-144.1378, -151.4736, -218.7489, -241.5975, -155.6705],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0177, device='cuda:0', dtype=torch.float64)
tensor([-143.8678, -151.6700, -219.1300, -242.2202, -155.3562],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0152, device='cuda:0', dtype=torch.float64)
tensor([-143.5889, -151.5673, -219.7658, -243.1724, -154.7884],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0184, device='cuda:0', dtype=torch.float64)
tensor([-143.4119, -151.4970, -220.3054, -243.9348, -154.2912],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0180, device='cuda:0', dtype=torch.float64)
tensor([-143.2303, -151.6142, -220.8083, -244.6279, -153.8665],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0147, device='cuda:0', dtype=torch.float64)
tensor([-143.0776, -151.7743, -221.4043, -245.2886, -153.4201],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0163, device='cuda:0', dtype=torch.float64)
tensor([-142.8333, -152.6099, -221.4204, -245.2430, -153.6824],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0223, device='cuda:0', dtype=torch.float64)
tensor([-142.5371, -153.1978, -221.5165, -245.2283, -153.9273],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0174, device='cuda:0', dtype=torch.float64)
tensor([-142.2602, -154.3067, -221.3232, -244.3518, -154.5986],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0169, device='cuda:0', dtype=torch.float64)
tensor([-142.0087, -155.5644, -221.0773, -243.5388, -155.3584],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0181, device='cuda:0', dtype=torch.float64)
tensor([-141.8656, -157.6185, -220.4742, -242.5393, -156.7988],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0347, device='cuda:0', dtype=torch.float64)
tensor([-141.8986, -160.3327, -219.8601, -241.5889, -158.7118],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0176, device='cuda:0', dtype=torch.float64)
tensor([-142.1193, -163.5951, -219.1803, -240.8428, -161.2721],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0155, device='cuda:0', dtype=torch.float64)
tensor([-142.2911, -166.1814, -218.8902, -240.5886, -163.3179],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0163, device='cuda:0', dtype=torch.float64)
tensor([-142.3501, -168.0037, -218.9224, -240.4077, -164.6631],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0142, device='cuda:0', dtype=torch.float64)
tensor([-142.5076, -169.6831, -219.0874, -240.3439, -165.8150],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0177, device='cuda:0', dtype=torch.float64)
tensor([-142.5827, -170.5823, -219.4480, -240.3522, -166.2529],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0157, device='cuda:0', dtype=torch.float64)
tensor([-142.5326, -171.4392, -219.8195, -240.5794, -166.7196],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0175, device='cuda:0', dtype=torch.float64)
tensor([-142.4187, -171.1054, -220.5796, -241.4106, -166.1075],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0168, device='cuda:0', dtype=torch.float64)
tensor([-142.2219, -170.4052, -221.3611, -242.3871, -165.2419],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0180, device='cuda:0', dtype=torch.float64)
tensor([-141.8742, -168.4292, -222.4666, -243.4435, -163.2032],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0521, device='cuda:0', dtype=torch.float64)
tensor([-141.6023, -166.9019, -223.4715, -244.4014, -161.4799],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0200, device='cuda:0', dtype=torch.float64)
tensor([-141.4183, -164.8142, -224.6298, -245.1942, -159.4522],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0153, device='cuda:0', dtype=torch.float64)
tensor([-141.3813, -162.5804, -225.8151, -245.8166, -157.5470],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0177, device='cuda:0', dtype=torch.float64)
tensor([-141.4322, -161.0863, -226.4729, -246.1711, -156.4798],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0187, device='cuda:0', dtype=torch.float64)
tensor([-141.5522, -159.9466, -227.1004, -246.6651, -155.6485],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0153, device='cuda:0', dtype=torch.float64)
tensor([-141.6069, -159.2784, -227.4606, -247.1795, -155.2280],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0204, device='cuda:0', dtype=torch.float64)
tensor([-141.6779, -158.1727, -227.8823, -247.6364, -154.7003],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0177, device='cuda:0', dtype=torch.float64)
tensor([-141.5201, -157.7451, -227.8777, -247.8935, -154.6248],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0174, device='cuda:0', dtype=torch.float64)
tensor([-141.4303, -157.4159, -227.8380, -248.4846, -154.6836],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0176, device='cuda:0', dtype=torch.float64)
tensor([-141.1787, -157.3649, -227.4645, -248.3981, -155.1341],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0151, device='cuda:0', dtype=torch.float64)
tensor([-140.8308, -157.3022, -227.2222, -248.4927, -155.5637],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0188, device='cuda:0', dtype=torch.float64)
tensor([-140.4058, -157.7813, -226.7151, -247.8541, -156.5745],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0164, device='cuda:0', dtype=torch.float64)
tensor([-140.0380, -157.3796, -226.5929, -247.8856, -156.8169],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0217, device='cuda:0', dtype=torch.float64)
tensor([-139.6083, -157.5697, -226.2491, -247.7955, -157.3830],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0175, device='cuda:0', dtype=torch.float64)
tensor([-139.3854, -157.9800, -225.9840, -247.5781, -158.0428],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0183, device='cuda:0', dtype=torch.float64)
tensor([-139.2352, -159.0125, -225.5391, -246.9816, -159.1193],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0145, device='cuda:0', dtype=torch.float64)
tensor([-139.1485, -159.3923, -225.3708, -246.7291, -159.7081],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0174, device='cuda:0', dtype=torch.float64)
tensor([-139.0596, -159.8743, -225.1725, -246.6916, -160.3873],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0173, device='cuda:0', dtype=torch.float64)
tensor([-138.9116, -159.4016, -225.4211, -246.8378, -160.1679],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0151, device='cuda:0', dtype=torch.float64)
tensor([-138.7066, -159.3102, -225.6295, -246.9860, -160.3385],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0192, device='cuda:0', dtype=torch.float64)
tensor([-138.5887, -157.9084, -226.3625, -247.5078, -159.1997],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0168, device='cuda:0', dtype=torch.float64)
tensor([-138.5902, -156.7076, -227.1700, -248.2127, -158.0461],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0140, device='cuda:0', dtype=torch.float64)
tensor([-138.7323, -155.5151, -227.9895, -248.8183, -156.8203],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0158, device='cuda:0', dtype=torch.float64)
tensor([-138.9313, -154.6344, -228.5842, -249.0781, -156.0844],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0161, device='cuda:0', dtype=torch.float64)
tensor([-139.2722, -153.4762, -229.3986, -249.7621, -154.9654],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0180, device='cuda:0', dtype=torch.float64)
tensor([-139.7076, -152.8508, -230.0538, -250.4433, -154.3732],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0170, device='cuda:0', dtype=torch.float64)
tensor([-140.0938, -153.0144, -230.3919, -251.0278, -154.4350],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0177, device='cuda:0', dtype=torch.float64)
tensor([-140.4585, -153.3510, -230.4292, -250.6433, -154.8641],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0292, device='cuda:0', dtype=torch.float64)
tensor([-140.8776, -153.2298, -230.8729, -250.9944, -154.6881],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0175, device='cuda:0', dtype=torch.float64)
tensor([-141.2810, -153.4019, -231.2509, -251.3189, -154.7149],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0163, device='cuda:0', dtype=torch.float64)
tensor([-141.7632, -153.3427, -231.4546, -250.9361, -154.8007],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0322, device='cuda:0', dtype=torch.float64)
tensor([-141.9859, -153.9765, -231.2508, -249.8951, -155.5313],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0162, device='cuda:0', dtype=torch.float64)
tensor([-142.2108, -154.9841, -231.1849, -249.1363, -156.2525],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0162, device='cuda:0', dtype=torch.float64)
tensor([-142.5249, -155.7248, -231.1931, -248.8371, -156.8836],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0167, device='cuda:0', dtype=torch.float64)
tensor([-142.8997, -156.9415, -231.1021, -248.4954, -157.8129],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0156, device='cuda:0', dtype=torch.float64)
tensor([-143.2299, -158.0851, -231.0010, -248.1365, -158.7077],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0138, device='cuda:0', dtype=torch.float64)
tensor([-143.4361, -159.7237, -230.7665, -247.6563, -160.0032],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0143, device='cuda:0', dtype=torch.float64)
tensor([-143.6121, -161.4520, -230.5298, -247.6746, -161.3353],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0157, device='cuda:0', dtype=torch.float64)
tensor([-143.7846, -162.9886, -230.4681, -248.1230, -162.3838],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0175, device='cuda:0', dtype=torch.float64)
tensor([-143.8101, -165.2136, -230.2825, -248.5697, -163.9549],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0171, device='cuda:0', dtype=torch.float64)
tensor([-143.8660, -166.9921, -229.9791, -249.0267, -165.3382],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0151, device='cuda:0', dtype=torch.float64)
tensor([-143.8797, -167.9495, -229.7593, -249.1816, -166.3266],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0176, device='cuda:0', dtype=torch.float64)
tensor([-143.8838, -167.9257, -229.8170, -249.7191, -166.2695],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0148, device='cuda:0', dtype=torch.float64)
tensor([-143.9328, -168.0326, -229.8333, -250.3483, -166.3248],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0182, device='cuda:0', dtype=torch.float64)
tensor([-143.9831, -166.9157, -230.2084, -251.3009, -165.2993],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0167, device='cuda:0', dtype=torch.float64)
tensor([-144.1151, -165.0931, -230.6736, -252.0015, -163.8366],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0160, device='cuda:0', dtype=torch.float64)
tensor([-144.2750, -162.4334, -231.2006, -252.5338, -162.1256],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0171, device='cuda:0', dtype=torch.float64)
tensor([-144.3117, -161.6271, -231.4087, -252.9517, -161.7101],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0148, device='cuda:0', dtype=torch.float64)
tensor([-144.2511, -160.7383, -231.5361, -253.1191, -161.3966],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0150, device='cuda:0', dtype=torch.float64)
tensor([-144.2157, -159.9431, -231.6713, -253.4622, -161.0762],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0130, device='cuda:0', dtype=torch.float64)
tensor([-144.0343, -159.9969, -231.8765, -254.3371, -161.1053],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0173, device='cuda:0', dtype=torch.float64)
tensor([-143.7987, -161.8893, -231.5653, -254.9036, -162.4728],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0187, device='cuda:0', dtype=torch.float64)
tensor([-143.6982, -163.5796, -231.4106, -255.4632, -163.4886],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0169, device='cuda:0', dtype=torch.float64)
tensor([-143.6577, -164.0439, -231.7493, -256.4088, -163.3013],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0170, device='cuda:0', dtype=torch.float64)
tensor([-143.6485, -164.5776, -232.0886, -257.5427, -163.2957],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0180, device='cuda:0', dtype=torch.float64)
tensor([-143.5661, -163.8389, -232.6918, -258.5106, -162.4239],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0418, device='cuda:0', dtype=torch.float64)
tensor([-143.3820, -162.5639, -233.5081, -259.7647, -161.1649],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0153, device='cuda:0', dtype=torch.float64)
tensor([-143.2259, -162.5202, -234.0182, -260.9013, -160.8002],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0163, device='cuda:0', dtype=torch.float64)
tensor([-143.1281, -162.0032, -234.8379, -262.0437, -159.9896],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0178, device='cuda:0', dtype=torch.float64)
tensor([-142.8905, -162.1118, -235.3188, -262.7877, -159.7360],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0144, device='cuda:0', dtype=torch.float64)
tensor([-142.6503, -162.4630, -235.7427, -263.5046, -159.7031],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0178, device='cuda:0', dtype=torch.float64)
tensor([-142.2883, -162.3687, -236.0125, -263.5925, -159.4545],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0154, device='cuda:0', dtype=torch.float64)
tensor([-141.8668, -162.0097, -236.1931, -263.5889, -159.1964],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0139, device='cuda:0', dtype=torch.float64)
tensor([-141.4652, -162.4707, -235.9995, -263.2562, -159.6448],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0229, device='cuda:0', dtype=torch.float64)
tensor([-141.1207, -162.2295, -235.8601, -262.5265, -159.6886],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0439, device='cuda:0', dtype=torch.float64)
tensor([-140.7655, -162.4689, -235.7062, -261.8858, -159.9431],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0160, device='cuda:0', dtype=torch.float64)
tensor([-140.4287, -163.2946, -235.5060, -261.1973, -160.5536],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0166, device='cuda:0', dtype=torch.float64)
tensor([-140.1153, -164.2744, -235.3434, -260.4452, -161.2647],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0185, device='cuda:0', dtype=torch.float64)
tensor([-139.9781, -164.0463, -235.4409, -259.5331, -161.1571],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0153, device='cuda:0', dtype=torch.float64)
tensor([-139.9256, -164.5007, -235.5763, -259.1175, -161.5558],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0185, device='cuda:0', dtype=torch.float64)
tensor([-139.8922, -164.5204, -235.8936, -258.9020, -161.6831],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0152, device='cuda:0', dtype=torch.float64)
tensor([-139.7755, -165.0822, -236.0232, -258.4556, -162.2842],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0180, device='cuda:0', dtype=torch.float64)
tensor([-139.8160, -165.7836, -236.4469, -258.6222, -162.5192],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0160, device='cuda:0', dtype=torch.float64)
tensor([-140.0335, -166.3119, -236.8614, -258.6685, -162.6634],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0140, device='cuda:0', dtype=torch.float64)
tensor([-140.1325, -166.9453, -237.0835, -258.8274, -163.1366],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0614, device='cuda:0', dtype=torch.float64)
tensor([-140.1451, -167.6927, -237.1445, -259.1460, -163.9609],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0160, device='cuda:0', dtype=torch.float64)
tensor([-140.2938, -168.0297, -237.5848, -260.1242, -164.2184],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0467, device='cuda:0', dtype=torch.float64)
tensor([-140.4568, -168.1488, -238.0174, -261.0498, -164.2740],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0156, device='cuda:0', dtype=torch.float64)
tensor([-140.6852, -167.5996, -238.5498, -261.8903, -163.9023],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0165, device='cuda:0', dtype=torch.float64)
tensor([-140.8564, -167.2129, -239.2343, -263.1951, -163.5205],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0145, device='cuda:0', dtype=torch.float64)
tensor([-141.1440, -166.2579, -240.0320, -264.3363, -162.6138],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0176, device='cuda:0', dtype=torch.float64)
tensor([-141.2580, -166.5412, -241.1376, -266.6927, -162.4519],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0202, device='cuda:0', dtype=torch.float64)
tensor([-141.1516, -167.8241, -241.9652, -268.5851, -162.9928],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0179, device='cuda:0', dtype=torch.float64)
tensor([-141.1976, -168.6513, -242.9727, -270.4348, -163.1155],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0171, device='cuda:0', dtype=torch.float64)
tensor([-141.3382, -169.0208, -244.0616, -272.5475, -162.9543],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0151, device='cuda:0', dtype=torch.float64)
tensor([-141.3147, -169.1851, -244.8357, -273.9682, -162.9632],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0172, device='cuda:0', dtype=torch.float64)
tensor([-141.2523, -169.3324, -245.2434, -274.9751, -163.1331],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0522, device='cuda:0', dtype=torch.float64)
tensor([-141.1670, -170.0244, -245.6162, -275.8295, -163.5783],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0169, device='cuda:0', dtype=torch.float64)
tensor([-141.0637, -170.6321, -245.8227, -276.4571, -164.1284],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0131, device='cuda:0', dtype=torch.float64)
tensor([-140.8802, -170.9015, -246.1777, -277.3223, -164.4343],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0181, device='cuda:0', dtype=torch.float64)
tensor([-140.5931, -170.9660, -246.4385, -278.4197, -164.7559],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0186, device='cuda:0', dtype=torch.float64)
tensor([-140.4128, -170.7209, -246.8463, -279.6862, -164.9629],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0704, device='cuda:0', dtype=torch.float64)
tensor([-140.1587, -171.3002, -246.8609, -280.3197, -165.7565],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0182, device='cuda:0', dtype=torch.float64)
tensor([-140.0272, -172.9326, -246.8258, -280.9901, -167.2024],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0137, device='cuda:0', dtype=torch.float64)
tensor([-140.0105, -173.8562, -247.0361, -281.6440, -167.9974],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0167, device='cuda:0', dtype=torch.float64)
tensor([-139.9851, -175.5088, -247.2495, -282.0827, -169.0307],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0148, device='cuda:0', dtype=torch.float64)
tensor([-139.9275, -176.4382, -247.6090, -282.4722, -169.3891],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0151, device='cuda:0', dtype=torch.float64)
tensor([-139.9109, -176.8941, -248.0732, -282.6932, -169.1246],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0144, device='cuda:0', dtype=torch.float64)
tensor([-139.9431, -176.7919, -248.6912, -283.1367, -168.3787],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0165, device='cuda:0', dtype=torch.float64)
tensor([-140.0264, -175.9937, -249.1025, -283.1128, -167.4154],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0174, device='cuda:0', dtype=torch.float64)
tensor([-140.0881, -175.0349, -249.2761, -282.4686, -166.6126],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0157, device='cuda:0', dtype=torch.float64)
tensor([-139.9602, -175.0752, -249.0657, -281.7251, -166.7171],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0172, device='cuda:0', dtype=torch.float64)
tensor([-139.7576, -174.7225, -248.6923, -280.6220, -166.7505],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0158, device='cuda:0', dtype=torch.float64)
tensor([-139.5281, -175.0991, -248.2371, -279.4693, -167.2659],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0187, device='cuda:0', dtype=torch.float64)
tensor([-139.5166, -174.0329, -247.8783, -277.9377, -166.9766],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0191, device='cuda:0', dtype=torch.float64)
tensor([-139.5552, -172.9268, -247.5363, -276.5774, -166.7619],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0192, device='cuda:0', dtype=torch.float64)
tensor([-139.2058, -173.7944, -246.5070, -274.7278, -167.9010],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0160, device='cuda:0', dtype=torch.float64)
tensor([-139.0177, -174.9462, -245.6410, -272.9890, -168.9763],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0163, device='cuda:0', dtype=torch.float64)
tensor([-138.7679, -176.8428, -244.8675, -271.5425, -170.6377],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0156, device='cuda:0', dtype=torch.float64)
tensor([-138.7240, -177.6998, -244.4529, -270.5906, -171.5194],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0195, device='cuda:0', dtype=torch.float64)
tensor([-138.8509, -177.0045, -244.2498, -269.9371, -171.4391],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0131, device='cuda:0', dtype=torch.float64)
tensor([-139.0820, -175.9273, -244.2335, -269.6669, -171.1144],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0181, device='cuda:0', dtype=torch.float64)
tensor([-139.0281, -176.0147, -244.0894, -269.7721, -171.5829],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0178, device='cuda:0', dtype=torch.float64)
tensor([-139.0568, -175.9025, -244.0173, -269.8636, -171.8851],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0388, device='cuda:0', dtype=torch.float64)
tensor([-138.9614, -176.8115, -244.0917, -270.3136, -172.7065],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0172, device='cuda:0', dtype=torch.float64)
tensor([-138.9690, -177.1287, -244.3433, -270.9789, -173.1837],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0169, device='cuda:0', dtype=torch.float64)
tensor([-138.9273, -178.0337, -244.6726, -271.6515, -173.7554],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0137, device='cuda:0', dtype=torch.float64)
tensor([-138.9639, -178.0303, -245.0207, -272.0829, -173.7275],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0191, device='cuda:0', dtype=torch.float64)
tensor([-139.1403, -175.8077, -245.4832, -272.2572, -172.3392],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0154, device='cuda:0', dtype=torch.float64)
tensor([-139.4134, -173.1395, -246.1912, -272.7100, -170.4729],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0169, device='cuda:0', dtype=torch.float64)
tensor([-139.5164, -172.0675, -247.0568, -273.5039, -169.5776],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0156, device='cuda:0', dtype=torch.float64)
tensor([-139.7984, -170.6518, -248.0924, -274.6508, -168.3903],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0152, device='cuda:0', dtype=torch.float64)
tensor([-140.2602, -169.6551, -249.2850, -275.8836, -167.4706],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0164, device='cuda:0', dtype=torch.float64)
tensor([-140.6928, -168.6675, -250.2194, -276.6633, -166.8660],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0124, device='cuda:0', dtype=torch.float64)
tensor([-141.1101, -167.9313, -251.0702, -277.3836, -166.4913],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0156, device='cuda:0', dtype=torch.float64)
tensor([-141.5395, -167.6652, -252.0950, -278.2893, -166.3279],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0162, device='cuda:0', dtype=torch.float64)
tensor([-141.6928, -168.6016, -252.7835, -279.1454, -166.8865],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0161, device='cuda:0', dtype=torch.float64)
tensor([-141.5839, -171.0622, -253.1296, -280.0650, -168.2371],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0144, device='cuda:0', dtype=torch.float64)
tensor([-141.5669, -173.5957, -253.0475, -280.1643, -169.6316],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0144, device='cuda:0', dtype=torch.float64)
tensor([-141.6929, -175.0784, -252.8368, -279.9500, -170.6358],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0135, device='cuda:0', dtype=torch.float64)
tensor([-141.7554, -177.3466, -252.7418, -279.9290, -171.9089],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0138, device='cuda:0', dtype=torch.float64)
tensor([-141.8499, -179.0046, -252.5946, -279.4043, -172.8239],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0147, device='cuda:0', dtype=torch.float64)
tensor([-141.9009, -179.5955, -252.5139, -278.8966, -173.0279],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0174, device='cuda:0', dtype=torch.float64)
tensor([-141.8937, -180.3664, -252.4999, -278.6656, -173.4175],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0714, device='cuda:0', dtype=torch.float64)
tensor([-141.8797, -180.3478, -252.6240, -278.3438, -173.3405],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0159, device='cuda:0', dtype=torch.float64)
tensor([-142.1095, -178.4258, -253.1527, -278.3057, -172.2246],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0151, device='cuda:0', dtype=torch.float64)
tensor([-142.5434, -175.6304, -253.8654, -278.4993, -170.7889],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0144, device='cuda:0', dtype=torch.float64)
tensor([-143.2450, -172.9814, -254.6545, -278.4933, -169.3593],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0113, device='cuda:0', dtype=torch.float64)
tensor([-144.1932, -170.3196, -255.4370, -278.1066, -167.9887],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0143, device='cuda:0', dtype=torch.float64)
tensor([-145.3292, -168.2427, -256.6081, -278.5656, -166.8852],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0427, device='cuda:0', dtype=torch.float64)
tensor([-145.7531, -168.1654, -257.2458, -279.1717, -166.7608],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0150, device='cuda:0', dtype=torch.float64)
tensor([-145.9062, -168.2373, -257.4740, -279.8072, -166.7729],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0178, device='cuda:0', dtype=torch.float64)
tensor([-145.6289, -169.2092, -257.4455, -280.9757, -167.2711],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0177, device='cuda:0', dtype=torch.float64)
tensor([-145.1948, -170.6943, -257.2112, -281.8162, -167.9393],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0144, device='cuda:0', dtype=torch.float64)
tensor([-144.6869, -172.8966, -257.3651, -283.3301, -168.7889],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0168, device='cuda:0', dtype=torch.float64)
tensor([-143.7298, -176.5264, -256.7142, -284.6552, -170.8310],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0547, device='cuda:0', dtype=torch.float64)
tensor([-143.0849, -180.2397, -256.4111, -286.2416, -173.0600],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0142, device='cuda:0', dtype=torch.float64)
tensor([-142.8501, -182.7239, -256.5022, -288.0457, -174.7498],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0148, device='cuda:0', dtype=torch.float64)
tensor([-142.7083, -184.1158, -256.6198, -289.7811, -175.8754],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0167, device='cuda:0', dtype=torch.float64)
tensor([-142.7310, -182.9281, -257.3170, -291.6491, -175.4406],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0160, device='cuda:0', dtype=torch.float64)
tensor([-142.8384, -181.6713, -257.7309, -292.5422, -174.9391],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0150, device='cuda:0', dtype=torch.float64)
tensor([-143.0101, -180.3718, -258.2172, -293.3180, -174.3395],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0175, device='cuda:0', dtype=torch.float64)
tensor([-143.2086, -179.1074, -258.9234, -294.3418, -173.7577],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0138, device='cuda:0', dtype=torch.float64)
tensor([-143.4048, -178.2758, -259.3478, -294.8893, -173.4147],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0126, device='cuda:0', dtype=torch.float64)
tensor([-143.6057, -177.2843, -259.4454, -294.8894, -173.1371],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0124, device='cuda:0', dtype=torch.float64)
tensor([-143.8272, -176.4433, -259.4246, -294.7527, -173.0969],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0156, device='cuda:0', dtype=torch.float64)
tensor([-144.1043, -175.5676, -259.6088, -294.8307, -172.9563],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0137, device='cuda:0', dtype=torch.float64)
tensor([-144.4280, -174.5032, -259.7539, -294.7394, -172.7217],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0146, device='cuda:0', dtype=torch.float64)
tensor([-144.5701, -174.1482, -259.9387, -294.8863, -172.6612],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0140, device='cuda:0', dtype=torch.float64)
tensor([-144.7319, -173.7545, -260.0615, -294.9167, -172.6795],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0145, device='cuda:0', dtype=torch.float64)
tensor([-145.0555, -172.7414, -260.3610, -294.5518, -172.4127],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0137, device='cuda:0', dtype=torch.float64)
tensor([-145.5275, -171.8190, -260.8236, -294.3001, -172.0853],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0115, device='cuda:0', dtype=torch.float64)
tensor([-146.0533, -170.8221, -261.4539, -294.2151, -171.6711],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0132, device='cuda:0', dtype=torch.float64)
tensor([-146.6651, -170.0416, -261.8082, -294.0024, -171.2839],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0128, device='cuda:0', dtype=torch.float64)
tensor([-146.9926, -170.0852, -262.2122, -294.3200, -171.2348],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0148, device='cuda:0', dtype=torch.float64)
tensor([-147.1565, -170.5740, -262.3726, -294.1995, -171.3157],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0171, device='cuda:0', dtype=torch.float64)
tensor([-147.0262, -171.9428, -262.5750, -294.3692, -171.7928],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0108, device='cuda:0', dtype=torch.float64)
tensor([-146.7358, -173.7773, -262.6751, -294.6111, -172.4620],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0150, device='cuda:0', dtype=torch.float64)
tensor([-146.2776, -176.1862, -262.7335, -294.8267, -173.3887],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0141, device='cuda:0', dtype=torch.float64)
tensor([-145.5537, -180.0024, -262.5809, -294.8706, -175.0424],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0142, device='cuda:0', dtype=torch.float64)
tensor([-144.8573, -184.8538, -262.2863, -294.3096, -177.3317],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0115, device='cuda:0', dtype=torch.float64)
tensor([-144.4465, -190.2048, -262.2374, -293.9713, -179.9291],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0190, device='cuda:0', dtype=torch.float64)
tensor([-144.4258, -193.3162, -262.2694, -293.0823, -181.4233],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0149, device='cuda:0', dtype=torch.float64)
tensor([-144.6137, -194.7408, -262.2601, -291.8393, -182.2937],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0132, device='cuda:0', dtype=torch.float64)
tensor([-144.9471, -195.3735, -262.4068, -290.6822, -182.8199],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0136, device='cuda:0', dtype=torch.float64)
tensor([-145.5779, -193.2271, -262.7470, -289.7999, -182.0134],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0115, device='cuda:0', dtype=torch.float64)
tensor([-146.2873, -191.4877, -263.1892, -289.1427, -181.3579],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0106, device='cuda:0', dtype=torch.float64)
tensor([-147.0110, -189.7947, -263.7130, -288.7957, -180.6810],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0123, device='cuda:0', dtype=torch.float64)
tensor([-147.7012, -188.5970, -264.1418, -288.4150, -180.1802],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0153, device='cuda:0', dtype=torch.float64)
tensor([-148.1396, -188.0645, -264.2351, -288.0393, -180.0986],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0146, device='cuda:0', dtype=torch.float64)
tensor([-148.3578, -187.9110, -264.6699, -288.2040, -180.0882],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0137, device='cuda:0', dtype=torch.float64)
tensor([-148.8477, -186.9002, -265.4558, -288.5565, -179.5291],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0128, device='cuda:0', dtype=torch.float64)
tensor([-149.0149, -186.7616, -266.0353, -289.2221, -179.4847],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0191, device='cuda:0', dtype=torch.float64)
tensor([-148.5714, -188.9444, -265.9452, -289.3079, -180.7413],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0142, device='cuda:0', dtype=torch.float64)
tensor([-148.0226, -191.2732, -265.7889, -289.8162, -182.1827],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0238, device='cuda:0', dtype=torch.float64)
tensor([-147.6008, -193.4284, -265.8917, -290.8537, -183.6648],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0116, device='cuda:0', dtype=torch.float64)
tensor([-147.3651, -194.6703, -266.1853, -291.9921, -184.6749],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0182, device='cuda:0', dtype=torch.float64)
tensor([-147.7049, -192.9322, -266.7704, -293.2495, -184.1990],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0132, device='cuda:0', dtype=torch.float64)
tensor([-148.4010, -190.3221, -267.6434, -294.6405, -183.3045],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0125, device='cuda:0', dtype=torch.float64)
tensor([-149.2845, -187.3760, -268.8751, -296.1239, -182.2033],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0121, device='cuda:0', dtype=torch.float64)
tensor([-149.7740, -186.4379, -270.0169, -297.7077, -181.9982],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0127, device='cuda:0', dtype=torch.float64)
tensor([-150.3577, -185.6122, -271.1796, -299.1570, -181.8277],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0118, device='cuda:0', dtype=torch.float64)
tensor([-150.5355, -185.8452, -271.8650, -300.4047, -182.3056],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0137, device='cuda:0', dtype=torch.float64)
tensor([-150.3092, -187.5093, -272.2175, -301.7241, -183.2693],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0125, device='cuda:0', dtype=torch.float64)
tensor([-150.4199, -188.4704, -272.7110, -302.9964, -184.1794],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0105, device='cuda:0', dtype=torch.float64)
tensor([-150.5596, -189.9141, -273.5391, -304.5135, -185.1984],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0113, device='cuda:0', dtype=torch.float64)
tensor([-150.7716, -190.8020, -274.2986, -305.9413, -185.8994],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0126, device='cuda:0', dtype=torch.float64)
tensor([-151.0766, -190.9058, -274.8595, -306.8231, -186.4559],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0123, device='cuda:0', dtype=torch.float64)
tensor([-151.6482, -190.3645, -275.4913, -307.4483, -186.8527],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0124, device='cuda:0', dtype=torch.float64)
tensor([-152.4854, -189.0335, -276.1756, -307.9252, -186.9582],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0129, device='cuda:0', dtype=torch.float64)
tensor([-153.2659, -188.2770, -277.2077, -309.0942, -187.2218],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0112, device='cuda:0', dtype=torch.float64)
tensor([-154.0275, -187.8335, -278.2703, -310.1454, -187.7232],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0124, device='cuda:0', dtype=torch.float64)
tensor([-154.3033, -188.9892, -278.7879, -310.7731, -188.7394],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0111, device='cuda:0', dtype=torch.float64)
tensor([-154.2883, -190.9926, -278.9499, -310.9167, -189.9611],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0146, device='cuda:0', dtype=torch.float64)
tensor([-154.1860, -193.4218, -279.2746, -311.3164, -191.1969],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0125, device='cuda:0', dtype=torch.float64)
tensor([-153.8847, -196.3359, -279.1039, -311.7538, -192.5692],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0114, device='cuda:0', dtype=torch.float64)
tensor([-153.6726, -198.9487, -278.8027, -311.6353, -193.8964],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0111, device='cuda:0', dtype=torch.float64)
tensor([-153.6312, -201.0792, -278.5995, -311.4718, -194.8580],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0112, device='cuda:0', dtype=torch.float64)
tensor([-153.5195, -203.3409, -278.3681, -311.2888, -195.8120],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0122, device='cuda:0', dtype=torch.float64)
tensor([-153.5624, -205.1778, -278.2044, -310.7576, -196.5988],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0110, device='cuda:0', dtype=torch.float64)
tensor([-153.6702, -206.4301, -278.1697, -310.5017, -197.2507],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0106, device='cuda:0', dtype=torch.float64)
tensor([-153.9944, -206.7025, -278.2538, -310.2899, -197.4520],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0112, device='cuda:0', dtype=torch.float64)
tensor([-154.3713, -206.9749, -278.9396, -311.0839, -197.5391],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0125, device='cuda:0', dtype=torch.float64)
tensor([-155.1314, -206.0943, -280.2178, -312.0078, -196.9681],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0100, device='cuda:0', dtype=torch.float64)
tensor([-155.9319, -205.1683, -281.2481, -312.8188, -196.6241],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0110, device='cuda:0', dtype=torch.float64)
tensor([-156.4916, -205.1531, -282.6080, -314.1997, -196.4912],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0123, device='cuda:0', dtype=torch.float64)
tensor([-157.2400, -204.9347, -284.0861, -315.4673, -196.3677],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0096, device='cuda:0', dtype=torch.float64)
tensor([-158.0101, -204.8838, -285.2285, -316.1740, -196.4834],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0110, device='cuda:0', dtype=torch.float64)
tensor([-158.6504, -205.0150, -285.5354, -316.1067, -196.8019],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0119, device='cuda:0', dtype=torch.float64)
tensor([-158.8269, -206.8576, -285.3765, -315.5861, -197.8701],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0087, device='cuda:0', dtype=torch.float64)
tensor([-158.7960, -209.2016, -284.9741, -315.0822, -199.2862],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0112, device='cuda:0', dtype=torch.float64)
tensor([-159.2463, -210.1789, -284.5012, -314.1572, -200.1874],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0102, device='cuda:0', dtype=torch.float64)
tensor([-159.7869, -210.6500, -283.9309, -313.1356, -200.9901],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0131, device='cuda:0', dtype=torch.float64)
tensor([-160.1076, -211.8317, -283.2386, -312.3371, -202.0996],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0100, device='cuda:0', dtype=torch.float64)
tensor([-160.8954, -211.3633, -282.8109, -311.6539, -202.4730],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0101, device='cuda:0', dtype=torch.float64)
tensor([-161.7805, -210.2145, -282.4657, -310.9805, -202.5307],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0104, device='cuda:0', dtype=torch.float64)
tensor([-162.9070, -208.7367, -282.5681, -310.7399, -202.3511],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0115, device='cuda:0', dtype=torch.float64)
tensor([-164.1350, -207.2976, -282.8168, -310.9458, -202.0745],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0148, device='cuda:0', dtype=torch.float64)
tensor([-165.4417, -206.2658, -283.1430, -311.0593, -202.0949],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0113, device='cuda:0', dtype=torch.float64)
tensor([-165.9258, -207.0319, -283.5578, -311.8572, -202.7732],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0102, device='cuda:0', dtype=torch.float64)
tensor([-166.1357, -208.1648, -283.7101, -312.2854, -203.6079],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0110, device='cuda:0', dtype=torch.float64)
tensor([-165.9884, -209.9328, -284.0896, -313.3091, -204.6180],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0116, device='cuda:0', dtype=torch.float64)
tensor([-165.8245, -211.7175, -284.3636, -314.2256, -205.5160],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0116, device='cuda:0', dtype=torch.float64)
tensor([-165.5964, -214.0773, -284.8503, -315.1575, -206.5674],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0116, device='cuda:0', dtype=torch.float64)
tensor([-165.2519, -217.1042, -285.5282, -316.1002, -207.7630],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0112, device='cuda:0', dtype=torch.float64)
tensor([-164.6876, -220.8300, -286.4480, -317.7696, -209.2369],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0129, device='cuda:0', dtype=torch.float64)
tensor([-164.3688, -224.6476, -287.6154, -319.2516, -210.8986],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0094, device='cuda:0', dtype=torch.float64)
tensor([-164.2046, -227.5262, -288.8652, -321.1415, -212.1818],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0144, device='cuda:0', dtype=torch.float64)
tensor([-164.5018, -228.8833, -289.9104, -322.0667, -212.7653],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0120, device='cuda:0', dtype=torch.float64)
tensor([-164.8838, -230.0292, -291.3522, -323.4977, -213.0354],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0124, device='cuda:0', dtype=torch.float64)
tensor([-165.4947, -229.6992, -292.6688, -324.5299, -212.6928],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0105, device='cuda:0', dtype=torch.float64)
tensor([-166.1688, -229.3335, -294.2191, -325.8696, -212.2690],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0114, device='cuda:0', dtype=torch.float64)
tensor([-167.1204, -228.1332, -295.8953, -327.3443, -211.5189],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0105, device='cuda:0', dtype=torch.float64)
tensor([-168.2415, -226.3657, -297.3992, -328.6533, -210.8121],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0103, device='cuda:0', dtype=torch.float64)
tensor([-168.8942, -225.9403, -298.5455, -329.9977, -210.6532],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0120, device='cuda:0', dtype=torch.float64)
tensor([-169.6570, -225.2337, -299.5788, -331.5739, -210.5480],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0144, device='cuda:0', dtype=torch.float64)
tensor([-169.9596, -226.2608, -299.9829, -332.2971, -211.1220],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0087, device='cuda:0', dtype=torch.float64)
tensor([-170.2433, -227.2823, -300.2103, -333.1352, -211.8078],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0471, device='cuda:0', dtype=torch.float64)
tensor([-169.8999, -229.6215, -299.8599, -333.7071, -212.9760],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0111, device='cuda:0', dtype=torch.float64)
tensor([-169.7531, -231.5820, -300.1662, -335.2853, -214.0055],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0124, device='cuda:0', dtype=torch.float64)
tensor([-169.8039, -233.1584, -300.6054, -336.5739, -214.9145],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0122, device='cuda:0', dtype=torch.float64)
tensor([-170.4825, -232.7608, -301.0520, -337.5557, -215.1572],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0103, device='cuda:0', dtype=torch.float64)
tensor([-171.3599, -231.5577, -301.3413, -337.9964, -215.2092],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0113, device='cuda:0', dtype=torch.float64)
tensor([-171.9428, -231.4953, -301.6236, -338.4792, -215.5221],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0342, device='cuda:0', dtype=torch.float64)
tensor([-172.3961, -231.4651, -301.5796, -338.6259, -215.8512],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0090, device='cuda:0', dtype=torch.float64)
tensor([-172.8239, -231.7947, -301.6556, -338.9695, -216.2115],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0096, device='cuda:0', dtype=torch.float64)
tensor([-173.3228, -231.9302, -301.3351, -339.3072, -216.6976],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0095, device='cuda:0', dtype=torch.float64)
tensor([-173.5019, -233.0413, -300.9594, -339.7448, -217.4641],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0109, device='cuda:0', dtype=torch.float64)
tensor([-174.1609, -233.1535, -300.7479, -340.4103, -217.8467],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0112, device='cuda:0', dtype=torch.float64)
tensor([-175.1815, -232.6455, -301.1837, -341.7727, -217.7546],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0103, device='cuda:0', dtype=torch.float64)
tensor([-176.6094, -231.5751, -301.9143, -343.5858, -217.3982],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0118, device='cuda:0', dtype=torch.float64)
tensor([-177.4878, -231.8878, -302.8556, -345.3920, -217.4339],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0110, device='cuda:0', dtype=torch.float64)
tensor([-178.0652, -233.1656, -303.8577, -347.2930, -217.9540],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0094, device='cuda:0', dtype=torch.float64)
tensor([-178.4869, -234.6088, -304.9722, -348.8811, -218.3157],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0110, device='cuda:0', dtype=torch.float64)
tensor([-178.4087, -237.4200, -306.1807, -350.3245, -219.1008],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0077, device='cuda:0', dtype=torch.float64)
tensor([-178.6335, -239.8000, -307.5980, -352.2175, -219.7026],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0092, device='cuda:0', dtype=torch.float64)
tensor([-178.5026, -242.4025, -308.8249, -354.0814, -220.8078],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0077, device='cuda:0', dtype=torch.float64)
tensor([-178.1952, -245.1840, -309.9964, -356.3181, -221.8951],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0111, device='cuda:0', dtype=torch.float64)
tensor([-178.5550, -246.7746, -310.7277, -358.2225, -222.6529],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0105, device='cuda:0', dtype=torch.float64)
tensor([-179.1171, -248.0832, -311.6926, -359.8230, -223.2582],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0094, device='cuda:0', dtype=torch.float64)
tensor([-179.7893, -249.3329, -312.7798, -361.3933, -223.7646],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0113, device='cuda:0', dtype=torch.float64)
tensor([-180.1204, -251.2551, -313.8397, -363.1305, -224.5517],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0084, device='cuda:0', dtype=torch.float64)
tensor([-180.0506, -253.8099, -314.7431, -364.9963, -225.7724],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0099, device='cuda:0', dtype=torch.float64)
tensor([-179.7714, -256.4275, -314.9624, -366.3983, -227.0762],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0099, device='cuda:0', dtype=torch.float64)
tensor([-179.4603, -259.2896, -314.7897, -367.3060, -228.5170],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0115, device='cuda:0', dtype=torch.float64)
tensor([-179.0151, -262.6096, -314.2297, -367.0173, -230.2425],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0094, device='cuda:0', dtype=torch.float64)
tensor([-179.1472, -264.6985, -314.3557, -367.5247, -231.4189],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0068, device='cuda:0', dtype=torch.float64)
tensor([-179.6374, -265.7660, -314.6152, -368.1432, -232.2084],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0095, device='cuda:0', dtype=torch.float64)
tensor([-180.4020, -265.1003, -315.0776, -368.7132, -232.1631],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0101, device='cuda:0', dtype=torch.float64)
tensor([-181.2937, -263.8890, -315.8981, -369.7741, -231.8981],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0082, device='cuda:0', dtype=torch.float64)
tensor([-182.1502, -263.2344, -317.0407, -371.8322, -231.7720],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0083, device='cuda:0', dtype=torch.float64)
tensor([-182.9254, -263.3322, -318.0364, -373.3287, -232.1492],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0110, device='cuda:0', dtype=torch.float64)
tensor([-183.6133, -263.7349, -319.1768, -374.8508, -232.6950],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0078, device='cuda:0', dtype=torch.float64)
tensor([-184.3279, -263.9385, -320.1032, -376.2380, -233.3120],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0082, device='cuda:0', dtype=torch.float64)
tensor([-184.8075, -264.2587, -320.9030, -377.9469, -234.1317],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0084, device='cuda:0', dtype=torch.float64)
tensor([-184.9272, -265.3604, -321.4238, -379.0770, -235.1071],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0072, device='cuda:0', dtype=torch.float64)
tensor([-184.9178, -266.9818, -322.2851, -380.7178, -236.3118],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0088, device='cuda:0', dtype=torch.float64)
tensor([-184.7345, -269.3937, -323.2912, -382.3583, -237.7449],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0091, device='cuda:0', dtype=torch.float64)
tensor([-184.8373, -271.8390, -324.6113, -384.5318, -239.4074],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0071, device='cuda:0', dtype=torch.float64)
tensor([-185.0407, -273.9855, -325.7602, -386.4524, -241.0270],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0092, device='cuda:0', dtype=torch.float64)
tensor([-184.6628, -277.4920, -326.3450, -387.5173, -243.1733],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0100, device='cuda:0', dtype=torch.float64)
tensor([-184.1730, -281.8398, -326.9512, -388.6322, -245.7660],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0058, device='cuda:0', dtype=torch.float64)
tensor([-183.9199, -285.7859, -327.4861, -389.7382, -248.2429],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0096, device='cuda:0', dtype=torch.float64)
tensor([-184.0522, -288.8742, -328.3535, -391.2583, -250.1964],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0072, device='cuda:0', dtype=torch.float64)
tensor([-184.4017, -291.1987, -329.2652, -392.5899, -251.5816],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0085, device='cuda:0', dtype=torch.float64)
tensor([-184.4565, -294.2815, -329.9273, -393.7872, -253.2925],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0086, device='cuda:0', dtype=torch.float64)
tensor([-184.6195, -296.8679, -330.8620, -395.3519, -254.6166],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0099, device='cuda:0', dtype=torch.float64)
tensor([-185.0950, -298.4032, -331.9583, -397.0368, -255.1553],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0096, device='cuda:0', dtype=torch.float64)
tensor([-185.7998, -299.2900, -332.7922, -398.1662, -255.5210],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0098, device='cuda:0', dtype=torch.float64)
tensor([-187.1515, -298.1436, -334.0629, -400.4561, -254.9530],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0080, device='cuda:0', dtype=torch.float64)
tensor([-188.5178, -298.1361, -335.5775, -403.2677, -254.8523],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0076, device='cuda:0', dtype=torch.float64)
tensor([-189.8890, -298.1452, -336.8250, -405.9517, -254.7060],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0074, device='cuda:0', dtype=torch.float64)
tensor([-191.5197, -297.5755, -338.1498, -408.3362, -254.2136],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0068, device='cuda:0', dtype=torch.float64)
tensor([-193.1609, -296.8999, -338.8823, -410.1622, -254.1153],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0079, device='cuda:0', dtype=torch.float64)
tensor([-194.2761, -297.7950, -339.4609, -411.6183, -254.5527],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0087, device='cuda:0', dtype=torch.float64)
tensor([-195.0944, -299.6217, -340.3202, -413.0782, -255.3510],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0084, device='cuda:0', dtype=torch.float64)
tensor([-195.5338, -302.5344, -341.0598, -413.9779, -256.3723],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0065, device='cuda:0', dtype=torch.float64)
tensor([-195.7845, -305.7351, -341.4688, -414.4886, -257.3963],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0066, device='cuda:0', dtype=torch.float64)
tensor([-195.9646, -309.4750, -341.9336, -415.2313, -258.6964],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0097, device='cuda:0', dtype=torch.float64)
tensor([-195.8904, -314.5998, -342.7125, -416.2149, -260.5162],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0070, device='cuda:0', dtype=torch.float64)
tensor([-195.5514, -320.5771, -343.2890, -416.9523, -262.7118],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0062, device='cuda:0', dtype=torch.float64)
tensor([-195.5379, -326.0206, -344.0997, -418.2275, -264.7682],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0069, device='cuda:0', dtype=torch.float64)
tensor([-195.7919, -330.5814, -345.2256, -419.9716, -266.2868],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0074, device='cuda:0', dtype=torch.float64)
tensor([-196.3770, -334.4767, -346.6494, -421.7551, -267.3908],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0095, device='cuda:0', dtype=torch.float64)
tensor([-196.9211, -337.6621, -347.6879, -422.7731, -268.3445],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0092, device='cuda:0', dtype=torch.float64)
tensor([-198.0188, -338.8528, -348.7308, -424.4641, -268.5792],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0089, device='cuda:0', dtype=torch.float64)
tensor([-199.2109, -338.8735, -349.5911, -426.2108, -268.7107],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0061, device='cuda:0', dtype=torch.float64)
tensor([-200.6762, -338.7213, -350.3779, -427.7052, -268.7363],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0068, device='cuda:0', dtype=torch.float64)
tensor([-201.7627, -339.9354, -351.2973, -429.1123, -269.1844],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0084, device='cuda:0', dtype=torch.float64)
tensor([-201.9524, -342.3849, -351.5177, -429.1218, -269.8997],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0053, device='cuda:0', dtype=torch.float64)
tensor([-202.6759, -343.4757, -352.1178, -429.7438, -270.3120],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0066, device='cuda:0', dtype=torch.float64)
tensor([-203.0819, -345.5831, -352.5402, -430.1198, -271.0656],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0066, device='cuda:0', dtype=torch.float64)
tensor([-202.9663, -348.2830, -352.3391, -429.7231, -272.1264],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0050, device='cuda:0', dtype=torch.float64)
tensor([-202.8943, -350.5771, -351.9646, -429.0739, -273.1276],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0058, device='cuda:0', dtype=torch.float64)
tensor([-202.9365, -352.7493, -351.8142, -428.7904, -274.1980],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0062, device='cuda:0', dtype=torch.float64)
tensor([-203.2187, -353.4967, -351.4910, -428.6797, -275.0167],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0059, device='cuda:0', dtype=torch.float64)
tensor([-203.2272, -355.1623, -351.1579, -428.4502, -276.1482],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0071, device='cuda:0', dtype=torch.float64)
tensor([-203.5447, -356.3747, -351.2921, -429.4280, -277.0626],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0074, device='cuda:0', dtype=torch.float64)
tensor([-204.0117, -357.2381, -351.2762, -430.3080, -277.8330],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0053, device='cuda:0', dtype=torch.float64)
tensor([-204.5030, -357.8462, -351.2926, -431.1895, -278.4583],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0098, device='cuda:0', dtype=torch.float64)
tensor([-204.9408, -359.6292, -351.1954, -432.2597, -279.7303],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0063, device='cuda:0', dtype=torch.float64)
tensor([-204.9456, -362.3812, -351.1918, -433.0426, -281.4632],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0059, device='cuda:0', dtype=torch.float64)
tensor([-204.8100, -366.1670, -351.7068, -434.5308, -283.4836],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0074, device='cuda:0', dtype=torch.float64)
tensor([-205.4579, -367.6388, -352.4117, -436.1330, -284.5846],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0061, device='cuda:0', dtype=torch.float64)
tensor([-206.5669, -368.8255, -353.4734, -438.2818, -285.3833],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0065, device='cuda:0', dtype=torch.float64)
tensor([-207.9721, -369.3550, -354.8435, -440.5760, -285.8687],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0083, device='cuda:0', dtype=torch.float64)
tensor([-209.6370, -370.3256, -356.9522, -444.5502, -286.5865],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0049, device='cuda:0', dtype=torch.float64)
tensor([-211.0240, -371.3267, -358.7247, -448.2821, -287.6055],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0079, device='cuda:0', dtype=torch.float64)
tensor([-211.8225, -373.3856, -360.4201, -451.7314, -289.1010],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0055, device='cuda:0', dtype=torch.float64)
tensor([-212.6782, -375.5146, -362.4681, -456.3141, -290.6101],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0060, device='cuda:0', dtype=torch.float64)
tensor([-213.4441, -377.3811, -363.9941, -459.6338, -291.9678],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0080, device='cuda:0', dtype=torch.float64)
tensor([-214.1931, -379.4302, -365.5980, -463.7168, -293.3759],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0055, device='cuda:0', dtype=torch.float64)
tensor([-214.7794, -382.3719, -366.7178, -467.2547, -295.0052],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0054, device='cuda:0', dtype=torch.float64)
tensor([-215.0245, -385.9188, -367.6600, -470.4771, -296.9423],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0055, device='cuda:0', dtype=torch.float64)
tensor([-214.8740, -389.6763, -367.8956, -472.3571, -299.0396],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0059, device='cuda:0', dtype=torch.float64)
tensor([-214.5425, -394.6244, -368.0646, -472.9779, -301.3078],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0058, device='cuda:0', dtype=torch.float64)
tensor([-214.6155, -398.2487, -368.4975, -473.7415, -303.0715],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0049, device='cuda:0', dtype=torch.float64)
tensor([-214.8767, -400.7138, -368.8526, -474.6922, -304.7667],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0056, device='cuda:0', dtype=torch.float64)
tensor([-214.9905, -403.2822, -369.2182, -475.4912, -306.4552],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0076, device='cuda:0', dtype=torch.float64)
tensor([-215.0703, -406.2534, -369.5122, -475.8872, -308.3990],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0052, device='cuda:0', dtype=torch.float64)
tensor([-215.2981, -408.9222, -369.8197, -476.5067, -310.2886],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0083, device='cuda:0', dtype=torch.float64)
tensor([-216.0799, -409.6133, -370.0591, -477.1291, -311.5274],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0059, device='cuda:0', dtype=torch.float64)
tensor([-217.0501, -410.8516, -370.4545, -478.2022, -312.7776],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0083, device='cuda:0', dtype=torch.float64)
tensor([-218.3259, -412.1952, -371.6136, -480.0915, -314.2043],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0069, device='cuda:0', dtype=torch.float64)
tensor([-219.5687, -413.5095, -372.5204, -481.6011, -315.7118],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0047, device='cuda:0', dtype=torch.float64)
tensor([-221.3379, -413.4059, -373.8763, -483.9946, -316.7710],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0058, device='cuda:0', dtype=torch.float64)
tensor([-222.4167, -414.6768, -374.5678, -485.1642, -318.4533],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0080, device='cuda:0', dtype=torch.float64)
tensor([-222.4577, -419.3572, -375.1355, -485.0595, -320.9961],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0065, device='cuda:0', dtype=torch.float64)
tensor([-222.4398, -424.9723, -375.7714, -484.5469, -323.8421],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0063, device='cuda:0', dtype=torch.float64)
tensor([-222.4003, -431.5190, -376.5157, -484.4948, -327.1418],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0048, device='cuda:0', dtype=torch.float64)
tensor([-222.6159, -436.7316, -377.4642, -485.3889, -329.8037],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0055, device='cuda:0', dtype=torch.float64)
tensor([-223.1971, -439.8029, -378.4411, -486.8677, -331.5435],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0050, device='cuda:0', dtype=torch.float64)
tensor([-223.9456, -441.9975, -379.6497, -488.9324, -333.0351],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0058, device='cuda:0', dtype=torch.float64)
tensor([-224.2446, -444.6073, -380.5829, -490.5809, -334.7472],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0050, device='cuda:0', dtype=torch.float64)
tensor([-224.4918, -446.9398, -381.4362, -492.0343, -336.3678],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0049, device='cuda:0', dtype=torch.float64)
tensor([-224.8228, -448.6137, -381.9760, -493.6940, -337.7612],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0076, device='cuda:0', dtype=torch.float64)
tensor([-225.1414, -451.3254, -382.3599, -494.2483, -339.1671],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0054, device='cuda:0', dtype=torch.float64)
tensor([-225.9392, -451.7889, -382.5280, -494.9552, -339.6034],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0049, device='cuda:0', dtype=torch.float64)
tensor([-226.8419, -451.4729, -382.3494, -495.1686, -339.9478],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0058, device='cuda:0', dtype=torch.float64)
tensor([-227.8172, -451.0178, -382.8902, -496.3301, -340.2023],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0054, device='cuda:0', dtype=torch.float64)
tensor([-228.3366, -451.5285, -382.9410, -496.6813, -341.0297],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0055, device='cuda:0', dtype=torch.float64)
tensor([-228.2057, -453.7789, -382.7739, -496.0642, -342.3665],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0055, device='cuda:0', dtype=torch.float64)
tensor([-228.2132, -456.6912, -382.7533, -495.5108, -343.8815],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0045, device='cuda:0', dtype=torch.float64)
tensor([-228.3027, -459.6371, -382.6365, -494.6205, -345.3483],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0042, device='cuda:0', dtype=torch.float64)
tensor([-228.8926, -461.8749, -382.9471, -494.5031, -346.2393],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0057, device='cuda:0', dtype=torch.float64)
tensor([-229.6028, -464.5648, -383.7643, -495.4326, -347.1200],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0056, device='cuda:0', dtype=torch.float64)
tensor([-230.1465, -468.5696, -384.7763, -496.4944, -348.5184],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0055, device='cuda:0', dtype=torch.float64)
tensor([-230.8174, -471.4226, -385.8639, -498.2604, -349.5849],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0073, device='cuda:0', dtype=torch.float64)
tensor([-231.9210, -472.0542, -386.5724, -499.2825, -349.9187],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0055, device='cuda:0', dtype=torch.float64)
tensor([-232.7427, -473.6121, -387.3994, -500.3428, -350.7671],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0042, device='cuda:0', dtype=torch.float64)
tensor([-233.1317, -475.6104, -387.8236, -501.0142, -351.9340],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0058, device='cuda:0', dtype=torch.float64)
tensor([-233.5238, -477.5429, -388.2953, -502.1545, -353.0816],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0040, device='cuda:0', dtype=torch.float64)
tensor([-234.3260, -478.7522, -389.0140, -503.7635, -353.9382],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0079, device='cuda:0', dtype=torch.float64)
tensor([-235.6154, -478.2535, -389.9911, -505.4939, -353.8943],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0053, device='cuda:0', dtype=torch.float64)
tensor([-237.1420, -476.7931, -391.2695, -508.2456, -353.7836],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0046, device='cuda:0', dtype=torch.float64)
tensor([-238.9525, -475.5885, -392.8590, -511.2907, -353.7679],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0044, device='cuda:0', dtype=torch.float64)
tensor([-240.6916, -475.1888, -394.3971, -514.1965, -353.9469],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0053, device='cuda:0', dtype=torch.float64)
tensor([-242.0982, -476.5701, -395.9518, -516.9810, -354.9230],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0045, device='cuda:0', dtype=torch.float64)
tensor([-243.2704, -478.4220, -397.2746, -519.6620, -356.2025],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0072, device='cuda:0', dtype=torch.float64)
tensor([-243.6043, -482.4328, -397.8711, -520.8189, -358.3739],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0056, device='cuda:0', dtype=torch.float64)
tensor([-243.8261, -486.5455, -398.3416, -521.7407, -360.8254],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0059, device='cuda:0', dtype=torch.float64)
tensor([-243.7896, -490.8698, -398.5127, -521.7309, -363.4527],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0038, device='cuda:0', dtype=torch.float64)
tensor([-243.7242, -495.3241, -398.9367, -522.4483, -366.3807],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0041, device='cuda:0', dtype=torch.float64)
tensor([-243.4320, -500.4942, -399.0771, -522.9622, -369.7028],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0052, device='cuda:0', dtype=torch.float64)
tensor([-242.8927, -506.7702, -398.8803, -522.8142, -373.6089],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0049, device='cuda:0', dtype=torch.float64)
tensor([-242.3361, -513.8812, -398.8514, -523.3464, -378.2314],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0048, device='cuda:0', dtype=torch.float64)
tensor([-241.8469, -521.3983, -398.8426, -524.1465, -383.0499],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0055, device='cuda:0', dtype=torch.float64)
tensor([-241.4495, -530.0313, -399.2494, -525.2320, -388.0861],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0052, device='cuda:0', dtype=torch.float64)
tensor([-241.5066, -536.5449, -400.2061, -526.8148, -391.6611],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0070, device='cuda:0', dtype=torch.float64)
tensor([-241.8018, -541.2137, -401.2898, -528.1926, -394.1629],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0066, device='cuda:0', dtype=torch.float64)
tensor([-242.5049, -545.0983, -402.8409, -529.3768, -395.9526],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0075, device='cuda:0', dtype=torch.float64)
tensor([-243.6409, -547.2532, -404.8762, -531.3352, -397.3221],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0058, device='cuda:0', dtype=torch.float64)
tensor([-245.2839, -545.7538, -406.8295, -533.5851, -396.9817],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0549, device='cuda:0', dtype=torch.float64)
tensor([-247.0873, -544.5974, -408.7643, -534.9942, -396.4601],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0236, device='cuda:0', dtype=torch.float64)
tensor([-248.7666, -544.4281, -410.7617, -535.4808, -396.0173],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0051, device='cuda:0', dtype=torch.float64)
tensor([-250.4895, -544.4711, -412.3239, -535.3161, -395.6606],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0055, device='cuda:0', dtype=torch.float64)
tensor([-252.1977, -544.1418, -413.7081, -535.0008, -395.1353],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0045, device='cuda:0', dtype=torch.float64)
tensor([-253.8440, -543.8184, -414.9556, -534.6843, -394.5991],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0065, device='cuda:0', dtype=torch.float64)
tensor([-256.1841, -541.1223, -416.7882, -536.4237, -393.3418],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0041, device='cuda:0', dtype=torch.float64)
tensor([-258.1719, -539.5842, -418.0182, -537.3419, -392.8821],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0037, device='cuda:0', dtype=torch.float64)
tensor([-260.4936, -536.2949, -418.9358, -538.6079, -391.8050],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0034, device='cuda:0', dtype=torch.float64)
tensor([-262.5672, -533.1791, -419.6105, -539.9448, -391.1359],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0046, device='cuda:0', dtype=torch.float64)
tensor([-263.9284, -531.7547, -419.7462, -540.9120, -391.4962],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0050, device='cuda:0', dtype=torch.float64)
tensor([-265.0996, -531.5824, -420.2071, -542.7942, -392.4971],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0049, device='cuda:0', dtype=torch.float64)
tensor([-265.4614, -533.6189, -419.9337, -543.7465, -394.6996],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0065, device='cuda:0', dtype=torch.float64)
tensor([-265.1411, -537.2642, -419.9302, -545.1801, -397.4614],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0039, device='cuda:0', dtype=torch.float64)
tensor([-265.0440, -540.7777, -419.9687, -546.8849, -400.2292],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0046, device='cuda:0', dtype=torch.float64)
tensor([-264.5839, -546.6826, -419.8134, -547.7528, -404.0388],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0037, device='cuda:0', dtype=torch.float64)
tensor([-264.0105, -553.9778, -419.7596, -548.2033, -408.4615],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0032, device='cuda:0', dtype=torch.float64)
tensor([-263.3534, -561.6287, -419.7945, -549.0853, -413.3473],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0051, device='cuda:0', dtype=torch.float64)
tensor([-262.8663, -568.7871, -419.8376, -549.8980, -417.8669],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0037, device='cuda:0', dtype=torch.float64)
tensor([-262.7752, -574.2421, -420.0699, -551.0230, -421.3391],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0052, device='cuda:0', dtype=torch.float64)
tensor([-262.7776, -579.2592, -420.2480, -552.2751, -424.6526],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0061, device='cuda:0', dtype=torch.float64)
tensor([-263.2784, -582.4801, -420.6635, -553.8529, -426.8982],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0058, device='cuda:0', dtype=torch.float64)
tensor([-264.2155, -584.3144, -421.3638, -554.9183, -427.7696],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0052, device='cuda:0', dtype=torch.float64)
tensor([-265.3305, -585.7813, -422.4502, -556.7417, -428.3721],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0050, device='cuda:0', dtype=torch.float64)
tensor([-266.7191, -585.6690, -423.6399, -558.8591, -428.0118],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0039, device='cuda:0', dtype=torch.float64)
tensor([-268.1606, -584.9296, -424.7265, -560.9986, -427.1526],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0042, device='cuda:0', dtype=torch.float64)
tensor([-269.6410, -585.0305, -425.7600, -563.1024, -427.0623],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0055, device='cuda:0', dtype=torch.float64)
tensor([-271.3403, -585.4463, -427.1090, -565.7105, -427.0893],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0038, device='cuda:0', dtype=torch.float64)
tensor([-272.5789, -587.3201, -428.1339, -567.0493, -428.0979],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0036, device='cuda:0', dtype=torch.float64)
tensor([-273.8127, -589.9936, -429.2192, -568.4813, -429.3921],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0038, device='cuda:0', dtype=torch.float64)
tensor([-275.1543, -593.0520, -430.8933, -570.9886, -430.6959],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0034, device='cuda:0', dtype=torch.float64)
tensor([-276.1404, -597.7163, -432.1972, -572.6056, -433.0517],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0054, device='cuda:0', dtype=torch.float64)
tensor([-277.2837, -602.4386, -433.4211, -574.5143, -435.3937],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0065, device='cuda:0', dtype=torch.float64)
tensor([-278.4096, -605.8514, -434.0269, -574.8546, -436.9984],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0037, device='cuda:0', dtype=torch.float64)
tensor([-279.2435, -610.4342, -434.3844, -574.6533, -439.3577],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0030, device='cuda:0', dtype=torch.float64)
tensor([-280.1257, -614.7767, -435.0118, -574.6468, -441.7334],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0046, device='cuda:0', dtype=torch.float64)
tensor([-280.6576, -618.7908, -434.8782, -573.8283, -444.4662],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0029, device='cuda:0', dtype=torch.float64)
tensor([-281.0635, -622.4381, -434.7921, -573.0198, -447.0998],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0049, device='cuda:0', dtype=torch.float64)
tensor([-281.8517, -625.1305, -434.9759, -572.8849, -449.2204],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0037, device='cuda:0', dtype=torch.float64)
tensor([-282.3441, -628.6275, -434.6550, -572.4604, -452.1727],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0054, device='cuda:0', dtype=torch.float64)
tensor([-282.6162, -631.7875, -434.0594, -571.0075, -454.9786],
       device='cuda:0', dtype=torch.float64)
Saved results to /home/idrissm/projects/def-mh541-ab/idrissm/neighborVCA/runs/results/tsp/tsp64_/home/idrissm/projects/def-mh541-ab/idrissm/neighborVCA/scripts/VCA/tsp/configHVCA64.json_20250925_100030.csv
