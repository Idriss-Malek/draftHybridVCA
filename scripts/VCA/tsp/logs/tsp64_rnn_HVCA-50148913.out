ng10401
==== Thu 25 Sep 2025 03:41:41 AM EDT | job 50148913 | node ng10401 ====
model= instance= sa_anneal=
SLURM_JOB_GPUS=1
CUDA_VISIBLE_DEVICES=0
0, GPU-95f0b3a4-c726-7ac8-562b-911b52e5ba09, NVIDIA A100-SXM4-40GB
/home/idrissm/projects/def-mh541-ab/idrissm/neighborVCA/runs/tsp.py:49: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  model_opt.load_state_dict(torch.load("/home/idrissm/projects/def-mh541-ab/idrissm/neighborVCA/scripts/VCA/tsp/vca.pth", map_location=device), strict=True)
/home/idrissm/projects/def-mh541-ab/idrissm/neighborVCA/runs/tsp.py:62: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  heuristic_samples_idx = torch.load(heuristic_samples_file, map_location=device)
rnn.0.0.weight tensor(0.3170, device='cuda:0', dtype=torch.float64)
tensor([-1.6865, -2.6073, -2.8708, -3.3009, -3.1848], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(5.0354, device='cuda:0', dtype=torch.float64)
tensor([-14.4420, -45.6815, -20.3319, -43.9481, -45.2178], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(262.2607, device='cuda:0', dtype=torch.float64)
tensor([-11.2595, -10.9702,  -3.4619,  -7.1320,  -5.7480], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(162.0420, device='cuda:0', dtype=torch.float64)
tensor([ -9.3402, -23.5550, -18.2759, -12.7365, -11.0287], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(226.8343, device='cuda:0', dtype=torch.float64)
tensor([ -5.1013,  -7.9205, -12.8064,  -8.7364,  -6.8890], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(104.2594, device='cuda:0', dtype=torch.float64)
tensor([-2.4127, -5.3739, -3.3718, -8.8217, -3.8723], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(81.6097, device='cuda:0', dtype=torch.float64)
tensor([-2.6672, -5.5305, -3.1283, -5.2181, -3.9053], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(84.1496, device='cuda:0', dtype=torch.float64)
tensor([-2.4400, -5.3232, -3.1887, -4.3505, -4.3351], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(53.9176, device='cuda:0', dtype=torch.float64)
tensor([-2.4604, -4.4996, -3.1089, -3.8129, -4.7652], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(39.1754, device='cuda:0', dtype=torch.float64)
tensor([-2.5461, -4.3662, -3.0337, -3.9275, -4.9574], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(29.7390, device='cuda:0', dtype=torch.float64)
tensor([-2.5358, -5.7479, -3.0437, -7.4345, -5.4395], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(42.0413, device='cuda:0', dtype=torch.float64)
tensor([-2.3523, -5.9852, -3.0135, -9.5093, -6.0457], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(46.3187, device='cuda:0', dtype=torch.float64)
tensor([-2.1293, -4.7749, -2.8680, -6.7547, -5.8656], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(37.6563, device='cuda:0', dtype=torch.float64)
tensor([-1.9358, -3.6909, -2.8180, -4.2926, -5.0346], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(23.8934, device='cuda:0', dtype=torch.float64)
tensor([-1.8310, -3.3954, -2.8532, -4.0381, -4.3088], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(7.1505, device='cuda:0', dtype=torch.float64)
tensor([-1.8284, -3.6949, -2.9489, -4.3266, -3.9031], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(4.3720, device='cuda:0', dtype=torch.float64)
tensor([-1.9247, -4.2020, -3.0657, -4.8412, -3.6988], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(5.1011, device='cuda:0', dtype=torch.float64)
tensor([-2.3118, -4.4974, -3.1465, -5.3415, -3.6423], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(8.2626, device='cuda:0', dtype=torch.float64)
tensor([-3.1812, -4.4503, -3.2056, -5.5884, -3.6730], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(12.9791, device='cuda:0', dtype=torch.float64)
tensor([-3.5463, -4.0998, -3.2699, -5.4819, -3.6879], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5177, device='cuda:0', dtype=torch.float64)
tensor([-3.9814, -4.0504, -3.3952, -5.5075, -3.7367], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3791, device='cuda:0', dtype=torch.float64)
tensor([-4.4749, -4.3076, -3.6474, -5.6136, -3.8211], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3433, device='cuda:0', dtype=torch.float64)
tensor([-4.9758, -4.8994, -4.1532, -5.7743, -3.9437], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6478, device='cuda:0', dtype=torch.float64)
tensor([-5.4905, -5.8119, -4.9787, -5.9850, -4.1181], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6505, device='cuda:0', dtype=torch.float64)
tensor([-6.0235, -6.9869, -6.0468, -6.2351, -4.3368], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5802, device='cuda:0', dtype=torch.float64)
tensor([-6.5329, -8.2972, -7.1818, -6.5093, -4.6005], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1716, device='cuda:0', dtype=torch.float64)
tensor([-7.0188, -9.6538, -8.3018, -6.7915, -4.9170], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1937, device='cuda:0', dtype=torch.float64)
tensor([ -7.4788, -11.0369,  -9.3946,  -7.0783,  -5.2909], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4406, device='cuda:0', dtype=torch.float64)
tensor([ -7.9338, -12.4296, -10.4706,  -7.3946,  -5.6946], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1268, device='cuda:0', dtype=torch.float64)
tensor([ -8.3814, -13.7982, -11.4985,  -7.7165,  -6.1331], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0630, device='cuda:0', dtype=torch.float64)
tensor([ -8.8169, -15.1523, -12.5067,  -8.0390,  -6.5387], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2553, device='cuda:0', dtype=torch.float64)
tensor([ -9.1983, -16.4442, -13.4494,  -8.3431,  -6.9429], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0925, device='cuda:0', dtype=torch.float64)
tensor([ -9.5651, -17.6740, -14.3322,  -8.6451,  -7.3327], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2466, device='cuda:0', dtype=torch.float64)
tensor([ -9.9258, -18.7855, -15.1393,  -8.9260,  -7.6970], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2462, device='cuda:0', dtype=torch.float64)
tensor([-10.2907, -19.8491, -15.9031,  -9.2163,  -8.0491], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9953, device='cuda:0', dtype=torch.float64)
tensor([-10.6758, -20.8924, -16.6360,  -9.5038,  -8.4019], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2302, device='cuda:0', dtype=torch.float64)
tensor([-11.0530, -21.8671, -17.3260,  -9.7675,  -8.7120], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0800, device='cuda:0', dtype=torch.float64)
tensor([-11.4391, -22.8077, -18.0047, -10.0173,  -9.0211], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7678, device='cuda:0', dtype=torch.float64)
tensor([-11.7804, -23.6829, -18.6423, -10.2497,  -9.3482], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9641, device='cuda:0', dtype=torch.float64)
tensor([-12.1040, -24.4892, -19.2611, -10.4540,  -9.6254], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8013, device='cuda:0', dtype=torch.float64)
tensor([-12.4360, -25.2434, -19.8507, -10.6393,  -9.8646], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0931, device='cuda:0', dtype=torch.float64)
tensor([-12.7560, -25.8962, -20.3934, -10.8097, -10.0736], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9130, device='cuda:0', dtype=torch.float64)
tensor([-13.0499, -26.4843, -20.9091, -10.9592, -10.2327], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0932, device='cuda:0', dtype=torch.float64)
tensor([-13.3592, -27.0552, -21.3969, -11.0970, -10.3600], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9304, device='cuda:0', dtype=torch.float64)
tensor([-13.6507, -27.5512, -21.8570, -11.2259, -10.4946], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8669, device='cuda:0', dtype=torch.float64)
tensor([-13.9042, -27.9717, -22.2671, -11.3443, -10.6184], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6811, device='cuda:0', dtype=torch.float64)
tensor([-14.1586, -28.3634, -22.6316, -11.4814, -10.7690], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6774, device='cuda:0', dtype=torch.float64)
tensor([-14.3934, -28.7240, -22.9827, -11.6167, -10.9288], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7553, device='cuda:0', dtype=torch.float64)
tensor([-14.5886, -29.0356, -23.3132, -11.7225, -11.0564], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7530, device='cuda:0', dtype=torch.float64)
tensor([-14.7493, -29.3198, -23.6055, -11.8197, -11.1893], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5496, device='cuda:0', dtype=torch.float64)
tensor([-14.8764, -29.5637, -23.8516, -11.9045, -11.3131], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6526, device='cuda:0', dtype=torch.float64)
tensor([-14.9879, -29.7411, -24.0646, -11.9786, -11.4132], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7843, device='cuda:0', dtype=torch.float64)
tensor([-15.0693, -29.8652, -24.2340, -12.0348, -11.4833], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7489, device='cuda:0', dtype=torch.float64)
tensor([-15.1020, -29.9382, -24.3173, -12.0745, -11.5317], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7016, device='cuda:0', dtype=torch.float64)
tensor([-15.1244, -29.9963, -24.4095, -12.1004, -11.5360], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5399, device='cuda:0', dtype=torch.float64)
tensor([-15.1496, -30.0450, -24.4878, -12.1220, -11.5330], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6257, device='cuda:0', dtype=torch.float64)
tensor([-15.1382, -30.0216, -24.5053, -12.1193, -11.5345], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5429, device='cuda:0', dtype=torch.float64)
tensor([-15.0938, -29.9619, -24.4886, -12.0951, -11.5438], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5549, device='cuda:0', dtype=torch.float64)
tensor([-15.0462, -29.9116, -24.4804, -12.0736, -11.5661], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4944, device='cuda:0', dtype=torch.float64)
tensor([-14.9822, -29.8386, -24.4717, -12.0397, -11.5788], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4506, device='cuda:0', dtype=torch.float64)
tensor([-14.9013, -29.7480, -24.4536, -12.0074, -11.5982], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4911, device='cuda:0', dtype=torch.float64)
tensor([-14.8511, -29.6597, -24.4454, -11.9698, -11.6015], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3842, device='cuda:0', dtype=torch.float64)
tensor([-14.7913, -29.5245, -24.3921, -11.9320, -11.6124], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3978, device='cuda:0', dtype=torch.float64)
tensor([-14.7492, -29.3768, -24.3396, -11.9034, -11.6461], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4091, device='cuda:0', dtype=torch.float64)
tensor([-14.7248, -29.2466, -24.3080, -11.8856, -11.7056], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3537, device='cuda:0', dtype=torch.float64)
tensor([-14.7003, -29.0928, -24.2713, -11.8499, -11.7493], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3781, device='cuda:0', dtype=torch.float64)
tensor([-14.6610, -28.9273, -24.2230, -11.8143, -11.7861], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3750, device='cuda:0', dtype=torch.float64)
tensor([-14.6153, -28.7415, -24.1562, -11.7623, -11.7866], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3186, device='cuda:0', dtype=torch.float64)
tensor([-14.5864, -28.5829, -24.1064, -11.7228, -11.7976], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3256, device='cuda:0', dtype=torch.float64)
tensor([-14.5457, -28.4195, -24.0521, -11.6829, -11.8176], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2498, device='cuda:0', dtype=torch.float64)
tensor([-14.5112, -28.2721, -23.9916, -11.6396, -11.8292], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2428, device='cuda:0', dtype=torch.float64)
tensor([-14.4712, -28.1376, -23.9325, -11.6006, -11.8336], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2547, device='cuda:0', dtype=torch.float64)
tensor([-14.4334, -28.0149, -23.8738, -11.5529, -11.8225], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2299, device='cuda:0', dtype=torch.float64)
tensor([-14.3911, -27.8925, -23.8179, -11.4986, -11.7984], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3027, device='cuda:0', dtype=torch.float64)
tensor([-14.3504, -27.7796, -23.7550, -11.4562, -11.7892], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1610, device='cuda:0', dtype=torch.float64)
tensor([-14.3129, -27.6733, -23.6915, -11.4094, -11.7676], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2292, device='cuda:0', dtype=torch.float64)
tensor([-14.2739, -27.5632, -23.6310, -11.3651, -11.7482], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1642, device='cuda:0', dtype=torch.float64)
tensor([-14.2320, -27.4521, -23.5732, -11.3159, -11.7200], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1828, device='cuda:0', dtype=torch.float64)
tensor([-14.1896, -27.3455, -23.5060, -11.2677, -11.6921], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1800, device='cuda:0', dtype=torch.float64)
tensor([-14.1557, -27.2319, -23.4454, -11.2137, -11.6426], device='cuda:0',
       dtype=torch.float64)
Saved results to /home/idrissm/projects/def-mh541-ab/idrissm/neighborVCA/runs/results/tsp/tsp64_/home/idrissm/projects/def-mh541-ab/idrissm/neighborVCA/scripts/VCA/tsp/configHVCA64.json_20250925_034210.csv
rnn.0.0.weight tensor(0.3170, device='cuda:0', dtype=torch.float64)
tensor([-1.6865, -2.6073, -2.8708, -3.3009, -3.1848], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(5.0354, device='cuda:0', dtype=torch.float64)
tensor([-14.4420, -45.6815, -20.3319, -43.9481, -45.2178], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(262.2607, device='cuda:0', dtype=torch.float64)
tensor([-11.2595, -10.9702,  -3.4619,  -7.1320,  -5.7480], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(162.0420, device='cuda:0', dtype=torch.float64)
tensor([ -9.3402, -23.5550, -18.2759, -12.7365, -11.0287], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(226.8343, device='cuda:0', dtype=torch.float64)
tensor([ -5.1013,  -7.9205, -12.8064,  -8.7364,  -6.8890], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(121.5748, device='cuda:0', dtype=torch.float64)
tensor([-2.3180, -4.8304, -3.1569, -7.8146, -3.7654], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(90.0623, device='cuda:0', dtype=torch.float64)
tensor([-2.5082, -5.1202, -3.0570, -4.5737, -3.8835], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(87.5957, device='cuda:0', dtype=torch.float64)
tensor([-2.4237, -5.2133, -3.0823, -4.0287, -4.4125], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(55.1453, device='cuda:0', dtype=torch.float64)
tensor([-2.4800, -4.3681, -3.0295, -3.4800, -4.7928], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(47.4648, device='cuda:0', dtype=torch.float64)
tensor([-2.4819, -4.6789, -2.9718, -4.2843, -4.9508], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(48.9452, device='cuda:0', dtype=torch.float64)
tensor([-2.2927, -5.1854, -2.9255, -6.9152, -5.3027], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(59.5775, device='cuda:0', dtype=torch.float64)
tensor([-2.0446, -4.2390, -2.8231, -5.4177, -5.2847], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(49.8282, device='cuda:0', dtype=torch.float64)
tensor([-1.8592, -3.4007, -2.7955, -4.0042, -4.6091], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(31.2968, device='cuda:0', dtype=torch.float64)
tensor([-1.7696, -3.3273, -2.8521, -4.0231, -4.0073], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(15.4211, device='cuda:0', dtype=torch.float64)
tensor([-1.7719, -3.6794, -2.9605, -4.2196, -3.6526], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(8.9466, device='cuda:0', dtype=torch.float64)
tensor([-1.8963, -3.8452, -3.0589, -4.4377, -3.5228], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(15.4169, device='cuda:0', dtype=torch.float64)
tensor([-2.2446, -3.6131, -3.1508, -4.5703, -3.4987], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(25.8247, device='cuda:0', dtype=torch.float64)
tensor([-2.2289, -3.2680, -3.2388, -4.4486, -3.4540], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(29.2149, device='cuda:0', dtype=torch.float64)
tensor([-1.8487, -3.0336, -3.3100, -4.1100, -3.3651], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(23.8605, device='cuda:0', dtype=torch.float64)
tensor([-1.6707, -2.8516, -3.4114, -3.8206, -3.2788], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(13.9410, device='cuda:0', dtype=torch.float64)
tensor([-1.6219, -2.7563, -3.5452, -3.6573, -3.2248], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(10.3632, device='cuda:0', dtype=torch.float64)
tensor([-1.6225, -2.7380, -3.5268, -3.5492, -3.2162], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(9.1823, device='cuda:0', dtype=torch.float64)
tensor([-1.6582, -2.7683, -3.4014, -3.4647, -3.2687], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(8.7377, device='cuda:0', dtype=torch.float64)
tensor([-1.7260, -2.8380, -3.3553, -3.3890, -3.3732], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(9.2475, device='cuda:0', dtype=torch.float64)
tensor([-1.8177, -2.9497, -3.4107, -3.3102, -3.4865], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(7.1124, device='cuda:0', dtype=torch.float64)
tensor([-1.9209, -3.1070, -3.5136, -3.2346, -3.5742], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(6.6367, device='cuda:0', dtype=torch.float64)
tensor([-2.0190, -3.2625, -3.6093, -3.1648, -3.6087], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(6.6515, device='cuda:0', dtype=torch.float64)
tensor([-2.1038, -3.3413, -3.6365, -3.1070, -3.5971], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(6.2728, device='cuda:0', dtype=torch.float64)
tensor([-2.1758, -3.3275, -3.5904, -3.0677, -3.5686], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(5.3591, device='cuda:0', dtype=torch.float64)
tensor([-2.2352, -3.2792, -3.4968, -3.0448, -3.5452], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(3.0985, device='cuda:0', dtype=torch.float64)
tensor([-2.2897, -3.2561, -3.4138, -3.0373, -3.5422], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(3.2497, device='cuda:0', dtype=torch.float64)
tensor([-2.3401, -3.2449, -3.3415, -3.0367, -3.5458], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(3.3089, device='cuda:0', dtype=torch.float64)
tensor([-2.3830, -3.2323, -3.2841, -3.0414, -3.5423], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(3.6036, device='cuda:0', dtype=torch.float64)
tensor([-2.4159, -3.2139, -3.2366, -3.0515, -3.5248], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(3.5973, device='cuda:0', dtype=torch.float64)
tensor([-2.4335, -3.1905, -3.1978, -3.0637, -3.4952], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.7935, device='cuda:0', dtype=torch.float64)
tensor([-2.4440, -3.1727, -3.1682, -3.0795, -3.4649], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.3192, device='cuda:0', dtype=torch.float64)
tensor([-2.4451, -3.1633, -3.1461, -3.0996, -3.4367], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.6541, device='cuda:0', dtype=torch.float64)
tensor([-2.4358, -3.1648, -3.1270, -3.1205, -3.4106], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.6721, device='cuda:0', dtype=torch.float64)
tensor([-2.4140, -3.1803, -3.1100, -3.1408, -3.3836], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.4798, device='cuda:0', dtype=torch.float64)
tensor([-2.3850, -3.2088, -3.0976, -3.1632, -3.3601], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5453, device='cuda:0', dtype=torch.float64)
tensor([-2.3635, -3.2553, -3.0894, -3.1851, -3.3427], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8269, device='cuda:0', dtype=torch.float64)
tensor([-2.3508, -3.3197, -3.0850, -3.2112, -3.3320], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6623, device='cuda:0', dtype=torch.float64)
tensor([-2.3461, -3.4023, -3.0834, -3.2412, -3.3279], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4764, device='cuda:0', dtype=torch.float64)
tensor([-2.3486, -3.4977, -3.0838, -3.2668, -3.3284], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4812, device='cuda:0', dtype=torch.float64)
tensor([-2.3559, -3.6087, -3.0861, -3.2923, -3.3331], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4634, device='cuda:0', dtype=torch.float64)
tensor([-2.3678, -3.7221, -3.0889, -3.3174, -3.3419], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4485, device='cuda:0', dtype=torch.float64)
tensor([-2.3837, -3.8411, -3.0918, -3.3454, -3.3533], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6080, device='cuda:0', dtype=torch.float64)
tensor([-2.4044, -3.9469, -3.0967, -3.3744, -3.3682], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7627, device='cuda:0', dtype=torch.float64)
tensor([-2.4271, -4.0578, -3.1035, -3.4069, -3.3840], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4288, device='cuda:0', dtype=torch.float64)
tensor([-2.4523, -4.1704, -3.1116, -3.4374, -3.4021], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6360, device='cuda:0', dtype=torch.float64)
tensor([-2.4829, -4.2963, -3.1220, -3.4633, -3.4235], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4597, device='cuda:0', dtype=torch.float64)
tensor([-2.5153, -4.4134, -3.1348, -3.4884, -3.4458], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2887, device='cuda:0', dtype=torch.float64)
tensor([-2.5498, -4.5210, -3.1485, -3.5178, -3.4705], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6521, device='cuda:0', dtype=torch.float64)
tensor([-2.5909, -4.6434, -3.1647, -3.5540, -3.4993], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3897, device='cuda:0', dtype=torch.float64)
tensor([-2.6344, -4.7798, -3.1818, -3.5997, -3.5299], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2975, device='cuda:0', dtype=torch.float64)
tensor([-2.6821, -4.9177, -3.1993, -3.6433, -3.5616], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5428, device='cuda:0', dtype=torch.float64)
tensor([-2.7287, -5.0586, -3.2144, -3.6979, -3.5922], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3215, device='cuda:0', dtype=torch.float64)
tensor([-2.7773, -5.1932, -3.2301, -3.7599, -3.6236], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3508, device='cuda:0', dtype=torch.float64)
tensor([-2.8274, -5.3064, -3.2469, -3.8187, -3.6565], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3917, device='cuda:0', dtype=torch.float64)
tensor([-2.8779, -5.4259, -3.2646, -3.8814, -3.6897], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2729, device='cuda:0', dtype=torch.float64)
tensor([-2.9373, -5.5447, -3.2830, -3.9473, -3.7255], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0136, device='cuda:0', dtype=torch.float64)
tensor([-2.9939, -5.6599, -3.3020, -4.0250, -3.7602], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3808, device='cuda:0', dtype=torch.float64)
tensor([-3.0515, -5.7503, -3.3219, -4.1075, -3.7965], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3952, device='cuda:0', dtype=torch.float64)
tensor([-3.1161, -5.8299, -3.3422, -4.2082, -3.8341], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3574, device='cuda:0', dtype=torch.float64)
tensor([-3.1791, -5.8961, -3.3663, -4.2988, -3.8710], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0662, device='cuda:0', dtype=torch.float64)
tensor([-3.2406, -5.9619, -3.3920, -4.3827, -3.9090], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3952, device='cuda:0', dtype=torch.float64)
tensor([-3.3055, -6.0331, -3.4181, -4.4623, -3.9485], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2769, device='cuda:0', dtype=torch.float64)
tensor([-3.3604, -6.0820, -3.4438, -4.5502, -3.9868], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1919, device='cuda:0', dtype=torch.float64)
tensor([-3.4229, -6.1216, -3.4724, -4.6342, -4.0274], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1007, device='cuda:0', dtype=torch.float64)
tensor([-3.4883, -6.1469, -3.5021, -4.7084, -4.0673], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8714, device='cuda:0', dtype=torch.float64)
tensor([-3.5596, -6.1773, -3.5339, -4.8001, -4.1096], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1027, device='cuda:0', dtype=torch.float64)
tensor([-3.6274, -6.2128, -3.5652, -4.8844, -4.1508], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1630, device='cuda:0', dtype=torch.float64)
tensor([-3.6949, -6.2635, -3.5974, -4.9626, -4.1931], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1295, device='cuda:0', dtype=torch.float64)
tensor([-3.7559, -6.3246, -3.6278, -5.0480, -4.2349], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0566, device='cuda:0', dtype=torch.float64)
tensor([-3.8117, -6.3901, -3.6594, -5.1486, -4.2750], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9541, device='cuda:0', dtype=torch.float64)
tensor([-3.8684, -6.4204, -3.6896, -5.2294, -4.3174], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1022, device='cuda:0', dtype=torch.float64)
tensor([-3.9285, -6.4733, -3.7203, -5.3209, -4.3614], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8229, device='cuda:0', dtype=torch.float64)
tensor([-3.9930, -6.5300, -3.7520, -5.4095, -4.4061], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0794, device='cuda:0', dtype=torch.float64)
tensor([-4.0631, -6.6118, -3.7885, -5.5111, -4.4507], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8276, device='cuda:0', dtype=torch.float64)
tensor([-4.1292, -6.7001, -3.8263, -5.6154, -4.4957], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9921, device='cuda:0', dtype=torch.float64)
tensor([-4.1931, -6.7897, -3.8650, -5.7159, -4.5386], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8420, device='cuda:0', dtype=torch.float64)
tensor([-4.2594, -6.8794, -3.9061, -5.8096, -4.5811], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9942, device='cuda:0', dtype=torch.float64)
tensor([-4.3305, -6.9532, -3.9507, -5.8944, -4.6246], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0419, device='cuda:0', dtype=torch.float64)
tensor([-4.4080, -7.0058, -3.9930, -5.9810, -4.6664], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1912, device='cuda:0', dtype=torch.float64)
tensor([-4.4852, -7.0508, -4.0356, -6.0584, -4.7090], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7882, device='cuda:0', dtype=torch.float64)
tensor([-4.5567, -7.0843, -4.0768, -6.1378, -4.7508], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7439, device='cuda:0', dtype=torch.float64)
tensor([-4.6197, -7.1247, -4.1208, -6.2234, -4.7920], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7519, device='cuda:0', dtype=torch.float64)
tensor([-4.6839, -7.1907, -4.1680, -6.2987, -4.8332], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7738, device='cuda:0', dtype=torch.float64)
tensor([-4.7392, -7.2505, -4.2158, -6.3681, -4.8731], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7498, device='cuda:0', dtype=torch.float64)
tensor([-4.7885, -7.2965, -4.2587, -6.4479, -4.9116], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7421, device='cuda:0', dtype=torch.float64)
tensor([-4.8311, -7.3349, -4.3012, -6.5285, -4.9476], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8161, device='cuda:0', dtype=torch.float64)
tensor([-4.8663, -7.3418, -4.3397, -6.5965, -4.9828], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7927, device='cuda:0', dtype=torch.float64)
tensor([-4.8935, -7.3564, -4.3731, -6.6643, -5.0151], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7520, device='cuda:0', dtype=torch.float64)
tensor([-4.9240, -7.3650, -4.4095, -6.7278, -5.0465], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7129, device='cuda:0', dtype=torch.float64)
tensor([-4.9597, -7.3861, -4.4497, -6.7955, -5.0786], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6687, device='cuda:0', dtype=torch.float64)
tensor([-4.9947, -7.4059, -4.4909, -6.8681, -5.1076], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6836, device='cuda:0', dtype=torch.float64)
tensor([-5.0294, -7.4234, -4.5294, -6.9517, -5.1347], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6698, device='cuda:0', dtype=torch.float64)
tensor([-5.0619, -7.4491, -4.5628, -7.0338, -5.1589], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8472, device='cuda:0', dtype=torch.float64)
tensor([-5.0978, -7.4742, -4.6029, -7.1151, -5.1835], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6634, device='cuda:0', dtype=torch.float64)
tensor([-5.1357, -7.5092, -4.6417, -7.1998, -5.2067], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7827, device='cuda:0', dtype=torch.float64)
tensor([-5.1790, -7.5406, -4.6785, -7.2831, -5.2298], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6291, device='cuda:0', dtype=torch.float64)
tensor([-5.2218, -7.5782, -4.7166, -7.3699, -5.2529], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7033, device='cuda:0', dtype=torch.float64)
tensor([-5.2696, -7.6325, -4.7591, -7.4432, -5.2764], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8287, device='cuda:0', dtype=torch.float64)
tensor([-5.3164, -7.6859, -4.7986, -7.5297, -5.2983], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6742, device='cuda:0', dtype=torch.float64)
tensor([-5.3629, -7.7351, -4.8441, -7.6027, -5.3211], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6064, device='cuda:0', dtype=torch.float64)
tensor([-5.4087, -7.7709, -4.8870, -7.6566, -5.3428], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5901, device='cuda:0', dtype=torch.float64)
tensor([-5.4556, -7.8174, -4.9254, -7.7190, -5.3642], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6477, device='cuda:0', dtype=torch.float64)
tensor([-5.5002, -7.8591, -4.9617, -7.7889, -5.3837], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6453, device='cuda:0', dtype=torch.float64)
tensor([-5.5349, -7.8903, -4.9888, -7.8570, -5.4022], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6579, device='cuda:0', dtype=torch.float64)
tensor([-5.5634, -7.9144, -5.0110, -7.9292, -5.4208], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5475, device='cuda:0', dtype=torch.float64)
tensor([-5.5941, -7.9364, -5.0313, -8.0102, -5.4364], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4876, device='cuda:0', dtype=torch.float64)
tensor([-5.6251, -7.9599, -5.0535, -8.0651, -5.4503], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6356, device='cuda:0', dtype=torch.float64)
tensor([-5.6488, -7.9845, -5.0700, -8.1275, -5.4630], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5324, device='cuda:0', dtype=torch.float64)
tensor([-5.6788, -8.0155, -5.0905, -8.1811, -5.4755], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5785, device='cuda:0', dtype=torch.float64)
tensor([-5.7102, -8.0435, -5.1156, -8.2235, -5.4870], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4142, device='cuda:0', dtype=torch.float64)
tensor([-5.7419, -8.0666, -5.1420, -8.2532, -5.4992], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4503, device='cuda:0', dtype=torch.float64)
tensor([-5.7727, -8.0851, -5.1695, -8.2857, -5.5121], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4337, device='cuda:0', dtype=torch.float64)
tensor([-5.8033, -8.0937, -5.1958, -8.3103, -5.5238], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4464, device='cuda:0', dtype=torch.float64)
tensor([-5.8347, -8.1029, -5.2259, -8.3334, -5.5347], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4443, device='cuda:0', dtype=torch.float64)
tensor([-5.8655, -8.1086, -5.2584, -8.3568, -5.5451], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3566, device='cuda:0', dtype=torch.float64)
tensor([-5.8922, -8.1096, -5.2832, -8.3819, -5.5537], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4691, device='cuda:0', dtype=torch.float64)
tensor([-5.9219, -8.1236, -5.3116, -8.4022, -5.5618], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4644, device='cuda:0', dtype=torch.float64)
tensor([-5.9477, -8.1422, -5.3294, -8.4097, -5.5678], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4204, device='cuda:0', dtype=torch.float64)
tensor([-5.9685, -8.1598, -5.3480, -8.4157, -5.5732], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5474, device='cuda:0', dtype=torch.float64)
tensor([-5.9959, -8.1576, -5.3671, -8.3996, -5.5781], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3453, device='cuda:0', dtype=torch.float64)
tensor([-6.0236, -8.1534, -5.3893, -8.3803, -5.5826], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5226, device='cuda:0', dtype=torch.float64)
tensor([-6.0565, -8.1444, -5.4064, -8.3571, -5.5862], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3444, device='cuda:0', dtype=torch.float64)
tensor([-6.0837, -8.1381, -5.4189, -8.3370, -5.5898], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3882, device='cuda:0', dtype=torch.float64)
tensor([-6.1043, -8.1375, -5.4207, -8.3348, -5.5925], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3652, device='cuda:0', dtype=torch.float64)
tensor([-6.1240, -8.1241, -5.4218, -8.3168, -5.5945], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3574, device='cuda:0', dtype=torch.float64)
tensor([-6.1503, -8.1123, -5.4217, -8.2997, -5.5959], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3409, device='cuda:0', dtype=torch.float64)
tensor([-6.1648, -8.1103, -5.4135, -8.2940, -5.5967], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2751, device='cuda:0', dtype=torch.float64)
tensor([-6.1763, -8.1047, -5.4085, -8.2852, -5.5976], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3369, device='cuda:0', dtype=torch.float64)
tensor([-6.1850, -8.0959, -5.4016, -8.2716, -5.5986], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3647, device='cuda:0', dtype=torch.float64)
tensor([-6.1933, -8.0892, -5.4023, -8.2540, -5.6002], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2151, device='cuda:0', dtype=torch.float64)
tensor([-6.1996, -8.0838, -5.3979, -8.2401, -5.5999], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2552, device='cuda:0', dtype=torch.float64)
tensor([-6.2039, -8.0672, -5.3943, -8.2148, -5.6002], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2743, device='cuda:0', dtype=torch.float64)
tensor([-6.2056, -8.0551, -5.3892, -8.1910, -5.6009], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2638, device='cuda:0', dtype=torch.float64)
tensor([-6.2125, -8.0460, -5.3868, -8.1655, -5.6020], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3109, device='cuda:0', dtype=torch.float64)
tensor([-6.2115, -8.0367, -5.3763, -8.1373, -5.6031], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2235, device='cuda:0', dtype=torch.float64)
tensor([-6.2062, -8.0325, -5.3674, -8.1091, -5.6042], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2723, device='cuda:0', dtype=torch.float64)
tensor([-6.1926, -8.0260, -5.3596, -8.0772, -5.6040], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2064, device='cuda:0', dtype=torch.float64)
tensor([-6.1770, -8.0179, -5.3509, -8.0506, -5.6036], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1883, device='cuda:0', dtype=torch.float64)
tensor([-6.1629, -8.0050, -5.3421, -8.0257, -5.6034], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2038, device='cuda:0', dtype=torch.float64)
tensor([-6.1496, -7.9938, -5.3317, -8.0015, -5.6031], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2307, device='cuda:0', dtype=torch.float64)
tensor([-6.1374, -7.9853, -5.3194, -7.9857, -5.6020], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2212, device='cuda:0', dtype=torch.float64)
tensor([-6.1211, -7.9748, -5.3014, -7.9646, -5.6000], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2195, device='cuda:0', dtype=torch.float64)
tensor([-6.1027, -7.9649, -5.2841, -7.9511, -5.5972], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2019, device='cuda:0', dtype=torch.float64)
tensor([-6.0846, -7.9522, -5.2662, -7.9306, -5.5942], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1814, device='cuda:0', dtype=torch.float64)
tensor([-6.0659, -7.9445, -5.2481, -7.9171, -5.5912], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1814, device='cuda:0', dtype=torch.float64)
tensor([-6.0482, -7.9335, -5.2278, -7.9072, -5.5876], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1423, device='cuda:0', dtype=torch.float64)
tensor([-6.0294, -7.9158, -5.2060, -7.8985, -5.5837], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1818, device='cuda:0', dtype=torch.float64)
tensor([-6.0061, -7.8987, -5.1866, -7.8852, -5.5802], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1807, device='cuda:0', dtype=torch.float64)
tensor([-5.9813, -7.8855, -5.1662, -7.8715, -5.5758], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1424, device='cuda:0', dtype=torch.float64)
tensor([-5.9575, -7.8669, -5.1431, -7.8558, -5.5711], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1468, device='cuda:0', dtype=torch.float64)
tensor([-5.9346, -7.8457, -5.1217, -7.8391, -5.5662], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2219, device='cuda:0', dtype=torch.float64)
tensor([-5.9090, -7.8206, -5.0965, -7.8225, -5.5601], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1884, device='cuda:0', dtype=torch.float64)
tensor([-5.8806, -7.7910, -5.0700, -7.8040, -5.5539], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1746, device='cuda:0', dtype=torch.float64)
tensor([-5.8525, -7.7547, -5.0433, -7.7823, -5.5480], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2282, device='cuda:0', dtype=torch.float64)
tensor([-5.8273, -7.7143, -5.0131, -7.7568, -5.5417], device='cuda:0',
       dtype=torch.float64)
Saved results to /home/idrissm/projects/def-mh541-ab/idrissm/neighborVCA/runs/results/tsp/tsp64_/home/idrissm/projects/def-mh541-ab/idrissm/neighborVCA/scripts/VCA/tsp/configHVCA64.json_20250925_034210.csv
rnn.0.0.weight tensor(0.3170, device='cuda:0', dtype=torch.float64)
tensor([-1.6865, -2.6073, -2.8708, -3.3009, -3.1848], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(5.0354, device='cuda:0', dtype=torch.float64)
tensor([-14.4420, -45.6815, -20.3319, -43.9481, -45.2178], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(262.2607, device='cuda:0', dtype=torch.float64)
tensor([-11.2595, -10.9702,  -3.4619,  -7.1320,  -5.7480], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(162.0420, device='cuda:0', dtype=torch.float64)
tensor([ -9.3402, -23.5550, -18.2759, -12.7365, -11.0287], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(226.8343, device='cuda:0', dtype=torch.float64)
tensor([ -5.1013,  -7.9205, -12.8064,  -8.7364,  -6.8890], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(130.2314, device='cuda:0', dtype=torch.float64)
tensor([-2.2824, -4.6145, -3.0838, -7.3630, -3.7261], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(94.1527, device='cuda:0', dtype=torch.float64)
tensor([-2.4494, -5.0102, -3.0336, -4.3687, -3.8834], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(89.3651, device='cuda:0', dtype=torch.float64)
tensor([-2.4211, -5.1652, -3.0474, -3.9291, -4.4529], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(57.0470, device='cuda:0', dtype=torch.float64)
tensor([-2.4882, -4.3516, -3.0054, -3.4465, -4.8185], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(52.5671, device='cuda:0', dtype=torch.float64)
tensor([-2.4551, -4.8491, -2.9538, -4.7284, -4.9723], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(60.4962, device='cuda:0', dtype=torch.float64)
tensor([-2.2115, -4.8676, -2.8795, -6.2752, -5.2373], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(65.8529, device='cuda:0', dtype=torch.float64)
tensor([-1.9581, -3.7712, -2.7929, -4.2008, -4.9287], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(47.6612, device='cuda:0', dtype=torch.float64)
tensor([-1.7953, -3.2559, -2.8045, -3.9418, -4.2678], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(28.1917, device='cuda:0', dtype=torch.float64)
tensor([-1.7418, -3.4603, -2.8921, -4.1258, -3.7816], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(12.7930, device='cuda:0', dtype=torch.float64)
tensor([-1.7855, -3.8058, -3.0050, -4.3376, -3.5475], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(14.5001, device='cuda:0', dtype=torch.float64)
tensor([-2.0139, -3.7030, -3.1030, -4.4765, -3.4933], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(28.1788, device='cuda:0', dtype=torch.float64)
tensor([-2.1501, -3.3204, -3.1958, -4.4288, -3.4521], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(35.7295, device='cuda:0', dtype=torch.float64)
tensor([-1.8349, -3.0356, -3.2667, -4.1102, -3.3604], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(30.4828, device='cuda:0', dtype=torch.float64)
tensor([-1.6490, -2.8332, -3.3594, -3.8070, -3.2668], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(22.2266, device='cuda:0', dtype=torch.float64)
tensor([-1.6030, -2.7298, -3.4539, -3.6228, -3.2066], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(14.7349, device='cuda:0', dtype=torch.float64)
tensor([-1.6195, -2.7210, -3.3959, -3.4949, -3.2095], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(12.3369, device='cuda:0', dtype=torch.float64)
tensor([-1.6819, -2.7759, -3.3069, -3.3901, -3.2931], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(12.6257, device='cuda:0', dtype=torch.float64)
tensor([-1.7831, -2.8893, -3.3369, -3.2948, -3.4270], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(12.7877, device='cuda:0', dtype=torch.float64)
tensor([-1.9021, -3.0622, -3.4331, -3.1998, -3.5281], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(12.7637, device='cuda:0', dtype=torch.float64)
tensor([-2.0110, -3.2189, -3.4960, -3.1125, -3.5441], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(10.5379, device='cuda:0', dtype=torch.float64)
tensor([-2.1008, -3.2605, -3.4711, -3.0513, -3.5189], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(9.2323, device='cuda:0', dtype=torch.float64)
tensor([-2.1727, -3.2215, -3.3839, -3.0185, -3.5003], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(8.8675, device='cuda:0', dtype=torch.float64)
tensor([-2.2260, -3.1777, -3.2783, -3.0054, -3.4899], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(9.0823, device='cuda:0', dtype=torch.float64)
tensor([-2.2569, -3.1352, -3.1898, -3.0059, -3.4590], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(9.5285, device='cuda:0', dtype=torch.float64)
tensor([-2.2589, -3.0823, -3.1226, -3.0176, -3.3990], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(8.6607, device='cuda:0', dtype=torch.float64)
tensor([-2.2282, -3.0305, -3.0765, -3.0423, -3.3273], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(8.2523, device='cuda:0', dtype=torch.float64)
tensor([-2.1604, -3.0010, -3.0474, -3.0770, -3.2554], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(7.3184, device='cuda:0', dtype=torch.float64)
tensor([-2.0675, -3.0113, -3.0333, -3.1152, -3.1900], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(6.2448, device='cuda:0', dtype=torch.float64)
tensor([-1.9693, -3.0408, -3.0317, -3.1524, -3.1344], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(4.9399, device='cuda:0', dtype=torch.float64)
tensor([-1.8824, -3.0384, -3.0379, -3.1867, -3.0916], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(3.7246, device='cuda:0', dtype=torch.float64)
tensor([-1.8123, -2.9784, -3.0469, -3.2170, -3.0639], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(3.6169, device='cuda:0', dtype=torch.float64)
tensor([-1.7595, -2.8790, -3.0538, -3.2412, -3.0511], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(4.3771, device='cuda:0', dtype=torch.float64)
tensor([-1.7240, -2.7813, -3.0560, -3.2550, -3.0528], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(4.4373, device='cuda:0', dtype=torch.float64)
tensor([-1.7046, -2.7070, -3.0514, -3.2584, -3.0672], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(4.5300, device='cuda:0', dtype=torch.float64)
tensor([-1.7001, -2.6541, -3.0393, -3.2512, -3.0919], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(4.1122, device='cuda:0', dtype=torch.float64)
tensor([-1.7080, -2.6188, -3.0220, -3.2363, -3.1256], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(3.6238, device='cuda:0', dtype=torch.float64)
tensor([-1.7260, -2.5989, -2.9998, -3.2176, -3.1653], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(3.1082, device='cuda:0', dtype=torch.float64)
tensor([-1.7530, -2.5927, -2.9760, -3.1967, -3.2092], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.8526, device='cuda:0', dtype=torch.float64)
tensor([-1.7864, -2.5971, -2.9511, -3.1760, -3.2536], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.4154, device='cuda:0', dtype=torch.float64)
tensor([-1.8242, -2.6099, -2.9262, -3.1578, -3.2961], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9682, device='cuda:0', dtype=torch.float64)
tensor([-1.8640, -2.6292, -2.9033, -3.1425, -3.3362], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1659, device='cuda:0', dtype=torch.float64)
tensor([-1.9015, -2.6525, -2.8836, -3.1315, -3.3695], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.2472, device='cuda:0', dtype=torch.float64)
tensor([-1.9338, -2.6766, -2.8675, -3.1254, -3.3941], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.4690, device='cuda:0', dtype=torch.float64)
tensor([-1.9593, -2.6986, -2.8536, -3.1211, -3.4082], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.3135, device='cuda:0', dtype=torch.float64)
tensor([-1.9777, -2.7168, -2.8422, -3.1184, -3.4124], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0689, device='cuda:0', dtype=torch.float64)
tensor([-1.9916, -2.7303, -2.8333, -3.1164, -3.4101], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.2648, device='cuda:0', dtype=torch.float64)
tensor([-1.9987, -2.7389, -2.8245, -3.1162, -3.4006], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0211, device='cuda:0', dtype=torch.float64)
tensor([-2.0009, -2.7431, -2.8168, -3.1168, -3.3869], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8423, device='cuda:0', dtype=torch.float64)
tensor([-1.9977, -2.7424, -2.8113, -3.1190, -3.3705], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8405, device='cuda:0', dtype=torch.float64)
tensor([-1.9899, -2.7385, -2.8068, -3.1228, -3.3519], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7182, device='cuda:0', dtype=torch.float64)
tensor([-1.9816, -2.7347, -2.8038, -3.1267, -3.3349], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7036, device='cuda:0', dtype=torch.float64)
tensor([-1.9720, -2.7298, -2.8025, -3.1332, -3.3185], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7102, device='cuda:0', dtype=torch.float64)
tensor([-1.9628, -2.7263, -2.8029, -3.1403, -3.3075], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7229, device='cuda:0', dtype=torch.float64)
tensor([-1.9558, -2.7247, -2.8044, -3.1492, -3.2997], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6295, device='cuda:0', dtype=torch.float64)
tensor([-1.9521, -2.7237, -2.8074, -3.1565, -3.2967], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6225, device='cuda:0', dtype=torch.float64)
tensor([-1.9518, -2.7244, -2.8098, -3.1627, -3.2966], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5709, device='cuda:0', dtype=torch.float64)
tensor([-1.9531, -2.7258, -2.8140, -3.1678, -3.2998], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1375, device='cuda:0', dtype=torch.float64)
tensor([-1.9546, -2.7258, -2.8181, -3.1724, -3.3053], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3269, device='cuda:0', dtype=torch.float64)
tensor([-1.9575, -2.7261, -2.8220, -3.1763, -3.3117], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4964, device='cuda:0', dtype=torch.float64)
tensor([-1.9607, -2.7280, -2.8253, -3.1800, -3.3187], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6055, device='cuda:0', dtype=torch.float64)
tensor([-1.9647, -2.7313, -2.8308, -3.1835, -3.3265], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7004, device='cuda:0', dtype=torch.float64)
tensor([-1.9719, -2.7364, -2.8333, -3.1853, -3.3360], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4241, device='cuda:0', dtype=torch.float64)
tensor([-1.9800, -2.7424, -2.8353, -3.1873, -3.3457], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5408, device='cuda:0', dtype=torch.float64)
tensor([-1.9905, -2.7498, -2.8375, -3.1893, -3.3567], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6859, device='cuda:0', dtype=torch.float64)
tensor([-2.0030, -2.7568, -2.8385, -3.1914, -3.3688], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1306, device='cuda:0', dtype=torch.float64)
tensor([-2.0171, -2.7635, -2.8406, -3.1938, -3.3821], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4991, device='cuda:0', dtype=torch.float64)
tensor([-2.0326, -2.7705, -2.8425, -3.1957, -3.3944], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9142, device='cuda:0', dtype=torch.float64)
tensor([-2.0503, -2.7784, -2.8432, -3.1977, -3.4085], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7145, device='cuda:0', dtype=torch.float64)
tensor([-2.0698, -2.7871, -2.8448, -3.2011, -3.4236], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3967, device='cuda:0', dtype=torch.float64)
tensor([-2.0910, -2.7968, -2.8458, -3.2026, -3.4373], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1697, device='cuda:0', dtype=torch.float64)
tensor([-2.1137, -2.8085, -2.8479, -3.2019, -3.4527], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9970, device='cuda:0', dtype=torch.float64)
tensor([-2.1362, -2.8212, -2.8495, -3.2021, -3.4695], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6117, device='cuda:0', dtype=torch.float64)
tensor([-2.1589, -2.8336, -2.8527, -3.2034, -3.4866], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7060, device='cuda:0', dtype=torch.float64)
tensor([-2.1831, -2.8481, -2.8562, -3.2057, -3.5053], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6460, device='cuda:0', dtype=torch.float64)
tensor([-2.2096, -2.8656, -2.8617, -3.2110, -3.5252], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7125, device='cuda:0', dtype=torch.float64)
tensor([-2.2412, -2.8870, -2.8683, -3.2191, -3.5483], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3882, device='cuda:0', dtype=torch.float64)
tensor([-2.2758, -2.9079, -2.8778, -3.2274, -3.5753], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4033, device='cuda:0', dtype=torch.float64)
tensor([-2.3113, -2.9270, -2.8903, -3.2393, -3.6055], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8910, device='cuda:0', dtype=torch.float64)
tensor([-2.3497, -2.9478, -2.9048, -3.2587, -3.6405], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7542, device='cuda:0', dtype=torch.float64)
tensor([-2.3922, -2.9729, -2.9207, -3.2846, -3.6788], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7266, device='cuda:0', dtype=torch.float64)
tensor([-2.4368, -3.0009, -2.9408, -3.3141, -3.7200], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8850, device='cuda:0', dtype=torch.float64)
tensor([-2.4831, -3.0316, -2.9617, -3.3447, -3.7610], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8101, device='cuda:0', dtype=torch.float64)
tensor([-2.5340, -3.0664, -2.9851, -3.3805, -3.8042], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8771, device='cuda:0', dtype=torch.float64)
tensor([-2.5888, -3.1038, -3.0099, -3.4154, -3.8492], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5518, device='cuda:0', dtype=torch.float64)
tensor([-2.6439, -3.1442, -3.0371, -3.4526, -3.8956], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3374, device='cuda:0', dtype=torch.float64)
tensor([-2.6976, -3.1846, -3.0664, -3.4939, -3.9402], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7313, device='cuda:0', dtype=torch.float64)
tensor([-2.7539, -3.2255, -3.0984, -3.5410, -3.9902], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9149, device='cuda:0', dtype=torch.float64)
tensor([-2.8132, -3.2711, -3.1324, -3.5928, -4.0445], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6214, device='cuda:0', dtype=torch.float64)
tensor([-2.8761, -3.3210, -3.1661, -3.6544, -4.1017], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7258, device='cuda:0', dtype=torch.float64)
tensor([-2.9438, -3.3779, -3.2031, -3.7242, -4.1639], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6777, device='cuda:0', dtype=torch.float64)
tensor([-3.0135, -3.4359, -3.2441, -3.7994, -4.2277], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6873, device='cuda:0', dtype=torch.float64)
tensor([-3.0832, -3.4914, -3.2857, -3.8739, -4.2885], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8250, device='cuda:0', dtype=torch.float64)
tensor([-3.1501, -3.5442, -3.3250, -3.9550, -4.3461], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2324, device='cuda:0', dtype=torch.float64)
tensor([-3.2150, -3.5984, -3.3649, -4.0353, -4.4036], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5184, device='cuda:0', dtype=torch.float64)
tensor([-3.2831, -3.6572, -3.4071, -4.1144, -4.4631], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6269, device='cuda:0', dtype=torch.float64)
tensor([-3.3540, -3.7187, -3.4524, -4.1997, -4.5275], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7696, device='cuda:0', dtype=torch.float64)
tensor([-3.4258, -3.7807, -3.4986, -4.2897, -4.5958], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4113, device='cuda:0', dtype=torch.float64)
tensor([-3.4997, -3.8489, -3.5489, -4.3926, -4.6691], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5210, device='cuda:0', dtype=torch.float64)
tensor([-3.5782, -3.9291, -3.6030, -4.5033, -4.7485], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6177, device='cuda:0', dtype=torch.float64)
tensor([-3.6587, -4.0235, -3.6632, -4.6251, -4.8363], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4366, device='cuda:0', dtype=torch.float64)
tensor([-3.7411, -4.1298, -3.7262, -4.7611, -4.9289], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5285, device='cuda:0', dtype=torch.float64)
tensor([-3.8274, -4.2383, -3.7974, -4.9080, -5.0283], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2729, device='cuda:0', dtype=torch.float64)
tensor([-3.9168, -4.3607, -3.8705, -5.0691, -5.1296], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3086, device='cuda:0', dtype=torch.float64)
tensor([-4.0045, -4.4868, -3.9420, -5.2336, -5.2277], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3409, device='cuda:0', dtype=torch.float64)
tensor([-4.0954, -4.6069, -4.0098, -5.3806, -5.3245], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3175, device='cuda:0', dtype=torch.float64)
tensor([-4.1873, -4.7399, -4.0816, -5.5366, -5.4272], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3786, device='cuda:0', dtype=torch.float64)
tensor([-4.2802, -4.8927, -4.1572, -5.6899, -5.5284], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0382, device='cuda:0', dtype=torch.float64)
tensor([-4.3748, -5.0592, -4.2345, -5.8463, -5.6341], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0972, device='cuda:0', dtype=torch.float64)
tensor([-4.4678, -5.2336, -4.3136, -5.9921, -5.7367], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3826, device='cuda:0', dtype=torch.float64)
tensor([-4.5637, -5.4318, -4.3999, -6.1501, -5.8445], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2393, device='cuda:0', dtype=torch.float64)
tensor([-4.6547, -5.6520, -4.4910, -6.3067, -5.9543], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2779, device='cuda:0', dtype=torch.float64)
tensor([-4.7499, -5.8772, -4.5878, -6.4617, -6.0588], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4439, device='cuda:0', dtype=torch.float64)
tensor([-4.8327, -6.1207, -4.6863, -6.6077, -6.1471], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3004, device='cuda:0', dtype=torch.float64)
tensor([-4.9067, -6.3746, -4.7744, -6.7409, -6.2362], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2839, device='cuda:0', dtype=torch.float64)
tensor([-4.9740, -6.6421, -4.8630, -6.8651, -6.3362], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1494, device='cuda:0', dtype=torch.float64)
tensor([-5.0351, -6.8525, -4.9326, -6.9725, -6.4161], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1555, device='cuda:0', dtype=torch.float64)
tensor([-5.1062, -7.0523, -4.9983, -7.0934, -6.5103], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2729, device='cuda:0', dtype=torch.float64)
tensor([-5.1819, -7.2598, -5.0704, -7.2064, -6.5980], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1626, device='cuda:0', dtype=torch.float64)
tensor([-5.2644, -7.4364, -5.1251, -7.3024, -6.6686], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3559, device='cuda:0', dtype=torch.float64)
tensor([-5.3355, -7.5747, -5.1732, -7.3774, -6.7454], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0354, device='cuda:0', dtype=torch.float64)
tensor([-5.3993, -7.6567, -5.2012, -7.4340, -6.8166], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1065, device='cuda:0', dtype=torch.float64)
tensor([-5.4398, -7.6819, -5.2021, -7.4600, -6.8674], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3976, device='cuda:0', dtype=torch.float64)
tensor([-5.4985, -7.7166, -5.2120, -7.4923, -6.9256], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3669, device='cuda:0', dtype=torch.float64)
tensor([-5.5727, -7.7758, -5.2367, -7.5542, -7.0187], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0275, device='cuda:0', dtype=torch.float64)
tensor([-5.6526, -7.8529, -5.2801, -7.6374, -7.1189], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0148, device='cuda:0', dtype=torch.float64)
tensor([-5.7468, -7.9373, -5.3399, -7.7254, -7.2013], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0689, device='cuda:0', dtype=torch.float64)
tensor([-5.8460, -8.0242, -5.3899, -7.7956, -7.2785], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0297, device='cuda:0', dtype=torch.float64)
tensor([-5.9180, -8.0836, -5.4374, -7.8351, -7.3351], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0384, device='cuda:0', dtype=torch.float64)
tensor([-5.9826, -8.1545, -5.4860, -7.8640, -7.3987], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2164, device='cuda:0', dtype=torch.float64)
tensor([-6.0525, -8.2229, -5.5475, -7.8727, -7.4176], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2236, device='cuda:0', dtype=torch.float64)
tensor([-6.1112, -8.3194, -5.6160, -7.8620, -7.4203], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8911, device='cuda:0', dtype=torch.float64)
tensor([-6.1757, -8.4157, -5.6753, -7.8476, -7.4241], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0675, device='cuda:0', dtype=torch.float64)
tensor([-6.2670, -8.4895, -5.7338, -7.8449, -7.4285], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9064, device='cuda:0', dtype=torch.float64)
tensor([-6.3573, -8.5765, -5.7914, -7.8280, -7.4260], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9909, device='cuda:0', dtype=torch.float64)
tensor([-6.4239, -8.6711, -5.8351, -7.7984, -7.4121], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1533, device='cuda:0', dtype=torch.float64)
tensor([-6.5278, -8.7360, -5.8785, -7.7772, -7.3994], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3178, device='cuda:0', dtype=torch.float64)
tensor([-6.6549, -8.8853, -5.9408, -7.7664, -7.4063], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8943, device='cuda:0', dtype=torch.float64)
tensor([-6.7660, -8.9804, -5.9944, -7.7491, -7.4001], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0235, device='cuda:0', dtype=torch.float64)
tensor([-6.8369, -8.9931, -6.0213, -7.7049, -7.3629], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0062, device='cuda:0', dtype=torch.float64)
tensor([-6.9150, -9.0111, -6.0582, -7.6652, -7.3312], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8728, device='cuda:0', dtype=torch.float64)
tensor([-7.0096, -9.0546, -6.1009, -7.6454, -7.3159], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9334, device='cuda:0', dtype=torch.float64)
tensor([-7.1174, -9.1385, -6.1541, -7.6360, -7.3095], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9627, device='cuda:0', dtype=torch.float64)
tensor([-7.2291, -9.2706, -6.2412, -7.6438, -7.3195], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0212, device='cuda:0', dtype=torch.float64)
tensor([-7.3485, -9.4206, -6.3323, -7.6614, -7.3401], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7900, device='cuda:0', dtype=torch.float64)
tensor([-7.4768, -9.5882, -6.4394, -7.6847, -7.3721], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1854, device='cuda:0', dtype=torch.float64)
tensor([-7.5753, -9.7655, -6.5353, -7.7008, -7.4071], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0895, device='cuda:0', dtype=torch.float64)
tensor([-7.6275, -9.9714, -6.6369, -7.7128, -7.4446], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9243, device='cuda:0', dtype=torch.float64)
tensor([ -7.6868, -10.1588,  -6.7340,  -7.7476,  -7.4891], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8049, device='cuda:0', dtype=torch.float64)
tensor([ -7.7228, -10.3253,  -6.8164,  -7.7820,  -7.5319], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9734, device='cuda:0', dtype=torch.float64)
tensor([ -7.7180, -10.4061,  -6.8615,  -7.7946,  -7.5844], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9209, device='cuda:0', dtype=torch.float64)
tensor([ -7.7223, -10.4888,  -6.8924,  -7.8092,  -7.6224], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8267, device='cuda:0', dtype=torch.float64)
tensor([ -7.7189, -10.5866,  -6.9302,  -7.8258,  -7.6653], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7952, device='cuda:0', dtype=torch.float64)
tensor([ -7.7246, -10.7151,  -6.9712,  -7.8576,  -7.7237], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8953, device='cuda:0', dtype=torch.float64)
tensor([ -7.7464, -10.8491,  -7.0401,  -7.9065,  -7.7796], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0769, device='cuda:0', dtype=torch.float64)
tensor([ -7.7387, -10.9804,  -7.1010,  -7.9452,  -7.8290], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8538, device='cuda:0', dtype=torch.float64)
tensor([ -7.7217, -11.0745,  -7.1549,  -7.9711,  -7.8727], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8162, device='cuda:0', dtype=torch.float64)
tensor([ -7.6967, -11.1954,  -7.1997,  -8.0048,  -7.9085], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7618, device='cuda:0', dtype=torch.float64)
tensor([ -7.6870, -11.2774,  -7.2042,  -8.0232,  -7.9416], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8892, device='cuda:0', dtype=torch.float64)
tensor([ -7.6836, -11.3409,  -7.2105,  -8.0421,  -7.9822], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7098, device='cuda:0', dtype=torch.float64)
tensor([ -7.6931, -11.3689,  -7.2108,  -8.0579,  -8.0145], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9541, device='cuda:0', dtype=torch.float64)
tensor([ -7.7124, -11.3921,  -7.1878,  -8.0555,  -8.0588], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0851, device='cuda:0', dtype=torch.float64)
tensor([ -7.7523, -11.4746,  -7.1947,  -8.0588,  -8.1160], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9264, device='cuda:0', dtype=torch.float64)
tensor([ -7.7841, -11.5107,  -7.1826,  -8.0775,  -8.1768], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8081, device='cuda:0', dtype=torch.float64)
tensor([ -7.8112, -11.5721,  -7.1785,  -8.0862,  -8.2257], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8108, device='cuda:0', dtype=torch.float64)
tensor([ -7.8359, -11.6147,  -7.1707,  -8.1033,  -8.2737], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9657, device='cuda:0', dtype=torch.float64)
tensor([ -7.8901, -11.7112,  -7.1784,  -8.1406,  -8.3410], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7460, device='cuda:0', dtype=torch.float64)
tensor([ -7.9374, -11.8325,  -7.1978,  -8.1760,  -8.4020], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7539, device='cuda:0', dtype=torch.float64)
tensor([ -7.9653, -11.9439,  -7.2031,  -8.1968,  -8.4389], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7747, device='cuda:0', dtype=torch.float64)
tensor([ -8.0165, -12.0577,  -7.2278,  -8.2194,  -8.4946], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1881, device='cuda:0', dtype=torch.float64)
tensor([ -8.0737, -12.0909,  -7.2338,  -8.2283,  -8.5464], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7715, device='cuda:0', dtype=torch.float64)
tensor([ -8.1316, -12.1052,  -7.2431,  -8.2394,  -8.5887], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8292, device='cuda:0', dtype=torch.float64)
tensor([ -8.1834, -12.0798,  -7.2572,  -8.2410,  -8.6171], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7437, device='cuda:0', dtype=torch.float64)
tensor([ -8.2626, -12.0398,  -7.2763,  -8.2370,  -8.6493], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8345, device='cuda:0', dtype=torch.float64)
tensor([ -8.3182, -11.9852,  -7.2894,  -8.2279,  -8.6952], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9995, device='cuda:0', dtype=torch.float64)
tensor([ -8.3277, -11.9231,  -7.2794,  -8.1945,  -8.6909], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7880, device='cuda:0', dtype=torch.float64)
tensor([ -8.3521, -11.9055,  -7.2906,  -8.1615,  -8.6702], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7344, device='cuda:0', dtype=torch.float64)
tensor([ -8.3729, -11.8693,  -7.2991,  -8.1306,  -8.6342], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5930, device='cuda:0', dtype=torch.float64)
tensor([ -8.3847, -11.8364,  -7.3071,  -8.1181,  -8.6384], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7530, device='cuda:0', dtype=torch.float64)
tensor([ -8.3825, -11.7677,  -7.3088,  -8.1018,  -8.6315], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7159, device='cuda:0', dtype=torch.float64)
tensor([ -8.3722, -11.7715,  -7.3261,  -8.1002,  -8.6362], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6841, device='cuda:0', dtype=torch.float64)
tensor([ -8.3602, -11.7632,  -7.3287,  -8.0995,  -8.6332], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8996, device='cuda:0', dtype=torch.float64)
tensor([ -8.3196, -11.7831,  -7.3184,  -8.1091,  -8.6511], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6969, device='cuda:0', dtype=torch.float64)
tensor([ -8.3085, -11.8323,  -7.3289,  -8.1548,  -8.6993], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7102, device='cuda:0', dtype=torch.float64)
tensor([ -8.3017, -11.8890,  -7.3484,  -8.2235,  -8.7963], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7642, device='cuda:0', dtype=torch.float64)
tensor([ -8.2966, -11.8998,  -7.3417,  -8.2815,  -8.8851], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6319, device='cuda:0', dtype=torch.float64)
tensor([ -8.2580, -11.8898,  -7.3025,  -8.3114,  -8.9109], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8046, device='cuda:0', dtype=torch.float64)
tensor([ -8.2446, -11.9501,  -7.2919,  -8.3645,  -8.9835], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8612, device='cuda:0', dtype=torch.float64)
tensor([ -8.2226, -11.9446,  -7.2670,  -8.4065,  -9.0355], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7529, device='cuda:0', dtype=torch.float64)
tensor([ -8.2084, -11.9489,  -7.2566,  -8.4421,  -9.1083], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5185, device='cuda:0', dtype=torch.float64)
tensor([ -8.1784, -11.9353,  -7.2409,  -8.4715,  -9.1707], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7256, device='cuda:0', dtype=torch.float64)
tensor([ -8.1576, -11.8796,  -7.2297,  -8.4678,  -9.2469], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7381, device='cuda:0', dtype=torch.float64)
tensor([ -8.1266, -11.8625,  -7.2224,  -8.4641,  -9.2942], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7146, device='cuda:0', dtype=torch.float64)
tensor([ -8.0978, -11.8699,  -7.2210,  -8.4715,  -9.3484], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6838, device='cuda:0', dtype=torch.float64)
tensor([ -8.0843, -11.8746,  -7.2269,  -8.5059,  -9.4448], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7647, device='cuda:0', dtype=torch.float64)
tensor([ -8.0619, -11.8858,  -7.2187,  -8.5290,  -9.5516], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7556, device='cuda:0', dtype=torch.float64)
tensor([ -8.0342, -11.9379,  -7.2087,  -8.5631,  -9.6359], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7416, device='cuda:0', dtype=torch.float64)
tensor([ -8.0059, -11.9897,  -7.2146,  -8.5936,  -9.7261], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8035, device='cuda:0', dtype=torch.float64)
tensor([ -7.9614, -11.9987,  -7.2217,  -8.6141,  -9.8420], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7615, device='cuda:0', dtype=torch.float64)
tensor([ -7.9343, -12.0163,  -7.2409,  -8.6182,  -9.8877], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7035, device='cuda:0', dtype=torch.float64)
tensor([ -7.8978, -12.0346,  -7.3018,  -8.6649,  -9.9869], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6536, device='cuda:0', dtype=torch.float64)
tensor([ -7.8550, -12.0051,  -7.3195,  -8.6988, -10.0696], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7188, device='cuda:0', dtype=torch.float64)
tensor([ -7.8394, -11.9514,  -7.3346,  -8.6990, -10.0840], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6030, device='cuda:0', dtype=torch.float64)
tensor([ -7.8410, -11.9059,  -7.3606,  -8.7124, -10.0738], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8518, device='cuda:0', dtype=torch.float64)
tensor([ -7.8493, -11.8315,  -7.3798,  -8.7293, -10.1306], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7410, device='cuda:0', dtype=torch.float64)
tensor([ -7.8819, -11.8204,  -7.4121,  -8.7740, -10.2165], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6698, device='cuda:0', dtype=torch.float64)
tensor([ -7.9020, -11.8308,  -7.4516,  -8.8133, -10.2880], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5157, device='cuda:0', dtype=torch.float64)
tensor([ -7.9417, -11.8220,  -7.4700,  -8.8494, -10.3637], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7538, device='cuda:0', dtype=torch.float64)
tensor([ -7.9714, -11.8072,  -7.4921,  -8.8781, -10.4324], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6573, device='cuda:0', dtype=torch.float64)
tensor([ -7.9978, -11.7378,  -7.4674,  -8.8883, -10.4029], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6473, device='cuda:0', dtype=torch.float64)
tensor([ -8.0156, -11.6533,  -7.4303,  -8.8804, -10.3513], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6376, device='cuda:0', dtype=torch.float64)
tensor([ -8.0353, -11.5930,  -7.4008,  -8.8761, -10.3094], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5375, device='cuda:0', dtype=torch.float64)
tensor([ -8.0319, -11.5103,  -7.3597,  -8.8453, -10.2392], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6418, device='cuda:0', dtype=torch.float64)
tensor([ -8.0215, -11.4835,  -7.3223,  -8.8149, -10.1689], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5876, device='cuda:0', dtype=torch.float64)
tensor([ -8.0085, -11.4583,  -7.2825,  -8.7659, -10.0900], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5322, device='cuda:0', dtype=torch.float64)
tensor([ -7.9790, -11.3898,  -7.2189,  -8.7057,  -9.9857], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5586, device='cuda:0', dtype=torch.float64)
tensor([ -7.9353, -11.3532,  -7.1559,  -8.6465,  -9.8836], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6060, device='cuda:0', dtype=torch.float64)
tensor([ -7.8729, -11.3280,  -7.1056,  -8.5936,  -9.7928], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5180, device='cuda:0', dtype=torch.float64)
tensor([ -7.8071, -11.3206,  -7.0582,  -8.5535,  -9.7048], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5696, device='cuda:0', dtype=torch.float64)
tensor([ -7.7490, -11.3382,  -7.0163,  -8.5271,  -9.6404], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4914, device='cuda:0', dtype=torch.float64)
tensor([ -7.6796, -11.3151,  -6.9704,  -8.4866,  -9.5754], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6403, device='cuda:0', dtype=torch.float64)
tensor([ -7.6317, -11.2830,  -6.9323,  -8.4595,  -9.5299], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6407, device='cuda:0', dtype=torch.float64)
tensor([ -7.6031, -11.2323,  -6.8873,  -8.4204,  -9.4464], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6370, device='cuda:0', dtype=torch.float64)
tensor([ -7.5693, -11.1798,  -6.8364,  -8.3821,  -9.3422], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5059, device='cuda:0', dtype=torch.float64)
tensor([ -7.5499, -11.1317,  -6.8032,  -8.3396,  -9.2596], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4412, device='cuda:0', dtype=torch.float64)
tensor([ -7.5302, -11.0911,  -6.7782,  -8.3011,  -9.1683], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6125, device='cuda:0', dtype=torch.float64)
tensor([ -7.4953, -11.0304,  -6.7482,  -8.2391,  -9.0843], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5791, device='cuda:0', dtype=torch.float64)
tensor([ -7.4662, -10.9654,  -6.7230,  -8.1804,  -9.0273], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5525, device='cuda:0', dtype=torch.float64)
tensor([ -7.4367, -10.9034,  -6.6972,  -8.1300,  -8.9980], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5027, device='cuda:0', dtype=torch.float64)
tensor([ -7.4121, -10.8631,  -6.6861,  -8.0871,  -8.9757], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6190, device='cuda:0', dtype=torch.float64)
tensor([ -7.3624, -10.8133,  -6.6807,  -8.0640,  -8.9791], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4817, device='cuda:0', dtype=torch.float64)
tensor([ -7.3215, -10.7598,  -6.6849,  -8.0429,  -8.9690], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4861, device='cuda:0', dtype=torch.float64)
tensor([ -7.2994, -10.7150,  -6.6871,  -8.0247,  -8.9606], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4730, device='cuda:0', dtype=torch.float64)
tensor([ -7.2890, -10.6556,  -6.7023,  -8.0101,  -8.9760], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5391, device='cuda:0', dtype=torch.float64)
tensor([ -7.2753, -10.6031,  -6.7162,  -7.9874,  -8.9561], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4236, device='cuda:0', dtype=torch.float64)
tensor([ -7.2596, -10.5576,  -6.7301,  -7.9612,  -8.9417], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4794, device='cuda:0', dtype=torch.float64)
tensor([ -7.2272, -10.5070,  -6.7366,  -7.9312,  -8.9219], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4060, device='cuda:0', dtype=torch.float64)
tensor([ -7.1912, -10.4454,  -6.7438,  -7.8902,  -8.8981], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4053, device='cuda:0', dtype=torch.float64)
tensor([ -7.1651, -10.3619,  -6.7447,  -7.8526,  -8.8676], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4868, device='cuda:0', dtype=torch.float64)
tensor([ -7.1373, -10.2547,  -6.7217,  -7.8105,  -8.8124], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4477, device='cuda:0', dtype=torch.float64)
tensor([ -7.1002, -10.1617,  -6.7024,  -7.7596,  -8.7524], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4271, device='cuda:0', dtype=torch.float64)
tensor([ -7.0612, -10.0523,  -6.6722,  -7.7068,  -8.6812], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4649, device='cuda:0', dtype=torch.float64)
tensor([-7.0278, -9.9377, -6.6511, -7.6586, -8.6235], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4256, device='cuda:0', dtype=torch.float64)
tensor([-7.0040, -9.8335, -6.6367, -7.6192, -8.5615], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3428, device='cuda:0', dtype=torch.float64)
tensor([-6.9783, -9.7419, -6.6153, -7.5724, -8.5073], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3991, device='cuda:0', dtype=torch.float64)
tensor([-6.9648, -9.6773, -6.6010, -7.5417, -8.4701], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4521, device='cuda:0', dtype=torch.float64)
tensor([-6.9592, -9.6185, -6.5894, -7.5016, -8.4286], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4467, device='cuda:0', dtype=torch.float64)
tensor([-6.9472, -9.5544, -6.5808, -7.4732, -8.3853], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4290, device='cuda:0', dtype=torch.float64)
tensor([-6.9240, -9.4689, -6.5674, -7.4375, -8.3354], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3396, device='cuda:0', dtype=torch.float64)
tensor([-6.8971, -9.3929, -6.5530, -7.4048, -8.3006], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4267, device='cuda:0', dtype=torch.float64)
tensor([-6.8630, -9.3260, -6.5391, -7.3726, -8.2636], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3848, device='cuda:0', dtype=torch.float64)
tensor([-6.8352, -9.2427, -6.5238, -7.3376, -8.2201], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3542, device='cuda:0', dtype=torch.float64)
tensor([-6.8123, -9.1800, -6.5119, -7.3068, -8.1835], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3400, device='cuda:0', dtype=torch.float64)
tensor([-6.7959, -9.1125, -6.4954, -7.2732, -8.1509], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3221, device='cuda:0', dtype=torch.float64)
tensor([-6.7833, -9.0507, -6.4773, -7.2370, -8.1140], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4258, device='cuda:0', dtype=torch.float64)
tensor([-6.7765, -8.9850, -6.4667, -7.1951, -8.0784], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3778, device='cuda:0', dtype=torch.float64)
tensor([-6.7680, -8.9143, -6.4544, -7.1518, -8.0446], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3372, device='cuda:0', dtype=torch.float64)
tensor([-6.7496, -8.8572, -6.4458, -7.1087, -8.0184], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3208, device='cuda:0', dtype=torch.float64)
tensor([-6.7454, -8.7928, -6.4468, -7.0753, -7.9976], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4444, device='cuda:0', dtype=torch.float64)
tensor([-6.7344, -8.7198, -6.4485, -7.0362, -7.9778], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3183, device='cuda:0', dtype=torch.float64)
tensor([-6.7206, -8.6497, -6.4519, -7.0014, -7.9610], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3149, device='cuda:0', dtype=torch.float64)
tensor([-6.7031, -8.5811, -6.4545, -6.9682, -7.9420], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3151, device='cuda:0', dtype=torch.float64)
tensor([-6.6951, -8.5133, -6.4544, -6.9374, -7.9267], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3061, device='cuda:0', dtype=torch.float64)
tensor([-6.6841, -8.4577, -6.4518, -6.9112, -7.9267], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3197, device='cuda:0', dtype=torch.float64)
tensor([-6.6669, -8.4112, -6.4479, -6.8958, -7.9233], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2581, device='cuda:0', dtype=torch.float64)
tensor([-6.6471, -8.3770, -6.4501, -6.8805, -7.9222], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2992, device='cuda:0', dtype=torch.float64)
tensor([-6.6204, -8.3366, -6.4476, -6.8664, -7.9068], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2735, device='cuda:0', dtype=torch.float64)
tensor([-6.6025, -8.2934, -6.4473, -6.8551, -7.8905], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3149, device='cuda:0', dtype=torch.float64)
tensor([-6.5950, -8.2521, -6.4480, -6.8427, -7.8777], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2737, device='cuda:0', dtype=torch.float64)
tensor([-6.5874, -8.2246, -6.4491, -6.8284, -7.8737], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3226, device='cuda:0', dtype=torch.float64)
tensor([-6.5909, -8.2099, -6.4497, -6.8181, -7.8674], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2517, device='cuda:0', dtype=torch.float64)
tensor([-6.5969, -8.1932, -6.4513, -6.8087, -7.8576], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2692, device='cuda:0', dtype=torch.float64)
tensor([-6.6051, -8.1559, -6.4499, -6.7973, -7.8396], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2311, device='cuda:0', dtype=torch.float64)
tensor([-6.6090, -8.1212, -6.4495, -6.7831, -7.8176], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2707, device='cuda:0', dtype=torch.float64)
tensor([-6.6137, -8.0833, -6.4483, -6.7722, -7.7984], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2494, device='cuda:0', dtype=torch.float64)
tensor([-6.6193, -8.0578, -6.4471, -6.7677, -7.7834], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2403, device='cuda:0', dtype=torch.float64)
tensor([-6.6236, -8.0347, -6.4534, -6.7653, -7.7717], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2055, device='cuda:0', dtype=torch.float64)
tensor([-6.6329, -8.0050, -6.4550, -6.7622, -7.7586], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2646, device='cuda:0', dtype=torch.float64)
tensor([-6.6358, -7.9746, -6.4532, -6.7577, -7.7442], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2200, device='cuda:0', dtype=torch.float64)
tensor([-6.6417, -7.9372, -6.4505, -6.7506, -7.7295], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2442, device='cuda:0', dtype=torch.float64)
tensor([-6.6441, -7.9098, -6.4490, -6.7463, -7.7151], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2316, device='cuda:0', dtype=torch.float64)
tensor([-6.6393, -7.8777, -6.4427, -6.7399, -7.6934], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2526, device='cuda:0', dtype=torch.float64)
tensor([-6.6348, -7.8456, -6.4394, -6.7344, -7.6769], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2462, device='cuda:0', dtype=torch.float64)
tensor([-6.6340, -7.8210, -6.4359, -6.7326, -7.6564], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1948, device='cuda:0', dtype=torch.float64)
tensor([-6.6316, -7.7938, -6.4300, -6.7252, -7.6307], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2277, device='cuda:0', dtype=torch.float64)
tensor([-6.6318, -7.7736, -6.4198, -6.7202, -7.6067], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1919, device='cuda:0', dtype=torch.float64)
tensor([-6.6255, -7.7548, -6.4098, -6.7141, -7.5809], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2199, device='cuda:0', dtype=torch.float64)
tensor([-6.6178, -7.7360, -6.3980, -6.7147, -7.5635], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2023, device='cuda:0', dtype=torch.float64)
tensor([-6.6050, -7.7115, -6.3837, -6.7134, -7.5449], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2282, device='cuda:0', dtype=torch.float64)
tensor([-6.5939, -7.6878, -6.3695, -6.7113, -7.5247], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2067, device='cuda:0', dtype=torch.float64)
tensor([-6.5746, -7.6677, -6.3568, -6.7075, -7.5022], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1637, device='cuda:0', dtype=torch.float64)
tensor([-6.5467, -7.6489, -6.3433, -6.6986, -7.4804], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1799, device='cuda:0', dtype=torch.float64)
tensor([-6.5139, -7.6287, -6.3281, -6.6873, -7.4572], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1689, device='cuda:0', dtype=torch.float64)
tensor([-6.4820, -7.6047, -6.3129, -6.6733, -7.4307], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1675, device='cuda:0', dtype=torch.float64)
tensor([-6.4526, -7.5838, -6.2978, -6.6602, -7.4000], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1580, device='cuda:0', dtype=torch.float64)
tensor([-6.4241, -7.5613, -6.2825, -6.6448, -7.3697], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1668, device='cuda:0', dtype=torch.float64)
tensor([-6.3994, -7.5401, -6.2674, -6.6297, -7.3338], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1826, device='cuda:0', dtype=torch.float64)
tensor([-6.3769, -7.5247, -6.2523, -6.6153, -7.3038], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1496, device='cuda:0', dtype=torch.float64)
tensor([-6.3551, -7.5071, -6.2381, -6.6025, -7.2747], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2185, device='cuda:0', dtype=torch.float64)
tensor([-6.3216, -7.4745, -6.2214, -6.5813, -7.2409], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1826, device='cuda:0', dtype=torch.float64)
tensor([-6.2950, -7.4449, -6.2039, -6.5583, -7.2066], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1834, device='cuda:0', dtype=torch.float64)
tensor([-6.2692, -7.4143, -6.1870, -6.5353, -7.1727], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2038, device='cuda:0', dtype=torch.float64)
tensor([-6.2439, -7.3858, -6.1781, -6.5072, -7.1434], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1591, device='cuda:0', dtype=torch.float64)
tensor([-6.2163, -7.3543, -6.1702, -6.4762, -7.1161], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1932, device='cuda:0', dtype=torch.float64)
tensor([-6.1886, -7.3201, -6.1585, -6.4465, -7.0849], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1866, device='cuda:0', dtype=torch.float64)
tensor([-6.1575, -7.2790, -6.1401, -6.4138, -7.0495], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1310, device='cuda:0', dtype=torch.float64)
tensor([-6.1290, -7.2378, -6.1237, -6.3781, -7.0120], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1798, device='cuda:0', dtype=torch.float64)
tensor([-6.1007, -7.1978, -6.1079, -6.3461, -6.9755], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1751, device='cuda:0', dtype=torch.float64)
tensor([-6.0734, -7.1593, -6.0962, -6.3219, -6.9404], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1877, device='cuda:0', dtype=torch.float64)
tensor([-6.0466, -7.1224, -6.0838, -6.2972, -6.9047], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2240, device='cuda:0', dtype=torch.float64)
tensor([-6.0119, -7.0836, -6.0639, -6.2671, -6.8692], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1906, device='cuda:0', dtype=torch.float64)
tensor([-5.9823, -7.0446, -6.0434, -6.2354, -6.8364], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1421, device='cuda:0', dtype=torch.float64)
tensor([-5.9534, -7.0008, -6.0218, -6.2083, -6.8048], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1901, device='cuda:0', dtype=torch.float64)
tensor([-5.9267, -6.9453, -5.9982, -6.1781, -6.7665], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1552, device='cuda:0', dtype=torch.float64)
tensor([-5.9002, -6.8883, -5.9736, -6.1460, -6.7273], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1749, device='cuda:0', dtype=torch.float64)
tensor([-5.8730, -6.8352, -5.9522, -6.1162, -6.6908], device='cuda:0',
       dtype=torch.float64)
Saved results to /home/idrissm/projects/def-mh541-ab/idrissm/neighborVCA/runs/results/tsp/tsp64_/home/idrissm/projects/def-mh541-ab/idrissm/neighborVCA/scripts/VCA/tsp/configHVCA64.json_20250925_034210.csv
rnn.0.0.weight tensor(0.3170, device='cuda:0', dtype=torch.float64)
tensor([-1.6865, -2.6073, -2.8708, -3.3009, -3.1848], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(5.0354, device='cuda:0', dtype=torch.float64)
tensor([-14.4420, -45.6815, -20.3319, -43.9481, -45.2178], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(262.2607, device='cuda:0', dtype=torch.float64)
tensor([-11.2595, -10.9702,  -3.4619,  -7.1320,  -5.7480], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(162.0420, device='cuda:0', dtype=torch.float64)
tensor([ -9.3402, -23.5550, -18.2759, -12.7365, -11.0287], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(226.8343, device='cuda:0', dtype=torch.float64)
tensor([ -5.1013,  -7.9205, -12.8064,  -8.7364,  -6.8890], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(134.5594, device='cuda:0', dtype=torch.float64)
tensor([-2.2667, -4.5183, -3.0533, -7.1503, -3.7092], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(96.0977, device='cuda:0', dtype=torch.float64)
tensor([-2.4246, -4.9727, -3.0239, -4.2848, -3.8856], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(90.2761, device='cuda:0', dtype=torch.float64)
tensor([-2.4207, -5.1432, -3.0338, -3.8881, -4.4752], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(58.1040, device='cuda:0', dtype=torch.float64)
tensor([-2.4915, -4.3555, -2.9963, -3.4663, -4.8350], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(55.2501, device='cuda:0', dtype=torch.float64)
tensor([-2.4415, -4.9154, -2.9466, -4.9824, -4.9836], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(66.5489, device='cuda:0', dtype=torch.float64)
tensor([-2.1765, -4.6998, -2.8598, -5.8733, -5.1851], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(68.2132, device='cuda:0', dtype=torch.float64)
tensor([-1.9233, -3.6111, -2.7855, -3.9301, -4.7680], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(46.5006, device='cuda:0', dtype=torch.float64)
tensor([-1.7725, -3.2315, -2.8134, -3.9383, -4.1370], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(25.5528, device='cuda:0', dtype=torch.float64)
tensor([-1.7345, -3.5426, -2.9135, -4.1852, -3.7039], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(12.7147, device='cuda:0', dtype=torch.float64)
tensor([-1.8047, -3.8312, -3.0244, -4.3923, -3.5187], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(18.8583, device='cuda:0', dtype=torch.float64)
tensor([-2.0667, -3.6067, -3.1236, -4.4910, -3.4796], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(34.3678, device='cuda:0', dtype=torch.float64)
tensor([-2.0275, -3.2066, -3.2109, -4.3341, -3.4170], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(38.2544, device='cuda:0', dtype=torch.float64)
tensor([-1.7267, -2.9400, -3.2778, -3.9756, -3.3148], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(29.8053, device='cuda:0', dtype=torch.float64)
tensor([-1.6120, -2.7701, -3.3903, -3.7159, -3.2286], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(21.0715, device='cuda:0', dtype=torch.float64)
tensor([-1.5997, -2.7116, -3.4162, -3.5530, -3.1905], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(15.4265, device='cuda:0', dtype=torch.float64)
tensor([-1.6438, -2.7362, -3.3134, -3.4266, -3.2324], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(13.9725, device='cuda:0', dtype=torch.float64)
tensor([-1.7349, -2.8263, -3.2908, -3.3175, -3.3530], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(14.3327, device='cuda:0', dtype=torch.float64)
tensor([-1.8573, -2.9869, -3.3745, -3.2164, -3.4827], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(14.2429, device='cuda:0', dtype=torch.float64)
tensor([-1.9793, -3.1783, -3.4627, -3.1234, -3.5350], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(13.4876, device='cuda:0', dtype=torch.float64)
tensor([-2.0785, -3.2553, -3.4567, -3.0534, -3.5183], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(11.4677, device='cuda:0', dtype=torch.float64)
tensor([-2.1544, -3.2147, -3.3701, -3.0136, -3.4980], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(10.8196, device='cuda:0', dtype=torch.float64)
tensor([-2.2067, -3.1625, -3.2598, -2.9959, -3.4808], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(11.2838, device='cuda:0', dtype=torch.float64)
tensor([-2.2318, -3.1111, -3.1651, -2.9944, -3.4380], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(11.4804, device='cuda:0', dtype=torch.float64)
tensor([-2.2230, -3.0485, -3.0954, -3.0095, -3.3642], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(11.2906, device='cuda:0', dtype=torch.float64)
tensor([-2.1710, -2.9888, -3.0493, -3.0410, -3.2794], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(9.9135, device='cuda:0', dtype=torch.float64)
tensor([-2.0802, -2.9654, -3.0260, -3.0849, -3.2008], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(8.5028, device='cuda:0', dtype=torch.float64)
tensor([-1.9713, -2.9940, -3.0207, -3.1317, -3.1334], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(6.7256, device='cuda:0', dtype=torch.float64)
tensor([-1.8691, -3.0249, -3.0272, -3.1763, -3.0809], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(5.3506, device='cuda:0', dtype=torch.float64)
tensor([-1.7859, -2.9838, -3.0376, -3.2155, -3.0468], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(5.4032, device='cuda:0', dtype=torch.float64)
tensor([-1.7252, -2.8714, -3.0450, -3.2447, -3.0334], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(5.9199, device='cuda:0', dtype=torch.float64)
tensor([-1.6857, -2.7548, -3.0463, -3.2611, -3.0395], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(6.3489, device='cuda:0', dtype=torch.float64)
tensor([-1.6666, -2.6694, -3.0379, -3.2623, -3.0621], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(6.2718, device='cuda:0', dtype=torch.float64)
tensor([-1.6665, -2.6153, -3.0194, -3.2490, -3.0985], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(5.4635, device='cuda:0', dtype=torch.float64)
tensor([-1.6829, -2.5862, -2.9925, -3.2247, -3.1458], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(4.6422, device='cuda:0', dtype=torch.float64)
tensor([-1.7131, -2.5783, -2.9606, -3.1949, -3.2003], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(3.5883, device='cuda:0', dtype=torch.float64)
tensor([-1.7525, -2.5866, -2.9273, -3.1655, -3.2569], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(3.0665, device='cuda:0', dtype=torch.float64)
tensor([-1.7972, -2.6071, -2.8949, -3.1404, -3.3093], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.7553, device='cuda:0', dtype=torch.float64)
tensor([-1.8416, -2.6348, -2.8657, -3.1219, -3.3526], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(3.0809, device='cuda:0', dtype=torch.float64)
tensor([-1.8809, -2.6641, -2.8399, -3.1100, -3.3806], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(3.6560, device='cuda:0', dtype=torch.float64)
tensor([-1.9110, -2.6899, -2.8167, -3.1032, -3.3904], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(3.6252, device='cuda:0', dtype=torch.float64)
tensor([-1.9305, -2.7085, -2.7964, -3.0995, -3.3848], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(3.6570, device='cuda:0', dtype=torch.float64)
tensor([-1.9382, -2.7184, -2.7799, -3.0990, -3.3671], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(3.4559, device='cuda:0', dtype=torch.float64)
tensor([-1.9350, -2.7198, -2.7683, -3.1013, -3.3424], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(3.0389, device='cuda:0', dtype=torch.float64)
tensor([-1.9234, -2.7151, -2.7613, -3.1066, -3.3148], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.4500, device='cuda:0', dtype=torch.float64)
tensor([-1.9077, -2.7084, -2.7588, -3.1144, -3.2890], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0551, device='cuda:0', dtype=torch.float64)
tensor([-1.8909, -2.7016, -2.7599, -3.1246, -3.2672], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1395, device='cuda:0', dtype=torch.float64)
tensor([-1.8754, -2.6955, -2.7631, -3.1357, -3.2513], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1646, device='cuda:0', dtype=torch.float64)
tensor([-1.8626, -2.6902, -2.7680, -3.1476, -3.2419], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0655, device='cuda:0', dtype=torch.float64)
tensor([-1.8533, -2.6861, -2.7740, -3.1587, -3.2382], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0963, device='cuda:0', dtype=torch.float64)
tensor([-1.8474, -2.6838, -2.7803, -3.1687, -3.2394], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8452, device='cuda:0', dtype=torch.float64)
tensor([-1.8450, -2.6828, -2.7850, -3.1772, -3.2441], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7166, device='cuda:0', dtype=torch.float64)
tensor([-1.8456, -2.6832, -2.7872, -3.1831, -3.2500], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6337, device='cuda:0', dtype=torch.float64)
tensor([-1.8480, -2.6845, -2.7873, -3.1867, -3.2572], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6509, device='cuda:0', dtype=torch.float64)
tensor([-1.8512, -2.6871, -2.7851, -3.1878, -3.2627], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6297, device='cuda:0', dtype=torch.float64)
tensor([-1.8552, -2.6892, -2.7816, -3.1871, -3.2661], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7063, device='cuda:0', dtype=torch.float64)
tensor([-1.8586, -2.6915, -2.7756, -3.1843, -3.2658], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6036, device='cuda:0', dtype=torch.float64)
tensor([-1.8607, -2.6936, -2.7696, -3.1811, -3.2636], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6088, device='cuda:0', dtype=torch.float64)
tensor([-1.8611, -2.6938, -2.7654, -3.1781, -3.2604], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4216, device='cuda:0', dtype=torch.float64)
tensor([-1.8606, -2.6934, -2.7632, -3.1758, -3.2561], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3122, device='cuda:0', dtype=torch.float64)
tensor([-1.8579, -2.6918, -2.7635, -3.1756, -3.2510], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3619, device='cuda:0', dtype=torch.float64)
tensor([-1.8539, -2.6891, -2.7663, -3.1769, -3.2456], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5372, device='cuda:0', dtype=torch.float64)
tensor([-1.8497, -2.6847, -2.7709, -3.1801, -3.2423], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4060, device='cuda:0', dtype=torch.float64)
tensor([-1.8454, -2.6792, -2.7778, -3.1848, -3.2408], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4819, device='cuda:0', dtype=torch.float64)
tensor([-1.8414, -2.6732, -2.7865, -3.1912, -3.2418], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3226, device='cuda:0', dtype=torch.float64)
tensor([-1.8389, -2.6665, -2.7965, -3.1976, -3.2451], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1429, device='cuda:0', dtype=torch.float64)
tensor([-1.8374, -2.6599, -2.8075, -3.2033, -3.2496], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2054, device='cuda:0', dtype=torch.float64)
tensor([-1.8374, -2.6545, -2.8179, -3.2087, -3.2550], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2101, device='cuda:0', dtype=torch.float64)
tensor([-1.8393, -2.6508, -2.8260, -3.2138, -3.2600], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3258, device='cuda:0', dtype=torch.float64)
tensor([-1.8435, -2.6479, -2.8322, -3.2185, -3.2645], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3819, device='cuda:0', dtype=torch.float64)
tensor([-1.8487, -2.6473, -2.8359, -3.2218, -3.2668], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0665, device='cuda:0', dtype=torch.float64)
tensor([-1.8542, -2.6486, -2.8383, -3.2220, -3.2683], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2477, device='cuda:0', dtype=torch.float64)
tensor([-1.8593, -2.6515, -2.8387, -3.2223, -3.2689], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3750, device='cuda:0', dtype=torch.float64)
tensor([-1.8649, -2.6558, -2.8395, -3.2215, -3.2685], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3719, device='cuda:0', dtype=torch.float64)
tensor([-1.8715, -2.6615, -2.8395, -3.2193, -3.2672], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2324, device='cuda:0', dtype=torch.float64)
tensor([-1.8778, -2.6682, -2.8374, -3.2164, -3.2652], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0782, device='cuda:0', dtype=torch.float64)
tensor([-1.8856, -2.6760, -2.8339, -3.2129, -3.2632], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4197, device='cuda:0', dtype=torch.float64)
tensor([-1.8949, -2.6831, -2.8295, -3.2082, -3.2627], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2072, device='cuda:0', dtype=torch.float64)
tensor([-1.9031, -2.6887, -2.8268, -3.2039, -3.2642], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1608, device='cuda:0', dtype=torch.float64)
tensor([-1.9095, -2.6935, -2.8248, -3.2022, -3.2667], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4237, device='cuda:0', dtype=torch.float64)
tensor([-1.9157, -2.6970, -2.8241, -3.2013, -3.2692], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1179, device='cuda:0', dtype=torch.float64)
tensor([-1.9202, -2.7009, -2.8247, -3.1997, -3.2711], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2632, device='cuda:0', dtype=torch.float64)
tensor([-1.9241, -2.7038, -2.8263, -3.2005, -3.2719], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4290, device='cuda:0', dtype=torch.float64)
tensor([-1.9261, -2.7053, -2.8286, -3.2019, -3.2720], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0182, device='cuda:0', dtype=torch.float64)
tensor([-1.9261, -2.7050, -2.8314, -3.2011, -3.2705], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0196, device='cuda:0', dtype=torch.float64)
tensor([-1.9242, -2.7031, -2.8330, -3.2002, -3.2687], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5357, device='cuda:0', dtype=torch.float64)
tensor([-1.9231, -2.6998, -2.8357, -3.2022, -3.2688], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1986, device='cuda:0', dtype=torch.float64)
tensor([-1.9207, -2.6959, -2.8389, -3.2027, -3.2672], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2856, device='cuda:0', dtype=torch.float64)
tensor([-1.9184, -2.6911, -2.8436, -3.2039, -3.2664], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3703, device='cuda:0', dtype=torch.float64)
tensor([-1.9161, -2.6877, -2.8476, -3.2050, -3.2654], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3020, device='cuda:0', dtype=torch.float64)
tensor([-1.9167, -2.6868, -2.8496, -3.2056, -3.2664], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1067, device='cuda:0', dtype=torch.float64)
tensor([-1.9160, -2.6858, -2.8529, -3.2066, -3.2661], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1563, device='cuda:0', dtype=torch.float64)
tensor([-1.9144, -2.6849, -2.8552, -3.2061, -3.2635], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3767, device='cuda:0', dtype=torch.float64)
tensor([-1.9125, -2.6852, -2.8570, -3.2050, -3.2598], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2533, device='cuda:0', dtype=torch.float64)
tensor([-1.9094, -2.6867, -2.8581, -3.2032, -3.2522], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2517, device='cuda:0', dtype=torch.float64)
tensor([-1.9077, -2.6879, -2.8603, -3.2001, -3.2473], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1579, device='cuda:0', dtype=torch.float64)
tensor([-1.9073, -2.6900, -2.8619, -3.1979, -3.2431], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4969, device='cuda:0', dtype=torch.float64)
tensor([-1.9076, -2.6924, -2.8613, -3.1972, -3.2409], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2757, device='cuda:0', dtype=torch.float64)
tensor([-1.9094, -2.6961, -2.8610, -3.1958, -3.2401], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4005, device='cuda:0', dtype=torch.float64)
tensor([-1.9122, -2.7000, -2.8625, -3.1955, -3.2431], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1432, device='cuda:0', dtype=torch.float64)
tensor([-1.9144, -2.7034, -2.8654, -3.1953, -3.2476], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4024, device='cuda:0', dtype=torch.float64)
tensor([-1.9186, -2.7076, -2.8696, -3.1935, -3.2531], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2937, device='cuda:0', dtype=torch.float64)
tensor([-1.9242, -2.7114, -2.8740, -3.1913, -3.2616], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3718, device='cuda:0', dtype=torch.float64)
tensor([-1.9299, -2.7162, -2.8784, -3.1889, -3.2681], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5428, device='cuda:0', dtype=torch.float64)
tensor([-1.9365, -2.7205, -2.8847, -3.1881, -3.2761], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2748, device='cuda:0', dtype=torch.float64)
tensor([-1.9409, -2.7248, -2.8904, -3.1903, -3.2803], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3058, device='cuda:0', dtype=torch.float64)
tensor([-1.9471, -2.7303, -2.8955, -3.1900, -3.2834], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2585, device='cuda:0', dtype=torch.float64)
tensor([-1.9524, -2.7353, -2.8978, -3.1911, -3.2833], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4873, device='cuda:0', dtype=torch.float64)
tensor([-1.9577, -2.7397, -2.8989, -3.1919, -3.2829], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8548, device='cuda:0', dtype=torch.float64)
tensor([-1.9604, -2.7418, -2.9006, -3.1947, -3.2772], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2820, device='cuda:0', dtype=torch.float64)
tensor([-1.9625, -2.7426, -2.9011, -3.1977, -3.2717], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5026, device='cuda:0', dtype=torch.float64)
tensor([-1.9653, -2.7432, -2.8993, -3.2023, -3.2657], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7574, device='cuda:0', dtype=torch.float64)
tensor([-1.9709, -2.7451, -2.9003, -3.2075, -3.2643], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8678, device='cuda:0', dtype=torch.float64)
tensor([-1.9798, -2.7471, -2.9019, -3.2137, -3.2662], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3708, device='cuda:0', dtype=torch.float64)
tensor([-1.9886, -2.7489, -2.9015, -3.2205, -3.2702], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7164, device='cuda:0', dtype=torch.float64)
tensor([-1.9979, -2.7488, -2.9018, -3.2243, -3.2749], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6819, device='cuda:0', dtype=torch.float64)
tensor([-2.0088, -2.7494, -2.9029, -3.2262, -3.2818], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3646, device='cuda:0', dtype=torch.float64)
tensor([-2.0185, -2.7508, -2.9058, -3.2273, -3.2902], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4473, device='cuda:0', dtype=torch.float64)
tensor([-2.0281, -2.7520, -2.9071, -3.2255, -3.2963], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2214, device='cuda:0', dtype=torch.float64)
tensor([-2.0343, -2.7527, -2.9111, -3.2258, -3.3006], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4731, device='cuda:0', dtype=torch.float64)
tensor([-2.0387, -2.7519, -2.9155, -3.2266, -3.3016], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1744, device='cuda:0', dtype=torch.float64)
tensor([-2.0402, -2.7518, -2.9198, -3.2260, -3.2997], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4911, device='cuda:0', dtype=torch.float64)
tensor([-2.0409, -2.7533, -2.9227, -3.2255, -3.2972], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5096, device='cuda:0', dtype=torch.float64)
tensor([-2.0422, -2.7531, -2.9275, -3.2264, -3.2978], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7927, device='cuda:0', dtype=torch.float64)
tensor([-2.0464, -2.7586, -2.9288, -3.2245, -3.2970], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3826, device='cuda:0', dtype=torch.float64)
tensor([-2.0489, -2.7624, -2.9316, -3.2265, -3.2980], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7839, device='cuda:0', dtype=torch.float64)
tensor([-2.0532, -2.7676, -2.9357, -3.2299, -3.3035], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0161, device='cuda:0', dtype=torch.float64)
tensor([-2.0533, -2.7686, -2.9391, -3.2360, -3.3064], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5071, device='cuda:0', dtype=torch.float64)
tensor([-2.0525, -2.7699, -2.9410, -3.2466, -3.3061], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6273, device='cuda:0', dtype=torch.float64)
tensor([-2.0524, -2.7728, -2.9434, -3.2562, -3.3079], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3088, device='cuda:0', dtype=torch.float64)
tensor([-2.0543, -2.7755, -2.9435, -3.2624, -3.3103], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5569, device='cuda:0', dtype=torch.float64)
tensor([-2.0575, -2.7799, -2.9452, -3.2695, -3.3147], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4952, device='cuda:0', dtype=torch.float64)
tensor([-2.0617, -2.7854, -2.9487, -3.2775, -3.3218], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3693, device='cuda:0', dtype=torch.float64)
tensor([-2.0650, -2.7904, -2.9519, -3.2865, -3.3269], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6543, device='cuda:0', dtype=torch.float64)
tensor([-2.0694, -2.7944, -2.9546, -3.2951, -3.3333], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5068, device='cuda:0', dtype=torch.float64)
tensor([-2.0721, -2.7994, -2.9584, -3.3016, -3.3404], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4446, device='cuda:0', dtype=torch.float64)
tensor([-2.0774, -2.8052, -2.9601, -3.3057, -3.3469], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7775, device='cuda:0', dtype=torch.float64)
tensor([-2.0822, -2.8087, -2.9573, -3.3123, -3.3540], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2598, device='cuda:0', dtype=torch.float64)
tensor([-2.0873, -2.8141, -2.9541, -3.3185, -3.3626], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5104, device='cuda:0', dtype=torch.float64)
tensor([-2.0951, -2.8212, -2.9501, -3.3225, -3.3708], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6478, device='cuda:0', dtype=torch.float64)
tensor([-2.1037, -2.8296, -2.9468, -3.3237, -3.3793], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9107, device='cuda:0', dtype=torch.float64)
tensor([-2.1161, -2.8414, -2.9445, -3.3256, -3.3914], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8072, device='cuda:0', dtype=torch.float64)
tensor([-2.1278, -2.8530, -2.9448, -3.3279, -3.4022], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5664, device='cuda:0', dtype=torch.float64)
tensor([-2.1410, -2.8675, -2.9439, -3.3300, -3.4124], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9771, device='cuda:0', dtype=torch.float64)
tensor([-2.1601, -2.8820, -2.9459, -3.3293, -3.4299], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4241, device='cuda:0', dtype=torch.float64)
tensor([-2.1782, -2.8966, -2.9474, -3.3309, -3.4427], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8297, device='cuda:0', dtype=torch.float64)
tensor([-2.1978, -2.9151, -2.9515, -3.3315, -3.4620], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7393, device='cuda:0', dtype=torch.float64)
tensor([-2.2198, -2.9340, -2.9538, -3.3356, -3.4797], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4411, device='cuda:0', dtype=torch.float64)
tensor([-2.2457, -2.9549, -2.9593, -3.3396, -3.5008], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7387, device='cuda:0', dtype=torch.float64)
tensor([-2.2730, -2.9771, -2.9639, -3.3440, -3.5265], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5275, device='cuda:0', dtype=torch.float64)
tensor([-2.3026, -3.0004, -2.9670, -3.3516, -3.5541], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4733, device='cuda:0', dtype=torch.float64)
tensor([-2.3365, -3.0257, -2.9752, -3.3663, -3.5883], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7979, device='cuda:0', dtype=torch.float64)
tensor([-2.3743, -3.0553, -2.9823, -3.3824, -3.6250], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9494, device='cuda:0', dtype=torch.float64)
tensor([-2.4172, -3.0890, -2.9929, -3.4055, -3.6678], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7703, device='cuda:0', dtype=torch.float64)
tensor([-2.4660, -3.1276, -3.0079, -3.4291, -3.7156], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9409, device='cuda:0', dtype=torch.float64)
tensor([-2.5186, -3.1682, -3.0226, -3.4534, -3.7627], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9798, device='cuda:0', dtype=torch.float64)
tensor([-2.5732, -3.2087, -3.0391, -3.4869, -3.8153], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9975, device='cuda:0', dtype=torch.float64)
tensor([-2.6381, -3.2543, -3.0592, -3.5266, -3.8806], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8987, device='cuda:0', dtype=torch.float64)
tensor([-2.7095, -3.3084, -3.0857, -3.5696, -3.9638], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7465, device='cuda:0', dtype=torch.float64)
tensor([-2.7817, -3.3692, -3.1160, -3.6181, -4.0479], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7949, device='cuda:0', dtype=torch.float64)
tensor([-2.8589, -3.4401, -3.1498, -3.6817, -4.1584], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5583, device='cuda:0', dtype=torch.float64)
tensor([-2.9411, -3.5183, -3.1906, -3.7553, -4.2991], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8791, device='cuda:0', dtype=torch.float64)
tensor([-3.0280, -3.6038, -3.2344, -3.8414, -4.4637], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6505, device='cuda:0', dtype=torch.float64)
tensor([-3.1181, -3.6861, -3.2840, -3.9434, -4.6954], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5208, device='cuda:0', dtype=torch.float64)
tensor([-3.2071, -3.7782, -3.3338, -4.0596, -5.0002], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7457, device='cuda:0', dtype=torch.float64)
tensor([-3.2976, -3.8776, -3.3872, -4.2122, -5.4357], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7029, device='cuda:0', dtype=torch.float64)
tensor([-3.3943, -4.0001, -3.4474, -4.4050, -5.9536], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9353, device='cuda:0', dtype=torch.float64)
tensor([-3.4932, -4.1348, -3.5101, -4.6230, -6.4811], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4451, device='cuda:0', dtype=torch.float64)
tensor([-3.5882, -4.2784, -3.5758, -4.8837, -7.0411], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5797, device='cuda:0', dtype=torch.float64)
tensor([-3.6821, -4.4386, -3.6459, -5.1548, -7.5754], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6246, device='cuda:0', dtype=torch.float64)
tensor([-3.7817, -4.6336, -3.7146, -5.4118, -8.0244], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4084, device='cuda:0', dtype=torch.float64)
tensor([-3.8904, -4.8468, -3.7911, -5.6905, -8.5190], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4614, device='cuda:0', dtype=torch.float64)
tensor([-3.9940, -5.0466, -3.8708, -6.0064, -9.0665], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3565, device='cuda:0', dtype=torch.float64)
tensor([-4.0940, -5.2470, -3.9540, -6.3487, -9.6353], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1165, device='cuda:0', dtype=torch.float64)
tensor([ -4.1905,  -5.4988,  -4.0457,  -6.7426, -10.2684], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4930, device='cuda:0', dtype=torch.float64)
tensor([ -4.2862,  -5.8562,  -4.1443,  -7.2184, -11.0113], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1603, device='cuda:0', dtype=torch.float64)
tensor([ -4.3777,  -6.2440,  -4.2457,  -7.6936, -11.7031], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3016, device='cuda:0', dtype=torch.float64)
tensor([ -4.4726,  -6.8365,  -4.3630,  -8.3015, -12.5732], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4496, device='cuda:0', dtype=torch.float64)
tensor([ -4.5666,  -7.4270,  -4.4934,  -8.8540, -13.3358], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4460, device='cuda:0', dtype=torch.float64)
tensor([ -4.6550,  -8.0324,  -4.6327,  -9.3912, -14.0449], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6107, device='cuda:0', dtype=torch.float64)
tensor([ -4.7381,  -8.5863,  -4.7700,  -9.8743, -14.6935], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3692, device='cuda:0', dtype=torch.float64)
tensor([ -4.8210,  -9.0912,  -4.9300, -10.3231, -15.2973], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1350, device='cuda:0', dtype=torch.float64)
tensor([ -4.9006,  -9.4877,  -5.0802, -10.6916, -15.7831], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8242, device='cuda:0', dtype=torch.float64)
tensor([ -4.9808,  -9.8740,  -5.2172, -11.0450, -16.2832], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1568, device='cuda:0', dtype=torch.float64)
tensor([ -5.0597, -10.3568,  -5.3754, -11.4665, -16.8760], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1957, device='cuda:0', dtype=torch.float64)
tensor([ -5.1395, -10.9399,  -5.5778, -11.9441, -17.5747], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3662, device='cuda:0', dtype=torch.float64)
tensor([ -5.2145, -11.5294,  -5.7943, -12.4154, -18.2201], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4911, device='cuda:0', dtype=torch.float64)
tensor([ -5.2940, -12.0964,  -6.0423, -12.8460, -18.8280], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3967, device='cuda:0', dtype=torch.float64)
tensor([ -5.3623, -12.7816,  -6.3101, -13.3513, -19.5314], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3894, device='cuda:0', dtype=torch.float64)
tensor([ -5.4427, -13.5167,  -6.6207, -13.8647, -20.2438], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4130, device='cuda:0', dtype=torch.float64)
tensor([ -5.4987, -14.2406,  -6.9450, -14.3797, -20.9143], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2610, device='cuda:0', dtype=torch.float64)
tensor([ -5.5551, -14.9302,  -7.2727, -14.8519, -21.5283], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2445, device='cuda:0', dtype=torch.float64)
tensor([ -5.6041, -15.4820,  -7.5841, -15.2505, -21.9888], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3976, device='cuda:0', dtype=torch.float64)
tensor([ -5.6460, -15.9512,  -7.8583, -15.6204, -22.3805], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6862, device='cuda:0', dtype=torch.float64)
tensor([ -5.6950, -16.5353,  -8.3491, -16.0484, -22.8970], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4778, device='cuda:0', dtype=torch.float64)
tensor([ -5.7373, -16.9799,  -8.7910, -16.3921, -23.2821], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2489, device='cuda:0', dtype=torch.float64)
tensor([ -5.7788, -17.4112,  -9.2410, -16.7228, -23.6855], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3522, device='cuda:0', dtype=torch.float64)
tensor([ -5.8287, -17.7915,  -9.6618, -16.9906, -24.0170], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3685, device='cuda:0', dtype=torch.float64)
tensor([ -5.8783, -18.2716, -10.1761, -17.2818, -24.4451], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1504, device='cuda:0', dtype=torch.float64)
tensor([ -5.9315, -18.6960, -10.6641, -17.5374, -24.8387], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4792, device='cuda:0', dtype=torch.float64)
tensor([ -5.9736, -19.0970, -11.0960, -17.7983, -25.2192], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1464, device='cuda:0', dtype=torch.float64)
tensor([ -6.0136, -19.4942, -11.4467, -18.0585, -25.5844], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0172, device='cuda:0', dtype=torch.float64)
tensor([ -6.0595, -19.8284, -11.7066, -18.2775, -25.9004], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2746, device='cuda:0', dtype=torch.float64)
tensor([ -6.0998, -20.0565, -11.8736, -18.4410, -26.1060], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9474, device='cuda:0', dtype=torch.float64)
tensor([ -6.1386, -20.2898, -12.0419, -18.5932, -26.3023], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2000, device='cuda:0', dtype=torch.float64)
tensor([ -6.1763, -20.4807, -12.1369, -18.7147, -26.4895], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5704, device='cuda:0', dtype=torch.float64)
tensor([ -6.2168, -20.8631, -12.3786, -18.9319, -26.8608], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1511, device='cuda:0', dtype=torch.float64)
tensor([ -6.2694, -21.2596, -12.6008, -19.1347, -27.2615], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1188, device='cuda:0', dtype=torch.float64)
tensor([ -6.3231, -21.6810, -12.8506, -19.3487, -27.7064], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0460, device='cuda:0', dtype=torch.float64)
tensor([ -6.3637, -21.9342, -13.0332, -19.4638, -28.0065], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2143, device='cuda:0', dtype=torch.float64)
tensor([ -6.4176, -22.2661, -13.3026, -19.5817, -28.4105], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1359, device='cuda:0', dtype=torch.float64)
tensor([ -6.4572, -22.5810, -13.5547, -19.6853, -28.8026], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1383, device='cuda:0', dtype=torch.float64)
tensor([ -6.4845, -22.7679, -13.7986, -19.6971, -29.0363], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4815, device='cuda:0', dtype=torch.float64)
tensor([ -6.5300, -22.8208, -13.8445, -19.6152, -29.0856], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1633, device='cuda:0', dtype=torch.float64)
tensor([ -6.5741, -23.0006, -14.0104, -19.6363, -29.2728], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3888, device='cuda:0', dtype=torch.float64)
tensor([ -6.6323, -23.0297, -13.9456, -19.5696, -29.3563], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2308, device='cuda:0', dtype=torch.float64)
tensor([ -6.6929, -22.9144, -13.8090, -19.4164, -29.3246], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1585, device='cuda:0', dtype=torch.float64)
tensor([ -6.7472, -22.9115, -13.7529, -19.3300, -29.4442], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0411, device='cuda:0', dtype=torch.float64)
tensor([ -6.8045, -22.9027, -13.8081, -19.2604, -29.5575], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2385, device='cuda:0', dtype=torch.float64)
tensor([ -6.8526, -22.8015, -13.8032, -19.1643, -29.6440], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4015, device='cuda:0', dtype=torch.float64)
tensor([ -6.9004, -22.6935, -13.8161, -19.0765, -29.6208], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5426, device='cuda:0', dtype=torch.float64)
tensor([ -6.9386, -22.4310, -13.6507, -18.8893, -29.3845], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0765, device='cuda:0', dtype=torch.float64)
tensor([ -6.9744, -22.1861, -13.5447, -18.7252, -29.2064], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4665, device='cuda:0', dtype=torch.float64)
tensor([ -7.0055, -22.0210, -13.4750, -18.5844, -29.0824], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3089, device='cuda:0', dtype=torch.float64)
tensor([ -7.0048, -21.7105, -13.2677, -18.3726, -28.8122], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2963, device='cuda:0', dtype=torch.float64)
tensor([ -7.0142, -21.4121, -13.1249, -18.1553, -28.5800], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2034, device='cuda:0', dtype=torch.float64)
tensor([ -7.0158, -20.9982, -12.9054, -17.8757, -28.2722], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3624, device='cuda:0', dtype=torch.float64)
tensor([ -7.0149, -20.6866, -12.7971, -17.6376, -28.0934], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1337, device='cuda:0', dtype=torch.float64)
tensor([ -6.9926, -20.4136, -12.7572, -17.4068, -27.8982], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3518, device='cuda:0', dtype=torch.float64)
tensor([ -6.9649, -20.1464, -12.7034, -17.2385, -27.6786], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3456, device='cuda:0', dtype=torch.float64)
tensor([ -6.9535, -19.9387, -12.5878, -17.1118, -27.4824], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1647, device='cuda:0', dtype=torch.float64)
tensor([ -6.9381, -19.7939, -12.4599, -17.0466, -27.3312], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3117, device='cuda:0', dtype=torch.float64)
tensor([ -6.9300, -19.6896, -12.3400, -16.9904, -27.2068], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1531, device='cuda:0', dtype=torch.float64)
tensor([ -6.9262, -19.5560, -12.2762, -16.9052, -27.0473], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4095, device='cuda:0', dtype=torch.float64)
tensor([ -6.9484, -19.3576, -12.1455, -16.8372, -26.8526], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2032, device='cuda:0', dtype=torch.float64)
tensor([ -6.9618, -19.2193, -12.0355, -16.7985, -26.7607], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0805, device='cuda:0', dtype=torch.float64)
tensor([ -6.9823, -19.1946, -12.0206, -16.8309, -26.7462], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0825, device='cuda:0', dtype=torch.float64)
tensor([ -7.0016, -19.2368, -11.9995, -16.8978, -26.7733], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8757, device='cuda:0', dtype=torch.float64)
tensor([ -7.0233, -19.2944, -11.9896, -16.9373, -26.7764], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1885, device='cuda:0', dtype=torch.float64)
tensor([ -7.0349, -19.3211, -11.9430, -16.9223, -26.7222], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2474, device='cuda:0', dtype=torch.float64)
tensor([ -7.0521, -19.5043, -12.0071, -16.9684, -26.7647], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0729, device='cuda:0', dtype=torch.float64)
tensor([ -7.0650, -19.5741, -12.0295, -16.9569, -26.6900], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1461, device='cuda:0', dtype=torch.float64)
tensor([ -7.0735, -19.6057, -12.0125, -16.9649, -26.5661], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1064, device='cuda:0', dtype=torch.float64)
tensor([ -7.0790, -19.7531, -12.0138, -17.0408, -26.6071], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9880, device='cuda:0', dtype=torch.float64)
tensor([ -7.0985, -19.7482, -12.0051, -17.0405, -26.5406], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1728, device='cuda:0', dtype=torch.float64)
tensor([ -7.1265, -19.7221, -12.0764, -17.0100, -26.4547], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0995, device='cuda:0', dtype=torch.float64)
tensor([ -7.1557, -19.7284, -12.1476, -16.9924, -26.3981], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0876, device='cuda:0', dtype=torch.float64)
tensor([ -7.1851, -19.6885, -12.1810, -16.9246, -26.2701], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1255, device='cuda:0', dtype=torch.float64)
tensor([ -7.2061, -19.6650, -12.1478, -16.8866, -26.1248], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1056, device='cuda:0', dtype=torch.float64)
tensor([ -7.2113, -19.6011, -12.0745, -16.8181, -25.9143], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4014, device='cuda:0', dtype=torch.float64)
tensor([ -7.2292, -19.4099, -12.0453, -16.7221, -25.6332], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1320, device='cuda:0', dtype=torch.float64)
tensor([ -7.2560, -19.3289, -12.0204, -16.6534, -25.4612], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1505, device='cuda:0', dtype=torch.float64)
tensor([ -7.2691, -19.2269, -12.0122, -16.5865, -25.2866], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9969, device='cuda:0', dtype=torch.float64)
tensor([ -7.2916, -19.0884, -12.0150, -16.5228, -25.1449], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9584, device='cuda:0', dtype=torch.float64)
tensor([ -7.3138, -18.9103, -12.0698, -16.4220, -24.9908], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4477, device='cuda:0', dtype=torch.float64)
tensor([ -7.2936, -18.7091, -11.9914, -16.3532, -24.8406], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4393, device='cuda:0', dtype=torch.float64)
tensor([ -7.2965, -18.4958, -11.9113, -16.2712, -24.6701], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0003, device='cuda:0', dtype=torch.float64)
tensor([ -7.3125, -18.3888, -11.8578, -16.2644, -24.5996], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3048, device='cuda:0', dtype=torch.float64)
tensor([ -7.3412, -18.2507, -11.8132, -16.2348, -24.5143], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0480, device='cuda:0', dtype=torch.float64)
tensor([ -7.3738, -18.1833, -11.8101, -16.2435, -24.5064], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2774, device='cuda:0', dtype=torch.float64)
tensor([ -7.4076, -18.0269, -11.8277, -16.1815, -24.3967], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9788, device='cuda:0', dtype=torch.float64)
tensor([ -7.4677, -17.9915, -11.9103, -16.1731, -24.3948], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3095, device='cuda:0', dtype=torch.float64)
tensor([ -7.4938, -17.9972, -11.9738, -16.1916, -24.3992], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0333, device='cuda:0', dtype=torch.float64)
tensor([ -7.5006, -18.0551, -12.0027, -16.2347, -24.4712], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3732, device='cuda:0', dtype=torch.float64)
tensor([ -7.5621, -17.9583, -12.1434, -16.1995, -24.4873], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0759, device='cuda:0', dtype=torch.float64)
tensor([ -7.6274, -17.9052, -12.2891, -16.1979, -24.5615], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0255, device='cuda:0', dtype=torch.float64)
tensor([ -7.6966, -17.9003, -12.4526, -16.2312, -24.6985], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1953, device='cuda:0', dtype=torch.float64)
tensor([ -7.7655, -17.7349, -12.5696, -16.1935, -24.6513], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1751, device='cuda:0', dtype=torch.float64)
tensor([ -7.8687, -17.6452, -12.7827, -16.2346, -24.6995], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0538, device='cuda:0', dtype=torch.float64)
tensor([ -7.9374, -17.6595, -12.9211, -16.3026, -24.8236], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0220, device='cuda:0', dtype=torch.float64)
tensor([ -8.0246, -17.6032, -13.1179, -16.3358, -24.8775], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1329, device='cuda:0', dtype=torch.float64)
tensor([ -8.1455, -17.5269, -13.4190, -16.3375, -24.9322], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8770, device='cuda:0', dtype=torch.float64)
tensor([ -8.2234, -17.4752, -13.6297, -16.3095, -24.9367], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2390, device='cuda:0', dtype=torch.float64)
tensor([ -8.2564, -17.4080, -13.7880, -16.2652, -24.9163], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9449, device='cuda:0', dtype=torch.float64)
tensor([ -8.3128, -17.4223, -13.9953, -16.2506, -24.9499], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1257, device='cuda:0', dtype=torch.float64)
tensor([ -8.4113, -17.3944, -14.2337, -16.2571, -24.9354], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0226, device='cuda:0', dtype=torch.float64)
tensor([ -8.5002, -17.2436, -14.4469, -16.2092, -24.8585], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9496, device='cuda:0', dtype=torch.float64)
tensor([ -8.5592, -16.9993, -14.6439, -16.1281, -24.7153], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9574, device='cuda:0', dtype=torch.float64)
tensor([ -8.6098, -16.7788, -14.8290, -16.1019, -24.5989], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8885, device='cuda:0', dtype=torch.float64)
tensor([ -8.6253, -16.5623, -14.9105, -16.0753, -24.4808], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0347, device='cuda:0', dtype=torch.float64)
tensor([ -8.6513, -16.3898, -15.0915, -16.0871, -24.3999], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8863, device='cuda:0', dtype=torch.float64)
tensor([ -8.6643, -16.2122, -15.2428, -16.1171, -24.3057], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2266, device='cuda:0', dtype=torch.float64)
tensor([ -8.6931, -16.1832, -15.4451, -16.2228, -24.3055], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1770, device='cuda:0', dtype=torch.float64)
tensor([ -8.6885, -16.0872, -15.5567, -16.2910, -24.2860], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0219, device='cuda:0', dtype=torch.float64)
tensor([ -8.7160, -16.1216, -15.6832, -16.4254, -24.3688], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1160, device='cuda:0', dtype=torch.float64)
tensor([ -8.7832, -15.9929, -15.7755, -16.4657, -24.3418], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0403, device='cuda:0', dtype=torch.float64)
tensor([ -8.8448, -15.8101, -15.8268, -16.4912, -24.2507], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1986, device='cuda:0', dtype=torch.float64)
tensor([ -8.8665, -15.6327, -15.8183, -16.5583, -24.1666], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1127, device='cuda:0', dtype=torch.float64)
tensor([ -8.8563, -15.4941, -15.7213, -16.6771, -24.0922], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0745, device='cuda:0', dtype=torch.float64)
tensor([ -8.8486, -15.3760, -15.6690, -16.7391, -24.0020], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1142, device='cuda:0', dtype=torch.float64)
tensor([ -8.8632, -15.2846, -15.6403, -16.7834, -23.9440], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0549, device='cuda:0', dtype=torch.float64)
tensor([ -8.9075, -15.3028, -15.6478, -16.8514, -23.9834], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1782, device='cuda:0', dtype=torch.float64)
tensor([ -8.9593, -15.4947, -15.6743, -16.9825, -24.1482], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8313, device='cuda:0', dtype=torch.float64)
tensor([ -8.9861, -15.6132, -15.6381, -17.0596, -24.2038], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9472, device='cuda:0', dtype=torch.float64)
tensor([ -9.0141, -15.7915, -15.5739, -17.1580, -24.2871], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2449, device='cuda:0', dtype=torch.float64)
tensor([ -9.0509, -15.8743, -15.5514, -17.1721, -24.2699], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9573, device='cuda:0', dtype=torch.float64)
tensor([ -9.0797, -16.0071, -15.4825, -17.1572, -24.2761], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8590, device='cuda:0', dtype=torch.float64)
tensor([ -9.1197, -16.3122, -15.4592, -17.2319, -24.4343], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1202, device='cuda:0', dtype=torch.float64)
tensor([ -9.1686, -16.6940, -15.4525, -17.3830, -24.6330], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0110, device='cuda:0', dtype=torch.float64)
tensor([ -9.2022, -17.0264, -15.4280, -17.5199, -24.8062], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0127, device='cuda:0', dtype=torch.float64)
tensor([ -9.2585, -17.4893, -15.4773, -17.6721, -25.0466], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9670, device='cuda:0', dtype=torch.float64)
tensor([ -9.3095, -17.8166, -15.5966, -17.7322, -25.1916], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0598, device='cuda:0', dtype=torch.float64)
tensor([ -9.3375, -18.1541, -15.6383, -17.7808, -25.3501], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8982, device='cuda:0', dtype=torch.float64)
tensor([ -9.3727, -18.5021, -15.7047, -17.8776, -25.5422], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0362, device='cuda:0', dtype=torch.float64)
tensor([ -9.3913, -18.8401, -15.7177, -17.9713, -25.7074], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8828, device='cuda:0', dtype=torch.float64)
tensor([ -9.4064, -19.2908, -15.7968, -18.1490, -25.9682], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0175, device='cuda:0', dtype=torch.float64)
tensor([ -9.4131, -19.7477, -15.8909, -18.4059, -26.2490], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0296, device='cuda:0', dtype=torch.float64)
tensor([ -9.3926, -19.9362, -15.8618, -18.5417, -26.3482], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8564, device='cuda:0', dtype=torch.float64)
tensor([ -9.3789, -20.0638, -15.8468, -18.6489, -26.4045], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0196, device='cuda:0', dtype=torch.float64)
tensor([ -9.3679, -20.2820, -15.8374, -18.8172, -26.5574], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0490, device='cuda:0', dtype=torch.float64)
tensor([ -9.3541, -20.4189, -15.7982, -18.9319, -26.6181], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9538, device='cuda:0', dtype=torch.float64)
tensor([ -9.3486, -20.5942, -15.8340, -19.0627, -26.7242], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9018, device='cuda:0', dtype=torch.float64)
tensor([ -9.3756, -20.7227, -15.8886, -19.1326, -26.8248], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8725, device='cuda:0', dtype=torch.float64)
tensor([ -9.3974, -20.7778, -15.9947, -19.1652, -26.8512], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8498, device='cuda:0', dtype=torch.float64)
tensor([ -9.4470, -20.8950, -16.1373, -19.1862, -26.8673], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9035, device='cuda:0', dtype=torch.float64)
tensor([ -9.4885, -20.9118, -16.1917, -19.1399, -26.8390], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8651, device='cuda:0', dtype=torch.float64)
tensor([ -9.5412, -20.9375, -16.2769, -19.0734, -26.8160], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9012, device='cuda:0', dtype=torch.float64)
tensor([ -9.5322, -20.8567, -16.2539, -18.9320, -26.7028], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8368, device='cuda:0', dtype=torch.float64)
tensor([ -9.5242, -20.7658, -16.2545, -18.7958, -26.5980], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0256, device='cuda:0', dtype=torch.float64)
tensor([ -9.5112, -20.5877, -16.2087, -18.5982, -26.4107], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9548, device='cuda:0', dtype=torch.float64)
tensor([ -9.5056, -20.4411, -16.1504, -18.4851, -26.2507], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1608, device='cuda:0', dtype=torch.float64)
tensor([ -9.5381, -20.1402, -16.1040, -18.2623, -26.0298], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9456, device='cuda:0', dtype=torch.float64)
tensor([ -9.5282, -19.9287, -16.0066, -18.1043, -25.8144], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1123, device='cuda:0', dtype=torch.float64)
tensor([ -9.5774, -19.7813, -16.0415, -17.9649, -25.6818], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9169, device='cuda:0', dtype=torch.float64)
tensor([ -9.6278, -19.5689, -16.1351, -17.7249, -25.4307], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8259, device='cuda:0', dtype=torch.float64)
tensor([ -9.6811, -19.4392, -16.1977, -17.5284, -25.2198], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9237, device='cuda:0', dtype=torch.float64)
tensor([ -9.7106, -19.2571, -16.1991, -17.3647, -24.9407], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8292, device='cuda:0', dtype=torch.float64)
tensor([ -9.7453, -19.1356, -16.1976, -17.2860, -24.7299], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0329, device='cuda:0', dtype=torch.float64)
tensor([ -9.7521, -19.0394, -16.1581, -17.2109, -24.5410], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8176, device='cuda:0', dtype=torch.float64)
tensor([ -9.7570, -18.9746, -16.1637, -17.1693, -24.3721], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0278, device='cuda:0', dtype=torch.float64)
tensor([ -9.7534, -18.9671, -16.1222, -17.1492, -24.2501], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8254, device='cuda:0', dtype=torch.float64)
tensor([ -9.7409, -18.9973, -16.1249, -17.1648, -24.1586], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8630, device='cuda:0', dtype=torch.float64)
tensor([ -9.7532, -19.1023, -16.1621, -17.1530, -24.1092], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7532, device='cuda:0', dtype=torch.float64)
tensor([ -9.7432, -19.2370, -16.2367, -17.1683, -24.1050], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8279, device='cuda:0', dtype=torch.float64)
tensor([ -9.7325, -19.2690, -16.3713, -17.1714, -24.0336], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0583, device='cuda:0', dtype=torch.float64)
tensor([ -9.6981, -19.1973, -16.4600, -17.1568, -23.8888], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0049, device='cuda:0', dtype=torch.float64)
tensor([ -9.6765, -19.1146, -16.5342, -17.1410, -23.7740], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7709, device='cuda:0', dtype=torch.float64)
tensor([ -9.6593, -19.0984, -16.5921, -17.1422, -23.7259], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9582, device='cuda:0', dtype=torch.float64)
tensor([ -9.6074, -19.1112, -16.6043, -17.1777, -23.6982], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8690, device='cuda:0', dtype=torch.float64)
tensor([ -9.5634, -18.9903, -16.6129, -17.1594, -23.5771], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9997, device='cuda:0', dtype=torch.float64)
tensor([ -9.5243, -18.7993, -16.6677, -17.0556, -23.4145], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0539, device='cuda:0', dtype=torch.float64)
tensor([ -9.4866, -18.4447, -16.8245, -16.8881, -23.1351], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8096, device='cuda:0', dtype=torch.float64)
tensor([ -9.4835, -18.1176, -16.9677, -16.7049, -22.8638], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0797, device='cuda:0', dtype=torch.float64)
tensor([ -9.4507, -17.7061, -17.1196, -16.4770, -22.4819], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8274, device='cuda:0', dtype=torch.float64)
tensor([ -9.4439, -17.3404, -17.2735, -16.2473, -22.1712], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0593, device='cuda:0', dtype=torch.float64)
tensor([ -9.4341, -16.9103, -17.4270, -16.0050, -21.7841], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9351, device='cuda:0', dtype=torch.float64)
tensor([ -9.3923, -16.5681, -17.5869, -15.7820, -21.4076], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8038, device='cuda:0', dtype=torch.float64)
tensor([ -9.3500, -16.2947, -17.7260, -15.5682, -21.0620], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8101, device='cuda:0', dtype=torch.float64)
tensor([ -9.3427, -16.0596, -17.9624, -15.4081, -20.7374], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7253, device='cuda:0', dtype=torch.float64)
tensor([ -9.3556, -15.8594, -18.2559, -15.2707, -20.4377], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9729, device='cuda:0', dtype=torch.float64)
tensor([ -9.3862, -15.7023, -18.5463, -15.1723, -20.1882], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7828, device='cuda:0', dtype=torch.float64)
tensor([ -9.3771, -15.6218, -18.7462, -15.0927, -19.9962], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7365, device='cuda:0', dtype=torch.float64)
tensor([ -9.3826, -15.6088, -18.9089, -15.0517, -19.8644], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8031, device='cuda:0', dtype=torch.float64)
tensor([ -9.4447, -15.6389, -19.1050, -15.0385, -19.7694], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8465, device='cuda:0', dtype=torch.float64)
tensor([ -9.5038, -15.8189, -19.3236, -15.1530, -19.8425], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7219, device='cuda:0', dtype=torch.float64)
tensor([ -9.5392, -15.9292, -19.5333, -15.2027, -19.8275], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9119, device='cuda:0', dtype=torch.float64)
tensor([ -9.6267, -15.9948, -19.7723, -15.2588, -19.7947], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7602, device='cuda:0', dtype=torch.float64)
tensor([ -9.7187, -16.0043, -19.9157, -15.2794, -19.7112], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9020, device='cuda:0', dtype=torch.float64)
tensor([ -9.7936, -15.9983, -20.1410, -15.2922, -19.5954], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8367, device='cuda:0', dtype=torch.float64)
tensor([ -9.8159, -15.9584, -20.3506, -15.3086, -19.4824], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8653, device='cuda:0', dtype=torch.float64)
tensor([ -9.8514, -15.8397, -20.5590, -15.2671, -19.2946], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8819, device='cuda:0', dtype=torch.float64)
tensor([ -9.8310, -15.7010, -20.6917, -15.2203, -19.1042], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6841, device='cuda:0', dtype=torch.float64)
tensor([ -9.7998, -15.5709, -20.7853, -15.1072, -18.9359], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8560, device='cuda:0', dtype=torch.float64)
tensor([ -9.7761, -15.5545, -20.8675, -15.0141, -18.8597], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9184, device='cuda:0', dtype=torch.float64)
tensor([ -9.7543, -15.4603, -21.0438, -14.8911, -18.7005], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7257, device='cuda:0', dtype=torch.float64)
tensor([ -9.7414, -15.4018, -21.2164, -14.7607, -18.5505], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8498, device='cuda:0', dtype=torch.float64)
tensor([ -9.7163, -15.3474, -21.3455, -14.7108, -18.3936], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8864, device='cuda:0', dtype=torch.float64)
tensor([ -9.6650, -15.2493, -21.4229, -14.6411, -18.2036], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0526, device='cuda:0', dtype=torch.float64)
tensor([ -9.5893, -15.1348, -21.5305, -14.6038, -18.0646], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9899, device='cuda:0', dtype=torch.float64)
tensor([ -9.5543, -15.1893, -21.6271, -14.6053, -18.0206], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8710, device='cuda:0', dtype=torch.float64)
tensor([ -9.5668, -15.2139, -21.7386, -14.5763, -17.9433], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6289, device='cuda:0', dtype=torch.float64)
tensor([ -9.6082, -15.2960, -21.8701, -14.6435, -17.9312], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7712, device='cuda:0', dtype=torch.float64)
tensor([ -9.6328, -15.3913, -22.0013, -14.6992, -17.9123], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6768, device='cuda:0', dtype=torch.float64)
tensor([ -9.6405, -15.4626, -22.1343, -14.8073, -17.8718], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9499, device='cuda:0', dtype=torch.float64)
tensor([ -9.6693, -15.4459, -22.2364, -14.8571, -17.7474], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8429, device='cuda:0', dtype=torch.float64)
tensor([ -9.7157, -15.4231, -22.3508, -14.8729, -17.6481], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9142, device='cuda:0', dtype=torch.float64)
tensor([ -9.7592, -15.3886, -22.4474, -14.9484, -17.6027], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6371, device='cuda:0', dtype=torch.float64)
tensor([ -9.8007, -15.3296, -22.5639, -15.0356, -17.5781], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8638, device='cuda:0', dtype=torch.float64)
tensor([ -9.8334, -15.3188, -22.6306, -15.1614, -17.5969], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8654, device='cuda:0', dtype=torch.float64)
tensor([ -9.8700, -15.4987, -22.7315, -15.3746, -17.7350], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7809, device='cuda:0', dtype=torch.float64)
tensor([ -9.8543, -15.6525, -22.7369, -15.6038, -17.8797], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7095, device='cuda:0', dtype=torch.float64)
tensor([ -9.8463, -15.8218, -22.7493, -15.8697, -18.1068], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7790, device='cuda:0', dtype=torch.float64)
tensor([ -9.8709, -15.9311, -22.8727, -16.1192, -18.3129], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7178, device='cuda:0', dtype=torch.float64)
tensor([ -9.8861, -16.0220, -22.9616, -16.3765, -18.5153], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6603, device='cuda:0', dtype=torch.float64)
tensor([ -9.9187, -16.0836, -23.1466, -16.5781, -18.6448], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6713, device='cuda:0', dtype=torch.float64)
tensor([ -9.9773, -16.0758, -23.3220, -16.7412, -18.7082], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6868, device='cuda:0', dtype=torch.float64)
tensor([-10.0383, -16.0053, -23.5142, -16.8650, -18.7086], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7606, device='cuda:0', dtype=torch.float64)
tensor([-10.1141, -15.9097, -23.7101, -16.9346, -18.6879], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8245, device='cuda:0', dtype=torch.float64)
tensor([-10.1921, -15.8709, -23.9090, -16.9734, -18.7324], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7498, device='cuda:0', dtype=torch.float64)
tensor([-10.2239, -15.8380, -24.0504, -17.0484, -18.7984], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9151, device='cuda:0', dtype=torch.float64)
tensor([-10.2698, -15.6676, -24.2402, -17.0917, -18.7599], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6852, device='cuda:0', dtype=torch.float64)
tensor([-10.2981, -15.4812, -24.3745, -17.1070, -18.6838], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7216, device='cuda:0', dtype=torch.float64)
tensor([-10.2971, -15.3320, -24.4715, -17.1838, -18.5832], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6851, device='cuda:0', dtype=torch.float64)
tensor([-10.2932, -15.0659, -24.4882, -17.1824, -18.3624], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7373, device='cuda:0', dtype=torch.float64)
tensor([-10.2822, -14.7446, -24.4392, -17.1095, -18.1093], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8454, device='cuda:0', dtype=torch.float64)
tensor([-10.2710, -14.4458, -24.4197, -16.9821, -17.8245], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8067, device='cuda:0', dtype=torch.float64)
tensor([-10.2666, -14.2267, -24.5544, -16.8699, -17.5407], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7023, device='cuda:0', dtype=torch.float64)
tensor([-10.2501, -14.0900, -24.6590, -16.8319, -17.3307], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7113, device='cuda:0', dtype=torch.float64)
tensor([-10.2212, -14.0735, -24.7259, -16.8019, -17.2031], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6928, device='cuda:0', dtype=torch.float64)
tensor([-10.1973, -14.0424, -24.7228, -16.7941, -17.1219], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9564, device='cuda:0', dtype=torch.float64)
tensor([-10.1667, -13.9454, -24.7276, -16.7649, -16.9580], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7160, device='cuda:0', dtype=torch.float64)
tensor([-10.1193, -13.8792, -24.7499, -16.6818, -16.6545], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7515, device='cuda:0', dtype=torch.float64)
tensor([-10.0672, -13.8490, -24.7418, -16.5692, -16.2661], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5881, device='cuda:0', dtype=torch.float64)
tensor([-10.0031, -13.8272, -24.7509, -16.5022, -15.9084], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6652, device='cuda:0', dtype=torch.float64)
tensor([ -9.9457, -13.8263, -24.8450, -16.4294, -15.5387], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7784, device='cuda:0', dtype=torch.float64)
tensor([ -9.8624, -13.8177, -24.9181, -16.4057, -15.2199], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7144, device='cuda:0', dtype=torch.float64)
tensor([ -9.8019, -13.8174, -24.9986, -16.4019, -14.9359], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5755, device='cuda:0', dtype=torch.float64)
tensor([ -9.7493, -13.8566, -25.0445, -16.3784, -14.6780], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6448, device='cuda:0', dtype=torch.float64)
tensor([ -9.6970, -13.8813, -25.0986, -16.3170, -14.4118], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6419, device='cuda:0', dtype=torch.float64)
tensor([ -9.6850, -13.8417, -25.1687, -16.2455, -14.1729], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6862, device='cuda:0', dtype=torch.float64)
tensor([ -9.6350, -13.7972, -25.1854, -16.1484, -13.9670], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7364, device='cuda:0', dtype=torch.float64)
tensor([ -9.5720, -13.7618, -25.2289, -16.0352, -13.8136], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7354, device='cuda:0', dtype=torch.float64)
tensor([ -9.5075, -13.8621, -25.2753, -15.9473, -13.6345], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6650, device='cuda:0', dtype=torch.float64)
tensor([ -9.4322, -13.9981, -25.3246, -15.8159, -13.4604], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6765, device='cuda:0', dtype=torch.float64)
tensor([ -9.3791, -14.0878, -25.3682, -15.6742, -13.2915], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6613, device='cuda:0', dtype=torch.float64)
tensor([ -9.3205, -14.1712, -25.3100, -15.5367, -13.1958], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6101, device='cuda:0', dtype=torch.float64)
tensor([ -9.2917, -14.2437, -25.2767, -15.4006, -13.1769], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8107, device='cuda:0', dtype=torch.float64)
tensor([ -9.2967, -14.3643, -25.2780, -15.2527, -13.2036], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6577, device='cuda:0', dtype=torch.float64)
tensor([ -9.3097, -14.5028, -25.2544, -15.1110, -13.2649], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7107, device='cuda:0', dtype=torch.float64)
tensor([ -9.3415, -14.6135, -25.2997, -15.0367, -13.4249], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6892, device='cuda:0', dtype=torch.float64)
tensor([ -9.3481, -14.6729, -25.3242, -14.9056, -13.4947], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5675, device='cuda:0', dtype=torch.float64)
tensor([ -9.3564, -14.7186, -25.3256, -14.7789, -13.5303], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6001, device='cuda:0', dtype=torch.float64)
tensor([ -9.3666, -14.7117, -25.2531, -14.6330, -13.5276], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5826, device='cuda:0', dtype=torch.float64)
tensor([ -9.3612, -14.7438, -25.1475, -14.4555, -13.5485], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6310, device='cuda:0', dtype=torch.float64)
tensor([ -9.3436, -14.7936, -24.9998, -14.2908, -13.5615], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5858, device='cuda:0', dtype=torch.float64)
tensor([ -9.3424, -14.8003, -24.8561, -14.1186, -13.5427], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5760, device='cuda:0', dtype=torch.float64)
tensor([ -9.3224, -14.7801, -24.7053, -13.9969, -13.5362], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6342, device='cuda:0', dtype=torch.float64)
tensor([ -9.2804, -14.8011, -24.5678, -13.9010, -13.5634], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5944, device='cuda:0', dtype=torch.float64)
tensor([ -9.2385, -14.8381, -24.3911, -13.7727, -13.6469], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7538, device='cuda:0', dtype=torch.float64)
tensor([ -9.1456, -14.8699, -24.1602, -13.6171, -13.6515], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8337, device='cuda:0', dtype=torch.float64)
tensor([ -9.0507, -14.9643, -23.8775, -13.4701, -13.5868], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7289, device='cuda:0', dtype=torch.float64)
tensor([ -8.9616, -15.1407, -23.6354, -13.3618, -13.5670], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5961, device='cuda:0', dtype=torch.float64)
tensor([ -8.8800, -15.2769, -23.3901, -13.2422, -13.5752], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6216, device='cuda:0', dtype=torch.float64)
tensor([ -8.8004, -15.3494, -23.1684, -13.1664, -13.6184], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5669, device='cuda:0', dtype=torch.float64)
tensor([ -8.7355, -15.4611, -23.0171, -13.1438, -13.6701], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5245, device='cuda:0', dtype=torch.float64)
tensor([ -8.6868, -15.5783, -22.8736, -13.1692, -13.6956], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6000, device='cuda:0', dtype=torch.float64)
tensor([ -8.6502, -15.7211, -22.7655, -13.1603, -13.6703], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6406, device='cuda:0', dtype=torch.float64)
tensor([ -8.6176, -15.8222, -22.6846, -13.1556, -13.6333], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5759, device='cuda:0', dtype=torch.float64)
tensor([ -8.5800, -15.9085, -22.6105, -13.1516, -13.6419], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6008, device='cuda:0', dtype=torch.float64)
tensor([ -8.5224, -15.9207, -22.5234, -13.1220, -13.5821], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5812, device='cuda:0', dtype=torch.float64)
tensor([ -8.4741, -16.0499, -22.5074, -13.1510, -13.6112], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5297, device='cuda:0', dtype=torch.float64)
tensor([ -8.4306, -16.2008, -22.5463, -13.2215, -13.6268], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6179, device='cuda:0', dtype=torch.float64)
tensor([ -8.4154, -16.3037, -22.6034, -13.3398, -13.6387], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5465, device='cuda:0', dtype=torch.float64)
tensor([ -8.3776, -16.2893, -22.5513, -13.4049, -13.5938], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5499, device='cuda:0', dtype=torch.float64)
tensor([ -8.3378, -16.2931, -22.5479, -13.4838, -13.5751], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6008, device='cuda:0', dtype=torch.float64)
tensor([ -8.2981, -16.2543, -22.5424, -13.5376, -13.5236], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6156, device='cuda:0', dtype=torch.float64)
tensor([ -8.2549, -16.1824, -22.5393, -13.5417, -13.4272], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6642, device='cuda:0', dtype=torch.float64)
tensor([ -8.1776, -16.1313, -22.5194, -13.5269, -13.3541], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5451, device='cuda:0', dtype=torch.float64)
tensor([ -8.1185, -16.1272, -22.5383, -13.5758, -13.2751], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5399, device='cuda:0', dtype=torch.float64)
tensor([ -8.0371, -16.0545, -22.4899, -13.6181, -13.1987], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4880, device='cuda:0', dtype=torch.float64)
tensor([ -7.9421, -16.0052, -22.4382, -13.7102, -13.1375], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6022, device='cuda:0', dtype=torch.float64)
tensor([ -7.8539, -15.9465, -22.4068, -13.7793, -13.0956], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6717, device='cuda:0', dtype=torch.float64)
tensor([ -7.7843, -15.8691, -22.2853, -13.7974, -13.0326], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5064, device='cuda:0', dtype=torch.float64)
tensor([ -7.7457, -15.8173, -22.1933, -13.8393, -12.9857], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4853, device='cuda:0', dtype=torch.float64)
tensor([ -7.6895, -15.7611, -22.0405, -13.8733, -12.9242], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4301, device='cuda:0', dtype=torch.float64)
tensor([ -7.6289, -15.7389, -21.8890, -13.9367, -12.8896], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5082, device='cuda:0', dtype=torch.float64)
tensor([ -7.5909, -15.7197, -21.8155, -14.0442, -12.8548], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4308, device='cuda:0', dtype=torch.float64)
tensor([ -7.5464, -15.7023, -21.7018, -14.1569, -12.8080], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5135, device='cuda:0', dtype=torch.float64)
tensor([ -7.5208, -15.6909, -21.6335, -14.2473, -12.7767], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5499, device='cuda:0', dtype=torch.float64)
tensor([ -7.4915, -15.6594, -21.5841, -14.3615, -12.7664], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5147, device='cuda:0', dtype=torch.float64)
tensor([ -7.4556, -15.6350, -21.5438, -14.4762, -12.7503], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4804, device='cuda:0', dtype=torch.float64)
tensor([ -7.4394, -15.6432, -21.5655, -14.5812, -12.7739], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5153, device='cuda:0', dtype=torch.float64)
tensor([ -7.4292, -15.6443, -21.6256, -14.6805, -12.8142], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4669, device='cuda:0', dtype=torch.float64)
tensor([ -7.4167, -15.6165, -21.6731, -14.7363, -12.8021], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4434, device='cuda:0', dtype=torch.float64)
tensor([ -7.4126, -15.5397, -21.6917, -14.7796, -12.7763], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5182, device='cuda:0', dtype=torch.float64)
tensor([ -7.4147, -15.4539, -21.7029, -14.8274, -12.7750], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4985, device='cuda:0', dtype=torch.float64)
tensor([ -7.4286, -15.3314, -21.6761, -14.8297, -12.7363], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6049, device='cuda:0', dtype=torch.float64)
tensor([ -7.4429, -15.2350, -21.6255, -14.8591, -12.7093], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4729, device='cuda:0', dtype=torch.float64)
tensor([ -7.4370, -15.0979, -21.5772, -14.8801, -12.6865], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5035, device='cuda:0', dtype=torch.float64)
tensor([ -7.4201, -14.9332, -21.4818, -14.9058, -12.6290], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6555, device='cuda:0', dtype=torch.float64)
tensor([ -7.4160, -14.8591, -21.4827, -14.9549, -12.6274], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4608, device='cuda:0', dtype=torch.float64)
tensor([ -7.4128, -14.7809, -21.4974, -14.9888, -12.6182], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4513, device='cuda:0', dtype=torch.float64)
tensor([ -7.4235, -14.7326, -21.5702, -15.0509, -12.6162], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4677, device='cuda:0', dtype=torch.float64)
tensor([ -7.4450, -14.6978, -21.6443, -15.1566, -12.6596], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4827, device='cuda:0', dtype=torch.float64)
tensor([ -7.4619, -14.6234, -21.6902, -15.2439, -12.6775], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4467, device='cuda:0', dtype=torch.float64)
tensor([ -7.4986, -14.5788, -21.7661, -15.3453, -12.7279], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4383, device='cuda:0', dtype=torch.float64)
tensor([ -7.5384, -14.5406, -21.8481, -15.4714, -12.7663], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4459, device='cuda:0', dtype=torch.float64)
tensor([ -7.5655, -14.5458, -21.9623, -15.6129, -12.8407], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5310, device='cuda:0', dtype=torch.float64)
tensor([ -7.5833, -14.5386, -22.0032, -15.7453, -12.9044], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4170, device='cuda:0', dtype=torch.float64)
tensor([ -7.6099, -14.5199, -22.0797, -15.8674, -12.9527], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5308, device='cuda:0', dtype=torch.float64)
tensor([ -7.6321, -14.4506, -22.1805, -16.0366, -13.0171], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4456, device='cuda:0', dtype=torch.float64)
tensor([ -7.6503, -14.3078, -22.2205, -16.1609, -13.0695], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4875, device='cuda:0', dtype=torch.float64)
tensor([ -7.6490, -14.1952, -22.2548, -16.2497, -13.0693], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4760, device='cuda:0', dtype=torch.float64)
tensor([ -7.6579, -14.1225, -22.3103, -16.3751, -13.1224], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4474, device='cuda:0', dtype=torch.float64)
tensor([ -7.6638, -14.1144, -22.3981, -16.4625, -13.1800], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3524, device='cuda:0', dtype=torch.float64)
tensor([ -7.6756, -14.0884, -22.4703, -16.5360, -13.2206], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4168, device='cuda:0', dtype=torch.float64)
tensor([ -7.6827, -14.0796, -22.5010, -16.5679, -13.2979], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4103, device='cuda:0', dtype=torch.float64)
tensor([ -7.6684, -14.0207, -22.4618, -16.5584, -13.3363], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5345, device='cuda:0', dtype=torch.float64)
tensor([ -7.6484, -13.8839, -22.3764, -16.6123, -13.3722], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4861, device='cuda:0', dtype=torch.float64)
tensor([ -7.6242, -13.8082, -22.3197, -16.7137, -13.4636], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3960, device='cuda:0', dtype=torch.float64)
tensor([ -7.6002, -13.7235, -22.2394, -16.7709, -13.4763], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4396, device='cuda:0', dtype=torch.float64)
tensor([ -7.5745, -13.6411, -22.1716, -16.8536, -13.5144], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4167, device='cuda:0', dtype=torch.float64)
tensor([ -7.5437, -13.6398, -22.1147, -16.9198, -13.5838], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3975, device='cuda:0', dtype=torch.float64)
tensor([ -7.5234, -13.6479, -22.0783, -16.9992, -13.6373], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4592, device='cuda:0', dtype=torch.float64)
tensor([ -7.5013, -13.6610, -22.0375, -17.0767, -13.6917], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4769, device='cuda:0', dtype=torch.float64)
tensor([ -7.4862, -13.6415, -21.9966, -17.1229, -13.7174], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4649, device='cuda:0', dtype=torch.float64)
tensor([ -7.4779, -13.6513, -22.0071, -17.1943, -13.7689], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4040, device='cuda:0', dtype=torch.float64)
tensor([ -7.4652, -13.6848, -22.0067, -17.2303, -13.8047], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4408, device='cuda:0', dtype=torch.float64)
tensor([ -7.4417, -13.6690, -22.0159, -17.2192, -13.7808], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4501, device='cuda:0', dtype=torch.float64)
tensor([ -7.4222, -13.6000, -22.0454, -17.2153, -13.7375], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3366, device='cuda:0', dtype=torch.float64)
tensor([ -7.3985, -13.4766, -22.0538, -17.2173, -13.6329], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4495, device='cuda:0', dtype=torch.float64)
tensor([ -7.3576, -13.2936, -22.0362, -17.1474, -13.4698], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3697, device='cuda:0', dtype=torch.float64)
tensor([ -7.3128, -13.1472, -22.0106, -17.1178, -13.3308], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3143, device='cuda:0', dtype=torch.float64)
tensor([ -7.2631, -13.0279, -21.9931, -17.0653, -13.2144], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3796, device='cuda:0', dtype=torch.float64)
tensor([ -7.2216, -12.8923, -21.9395, -17.0101, -13.0910], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4000, device='cuda:0', dtype=torch.float64)
tensor([ -7.1781, -12.7731, -21.9010, -16.9640, -12.9861], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4677, device='cuda:0', dtype=torch.float64)
tensor([ -7.1409, -12.6966, -21.8675, -16.9100, -12.8437], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3301, device='cuda:0', dtype=torch.float64)
tensor([ -7.1060, -12.6415, -21.7909, -16.8410, -12.7108], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3639, device='cuda:0', dtype=torch.float64)
tensor([ -7.0788, -12.5922, -21.7454, -16.8223, -12.5789], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3524, device='cuda:0', dtype=torch.float64)
tensor([ -7.0585, -12.5247, -21.7171, -16.8001, -12.4632], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3521, device='cuda:0', dtype=torch.float64)
tensor([ -7.0494, -12.4086, -21.6738, -16.7798, -12.3388], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3573, device='cuda:0', dtype=torch.float64)
tensor([ -7.0454, -12.3358, -21.6778, -16.7826, -12.2399], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3372, device='cuda:0', dtype=torch.float64)
tensor([ -7.0460, -12.2514, -21.6924, -16.8063, -12.1462], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4309, device='cuda:0', dtype=torch.float64)
tensor([ -7.0509, -12.1840, -21.7557, -16.8329, -12.0718], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3770, device='cuda:0', dtype=torch.float64)
tensor([ -7.0598, -12.1355, -21.7765, -16.8500, -12.0458], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3616, device='cuda:0', dtype=torch.float64)
tensor([ -7.0784, -12.0879, -21.7880, -16.8641, -11.9742], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3863, device='cuda:0', dtype=torch.float64)
tensor([ -7.0933, -12.0404, -21.7616, -16.8343, -11.9036], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3120, device='cuda:0', dtype=torch.float64)
tensor([ -7.1156, -12.0180, -21.7346, -16.8153, -11.8569], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3592, device='cuda:0', dtype=torch.float64)
tensor([ -7.1230, -11.9478, -21.6915, -16.7688, -11.7863], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3261, device='cuda:0', dtype=torch.float64)
tensor([ -7.1255, -11.8670, -21.5932, -16.6887, -11.7011], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3022, device='cuda:0', dtype=torch.float64)
tensor([ -7.1291, -11.7910, -21.4957, -16.6319, -11.6466], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2972, device='cuda:0', dtype=torch.float64)
tensor([ -7.1375, -11.7391, -21.4022, -16.5758, -11.6077], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2756, device='cuda:0', dtype=torch.float64)
tensor([ -7.1333, -11.6892, -21.2873, -16.4922, -11.5712], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3659, device='cuda:0', dtype=torch.float64)
tensor([ -7.1166, -11.6335, -21.1295, -16.4077, -11.5481], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4214, device='cuda:0', dtype=torch.float64)
tensor([ -7.1037, -11.5863, -21.0057, -16.3349, -11.5530], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3210, device='cuda:0', dtype=torch.float64)
tensor([ -7.0867, -11.5480, -20.8876, -16.2775, -11.5406], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3888, device='cuda:0', dtype=torch.float64)
tensor([ -7.0692, -11.5289, -20.8259, -16.2606, -11.5071], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3391, device='cuda:0', dtype=torch.float64)
tensor([ -7.0544, -11.5083, -20.8225, -16.2652, -11.4945], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3422, device='cuda:0', dtype=torch.float64)
tensor([ -7.0406, -11.4897, -20.8030, -16.2512, -11.5216], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3212, device='cuda:0', dtype=torch.float64)
tensor([ -7.0310, -11.4772, -20.8332, -16.2704, -11.5819], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2754, device='cuda:0', dtype=torch.float64)
tensor([ -7.0235, -11.4533, -20.8639, -16.2705, -11.6380], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2460, device='cuda:0', dtype=torch.float64)
tensor([ -7.0148, -11.4576, -20.8929, -16.2745, -11.7187], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2818, device='cuda:0', dtype=torch.float64)
tensor([ -7.0087, -11.4681, -20.9383, -16.3034, -11.7991], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3434, device='cuda:0', dtype=torch.float64)
tensor([ -7.0032, -11.4596, -20.9429, -16.2942, -11.8623], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3346, device='cuda:0', dtype=torch.float64)
tensor([ -6.9867, -11.4154, -20.9126, -16.2841, -11.9155], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3463, device='cuda:0', dtype=torch.float64)
tensor([ -6.9664, -11.3813, -20.8595, -16.2379, -11.9737], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3281, device='cuda:0', dtype=torch.float64)
tensor([ -6.9433, -11.3442, -20.7662, -16.1242, -12.0231], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2986, device='cuda:0', dtype=torch.float64)
tensor([ -6.9218, -11.3176, -20.6864, -16.0311, -12.0369], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2946, device='cuda:0', dtype=torch.float64)
tensor([ -6.9009, -11.2917, -20.5927, -15.9583, -12.0614], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2912, device='cuda:0', dtype=torch.float64)
tensor([ -6.8750, -11.2543, -20.4721, -15.8563, -12.0269], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3097, device='cuda:0', dtype=torch.float64)
tensor([ -6.8440, -11.1923, -20.3685, -15.7573, -11.9599], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2805, device='cuda:0', dtype=torch.float64)
tensor([ -6.8201, -11.1499, -20.2946, -15.7092, -11.9142], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2555, device='cuda:0', dtype=torch.float64)
tensor([ -6.8050, -11.1225, -20.2735, -15.6642, -11.8739], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2640, device='cuda:0', dtype=torch.float64)
tensor([ -6.7968, -11.0862, -20.2355, -15.6150, -11.8514], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3124, device='cuda:0', dtype=torch.float64)
tensor([ -6.7910, -11.0611, -20.2042, -15.5442, -11.8073], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2873, device='cuda:0', dtype=torch.float64)
tensor([ -6.7822, -11.0428, -20.1737, -15.4667, -11.7664], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2809, device='cuda:0', dtype=torch.float64)
tensor([ -6.7765, -11.0294, -20.1346, -15.4214, -11.6953], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2995, device='cuda:0', dtype=torch.float64)
tensor([ -6.7694, -10.9989, -20.0675, -15.3914, -11.6300], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2690, device='cuda:0', dtype=torch.float64)
tensor([ -6.7638, -10.9667, -19.9774, -15.3698, -11.5720], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2459, device='cuda:0', dtype=torch.float64)
tensor([ -6.7637, -10.9255, -19.8810, -15.3384, -11.5075], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2553, device='cuda:0', dtype=torch.float64)
tensor([ -6.7638, -10.8960, -19.8065, -15.3045, -11.4441], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2232, device='cuda:0', dtype=torch.float64)
tensor([ -6.7643, -10.8832, -19.7445, -15.2734, -11.4155], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2786, device='cuda:0', dtype=torch.float64)
tensor([ -6.7603, -10.8655, -19.6851, -15.2496, -11.3820], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2724, device='cuda:0', dtype=torch.float64)
tensor([ -6.7608, -10.8670, -19.6350, -15.2376, -11.3729], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2681, device='cuda:0', dtype=torch.float64)
tensor([ -6.7518, -10.8315, -19.5528, -15.2215, -11.3598], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2541, device='cuda:0', dtype=torch.float64)
tensor([ -6.7402, -10.8007, -19.4498, -15.2083, -11.3655], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2661, device='cuda:0', dtype=torch.float64)
tensor([ -6.7339, -10.7867, -19.3629, -15.2075, -11.4019], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2173, device='cuda:0', dtype=torch.float64)
tensor([ -6.7270, -10.7775, -19.2733, -15.1897, -11.4349], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2000, device='cuda:0', dtype=torch.float64)
tensor([ -6.7232, -10.7775, -19.2068, -15.1916, -11.4702], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2416, device='cuda:0', dtype=torch.float64)
tensor([ -6.7163, -10.7544, -19.1321, -15.1951, -11.4912], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2383, device='cuda:0', dtype=torch.float64)
tensor([ -6.7170, -10.7234, -19.0496, -15.2149, -11.5006], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2243, device='cuda:0', dtype=torch.float64)
tensor([ -6.7200, -10.7112, -18.9831, -15.2361, -11.5187], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2797, device='cuda:0', dtype=torch.float64)
tensor([ -6.7197, -10.6837, -18.9102, -15.2433, -11.5436], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2090, device='cuda:0', dtype=torch.float64)
tensor([ -6.7260, -10.6616, -18.8449, -15.2541, -11.5587], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2471, device='cuda:0', dtype=torch.float64)
tensor([ -6.7268, -10.6582, -18.8030, -15.2692, -11.5682], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2063, device='cuda:0', dtype=torch.float64)
tensor([ -6.7226, -10.6571, -18.7627, -15.2733, -11.5703], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2177, device='cuda:0', dtype=torch.float64)
tensor([ -6.7094, -10.6652, -18.7045, -15.2436, -11.5562], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2276, device='cuda:0', dtype=torch.float64)
tensor([ -6.6963, -10.6859, -18.6530, -15.2108, -11.5478], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2007, device='cuda:0', dtype=torch.float64)
tensor([ -6.6835, -10.7101, -18.6210, -15.1771, -11.5592], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1674, device='cuda:0', dtype=torch.float64)
tensor([ -6.6693, -10.7120, -18.5879, -15.1302, -11.5552], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2154, device='cuda:0', dtype=torch.float64)
tensor([ -6.6547, -10.7215, -18.5539, -15.0842, -11.5552], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2124, device='cuda:0', dtype=torch.float64)
tensor([ -6.6447, -10.7348, -18.5387, -15.0394, -11.5871], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2147, device='cuda:0', dtype=torch.float64)
tensor([ -6.6272, -10.7292, -18.5062, -14.9606, -11.5626], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2442, device='cuda:0', dtype=torch.float64)
tensor([ -6.6127, -10.7233, -18.4594, -14.8848, -11.5568], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1961, device='cuda:0', dtype=torch.float64)
tensor([ -6.5988, -10.6893, -18.4091, -14.8247, -11.5614], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2118, device='cuda:0', dtype=torch.float64)
tensor([ -6.5822, -10.6256, -18.3260, -14.7538, -11.5314], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2105, device='cuda:0', dtype=torch.float64)
tensor([ -6.5664, -10.5730, -18.2548, -14.7035, -11.4942], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1989, device='cuda:0', dtype=torch.float64)
tensor([ -6.5469, -10.5324, -18.1876, -14.6495, -11.4473], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2044, device='cuda:0', dtype=torch.float64)
tensor([ -6.5287, -10.5141, -18.1503, -14.6108, -11.4090], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1806, device='cuda:0', dtype=torch.float64)
tensor([ -6.5095, -10.4944, -18.1095, -14.5924, -11.3655], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1800, device='cuda:0', dtype=torch.float64)
tensor([ -6.4918, -10.4690, -18.0735, -14.5538, -11.2863], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1993, device='cuda:0', dtype=torch.float64)
tensor([ -6.4709, -10.4451, -18.0160, -14.5129, -11.2023], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2023, device='cuda:0', dtype=torch.float64)
tensor([ -6.4512, -10.4115, -17.9298, -14.4650, -11.1074], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1950, device='cuda:0', dtype=torch.float64)
tensor([ -6.4266, -10.3824, -17.8549, -14.3932, -11.0023], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2195, device='cuda:0', dtype=torch.float64)
tensor([ -6.4046, -10.3536, -17.8028, -14.3347, -10.8821], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1925, device='cuda:0', dtype=torch.float64)
tensor([ -6.3773, -10.3328, -17.7448, -14.2580, -10.7703], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1893, device='cuda:0', dtype=torch.float64)
tensor([ -6.3577, -10.3198, -17.7099, -14.2045, -10.6716], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1798, device='cuda:0', dtype=torch.float64)
tensor([ -6.3347, -10.3009, -17.6759, -14.1348, -10.5736], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1803, device='cuda:0', dtype=torch.float64)
tensor([ -6.3148, -10.2753, -17.6504, -14.0686, -10.4799], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1728, device='cuda:0', dtype=torch.float64)
tensor([ -6.2951, -10.2483, -17.6173, -14.0199, -10.3828], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1758, device='cuda:0', dtype=torch.float64)
tensor([ -6.2778, -10.2267, -17.5825, -13.9857, -10.2843], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1714, device='cuda:0', dtype=torch.float64)
tensor([ -6.2628, -10.2034, -17.5495, -13.9686, -10.2078], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1655, device='cuda:0', dtype=torch.float64)
tensor([ -6.2499, -10.1784, -17.5139, -13.9501, -10.1349], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1676, device='cuda:0', dtype=torch.float64)
tensor([ -6.2328, -10.1430, -17.4667, -13.9229, -10.0506], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2095, device='cuda:0', dtype=torch.float64)
tensor([ -6.2145, -10.1126, -17.4052, -13.8831,  -9.9466], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1760, device='cuda:0', dtype=torch.float64)
tensor([ -6.1983, -10.0868, -17.3560, -13.8687,  -9.8596], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1513, device='cuda:0', dtype=torch.float64)
tensor([ -6.1822, -10.0601, -17.3140, -13.8529,  -9.7847], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1329, device='cuda:0', dtype=torch.float64)
tensor([ -6.1663, -10.0427, -17.2821, -13.8503,  -9.7189], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1485, device='cuda:0', dtype=torch.float64)
tensor([ -6.1502, -10.0251, -17.2410, -13.8420,  -9.6476], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1699, device='cuda:0', dtype=torch.float64)
tensor([ -6.1312, -10.0092, -17.1994, -13.8192,  -9.5871], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1517, device='cuda:0', dtype=torch.float64)
tensor([ -6.1116, -10.0040, -17.1666, -13.7954,  -9.5325], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1657, device='cuda:0', dtype=torch.float64)
tensor([ -6.0880,  -9.9953, -17.1155, -13.7576,  -9.4791], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1640, device='cuda:0', dtype=torch.float64)
tensor([ -6.0693,  -9.9911, -17.0682, -13.7152,  -9.4358], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1402, device='cuda:0', dtype=torch.float64)
tensor([ -6.0521,  -9.9827, -17.0227, -13.6878,  -9.4043], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1622, device='cuda:0', dtype=torch.float64)
tensor([ -6.0358,  -9.9820, -16.9748, -13.6610,  -9.3768], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1491, device='cuda:0', dtype=torch.float64)
tensor([ -6.0195,  -9.9845, -16.9301, -13.6332,  -9.3498], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1493, device='cuda:0', dtype=torch.float64)
tensor([ -5.9978,  -9.9893, -16.8947, -13.6029,  -9.3322], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1459, device='cuda:0', dtype=torch.float64)
tensor([ -5.9757,  -9.9847, -16.8509, -13.5658,  -9.3087], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1576, device='cuda:0', dtype=torch.float64)
tensor([ -5.9543,  -9.9842, -16.8094, -13.5213,  -9.2791], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1404, device='cuda:0', dtype=torch.float64)
tensor([ -5.9315,  -9.9760, -16.7589, -13.4683,  -9.2462], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1427, device='cuda:0', dtype=torch.float64)
tensor([ -5.9107,  -9.9621, -16.7020, -13.4073,  -9.2112], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1436, device='cuda:0', dtype=torch.float64)
tensor([ -5.8940,  -9.9560, -16.6549, -13.3484,  -9.1829], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1382, device='cuda:0', dtype=torch.float64)
tensor([ -5.8794,  -9.9447, -16.6207, -13.3011,  -9.1688], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1441, device='cuda:0', dtype=torch.float64)
tensor([ -5.8660,  -9.9442, -16.5938, -13.2652,  -9.1622], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1579, device='cuda:0', dtype=torch.float64)
tensor([ -5.8502,  -9.9421, -16.5474, -13.2049,  -9.1500], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1420, device='cuda:0', dtype=torch.float64)
tensor([ -5.8350,  -9.9380, -16.4875, -13.1370,  -9.1303], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1428, device='cuda:0', dtype=torch.float64)
tensor([ -5.8228,  -9.9257, -16.4400, -13.0776,  -9.1117], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1445, device='cuda:0', dtype=torch.float64)
tensor([ -5.8093,  -9.9120, -16.3751, -13.0035,  -9.0912], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1450, device='cuda:0', dtype=torch.float64)
tensor([ -5.7969,  -9.8923, -16.3123, -12.9379,  -9.0734], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1745, device='cuda:0', dtype=torch.float64)
tensor([ -5.7850,  -9.8599, -16.2352, -12.8698,  -9.0526], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1640, device='cuda:0', dtype=torch.float64)
tensor([ -5.7721,  -9.8357, -16.1619, -12.8134,  -9.0313], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1464, device='cuda:0', dtype=torch.float64)
tensor([ -5.7592,  -9.8132, -16.0990, -12.7557,  -9.0118], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1695, device='cuda:0', dtype=torch.float64)
tensor([ -5.7473,  -9.7957, -16.0392, -12.7042,  -8.9941], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1420, device='cuda:0', dtype=torch.float64)
tensor([ -5.7389,  -9.7801, -15.9706, -12.6629,  -8.9768], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1613, device='cuda:0', dtype=torch.float64)
tensor([ -5.7304,  -9.7556, -15.8804, -12.6126,  -8.9528], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1657, device='cuda:0', dtype=torch.float64)
tensor([ -5.7250,  -9.7236, -15.7850, -12.5598,  -8.9222], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1621, device='cuda:0', dtype=torch.float64)
tensor([ -5.7199,  -9.6955, -15.6890, -12.5206,  -8.8970], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1703, device='cuda:0', dtype=torch.float64)
tensor([ -5.7130,  -9.6569, -15.5892, -12.4766,  -8.8688], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1573, device='cuda:0', dtype=torch.float64)
tensor([ -5.7074,  -9.6196, -15.4938, -12.4252,  -8.8401], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1451, device='cuda:0', dtype=torch.float64)
tensor([ -5.7031,  -9.5859, -15.4045, -12.3841,  -8.8137], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1566, device='cuda:0', dtype=torch.float64)
tensor([ -5.6973,  -9.5454, -15.2965, -12.3406,  -8.7852], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1667, device='cuda:0', dtype=torch.float64)
tensor([ -5.6898,  -9.4759, -15.1922, -12.2954,  -8.7467], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1454, device='cuda:0', dtype=torch.float64)
tensor([ -5.6830,  -9.4152, -15.1012, -12.2617,  -8.7104], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1450, device='cuda:0', dtype=torch.float64)
tensor([ -5.6751,  -9.3666, -15.0148, -12.2314,  -8.6805], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1589, device='cuda:0', dtype=torch.float64)
tensor([ -5.6675,  -9.3305, -14.9226, -12.1969,  -8.6505], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1722, device='cuda:0', dtype=torch.float64)
tensor([ -5.6583,  -9.2878, -14.8132, -12.1643,  -8.6147], device='cuda:0',
       dtype=torch.float64)
Saved results to /home/idrissm/projects/def-mh541-ab/idrissm/neighborVCA/runs/results/tsp/tsp64_/home/idrissm/projects/def-mh541-ab/idrissm/neighborVCA/scripts/VCA/tsp/configHVCA64.json_20250925_034210.csv
rnn.0.0.weight tensor(0.3170, device='cuda:0', dtype=torch.float64)
tensor([-1.6865, -2.6073, -2.8708, -3.3009, -3.1848], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(5.0354, device='cuda:0', dtype=torch.float64)
tensor([-14.4420, -45.6815, -20.3319, -43.9481, -45.2178], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(262.2607, device='cuda:0', dtype=torch.float64)
tensor([-11.2595, -10.9702,  -3.4619,  -7.1320,  -5.7480], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(162.0420, device='cuda:0', dtype=torch.float64)
tensor([ -9.3402, -23.5550, -18.2759, -12.7365, -11.0287], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(226.8343, device='cuda:0', dtype=torch.float64)
tensor([ -5.1013,  -7.9205, -12.8064,  -8.7364,  -6.8890], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(136.7234, device='cuda:0', dtype=torch.float64)
tensor([-2.2593, -4.4728, -3.0393, -7.0472, -3.7014], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(97.0586, device='cuda:0', dtype=torch.float64)
tensor([-2.4131, -4.9569, -3.0194, -4.2463, -3.8871], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(90.7119, device='cuda:0', dtype=torch.float64)
tensor([-2.4208, -5.1321, -3.0276, -3.8695, -4.4864], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(58.6674, device='cuda:0', dtype=torch.float64)
tensor([-2.4930, -4.3597, -2.9919, -3.4867, -4.8432], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(56.6459, device='cuda:0', dtype=torch.float64)
tensor([-2.4346, -4.9409, -2.9429, -5.1032, -4.9884], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(69.5550, device='cuda:0', dtype=torch.float64)
tensor([-2.1602, -4.6145, -2.8507, -5.6624, -5.1543], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(69.1712, device='cuda:0', dtype=torch.float64)
tensor([-1.9075, -3.5455, -2.7833, -3.8541, -4.6938], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(46.0066, device='cuda:0', dtype=torch.float64)
tensor([-1.7626, -3.2284, -2.8186, -3.9411, -4.0787], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(24.0414, device='cuda:0', dtype=torch.float64)
tensor([-1.7316, -3.5829, -2.9239, -4.2125, -3.6708], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(12.9397, device='cuda:0', dtype=torch.float64)
tensor([-1.8179, -3.8359, -3.0338, -4.4180, -3.5079], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(21.5331, device='cuda:0', dtype=torch.float64)
tensor([-2.0842, -3.5559, -3.1331, -4.4944, -3.4713], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(37.2409, device='cuda:0', dtype=torch.float64)
tensor([-1.9639, -3.1538, -3.2162, -4.2848, -3.3975], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(38.7990, device='cuda:0', dtype=torch.float64)
tensor([-1.6891, -2.8968, -3.2846, -3.9212, -3.2932], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(29.3518, device='cuda:0', dtype=torch.float64)
tensor([-1.6008, -2.7470, -3.3995, -3.6801, -3.2119], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(20.3453, device='cuda:0', dtype=torch.float64)
tensor([-1.6029, -2.7086, -3.3886, -3.5225, -3.1871], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(15.6282, device='cuda:0', dtype=torch.float64)
tensor([-1.6605, -2.7483, -3.2859, -3.3952, -3.2485], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(14.7584, device='cuda:0', dtype=torch.float64)
tensor([-1.7642, -2.8563, -3.2955, -3.2840, -3.3810], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(14.9466, device='cuda:0', dtype=torch.float64)
tensor([-1.8925, -3.0380, -3.3934, -3.1822, -3.4981], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(14.6653, device='cuda:0', dtype=torch.float64)
tensor([-2.0117, -3.2173, -3.4622, -3.0941, -3.5279], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(13.7060, device='cuda:0', dtype=torch.float64)
tensor([-2.1046, -3.2448, -3.4254, -3.0334, -3.5069], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(11.9388, device='cuda:0', dtype=torch.float64)
tensor([-2.1719, -3.1864, -3.3214, -3.0006, -3.4899], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(12.0383, device='cuda:0', dtype=torch.float64)
tensor([-2.2112, -3.1321, -3.2110, -2.9868, -3.4605], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(12.4365, device='cuda:0', dtype=torch.float64)
tensor([-2.2181, -3.0720, -3.1229, -2.9901, -3.3962], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(12.3652, device='cuda:0', dtype=torch.float64)
tensor([-2.1846, -3.0040, -3.0620, -3.0131, -3.3098], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(11.6152, device='cuda:0', dtype=torch.float64)
tensor([-2.1064, -2.9550, -3.0275, -3.0538, -3.2240], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(9.9103, device='cuda:0', dtype=torch.float64)
tensor([-1.9987, -2.9591, -3.0162, -3.1037, -3.1492], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(8.0332, device='cuda:0', dtype=torch.float64)
tensor([-1.8888, -3.0019, -3.0205, -3.1545, -3.0892], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(6.3760, device='cuda:0', dtype=torch.float64)
tensor([-1.7957, -2.9996, -3.0319, -3.2009, -3.0482], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(5.8936, device='cuda:0', dtype=torch.float64)
tensor([-1.7261, -2.9071, -3.0415, -3.2374, -3.0294], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(6.9117, device='cuda:0', dtype=torch.float64)
tensor([-1.6807, -2.7805, -3.0433, -3.2589, -3.0328], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(7.3576, device='cuda:0', dtype=torch.float64)
tensor([-1.6581, -2.6812, -3.0348, -3.2632, -3.0552], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(7.0959, device='cuda:0', dtype=torch.float64)
tensor([-1.6564, -2.6179, -3.0146, -3.2505, -3.0930], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(6.2736, device='cuda:0', dtype=torch.float64)
tensor([-1.6735, -2.5844, -2.9853, -3.2245, -3.1433], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(5.1629, device='cuda:0', dtype=torch.float64)
tensor([-1.7056, -2.5754, -2.9508, -3.1916, -3.2016], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(4.2133, device='cuda:0', dtype=torch.float64)
tensor([-1.7486, -2.5855, -2.9147, -3.1585, -3.2620], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(3.4142, device='cuda:0', dtype=torch.float64)
tensor([-1.7962, -2.6092, -2.8804, -3.1310, -3.3171], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(3.2331, device='cuda:0', dtype=torch.float64)
tensor([-1.8426, -2.6403, -2.8493, -3.1112, -3.3590], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(3.7729, device='cuda:0', dtype=torch.float64)
tensor([-1.8819, -2.6720, -2.8221, -3.0992, -3.3825], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(4.3499, device='cuda:0', dtype=torch.float64)
tensor([-1.9089, -2.6972, -2.7983, -3.0929, -3.3851], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(4.4978, device='cuda:0', dtype=torch.float64)
tensor([-1.9220, -2.7116, -2.7775, -3.0907, -3.3694], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(4.1175, device='cuda:0', dtype=torch.float64)
tensor([-1.9220, -2.7145, -2.7615, -3.0919, -3.3429], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(3.6881, device='cuda:0', dtype=torch.float64)
tensor([-1.9116, -2.7091, -2.7513, -3.0971, -3.3122], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(3.1359, device='cuda:0', dtype=torch.float64)
tensor([-1.8945, -2.7005, -2.7468, -3.1062, -3.2820], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.5989, device='cuda:0', dtype=torch.float64)
tensor([-1.8745, -2.6921, -2.7471, -3.1185, -3.2560], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.6077, device='cuda:0', dtype=torch.float64)
tensor([-1.8559, -2.6845, -2.7509, -3.1323, -3.2371], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.5145, device='cuda:0', dtype=torch.float64)
tensor([-1.8407, -2.6782, -2.7570, -3.1464, -3.2257], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.5486, device='cuda:0', dtype=torch.float64)
tensor([-1.8304, -2.6734, -2.7641, -3.1598, -3.2220], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.4397, device='cuda:0', dtype=torch.float64)
tensor([-1.8246, -2.6702, -2.7710, -3.1708, -3.2245], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.2770, device='cuda:0', dtype=torch.float64)
tensor([-1.8229, -2.6687, -2.7761, -3.1789, -3.2307], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1582, device='cuda:0', dtype=torch.float64)
tensor([-1.8237, -2.6688, -2.7782, -3.1839, -3.2384], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9934, device='cuda:0', dtype=torch.float64)
tensor([-1.8259, -2.6704, -2.7768, -3.1855, -3.2454], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0573, device='cuda:0', dtype=torch.float64)
tensor([-1.8282, -2.6723, -2.7722, -3.1842, -3.2497], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0245, device='cuda:0', dtype=torch.float64)
tensor([-1.8294, -2.6739, -2.7662, -3.1812, -3.2515], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9498, device='cuda:0', dtype=torch.float64)
tensor([-1.8289, -2.6746, -2.7605, -3.1780, -3.2500], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8015, device='cuda:0', dtype=torch.float64)
tensor([-1.8271, -2.6738, -2.7571, -3.1756, -3.2461], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6743, device='cuda:0', dtype=torch.float64)
tensor([-1.8240, -2.6712, -2.7562, -3.1748, -3.2409], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6599, device='cuda:0', dtype=torch.float64)
tensor([-1.8194, -2.6668, -2.7588, -3.1760, -3.2356], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6514, device='cuda:0', dtype=torch.float64)
tensor([-1.8130, -2.6604, -2.7652, -3.1798, -3.2312], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5822, device='cuda:0', dtype=torch.float64)
tensor([-1.8068, -2.6535, -2.7742, -3.1854, -3.2286], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6231, device='cuda:0', dtype=torch.float64)
tensor([-1.8007, -2.6460, -2.7843, -3.1925, -3.2283], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4453, device='cuda:0', dtype=torch.float64)
tensor([-1.7957, -2.6390, -2.7951, -3.1998, -3.2300], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4606, device='cuda:0', dtype=torch.float64)
tensor([-1.7931, -2.6329, -2.8055, -3.2070, -3.2330], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4089, device='cuda:0', dtype=torch.float64)
tensor([-1.7927, -2.6282, -2.8151, -3.2131, -3.2368], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4111, device='cuda:0', dtype=torch.float64)
tensor([-1.7949, -2.6252, -2.8232, -3.2177, -3.2407], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4002, device='cuda:0', dtype=torch.float64)
tensor([-1.7995, -2.6241, -2.8289, -3.2203, -3.2442], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2676, device='cuda:0', dtype=torch.float64)
tensor([-1.8057, -2.6247, -2.8318, -3.2203, -3.2461], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2990, device='cuda:0', dtype=torch.float64)
tensor([-1.8132, -2.6274, -2.8314, -3.2177, -3.2466], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2133, device='cuda:0', dtype=torch.float64)
tensor([-1.8217, -2.6321, -2.8276, -3.2129, -3.2454], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0717, device='cuda:0', dtype=torch.float64)
tensor([-1.8309, -2.6377, -2.8218, -3.2068, -3.2438], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0570, device='cuda:0', dtype=torch.float64)
tensor([-1.8401, -2.6441, -2.8145, -3.1991, -3.2417], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0129, device='cuda:0', dtype=torch.float64)
tensor([-1.8487, -2.6508, -2.8068, -3.1899, -3.2405], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1802, device='cuda:0', dtype=torch.float64)
tensor([-1.8566, -2.6570, -2.7998, -3.1810, -3.2401], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1368, device='cuda:0', dtype=torch.float64)
tensor([-1.8632, -2.6619, -2.7948, -3.1723, -3.2402], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2341, device='cuda:0', dtype=torch.float64)
tensor([-1.8685, -2.6658, -2.7921, -3.1648, -3.2412], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0618, device='cuda:0', dtype=torch.float64)
tensor([-1.8716, -2.6676, -2.7914, -3.1592, -3.2427], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9197, device='cuda:0', dtype=torch.float64)
tensor([-1.8728, -2.6679, -2.7922, -3.1549, -3.2441], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9610, device='cuda:0', dtype=torch.float64)
tensor([-1.8718, -2.6663, -2.7941, -3.1520, -3.2449], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9313, device='cuda:0', dtype=torch.float64)
tensor([-1.8684, -2.6626, -2.7973, -3.1513, -3.2443], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9328, device='cuda:0', dtype=torch.float64)
tensor([-1.8623, -2.6577, -2.8011, -3.1541, -3.2423], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9704, device='cuda:0', dtype=torch.float64)
tensor([-1.8553, -2.6521, -2.8051, -3.1582, -3.2386], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9746, device='cuda:0', dtype=torch.float64)
tensor([-1.8466, -2.6464, -2.8086, -3.1630, -3.2331], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0069, device='cuda:0', dtype=torch.float64)
tensor([-1.8381, -2.6405, -2.8118, -3.1682, -3.2267], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8802, device='cuda:0', dtype=torch.float64)
tensor([-1.8303, -2.6349, -2.8142, -3.1739, -3.2199], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7285, device='cuda:0', dtype=torch.float64)
tensor([-1.8241, -2.6305, -2.8151, -3.1780, -3.2132], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7651, device='cuda:0', dtype=torch.float64)
tensor([-1.8197, -2.6272, -2.8141, -3.1813, -3.2074], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0059, device='cuda:0', dtype=torch.float64)
tensor([-1.8183, -2.6258, -2.8130, -3.1844, -3.2040], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8389, device='cuda:0', dtype=torch.float64)
tensor([-1.8194, -2.6257, -2.8113, -3.1851, -3.2016], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8998, device='cuda:0', dtype=torch.float64)
tensor([-1.8229, -2.6270, -2.8096, -3.1848, -3.2012], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8651, device='cuda:0', dtype=torch.float64)
tensor([-1.8280, -2.6302, -2.8078, -3.1830, -3.2025], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8977, device='cuda:0', dtype=torch.float64)
tensor([-1.8358, -2.6356, -2.8054, -3.1801, -3.2061], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7400, device='cuda:0', dtype=torch.float64)
tensor([-1.8429, -2.6410, -2.8042, -3.1769, -3.2095], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7860, device='cuda:0', dtype=torch.float64)
tensor([-1.8488, -2.6461, -2.8032, -3.1727, -3.2119], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7880, device='cuda:0', dtype=torch.float64)
tensor([-1.8534, -2.6514, -2.8020, -3.1678, -3.2131], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8390, device='cuda:0', dtype=torch.float64)
tensor([-1.8568, -2.6573, -2.8006, -3.1628, -3.2116], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7872, device='cuda:0', dtype=torch.float64)
tensor([-1.8594, -2.6628, -2.7996, -3.1575, -3.2109], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6728, device='cuda:0', dtype=torch.float64)
tensor([-1.8609, -2.6677, -2.7992, -3.1538, -3.2093], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9117, device='cuda:0', dtype=torch.float64)
tensor([-1.8611, -2.6715, -2.7991, -3.1518, -3.2083], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8355, device='cuda:0', dtype=torch.float64)
tensor([-1.8606, -2.6739, -2.8000, -3.1505, -3.2073], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8255, device='cuda:0', dtype=torch.float64)
tensor([-1.8597, -2.6748, -2.8029, -3.1505, -3.2080], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9079, device='cuda:0', dtype=torch.float64)
tensor([-1.8581, -2.6747, -2.8065, -3.1519, -3.2094], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9073, device='cuda:0', dtype=torch.float64)
tensor([-1.8570, -2.6746, -2.8102, -3.1541, -3.2122], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8960, device='cuda:0', dtype=torch.float64)
tensor([-1.8563, -2.6732, -2.8133, -3.1563, -3.2152], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9446, device='cuda:0', dtype=torch.float64)
tensor([-1.8550, -2.6716, -2.8158, -3.1581, -3.2171], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9533, device='cuda:0', dtype=torch.float64)
tensor([-1.8531, -2.6686, -2.8184, -3.1610, -3.2192], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7830, device='cuda:0', dtype=torch.float64)
tensor([-1.8500, -2.6655, -2.8214, -3.1648, -3.2195], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9003, device='cuda:0', dtype=torch.float64)
tensor([-1.8486, -2.6632, -2.8239, -3.1665, -3.2179], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8760, device='cuda:0', dtype=torch.float64)
tensor([-1.8458, -2.6605, -2.8246, -3.1685, -3.2137], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8956, device='cuda:0', dtype=torch.float64)
tensor([-1.8430, -2.6582, -2.8252, -3.1710, -3.2085], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8974, device='cuda:0', dtype=torch.float64)
tensor([-1.8402, -2.6557, -2.8254, -3.1736, -3.2026], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9775, device='cuda:0', dtype=torch.float64)
tensor([-1.8383, -2.6541, -2.8247, -3.1749, -3.1980], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0587, device='cuda:0', dtype=torch.float64)
tensor([-1.8384, -2.6534, -2.8230, -3.1769, -3.1950], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8909, device='cuda:0', dtype=torch.float64)
tensor([-1.8403, -2.6547, -2.8214, -3.1780, -3.1932], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1745, device='cuda:0', dtype=torch.float64)
tensor([-1.8458, -2.6570, -2.8210, -3.1778, -3.1947], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8661, device='cuda:0', dtype=torch.float64)
tensor([-1.8521, -2.6604, -2.8194, -3.1776, -3.1982], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8923, device='cuda:0', dtype=torch.float64)
tensor([-1.8586, -2.6628, -2.8174, -3.1768, -3.2028], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1355, device='cuda:0', dtype=torch.float64)
tensor([-1.8662, -2.6661, -2.8145, -3.1742, -3.2080], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9626, device='cuda:0', dtype=torch.float64)
tensor([-1.8726, -2.6701, -2.8126, -3.1723, -3.2123], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8947, device='cuda:0', dtype=torch.float64)
tensor([-1.8772, -2.6738, -2.8110, -3.1702, -3.2152], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9536, device='cuda:0', dtype=torch.float64)
tensor([-1.8806, -2.6771, -2.8100, -3.1690, -3.2174], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8942, device='cuda:0', dtype=torch.float64)
tensor([-1.8809, -2.6784, -2.8092, -3.1694, -3.2163], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8944, device='cuda:0', dtype=torch.float64)
tensor([-1.8783, -2.6786, -2.8083, -3.1695, -3.2121], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8568, device='cuda:0', dtype=torch.float64)
tensor([-1.8749, -2.6786, -2.8066, -3.1703, -3.2072], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8515, device='cuda:0', dtype=torch.float64)
tensor([-1.8702, -2.6777, -2.8066, -3.1731, -3.2040], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1332, device='cuda:0', dtype=torch.float64)
tensor([-1.8673, -2.6783, -2.8054, -3.1741, -3.2010], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9919, device='cuda:0', dtype=torch.float64)
tensor([-1.8646, -2.6788, -2.8045, -3.1774, -3.2008], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0638, device='cuda:0', dtype=torch.float64)
tensor([-1.8619, -2.6783, -2.8043, -3.1821, -3.2023], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9989, device='cuda:0', dtype=torch.float64)
tensor([-1.8582, -2.6763, -2.8051, -3.1865, -3.2039], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0772, device='cuda:0', dtype=torch.float64)
tensor([-1.8556, -2.6761, -2.8061, -3.1898, -3.2044], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8979, device='cuda:0', dtype=torch.float64)
tensor([-1.8543, -2.6763, -2.8082, -3.1924, -3.2055], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8101, device='cuda:0', dtype=torch.float64)
tensor([-1.8551, -2.6767, -2.8097, -3.1935, -3.2061], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0054, device='cuda:0', dtype=torch.float64)
tensor([-1.8589, -2.6776, -2.8103, -3.1939, -3.2081], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0785, device='cuda:0', dtype=torch.float64)
tensor([-1.8645, -2.6768, -2.8114, -3.1938, -3.2106], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2199, device='cuda:0', dtype=torch.float64)
tensor([-1.8695, -2.6751, -2.8137, -3.1940, -3.2122], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0022, device='cuda:0', dtype=torch.float64)
tensor([-1.8736, -2.6736, -2.8159, -3.1929, -3.2118], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7543, device='cuda:0', dtype=torch.float64)
tensor([-1.8767, -2.6732, -2.8164, -3.1908, -3.2108], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1394, device='cuda:0', dtype=torch.float64)
tensor([-1.8790, -2.6719, -2.8160, -3.1860, -3.2087], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0538, device='cuda:0', dtype=torch.float64)
tensor([-1.8795, -2.6701, -2.8156, -3.1828, -3.2062], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8955, device='cuda:0', dtype=torch.float64)
tensor([-1.8779, -2.6680, -2.8149, -3.1805, -3.2034], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2324, device='cuda:0', dtype=torch.float64)
tensor([-1.8777, -2.6683, -2.8127, -3.1792, -3.2005], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8749, device='cuda:0', dtype=torch.float64)
tensor([-1.8773, -2.6696, -2.8095, -3.1771, -3.1970], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1867, device='cuda:0', dtype=torch.float64)
tensor([-1.8761, -2.6707, -2.8080, -3.1787, -3.1947], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8942, device='cuda:0', dtype=torch.float64)
tensor([-1.8751, -2.6716, -2.8082, -3.1805, -3.1930], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1284, device='cuda:0', dtype=torch.float64)
tensor([-1.8751, -2.6738, -2.8080, -3.1833, -3.1920], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0853, device='cuda:0', dtype=torch.float64)
tensor([-1.8770, -2.6776, -2.8077, -3.1854, -3.1938], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0043, device='cuda:0', dtype=torch.float64)
tensor([-1.8790, -2.6833, -2.8082, -3.1868, -3.1957], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1194, device='cuda:0', dtype=torch.float64)
tensor([-1.8813, -2.6895, -2.8096, -3.1867, -3.2006], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0715, device='cuda:0', dtype=torch.float64)
tensor([-1.8846, -2.6962, -2.8122, -3.1864, -3.2040], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9812, device='cuda:0', dtype=torch.float64)
tensor([-1.8886, -2.7030, -2.8155, -3.1852, -3.2070], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0940, device='cuda:0', dtype=torch.float64)
tensor([-1.8903, -2.7087, -2.8179, -3.1837, -3.2086], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8222, device='cuda:0', dtype=torch.float64)
tensor([-1.8908, -2.7108, -2.8206, -3.1831, -3.2104], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2387, device='cuda:0', dtype=torch.float64)
tensor([-1.8902, -2.7089, -2.8227, -3.1826, -3.2127], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0970, device='cuda:0', dtype=torch.float64)
tensor([-1.8881, -2.7049, -2.8273, -3.1830, -3.2146], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1653, device='cuda:0', dtype=torch.float64)
tensor([-1.8851, -2.7002, -2.8299, -3.1867, -3.2180], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9761, device='cuda:0', dtype=torch.float64)
tensor([-1.8803, -2.6939, -2.8331, -3.1901, -3.2215], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1259, device='cuda:0', dtype=torch.float64)
tensor([-1.8766, -2.6872, -2.8343, -3.1916, -3.2244], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0857, device='cuda:0', dtype=torch.float64)
tensor([-1.8740, -2.6807, -2.8348, -3.1945, -3.2282], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0658, device='cuda:0', dtype=torch.float64)
tensor([-1.8730, -2.6769, -2.8334, -3.1951, -3.2298], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3324, device='cuda:0', dtype=torch.float64)
tensor([-1.8725, -2.6755, -2.8305, -3.1944, -3.2302], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9880, device='cuda:0', dtype=torch.float64)
tensor([-1.8717, -2.6738, -2.8271, -3.1941, -3.2280], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0348, device='cuda:0', dtype=torch.float64)
tensor([-1.8713, -2.6755, -2.8239, -3.1935, -3.2283], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0725, device='cuda:0', dtype=torch.float64)
tensor([-1.8745, -2.6787, -2.8205, -3.1926, -3.2319], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2167, device='cuda:0', dtype=torch.float64)
tensor([-1.8803, -2.6832, -2.8161, -3.1907, -3.2354], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1792, device='cuda:0', dtype=torch.float64)
tensor([-1.8855, -2.6872, -2.8133, -3.1895, -3.2375], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0764, device='cuda:0', dtype=torch.float64)
tensor([-1.8912, -2.6917, -2.8118, -3.1866, -3.2392], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3012, device='cuda:0', dtype=torch.float64)
tensor([-1.8969, -2.6958, -2.8106, -3.1803, -3.2390], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0402, device='cuda:0', dtype=torch.float64)
tensor([-1.9017, -2.7001, -2.8091, -3.1741, -3.2366], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9563, device='cuda:0', dtype=torch.float64)
tensor([-1.9052, -2.7027, -2.8073, -3.1697, -3.2321], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3742, device='cuda:0', dtype=torch.float64)
tensor([-1.9092, -2.7050, -2.8070, -3.1669, -3.2259], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4140, device='cuda:0', dtype=torch.float64)
tensor([-1.9096, -2.7057, -2.8082, -3.1652, -3.2204], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1217, device='cuda:0', dtype=torch.float64)
tensor([-1.9084, -2.7051, -2.8101, -3.1637, -3.2166], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4177, device='cuda:0', dtype=torch.float64)
tensor([-1.9098, -2.7059, -2.8137, -3.1657, -3.2194], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2202, device='cuda:0', dtype=torch.float64)
tensor([-1.9094, -2.7065, -2.8179, -3.1716, -3.2217], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9452, device='cuda:0', dtype=torch.float64)
tensor([-1.9068, -2.7071, -2.8224, -3.1799, -3.2252], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1367, device='cuda:0', dtype=torch.float64)
tensor([-1.9044, -2.7072, -2.8277, -3.1916, -3.2299], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1352, device='cuda:0', dtype=torch.float64)
tensor([-1.9020, -2.7062, -2.8342, -3.2028, -3.2341], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1373, device='cuda:0', dtype=torch.float64)
tensor([-1.8982, -2.7080, -2.8395, -3.2121, -3.2346], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2077, device='cuda:0', dtype=torch.float64)
tensor([-1.8949, -2.7093, -2.8440, -3.2202, -3.2331], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2148, device='cuda:0', dtype=torch.float64)
tensor([-1.8940, -2.7097, -2.8453, -3.2262, -3.2328], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1596, device='cuda:0', dtype=torch.float64)
tensor([-1.8936, -2.7115, -2.8470, -3.2282, -3.2334], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2557, device='cuda:0', dtype=torch.float64)
tensor([-1.8929, -2.7119, -2.8481, -3.2286, -3.2325], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3503, device='cuda:0', dtype=torch.float64)
tensor([-1.8910, -2.7116, -2.8487, -3.2294, -3.2295], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1476, device='cuda:0', dtype=torch.float64)
tensor([-1.8884, -2.7096, -2.8516, -3.2317, -3.2278], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1409, device='cuda:0', dtype=torch.float64)
tensor([-1.8884, -2.7075, -2.8549, -3.2304, -3.2276], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9607, device='cuda:0', dtype=torch.float64)
tensor([-1.8877, -2.7038, -2.8576, -3.2287, -3.2273], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1779, device='cuda:0', dtype=torch.float64)
tensor([-1.8881, -2.7026, -2.8614, -3.2270, -3.2283], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0520, device='cuda:0', dtype=torch.float64)
tensor([-1.8910, -2.7028, -2.8638, -3.2220, -3.2294], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0675, device='cuda:0', dtype=torch.float64)
tensor([-1.8943, -2.7023, -2.8659, -3.2158, -3.2299], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3485, device='cuda:0', dtype=torch.float64)
tensor([-1.8988, -2.7025, -2.8645, -3.2124, -3.2320], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3184, device='cuda:0', dtype=torch.float64)
tensor([-1.9048, -2.7057, -2.8613, -3.2075, -3.2324], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0387, device='cuda:0', dtype=torch.float64)
tensor([-1.9110, -2.7098, -2.8598, -3.2034, -3.2355], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3370, device='cuda:0', dtype=torch.float64)
tensor([-1.9193, -2.7145, -2.8569, -3.1984, -3.2386], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0395, device='cuda:0', dtype=torch.float64)
tensor([-1.9260, -2.7201, -2.8520, -3.1941, -3.2384], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3620, device='cuda:0', dtype=torch.float64)
tensor([-1.9329, -2.7260, -2.8472, -3.1928, -3.2378], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2871, device='cuda:0', dtype=torch.float64)
tensor([-1.9388, -2.7300, -2.8432, -3.1958, -3.2374], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3083, device='cuda:0', dtype=torch.float64)
tensor([-1.9449, -2.7340, -2.8402, -3.2003, -3.2385], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2529, device='cuda:0', dtype=torch.float64)
tensor([-1.9494, -2.7369, -2.8396, -3.2071, -3.2392], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2513, device='cuda:0', dtype=torch.float64)
tensor([-1.9531, -2.7384, -2.8411, -3.2162, -3.2417], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1684, device='cuda:0', dtype=torch.float64)
tensor([-1.9565, -2.7394, -2.8427, -3.2208, -3.2437], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5624, device='cuda:0', dtype=torch.float64)
tensor([-1.9549, -2.7389, -2.8455, -3.2288, -3.2414], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4328, device='cuda:0', dtype=torch.float64)
tensor([-1.9501, -2.7349, -2.8505, -3.2371, -3.2379], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5617, device='cuda:0', dtype=torch.float64)
tensor([-1.9476, -2.7298, -2.8575, -3.2439, -3.2355], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3612, device='cuda:0', dtype=torch.float64)
tensor([-1.9464, -2.7259, -2.8640, -3.2487, -3.2346], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2200, device='cuda:0', dtype=torch.float64)
tensor([-1.9465, -2.7247, -2.8656, -3.2513, -3.2323], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3406, device='cuda:0', dtype=torch.float64)
tensor([-1.9471, -2.7259, -2.8649, -3.2476, -3.2260], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3053, device='cuda:0', dtype=torch.float64)
tensor([-1.9430, -2.7252, -2.8652, -3.2419, -3.2147], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4746, device='cuda:0', dtype=torch.float64)
tensor([-1.9393, -2.7245, -2.8687, -3.2383, -3.2042], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2891, device='cuda:0', dtype=torch.float64)
tensor([-1.9406, -2.7251, -2.8684, -3.2335, -3.1982], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3593, device='cuda:0', dtype=torch.float64)
tensor([-1.9422, -2.7259, -2.8696, -3.2265, -3.1919], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5921, device='cuda:0', dtype=torch.float64)
tensor([-1.9467, -2.7277, -2.8690, -3.2199, -3.1897], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2962, device='cuda:0', dtype=torch.float64)
tensor([-1.9499, -2.7293, -2.8661, -3.2156, -3.1874], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2090, device='cuda:0', dtype=torch.float64)
tensor([-1.9545, -2.7324, -2.8647, -3.2130, -3.1882], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3314, device='cuda:0', dtype=torch.float64)
tensor([-1.9613, -2.7375, -2.8614, -3.2100, -3.1902], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3558, device='cuda:0', dtype=torch.float64)
tensor([-1.9676, -2.7402, -2.8600, -3.2072, -3.1945], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5409, device='cuda:0', dtype=torch.float64)
tensor([-1.9726, -2.7406, -2.8597, -3.2043, -3.2000], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3795, device='cuda:0', dtype=torch.float64)
tensor([-1.9764, -2.7422, -2.8598, -3.2039, -3.2070], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4684, device='cuda:0', dtype=torch.float64)
tensor([-1.9822, -2.7476, -2.8585, -3.2040, -3.2174], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2595, device='cuda:0', dtype=torch.float64)
tensor([-1.9867, -2.7517, -2.8600, -3.2051, -3.2273], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5544, device='cuda:0', dtype=torch.float64)
tensor([-1.9908, -2.7575, -2.8620, -3.2087, -3.2392], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4346, device='cuda:0', dtype=torch.float64)
tensor([-1.9962, -2.7642, -2.8640, -3.2110, -3.2534], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4472, device='cuda:0', dtype=torch.float64)
tensor([-1.9979, -2.7669, -2.8665, -3.2141, -3.2630], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6043, device='cuda:0', dtype=torch.float64)
tensor([-2.0012, -2.7661, -2.8706, -3.2176, -3.2709], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6250, device='cuda:0', dtype=torch.float64)
tensor([-2.0065, -2.7669, -2.8715, -3.2183, -3.2745], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2432, device='cuda:0', dtype=torch.float64)
tensor([-2.0118, -2.7659, -2.8712, -3.2168, -3.2758], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2886, device='cuda:0', dtype=torch.float64)
tensor([-2.0122, -2.7638, -2.8747, -3.2144, -3.2781], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5646, device='cuda:0', dtype=torch.float64)
tensor([-2.0127, -2.7641, -2.8769, -3.2130, -3.2812], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7875, device='cuda:0', dtype=torch.float64)
tensor([-2.0124, -2.7647, -2.8796, -3.2124, -3.2829], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2464, device='cuda:0', dtype=torch.float64)
tensor([-2.0112, -2.7636, -2.8844, -3.2143, -3.2844], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6380, device='cuda:0', dtype=torch.float64)
tensor([-2.0081, -2.7617, -2.8884, -3.2135, -3.2817], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3494, device='cuda:0', dtype=torch.float64)
tensor([-2.0004, -2.7575, -2.8909, -3.2130, -3.2786], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6088, device='cuda:0', dtype=torch.float64)
tensor([-1.9949, -2.7546, -2.8948, -3.2143, -3.2786], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3314, device='cuda:0', dtype=torch.float64)
tensor([-1.9917, -2.7537, -2.8975, -3.2157, -3.2811], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6868, device='cuda:0', dtype=torch.float64)
tensor([-1.9913, -2.7582, -2.9017, -3.2217, -3.2884], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5977, device='cuda:0', dtype=torch.float64)
tensor([-1.9893, -2.7600, -2.9060, -3.2292, -3.2940], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3883, device='cuda:0', dtype=torch.float64)
tensor([-1.9857, -2.7599, -2.9078, -3.2375, -3.2928], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4972, device='cuda:0', dtype=torch.float64)
tensor([-1.9837, -2.7603, -2.9080, -3.2463, -3.2938], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8481, device='cuda:0', dtype=torch.float64)
tensor([-1.9840, -2.7638, -2.9110, -3.2530, -3.2978], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4101, device='cuda:0', dtype=torch.float64)
tensor([-1.9871, -2.7669, -2.9143, -3.2579, -3.2981], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4368, device='cuda:0', dtype=torch.float64)
tensor([-1.9923, -2.7692, -2.9181, -3.2643, -3.2973], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5260, device='cuda:0', dtype=torch.float64)
tensor([-1.9955, -2.7697, -2.9193, -3.2713, -3.2955], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7580, device='cuda:0', dtype=torch.float64)
tensor([-1.9978, -2.7686, -2.9173, -3.2757, -3.2888], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2584, device='cuda:0', dtype=torch.float64)
tensor([-2.0037, -2.7696, -2.9140, -3.2745, -3.2811], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4764, device='cuda:0', dtype=torch.float64)
tensor([-2.0155, -2.7748, -2.9134, -3.2712, -3.2783], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6346, device='cuda:0', dtype=torch.float64)
tensor([-2.0281, -2.7804, -2.9100, -3.2712, -3.2796], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3294, device='cuda:0', dtype=torch.float64)
tensor([-2.0406, -2.7844, -2.9087, -3.2695, -3.2816], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7065, device='cuda:0', dtype=torch.float64)
tensor([-2.0514, -2.7892, -2.9059, -3.2634, -3.2815], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4195, device='cuda:0', dtype=torch.float64)
tensor([-2.0593, -2.7935, -2.9056, -3.2594, -3.2813], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4677, device='cuda:0', dtype=torch.float64)
tensor([-2.0683, -2.7967, -2.9091, -3.2551, -3.2852], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7441, device='cuda:0', dtype=torch.float64)
tensor([-2.0766, -2.7993, -2.9124, -3.2531, -3.2924], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4564, device='cuda:0', dtype=torch.float64)
tensor([-2.0825, -2.7986, -2.9167, -3.2533, -3.2992], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4989, device='cuda:0', dtype=torch.float64)
tensor([-2.0860, -2.7971, -2.9196, -3.2582, -3.3059], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4258, device='cuda:0', dtype=torch.float64)
tensor([-2.0929, -2.7980, -2.9233, -3.2655, -3.3200], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4474, device='cuda:0', dtype=torch.float64)
tensor([-2.0961, -2.7989, -2.9311, -3.2777, -3.3308], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5179, device='cuda:0', dtype=torch.float64)
tensor([-2.0946, -2.7980, -2.9416, -3.2870, -3.3416], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7414, device='cuda:0', dtype=torch.float64)
tensor([-2.0894, -2.7969, -2.9507, -3.2952, -3.3454], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6215, device='cuda:0', dtype=torch.float64)
tensor([-2.0883, -2.7988, -2.9626, -3.3010, -3.3491], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6257, device='cuda:0', dtype=torch.float64)
tensor([-2.0839, -2.7977, -2.9723, -3.3007, -3.3454], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7553, device='cuda:0', dtype=torch.float64)
tensor([-2.0803, -2.7967, -2.9813, -3.3010, -3.3392], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2942, device='cuda:0', dtype=torch.float64)
tensor([-2.0787, -2.7991, -2.9896, -3.2991, -3.3368], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6660, device='cuda:0', dtype=torch.float64)
tensor([-2.0807, -2.8049, -2.9929, -3.3018, -3.3399], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5924, device='cuda:0', dtype=torch.float64)
tensor([-2.0817, -2.8040, -2.9944, -3.3039, -3.3438], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4337, device='cuda:0', dtype=torch.float64)
tensor([-2.0867, -2.8065, -3.0013, -3.3112, -3.3525], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6617, device='cuda:0', dtype=torch.float64)
tensor([-2.0945, -2.8104, -3.0036, -3.3158, -3.3645], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3626, device='cuda:0', dtype=torch.float64)
tensor([-2.1004, -2.8123, -3.0025, -3.3160, -3.3722], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6772, device='cuda:0', dtype=torch.float64)
tensor([-2.1080, -2.8182, -2.9979, -3.3163, -3.3821], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6063, device='cuda:0', dtype=torch.float64)
tensor([-2.1196, -2.8319, -2.9926, -3.3185, -3.3987], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7992, device='cuda:0', dtype=torch.float64)
tensor([-2.1315, -2.8471, -2.9869, -3.3213, -3.4119], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9770, device='cuda:0', dtype=torch.float64)
tensor([-2.1395, -2.8617, -2.9788, -3.3162, -3.4207], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4975, device='cuda:0', dtype=torch.float64)
tensor([-2.1462, -2.8776, -2.9702, -3.3145, -3.4273], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6800, device='cuda:0', dtype=torch.float64)
tensor([-2.1568, -2.8947, -2.9597, -3.3124, -3.4320], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6729, device='cuda:0', dtype=torch.float64)
tensor([-2.1632, -2.9137, -2.9545, -3.3156, -3.4332], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6983, device='cuda:0', dtype=torch.float64)
tensor([-2.1668, -2.9300, -2.9478, -3.3203, -3.4322], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6799, device='cuda:0', dtype=torch.float64)
tensor([-2.1744, -2.9471, -2.9470, -3.3285, -3.4382], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6034, device='cuda:0', dtype=torch.float64)
tensor([-2.1838, -2.9675, -2.9486, -3.3413, -3.4443], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6394, device='cuda:0', dtype=torch.float64)
tensor([-2.1921, -2.9922, -2.9465, -3.3469, -3.4486], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8924, device='cuda:0', dtype=torch.float64)
tensor([-2.1986, -3.0211, -2.9464, -3.3493, -3.4489], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5566, device='cuda:0', dtype=torch.float64)
tensor([-2.2052, -3.0498, -2.9469, -3.3523, -3.4503], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6683, device='cuda:0', dtype=torch.float64)
tensor([-2.2153, -3.0725, -2.9505, -3.3583, -3.4563], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4229, device='cuda:0', dtype=torch.float64)
tensor([-2.2248, -3.0822, -2.9553, -3.3650, -3.4546], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5352, device='cuda:0', dtype=torch.float64)
tensor([-2.2322, -3.0855, -2.9620, -3.3711, -3.4503], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4501, device='cuda:0', dtype=torch.float64)
tensor([-2.2452, -3.0819, -2.9662, -3.3747, -3.4423], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7410, device='cuda:0', dtype=torch.float64)
tensor([-2.2538, -3.0680, -2.9743, -3.3768, -3.4357], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5954, device='cuda:0', dtype=torch.float64)
tensor([-2.2669, -3.0661, -2.9804, -3.3832, -3.4321], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8732, device='cuda:0', dtype=torch.float64)
tensor([-2.2774, -3.0581, -2.9907, -3.3935, -3.4323], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5332, device='cuda:0', dtype=torch.float64)
tensor([-2.2848, -3.0488, -3.0069, -3.4015, -3.4347], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6062, device='cuda:0', dtype=torch.float64)
tensor([-2.2891, -3.0335, -3.0244, -3.4122, -3.4368], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5170, device='cuda:0', dtype=torch.float64)
tensor([-2.2971, -3.0214, -3.0463, -3.4211, -3.4458], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7367, device='cuda:0', dtype=torch.float64)
tensor([-2.3057, -3.0187, -3.0646, -3.4325, -3.4588], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7760, device='cuda:0', dtype=torch.float64)
tensor([-2.3105, -3.0123, -3.0782, -3.4460, -3.4660], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5197, device='cuda:0', dtype=torch.float64)
tensor([-2.3180, -3.0123, -3.0963, -3.4584, -3.4718], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5706, device='cuda:0', dtype=torch.float64)
tensor([-2.3235, -3.0128, -3.1123, -3.4674, -3.4779], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1130, device='cuda:0', dtype=torch.float64)
tensor([-2.3220, -3.0145, -3.1265, -3.4724, -3.4769], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6113, device='cuda:0', dtype=torch.float64)
tensor([-2.3277, -3.0172, -3.1462, -3.4708, -3.4892], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9919, device='cuda:0', dtype=torch.float64)
tensor([-2.3326, -3.0179, -3.1663, -3.4764, -3.5016], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7246, device='cuda:0', dtype=torch.float64)
tensor([-2.3422, -3.0178, -3.1886, -3.4837, -3.5123], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6649, device='cuda:0', dtype=torch.float64)
tensor([-2.3562, -3.0192, -3.2088, -3.4894, -3.5241], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7425, device='cuda:0', dtype=torch.float64)
tensor([-2.3754, -3.0267, -3.2274, -3.4954, -3.5403], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5261, device='cuda:0', dtype=torch.float64)
tensor([-2.4083, -3.0408, -3.2491, -3.5055, -3.5655], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0417, device='cuda:0', dtype=torch.float64)
tensor([-2.4434, -3.0588, -3.2783, -3.5196, -3.6015], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3911, device='cuda:0', dtype=torch.float64)
tensor([-2.4781, -3.0777, -3.3048, -3.5408, -3.6350], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6123, device='cuda:0', dtype=torch.float64)
tensor([-2.5158, -3.1015, -3.3274, -3.5638, -3.6725], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6831, device='cuda:0', dtype=torch.float64)
tensor([-2.5566, -3.1300, -3.3459, -3.5915, -3.7070], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4427, device='cuda:0', dtype=torch.float64)
tensor([-2.5959, -3.1577, -3.3676, -3.6226, -3.7424], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8665, device='cuda:0', dtype=torch.float64)
tensor([-2.6486, -3.1877, -3.3915, -3.6812, -3.7946], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4886, device='cuda:0', dtype=torch.float64)
tensor([-2.7018, -3.2199, -3.4194, -3.7432, -3.8485], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3729, device='cuda:0', dtype=torch.float64)
tensor([-2.7566, -3.2504, -3.4477, -3.7972, -3.9000], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5801, device='cuda:0', dtype=torch.float64)
tensor([-2.8112, -3.2799, -3.4734, -3.8676, -3.9493], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8211, device='cuda:0', dtype=torch.float64)
tensor([-2.8689, -3.3123, -3.5063, -3.9377, -4.0097], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0443, device='cuda:0', dtype=torch.float64)
tensor([-2.9290, -3.3511, -3.5331, -4.0179, -4.0750], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6388, device='cuda:0', dtype=torch.float64)
tensor([-2.9891, -3.3945, -3.5656, -4.1028, -4.1349], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7027, device='cuda:0', dtype=torch.float64)
tensor([-3.0538, -3.4416, -3.6015, -4.1939, -4.1956], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9452, device='cuda:0', dtype=torch.float64)
tensor([-3.1286, -3.4963, -3.6468, -4.2989, -4.2663], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8249, device='cuda:0', dtype=torch.float64)
tensor([-3.1990, -3.5482, -3.6903, -4.4002, -4.3338], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3381, device='cuda:0', dtype=torch.float64)
tensor([-3.2658, -3.6016, -3.7389, -4.4983, -4.3972], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4984, device='cuda:0', dtype=torch.float64)
tensor([-3.3295, -3.6538, -3.7872, -4.6036, -4.4732], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3969, device='cuda:0', dtype=torch.float64)
tensor([-3.3985, -3.7049, -3.8335, -4.7040, -4.5513], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7381, device='cuda:0', dtype=torch.float64)
tensor([-3.4784, -3.7602, -3.8743, -4.7992, -4.6393], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6508, device='cuda:0', dtype=torch.float64)
tensor([-3.5683, -3.8262, -3.9267, -4.9137, -4.7437], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5579, device='cuda:0', dtype=torch.float64)
tensor([-3.6634, -3.8937, -3.9770, -5.0313, -4.8569], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3792, device='cuda:0', dtype=torch.float64)
tensor([-3.7589, -3.9618, -4.0140, -5.1444, -4.9894], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8227, device='cuda:0', dtype=torch.float64)
tensor([-3.8510, -4.0364, -4.0530, -5.2571, -5.1461], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3164, device='cuda:0', dtype=torch.float64)
tensor([-3.9492, -4.1221, -4.0993, -5.3965, -5.3211], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4629, device='cuda:0', dtype=torch.float64)
tensor([-4.0481, -4.2150, -4.1504, -5.5502, -5.5212], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2593, device='cuda:0', dtype=torch.float64)
tensor([-4.1585, -4.3200, -4.2121, -5.7138, -5.7454], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4740, device='cuda:0', dtype=torch.float64)
tensor([-4.2753, -4.4304, -4.2765, -5.9020, -6.0102], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5563, device='cuda:0', dtype=torch.float64)
tensor([-4.3830, -4.5367, -4.3464, -6.1102, -6.2896], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4961, device='cuda:0', dtype=torch.float64)
tensor([-4.5076, -4.6483, -4.4231, -6.3785, -6.6710], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3106, device='cuda:0', dtype=torch.float64)
tensor([-4.6373, -4.7574, -4.4976, -6.6704, -7.0925], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3533, device='cuda:0', dtype=torch.float64)
tensor([-4.7656, -4.8716, -4.5774, -7.0228, -7.6876], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5115, device='cuda:0', dtype=torch.float64)
tensor([-4.9108, -4.9783, -4.6651, -7.4403, -8.4751], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3784, device='cuda:0', dtype=torch.float64)
tensor([-5.0625, -5.0926, -4.7604, -7.8423, -9.3545], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3004, device='cuda:0', dtype=torch.float64)
tensor([ -5.2098,  -5.1931,  -4.8498,  -8.2740, -10.1660], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4039, device='cuda:0', dtype=torch.float64)
tensor([ -5.3495,  -5.3178,  -4.9308,  -8.7467, -11.0777], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1904, device='cuda:0', dtype=torch.float64)
tensor([ -5.4870,  -5.4306,  -5.0037,  -9.2109, -11.9122], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3770, device='cuda:0', dtype=torch.float64)
tensor([ -5.6422,  -5.5859,  -5.0819,  -9.8494, -13.0188], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4463, device='cuda:0', dtype=torch.float64)
tensor([ -5.7920,  -5.7731,  -5.1622, -10.5079, -14.0522], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3557, device='cuda:0', dtype=torch.float64)
tensor([ -5.9643,  -6.0091,  -5.2469, -11.1983, -15.2410], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2407, device='cuda:0', dtype=torch.float64)
tensor([ -6.1619,  -6.3654,  -5.3434, -11.9331, -16.5199], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2684, device='cuda:0', dtype=torch.float64)
tensor([ -6.3668,  -6.9593,  -5.4383, -12.7487, -17.8447], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3024, device='cuda:0', dtype=torch.float64)
tensor([ -6.6160,  -7.6592,  -5.5491, -13.4371, -19.0771], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5794, device='cuda:0', dtype=torch.float64)
tensor([ -6.8294,  -8.4143,  -5.6505, -14.0810, -20.1034], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4961, device='cuda:0', dtype=torch.float64)
tensor([ -7.0093,  -9.0687,  -5.7433, -14.6222, -20.7936], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4846, device='cuda:0', dtype=torch.float64)
tensor([ -7.1518,  -9.5373,  -5.8116, -15.0465, -21.3369], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4001, device='cuda:0', dtype=torch.float64)
tensor([ -7.2944,  -9.9447,  -5.8833, -15.4113, -21.6976], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4229, device='cuda:0', dtype=torch.float64)
tensor([ -7.4312, -10.2698,  -5.9579, -15.7265, -22.0869], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6179, device='cuda:0', dtype=torch.float64)
tensor([ -7.5301, -10.8409,  -6.0268, -16.2029, -22.7298], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3744, device='cuda:0', dtype=torch.float64)
tensor([ -7.6024, -11.2811,  -6.0866, -16.5259, -23.2180], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2551, device='cuda:0', dtype=torch.float64)
tensor([ -7.6313, -11.6408,  -6.1361, -16.7790, -23.6303], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3856, device='cuda:0', dtype=torch.float64)
tensor([ -7.6420, -12.0474,  -6.1878, -17.0839, -24.0322], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7050, device='cuda:0', dtype=torch.float64)
tensor([ -7.6648, -12.3496,  -6.2484, -17.3360, -24.4159], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4647, device='cuda:0', dtype=torch.float64)
tensor([ -7.6425, -12.4365,  -6.2818, -17.4915, -24.5962], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3627, device='cuda:0', dtype=torch.float64)
tensor([ -7.5962, -12.5181,  -6.2951, -17.6362, -24.7372], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5361, device='cuda:0', dtype=torch.float64)
tensor([ -7.5116, -12.5359,  -6.2734, -17.7107, -24.5566], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3153, device='cuda:0', dtype=torch.float64)
tensor([ -7.4187, -12.6042,  -6.2480, -17.7967, -24.4326], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4768, device='cuda:0', dtype=torch.float64)
tensor([ -7.3397, -12.7416,  -6.2177, -17.8582, -24.4162], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4513, device='cuda:0', dtype=torch.float64)
tensor([ -7.2842, -12.8745,  -6.1996, -17.9179, -24.4205], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7494, device='cuda:0', dtype=torch.float64)
tensor([ -7.2482, -13.0127,  -6.2072, -17.8872, -24.1221], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5543, device='cuda:0', dtype=torch.float64)
tensor([ -7.1895, -13.1166,  -6.2040, -17.8251, -23.7934], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2178, device='cuda:0', dtype=torch.float64)
tensor([ -7.1608, -13.2265,  -6.2201, -17.7674, -23.3915], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4440, device='cuda:0', dtype=torch.float64)
tensor([ -7.1143, -13.1949,  -6.2126, -17.6421, -22.8263], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3124, device='cuda:0', dtype=torch.float64)
tensor([ -7.0961, -13.2023,  -6.2483, -17.5796, -22.2366], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1767, device='cuda:0', dtype=torch.float64)
tensor([ -7.0835, -13.1338,  -6.3035, -17.4846, -21.6437], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2067, device='cuda:0', dtype=torch.float64)
tensor([ -7.0293, -13.0565,  -6.3796, -17.3213, -20.9258], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3718, device='cuda:0', dtype=torch.float64)
tensor([ -6.9935, -13.1165,  -6.4613, -17.2313, -20.3847], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3910, device='cuda:0', dtype=torch.float64)
tensor([ -6.9951, -13.2587,  -6.5943, -17.2274, -20.1044], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3240, device='cuda:0', dtype=torch.float64)
tensor([ -6.9992, -13.4022,  -6.7140, -17.2211, -19.8193], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2508, device='cuda:0', dtype=torch.float64)
tensor([ -7.0175, -13.7005,  -6.8457, -17.2712, -19.6586], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4917, device='cuda:0', dtype=torch.float64)
tensor([ -7.0222, -13.8923,  -6.9319, -17.2438, -19.4780], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6275, device='cuda:0', dtype=torch.float64)
tensor([ -7.0474, -14.0569,  -7.0419, -17.2538, -19.2862], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2496, device='cuda:0', dtype=torch.float64)
tensor([ -7.0844, -14.2397,  -7.1005, -17.2611, -19.1251], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1977, device='cuda:0', dtype=torch.float64)
tensor([ -7.1531, -14.3248,  -7.1775, -17.2347, -18.9932], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2707, device='cuda:0', dtype=torch.float64)
tensor([ -7.2244, -14.3514,  -7.2515, -17.1726, -18.7601], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3989, device='cuda:0', dtype=torch.float64)
tensor([ -7.2905, -14.3910,  -7.2226, -17.1082, -18.4666], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2507, device='cuda:0', dtype=torch.float64)
tensor([ -7.3626, -14.3797,  -7.1938, -16.9370, -18.0214], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0741, device='cuda:0', dtype=torch.float64)
tensor([ -7.4358, -14.3733,  -7.1706, -16.8042, -17.6692], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3132, device='cuda:0', dtype=torch.float64)
tensor([ -7.4838, -14.1713,  -7.1085, -16.6089, -17.2456], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3886, device='cuda:0', dtype=torch.float64)
tensor([ -7.4992, -13.9712,  -7.1404, -16.3060, -16.6125], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2047, device='cuda:0', dtype=torch.float64)
tensor([ -7.4709, -13.7409,  -7.0940, -15.9843, -15.9630], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5038, device='cuda:0', dtype=torch.float64)
tensor([ -7.4254, -13.5381,  -6.9933, -15.7638, -15.4262], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4216, device='cuda:0', dtype=torch.float64)
tensor([ -7.3793, -13.3528,  -6.8289, -15.5116, -14.9148], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3454, device='cuda:0', dtype=torch.float64)
tensor([ -7.4062, -13.2337,  -6.8608, -15.2910, -14.4926], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4507, device='cuda:0', dtype=torch.float64)
tensor([ -7.4389, -13.0098,  -6.8728, -15.0040, -14.0928], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2133, device='cuda:0', dtype=torch.float64)
tensor([ -7.4488, -12.7685,  -6.8605, -14.8211, -13.7846], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1451, device='cuda:0', dtype=torch.float64)
tensor([ -7.4494, -12.5817,  -6.7973, -14.6608, -13.5904], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5738, device='cuda:0', dtype=torch.float64)
tensor([ -7.4545, -12.5713,  -6.7197, -14.5395, -13.4956], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2343, device='cuda:0', dtype=torch.float64)
tensor([ -7.4286, -12.5152,  -6.6906, -14.3731, -13.3221], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2528, device='cuda:0', dtype=torch.float64)
tensor([ -7.4696, -12.5630,  -6.7117, -14.1848, -13.1335], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2477, device='cuda:0', dtype=torch.float64)
tensor([ -7.5101, -12.6282,  -6.7748, -14.0932, -13.0128], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3956, device='cuda:0', dtype=torch.float64)
tensor([ -7.5103, -12.6482,  -6.6563, -13.9761, -12.9061], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1056, device='cuda:0', dtype=torch.float64)
tensor([ -7.5503, -12.7011,  -6.5866, -13.9179, -12.7940], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3652, device='cuda:0', dtype=torch.float64)
tensor([ -7.6151, -12.7549,  -6.5063, -13.7566, -12.6075], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3215, device='cuda:0', dtype=torch.float64)
tensor([ -7.6932, -12.7608,  -6.4370, -13.6220, -12.5094], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4653, device='cuda:0', dtype=torch.float64)
tensor([ -7.7454, -12.7314,  -6.3803, -13.5107, -12.3217], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2262, device='cuda:0', dtype=torch.float64)
tensor([ -7.7687, -12.7627,  -6.3125, -13.5092, -12.2365], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3586, device='cuda:0', dtype=torch.float64)
tensor([ -7.8136, -12.7008,  -6.2270, -13.5214, -12.2419], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1681, device='cuda:0', dtype=torch.float64)
tensor([ -7.8971, -12.6335,  -6.1999, -13.5860, -12.3362], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4931, device='cuda:0', dtype=torch.float64)
tensor([ -8.0143, -12.5751,  -6.1655, -13.7608, -12.3963], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2032, device='cuda:0', dtype=torch.float64)
tensor([ -8.1752, -12.4921,  -6.1464, -13.9302, -12.4853], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3991, device='cuda:0', dtype=torch.float64)
tensor([ -8.3806, -12.5992,  -6.1588, -14.2486, -12.7581], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6961, device='cuda:0', dtype=torch.float64)
tensor([ -8.6407, -12.7164,  -6.1919, -14.5500, -13.0859], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3952, device='cuda:0', dtype=torch.float64)
tensor([ -9.0188, -12.9588,  -6.3153, -14.8329, -13.4603], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3204, device='cuda:0', dtype=torch.float64)
tensor([ -9.3560, -13.1558,  -6.4532, -15.1243, -13.9895], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4687, device='cuda:0', dtype=torch.float64)
tensor([ -9.6419, -13.3510,  -6.5832, -15.4601, -14.4766], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3116, device='cuda:0', dtype=torch.float64)
tensor([ -9.8658, -13.6909,  -6.6723, -15.9489, -15.1651], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2950, device='cuda:0', dtype=torch.float64)
tensor([ -9.9980, -14.0216,  -6.7100, -16.5223, -15.9729], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2008, device='cuda:0', dtype=torch.float64)
tensor([-10.0854, -14.2839,  -6.7319, -17.0466, -16.6690], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3454, device='cuda:0', dtype=torch.float64)
tensor([-10.1755, -14.5732,  -6.7655, -17.5346, -17.3257], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2392, device='cuda:0', dtype=torch.float64)
tensor([-10.2096, -14.8022,  -6.7552, -17.8833, -17.7389], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1242, device='cuda:0', dtype=torch.float64)
tensor([-10.2490, -15.0872,  -6.7424, -18.2171, -18.3441], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3766, device='cuda:0', dtype=torch.float64)
tensor([-10.2691, -15.4469,  -6.7263, -18.6341, -18.9864], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4980, device='cuda:0', dtype=torch.float64)
tensor([-10.2461, -15.7209,  -6.6974, -18.9523, -19.6455], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3977, device='cuda:0', dtype=torch.float64)
tensor([-10.2402, -16.0467,  -6.6777, -19.3523, -20.4949], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4699, device='cuda:0', dtype=torch.float64)
tensor([-10.1747, -16.3593,  -6.6782, -19.6202, -21.1902], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3465, device='cuda:0', dtype=torch.float64)
tensor([-10.1210, -16.7142,  -6.7208, -20.0893, -22.0148], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2289, device='cuda:0', dtype=torch.float64)
tensor([-10.1517, -17.0833,  -6.8362, -20.4881, -22.7373], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5772, device='cuda:0', dtype=torch.float64)
tensor([-10.2287, -17.2600,  -6.9542, -20.8126, -23.2731], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3404, device='cuda:0', dtype=torch.float64)
tensor([-10.2254, -17.3439,  -7.0472, -21.0692, -23.8716], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2380, device='cuda:0', dtype=torch.float64)
tensor([-10.2405, -17.6436,  -7.1495, -21.4878, -24.4255], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3697, device='cuda:0', dtype=torch.float64)
tensor([-10.2400, -17.9576,  -7.2760, -21.8447, -24.9781], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4051, device='cuda:0', dtype=torch.float64)
tensor([-10.3267, -18.0516,  -7.4826, -22.0561, -25.2643], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4088, device='cuda:0', dtype=torch.float64)
tensor([-10.4376, -18.2658,  -7.6790, -22.3382, -25.7750], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1261, device='cuda:0', dtype=torch.float64)
tensor([-10.5353, -18.2866,  -7.8378, -22.4966, -26.2641], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3053, device='cuda:0', dtype=torch.float64)
tensor([-10.7314, -18.4043,  -7.9832, -22.8298, -26.8922], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2016, device='cuda:0', dtype=torch.float64)
tensor([-10.8825, -18.6174,  -8.0692, -23.1648, -27.7256], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4959, device='cuda:0', dtype=torch.float64)
tensor([-10.9481, -18.7958,  -8.0886, -23.2111, -28.3460], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2903, device='cuda:0', dtype=torch.float64)
tensor([-10.8894, -18.8664,  -7.9914, -23.1154, -28.6833], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3806, device='cuda:0', dtype=torch.float64)
tensor([-10.8793, -19.1991,  -7.9658, -23.1836, -29.0964], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2870, device='cuda:0', dtype=torch.float64)
tensor([-10.8968, -19.5577,  -8.0414, -23.0993, -29.4053], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3035, device='cuda:0', dtype=torch.float64)
tensor([-10.9779, -19.8963,  -8.1397, -23.1334, -29.6432], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3290, device='cuda:0', dtype=torch.float64)
tensor([-11.0929, -20.1728,  -8.3002, -23.0444, -29.6060], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2644, device='cuda:0', dtype=torch.float64)
tensor([-11.1039, -20.4783,  -8.4013, -23.1006, -29.7589], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1058, device='cuda:0', dtype=torch.float64)
tensor([-11.1436, -20.7914,  -8.5557, -23.1830, -29.8432], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1129, device='cuda:0', dtype=torch.float64)
tensor([-11.1732, -21.1804,  -8.6352, -23.4128, -30.0875], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3625, device='cuda:0', dtype=torch.float64)
tensor([-11.1566, -21.3016,  -8.7682, -23.4983, -30.5156], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5407, device='cuda:0', dtype=torch.float64)
tensor([-11.1385, -21.5627,  -8.9294, -23.7224, -31.0856], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2051, device='cuda:0', dtype=torch.float64)
tensor([-11.0809, -21.7922,  -9.1054, -23.9497, -31.4900], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2396, device='cuda:0', dtype=torch.float64)
tensor([-11.0676, -22.2241,  -9.3314, -24.2348, -31.9552], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3124, device='cuda:0', dtype=torch.float64)
tensor([-11.0864, -22.6768,  -9.5932, -24.5631, -32.4868], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4592, device='cuda:0', dtype=torch.float64)
tensor([-11.0413, -23.0246,  -9.8070, -24.7301, -33.0040], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3538, device='cuda:0', dtype=torch.float64)
tensor([-10.9107, -23.4227,  -9.8871, -24.9234, -33.3670], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5479, device='cuda:0', dtype=torch.float64)
tensor([-10.7844, -23.7355, -10.0309, -24.9889, -33.5565], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1803, device='cuda:0', dtype=torch.float64)
tensor([-10.6339, -23.9014, -10.1877, -24.8133, -33.5058], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2114, device='cuda:0', dtype=torch.float64)
tensor([-10.5548, -24.0270, -10.4829, -24.7597, -33.4598], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3448, device='cuda:0', dtype=torch.float64)
tensor([-10.4711, -24.1291, -10.7981, -24.7995, -33.3932], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0463, device='cuda:0', dtype=torch.float64)
tensor([-10.3628, -24.2513, -10.9665, -24.8293, -33.3252], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5447, device='cuda:0', dtype=torch.float64)
tensor([-10.2651, -24.2649, -11.1615, -25.0034, -33.1862], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3228, device='cuda:0', dtype=torch.float64)
tensor([-10.2207, -24.2865, -11.4511, -25.2264, -33.0310], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1832, device='cuda:0', dtype=torch.float64)
tensor([-10.2135, -24.3376, -11.6446, -25.4822, -32.9420], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3477, device='cuda:0', dtype=torch.float64)
tensor([-10.1581, -24.2752, -11.8609, -25.8488, -32.9054], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4119, device='cuda:0', dtype=torch.float64)
tensor([-10.1156, -24.2124, -12.2104, -26.2410, -32.8902], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2338, device='cuda:0', dtype=torch.float64)
tensor([-10.1366, -24.1782, -12.4791, -26.6055, -32.8502], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2156, device='cuda:0', dtype=torch.float64)
tensor([-10.1000, -24.1840, -12.7057, -27.2163, -32.9783], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1008, device='cuda:0', dtype=torch.float64)
tensor([-10.0061, -24.2694, -12.8602, -27.9555, -33.1914], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2027, device='cuda:0', dtype=torch.float64)
tensor([ -9.8913, -24.3169, -12.9060, -28.5645, -33.1914], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1108, device='cuda:0', dtype=torch.float64)
tensor([ -9.7477, -24.2221, -12.8721, -28.8563, -32.9647], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2107, device='cuda:0', dtype=torch.float64)
tensor([ -9.6313, -24.1124, -12.8856, -29.1258, -32.6733], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2621, device='cuda:0', dtype=torch.float64)
tensor([ -9.4796, -23.9438, -12.8182, -29.3214, -32.5380], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3818, device='cuda:0', dtype=torch.float64)
tensor([ -9.4327, -23.9079, -12.8646, -29.4498, -32.3899], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1435, device='cuda:0', dtype=torch.float64)
tensor([ -9.4612, -24.0630, -12.9262, -29.4680, -32.3877], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1584, device='cuda:0', dtype=torch.float64)
tensor([ -9.4600, -24.3664, -12.9779, -29.4538, -32.4728], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2611, device='cuda:0', dtype=torch.float64)
tensor([ -9.4551, -24.5690, -12.9578, -29.3325, -32.4761], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4596, device='cuda:0', dtype=torch.float64)
tensor([ -9.3456, -24.9001, -13.0275, -29.2801, -32.7278], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3021, device='cuda:0', dtype=torch.float64)
tensor([ -9.2810, -25.1248, -13.0472, -29.0389, -32.7008], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3881, device='cuda:0', dtype=torch.float64)
tensor([ -9.2926, -25.2671, -12.9708, -28.7466, -32.6816], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1776, device='cuda:0', dtype=torch.float64)
tensor([ -9.3685, -25.4991, -12.9586, -28.4971, -32.6915], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1018, device='cuda:0', dtype=torch.float64)
tensor([ -9.4303, -25.7259, -12.9384, -28.1608, -32.6190], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1409, device='cuda:0', dtype=torch.float64)
tensor([ -9.5058, -26.0165, -12.8411, -27.8703, -32.6371], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2396, device='cuda:0', dtype=torch.float64)
tensor([ -9.5547, -26.2649, -12.7651, -27.7309, -32.7288], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2208, device='cuda:0', dtype=torch.float64)
tensor([ -9.5466, -26.3982, -12.6549, -27.5775, -32.6285], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2905, device='cuda:0', dtype=torch.float64)
tensor([ -9.5052, -26.7741, -12.5055, -27.5886, -32.6497], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1239, device='cuda:0', dtype=torch.float64)
tensor([ -9.5236, -27.1199, -12.3489, -27.6098, -32.7277], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3888, device='cuda:0', dtype=torch.float64)
tensor([ -9.5502, -27.4118, -12.3313, -27.9554, -32.9881], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2827, device='cuda:0', dtype=torch.float64)
tensor([ -9.6146, -27.7989, -12.3816, -28.3730, -33.0755], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3003, device='cuda:0', dtype=torch.float64)
tensor([ -9.7183, -28.3861, -12.4419, -28.6887, -33.2090], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0924, device='cuda:0', dtype=torch.float64)
tensor([ -9.8404, -28.9734, -12.5114, -29.1651, -33.4883], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3431, device='cuda:0', dtype=torch.float64)
tensor([ -9.9185, -29.6890, -12.5015, -29.3985, -33.6522], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4051, device='cuda:0', dtype=torch.float64)
tensor([-10.0159, -30.3915, -12.5366, -29.5234, -33.7989], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1763, device='cuda:0', dtype=torch.float64)
tensor([-10.0723, -31.0786, -12.4615, -29.5259, -33.9232], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5694, device='cuda:0', dtype=torch.float64)
tensor([-10.0828, -31.4703, -12.4588, -29.6314, -33.8797], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1671, device='cuda:0', dtype=torch.float64)
tensor([-10.1126, -31.8657, -12.4554, -29.6838, -33.9210], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1180, device='cuda:0', dtype=torch.float64)
tensor([-10.1991, -32.3561, -12.4455, -29.6227, -33.9543], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1531, device='cuda:0', dtype=torch.float64)
tensor([-10.3557, -32.7485, -12.4525, -29.5764, -33.9486], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1398, device='cuda:0', dtype=torch.float64)
tensor([-10.5583, -33.0573, -12.5634, -29.6278, -34.0355], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3285, device='cuda:0', dtype=torch.float64)
tensor([-10.6686, -33.3612, -12.6414, -29.6731, -34.1734], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3910, device='cuda:0', dtype=torch.float64)
tensor([-10.8329, -33.7387, -12.8752, -29.8653, -34.6382], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4118, device='cuda:0', dtype=torch.float64)
tensor([-10.9479, -34.0606, -13.0840, -30.1495, -35.3388], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1355, device='cuda:0', dtype=torch.float64)
tensor([-11.0846, -34.2424, -13.2297, -30.4579, -36.0429], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2049, device='cuda:0', dtype=torch.float64)
tensor([-11.1419, -34.3032, -13.2337, -30.6645, -36.7117], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3727, device='cuda:0', dtype=torch.float64)
tensor([-11.1671, -33.9702, -13.0664, -30.8447, -37.0462], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2452, device='cuda:0', dtype=torch.float64)
tensor([-11.1697, -33.6480, -12.9513, -30.9991, -37.3829], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9264, device='cuda:0', dtype=torch.float64)
tensor([-11.1874, -33.5566, -12.9739, -31.2435, -37.9897], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0787, device='cuda:0', dtype=torch.float64)
tensor([-11.3016, -33.6607, -13.0665, -31.5828, -38.5999], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2120, device='cuda:0', dtype=torch.float64)
tensor([-11.3409, -34.0395, -13.2310, -32.0124, -39.2867], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0230, device='cuda:0', dtype=torch.float64)
tensor([-11.3893, -34.4829, -13.3705, -32.6108, -39.9597], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1064, device='cuda:0', dtype=torch.float64)
tensor([-11.3769, -34.9808, -13.4733, -32.9739, -40.3832], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1447, device='cuda:0', dtype=torch.float64)
tensor([-11.3129, -35.3476, -13.5605, -33.3677, -40.6580], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2338, device='cuda:0', dtype=torch.float64)
tensor([-11.2203, -35.6115, -13.7772, -33.5871, -40.6889], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3695, device='cuda:0', dtype=torch.float64)
tensor([-11.0902, -35.8148, -14.2047, -33.8578, -40.6897], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2924, device='cuda:0', dtype=torch.float64)
tensor([-10.9582, -36.0760, -14.6004, -34.2900, -40.8474], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1205, device='cuda:0', dtype=torch.float64)
tensor([-10.8132, -36.5338, -14.8441, -34.8459, -41.1901], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2124, device='cuda:0', dtype=torch.float64)
tensor([-10.7588, -37.0098, -15.1768, -35.2122, -41.5108], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1063, device='cuda:0', dtype=torch.float64)
tensor([-10.6777, -37.5366, -15.3079, -35.6431, -41.7957], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1128, device='cuda:0', dtype=torch.float64)
tensor([-10.5436, -37.9271, -15.3753, -35.9774, -41.9542], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4289, device='cuda:0', dtype=torch.float64)
tensor([-10.3909, -38.2725, -15.3225, -36.0559, -42.1432], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1441, device='cuda:0', dtype=torch.float64)
tensor([-10.2510, -38.5961, -15.2211, -36.2424, -42.2697], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1870, device='cuda:0', dtype=torch.float64)
tensor([-10.1213, -38.9486, -15.0966, -36.5320, -42.4446], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1920, device='cuda:0', dtype=torch.float64)
tensor([-10.0224, -39.2029, -15.0889, -36.9014, -42.6707], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1182, device='cuda:0', dtype=torch.float64)
tensor([ -9.9339, -39.5443, -15.1652, -37.2788, -43.0586], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1698, device='cuda:0', dtype=torch.float64)
tensor([ -9.8148, -39.9294, -15.2334, -37.6322, -43.5938], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3532, device='cuda:0', dtype=torch.float64)
tensor([ -9.6299, -40.3761, -15.2411, -38.0745, -44.1593], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5864, device='cuda:0', dtype=torch.float64)
tensor([ -9.5102, -40.9309, -15.2793, -38.4704, -44.9889], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1989, device='cuda:0', dtype=torch.float64)
tensor([ -9.4411, -41.6664, -15.3685, -38.8020, -45.8455], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2749, device='cuda:0', dtype=torch.float64)
tensor([ -9.3761, -42.4237, -15.5016, -39.1893, -46.6340], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3255, device='cuda:0', dtype=torch.float64)
tensor([ -9.3217, -42.9491, -15.6299, -39.4845, -47.1811], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3091, device='cuda:0', dtype=torch.float64)
tensor([ -9.3034, -43.1572, -15.7530, -39.8071, -47.4978], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3794, device='cuda:0', dtype=torch.float64)
tensor([ -9.2930, -43.1641, -15.8545, -39.9304, -47.5604], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3356, device='cuda:0', dtype=torch.float64)
tensor([ -9.2731, -43.0864, -15.9319, -40.0889, -47.4909], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1369, device='cuda:0', dtype=torch.float64)
tensor([ -9.1732, -42.7245, -15.9273, -40.1161, -47.0699], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1382, device='cuda:0', dtype=torch.float64)
tensor([ -9.0943, -42.6533, -15.8577, -40.3730, -46.9366], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1753, device='cuda:0', dtype=torch.float64)
tensor([ -9.1117, -42.7045, -15.9075, -40.5307, -46.9042], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3102, device='cuda:0', dtype=torch.float64)
tensor([ -9.1503, -43.0529, -15.9739, -40.7409, -46.9434], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1024, device='cuda:0', dtype=torch.float64)
tensor([ -9.2498, -43.5302, -16.0285, -41.0640, -47.2180], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3408, device='cuda:0', dtype=torch.float64)
tensor([ -9.3300, -44.2503, -16.1362, -41.2281, -47.5945], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2226, device='cuda:0', dtype=torch.float64)
tensor([ -9.4130, -45.0479, -16.2361, -41.3945, -47.9998], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2741, device='cuda:0', dtype=torch.float64)
tensor([ -9.4592, -45.6886, -16.3029, -41.4017, -48.2763], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2757, device='cuda:0', dtype=torch.float64)
tensor([ -9.5218, -47.0333, -16.3744, -41.5693, -48.7223], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1559, device='cuda:0', dtype=torch.float64)
tensor([ -9.6344, -48.2429, -16.5193, -41.7826, -49.1439], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1879, device='cuda:0', dtype=torch.float64)
tensor([ -9.7845, -49.0949, -16.7537, -42.2087, -49.4630], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4643, device='cuda:0', dtype=torch.float64)
tensor([-10.0484, -49.9886, -17.1829, -42.5420, -49.6924], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3753, device='cuda:0', dtype=torch.float64)
tensor([-10.2931, -50.2830, -17.5467, -42.8562, -49.7212], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3008, device='cuda:0', dtype=torch.float64)
tensor([-10.4913, -50.5240, -17.7927, -43.1088, -49.6025], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1784, device='cuda:0', dtype=torch.float64)
tensor([-10.6335, -50.1719, -17.9826, -43.0135, -49.4166], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0835, device='cuda:0', dtype=torch.float64)
tensor([-10.8450, -50.2179, -18.3777, -43.0882, -49.5482], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0339, device='cuda:0', dtype=torch.float64)
tensor([-11.0807, -50.2586, -18.7470, -43.1264, -49.6428], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3500, device='cuda:0', dtype=torch.float64)
tensor([-11.2082, -49.9763, -18.9548, -43.1822, -49.6057], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4786, device='cuda:0', dtype=torch.float64)
tensor([-11.2842, -49.7878, -19.0756, -43.4812, -49.7812], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3358, device='cuda:0', dtype=torch.float64)
tensor([-11.3456, -49.5302, -19.2239, -43.4839, -49.7674], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3139, device='cuda:0', dtype=torch.float64)
tensor([-11.4283, -49.4327, -19.3604, -43.6204, -49.9072], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4841, device='cuda:0', dtype=torch.float64)
tensor([-11.5148, -49.2408, -19.7151, -43.9056, -50.3057], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3382, device='cuda:0', dtype=torch.float64)
tensor([-11.5970, -49.1842, -19.9044, -44.4140, -50.7877], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2592, device='cuda:0', dtype=torch.float64)
tensor([-11.5744, -49.2818, -20.0223, -45.1409, -51.3666], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4124, device='cuda:0', dtype=torch.float64)
tensor([-11.5258, -49.1431, -20.1657, -45.7514, -51.7936], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1259, device='cuda:0', dtype=torch.float64)
tensor([-11.5554, -49.2348, -20.2889, -46.5316, -52.4487], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1738, device='cuda:0', dtype=torch.float64)
tensor([-11.6028, -49.3443, -20.5352, -47.4036, -53.2206], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1430, device='cuda:0', dtype=torch.float64)
tensor([-11.7567, -49.5487, -20.8918, -48.3169, -54.1603], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4419, device='cuda:0', dtype=torch.float64)
tensor([-11.9361, -49.8383, -21.4228, -48.9265, -54.8429], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1189, device='cuda:0', dtype=torch.float64)
tensor([-12.1997, -49.9144, -22.1158, -49.3296, -55.3428], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2952, device='cuda:0', dtype=torch.float64)
tensor([-12.4645, -50.1734, -22.7423, -49.8512, -56.1107], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2362, device='cuda:0', dtype=torch.float64)
tensor([-12.6826, -49.9099, -23.1885, -50.3368, -56.6131], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2220, device='cuda:0', dtype=torch.float64)
tensor([-12.9373, -49.8489, -23.6472, -50.8310, -57.0598], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2025, device='cuda:0', dtype=torch.float64)
tensor([-13.1584, -49.6044, -24.1896, -51.4463, -57.5255], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1013, device='cuda:0', dtype=torch.float64)
tensor([-13.3591, -49.3418, -24.8209, -51.9347, -57.7577], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2841, device='cuda:0', dtype=torch.float64)
tensor([-13.5029, -48.8932, -25.5370, -52.3248, -57.8421], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2909, device='cuda:0', dtype=torch.float64)
tensor([-13.5841, -48.6581, -25.8211, -52.8271, -58.2448], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9762, device='cuda:0', dtype=torch.float64)
tensor([-13.6315, -48.5067, -26.0197, -53.3599, -58.5854], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9895, device='cuda:0', dtype=torch.float64)
tensor([-13.6352, -48.4662, -26.2121, -53.8066, -58.9578], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1038, device='cuda:0', dtype=torch.float64)
tensor([-13.5901, -48.5146, -26.5688, -54.2890, -59.4674], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2563, device='cuda:0', dtype=torch.float64)
tensor([-13.5622, -48.6529, -26.9721, -54.7655, -59.8132], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0647, device='cuda:0', dtype=torch.float64)
tensor([-13.5155, -49.0000, -27.2020, -55.0942, -60.1190], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3610, device='cuda:0', dtype=torch.float64)
tensor([-13.3586, -49.5197, -27.3763, -55.2225, -60.3898], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1811, device='cuda:0', dtype=torch.float64)
tensor([-13.2509, -49.8096, -27.3999, -55.3466, -60.6688], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1584, device='cuda:0', dtype=torch.float64)
tensor([-13.0894, -49.9482, -27.3829, -55.3669, -60.7415], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2336, device='cuda:0', dtype=torch.float64)
tensor([-12.8801, -49.9677, -27.2275, -55.4078, -60.5788], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9724, device='cuda:0', dtype=torch.float64)
tensor([-12.7833, -50.0635, -27.1086, -55.5371, -60.4515], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1729, device='cuda:0', dtype=torch.float64)
tensor([-12.7562, -49.9122, -27.0634, -55.7591, -60.2285], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1886, device='cuda:0', dtype=torch.float64)
tensor([-12.6567, -49.4853, -27.0763, -55.5640, -59.7526], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2182, device='cuda:0', dtype=torch.float64)
tensor([-12.5801, -48.9580, -27.0349, -55.3066, -59.1310], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1568, device='cuda:0', dtype=torch.float64)
tensor([-12.5566, -48.7216, -27.1122, -55.1424, -58.6773], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2238, device='cuda:0', dtype=torch.float64)
tensor([-12.6427, -48.6306, -27.2698, -55.3272, -58.4761], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1607, device='cuda:0', dtype=torch.float64)
tensor([-12.6889, -48.3667, -27.2739, -55.4313, -58.0761], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2418, device='cuda:0', dtype=torch.float64)
tensor([-12.6664, -47.9222, -27.3292, -55.3697, -57.5470], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1464, device='cuda:0', dtype=torch.float64)
tensor([-12.6458, -47.2235, -27.3625, -55.1655, -56.9094], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2226, device='cuda:0', dtype=torch.float64)
tensor([-12.5691, -46.3805, -27.4975, -54.9161, -56.2908], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1842, device='cuda:0', dtype=torch.float64)
tensor([-12.5143, -45.7721, -27.5236, -54.7594, -55.8897], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2094, device='cuda:0', dtype=torch.float64)
tensor([-12.4144, -45.0557, -27.4231, -54.4120, -55.3408], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2264, device='cuda:0', dtype=torch.float64)
tensor([-12.2571, -44.4945, -27.2501, -54.2125, -54.9269], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9310, device='cuda:0', dtype=torch.float64)
tensor([-12.1208, -44.0737, -27.1454, -54.0319, -54.6594], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1986, device='cuda:0', dtype=torch.float64)
tensor([-12.0442, -43.6158, -27.0175, -53.9023, -54.4630], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1714, device='cuda:0', dtype=torch.float64)
tensor([-11.9886, -43.1013, -27.0038, -53.6865, -54.1866], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2456, device='cuda:0', dtype=torch.float64)
tensor([-11.9539, -42.7509, -27.0087, -53.6577, -54.1925], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0832, device='cuda:0', dtype=torch.float64)
tensor([-11.9323, -42.6273, -27.0566, -53.7619, -54.3460], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1117, device='cuda:0', dtype=torch.float64)
tensor([-11.8648, -42.6660, -27.0279, -53.8626, -54.5817], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3261, device='cuda:0', dtype=torch.float64)
tensor([-11.8006, -42.6114, -27.0232, -53.7436, -54.8411], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1712, device='cuda:0', dtype=torch.float64)
tensor([-11.7528, -42.6459, -27.1593, -53.4474, -55.0160], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1085, device='cuda:0', dtype=torch.float64)
tensor([-11.7341, -42.4005, -27.2214, -53.2361, -55.0727], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3144, device='cuda:0', dtype=torch.float64)
tensor([-11.7060, -41.9030, -27.2714, -52.6973, -54.7921], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1720, device='cuda:0', dtype=torch.float64)
tensor([-11.6751, -41.8241, -27.2864, -52.3961, -54.6833], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1421, device='cuda:0', dtype=torch.float64)
tensor([-11.6938, -41.9468, -27.4124, -52.1821, -54.6881], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9157, device='cuda:0', dtype=torch.float64)
tensor([-11.7238, -42.0844, -27.4983, -51.9073, -54.5820], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0677, device='cuda:0', dtype=torch.float64)
tensor([-11.6937, -42.2411, -27.5886, -51.5764, -54.4345], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0661, device='cuda:0', dtype=torch.float64)
tensor([-11.6735, -42.5495, -27.5220, -51.4596, -54.4188], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0664, device='cuda:0', dtype=torch.float64)
tensor([-11.6949, -42.7879, -27.5354, -51.2250, -54.3202], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1810, device='cuda:0', dtype=torch.float64)
tensor([-11.6579, -43.0128, -27.5719, -50.8118, -54.0151], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3829, device='cuda:0', dtype=torch.float64)
tensor([-11.7437, -43.6735, -27.5500, -50.7374, -54.0210], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2325, device='cuda:0', dtype=torch.float64)
tensor([-11.8409, -44.0834, -27.4098, -50.5887, -53.9638], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9454, device='cuda:0', dtype=torch.float64)
tensor([-11.9144, -44.4477, -27.2655, -50.4322, -53.8464], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2663, device='cuda:0', dtype=torch.float64)
tensor([-11.9263, -44.6869, -26.9591, -50.4296, -53.8318], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0694, device='cuda:0', dtype=torch.float64)
tensor([-11.9190, -44.8892, -26.5701, -50.3032, -53.6677], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1103, device='cuda:0', dtype=torch.float64)
tensor([-11.9849, -45.3991, -26.2748, -50.3784, -53.7647], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0156, device='cuda:0', dtype=torch.float64)
tensor([-12.1917, -45.7630, -26.0231, -50.3119, -53.8100], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0615, device='cuda:0', dtype=torch.float64)
tensor([-12.3381, -46.4897, -25.8958, -50.3711, -54.0128], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0812, device='cuda:0', dtype=torch.float64)
tensor([-12.5584, -46.9220, -26.0548, -50.2452, -53.9254], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0278, device='cuda:0', dtype=torch.float64)
tensor([-12.7867, -47.5243, -26.2140, -49.9731, -53.8718], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0526, device='cuda:0', dtype=torch.float64)
tensor([-12.9920, -48.2212, -26.5488, -49.7963, -53.9206], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1251, device='cuda:0', dtype=torch.float64)
tensor([-13.1680, -48.6567, -26.9622, -49.8314, -54.0194], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1627, device='cuda:0', dtype=torch.float64)
tensor([-13.3802, -49.3574, -27.3435, -50.0686, -54.4276], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2178, device='cuda:0', dtype=torch.float64)
tensor([-13.6190, -49.8094, -27.7353, -50.0383, -54.7471], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1160, device='cuda:0', dtype=torch.float64)
tensor([-13.8296, -50.2527, -27.9486, -49.9231, -55.0628], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0790, device='cuda:0', dtype=torch.float64)
tensor([-14.0434, -50.5797, -28.0881, -49.7380, -55.3344], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8380, device='cuda:0', dtype=torch.float64)
tensor([-14.1232, -50.8881, -28.2119, -49.7054, -55.5487], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8979, device='cuda:0', dtype=torch.float64)
tensor([-14.2294, -51.2371, -28.2682, -49.8010, -55.7867], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2069, device='cuda:0', dtype=torch.float64)
tensor([-14.3128, -51.5712, -28.4367, -49.7936, -56.0874], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1745, device='cuda:0', dtype=torch.float64)
tensor([-14.3774, -51.8849, -28.6665, -49.8541, -56.3068], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2686, device='cuda:0', dtype=torch.float64)
tensor([-14.3899, -52.3447, -29.0381, -49.9089, -56.5989], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0802, device='cuda:0', dtype=torch.float64)
tensor([-14.2787, -52.6622, -29.0930, -49.9032, -56.8675], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9767, device='cuda:0', dtype=torch.float64)
tensor([-14.0986, -52.7161, -29.1166, -49.7730, -56.8946], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2253, device='cuda:0', dtype=torch.float64)
tensor([-13.9938, -52.7022, -29.1452, -49.8121, -56.9814], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0984, device='cuda:0', dtype=torch.float64)
tensor([-13.9306, -52.4985, -29.0918, -50.0047, -57.0710], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3268, device='cuda:0', dtype=torch.float64)
tensor([-13.7576, -52.2350, -28.9337, -50.1531, -57.2147], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0471, device='cuda:0', dtype=torch.float64)
tensor([-13.6202, -52.0499, -28.8661, -50.3188, -57.3381], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0308, device='cuda:0', dtype=torch.float64)
tensor([-13.5599, -51.7292, -28.9058, -50.2768, -57.2836], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8281, device='cuda:0', dtype=torch.float64)
tensor([-13.4636, -51.4720, -28.8810, -50.1937, -57.2947], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0331, device='cuda:0', dtype=torch.float64)
tensor([-13.3451, -51.0795, -28.7801, -50.1802, -57.2234], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0613, device='cuda:0', dtype=torch.float64)
tensor([-13.1907, -50.7144, -28.7713, -50.0865, -56.9967], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9327, device='cuda:0', dtype=torch.float64)
tensor([-13.0851, -50.4530, -28.7470, -50.0801, -56.8655], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9840, device='cuda:0', dtype=torch.float64)
tensor([-12.9458, -50.3761, -28.8046, -50.1849, -56.7978], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9403, device='cuda:0', dtype=torch.float64)
tensor([-12.7536, -50.5055, -28.7844, -50.3324, -56.8503], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9044, device='cuda:0', dtype=torch.float64)
tensor([-12.5411, -50.5840, -28.9520, -50.2879, -56.6148], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1659, device='cuda:0', dtype=torch.float64)
tensor([-12.4607, -51.0519, -29.2547, -50.4674, -56.8157], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2274, device='cuda:0', dtype=torch.float64)
tensor([-12.4720, -51.5747, -29.5709, -50.7149, -57.3157], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0019, device='cuda:0', dtype=torch.float64)
tensor([-12.4191, -51.8383, -29.8155, -50.9081, -57.8431], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1305, device='cuda:0', dtype=torch.float64)
tensor([-12.3115, -51.9259, -30.0319, -51.0019, -58.2041], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0738, device='cuda:0', dtype=torch.float64)
tensor([-12.2374, -52.2813, -30.0184, -51.1698, -58.6358], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9913, device='cuda:0', dtype=torch.float64)
tensor([-12.1268, -52.7095, -30.1097, -51.2794, -59.0402], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2086, device='cuda:0', dtype=torch.float64)
tensor([-12.0178, -53.3027, -30.3259, -51.3145, -59.5672], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9907, device='cuda:0', dtype=torch.float64)
tensor([-11.8944, -53.5855, -30.5335, -51.3701, -59.9035], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9585, device='cuda:0', dtype=torch.float64)
tensor([-11.8202, -53.8683, -30.6780, -51.5458, -60.3512], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0913, device='cuda:0', dtype=torch.float64)
tensor([-11.6927, -53.9809, -30.7433, -51.8419, -60.8379], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0366, device='cuda:0', dtype=torch.float64)
tensor([-11.6541, -54.0758, -30.9202, -52.0487, -61.3479], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0007, device='cuda:0', dtype=torch.float64)
tensor([-11.5654, -54.0249, -30.9517, -52.1752, -61.8332], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1313, device='cuda:0', dtype=torch.float64)
tensor([-11.4415, -53.7971, -30.9880, -52.3889, -62.2235], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8889, device='cuda:0', dtype=torch.float64)
tensor([-11.2877, -53.6178, -31.0290, -52.4125, -62.4817], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9306, device='cuda:0', dtype=torch.float64)
tensor([-11.1118, -53.2427, -30.9608, -52.4405, -62.6495], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0079, device='cuda:0', dtype=torch.float64)
tensor([-10.8938, -52.6441, -31.0378, -52.2045, -62.5067], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9704, device='cuda:0', dtype=torch.float64)
tensor([-10.6973, -51.9518, -31.1369, -51.9868, -62.3320], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0382, device='cuda:0', dtype=torch.float64)
tensor([-10.4871, -51.2215, -31.1272, -51.6495, -62.0318], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0875, device='cuda:0', dtype=torch.float64)
tensor([-10.2754, -50.4201, -31.0385, -51.1742, -61.3193], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1463, device='cuda:0', dtype=torch.float64)
tensor([-10.1101, -49.6202, -31.0172, -50.8592, -60.7251], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1216, device='cuda:0', dtype=torch.float64)
tensor([ -9.9601, -48.7702, -30.8706, -50.4677, -60.2341], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9445, device='cuda:0', dtype=torch.float64)
tensor([ -9.8583, -47.7130, -30.7530, -49.9806, -59.5798], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9758, device='cuda:0', dtype=torch.float64)
tensor([ -9.7562, -46.8958, -30.6936, -49.3385, -59.0631], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0654, device='cuda:0', dtype=torch.float64)
tensor([ -9.6752, -45.8811, -30.6522, -48.7652, -58.5421], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9878, device='cuda:0', dtype=torch.float64)
tensor([ -9.5724, -44.8596, -30.5445, -48.2607, -58.0713], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8707, device='cuda:0', dtype=torch.float64)
tensor([ -9.4584, -44.0366, -30.3959, -47.8871, -57.7392], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1579, device='cuda:0', dtype=torch.float64)
tensor([ -9.3307, -43.1823, -30.1322, -47.4682, -57.3571], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8961, device='cuda:0', dtype=torch.float64)
tensor([ -9.2499, -42.7692, -29.9691, -47.3374, -57.2506], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0577, device='cuda:0', dtype=torch.float64)
tensor([ -9.1671, -42.2387, -29.9616, -47.2672, -56.9545], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0710, device='cuda:0', dtype=torch.float64)
tensor([ -9.1175, -42.0032, -29.9541, -47.2562, -56.8436], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9171, device='cuda:0', dtype=torch.float64)
tensor([ -9.1039, -41.8515, -29.9308, -47.2991, -56.9159], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9159, device='cuda:0', dtype=torch.float64)
tensor([ -9.0906, -41.7192, -29.9563, -47.3542, -56.9289], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1492, device='cuda:0', dtype=torch.float64)
tensor([ -9.1072, -41.8552, -29.9589, -47.7139, -57.1450], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9792, device='cuda:0', dtype=torch.float64)
tensor([ -9.1239, -42.0426, -29.8159, -48.0028, -57.2738], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9485, device='cuda:0', dtype=torch.float64)
tensor([ -9.1435, -41.9827, -29.7718, -48.1747, -57.3313], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9954, device='cuda:0', dtype=torch.float64)
tensor([ -9.1622, -41.8538, -29.8559, -48.3265, -57.2177], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1816, device='cuda:0', dtype=torch.float64)
tensor([ -9.1637, -41.7864, -29.8446, -48.4965, -57.1840], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9185, device='cuda:0', dtype=torch.float64)
tensor([ -9.1319, -42.0802, -29.8612, -48.6946, -57.2662], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9616, device='cuda:0', dtype=torch.float64)
tensor([ -9.0853, -42.4906, -29.9174, -48.9224, -57.3961], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9385, device='cuda:0', dtype=torch.float64)
tensor([ -9.0277, -42.8511, -29.9115, -49.2058, -57.4374], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9259, device='cuda:0', dtype=torch.float64)
tensor([ -8.9914, -42.9984, -29.7302, -49.3996, -57.4155], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9772, device='cuda:0', dtype=torch.float64)
tensor([ -8.9713, -42.9919, -29.5289, -49.6192, -57.4361], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9400, device='cuda:0', dtype=torch.float64)
tensor([ -8.9597, -42.9979, -29.4746, -49.6882, -57.3167], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9742, device='cuda:0', dtype=torch.float64)
tensor([ -8.9528, -42.7594, -29.4655, -49.6345, -57.0679], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9462, device='cuda:0', dtype=torch.float64)
tensor([ -8.9143, -42.6259, -29.4146, -49.4222, -56.6870], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8322, device='cuda:0', dtype=torch.float64)
tensor([ -8.8510, -42.5666, -29.4100, -49.2911, -56.2421], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0469, device='cuda:0', dtype=torch.float64)
tensor([ -8.7862, -42.5787, -29.3878, -49.4442, -56.0617], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8229, device='cuda:0', dtype=torch.float64)
tensor([ -8.7010, -42.4689, -29.4251, -49.3624, -55.7785], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9158, device='cuda:0', dtype=torch.float64)
tensor([ -8.6078, -42.2814, -29.4150, -49.2624, -55.5123], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0522, device='cuda:0', dtype=torch.float64)
tensor([ -8.5260, -41.9257, -29.3899, -49.1002, -55.0470], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9649, device='cuda:0', dtype=torch.float64)
tensor([ -8.4406, -41.7256, -29.4786, -49.0147, -54.7170], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8301, device='cuda:0', dtype=torch.float64)
tensor([ -8.3577, -41.4416, -29.4003, -48.8142, -54.3308], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1051, device='cuda:0', dtype=torch.float64)
tensor([ -8.2438, -41.3816, -29.3827, -48.6556, -53.8182], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0389, device='cuda:0', dtype=torch.float64)
tensor([ -8.1400, -41.4782, -29.2223, -48.4276, -53.4224], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0208, device='cuda:0', dtype=torch.float64)
tensor([ -8.0624, -41.6118, -28.9837, -48.1969, -53.0607], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9749, device='cuda:0', dtype=torch.float64)
tensor([ -7.9694, -42.0007, -28.6192, -47.9684, -52.9001], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0994, device='cuda:0', dtype=torch.float64)
tensor([ -7.8726, -42.2662, -28.2373, -47.6879, -52.6931], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7616, device='cuda:0', dtype=torch.float64)
tensor([ -7.7825, -42.4878, -27.9280, -47.4819, -52.5836], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9834, device='cuda:0', dtype=torch.float64)
tensor([ -7.7117, -42.5715, -27.7819, -47.2532, -52.3361], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0849, device='cuda:0', dtype=torch.float64)
tensor([ -7.6440, -42.3756, -27.5911, -47.0177, -52.1100], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9452, device='cuda:0', dtype=torch.float64)
tensor([ -7.5944, -42.1650, -27.2800, -46.9830, -52.0584], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0095, device='cuda:0', dtype=torch.float64)
tensor([ -7.5632, -42.0602, -27.0326, -47.0138, -52.0524], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8235, device='cuda:0', dtype=torch.float64)
tensor([ -7.5227, -41.9667, -26.9460, -46.9977, -51.9169], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8878, device='cuda:0', dtype=torch.float64)
tensor([ -7.4814, -41.6367, -26.9175, -46.8267, -51.6368], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8516, device='cuda:0', dtype=torch.float64)
tensor([ -7.4655, -41.2847, -26.9672, -46.6960, -51.3331], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9544, device='cuda:0', dtype=torch.float64)
tensor([ -7.4547, -40.8656, -27.0019, -46.6779, -50.9781], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1767, device='cuda:0', dtype=torch.float64)
tensor([ -7.4886, -40.6876, -27.0782, -46.7729, -51.0569], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9693, device='cuda:0', dtype=torch.float64)
tensor([ -7.5096, -40.4686, -27.1281, -46.6435, -50.9277], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9032, device='cuda:0', dtype=torch.float64)
tensor([ -7.4966, -40.2342, -27.0397, -46.5218, -50.6786], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8830, device='cuda:0', dtype=torch.float64)
tensor([ -7.4677, -40.1118, -26.8638, -46.3716, -50.4515], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9120, device='cuda:0', dtype=torch.float64)
tensor([ -7.4455, -40.0376, -26.7961, -46.2420, -50.2788], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8414, device='cuda:0', dtype=torch.float64)
tensor([ -7.4202, -39.7873, -26.7707, -46.1895, -50.0389], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8568, device='cuda:0', dtype=torch.float64)
tensor([ -7.3797, -39.4348, -26.6590, -45.9832, -49.8257], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9243, device='cuda:0', dtype=torch.float64)
tensor([ -7.3622, -39.0435, -26.5571, -45.6442, -49.5961], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0064, device='cuda:0', dtype=torch.float64)
tensor([ -7.3683, -38.7212, -26.5140, -45.3757, -49.4748], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0046, device='cuda:0', dtype=torch.float64)
tensor([ -7.3764, -38.4260, -26.3317, -44.9848, -49.2977], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8847, device='cuda:0', dtype=torch.float64)
tensor([ -7.3726, -38.4755, -26.1915, -44.8612, -49.2646], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7838, device='cuda:0', dtype=torch.float64)
tensor([ -7.3714, -38.3651, -26.1268, -44.7391, -49.2843], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9494, device='cuda:0', dtype=torch.float64)
tensor([ -7.3693, -38.6725, -25.8208, -44.6778, -49.5686], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8594, device='cuda:0', dtype=torch.float64)
tensor([ -7.3654, -39.0014, -25.6468, -44.7838, -49.8741], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8207, device='cuda:0', dtype=torch.float64)
tensor([ -7.3574, -39.0492, -25.3838, -44.7257, -50.0028], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7434, device='cuda:0', dtype=torch.float64)
tensor([ -7.3678, -39.0074, -25.1830, -44.7423, -50.1241], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8165, device='cuda:0', dtype=torch.float64)
tensor([ -7.3724, -39.0300, -24.9516, -44.9718, -50.2518], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9035, device='cuda:0', dtype=torch.float64)
tensor([ -7.4042, -39.2159, -24.9278, -45.3458, -50.4257], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7604, device='cuda:0', dtype=torch.float64)
tensor([ -7.4223, -39.4344, -24.8846, -45.8232, -50.7015], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9846, device='cuda:0', dtype=torch.float64)
tensor([ -7.4703, -39.7982, -24.8514, -46.3198, -51.0770], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9792, device='cuda:0', dtype=torch.float64)
tensor([ -7.5207, -40.1517, -24.7549, -46.8173, -51.6523], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9638, device='cuda:0', dtype=torch.float64)
tensor([ -7.5644, -40.5110, -24.7938, -47.3755, -52.1574], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9260, device='cuda:0', dtype=torch.float64)
tensor([ -7.6394, -40.9563, -24.9493, -47.9027, -52.7922], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7709, device='cuda:0', dtype=torch.float64)
tensor([ -7.7222, -41.5219, -25.0233, -48.4740, -53.4144], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8896, device='cuda:0', dtype=torch.float64)
tensor([ -7.8266, -42.0456, -25.1875, -49.0361, -54.0377], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0324, device='cuda:0', dtype=torch.float64)
tensor([ -7.9222, -42.6483, -25.0892, -49.3407, -54.6880], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8407, device='cuda:0', dtype=torch.float64)
tensor([ -7.9689, -43.0987, -24.8185, -49.3984, -55.0171], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9052, device='cuda:0', dtype=torch.float64)
tensor([ -8.0070, -43.5479, -24.5711, -49.3725, -55.4409], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9913, device='cuda:0', dtype=torch.float64)
tensor([ -8.0573, -44.0423, -24.3449, -49.5604, -56.0904], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8436, device='cuda:0', dtype=torch.float64)
tensor([ -8.1108, -44.5817, -24.1540, -49.8558, -56.7018], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7806, device='cuda:0', dtype=torch.float64)
tensor([ -8.1760, -45.0741, -24.0493, -49.9080, -57.2592], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9418, device='cuda:0', dtype=torch.float64)
tensor([ -8.2285, -45.3633, -23.9768, -50.0604, -57.6327], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8781, device='cuda:0', dtype=torch.float64)
tensor([ -8.3129, -45.7554, -23.8891, -50.4133, -58.1718], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9635, device='cuda:0', dtype=torch.float64)
tensor([ -8.3524, -46.0796, -23.8482, -50.3399, -58.4217], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8961, device='cuda:0', dtype=torch.float64)
tensor([ -8.3688, -46.4850, -23.9274, -50.3030, -58.5195], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9444, device='cuda:0', dtype=torch.float64)
tensor([ -8.3791, -46.9651, -23.9571, -50.5552, -58.6843], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0134, device='cuda:0', dtype=torch.float64)
tensor([ -8.3880, -47.2815, -24.0195, -50.5336, -58.7572], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9987, device='cuda:0', dtype=torch.float64)
tensor([ -8.3755, -47.5111, -24.1889, -50.3675, -58.7263], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8337, device='cuda:0', dtype=torch.float64)
tensor([ -8.3675, -47.6682, -24.2784, -50.1506, -58.7228], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8247, device='cuda:0', dtype=torch.float64)
tensor([ -8.3624, -47.9283, -24.2667, -49.8626, -58.7839], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7029, device='cuda:0', dtype=torch.float64)
tensor([ -8.3709, -48.2371, -24.3235, -49.6860, -58.9597], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8321, device='cuda:0', dtype=torch.float64)
tensor([ -8.3434, -48.4427, -24.2941, -49.5141, -59.0295], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1180, device='cuda:0', dtype=torch.float64)
tensor([ -8.3471, -48.5195, -24.2788, -49.8114, -59.4012], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8249, device='cuda:0', dtype=torch.float64)
tensor([ -8.3676, -48.4848, -24.1539, -50.3032, -59.7894], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8034, device='cuda:0', dtype=torch.float64)
tensor([ -8.3567, -48.4222, -23.8759, -50.6065, -60.0776], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0562, device='cuda:0', dtype=torch.float64)
tensor([ -8.3306, -48.4385, -23.5846, -50.7891, -60.2773], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9556, device='cuda:0', dtype=torch.float64)
tensor([ -8.3357, -48.5540, -23.3611, -51.1982, -60.5702], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8870, device='cuda:0', dtype=torch.float64)
tensor([ -8.3265, -48.6352, -23.2162, -51.2914, -60.7849], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7559, device='cuda:0', dtype=torch.float64)
tensor([ -8.3083, -48.8944, -23.1622, -51.3894, -60.9512], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7947, device='cuda:0', dtype=torch.float64)
tensor([ -8.2831, -49.1197, -23.2177, -51.5054, -60.9709], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8590, device='cuda:0', dtype=torch.float64)
tensor([ -8.2645, -49.3347, -23.1846, -51.5303, -60.9738], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8341, device='cuda:0', dtype=torch.float64)
tensor([ -8.2486, -49.4066, -23.0550, -51.5352, -60.8256], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8733, device='cuda:0', dtype=torch.float64)
tensor([ -8.2307, -49.3926, -22.8374, -51.4338, -60.5629], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9487, device='cuda:0', dtype=torch.float64)
tensor([ -8.1848, -49.4387, -22.5983, -51.4182, -60.2729], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7738, device='cuda:0', dtype=torch.float64)
tensor([ -8.1273, -49.2412, -22.4403, -51.2675, -59.8161], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8792, device='cuda:0', dtype=torch.float64)
tensor([ -8.1366, -49.1779, -22.2454, -51.2110, -59.6263], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7700, device='cuda:0', dtype=torch.float64)
tensor([ -8.1788, -49.3018, -22.1477, -51.2122, -59.5517], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8674, device='cuda:0', dtype=torch.float64)
tensor([ -8.2079, -49.4288, -22.0244, -51.1744, -59.4408], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9347, device='cuda:0', dtype=torch.float64)
tensor([ -8.2375, -49.5484, -21.8958, -51.2120, -59.3149], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8167, device='cuda:0', dtype=torch.float64)
tensor([ -8.2908, -49.5783, -21.8441, -51.3048, -59.1142], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7492, device='cuda:0', dtype=torch.float64)
tensor([ -8.3868, -49.5904, -21.8259, -51.2667, -58.9175], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8678, device='cuda:0', dtype=torch.float64)
tensor([ -8.4428, -49.6251, -21.7275, -51.1141, -58.6742], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8623, device='cuda:0', dtype=torch.float64)
tensor([ -8.4669, -49.6221, -21.6562, -50.8391, -58.2691], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9241, device='cuda:0', dtype=torch.float64)
tensor([ -8.4808, -49.6203, -21.4914, -50.5513, -58.0250], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8108, device='cuda:0', dtype=torch.float64)
tensor([ -8.5717, -49.6058, -21.3966, -50.3216, -57.7947], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8428, device='cuda:0', dtype=torch.float64)
tensor([ -8.6712, -49.2813, -21.2384, -49.9983, -57.5271], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7087, device='cuda:0', dtype=torch.float64)
tensor([ -8.7244, -48.9077, -21.1520, -49.6726, -57.1621], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7982, device='cuda:0', dtype=torch.float64)
tensor([ -8.7295, -48.1394, -21.0496, -49.1187, -56.5611], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7844, device='cuda:0', dtype=torch.float64)
tensor([ -8.7683, -47.4762, -20.9175, -48.6129, -55.8950], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8806, device='cuda:0', dtype=torch.float64)
tensor([ -8.8493, -46.8347, -20.8348, -48.3515, -55.4187], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8847, device='cuda:0', dtype=torch.float64)
tensor([ -8.9398, -46.3392, -20.7531, -48.0472, -54.9051], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8852, device='cuda:0', dtype=torch.float64)
tensor([ -9.0565, -45.8094, -20.6286, -47.8891, -54.4430], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7678, device='cuda:0', dtype=torch.float64)
tensor([ -9.1503, -45.4794, -20.5165, -47.9678, -54.1139], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8274, device='cuda:0', dtype=torch.float64)
tensor([ -9.2615, -45.1223, -20.5233, -48.0922, -53.8497], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8421, device='cuda:0', dtype=torch.float64)
tensor([ -9.2953, -44.6475, -20.5902, -48.2121, -53.4446], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7057, device='cuda:0', dtype=torch.float64)
tensor([ -9.3265, -44.3250, -20.6924, -48.2996, -53.1427], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7526, device='cuda:0', dtype=torch.float64)
tensor([ -9.3446, -44.0824, -20.7604, -48.2971, -52.8525], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8416, device='cuda:0', dtype=torch.float64)
tensor([ -9.2856, -43.5984, -20.8287, -48.3438, -52.4936], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8881, device='cuda:0', dtype=torch.float64)
tensor([ -9.2931, -43.0763, -20.9100, -48.4144, -52.2198], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7380, device='cuda:0', dtype=torch.float64)
tensor([ -9.3104, -42.6301, -21.1097, -48.4634, -51.9177], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7380, device='cuda:0', dtype=torch.float64)
tensor([ -9.3276, -42.1693, -21.3619, -48.5112, -51.4928], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8894, device='cuda:0', dtype=torch.float64)
tensor([ -9.3829, -41.5999, -21.6443, -48.7324, -50.9811], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8815, device='cuda:0', dtype=torch.float64)
tensor([ -9.4069, -40.7999, -21.9189, -48.8278, -50.3319], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7282, device='cuda:0', dtype=torch.float64)
tensor([ -9.4133, -40.3668, -22.1786, -49.1314, -50.0231], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6949, device='cuda:0', dtype=torch.float64)
tensor([ -9.4144, -39.9563, -22.3856, -49.3902, -49.7559], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9522, device='cuda:0', dtype=torch.float64)
tensor([ -9.4281, -39.4410, -22.5139, -49.7912, -49.4925], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7508, device='cuda:0', dtype=torch.float64)
tensor([ -9.4682, -38.9325, -22.5684, -50.2352, -49.2754], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7694, device='cuda:0', dtype=torch.float64)
tensor([ -9.4853, -38.4108, -22.5619, -50.3897, -48.8965], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7481, device='cuda:0', dtype=torch.float64)
tensor([ -9.4663, -37.9942, -22.5203, -50.5317, -48.6139], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7114, device='cuda:0', dtype=torch.float64)
tensor([ -9.4409, -37.6970, -22.4845, -50.6207, -48.3170], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6461, device='cuda:0', dtype=torch.float64)
tensor([ -9.4026, -37.4518, -22.4192, -50.6391, -48.0711], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7194, device='cuda:0', dtype=torch.float64)
tensor([ -9.3689, -37.3063, -22.3839, -50.7535, -47.9212], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8137, device='cuda:0', dtype=torch.float64)
tensor([ -9.3832, -37.1707, -22.3834, -50.8688, -47.8209], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6876, device='cuda:0', dtype=torch.float64)
tensor([ -9.3728, -37.1373, -22.1945, -50.8040, -47.6821], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6422, device='cuda:0', dtype=torch.float64)
tensor([ -9.3648, -37.1958, -22.0739, -50.6772, -47.6053], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8125, device='cuda:0', dtype=torch.float64)
tensor([ -9.3364, -37.0640, -21.9186, -50.4636, -47.4045], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6870, device='cuda:0', dtype=torch.float64)
tensor([ -9.3198, -37.0485, -21.7302, -50.3411, -47.4192], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8095, device='cuda:0', dtype=torch.float64)
tensor([ -9.3616, -37.3641, -21.5521, -50.3003, -47.6259], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7163, device='cuda:0', dtype=torch.float64)
tensor([ -9.4299, -37.5625, -21.3382, -50.3396, -47.8619], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8481, device='cuda:0', dtype=torch.float64)
tensor([ -9.5626, -37.8592, -21.1913, -50.5508, -48.2253], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8158, device='cuda:0', dtype=torch.float64)
tensor([ -9.7614, -38.0766, -21.0105, -50.7782, -48.5893], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7834, device='cuda:0', dtype=torch.float64)
tensor([ -9.9511, -38.2731, -20.7807, -51.0657, -49.0352], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7588, device='cuda:0', dtype=torch.float64)
tensor([-10.1009, -38.3005, -20.5501, -51.1595, -49.3483], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7079, device='cuda:0', dtype=torch.float64)
tensor([-10.2218, -38.2977, -20.2821, -51.2645, -49.6147], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7301, device='cuda:0', dtype=torch.float64)
tensor([-10.3488, -38.4135, -20.0089, -51.2182, -49.8829], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7276, device='cuda:0', dtype=torch.float64)
tensor([-10.5111, -38.7489, -19.8153, -51.3855, -50.3419], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7756, device='cuda:0', dtype=torch.float64)
tensor([-10.6957, -39.0175, -19.7092, -51.4614, -50.6795], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8473, device='cuda:0', dtype=torch.float64)
tensor([-10.8550, -39.3083, -19.7380, -51.6078, -50.9058], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7816, device='cuda:0', dtype=torch.float64)
tensor([-10.9181, -39.3643, -19.6919, -51.6047, -50.8675], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7290, device='cuda:0', dtype=torch.float64)
tensor([-10.9842, -39.3636, -19.7441, -51.4613, -50.7864], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0249, device='cuda:0', dtype=torch.float64)
tensor([-11.1061, -39.3705, -19.8234, -51.3878, -50.8096], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7272, device='cuda:0', dtype=torch.float64)
tensor([-11.2130, -39.5224, -20.0133, -51.3449, -50.9066], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7880, device='cuda:0', dtype=torch.float64)
tensor([-11.2812, -39.6790, -20.2339, -51.3180, -50.8764], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7953, device='cuda:0', dtype=torch.float64)
tensor([-11.3552, -39.7999, -20.4150, -51.2023, -50.8250], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8173, device='cuda:0', dtype=torch.float64)
tensor([-11.4025, -40.0435, -20.7017, -51.0121, -50.7351], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7308, device='cuda:0', dtype=torch.float64)
tensor([-11.4726, -40.3382, -20.9835, -50.9478, -50.6884], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7379, device='cuda:0', dtype=torch.float64)
tensor([-11.6109, -40.6123, -21.2598, -50.9488, -50.7610], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7270, device='cuda:0', dtype=torch.float64)
tensor([-11.6588, -40.7738, -21.4320, -50.7071, -50.5932], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8528, device='cuda:0', dtype=torch.float64)
tensor([-11.6771, -40.8775, -21.4885, -50.5520, -50.3914], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6415, device='cuda:0', dtype=torch.float64)
tensor([-11.7448, -40.9471, -21.4983, -50.4997, -50.3627], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7226, device='cuda:0', dtype=torch.float64)
tensor([-11.8645, -40.9914, -21.4163, -50.5466, -50.3842], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6590, device='cuda:0', dtype=torch.float64)
tensor([-11.9511, -41.0123, -21.3638, -50.3620, -50.3563], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6872, device='cuda:0', dtype=torch.float64)
tensor([-11.9419, -40.9609, -21.2902, -50.1138, -50.1988], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6906, device='cuda:0', dtype=torch.float64)
tensor([-11.9424, -40.5452, -21.3326, -49.4796, -49.6635], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7429, device='cuda:0', dtype=torch.float64)
tensor([-11.9318, -40.1125, -21.4286, -48.8785, -49.1948], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7191, device='cuda:0', dtype=torch.float64)
tensor([-11.8693, -39.6479, -21.5047, -48.2159, -48.6419], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7316, device='cuda:0', dtype=torch.float64)
tensor([-11.7480, -39.0544, -21.5322, -47.4940, -47.9930], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6770, device='cuda:0', dtype=torch.float64)
tensor([-11.5939, -38.4529, -21.5804, -46.8189, -47.3580], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6210, device='cuda:0', dtype=torch.float64)
tensor([-11.4680, -37.7833, -21.6715, -46.2233, -46.7426], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6681, device='cuda:0', dtype=torch.float64)
tensor([-11.3587, -37.3230, -21.7863, -45.6838, -46.1954], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7474, device='cuda:0', dtype=torch.float64)
tensor([-11.2439, -37.0069, -21.9088, -45.0708, -45.6843], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7304, device='cuda:0', dtype=torch.float64)
tensor([-11.1838, -36.7194, -21.9876, -44.6970, -45.2763], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7671, device='cuda:0', dtype=torch.float64)
tensor([-11.0691, -36.6651, -22.1202, -44.4679, -45.0115], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6164, device='cuda:0', dtype=torch.float64)
tensor([-10.9569, -36.7654, -22.2643, -44.5149, -44.9466], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6518, device='cuda:0', dtype=torch.float64)
tensor([-10.8920, -36.9027, -22.4557, -44.6995, -44.9525], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7269, device='cuda:0', dtype=torch.float64)
tensor([-10.8164, -36.9426, -22.6257, -44.7993, -44.8544], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7042, device='cuda:0', dtype=torch.float64)
tensor([-10.7189, -36.8837, -22.7668, -44.8602, -44.7467], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5862, device='cuda:0', dtype=torch.float64)
tensor([-10.7309, -36.8641, -22.8285, -44.9141, -44.6894], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6435, device='cuda:0', dtype=torch.float64)
tensor([-10.7021, -36.9100, -22.8622, -44.7903, -44.5758], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8026, device='cuda:0', dtype=torch.float64)
tensor([-10.6514, -37.0297, -22.8078, -44.6290, -44.4084], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6402, device='cuda:0', dtype=torch.float64)
tensor([-10.6253, -37.4078, -22.8557, -44.6566, -44.4788], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7847, device='cuda:0', dtype=torch.float64)
tensor([-10.6213, -37.7806, -22.8884, -44.8440, -44.5496], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6780, device='cuda:0', dtype=torch.float64)
tensor([-10.5443, -38.0724, -22.8404, -44.9569, -44.4850], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6134, device='cuda:0', dtype=torch.float64)
tensor([-10.5322, -38.3374, -22.8895, -45.2537, -44.5125], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7050, device='cuda:0', dtype=torch.float64)
tensor([-10.4786, -38.6378, -22.9457, -45.6468, -44.6256], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6731, device='cuda:0', dtype=torch.float64)
tensor([-10.4286, -38.9359, -22.9378, -46.0276, -44.7043], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7269, device='cuda:0', dtype=torch.float64)
tensor([-10.4266, -39.3426, -22.9414, -46.4244, -44.8869], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6377, device='cuda:0', dtype=torch.float64)
tensor([-10.4205, -39.6419, -22.9041, -46.8473, -45.0551], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7982, device='cuda:0', dtype=torch.float64)
tensor([-10.3947, -39.6051, -22.8596, -47.1731, -45.1961], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7255, device='cuda:0', dtype=torch.float64)
tensor([-10.3583, -39.4203, -22.9199, -47.4450, -45.2793], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7080, device='cuda:0', dtype=torch.float64)
tensor([-10.3004, -39.3427, -22.9677, -47.7716, -45.3976], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6708, device='cuda:0', dtype=torch.float64)
tensor([-10.2756, -39.0542, -22.9953, -48.0634, -45.4490], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7583, device='cuda:0', dtype=torch.float64)
tensor([-10.2517, -38.9896, -23.0837, -48.5959, -45.6973], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6597, device='cuda:0', dtype=torch.float64)
tensor([-10.2442, -39.0269, -23.1655, -49.2559, -46.1335], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6112, device='cuda:0', dtype=torch.float64)
tensor([-10.2456, -39.1089, -23.2849, -49.9631, -46.5687], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6805, device='cuda:0', dtype=torch.float64)
tensor([-10.2646, -39.0870, -23.3913, -50.4963, -46.9141], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8526, device='cuda:0', dtype=torch.float64)
tensor([-10.2716, -38.9056, -23.5110, -50.9951, -47.1567], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6130, device='cuda:0', dtype=torch.float64)
tensor([-10.2868, -38.7417, -23.6748, -51.4668, -47.4370], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6265, device='cuda:0', dtype=torch.float64)
tensor([-10.1569, -38.5398, -23.8264, -51.6175, -47.5192], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6461, device='cuda:0', dtype=torch.float64)
tensor([-10.0742, -38.4488, -24.0409, -51.7907, -47.4943], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6989, device='cuda:0', dtype=torch.float64)
tensor([-10.0016, -38.4209, -24.2196, -51.9080, -47.5456], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6423, device='cuda:0', dtype=torch.float64)
tensor([ -9.9479, -38.4996, -24.3707, -52.1080, -47.7243], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6847, device='cuda:0', dtype=torch.float64)
tensor([ -9.9131, -38.6609, -24.5370, -52.3733, -47.9583], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5466, device='cuda:0', dtype=torch.float64)
tensor([ -9.8746, -38.8010, -24.7218, -52.5520, -48.1856], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7360, device='cuda:0', dtype=torch.float64)
tensor([ -9.8273, -38.9066, -24.8968, -52.7255, -48.2944], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6250, device='cuda:0', dtype=torch.float64)
tensor([ -9.7788, -38.8530, -24.9836, -52.8436, -48.3286], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6358, device='cuda:0', dtype=torch.float64)
tensor([ -9.7092, -38.7184, -25.1130, -52.8634, -48.2432], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7426, device='cuda:0', dtype=torch.float64)
tensor([ -9.7300, -38.4959, -25.2630, -52.9191, -48.2314], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6444, device='cuda:0', dtype=torch.float64)
tensor([ -9.7736, -38.2083, -25.3737, -53.1326, -48.1831], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6241, device='cuda:0', dtype=torch.float64)
tensor([ -9.8750, -38.0949, -25.6154, -53.3627, -48.2097], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7554, device='cuda:0', dtype=torch.float64)
tensor([-10.0433, -38.1295, -25.8509, -53.6831, -48.4240], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6566, device='cuda:0', dtype=torch.float64)
tensor([-10.2279, -38.2320, -26.1610, -54.0801, -48.7740], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7150, device='cuda:0', dtype=torch.float64)
tensor([-10.4320, -38.1161, -26.4127, -54.4649, -49.0320], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6547, device='cuda:0', dtype=torch.float64)
tensor([-10.6952, -38.1201, -26.6302, -54.9502, -49.4116], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8289, device='cuda:0', dtype=torch.float64)
tensor([-10.9506, -37.8781, -26.7281, -55.5031, -49.7342], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6433, device='cuda:0', dtype=torch.float64)
tensor([-11.1789, -37.5177, -26.7624, -55.8721, -49.9169], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7819, device='cuda:0', dtype=torch.float64)
tensor([-11.3604, -37.1115, -26.8292, -56.1142, -49.9040], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6540, device='cuda:0', dtype=torch.float64)
tensor([-11.4939, -36.5426, -26.8898, -56.1974, -49.7566], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5382, device='cuda:0', dtype=torch.float64)
tensor([-11.6194, -36.0688, -26.8446, -56.1738, -49.6595], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5984, device='cuda:0', dtype=torch.float64)
tensor([-11.7297, -35.7034, -26.7570, -56.2131, -49.6284], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5555, device='cuda:0', dtype=torch.float64)
tensor([-11.8216, -35.2938, -26.5517, -56.1436, -49.5572], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5137, device='cuda:0', dtype=torch.float64)
tensor([-11.9356, -34.9562, -26.3307, -56.1100, -49.5512], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6263, device='cuda:0', dtype=torch.float64)
tensor([-12.0468, -34.8097, -26.1792, -56.1556, -49.6398], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5445, device='cuda:0', dtype=torch.float64)
tensor([-12.1593, -34.4653, -26.1038, -56.0432, -49.6177], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5688, device='cuda:0', dtype=torch.float64)
tensor([-12.2708, -33.9702, -26.0293, -55.8023, -49.4812], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5551, device='cuda:0', dtype=torch.float64)
tensor([-12.3639, -33.3538, -25.9220, -55.5506, -49.2001], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5951, device='cuda:0', dtype=torch.float64)
tensor([-12.3748, -32.6158, -25.7821, -55.0097, -48.6690], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6079, device='cuda:0', dtype=torch.float64)
tensor([-12.3800, -31.8763, -25.6742, -54.5277, -48.0644], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5786, device='cuda:0', dtype=torch.float64)
tensor([-12.2979, -31.1893, -25.5627, -54.0680, -47.4750], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6399, device='cuda:0', dtype=torch.float64)
tensor([-12.1939, -30.5598, -25.5457, -53.5964, -46.8379], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5745, device='cuda:0', dtype=torch.float64)
tensor([-12.1166, -30.0288, -25.5354, -53.0960, -46.2152], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6259, device='cuda:0', dtype=torch.float64)
tensor([-11.9957, -29.7170, -25.5955, -52.7058, -45.6983], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4560, device='cuda:0', dtype=torch.float64)
tensor([-11.8961, -29.4838, -25.6415, -52.3837, -45.3283], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5233, device='cuda:0', dtype=torch.float64)
tensor([-11.8238, -29.3427, -25.5892, -52.1096, -45.1065], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6339, device='cuda:0', dtype=torch.float64)
tensor([-11.7870, -29.2723, -25.4724, -51.8372, -44.9796], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5799, device='cuda:0', dtype=torch.float64)
tensor([-11.7158, -29.1938, -25.3890, -51.4716, -44.8209], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5753, device='cuda:0', dtype=torch.float64)
tensor([-11.6417, -29.1210, -25.3350, -51.0989, -44.5828], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6273, device='cuda:0', dtype=torch.float64)
tensor([-11.6372, -28.9975, -25.2470, -50.6572, -44.4225], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6046, device='cuda:0', dtype=torch.float64)
tensor([-11.6367, -28.8818, -25.1401, -50.1954, -44.1484], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6774, device='cuda:0', dtype=torch.float64)
tensor([-11.6951, -28.7655, -25.0466, -49.9121, -43.9668], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6786, device='cuda:0', dtype=torch.float64)
tensor([-11.8017, -28.6081, -25.0466, -49.6824, -43.8011], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5478, device='cuda:0', dtype=torch.float64)
tensor([-11.9191, -28.4872, -25.0957, -49.5282, -43.6593], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5707, device='cuda:0', dtype=torch.float64)
tensor([-12.0674, -28.3519, -25.1928, -49.4899, -43.6265], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6166, device='cuda:0', dtype=torch.float64)
tensor([-12.1785, -28.1765, -25.3450, -49.3846, -43.5773], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4723, device='cuda:0', dtype=torch.float64)
tensor([-12.2965, -28.0975, -25.4372, -49.3040, -43.6071], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5276, device='cuda:0', dtype=torch.float64)
tensor([-12.3821, -28.1027, -25.4570, -49.2939, -43.7602], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5267, device='cuda:0', dtype=torch.float64)
tensor([-12.5095, -28.1069, -25.4619, -49.2841, -43.9539], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6972, device='cuda:0', dtype=torch.float64)
tensor([-12.7048, -28.1177, -25.3919, -49.3609, -44.1950], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5810, device='cuda:0', dtype=torch.float64)
tensor([-12.8072, -28.1447, -25.2565, -49.3972, -44.3854], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6645, device='cuda:0', dtype=torch.float64)
tensor([-12.8705, -28.1723, -25.0792, -49.3860, -44.4642], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6371, device='cuda:0', dtype=torch.float64)
tensor([-12.9068, -28.1755, -24.8557, -49.3465, -44.6702], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5262, device='cuda:0', dtype=torch.float64)
tensor([-12.8949, -28.0847, -24.6357, -49.0784, -44.6031], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4591, device='cuda:0', dtype=torch.float64)
tensor([-12.8909, -28.0130, -24.3905, -48.8079, -44.5815], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5625, device='cuda:0', dtype=torch.float64)
tensor([-12.8390, -28.0070, -24.1500, -48.4352, -44.4892], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4730, device='cuda:0', dtype=torch.float64)
tensor([-12.7759, -28.1236, -23.9776, -48.2596, -44.4696], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6238, device='cuda:0', dtype=torch.float64)
tensor([-12.7224, -28.2698, -23.8108, -48.3040, -44.6156], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6050, device='cuda:0', dtype=torch.float64)
tensor([-12.6456, -28.2772, -23.5911, -48.0964, -44.5940], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5531, device='cuda:0', dtype=torch.float64)
tensor([-12.6249, -28.2525, -23.4291, -47.9561, -44.6049], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5367, device='cuda:0', dtype=torch.float64)
tensor([-12.5924, -28.2253, -23.3466, -47.7037, -44.5357], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5855, device='cuda:0', dtype=torch.float64)
tensor([-12.5930, -28.1782, -23.2428, -47.6142, -44.5405], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6459, device='cuda:0', dtype=torch.float64)
tensor([-12.5849, -28.1669, -23.1322, -47.6211, -44.5302], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6168, device='cuda:0', dtype=torch.float64)
tensor([-12.5802, -28.1829, -23.0122, -47.6626, -44.5878], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4777, device='cuda:0', dtype=torch.float64)
tensor([-12.6479, -28.2498, -22.8909, -47.6898, -44.7200], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5950, device='cuda:0', dtype=torch.float64)
tensor([-12.6679, -28.1748, -22.7619, -47.7308, -44.8501], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5904, device='cuda:0', dtype=torch.float64)
tensor([-12.6511, -28.1325, -22.6391, -47.6584, -45.0269], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5647, device='cuda:0', dtype=torch.float64)
tensor([-12.6756, -27.9834, -22.4801, -47.5437, -45.1840], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5733, device='cuda:0', dtype=torch.float64)
tensor([-12.7367, -27.8850, -22.3847, -47.5915, -45.3857], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4600, device='cuda:0', dtype=torch.float64)
tensor([-12.8314, -27.8454, -22.2945, -47.6953, -45.5507], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4596, device='cuda:0', dtype=torch.float64)
tensor([-12.9189, -27.7812, -22.2039, -47.8054, -45.7060], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5226, device='cuda:0', dtype=torch.float64)
tensor([-12.9847, -27.7065, -22.1319, -47.9654, -45.8688], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4938, device='cuda:0', dtype=torch.float64)
tensor([-13.0616, -27.8080, -22.0999, -48.2593, -46.1852], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4305, device='cuda:0', dtype=torch.float64)
tensor([-13.2137, -27.9877, -22.0488, -48.6655, -46.6222], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5206, device='cuda:0', dtype=torch.float64)
tensor([-13.3547, -28.2646, -22.0204, -49.1049, -47.0992], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5567, device='cuda:0', dtype=torch.float64)
tensor([-13.5056, -28.6478, -22.0302, -49.5914, -47.5961], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5670, device='cuda:0', dtype=torch.float64)
tensor([-13.6173, -28.9908, -22.0492, -50.0206, -48.0375], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5798, device='cuda:0', dtype=torch.float64)
tensor([-13.7825, -29.2217, -22.0892, -50.5101, -48.4657], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5069, device='cuda:0', dtype=torch.float64)
tensor([-13.9795, -29.5139, -22.0584, -51.0176, -48.9964], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5601, device='cuda:0', dtype=torch.float64)
tensor([-14.2262, -29.7788, -22.0093, -51.5057, -49.4969], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5046, device='cuda:0', dtype=torch.float64)
tensor([-14.4847, -30.1788, -21.9373, -52.1046, -50.1990], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5756, device='cuda:0', dtype=torch.float64)
tensor([-14.7266, -30.6437, -21.8982, -52.8804, -50.9070], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5411, device='cuda:0', dtype=torch.float64)
tensor([-14.9681, -31.0562, -21.8746, -53.7085, -51.5485], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4890, device='cuda:0', dtype=torch.float64)
tensor([-15.1535, -31.4003, -21.8524, -54.2963, -52.0317], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5292, device='cuda:0', dtype=torch.float64)
tensor([-15.3278, -31.7377, -21.7684, -54.8937, -52.4569], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4596, device='cuda:0', dtype=torch.float64)
tensor([-15.5551, -32.1348, -21.7397, -55.6372, -52.9369], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5018, device='cuda:0', dtype=torch.float64)
tensor([-15.7004, -32.3811, -21.7057, -56.1130, -53.2128], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5328, device='cuda:0', dtype=torch.float64)
tensor([-15.7981, -32.7419, -21.6246, -56.4746, -53.4521], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5141, device='cuda:0', dtype=torch.float64)
tensor([-15.9625, -33.1921, -21.5665, -56.7928, -53.8690], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4833, device='cuda:0', dtype=torch.float64)
tensor([-16.0424, -33.5158, -21.5333, -56.9561, -54.1200], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4751, device='cuda:0', dtype=torch.float64)
tensor([-16.1702, -33.8822, -21.5256, -57.1442, -54.4399], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4816, device='cuda:0', dtype=torch.float64)
tensor([-16.2848, -34.3122, -21.5639, -57.3544, -54.8181], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5311, device='cuda:0', dtype=torch.float64)
tensor([-16.3408, -34.6194, -21.5620, -57.4834, -55.0671], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4701, device='cuda:0', dtype=torch.float64)
tensor([-16.3101, -34.7967, -21.5337, -57.5007, -55.1982], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4880, device='cuda:0', dtype=torch.float64)
tensor([-16.1651, -34.9432, -21.5189, -57.4053, -55.2274], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4788, device='cuda:0', dtype=torch.float64)
tensor([-16.1190, -35.0879, -21.5327, -57.4580, -55.3768], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4859, device='cuda:0', dtype=torch.float64)
tensor([-16.0975, -35.2190, -21.5519, -57.4140, -55.5005], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5312, device='cuda:0', dtype=torch.float64)
tensor([-16.0340, -35.2871, -21.5360, -57.4639, -55.5292], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5858, device='cuda:0', dtype=torch.float64)
tensor([-15.9669, -35.4858, -21.5221, -57.6701, -55.6454], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3819, device='cuda:0', dtype=torch.float64)
tensor([-15.9287, -35.7939, -21.5732, -58.0063, -55.8399], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4594, device='cuda:0', dtype=torch.float64)
tensor([-15.9586, -35.9962, -21.6178, -58.3983, -55.9861], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5054, device='cuda:0', dtype=torch.float64)
tensor([-16.0903, -36.1829, -21.6581, -58.8109, -56.1435], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4351, device='cuda:0', dtype=torch.float64)
tensor([-16.1370, -36.2687, -21.7220, -59.1139, -56.1372], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5998, device='cuda:0', dtype=torch.float64)
tensor([-16.1402, -36.1759, -21.8266, -59.3189, -55.9855], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5072, device='cuda:0', dtype=torch.float64)
tensor([-16.1105, -36.0178, -21.9127, -59.5631, -55.7239], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4387, device='cuda:0', dtype=torch.float64)
tensor([-16.1273, -35.8384, -21.9968, -59.7379, -55.4253], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4639, device='cuda:0', dtype=torch.float64)
tensor([-16.1440, -35.7778, -22.0556, -60.0216, -55.2239], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4379, device='cuda:0', dtype=torch.float64)
tensor([-16.1130, -35.7277, -22.1231, -60.2922, -55.0525], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5167, device='cuda:0', dtype=torch.float64)
tensor([-16.1542, -35.8295, -22.2446, -60.6999, -55.0310], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5021, device='cuda:0', dtype=torch.float64)
tensor([-16.1862, -35.8315, -22.2576, -61.0122, -55.0113], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4146, device='cuda:0', dtype=torch.float64)
tensor([-16.2565, -35.8079, -22.2951, -61.2374, -54.9841], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5315, device='cuda:0', dtype=torch.float64)
tensor([-16.2753, -35.7425, -22.3030, -61.5211, -54.9140], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4335, device='cuda:0', dtype=torch.float64)
tensor([-16.4011, -35.8384, -22.3249, -61.9353, -55.0168], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4739, device='cuda:0', dtype=torch.float64)
tensor([-16.5222, -35.7962, -22.3424, -62.1316, -55.0118], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4717, device='cuda:0', dtype=torch.float64)
tensor([-16.5319, -35.7491, -22.3762, -62.2182, -54.8636], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4504, device='cuda:0', dtype=torch.float64)
tensor([-16.5496, -35.6929, -22.4368, -62.3253, -54.7247], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5387, device='cuda:0', dtype=torch.float64)
tensor([-16.7054, -35.8739, -22.4953, -62.6355, -54.8508], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5327, device='cuda:0', dtype=torch.float64)
tensor([-16.8945, -35.9610, -22.5349, -63.0559, -55.0014], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4104, device='cuda:0', dtype=torch.float64)
tensor([-17.0644, -35.8237, -22.5286, -63.3038, -54.9506], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4495, device='cuda:0', dtype=torch.float64)
tensor([-17.3198, -35.5774, -22.4805, -63.5099, -54.8511], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4598, device='cuda:0', dtype=torch.float64)
tensor([-17.6045, -35.2733, -22.4049, -63.4571, -54.6409], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4527, device='cuda:0', dtype=torch.float64)
tensor([-17.8213, -35.0070, -22.3258, -63.2852, -54.3990], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3522, device='cuda:0', dtype=torch.float64)
tensor([-17.9689, -34.7192, -22.2812, -63.0134, -54.1419], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4422, device='cuda:0', dtype=torch.float64)
tensor([-18.1280, -34.5077, -22.3068, -62.8174, -53.9803], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4386, device='cuda:0', dtype=torch.float64)
tensor([-18.3323, -34.3042, -22.3222, -62.6192, -53.8286], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5142, device='cuda:0', dtype=torch.float64)
tensor([-18.6356, -34.0400, -22.4088, -62.5593, -53.7053], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4269, device='cuda:0', dtype=torch.float64)
tensor([-18.9639, -33.7888, -22.4922, -62.5500, -53.6357], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4107, device='cuda:0', dtype=torch.float64)
tensor([-19.1709, -33.5726, -22.5554, -62.4083, -53.5587], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4068, device='cuda:0', dtype=torch.float64)
tensor([-19.4112, -33.5108, -22.5809, -62.4398, -53.6316], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3927, device='cuda:0', dtype=torch.float64)
tensor([-19.5631, -33.3928, -22.6333, -62.3049, -53.6101], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3987, device='cuda:0', dtype=torch.float64)
tensor([-19.7135, -33.2648, -22.6885, -62.1726, -53.5725], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4350, device='cuda:0', dtype=torch.float64)
tensor([-19.8822, -33.1627, -22.7508, -62.0084, -53.6205], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3697, device='cuda:0', dtype=torch.float64)
tensor([-20.0112, -33.1974, -22.8186, -61.9204, -53.7635], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4116, device='cuda:0', dtype=torch.float64)
tensor([-20.1610, -33.1543, -22.8686, -61.8582, -53.8387], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5459, device='cuda:0', dtype=torch.float64)
tensor([-20.3353, -33.2186, -22.9495, -61.8866, -53.9588], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4925, device='cuda:0', dtype=torch.float64)
tensor([-20.5709, -33.5130, -23.1006, -62.2560, -54.2642], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3993, device='cuda:0', dtype=torch.float64)
tensor([-20.7977, -33.8640, -23.2625, -62.5556, -54.5713], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3903, device='cuda:0', dtype=torch.float64)
tensor([-20.9161, -34.2527, -23.3999, -62.8230, -54.8961], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4128, device='cuda:0', dtype=torch.float64)
tensor([-20.8995, -34.5479, -23.5354, -63.0834, -55.1015], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3823, device='cuda:0', dtype=torch.float64)
tensor([-20.8687, -34.7285, -23.6350, -63.1856, -55.2123], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3934, device='cuda:0', dtype=torch.float64)
tensor([-20.8259, -34.8246, -23.6665, -63.1225, -55.2075], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3911, device='cuda:0', dtype=torch.float64)
tensor([-20.7873, -34.8675, -23.6886, -63.0791, -55.1744], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4028, device='cuda:0', dtype=torch.float64)
tensor([-20.7633, -34.9387, -23.7077, -63.1578, -55.1756], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4245, device='cuda:0', dtype=torch.float64)
tensor([-20.7755, -34.9981, -23.6435, -63.1779, -55.1048], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4457, device='cuda:0', dtype=torch.float64)
tensor([-20.8130, -35.1618, -23.5832, -63.2860, -55.1095], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4560, device='cuda:0', dtype=torch.float64)
tensor([-20.9715, -35.4549, -23.5405, -63.6489, -55.2620], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3437, device='cuda:0', dtype=torch.float64)
tensor([-21.2274, -35.7986, -23.5098, -64.1629, -55.5648], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3621, device='cuda:0', dtype=torch.float64)
tensor([-21.4874, -36.0522, -23.4352, -64.5209, -55.8047], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4325, device='cuda:0', dtype=torch.float64)
tensor([-21.7351, -36.2911, -23.3526, -64.9543, -56.0675], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3818, device='cuda:0', dtype=torch.float64)
tensor([-22.1040, -36.5461, -23.2511, -65.4413, -56.3384], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4084, device='cuda:0', dtype=torch.float64)
tensor([-22.4793, -36.9048, -23.1828, -65.9951, -56.6773], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4733, device='cuda:0', dtype=torch.float64)
tensor([-22.7670, -37.2148, -23.1379, -66.4149, -56.9907], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4036, device='cuda:0', dtype=torch.float64)
tensor([-22.9610, -37.4419, -23.0324, -66.6259, -57.2074], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4188, device='cuda:0', dtype=torch.float64)
tensor([-23.3064, -37.7263, -22.8839, -66.9856, -57.4382], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4098, device='cuda:0', dtype=torch.float64)
tensor([-23.5983, -37.9915, -22.7386, -67.2297, -57.5796], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4175, device='cuda:0', dtype=torch.float64)
tensor([-23.9114, -38.2510, -22.6423, -67.6266, -57.8092], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4095, device='cuda:0', dtype=torch.float64)
tensor([-24.3081, -38.4611, -22.5564, -68.0634, -58.0263], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3896, device='cuda:0', dtype=torch.float64)
tensor([-24.6554, -38.7310, -22.4874, -68.5785, -58.2742], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3344, device='cuda:0', dtype=torch.float64)
tensor([-24.8662, -38.8678, -22.3867, -68.8432, -58.3973], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3937, device='cuda:0', dtype=torch.float64)
tensor([-25.0615, -39.0687, -22.3102, -69.0766, -58.5494], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4076, device='cuda:0', dtype=torch.float64)
tensor([-25.0415, -39.1477, -22.2236, -69.2770, -58.6282], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3604, device='cuda:0', dtype=torch.float64)
tensor([-24.8837, -39.1688, -22.1507, -69.3062, -58.6513], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3734, device='cuda:0', dtype=torch.float64)
tensor([-24.6400, -39.1270, -22.0495, -69.1892, -58.5747], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4078, device='cuda:0', dtype=torch.float64)
tensor([-24.4429, -39.0492, -21.9526, -69.0891, -58.4961], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4106, device='cuda:0', dtype=torch.float64)
tensor([-24.2967, -39.1495, -21.8838, -69.1838, -58.5401], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3919, device='cuda:0', dtype=torch.float64)
tensor([-24.0971, -39.0999, -21.8024, -69.2292, -58.5303], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4859, device='cuda:0', dtype=torch.float64)
tensor([-23.7362, -38.8427, -21.6896, -69.1074, -58.3661], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3461, device='cuda:0', dtype=torch.float64)
tensor([-23.4066, -38.5577, -21.6052, -69.0122, -58.1473], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3865, device='cuda:0', dtype=torch.float64)
tensor([-23.0452, -38.3863, -21.5042, -68.8591, -57.9801], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3431, device='cuda:0', dtype=torch.float64)
tensor([-22.7342, -38.1121, -21.4282, -68.6606, -57.7471], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3856, device='cuda:0', dtype=torch.float64)
tensor([-22.4911, -37.8812, -21.3926, -68.5022, -57.5333], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3899, device='cuda:0', dtype=torch.float64)
tensor([-22.3150, -37.6099, -21.3833, -68.3836, -57.3386], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3652, device='cuda:0', dtype=torch.float64)
tensor([-22.2308, -37.3557, -21.3476, -68.2749, -57.1365], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3186, device='cuda:0', dtype=torch.float64)
tensor([-22.1868, -37.2519, -21.3339, -68.1821, -57.0120], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3189, device='cuda:0', dtype=torch.float64)
tensor([-22.1993, -37.1904, -21.3346, -68.1097, -56.8946], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4142, device='cuda:0', dtype=torch.float64)
tensor([-22.2533, -37.1129, -21.3240, -68.1592, -56.7327], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2977, device='cuda:0', dtype=torch.float64)
tensor([-22.3744, -37.0329, -21.3275, -68.1961, -56.5877], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2876, device='cuda:0', dtype=torch.float64)
tensor([-22.5105, -36.8249, -21.3164, -68.1541, -56.3868], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3548, device='cuda:0', dtype=torch.float64)
tensor([-22.5444, -36.5107, -21.3096, -67.9596, -56.0863], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3970, device='cuda:0', dtype=torch.float64)
tensor([-22.7661, -36.2890, -21.3494, -67.9224, -55.8594], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3356, device='cuda:0', dtype=torch.float64)
tensor([-23.0390, -36.0940, -21.3860, -67.8737, -55.6773], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3723, device='cuda:0', dtype=torch.float64)
tensor([-23.3277, -35.9252, -21.3949, -67.9172, -55.5008], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3435, device='cuda:0', dtype=torch.float64)
tensor([-23.6636, -35.8197, -21.3803, -68.0332, -55.3883], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3613, device='cuda:0', dtype=torch.float64)
tensor([-23.9120, -35.6210, -21.3200, -68.0848, -55.1558], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2924, device='cuda:0', dtype=torch.float64)
tensor([-24.1304, -35.5054, -21.2811, -68.1564, -55.0008], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4097, device='cuda:0', dtype=torch.float64)
tensor([-24.3147, -35.3201, -21.2141, -68.0366, -54.7211], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2965, device='cuda:0', dtype=torch.float64)
tensor([-24.5776, -35.2099, -21.1343, -67.8813, -54.4997], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3041, device='cuda:0', dtype=torch.float64)
tensor([-24.7652, -35.0914, -21.0890, -67.7269, -54.2350], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2603, device='cuda:0', dtype=torch.float64)
tensor([-24.9772, -35.0497, -21.0964, -67.6322, -54.0339], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2900, device='cuda:0', dtype=torch.float64)
tensor([-25.1530, -35.0090, -21.1072, -67.4579, -53.8004], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3134, device='cuda:0', dtype=torch.float64)
tensor([-25.3971, -35.0548, -21.1302, -67.4241, -53.6443], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4225, device='cuda:0', dtype=torch.float64)
tensor([-25.5800, -35.1273, -21.1740, -67.6061, -53.5986], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3269, device='cuda:0', dtype=torch.float64)
tensor([-25.6039, -35.0580, -21.2487, -67.7342, -53.4348], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3127, device='cuda:0', dtype=torch.float64)
tensor([-25.6968, -35.0872, -21.3260, -67.8491, -53.3240], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3162, device='cuda:0', dtype=torch.float64)
tensor([-25.7434, -35.1729, -21.4036, -68.0402, -53.2214], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3048, device='cuda:0', dtype=torch.float64)
tensor([-25.8623, -35.3493, -21.4662, -68.2349, -53.1584], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2757, device='cuda:0', dtype=torch.float64)
tensor([-26.0677, -35.6183, -21.6084, -68.5745, -53.2298], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2853, device='cuda:0', dtype=torch.float64)
tensor([-26.2432, -35.8361, -21.7391, -68.9585, -53.2923], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3567, device='cuda:0', dtype=torch.float64)
tensor([-26.3505, -36.0300, -21.8395, -69.1073, -53.2821], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3120, device='cuda:0', dtype=torch.float64)
tensor([-26.4748, -36.1713, -21.9544, -69.2467, -53.2321], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3763, device='cuda:0', dtype=torch.float64)
tensor([-26.6516, -36.2756, -22.0024, -69.3033, -53.0976], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2668, device='cuda:0', dtype=torch.float64)
tensor([-26.8730, -36.3908, -22.0631, -69.4403, -53.0228], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3420, device='cuda:0', dtype=torch.float64)
tensor([-27.1192, -36.5299, -22.1823, -69.7950, -53.0172], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3209, device='cuda:0', dtype=torch.float64)
tensor([-27.3892, -36.6973, -22.2954, -70.2615, -53.1087], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2805, device='cuda:0', dtype=torch.float64)
tensor([-27.6159, -36.8627, -22.4404, -70.7470, -53.1152], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3403, device='cuda:0', dtype=torch.float64)
tensor([-27.8347, -37.0379, -22.5396, -71.2987, -53.1394], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2785, device='cuda:0', dtype=torch.float64)
tensor([-27.9762, -37.1972, -22.6263, -71.6923, -53.1314], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2943, device='cuda:0', dtype=torch.float64)
tensor([-28.0987, -37.3269, -22.6633, -71.9662, -53.1227], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3478, device='cuda:0', dtype=torch.float64)
tensor([-28.2403, -37.5152, -22.7216, -72.2806, -53.2130], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3684, device='cuda:0', dtype=torch.float64)
tensor([-28.4860, -37.7518, -22.8001, -72.8331, -53.4216], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3257, device='cuda:0', dtype=torch.float64)
tensor([-28.7062, -38.0031, -22.8944, -73.3209, -53.5971], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2865, device='cuda:0', dtype=torch.float64)
tensor([-28.8565, -38.2258, -23.0350, -73.7951, -53.7306], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3081, device='cuda:0', dtype=torch.float64)
tensor([-29.0630, -38.4632, -23.1197, -74.2496, -53.8782], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3385, device='cuda:0', dtype=torch.float64)
tensor([-29.3131, -38.6893, -23.2288, -74.5353, -54.0314], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2507, device='cuda:0', dtype=torch.float64)
tensor([-29.4653, -38.7933, -23.2608, -74.6013, -54.0433], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3137, device='cuda:0', dtype=torch.float64)
tensor([-29.6296, -38.9780, -23.3314, -74.7240, -54.0816], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2991, device='cuda:0', dtype=torch.float64)
tensor([-29.7463, -39.0793, -23.3409, -74.7944, -54.0690], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2760, device='cuda:0', dtype=torch.float64)
tensor([-29.8718, -39.1686, -23.3644, -74.7357, -54.0060], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2985, device='cuda:0', dtype=torch.float64)
tensor([-29.9275, -39.2395, -23.3533, -74.7181, -53.8956], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2712, device='cuda:0', dtype=torch.float64)
tensor([-29.9209, -39.2652, -23.2841, -74.6872, -53.7683], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2799, device='cuda:0', dtype=torch.float64)
tensor([-29.8097, -39.2402, -23.2228, -74.4508, -53.6142], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2747, device='cuda:0', dtype=torch.float64)
tensor([-29.7340, -39.2319, -23.1718, -74.3382, -53.4474], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3186, device='cuda:0', dtype=torch.float64)
tensor([-29.6435, -39.1695, -23.0868, -74.0927, -53.3145], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3075, device='cuda:0', dtype=torch.float64)
tensor([-29.6202, -39.0729, -22.9706, -74.0208, -53.2046], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2719, device='cuda:0', dtype=torch.float64)
tensor([-29.5908, -38.9474, -22.8815, -73.8037, -53.0489], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2737, device='cuda:0', dtype=torch.float64)
tensor([-29.5430, -38.7547, -22.8143, -73.5465, -52.8240], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2886, device='cuda:0', dtype=torch.float64)
tensor([-29.3659, -38.4615, -22.7237, -73.2114, -52.6007], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2966, device='cuda:0', dtype=torch.float64)
tensor([-29.2521, -38.1332, -22.7067, -72.9337, -52.3136], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2732, device='cuda:0', dtype=torch.float64)
tensor([-29.2051, -37.8419, -22.7169, -72.5501, -52.0013], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2462, device='cuda:0', dtype=torch.float64)
tensor([-29.1397, -37.5262, -22.7133, -72.0024, -51.6081], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2524, device='cuda:0', dtype=torch.float64)
tensor([-29.1462, -37.3107, -22.6915, -71.5636, -51.3114], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2355, device='cuda:0', dtype=torch.float64)
tensor([-29.1356, -37.1430, -22.6636, -71.1634, -51.0768], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3293, device='cuda:0', dtype=torch.float64)
tensor([-29.1271, -36.9837, -22.5927, -70.7491, -50.8339], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2850, device='cuda:0', dtype=torch.float64)
tensor([-29.1112, -36.8266, -22.5442, -70.2239, -50.5945], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2780, device='cuda:0', dtype=torch.float64)
tensor([-28.9982, -36.7155, -22.5027, -69.6606, -50.3970], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2447, device='cuda:0', dtype=torch.float64)
tensor([-28.8941, -36.6710, -22.4851, -69.2118, -50.2824], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2194, device='cuda:0', dtype=torch.float64)
tensor([-28.7679, -36.6238, -22.4856, -68.8194, -50.1866], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2488, device='cuda:0', dtype=torch.float64)
tensor([-28.6122, -36.5933, -22.5122, -68.5557, -50.1233], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2763, device='cuda:0', dtype=torch.float64)
tensor([-28.5496, -36.5779, -22.5297, -68.2829, -50.0677], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2387, device='cuda:0', dtype=torch.float64)
tensor([-28.4769, -36.5673, -22.5461, -67.9821, -50.0201], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2687, device='cuda:0', dtype=torch.float64)
tensor([-28.3023, -36.5866, -22.5503, -67.6975, -49.9515], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2337, device='cuda:0', dtype=torch.float64)
tensor([-28.1504, -36.6117, -22.5906, -67.4739, -49.8476], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2682, device='cuda:0', dtype=torch.float64)
tensor([-28.0235, -36.6239, -22.6193, -67.1604, -49.7052], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2580, device='cuda:0', dtype=torch.float64)
tensor([-27.8920, -36.6783, -22.6627, -66.9901, -49.5572], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2216, device='cuda:0', dtype=torch.float64)
tensor([-27.7940, -36.7224, -22.7079, -66.8529, -49.4139], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2385, device='cuda:0', dtype=torch.float64)
tensor([-27.6502, -36.7513, -22.7597, -66.7129, -49.2769], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2312, device='cuda:0', dtype=torch.float64)
tensor([-27.4961, -36.7854, -22.8048, -66.5505, -49.0874], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2194, device='cuda:0', dtype=torch.float64)
tensor([-27.4211, -36.8959, -22.8585, -66.4759, -49.0039], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2663, device='cuda:0', dtype=torch.float64)
tensor([-27.3518, -36.8973, -22.8704, -66.3100, -48.8731], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2342, device='cuda:0', dtype=torch.float64)
tensor([-27.3805, -36.9260, -22.8624, -66.2798, -48.7569], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2238, device='cuda:0', dtype=torch.float64)
tensor([-27.4490, -36.9837, -22.8460, -66.2232, -48.6857], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2141, device='cuda:0', dtype=torch.float64)
tensor([-27.4984, -37.0787, -22.8366, -66.2680, -48.6223], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2388, device='cuda:0', dtype=torch.float64)
tensor([-27.5236, -37.1074, -22.8664, -66.2112, -48.5606], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2247, device='cuda:0', dtype=torch.float64)
tensor([-27.5129, -37.0788, -22.8548, -66.1194, -48.4432], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2452, device='cuda:0', dtype=torch.float64)
tensor([-27.5660, -37.0303, -22.8395, -66.0535, -48.3707], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2317, device='cuda:0', dtype=torch.float64)
tensor([-27.6717, -36.9839, -22.7844, -66.0616, -48.2521], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2613, device='cuda:0', dtype=torch.float64)
tensor([-27.8269, -36.9062, -22.7002, -66.0621, -48.1490], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2246, device='cuda:0', dtype=torch.float64)
tensor([-27.9272, -36.7710, -22.6217, -66.0091, -48.0350], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1997, device='cuda:0', dtype=torch.float64)
tensor([-28.0198, -36.6505, -22.5399, -66.0292, -47.9293], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2160, device='cuda:0', dtype=torch.float64)
tensor([-28.2045, -36.5473, -22.5029, -66.1647, -47.9193], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2208, device='cuda:0', dtype=torch.float64)
tensor([-28.3382, -36.4223, -22.4726, -66.3040, -47.8861], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2516, device='cuda:0', dtype=torch.float64)
tensor([-28.5535, -36.3180, -22.4519, -66.4746, -47.8568], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2217, device='cuda:0', dtype=torch.float64)
tensor([-28.7573, -36.1447, -22.3970, -66.4129, -47.6469], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2372, device='cuda:0', dtype=torch.float64)
tensor([-29.0159, -36.0783, -22.3597, -66.5421, -47.6403], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1951, device='cuda:0', dtype=torch.float64)
tensor([-29.1665, -35.9838, -22.3323, -66.5125, -47.5551], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2564, device='cuda:0', dtype=torch.float64)
tensor([-29.2225, -35.9020, -22.2812, -66.4869, -47.4451], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2136, device='cuda:0', dtype=torch.float64)
tensor([-29.2951, -35.8869, -22.2167, -66.5114, -47.3410], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2177, device='cuda:0', dtype=torch.float64)
tensor([-29.2966, -35.8615, -22.1452, -66.5093, -47.2954], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2224, device='cuda:0', dtype=torch.float64)
tensor([-29.2510, -35.7465, -22.0942, -66.4272, -47.2160], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2111, device='cuda:0', dtype=torch.float64)
tensor([-29.2082, -35.6133, -22.0273, -66.2542, -47.0910], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1817, device='cuda:0', dtype=torch.float64)
tensor([-29.2111, -35.4827, -21.9501, -66.0465, -46.9742], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2192, device='cuda:0', dtype=torch.float64)
tensor([-29.1901, -35.3623, -21.8788, -65.7784, -46.8721], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2391, device='cuda:0', dtype=torch.float64)
tensor([-29.1890, -35.2691, -21.8207, -65.5321, -46.7684], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2056, device='cuda:0', dtype=torch.float64)
tensor([-29.2252, -35.2325, -21.7594, -65.3824, -46.7289], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2038, device='cuda:0', dtype=torch.float64)
tensor([-29.2653, -35.2089, -21.7378, -65.2447, -46.6865], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2459, device='cuda:0', dtype=torch.float64)
tensor([-29.3870, -35.1867, -21.7505, -65.1829, -46.6831], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2435, device='cuda:0', dtype=torch.float64)
tensor([-29.5413, -35.1918, -21.7531, -65.2772, -46.7716], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1870, device='cuda:0', dtype=torch.float64)
tensor([-29.6377, -35.2582, -21.7850, -65.3969, -46.9317], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1811, device='cuda:0', dtype=torch.float64)
tensor([-29.7532, -35.3791, -21.8453, -65.6834, -47.2115], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2203, device='cuda:0', dtype=torch.float64)
tensor([-29.8139, -35.4709, -21.8789, -65.8377, -47.4239], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2029, device='cuda:0', dtype=torch.float64)
tensor([-29.8541, -35.5112, -21.9198, -65.9419, -47.5594], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2289, device='cuda:0', dtype=torch.float64)
tensor([-29.8365, -35.5502, -21.9493, -66.0706, -47.7175], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2136, device='cuda:0', dtype=torch.float64)
tensor([-29.7829, -35.5333, -21.9799, -66.1930, -47.7773], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2102, device='cuda:0', dtype=torch.float64)
tensor([-29.7028, -35.5386, -21.9985, -66.3389, -47.8855], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1822, device='cuda:0', dtype=torch.float64)
tensor([-29.6195, -35.5524, -21.9876, -66.4739, -47.9577], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1743, device='cuda:0', dtype=torch.float64)
tensor([-29.5619, -35.5815, -21.9926, -66.5827, -47.9873], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1938, device='cuda:0', dtype=torch.float64)
tensor([-29.5141, -35.5796, -21.9657, -66.6184, -47.9992], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2267, device='cuda:0', dtype=torch.float64)
tensor([-29.5508, -35.5797, -21.9827, -66.7466, -48.0465], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1660, device='cuda:0', dtype=torch.float64)
tensor([-29.5332, -35.5403, -21.9965, -66.8048, -48.0380], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1861, device='cuda:0', dtype=torch.float64)
tensor([-29.5187, -35.5667, -22.0326, -66.9556, -48.1130], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1711, device='cuda:0', dtype=torch.float64)
tensor([-29.5199, -35.6138, -22.1046, -67.0701, -48.1581], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1728, device='cuda:0', dtype=torch.float64)
tensor([-29.5702, -35.6759, -22.1705, -67.2053, -48.1753], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1534, device='cuda:0', dtype=torch.float64)
tensor([-29.6135, -35.7174, -22.2329, -67.2698, -48.1657], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1671, device='cuda:0', dtype=torch.float64)
tensor([-29.6739, -35.7627, -22.2955, -67.3451, -48.0958], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1780, device='cuda:0', dtype=torch.float64)
tensor([-29.7694, -35.8485, -22.3238, -67.5174, -48.0449], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1918, device='cuda:0', dtype=torch.float64)
tensor([-29.7959, -35.8525, -22.3268, -67.6486, -47.9175], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1855, device='cuda:0', dtype=torch.float64)
tensor([-29.8656, -35.9050, -22.3352, -67.9059, -47.8784], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1774, device='cuda:0', dtype=torch.float64)
tensor([-29.8696, -35.9328, -22.3414, -68.0888, -47.7910], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1686, device='cuda:0', dtype=torch.float64)
tensor([-29.9065, -35.9973, -22.3782, -68.3169, -47.7190], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1645, device='cuda:0', dtype=torch.float64)
tensor([-30.0069, -36.0794, -22.4147, -68.5834, -47.6652], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2001, device='cuda:0', dtype=torch.float64)
tensor([-30.1636, -36.1868, -22.4468, -68.8672, -47.6290], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2323, device='cuda:0', dtype=torch.float64)
tensor([-30.1958, -36.2259, -22.4363, -68.9514, -47.4646], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1893, device='cuda:0', dtype=torch.float64)
tensor([-30.2267, -36.2867, -22.4236, -69.0894, -47.3817], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1825, device='cuda:0', dtype=torch.float64)
tensor([-30.2645, -36.3497, -22.4167, -69.1271, -47.3188], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1849, device='cuda:0', dtype=torch.float64)
tensor([-30.3404, -36.3891, -22.4168, -69.1805, -47.2711], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1415, device='cuda:0', dtype=torch.float64)
tensor([-30.3990, -36.4143, -22.4113, -69.1581, -47.1728], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1933, device='cuda:0', dtype=torch.float64)
tensor([-30.3970, -36.4349, -22.3808, -69.0693, -47.0301], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1955, device='cuda:0', dtype=torch.float64)
tensor([-30.3855, -36.4470, -22.3514, -69.0185, -46.9077], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1592, device='cuda:0', dtype=torch.float64)
tensor([-30.3795, -36.4558, -22.3064, -68.9357, -46.7746], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1493, device='cuda:0', dtype=torch.float64)
tensor([-30.3419, -36.4482, -22.2856, -68.8773, -46.6621], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1842, device='cuda:0', dtype=torch.float64)
tensor([-30.2864, -36.4724, -22.2833, -68.8430, -46.5781], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1630, device='cuda:0', dtype=torch.float64)
tensor([-30.2625, -36.4448, -22.2497, -68.6976, -46.4420], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1805, device='cuda:0', dtype=torch.float64)
tensor([-30.2403, -36.4236, -22.2288, -68.5177, -46.3266], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1422, device='cuda:0', dtype=torch.float64)
tensor([-30.2909, -36.4460, -22.2240, -68.4219, -46.2543], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1536, device='cuda:0', dtype=torch.float64)
tensor([-30.3732, -36.4908, -22.2534, -68.3813, -46.2107], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1155, device='cuda:0', dtype=torch.float64)
tensor([-30.4496, -36.5474, -22.2898, -68.3546, -46.1960], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1138, device='cuda:0', dtype=torch.float64)
tensor([-30.5464, -36.6109, -22.3270, -68.3253, -46.1991], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1630, device='cuda:0', dtype=torch.float64)
tensor([-30.5418, -36.6499, -22.3303, -68.2406, -46.1923], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1847, device='cuda:0', dtype=torch.float64)
tensor([-30.5361, -36.6598, -22.2727, -68.0758, -46.1323], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1312, device='cuda:0', dtype=torch.float64)
tensor([-30.5636, -36.6870, -22.2219, -67.9939, -46.0904], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1600, device='cuda:0', dtype=torch.float64)
tensor([-30.6289, -36.7682, -22.1617, -67.9124, -46.0224], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1376, device='cuda:0', dtype=torch.float64)
tensor([-30.6718, -36.8313, -22.0949, -67.8678, -45.9823], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1409, device='cuda:0', dtype=torch.float64)
tensor([-30.6910, -36.8759, -22.0541, -67.8454, -45.9979], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1465, device='cuda:0', dtype=torch.float64)
tensor([-30.6823, -36.9144, -22.0066, -67.8171, -45.9944], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1164, device='cuda:0', dtype=torch.float64)
tensor([-30.6636, -36.9587, -21.9677, -67.7809, -45.9926], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1336, device='cuda:0', dtype=torch.float64)
tensor([-30.6144, -36.9925, -21.9120, -67.7360, -45.9969], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1329, device='cuda:0', dtype=torch.float64)
tensor([-30.5670, -37.0381, -21.8592, -67.6934, -46.0011], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1680, device='cuda:0', dtype=torch.float64)
tensor([-30.4626, -37.0524, -21.8224, -67.6073, -45.9569], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1381, device='cuda:0', dtype=torch.float64)
tensor([-30.3170, -37.0889, -21.8022, -67.5493, -45.9471], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1426, device='cuda:0', dtype=torch.float64)
tensor([-30.1380, -37.0764, -21.7899, -67.4169, -45.8533], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1349, device='cuda:0', dtype=torch.float64)
tensor([-29.9861, -37.0437, -21.7907, -67.2584, -45.7669], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1496, device='cuda:0', dtype=torch.float64)
tensor([-29.8313, -36.9781, -21.8090, -67.1169, -45.6771], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1479, device='cuda:0', dtype=torch.float64)
tensor([-29.7044, -36.9143, -21.8186, -66.9980, -45.5986], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1258, device='cuda:0', dtype=torch.float64)
tensor([-29.5957, -36.8431, -21.8208, -66.9612, -45.5791], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1424, device='cuda:0', dtype=torch.float64)
tensor([-29.5483, -36.8056, -21.8478, -66.9780, -45.5884], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1425, device='cuda:0', dtype=torch.float64)
tensor([-29.5317, -36.7699, -21.8817, -66.9315, -45.5453], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1099, device='cuda:0', dtype=torch.float64)
tensor([-29.5050, -36.7348, -21.9024, -66.8595, -45.5147], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1584, device='cuda:0', dtype=torch.float64)
tensor([-29.4860, -36.7241, -21.9282, -66.7099, -45.4984], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1372, device='cuda:0', dtype=torch.float64)
tensor([-29.4480, -36.7178, -21.9634, -66.5554, -45.4609], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1244, device='cuda:0', dtype=torch.float64)
tensor([-29.4136, -36.7444, -21.9964, -66.4108, -45.4267], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1346, device='cuda:0', dtype=torch.float64)
tensor([-29.3580, -36.6822, -22.0088, -66.1181, -45.3537], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1222, device='cuda:0', dtype=torch.float64)
tensor([-29.2951, -36.6382, -22.0353, -65.8777, -45.2877], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1227, device='cuda:0', dtype=torch.float64)
tensor([-29.2262, -36.6092, -22.0723, -65.6304, -45.2127], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1203, device='cuda:0', dtype=torch.float64)
tensor([-29.1323, -36.5676, -22.0971, -65.3685, -45.1033], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1197, device='cuda:0', dtype=torch.float64)
tensor([-29.0211, -36.5405, -22.1014, -65.1623, -45.0192], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1402, device='cuda:0', dtype=torch.float64)
tensor([-28.9272, -36.5073, -22.1029, -64.9490, -44.9056], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1412, device='cuda:0', dtype=torch.float64)
tensor([-28.9055, -36.5225, -22.1027, -64.8089, -44.8044], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1154, device='cuda:0', dtype=torch.float64)
tensor([-28.8999, -36.5535, -22.1057, -64.6872, -44.7064], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1311, device='cuda:0', dtype=torch.float64)
tensor([-28.9045, -36.5870, -22.1119, -64.5758, -44.5912], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1274, device='cuda:0', dtype=torch.float64)
tensor([-28.9462, -36.6464, -22.1131, -64.4830, -44.4802], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1071, device='cuda:0', dtype=torch.float64)
tensor([-29.0123, -36.7250, -22.0985, -64.4533, -44.4120], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1415, device='cuda:0', dtype=torch.float64)
tensor([-29.0901, -36.7793, -22.0696, -64.4417, -44.3475], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1105, device='cuda:0', dtype=torch.float64)
tensor([-29.1267, -36.7913, -22.0425, -64.3731, -44.2329], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1344, device='cuda:0', dtype=torch.float64)
tensor([-29.2183, -36.8327, -22.0240, -64.3151, -44.1360], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1144, device='cuda:0', dtype=torch.float64)
tensor([-29.3091, -36.8872, -22.0168, -64.2135, -44.0552], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1290, device='cuda:0', dtype=torch.float64)
tensor([-29.3482, -36.9198, -21.9995, -64.0546, -43.9601], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1198, device='cuda:0', dtype=torch.float64)
tensor([-29.4155, -36.9764, -21.9765, -63.9523, -43.8764], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1091, device='cuda:0', dtype=torch.float64)
tensor([-29.4585, -37.0197, -21.9605, -63.7931, -43.7658], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1137, device='cuda:0', dtype=torch.float64)
tensor([-29.4708, -37.0363, -21.9513, -63.6377, -43.6504], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1229, device='cuda:0', dtype=torch.float64)
tensor([-29.4958, -37.0496, -21.9358, -63.4974, -43.5204], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1035, device='cuda:0', dtype=torch.float64)
tensor([-29.5304, -37.0550, -21.9241, -63.3141, -43.3709], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.0904, device='cuda:0', dtype=torch.float64)
tensor([-29.5189, -37.0255, -21.9152, -63.0683, -43.1790], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1045, device='cuda:0', dtype=torch.float64)
tensor([-29.4453, -36.9944, -21.9110, -62.8305, -42.9936], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1010, device='cuda:0', dtype=torch.float64)
tensor([-29.3740, -36.9597, -21.9119, -62.5760, -42.8372], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.0964, device='cuda:0', dtype=torch.float64)
tensor([-29.2653, -36.9225, -21.9057, -62.3335, -42.6950], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1074, device='cuda:0', dtype=torch.float64)
tensor([-29.1381, -36.8720, -21.8996, -62.0858, -42.5210], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1030, device='cuda:0', dtype=torch.float64)
tensor([-28.9910, -36.8169, -21.8851, -61.8172, -42.3266], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.0897, device='cuda:0', dtype=torch.float64)
tensor([-28.8576, -36.7601, -21.8561, -61.5859, -42.1900], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1051, device='cuda:0', dtype=torch.float64)
tensor([-28.7261, -36.6735, -21.8177, -61.3706, -42.0370], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1208, device='cuda:0', dtype=torch.float64)
tensor([-28.6749, -36.6453, -21.7749, -61.2175, -41.9210], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1185, device='cuda:0', dtype=torch.float64)
tensor([-28.6128, -36.6262, -21.7343, -61.1137, -41.8508], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.0990, device='cuda:0', dtype=torch.float64)
tensor([-28.5650, -36.5907, -21.6941, -61.0193, -41.7734], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1067, device='cuda:0', dtype=torch.float64)
tensor([-28.5078, -36.5368, -21.6464, -60.9026, -41.6628], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1093, device='cuda:0', dtype=torch.float64)
tensor([-28.4766, -36.4892, -21.6052, -60.7749, -41.5375], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1224, device='cuda:0', dtype=torch.float64)
tensor([-28.4751, -36.4568, -21.5674, -60.6248, -41.4114], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1190, device='cuda:0', dtype=torch.float64)
tensor([-28.4533, -36.4249, -21.5370, -60.4231, -41.2718], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1157, device='cuda:0', dtype=torch.float64)
tensor([-28.4223, -36.3616, -21.5067, -60.1850, -41.1103], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1077, device='cuda:0', dtype=torch.float64)
tensor([-28.3693, -36.2878, -21.4852, -59.9521, -40.9385], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.0848, device='cuda:0', dtype=torch.float64)
tensor([-28.2889, -36.1847, -21.4656, -59.6951, -40.7539], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.0942, device='cuda:0', dtype=torch.float64)
tensor([-28.1896, -36.0754, -21.4421, -59.4447, -40.5569], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.0850, device='cuda:0', dtype=torch.float64)
tensor([-28.0902, -35.9777, -21.4166, -59.2144, -40.3676], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.0857, device='cuda:0', dtype=torch.float64)
tensor([-28.0059, -35.8952, -21.3902, -58.9947, -40.2032], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.0980, device='cuda:0', dtype=torch.float64)
tensor([-27.9521, -35.8210, -21.3780, -58.8292, -40.0805], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.0937, device='cuda:0', dtype=torch.float64)
tensor([-27.8893, -35.7482, -21.3813, -58.6875, -39.9760], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.0857, device='cuda:0', dtype=torch.float64)
tensor([-27.8356, -35.6932, -21.3734, -58.6279, -39.8899], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.0968, device='cuda:0', dtype=torch.float64)
tensor([-27.7395, -35.6155, -21.3588, -58.5387, -39.8089], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.0931, device='cuda:0', dtype=torch.float64)
tensor([-27.6307, -35.5282, -21.3459, -58.4222, -39.7191], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1079, device='cuda:0', dtype=torch.float64)
tensor([-27.5076, -35.4529, -21.3440, -58.3095, -39.6212], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1054, device='cuda:0', dtype=torch.float64)
tensor([-27.3668, -35.3500, -21.3351, -58.1239, -39.5082], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.0923, device='cuda:0', dtype=torch.float64)
tensor([-27.2465, -35.2429, -21.3317, -57.9344, -39.3890], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.0921, device='cuda:0', dtype=torch.float64)
tensor([-27.1305, -35.1552, -21.3368, -57.7585, -39.2804], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1096, device='cuda:0', dtype=torch.float64)
tensor([-27.0189, -35.0783, -21.3262, -57.6130, -39.1952], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.0857, device='cuda:0', dtype=torch.float64)
tensor([-26.9289, -35.0203, -21.3200, -57.4546, -39.1046], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.0850, device='cuda:0', dtype=torch.float64)
tensor([-26.8252, -34.9772, -21.3113, -57.2880, -39.0093], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1135, device='cuda:0', dtype=torch.float64)
tensor([-26.7215, -34.9576, -21.3078, -57.1255, -38.8951], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1069, device='cuda:0', dtype=torch.float64)
tensor([-26.5950, -34.9247, -21.3053, -56.9072, -38.7481], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1057, device='cuda:0', dtype=torch.float64)
tensor([-26.4619, -34.8859, -21.3116, -56.6550, -38.5874], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.0982, device='cuda:0', dtype=torch.float64)
tensor([-26.3476, -34.8565, -21.3282, -56.3939, -38.4264], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1080, device='cuda:0', dtype=torch.float64)
tensor([-26.2167, -34.8285, -21.3331, -56.0720, -38.2482], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.0854, device='cuda:0', dtype=torch.float64)
tensor([-26.0736, -34.8002, -21.3480, -55.7816, -38.0852], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1100, device='cuda:0', dtype=torch.float64)
tensor([-25.9370, -34.8081, -21.3650, -55.5714, -37.9182], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.0986, device='cuda:0', dtype=torch.float64)
tensor([-25.8331, -34.8361, -21.3654, -55.4107, -37.7453], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1048, device='cuda:0', dtype=torch.float64)
tensor([-25.7755, -34.8808, -21.3717, -55.2543, -37.5886], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.0899, device='cuda:0', dtype=torch.float64)
tensor([-25.6823, -34.8973, -21.3780, -55.0487, -37.4131], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1188, device='cuda:0', dtype=torch.float64)
tensor([-25.5509, -34.9148, -21.3754, -54.8291, -37.2428], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.0927, device='cuda:0', dtype=torch.float64)
tensor([-25.4066, -34.9202, -21.4031, -54.6209, -37.0941], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.0953, device='cuda:0', dtype=torch.float64)
tensor([-25.3031, -34.9338, -21.4263, -54.4317, -36.9533], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1001, device='cuda:0', dtype=torch.float64)
tensor([-25.1867, -34.9242, -21.4353, -54.2103, -36.7958], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.0999, device='cuda:0', dtype=torch.float64)
tensor([-25.0925, -34.9256, -21.4488, -54.0138, -36.6856], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.0974, device='cuda:0', dtype=torch.float64)
tensor([-24.9856, -34.9223, -21.4626, -53.8262, -36.5653], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1017, device='cuda:0', dtype=torch.float64)
tensor([-24.9098, -34.9389, -21.4697, -53.6709, -36.4523], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.0920, device='cuda:0', dtype=torch.float64)
tensor([-24.8037, -34.9239, -21.4655, -53.4692, -36.3104], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1159, device='cuda:0', dtype=torch.float64)
tensor([-24.7459, -34.9497, -21.4767, -53.3003, -36.1696], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.0889, device='cuda:0', dtype=torch.float64)
tensor([-24.6984, -34.9659, -21.4835, -53.1874, -36.0606], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1208, device='cuda:0', dtype=torch.float64)
tensor([-24.6703, -34.9909, -21.4900, -53.0416, -35.9457], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.0828, device='cuda:0', dtype=torch.float64)
tensor([-24.6374, -35.0230, -21.5034, -52.8844, -35.8162], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.0855, device='cuda:0', dtype=torch.float64)
tensor([-24.5777, -35.0226, -21.5200, -52.7433, -35.7171], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.0975, device='cuda:0', dtype=torch.float64)
tensor([-24.5299, -35.0634, -21.5362, -52.6429, -35.6542], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1017, device='cuda:0', dtype=torch.float64)
tensor([-24.4677, -35.0960, -21.5777, -52.5459, -35.5873], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.0867, device='cuda:0', dtype=torch.float64)
tensor([-24.4341, -35.1394, -21.6140, -52.4612, -35.5008], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.0934, device='cuda:0', dtype=torch.float64)
tensor([-24.3598, -35.1588, -21.6555, -52.3235, -35.4088], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.0811, device='cuda:0', dtype=torch.float64)
tensor([-24.2961, -35.1863, -21.6964, -52.1950, -35.3385], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1253, device='cuda:0', dtype=torch.float64)
tensor([-24.2919, -35.2614, -21.7509, -52.1883, -35.2974], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1260, device='cuda:0', dtype=torch.float64)
tensor([-24.2995, -35.3414, -21.8076, -52.1637, -35.2483], device='cuda:0',
       dtype=torch.float64)
Saved results to /home/idrissm/projects/def-mh541-ab/idrissm/neighborVCA/runs/results/tsp/tsp64_/home/idrissm/projects/def-mh541-ab/idrissm/neighborVCA/scripts/VCA/tsp/configHVCA64.json_20250925_034210.csv
rnn.0.0.weight tensor(0.3170, device='cuda:0', dtype=torch.float64)
tensor([-1.6865, -2.6073, -2.8708, -3.3009, -3.1848], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(5.0354, device='cuda:0', dtype=torch.float64)
tensor([-14.4420, -45.6815, -20.3319, -43.9481, -45.2178], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(262.2607, device='cuda:0', dtype=torch.float64)
tensor([-11.2595, -10.9702,  -3.4619,  -7.1320,  -5.7480], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(162.0420, device='cuda:0', dtype=torch.float64)
tensor([ -9.3402, -23.5550, -18.2759, -12.7365, -11.0287], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(226.8343, device='cuda:0', dtype=torch.float64)
tensor([ -5.1013,  -7.9205, -12.8064,  -8.7364,  -6.8890], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(137.8053, device='cuda:0', dtype=torch.float64)
tensor([-2.2557, -4.4507, -3.0326, -6.9965, -3.6976], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(97.5352, device='cuda:0', dtype=torch.float64)
tensor([-2.4077, -4.9498, -3.0172, -4.2279, -3.8879], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(90.9257, device='cuda:0', dtype=torch.float64)
tensor([-2.4209, -5.1269, -3.0246, -3.8605, -4.4922], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(58.9596, device='cuda:0', dtype=torch.float64)
tensor([-2.4937, -4.3627, -2.9898, -3.4999, -4.8477], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(57.3737, device='cuda:0', dtype=torch.float64)
tensor([-2.4312, -4.9517, -2.9411, -5.1601, -4.9907], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(71.0395, device='cuda:0', dtype=torch.float64)
tensor([-2.1523, -4.5720, -2.8463, -5.5557, -5.1379], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(69.6012, device='cuda:0', dtype=torch.float64)
tensor([-1.8999, -3.5155, -2.7825, -3.8255, -4.6581], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(45.7844, device='cuda:0', dtype=torch.float64)
tensor([-1.7580, -3.2285, -2.8212, -3.9429, -4.0511], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(23.2984, device='cuda:0', dtype=torch.float64)
tensor([-1.7305, -3.6023, -2.9288, -4.2254, -3.6554], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(13.1225, device='cuda:0', dtype=torch.float64)
tensor([-1.8257, -3.8362, -3.0383, -4.4305, -3.5033], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(23.0074, device='cuda:0', dtype=torch.float64)
tensor([-2.0893, -3.5305, -3.1374, -4.4940, -3.4670], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(38.6073, device='cuda:0', dtype=torch.float64)
tensor([-1.9325, -3.1292, -3.2181, -4.2586, -3.3878], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(38.9046, device='cuda:0', dtype=torch.float64)
tensor([-1.6733, -2.8775, -3.2885, -3.8961, -3.2829], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(29.0744, device='cuda:0', dtype=torch.float64)
tensor([-1.5967, -2.7379, -3.4023, -3.6636, -3.2045], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(20.1186, device='cuda:0', dtype=torch.float64)
tensor([-1.6056, -2.7083, -3.3738, -3.5081, -3.1868], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(15.7339, device='cuda:0', dtype=torch.float64)
tensor([-1.6696, -2.7554, -3.2757, -3.3801, -3.2577], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(15.1282, device='cuda:0', dtype=torch.float64)
tensor([-1.7789, -2.8729, -3.3002, -3.2683, -3.3939], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(15.2294, device='cuda:0', dtype=torch.float64)
tensor([-1.9092, -3.0644, -3.4025, -3.1668, -3.5028], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(14.8175, device='cuda:0', dtype=torch.float64)
tensor([-2.0265, -3.2320, -3.4588, -3.0817, -3.5230], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(13.8226, device='cuda:0', dtype=torch.float64)
tensor([-2.1162, -3.2368, -3.4081, -3.0253, -3.5020], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(12.2799, device='cuda:0', dtype=torch.float64)
tensor([-2.1788, -3.1736, -3.2984, -2.9952, -3.4849], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(12.6742, device='cuda:0', dtype=torch.float64)
tensor([-2.2111, -3.1173, -3.1893, -2.9835, -3.4470], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(13.0042, device='cuda:0', dtype=torch.float64)
tensor([-2.2082, -3.0525, -3.1046, -2.9900, -3.3730], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(12.7255, device='cuda:0', dtype=torch.float64)
tensor([-2.1623, -2.9837, -3.0484, -3.0175, -3.2832], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(11.6438, device='cuda:0', dtype=torch.float64)
tensor([-2.0731, -2.9436, -3.0199, -3.0627, -3.1985], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(9.7999, device='cuda:0', dtype=torch.float64)
tensor([-1.9608, -2.9617, -3.0141, -3.1156, -3.1266], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(7.7967, device='cuda:0', dtype=torch.float64)
tensor([-1.8530, -3.0025, -3.0223, -3.1682, -3.0714], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(6.2373, device='cuda:0', dtype=torch.float64)
tensor([-1.7656, -2.9752, -3.0348, -3.2143, -3.0374], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(6.5393, device='cuda:0', dtype=torch.float64)
tensor([-1.7031, -2.8632, -3.0427, -3.2477, -3.0268], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(7.6614, device='cuda:0', dtype=torch.float64)
tensor([-1.6654, -2.7397, -3.0407, -3.2636, -3.0383], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(7.8500, device='cuda:0', dtype=torch.float64)
tensor([-1.6510, -2.6514, -3.0266, -3.2609, -3.0683], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(7.2014, device='cuda:0', dtype=torch.float64)
tensor([-1.6578, -2.5992, -3.0010, -3.2414, -3.1132], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(6.1168, device='cuda:0', dtype=torch.float64)
tensor([-1.6826, -2.5762, -2.9676, -3.2106, -3.1697], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(4.9593, device='cuda:0', dtype=torch.float64)
tensor([-1.7213, -2.5766, -2.9307, -3.1756, -3.2318], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(4.0270, device='cuda:0', dtype=torch.float64)
tensor([-1.7685, -2.5947, -2.8937, -3.1430, -3.2920], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(3.4845, device='cuda:0', dtype=torch.float64)
tensor([-1.8173, -2.6240, -2.8597, -3.1179, -3.3420], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(3.7689, device='cuda:0', dtype=torch.float64)
tensor([-1.8611, -2.6571, -2.8298, -3.1015, -3.3742], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(4.4521, device='cuda:0', dtype=torch.float64)
tensor([-1.8942, -2.6863, -2.8038, -3.0924, -3.3848], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(4.8086, device='cuda:0', dtype=torch.float64)
tensor([-1.9127, -2.7048, -2.7812, -3.0884, -3.3747], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(4.6818, device='cuda:0', dtype=torch.float64)
tensor([-1.9166, -2.7106, -2.7627, -3.0884, -3.3499], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(4.1540, device='cuda:0', dtype=torch.float64)
tensor([-1.9084, -2.7061, -2.7498, -3.0923, -3.3180], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(3.5473, device='cuda:0', dtype=torch.float64)
tensor([-1.8921, -2.6969, -2.7432, -3.1005, -3.2857], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.9206, device='cuda:0', dtype=torch.float64)
tensor([-1.8721, -2.6880, -2.7422, -3.1126, -3.2575], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.7076, device='cuda:0', dtype=torch.float64)
tensor([-1.8523, -2.6801, -2.7454, -3.1274, -3.2362], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.7684, device='cuda:0', dtype=torch.float64)
tensor([-1.8358, -2.6736, -2.7512, -3.1429, -3.2232], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.7642, device='cuda:0', dtype=torch.float64)
tensor([-1.8241, -2.6687, -2.7582, -3.1572, -3.2184], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.6610, device='cuda:0', dtype=torch.float64)
tensor([-1.8175, -2.6656, -2.7650, -3.1692, -3.2204], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.5172, device='cuda:0', dtype=torch.float64)
tensor([-1.8152, -2.6643, -2.7700, -3.1777, -3.2268], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.3690, device='cuda:0', dtype=torch.float64)
tensor([-1.8159, -2.6647, -2.7717, -3.1825, -3.2348], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.2428, device='cuda:0', dtype=torch.float64)
tensor([-1.8181, -2.6662, -2.7697, -3.1838, -3.2420], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.2193, device='cuda:0', dtype=torch.float64)
tensor([-1.8202, -2.6682, -2.7649, -3.1822, -3.2469], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.3092, device='cuda:0', dtype=torch.float64)
tensor([-1.8212, -2.6696, -2.7586, -3.1786, -3.2482], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.2249, device='cuda:0', dtype=torch.float64)
tensor([-1.8203, -2.6698, -2.7532, -3.1749, -3.2466], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0775, device='cuda:0', dtype=torch.float64)
tensor([-1.8171, -2.6680, -2.7504, -3.1727, -3.2422], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8200, device='cuda:0', dtype=torch.float64)
tensor([-1.8123, -2.6642, -2.7515, -3.1729, -3.2366], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7373, device='cuda:0', dtype=torch.float64)
tensor([-1.8062, -2.6584, -2.7565, -3.1758, -3.2311], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7780, device='cuda:0', dtype=torch.float64)
tensor([-1.7990, -2.6508, -2.7649, -3.1811, -3.2270], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7702, device='cuda:0', dtype=torch.float64)
tensor([-1.7915, -2.6418, -2.7763, -3.1885, -3.2250], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7192, device='cuda:0', dtype=torch.float64)
tensor([-1.7850, -2.6330, -2.7889, -3.1967, -3.2255], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6626, device='cuda:0', dtype=torch.float64)
tensor([-1.7808, -2.6251, -2.8014, -3.2048, -3.2283], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5487, device='cuda:0', dtype=torch.float64)
tensor([-1.7792, -2.6190, -2.8130, -3.2121, -3.2325], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5123, device='cuda:0', dtype=torch.float64)
tensor([-1.7807, -2.6150, -2.8225, -3.2178, -3.2367], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5606, device='cuda:0', dtype=torch.float64)
tensor([-1.7848, -2.6136, -2.8291, -3.2213, -3.2399], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4812, device='cuda:0', dtype=torch.float64)
tensor([-1.7911, -2.6145, -2.8325, -3.2220, -3.2419], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4114, device='cuda:0', dtype=torch.float64)
tensor([-1.7990, -2.6176, -2.8323, -3.2196, -3.2421], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2321, device='cuda:0', dtype=torch.float64)
tensor([-1.8079, -2.6223, -2.8290, -3.2140, -3.2410], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1706, device='cuda:0', dtype=torch.float64)
tensor([-1.8173, -2.6286, -2.8229, -3.2057, -3.2389], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0901, device='cuda:0', dtype=torch.float64)
tensor([-1.8268, -2.6356, -2.8150, -3.1957, -3.2366], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0891, device='cuda:0', dtype=torch.float64)
tensor([-1.8361, -2.6421, -2.8068, -3.1851, -3.2353], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1323, device='cuda:0', dtype=torch.float64)
tensor([-1.8442, -2.6477, -2.7993, -3.1744, -3.2346], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1850, device='cuda:0', dtype=torch.float64)
tensor([-1.8506, -2.6519, -2.7932, -3.1640, -3.2348], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1917, device='cuda:0', dtype=torch.float64)
tensor([-1.8550, -2.6542, -2.7888, -3.1552, -3.2355], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0832, device='cuda:0', dtype=torch.float64)
tensor([-1.8567, -2.6546, -2.7865, -3.1485, -3.2361], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9942, device='cuda:0', dtype=torch.float64)
tensor([-1.8557, -2.6531, -2.7861, -3.1440, -3.2361], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9283, device='cuda:0', dtype=torch.float64)
tensor([-1.8523, -2.6498, -2.7871, -3.1419, -3.2348], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9217, device='cuda:0', dtype=torch.float64)
tensor([-1.8466, -2.6451, -2.7889, -3.1417, -3.2321], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9406, device='cuda:0', dtype=torch.float64)
tensor([-1.8393, -2.6396, -2.7909, -3.1432, -3.2277], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9245, device='cuda:0', dtype=torch.float64)
tensor([-1.8310, -2.6337, -2.7933, -3.1463, -3.2221], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8990, device='cuda:0', dtype=torch.float64)
tensor([-1.8225, -2.6280, -2.7955, -3.1514, -3.2156], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8435, device='cuda:0', dtype=torch.float64)
tensor([-1.8151, -2.6229, -2.7976, -3.1570, -3.2090], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8216, device='cuda:0', dtype=torch.float64)
tensor([-1.8088, -2.6192, -2.7992, -3.1625, -3.2032], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8084, device='cuda:0', dtype=torch.float64)
tensor([-1.8046, -2.6166, -2.8004, -3.1674, -3.1986], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7993, device='cuda:0', dtype=torch.float64)
tensor([-1.8026, -2.6149, -2.8014, -3.1715, -3.1959], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7795, device='cuda:0', dtype=torch.float64)
tensor([-1.8032, -2.6148, -2.8014, -3.1737, -3.1951], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7805, device='cuda:0', dtype=torch.float64)
tensor([-1.8059, -2.6159, -2.8006, -3.1745, -3.1961], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8111, device='cuda:0', dtype=torch.float64)
tensor([-1.8105, -2.6185, -2.7996, -3.1745, -3.1987], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7393, device='cuda:0', dtype=torch.float64)
tensor([-1.8161, -2.6218, -2.7983, -3.1728, -3.2013], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7197, device='cuda:0', dtype=torch.float64)
tensor([-1.8223, -2.6259, -2.7967, -3.1701, -3.2037], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6688, device='cuda:0', dtype=torch.float64)
tensor([-1.8282, -2.6307, -2.7946, -3.1664, -3.2054], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6809, device='cuda:0', dtype=torch.float64)
tensor([-1.8338, -2.6359, -2.7924, -3.1625, -3.2064], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6727, device='cuda:0', dtype=torch.float64)
tensor([-1.8378, -2.6408, -2.7906, -3.1587, -3.2059], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6742, device='cuda:0', dtype=torch.float64)
tensor([-1.8401, -2.6451, -2.7889, -3.1554, -3.2041], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6975, device='cuda:0', dtype=torch.float64)
tensor([-1.8407, -2.6486, -2.7876, -3.1527, -3.2017], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7057, device='cuda:0', dtype=torch.float64)
tensor([-1.8401, -2.6518, -2.7866, -3.1511, -3.1980], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6428, device='cuda:0', dtype=torch.float64)
tensor([-1.8388, -2.6540, -2.7863, -3.1501, -3.1951], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6009, device='cuda:0', dtype=torch.float64)
tensor([-1.8370, -2.6555, -2.7866, -3.1503, -3.1925], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6783, device='cuda:0', dtype=torch.float64)
tensor([-1.8346, -2.6562, -2.7872, -3.1515, -3.1908], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6251, device='cuda:0', dtype=torch.float64)
tensor([-1.8319, -2.6559, -2.7886, -3.1530, -3.1896], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6240, device='cuda:0', dtype=torch.float64)
tensor([-1.8293, -2.6546, -2.7910, -3.1548, -3.1896], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6249, device='cuda:0', dtype=torch.float64)
tensor([-1.8270, -2.6529, -2.7936, -3.1566, -3.1899], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6464, device='cuda:0', dtype=torch.float64)
tensor([-1.8251, -2.6512, -2.7960, -3.1582, -3.1905], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7116, device='cuda:0', dtype=torch.float64)
tensor([-1.8238, -2.6495, -2.7981, -3.1590, -3.1910], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6778, device='cuda:0', dtype=torch.float64)
tensor([-1.8228, -2.6486, -2.7994, -3.1594, -3.1914], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6466, device='cuda:0', dtype=torch.float64)
tensor([-1.8220, -2.6474, -2.8006, -3.1603, -3.1919], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6189, device='cuda:0', dtype=torch.float64)
tensor([-1.8214, -2.6467, -2.8018, -3.1614, -3.1924], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6511, device='cuda:0', dtype=torch.float64)
tensor([-1.8224, -2.6470, -2.8029, -3.1614, -3.1928], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6347, device='cuda:0', dtype=torch.float64)
tensor([-1.8232, -2.6473, -2.8029, -3.1615, -3.1922], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6234, device='cuda:0', dtype=torch.float64)
tensor([-1.8246, -2.6481, -2.8025, -3.1620, -3.1916], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6365, device='cuda:0', dtype=torch.float64)
tensor([-1.8257, -2.6485, -2.8016, -3.1629, -3.1908], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6485, device='cuda:0', dtype=torch.float64)
tensor([-1.8267, -2.6491, -2.8010, -3.1636, -3.1902], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6830, device='cuda:0', dtype=torch.float64)
tensor([-1.8282, -2.6497, -2.8000, -3.1646, -3.1900], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5934, device='cuda:0', dtype=torch.float64)
tensor([-1.8301, -2.6508, -2.7989, -3.1650, -3.1895], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7854, device='cuda:0', dtype=torch.float64)
tensor([-1.8331, -2.6517, -2.7990, -3.1647, -3.1900], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6342, device='cuda:0', dtype=torch.float64)
tensor([-1.8356, -2.6526, -2.7984, -3.1642, -3.1903], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6461, device='cuda:0', dtype=torch.float64)
tensor([-1.8376, -2.6526, -2.7975, -3.1626, -3.1898], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6722, device='cuda:0', dtype=torch.float64)
tensor([-1.8393, -2.6526, -2.7963, -3.1607, -3.1890], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6487, device='cuda:0', dtype=torch.float64)
tensor([-1.8401, -2.6527, -2.7954, -3.1592, -3.1879], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5963, device='cuda:0', dtype=torch.float64)
tensor([-1.8399, -2.6528, -2.7946, -3.1577, -3.1859], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5998, device='cuda:0', dtype=torch.float64)
tensor([-1.8393, -2.6528, -2.7944, -3.1571, -3.1844], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5805, device='cuda:0', dtype=torch.float64)
tensor([-1.8381, -2.6524, -2.7943, -3.1572, -3.1827], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6216, device='cuda:0', dtype=torch.float64)
tensor([-1.8362, -2.6518, -2.7943, -3.1574, -3.1806], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6027, device='cuda:0', dtype=torch.float64)
tensor([-1.8348, -2.6513, -2.7939, -3.1580, -3.1797], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5693, device='cuda:0', dtype=torch.float64)
tensor([-1.8335, -2.6510, -2.7942, -3.1592, -3.1803], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5796, device='cuda:0', dtype=torch.float64)
tensor([-1.8331, -2.6517, -2.7941, -3.1596, -3.1817], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5881, device='cuda:0', dtype=torch.float64)
tensor([-1.8328, -2.6526, -2.7941, -3.1606, -3.1838], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6401, device='cuda:0', dtype=torch.float64)
tensor([-1.8325, -2.6532, -2.7941, -3.1624, -3.1863], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5503, device='cuda:0', dtype=torch.float64)
tensor([-1.8318, -2.6534, -2.7939, -3.1640, -3.1881], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6902, device='cuda:0', dtype=torch.float64)
tensor([-1.8316, -2.6542, -2.7933, -3.1649, -3.1888], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6450, device='cuda:0', dtype=torch.float64)
tensor([-1.8318, -2.6552, -2.7929, -3.1655, -3.1890], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5532, device='cuda:0', dtype=torch.float64)
tensor([-1.8329, -2.6558, -2.7923, -3.1653, -3.1888], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6832, device='cuda:0', dtype=torch.float64)
tensor([-1.8353, -2.6564, -2.7922, -3.1653, -3.1891], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6162, device='cuda:0', dtype=torch.float64)
tensor([-1.8377, -2.6554, -2.7927, -3.1656, -3.1895], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7425, device='cuda:0', dtype=torch.float64)
tensor([-1.8392, -2.6532, -2.7940, -3.1660, -3.1892], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5687, device='cuda:0', dtype=torch.float64)
tensor([-1.8398, -2.6510, -2.7953, -3.1664, -3.1878], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6297, device='cuda:0', dtype=torch.float64)
tensor([-1.8397, -2.6493, -2.7965, -3.1668, -3.1862], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6389, device='cuda:0', dtype=torch.float64)
tensor([-1.8389, -2.6479, -2.7964, -3.1660, -3.1835], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6814, device='cuda:0', dtype=torch.float64)
tensor([-1.8369, -2.6465, -2.7959, -3.1659, -3.1800], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6579, device='cuda:0', dtype=torch.float64)
tensor([-1.8342, -2.6454, -2.7946, -3.1660, -3.1770], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7464, device='cuda:0', dtype=torch.float64)
tensor([-1.8327, -2.6459, -2.7924, -3.1659, -3.1744], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5599, device='cuda:0', dtype=torch.float64)
tensor([-1.8321, -2.6473, -2.7896, -3.1644, -3.1731], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6582, device='cuda:0', dtype=torch.float64)
tensor([-1.8320, -2.6490, -2.7872, -3.1631, -3.1737], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5491, device='cuda:0', dtype=torch.float64)
tensor([-1.8329, -2.6508, -2.7863, -3.1618, -3.1754], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6337, device='cuda:0', dtype=torch.float64)
tensor([-1.8348, -2.6532, -2.7860, -3.1606, -3.1774], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6478, device='cuda:0', dtype=torch.float64)
tensor([-1.8376, -2.6554, -2.7866, -3.1590, -3.1807], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6043, device='cuda:0', dtype=torch.float64)
tensor([-1.8406, -2.6574, -2.7878, -3.1578, -3.1840], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7745, device='cuda:0', dtype=torch.float64)
tensor([-1.8434, -2.6592, -2.7897, -3.1553, -3.1883], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6222, device='cuda:0', dtype=torch.float64)
tensor([-1.8459, -2.6608, -2.7921, -3.1541, -3.1910], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6653, device='cuda:0', dtype=torch.float64)
tensor([-1.8478, -2.6622, -2.7949, -3.1535, -3.1923], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6906, device='cuda:0', dtype=torch.float64)
tensor([-1.8485, -2.6631, -2.7972, -3.1531, -3.1917], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4848, device='cuda:0', dtype=torch.float64)
tensor([-1.8484, -2.6626, -2.7991, -3.1542, -3.1912], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6916, device='cuda:0', dtype=torch.float64)
tensor([-1.8472, -2.6603, -2.8010, -3.1560, -3.1901], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6990, device='cuda:0', dtype=torch.float64)
tensor([-1.8448, -2.6576, -2.8036, -3.1581, -3.1891], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7396, device='cuda:0', dtype=torch.float64)
tensor([-1.8425, -2.6546, -2.8042, -3.1613, -3.1895], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6938, device='cuda:0', dtype=torch.float64)
tensor([-1.8402, -2.6515, -2.8046, -3.1648, -3.1902], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7113, device='cuda:0', dtype=torch.float64)
tensor([-1.8385, -2.6488, -2.8037, -3.1675, -3.1914], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6729, device='cuda:0', dtype=torch.float64)
tensor([-1.8376, -2.6477, -2.8020, -3.1696, -3.1929], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6276, device='cuda:0', dtype=torch.float64)
tensor([-1.8373, -2.6479, -2.7989, -3.1697, -3.1927], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7461, device='cuda:0', dtype=torch.float64)
tensor([-1.8370, -2.6488, -2.7958, -3.1688, -3.1919], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5840, device='cuda:0', dtype=torch.float64)
tensor([-1.8360, -2.6496, -2.7930, -3.1680, -3.1897], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5888, device='cuda:0', dtype=torch.float64)
tensor([-1.8342, -2.6511, -2.7917, -3.1669, -3.1883], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6414, device='cuda:0', dtype=torch.float64)
tensor([-1.8334, -2.6528, -2.7908, -3.1662, -3.1877], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7675, device='cuda:0', dtype=torch.float64)
tensor([-1.8341, -2.6541, -2.7900, -3.1649, -3.1871], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7009, device='cuda:0', dtype=torch.float64)
tensor([-1.8349, -2.6546, -2.7901, -3.1632, -3.1865], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6538, device='cuda:0', dtype=torch.float64)
tensor([-1.8357, -2.6551, -2.7912, -3.1609, -3.1854], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7332, device='cuda:0', dtype=torch.float64)
tensor([-1.8370, -2.6552, -2.7926, -3.1572, -3.1838], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6969, device='cuda:0', dtype=torch.float64)
tensor([-1.8386, -2.6567, -2.7941, -3.1535, -3.1834], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6017, device='cuda:0', dtype=torch.float64)
tensor([-1.8404, -2.6578, -2.7948, -3.1507, -3.1829], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7703, device='cuda:0', dtype=torch.float64)
tensor([-1.8436, -2.6574, -2.7959, -3.1487, -3.1824], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7752, device='cuda:0', dtype=torch.float64)
tensor([-1.8453, -2.6575, -2.7973, -3.1471, -3.1825], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8243, device='cuda:0', dtype=torch.float64)
tensor([-1.8459, -2.6567, -2.7988, -3.1462, -3.1836], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6883, device='cuda:0', dtype=torch.float64)
tensor([-1.8481, -2.6569, -2.7991, -3.1475, -3.1871], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7262, device='cuda:0', dtype=torch.float64)
tensor([-1.8485, -2.6570, -2.7986, -3.1509, -3.1884], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6106, device='cuda:0', dtype=torch.float64)
tensor([-1.8477, -2.6575, -2.7978, -3.1552, -3.1895], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6828, device='cuda:0', dtype=torch.float64)
tensor([-1.8468, -2.6574, -2.7973, -3.1600, -3.1904], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6466, device='cuda:0', dtype=torch.float64)
tensor([-1.8461, -2.6569, -2.7976, -3.1638, -3.1905], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7341, device='cuda:0', dtype=torch.float64)
tensor([-1.8445, -2.6577, -2.7981, -3.1668, -3.1886], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6738, device='cuda:0', dtype=torch.float64)
tensor([-1.8434, -2.6586, -2.7990, -3.1688, -3.1861], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6886, device='cuda:0', dtype=torch.float64)
tensor([-1.8436, -2.6592, -2.7997, -3.1705, -3.1846], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6091, device='cuda:0', dtype=torch.float64)
tensor([-1.8435, -2.6598, -2.8018, -3.1711, -3.1838], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7470, device='cuda:0', dtype=torch.float64)
tensor([-1.8423, -2.6590, -2.8046, -3.1713, -3.1828], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6759, device='cuda:0', dtype=torch.float64)
tensor([-1.8412, -2.6586, -2.8068, -3.1714, -3.1814], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6502, device='cuda:0', dtype=torch.float64)
tensor([-1.8394, -2.6574, -2.8091, -3.1719, -3.1809], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7915, device='cuda:0', dtype=torch.float64)
tensor([-1.8392, -2.6557, -2.8117, -3.1706, -3.1832], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5984, device='cuda:0', dtype=torch.float64)
tensor([-1.8392, -2.6544, -2.8140, -3.1702, -3.1861], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7737, device='cuda:0', dtype=torch.float64)
tensor([-1.8398, -2.6548, -2.8157, -3.1701, -3.1895], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6967, device='cuda:0', dtype=torch.float64)
tensor([-1.8408, -2.6553, -2.8153, -3.1691, -3.1917], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7010, device='cuda:0', dtype=torch.float64)
tensor([-1.8417, -2.6556, -2.8131, -3.1675, -3.1924], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7612, device='cuda:0', dtype=torch.float64)
tensor([-1.8424, -2.6562, -2.8089, -3.1666, -3.1920], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7390, device='cuda:0', dtype=torch.float64)
tensor([-1.8442, -2.6579, -2.8056, -3.1654, -3.1903], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7279, device='cuda:0', dtype=torch.float64)
tensor([-1.8464, -2.6598, -2.8038, -3.1639, -3.1900], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7182, device='cuda:0', dtype=torch.float64)
tensor([-1.8492, -2.6618, -2.8021, -3.1624, -3.1890], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7417, device='cuda:0', dtype=torch.float64)
tensor([-1.8517, -2.6640, -2.8006, -3.1613, -3.1874], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8143, device='cuda:0', dtype=torch.float64)
tensor([-1.8546, -2.6658, -2.7998, -3.1616, -3.1867], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9571, device='cuda:0', dtype=torch.float64)
tensor([-1.8580, -2.6662, -2.8008, -3.1637, -3.1881], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7253, device='cuda:0', dtype=torch.float64)
tensor([-1.8615, -2.6667, -2.8020, -3.1656, -3.1905], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7530, device='cuda:0', dtype=torch.float64)
tensor([-1.8637, -2.6667, -2.8037, -3.1682, -3.1929], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8118, device='cuda:0', dtype=torch.float64)
tensor([-1.8656, -2.6667, -2.8054, -3.1707, -3.1942], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7168, device='cuda:0', dtype=torch.float64)
tensor([-1.8660, -2.6666, -2.8055, -3.1708, -3.1933], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9371, device='cuda:0', dtype=torch.float64)
tensor([-1.8639, -2.6662, -2.8052, -3.1715, -3.1902], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7896, device='cuda:0', dtype=torch.float64)
tensor([-1.8594, -2.6646, -2.8059, -3.1731, -3.1861], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0033, device='cuda:0', dtype=torch.float64)
tensor([-1.8551, -2.6644, -2.8072, -3.1733, -3.1831], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7588, device='cuda:0', dtype=torch.float64)
tensor([-1.8526, -2.6638, -2.8080, -3.1713, -3.1801], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8852, device='cuda:0', dtype=torch.float64)
tensor([-1.8508, -2.6625, -2.8079, -3.1676, -3.1760], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8072, device='cuda:0', dtype=torch.float64)
tensor([-1.8496, -2.6635, -2.8070, -3.1632, -3.1717], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7896, device='cuda:0', dtype=torch.float64)
tensor([-1.8474, -2.6640, -2.8061, -3.1592, -3.1663], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9472, device='cuda:0', dtype=torch.float64)
tensor([-1.8455, -2.6636, -2.8051, -3.1572, -3.1630], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7424, device='cuda:0', dtype=torch.float64)
tensor([-1.8464, -2.6647, -2.8025, -3.1553, -3.1636], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7922, device='cuda:0', dtype=torch.float64)
tensor([-1.8480, -2.6663, -2.7991, -3.1529, -3.1655], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8953, device='cuda:0', dtype=torch.float64)
tensor([-1.8517, -2.6680, -2.7947, -3.1518, -3.1689], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7229, device='cuda:0', dtype=torch.float64)
tensor([-1.8543, -2.6687, -2.7897, -3.1524, -3.1725], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7916, device='cuda:0', dtype=torch.float64)
tensor([-1.8570, -2.6698, -2.7858, -3.1540, -3.1758], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8248, device='cuda:0', dtype=torch.float64)
tensor([-1.8605, -2.6714, -2.7820, -3.1555, -3.1785], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9280, device='cuda:0', dtype=torch.float64)
tensor([-1.8629, -2.6701, -2.7801, -3.1570, -3.1807], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8169, device='cuda:0', dtype=torch.float64)
tensor([-1.8639, -2.6675, -2.7810, -3.1578, -3.1821], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8025, device='cuda:0', dtype=torch.float64)
tensor([-1.8645, -2.6645, -2.7838, -3.1603, -3.1851], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7055, device='cuda:0', dtype=torch.float64)
tensor([-1.8653, -2.6615, -2.7854, -3.1627, -3.1890], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7947, device='cuda:0', dtype=torch.float64)
tensor([-1.8647, -2.6578, -2.7885, -3.1651, -3.1930], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8504, device='cuda:0', dtype=torch.float64)
tensor([-1.8647, -2.6561, -2.7915, -3.1664, -3.1958], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8227, device='cuda:0', dtype=torch.float64)
tensor([-1.8646, -2.6563, -2.7935, -3.1668, -3.1984], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8109, device='cuda:0', dtype=torch.float64)
tensor([-1.8639, -2.6547, -2.7954, -3.1671, -3.2005], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7296, device='cuda:0', dtype=torch.float64)
tensor([-1.8639, -2.6533, -2.7968, -3.1664, -3.2015], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7586, device='cuda:0', dtype=torch.float64)
tensor([-1.8654, -2.6558, -2.7969, -3.1644, -3.2020], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7603, device='cuda:0', dtype=torch.float64)
tensor([-1.8671, -2.6603, -2.7947, -3.1607, -3.2003], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6980, device='cuda:0', dtype=torch.float64)
tensor([-1.8671, -2.6642, -2.7931, -3.1578, -3.1985], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8185, device='cuda:0', dtype=torch.float64)
tensor([-1.8670, -2.6681, -2.7912, -3.1550, -3.1969], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9048, device='cuda:0', dtype=torch.float64)
tensor([-1.8649, -2.6711, -2.7887, -3.1557, -3.1940], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8639, device='cuda:0', dtype=torch.float64)
tensor([-1.8635, -2.6711, -2.7899, -3.1571, -3.1909], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8362, device='cuda:0', dtype=torch.float64)
tensor([-1.8609, -2.6708, -2.7916, -3.1595, -3.1866], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7793, device='cuda:0', dtype=torch.float64)
tensor([-1.8557, -2.6690, -2.7957, -3.1645, -3.1854], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8320, device='cuda:0', dtype=torch.float64)
tensor([-1.8501, -2.6677, -2.8002, -3.1697, -3.1861], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7812, device='cuda:0', dtype=torch.float64)
tensor([-1.8467, -2.6653, -2.8057, -3.1751, -3.1879], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9062, device='cuda:0', dtype=torch.float64)
tensor([-1.8441, -2.6632, -2.8108, -3.1810, -3.1930], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9285, device='cuda:0', dtype=torch.float64)
tensor([-1.8428, -2.6613, -2.8143, -3.1859, -3.1974], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9185, device='cuda:0', dtype=torch.float64)
tensor([-1.8423, -2.6591, -2.8155, -3.1877, -3.1972], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9583, device='cuda:0', dtype=torch.float64)
tensor([-1.8451, -2.6572, -2.8140, -3.1873, -3.1955], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0313, device='cuda:0', dtype=torch.float64)
tensor([-1.8488, -2.6562, -2.8129, -3.1840, -3.1938], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1161, device='cuda:0', dtype=torch.float64)
tensor([-1.8532, -2.6558, -2.8106, -3.1796, -3.1875], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8694, device='cuda:0', dtype=torch.float64)
tensor([-1.8597, -2.6559, -2.8095, -3.1761, -3.1833], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0517, device='cuda:0', dtype=torch.float64)
tensor([-1.8662, -2.6580, -2.8085, -3.1731, -3.1801], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8365, device='cuda:0', dtype=torch.float64)
tensor([-1.8717, -2.6605, -2.8079, -3.1718, -3.1780], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8655, device='cuda:0', dtype=torch.float64)
tensor([-1.8757, -2.6626, -2.8083, -3.1705, -3.1778], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9051, device='cuda:0', dtype=torch.float64)
tensor([-1.8798, -2.6649, -2.8104, -3.1690, -3.1812], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9570, device='cuda:0', dtype=torch.float64)
tensor([-1.8820, -2.6664, -2.8138, -3.1716, -3.1874], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8486, device='cuda:0', dtype=torch.float64)
tensor([-1.8813, -2.6670, -2.8196, -3.1743, -3.1942], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7611, device='cuda:0', dtype=torch.float64)
tensor([-1.8774, -2.6662, -2.8237, -3.1756, -3.1976], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9225, device='cuda:0', dtype=torch.float64)
tensor([-1.8726, -2.6647, -2.8267, -3.1777, -3.1963], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9319, device='cuda:0', dtype=torch.float64)
tensor([-1.8665, -2.6615, -2.8286, -3.1791, -3.1929], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0522, device='cuda:0', dtype=torch.float64)
tensor([-1.8622, -2.6592, -2.8274, -3.1780, -3.1892], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8214, device='cuda:0', dtype=torch.float64)
tensor([-1.8588, -2.6579, -2.8247, -3.1759, -3.1862], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8957, device='cuda:0', dtype=torch.float64)
tensor([-1.8559, -2.6581, -2.8205, -3.1728, -3.1836], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9443, device='cuda:0', dtype=torch.float64)
tensor([-1.8587, -2.6608, -2.8154, -3.1689, -3.1865], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9515, device='cuda:0', dtype=torch.float64)
tensor([-1.8632, -2.6636, -2.8122, -3.1650, -3.1915], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0600, device='cuda:0', dtype=torch.float64)
tensor([-1.8672, -2.6685, -2.8110, -3.1582, -3.1974], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9981, device='cuda:0', dtype=torch.float64)
tensor([-1.8701, -2.6733, -2.8099, -3.1515, -3.2005], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9044, device='cuda:0', dtype=torch.float64)
tensor([-1.8731, -2.6766, -2.8103, -3.1443, -3.2046], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8970, device='cuda:0', dtype=torch.float64)
tensor([-1.8726, -2.6782, -2.8115, -3.1376, -3.2033], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7936, device='cuda:0', dtype=torch.float64)
tensor([-1.8718, -2.6791, -2.8133, -3.1325, -3.2011], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9384, device='cuda:0', dtype=torch.float64)
tensor([-1.8695, -2.6817, -2.8145, -3.1307, -3.1976], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9404, device='cuda:0', dtype=torch.float64)
tensor([-1.8684, -2.6854, -2.8128, -3.1320, -3.1966], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9123, device='cuda:0', dtype=torch.float64)
tensor([-1.8662, -2.6849, -2.8132, -3.1367, -3.1961], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0266, device='cuda:0', dtype=torch.float64)
tensor([-1.8649, -2.6823, -2.8152, -3.1453, -3.1979], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0390, device='cuda:0', dtype=torch.float64)
tensor([-1.8615, -2.6792, -2.8157, -3.1532, -3.1968], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0536, device='cuda:0', dtype=torch.float64)
tensor([-1.8561, -2.6737, -2.8156, -3.1615, -3.1919], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0583, device='cuda:0', dtype=torch.float64)
tensor([-1.8504, -2.6661, -2.8136, -3.1690, -3.1860], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0482, device='cuda:0', dtype=torch.float64)
tensor([-1.8497, -2.6632, -2.8099, -3.1748, -3.1846], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9093, device='cuda:0', dtype=torch.float64)
tensor([-1.8504, -2.6622, -2.8049, -3.1803, -3.1833], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9497, device='cuda:0', dtype=torch.float64)
tensor([-1.8521, -2.6631, -2.8002, -3.1834, -3.1843], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7904, device='cuda:0', dtype=torch.float64)
tensor([-1.8563, -2.6658, -2.7977, -3.1849, -3.1892], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1912, device='cuda:0', dtype=torch.float64)
tensor([-1.8642, -2.6692, -2.7961, -3.1807, -3.1931], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2017, device='cuda:0', dtype=torch.float64)
tensor([-1.8726, -2.6751, -2.7960, -3.1754, -3.1952], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7164, device='cuda:0', dtype=torch.float64)
tensor([-1.8804, -2.6801, -2.7954, -3.1691, -3.1965], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9892, device='cuda:0', dtype=torch.float64)
tensor([-1.8882, -2.6843, -2.7998, -3.1609, -3.1985], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9183, device='cuda:0', dtype=torch.float64)
tensor([-1.8941, -2.6849, -2.8049, -3.1561, -3.1991], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8898, device='cuda:0', dtype=torch.float64)
tensor([-1.8987, -2.6870, -2.8076, -3.1500, -3.2006], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1605, device='cuda:0', dtype=torch.float64)
tensor([-1.8997, -2.6876, -2.8100, -3.1489, -3.2007], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9829, device='cuda:0', dtype=torch.float64)
tensor([-1.8982, -2.6884, -2.8117, -3.1492, -3.1973], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0278, device='cuda:0', dtype=torch.float64)
tensor([-1.8970, -2.6895, -2.8111, -3.1494, -3.1953], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9207, device='cuda:0', dtype=torch.float64)
tensor([-1.8965, -2.6908, -2.8094, -3.1498, -3.1940], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9408, device='cuda:0', dtype=torch.float64)
tensor([-1.8949, -2.6896, -2.8081, -3.1542, -3.1940], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8883, device='cuda:0', dtype=torch.float64)
tensor([-1.8945, -2.6875, -2.8064, -3.1584, -3.1954], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9919, device='cuda:0', dtype=torch.float64)
tensor([-1.8943, -2.6840, -2.8072, -3.1654, -3.2006], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0376, device='cuda:0', dtype=torch.float64)
tensor([-1.8935, -2.6807, -2.8087, -3.1739, -3.2047], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0529, device='cuda:0', dtype=torch.float64)
tensor([-1.8916, -2.6758, -2.8097, -3.1836, -3.2094], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0995, device='cuda:0', dtype=torch.float64)
tensor([-1.8877, -2.6717, -2.8117, -3.1938, -3.2118], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9708, device='cuda:0', dtype=torch.float64)
tensor([-1.8789, -2.6673, -2.8147, -3.2049, -3.2084], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7628, device='cuda:0', dtype=torch.float64)
tensor([-1.8680, -2.6628, -2.8181, -3.2125, -3.2006], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9974, device='cuda:0', dtype=torch.float64)
tensor([-1.8577, -2.6604, -2.8206, -3.2158, -3.1908], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9894, device='cuda:0', dtype=torch.float64)
tensor([-1.8496, -2.6592, -2.8236, -3.2183, -3.1808], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0803, device='cuda:0', dtype=torch.float64)
tensor([-1.8431, -2.6585, -2.8298, -3.2187, -3.1725], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0451, device='cuda:0', dtype=torch.float64)
tensor([-1.8397, -2.6615, -2.8344, -3.2166, -3.1698], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0033, device='cuda:0', dtype=torch.float64)
tensor([-1.8393, -2.6666, -2.8375, -3.2114, -3.1674], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0152, device='cuda:0', dtype=torch.float64)
tensor([-1.8426, -2.6723, -2.8387, -3.2048, -3.1682], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9985, device='cuda:0', dtype=torch.float64)
tensor([-1.8480, -2.6787, -2.8384, -3.1976, -3.1720], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0335, device='cuda:0', dtype=torch.float64)
tensor([-1.8556, -2.6852, -2.8361, -3.1908, -3.1746], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1498, device='cuda:0', dtype=torch.float64)
tensor([-1.8653, -2.6921, -2.8307, -3.1874, -3.1803], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9864, device='cuda:0', dtype=torch.float64)
tensor([-1.8748, -2.6965, -2.8280, -3.1833, -3.1860], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0140, device='cuda:0', dtype=torch.float64)
tensor([-1.8888, -2.7020, -2.8274, -3.1775, -3.1959], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2648, device='cuda:0', dtype=torch.float64)
tensor([-1.9012, -2.7052, -2.8279, -3.1742, -3.2060], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9891, device='cuda:0', dtype=torch.float64)
tensor([-1.9098, -2.7040, -2.8310, -3.1748, -3.2146], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2390, device='cuda:0', dtype=torch.float64)
tensor([-1.9132, -2.6955, -2.8384, -3.1774, -3.2204], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9807, device='cuda:0', dtype=torch.float64)
tensor([-1.9139, -2.6879, -2.8457, -3.1809, -3.2253], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9556, device='cuda:0', dtype=torch.float64)
tensor([-1.9098, -2.6785, -2.8525, -3.1834, -3.2267], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9816, device='cuda:0', dtype=torch.float64)
tensor([-1.9046, -2.6715, -2.8576, -3.1872, -3.2267], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1085, device='cuda:0', dtype=torch.float64)
tensor([-1.8956, -2.6678, -2.8590, -3.1904, -3.2242], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0895, device='cuda:0', dtype=torch.float64)
tensor([-1.8875, -2.6654, -2.8579, -3.1937, -3.2220], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0801, device='cuda:0', dtype=torch.float64)
tensor([-1.8799, -2.6644, -2.8554, -3.1988, -3.2174], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1386, device='cuda:0', dtype=torch.float64)
tensor([-1.8735, -2.6643, -2.8517, -3.2014, -3.2128], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2201, device='cuda:0', dtype=torch.float64)
tensor([-1.8714, -2.6671, -2.8448, -3.1983, -3.2069], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0617, device='cuda:0', dtype=torch.float64)
tensor([-1.8725, -2.6735, -2.8343, -3.1937, -3.2048], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0915, device='cuda:0', dtype=torch.float64)
tensor([-1.8735, -2.6829, -2.8221, -3.1880, -3.2038], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1903, device='cuda:0', dtype=torch.float64)
tensor([-1.8752, -2.6917, -2.8076, -3.1804, -3.2000], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0366, device='cuda:0', dtype=torch.float64)
tensor([-1.8786, -2.7004, -2.7936, -3.1711, -3.1963], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1545, device='cuda:0', dtype=torch.float64)
tensor([-1.8848, -2.7037, -2.7867, -3.1601, -3.1972], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9942, device='cuda:0', dtype=torch.float64)
tensor([-1.8894, -2.7043, -2.7865, -3.1543, -3.2011], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9440, device='cuda:0', dtype=torch.float64)
tensor([-1.8916, -2.7071, -2.7879, -3.1510, -3.2066], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0976, device='cuda:0', dtype=torch.float64)
tensor([-1.8929, -2.7091, -2.7916, -3.1507, -3.2111], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0697, device='cuda:0', dtype=torch.float64)
tensor([-1.8907, -2.7091, -2.7971, -3.1535, -3.2154], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9661, device='cuda:0', dtype=torch.float64)
tensor([-1.8861, -2.7085, -2.8007, -3.1573, -3.2182], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2436, device='cuda:0', dtype=torch.float64)
tensor([-1.8785, -2.7022, -2.8044, -3.1621, -3.2154], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0070, device='cuda:0', dtype=torch.float64)
tensor([-1.8698, -2.6983, -2.8088, -3.1660, -3.2093], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0277, device='cuda:0', dtype=torch.float64)
tensor([-1.8656, -2.6946, -2.8093, -3.1699, -3.2031], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2022, device='cuda:0', dtype=torch.float64)
tensor([-1.8629, -2.6897, -2.8078, -3.1777, -3.1963], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0093, device='cuda:0', dtype=torch.float64)
tensor([-1.8607, -2.6890, -2.8075, -3.1848, -3.1928], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0506, device='cuda:0', dtype=torch.float64)
tensor([-1.8625, -2.6882, -2.8087, -3.1879, -3.1931], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1410, device='cuda:0', dtype=torch.float64)
tensor([-1.8663, -2.6888, -2.8109, -3.1921, -3.1974], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1991, device='cuda:0', dtype=torch.float64)
tensor([-1.8730, -2.6913, -2.8153, -3.1939, -3.2092], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0228, device='cuda:0', dtype=torch.float64)
tensor([-1.8800, -2.6931, -2.8214, -3.1963, -3.2202], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2310, device='cuda:0', dtype=torch.float64)
tensor([-1.8877, -2.6970, -2.8253, -3.1984, -3.2309], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2514, device='cuda:0', dtype=torch.float64)
tensor([-1.8953, -2.7003, -2.8309, -3.1985, -3.2371], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0835, device='cuda:0', dtype=torch.float64)
tensor([-1.8997, -2.7019, -2.8350, -3.1990, -3.2399], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1697, device='cuda:0', dtype=torch.float64)
tensor([-1.9004, -2.7020, -2.8381, -3.1998, -3.2355], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2090, device='cuda:0', dtype=torch.float64)
tensor([-1.8999, -2.7015, -2.8400, -3.1993, -3.2294], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1438, device='cuda:0', dtype=torch.float64)
tensor([-1.9030, -2.7013, -2.8434, -3.1974, -3.2278], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2200, device='cuda:0', dtype=torch.float64)
tensor([-1.9071, -2.7010, -2.8489, -3.2005, -3.2269], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3137, device='cuda:0', dtype=torch.float64)
tensor([-1.9107, -2.7034, -2.8500, -3.2058, -3.2236], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0770, device='cuda:0', dtype=torch.float64)
tensor([-1.9114, -2.7030, -2.8476, -3.2119, -3.2196], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1130, device='cuda:0', dtype=torch.float64)
tensor([-1.9096, -2.7003, -2.8440, -3.2213, -3.2161], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5086, device='cuda:0', dtype=torch.float64)
tensor([-1.9051, -2.6960, -2.8409, -3.2312, -3.2139], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4662, device='cuda:0', dtype=torch.float64)
tensor([-1.8972, -2.6893, -2.8376, -3.2404, -3.2066], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0908, device='cuda:0', dtype=torch.float64)
tensor([-1.8880, -2.6802, -2.8360, -3.2504, -3.1984], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2789, device='cuda:0', dtype=torch.float64)
tensor([-1.8805, -2.6748, -2.8356, -3.2601, -3.1966], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3087, device='cuda:0', dtype=torch.float64)
tensor([-1.8755, -2.6707, -2.8354, -3.2668, -3.1965], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3244, device='cuda:0', dtype=torch.float64)
tensor([-1.8724, -2.6650, -2.8314, -3.2714, -3.1952], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3956, device='cuda:0', dtype=torch.float64)
tensor([-1.8758, -2.6632, -2.8263, -3.2740, -3.1978], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2749, device='cuda:0', dtype=torch.float64)
tensor([-1.8831, -2.6656, -2.8229, -3.2757, -3.2052], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1716, device='cuda:0', dtype=torch.float64)
tensor([-1.8961, -2.6740, -2.8192, -3.2730, -3.2147], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3225, device='cuda:0', dtype=torch.float64)
tensor([-1.9091, -2.6836, -2.8180, -3.2702, -3.2208], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3477, device='cuda:0', dtype=torch.float64)
tensor([-1.9232, -2.6938, -2.8143, -3.2682, -3.2255], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1780, device='cuda:0', dtype=torch.float64)
tensor([-1.9344, -2.7013, -2.8157, -3.2627, -3.2248], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2326, device='cuda:0', dtype=torch.float64)
tensor([-1.9375, -2.7048, -2.8159, -3.2573, -3.2171], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3771, device='cuda:0', dtype=torch.float64)
tensor([-1.9393, -2.7070, -2.8138, -3.2470, -3.2052], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4408, device='cuda:0', dtype=torch.float64)
tensor([-1.9366, -2.7042, -2.8138, -3.2375, -3.1890], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5304, device='cuda:0', dtype=torch.float64)
tensor([-1.9355, -2.7021, -2.8154, -3.2281, -3.1781], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3186, device='cuda:0', dtype=torch.float64)
tensor([-1.9327, -2.6973, -2.8155, -3.2175, -3.1674], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2692, device='cuda:0', dtype=torch.float64)
tensor([-1.9292, -2.6986, -2.8152, -3.2079, -3.1660], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3495, device='cuda:0', dtype=torch.float64)
tensor([-1.9280, -2.7044, -2.8159, -3.1969, -3.1728], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5065, device='cuda:0', dtype=torch.float64)
tensor([-1.9270, -2.7125, -2.8160, -3.1867, -3.1867], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4256, device='cuda:0', dtype=torch.float64)
tensor([-1.9260, -2.7220, -2.8133, -3.1814, -3.2008], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2749, device='cuda:0', dtype=torch.float64)
tensor([-1.9263, -2.7330, -2.8120, -3.1768, -3.2176], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3049, device='cuda:0', dtype=torch.float64)
tensor([-1.9260, -2.7442, -2.8097, -3.1734, -3.2314], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4632, device='cuda:0', dtype=torch.float64)
tensor([-1.9282, -2.7548, -2.8110, -3.1692, -3.2442], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3771, device='cuda:0', dtype=torch.float64)
tensor([-1.9289, -2.7628, -2.8127, -3.1683, -3.2519], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5883, device='cuda:0', dtype=torch.float64)
tensor([-1.9266, -2.7690, -2.8129, -3.1695, -3.2538], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1648, device='cuda:0', dtype=torch.float64)
tensor([-1.9276, -2.7727, -2.8175, -3.1752, -3.2543], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3269, device='cuda:0', dtype=torch.float64)
tensor([-1.9280, -2.7733, -2.8257, -3.1799, -3.2535], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1948, device='cuda:0', dtype=torch.float64)
tensor([-1.9252, -2.7676, -2.8358, -3.1834, -3.2495], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2487, device='cuda:0', dtype=torch.float64)
tensor([-1.9197, -2.7558, -2.8498, -3.1872, -3.2430], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1130, device='cuda:0', dtype=torch.float64)
tensor([-1.9157, -2.7429, -2.8646, -3.1947, -3.2408], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5011, device='cuda:0', dtype=torch.float64)
tensor([-1.9137, -2.7349, -2.8758, -3.1999, -3.2420], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1942, device='cuda:0', dtype=torch.float64)
tensor([-1.9089, -2.7255, -2.8859, -3.2057, -3.2406], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5377, device='cuda:0', dtype=torch.float64)
tensor([-1.9096, -2.7205, -2.8898, -3.2039, -3.2373], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4009, device='cuda:0', dtype=torch.float64)
tensor([-1.9100, -2.7200, -2.8900, -3.2049, -3.2346], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4125, device='cuda:0', dtype=torch.float64)
tensor([-1.9078, -2.7205, -2.8861, -3.1996, -3.2247], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1729, device='cuda:0', dtype=torch.float64)
tensor([-1.9040, -2.7199, -2.8791, -3.1951, -3.2129], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2417, device='cuda:0', dtype=torch.float64)
tensor([-1.9011, -2.7191, -2.8684, -3.1912, -3.2004], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0075, device='cuda:0', dtype=torch.float64)
tensor([-1.8991, -2.7158, -2.8611, -3.1901, -3.1924], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3413, device='cuda:0', dtype=torch.float64)
tensor([-1.8966, -2.7103, -2.8618, -3.1950, -3.1885], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3490, device='cuda:0', dtype=torch.float64)
tensor([-1.8956, -2.7040, -2.8628, -3.2020, -3.1900], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3329, device='cuda:0', dtype=torch.float64)
tensor([-1.8977, -2.6992, -2.8631, -3.2078, -3.1978], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4545, device='cuda:0', dtype=torch.float64)
tensor([-1.9021, -2.6966, -2.8647, -3.2121, -3.2042], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2577, device='cuda:0', dtype=torch.float64)
tensor([-1.9100, -2.6973, -2.8633, -3.2178, -3.2110], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4503, device='cuda:0', dtype=torch.float64)
tensor([-1.9249, -2.6981, -2.8642, -3.2156, -3.2217], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3686, device='cuda:0', dtype=torch.float64)
tensor([-1.9378, -2.7028, -2.8624, -3.2098, -3.2263], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4124, device='cuda:0', dtype=torch.float64)
tensor([-1.9480, -2.7075, -2.8536, -3.2074, -3.2254], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1961, device='cuda:0', dtype=torch.float64)
tensor([-1.9516, -2.7095, -2.8425, -3.2049, -3.2204], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3035, device='cuda:0', dtype=torch.float64)
tensor([-1.9573, -2.7070, -2.8281, -3.2038, -3.2114], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3468, device='cuda:0', dtype=torch.float64)
tensor([-1.9642, -2.7042, -2.8173, -3.2025, -3.1987], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4216, device='cuda:0', dtype=torch.float64)
tensor([-1.9662, -2.6985, -2.8106, -3.2036, -3.1893], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2555, device='cuda:0', dtype=torch.float64)
tensor([-1.9670, -2.6903, -2.8086, -3.2102, -3.1851], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2888, device='cuda:0', dtype=torch.float64)
tensor([-1.9639, -2.6839, -2.8127, -3.2201, -3.1862], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3158, device='cuda:0', dtype=torch.float64)
tensor([-1.9623, -2.6789, -2.8222, -3.2364, -3.1925], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1421, device='cuda:0', dtype=torch.float64)
tensor([-1.9561, -2.6735, -2.8344, -3.2539, -3.2005], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3206, device='cuda:0', dtype=torch.float64)
tensor([-1.9460, -2.6719, -2.8495, -3.2739, -3.2096], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6164, device='cuda:0', dtype=torch.float64)
tensor([-1.9398, -2.6767, -2.8578, -3.2867, -3.2165], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3815, device='cuda:0', dtype=torch.float64)
tensor([-1.9314, -2.6811, -2.8636, -3.2876, -3.2190], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2981, device='cuda:0', dtype=torch.float64)
tensor([-1.9281, -2.6913, -2.8593, -3.2811, -3.2211], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6332, device='cuda:0', dtype=torch.float64)
tensor([-1.9250, -2.7031, -2.8529, -3.2702, -3.2180], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1444, device='cuda:0', dtype=torch.float64)
tensor([-1.9240, -2.7191, -2.8420, -3.2564, -3.2166], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4812, device='cuda:0', dtype=torch.float64)
tensor([-1.9247, -2.7306, -2.8379, -3.2473, -3.2153], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5037, device='cuda:0', dtype=torch.float64)
tensor([-1.9307, -2.7430, -2.8338, -3.2326, -3.2189], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6427, device='cuda:0', dtype=torch.float64)
tensor([-1.9402, -2.7520, -2.8298, -3.2164, -3.2307], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1840, device='cuda:0', dtype=torch.float64)
tensor([-1.9487, -2.7579, -2.8300, -3.2009, -3.2450], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4597, device='cuda:0', dtype=torch.float64)
tensor([-1.9576, -2.7566, -2.8327, -3.1879, -3.2631], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2051, device='cuda:0', dtype=torch.float64)
tensor([-1.9651, -2.7527, -2.8360, -3.1788, -3.2715], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4177, device='cuda:0', dtype=torch.float64)
tensor([-1.9713, -2.7498, -2.8380, -3.1719, -3.2771], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1564, device='cuda:0', dtype=torch.float64)
tensor([-1.9718, -2.7445, -2.8414, -3.1706, -3.2779], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3750, device='cuda:0', dtype=torch.float64)
tensor([-1.9646, -2.7373, -2.8443, -3.1706, -3.2686], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4916, device='cuda:0', dtype=torch.float64)
tensor([-1.9520, -2.7286, -2.8467, -3.1736, -3.2565], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3798, device='cuda:0', dtype=torch.float64)
tensor([-1.9443, -2.7230, -2.8456, -3.1739, -3.2398], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6132, device='cuda:0', dtype=torch.float64)
tensor([-1.9418, -2.7228, -2.8476, -3.1733, -3.2306], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3038, device='cuda:0', dtype=torch.float64)
tensor([-1.9426, -2.7257, -2.8533, -3.1727, -3.2288], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4601, device='cuda:0', dtype=torch.float64)
tensor([-1.9395, -2.7270, -2.8634, -3.1740, -3.2330], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4742, device='cuda:0', dtype=torch.float64)
tensor([-1.9357, -2.7273, -2.8716, -3.1747, -3.2371], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1104, device='cuda:0', dtype=torch.float64)
tensor([-1.9328, -2.7308, -2.8777, -3.1740, -3.2441], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5930, device='cuda:0', dtype=torch.float64)
tensor([-1.9328, -2.7383, -2.8826, -3.1758, -3.2543], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5335, device='cuda:0', dtype=torch.float64)
tensor([-1.9388, -2.7494, -2.8807, -3.1736, -3.2623], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4228, device='cuda:0', dtype=torch.float64)
tensor([-1.9460, -2.7587, -2.8751, -3.1763, -3.2666], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4659, device='cuda:0', dtype=torch.float64)
tensor([-1.9474, -2.7658, -2.8646, -3.1846, -3.2681], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3204, device='cuda:0', dtype=torch.float64)
tensor([-1.9484, -2.7710, -2.8533, -3.1928, -3.2686], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3722, device='cuda:0', dtype=torch.float64)
tensor([-1.9522, -2.7739, -2.8431, -3.2003, -3.2664], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4186, device='cuda:0', dtype=torch.float64)
tensor([-1.9567, -2.7731, -2.8370, -3.2101, -3.2621], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2259, device='cuda:0', dtype=torch.float64)
tensor([-1.9635, -2.7740, -2.8295, -3.2228, -3.2554], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3963, device='cuda:0', dtype=torch.float64)
tensor([-1.9705, -2.7695, -2.8253, -3.2350, -3.2527], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3678, device='cuda:0', dtype=torch.float64)
tensor([-1.9800, -2.7642, -2.8293, -3.2434, -3.2580], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5357, device='cuda:0', dtype=torch.float64)
tensor([-1.9848, -2.7604, -2.8351, -3.2564, -3.2664], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3807, device='cuda:0', dtype=torch.float64)
tensor([-1.9911, -2.7563, -2.8407, -3.2676, -3.2755], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2307, device='cuda:0', dtype=torch.float64)
tensor([-1.9960, -2.7524, -2.8471, -3.2781, -3.2795], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4146, device='cuda:0', dtype=torch.float64)
tensor([-1.9995, -2.7429, -2.8560, -3.2839, -3.2817], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3491, device='cuda:0', dtype=torch.float64)
tensor([-1.9986, -2.7380, -2.8660, -3.2903, -3.2825], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2945, device='cuda:0', dtype=torch.float64)
tensor([-1.9958, -2.7357, -2.8754, -3.2913, -3.2817], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1007, device='cuda:0', dtype=torch.float64)
tensor([-1.9901, -2.7351, -2.8852, -3.2896, -3.2806], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5026, device='cuda:0', dtype=torch.float64)
tensor([-1.9771, -2.7356, -2.8937, -3.2892, -3.2753], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4469, device='cuda:0', dtype=torch.float64)
tensor([-1.9612, -2.7335, -2.9056, -3.2925, -3.2708], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1871, device='cuda:0', dtype=torch.float64)
tensor([-1.9480, -2.7349, -2.9126, -3.2934, -3.2718], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4007, device='cuda:0', dtype=torch.float64)
tensor([-1.9432, -2.7390, -2.9118, -3.2825, -3.2791], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3692, device='cuda:0', dtype=torch.float64)
tensor([-1.9445, -2.7430, -2.9109, -3.2746, -3.2880], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5986, device='cuda:0', dtype=torch.float64)
tensor([-1.9516, -2.7457, -2.9072, -3.2603, -3.3000], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4617, device='cuda:0', dtype=torch.float64)
tensor([-1.9546, -2.7438, -2.9044, -3.2452, -3.3001], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5598, device='cuda:0', dtype=torch.float64)
tensor([-1.9595, -2.7421, -2.9011, -3.2285, -3.3022], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5140, device='cuda:0', dtype=torch.float64)
tensor([-1.9649, -2.7418, -2.8947, -3.2115, -3.3026], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6867, device='cuda:0', dtype=torch.float64)
tensor([-1.9701, -2.7458, -2.8853, -3.2000, -3.2979], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6887, device='cuda:0', dtype=torch.float64)
tensor([-1.9739, -2.7509, -2.8777, -3.1822, -3.2989], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7464, device='cuda:0', dtype=torch.float64)
tensor([-1.9747, -2.7592, -2.8673, -3.1691, -3.2920], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2890, device='cuda:0', dtype=torch.float64)
tensor([-1.9745, -2.7656, -2.8549, -3.1660, -3.2813], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7819, device='cuda:0', dtype=torch.float64)
tensor([-1.9783, -2.7799, -2.8407, -3.1636, -3.2767], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2086, device='cuda:0', dtype=torch.float64)
tensor([-1.9815, -2.7943, -2.8284, -3.1648, -3.2742], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7190, device='cuda:0', dtype=torch.float64)
tensor([-1.9811, -2.7987, -2.8251, -3.1751, -3.2716], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4658, device='cuda:0', dtype=torch.float64)
tensor([-1.9777, -2.7968, -2.8254, -3.1863, -3.2701], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6570, device='cuda:0', dtype=torch.float64)
tensor([-1.9738, -2.7880, -2.8311, -3.2017, -3.2660], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5337, device='cuda:0', dtype=torch.float64)
tensor([-1.9741, -2.7777, -2.8350, -3.2133, -3.2597], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3933, device='cuda:0', dtype=torch.float64)
tensor([-1.9755, -2.7678, -2.8395, -3.2304, -3.2556], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4650, device='cuda:0', dtype=torch.float64)
tensor([-1.9752, -2.7564, -2.8459, -3.2443, -3.2519], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0761, device='cuda:0', dtype=torch.float64)
tensor([-1.9722, -2.7431, -2.8568, -3.2554, -3.2466], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5204, device='cuda:0', dtype=torch.float64)
tensor([-1.9782, -2.7339, -2.8647, -3.2603, -3.2428], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2777, device='cuda:0', dtype=torch.float64)
tensor([-1.9844, -2.7289, -2.8679, -3.2635, -3.2454], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3899, device='cuda:0', dtype=torch.float64)
tensor([-1.9983, -2.7294, -2.8706, -3.2642, -3.2515], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3351, device='cuda:0', dtype=torch.float64)
tensor([-2.0118, -2.7342, -2.8704, -3.2605, -3.2570], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5539, device='cuda:0', dtype=torch.float64)
tensor([-2.0242, -2.7414, -2.8681, -3.2586, -3.2622], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4863, device='cuda:0', dtype=torch.float64)
tensor([-2.0289, -2.7447, -2.8684, -3.2666, -3.2678], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3208, device='cuda:0', dtype=torch.float64)
tensor([-2.0274, -2.7473, -2.8705, -3.2751, -3.2712], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5911, device='cuda:0', dtype=torch.float64)
tensor([-2.0283, -2.7518, -2.8772, -3.2814, -3.2791], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5446, device='cuda:0', dtype=torch.float64)
tensor([-2.0349, -2.7659, -2.8775, -3.2822, -3.2857], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6071, device='cuda:0', dtype=torch.float64)
tensor([-2.0389, -2.7730, -2.8806, -3.2849, -3.2955], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6192, device='cuda:0', dtype=torch.float64)
tensor([-2.0415, -2.7766, -2.8914, -3.2887, -3.3025], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3782, device='cuda:0', dtype=torch.float64)
tensor([-2.0455, -2.7815, -2.9080, -3.2904, -3.3087], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5453, device='cuda:0', dtype=torch.float64)
tensor([-2.0525, -2.7927, -2.9179, -3.2797, -3.3120], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9794, device='cuda:0', dtype=torch.float64)
tensor([-2.0573, -2.8026, -2.9278, -3.2728, -3.3163], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3848, device='cuda:0', dtype=torch.float64)
tensor([-2.0556, -2.8103, -2.9348, -3.2706, -3.3169], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5476, device='cuda:0', dtype=torch.float64)
tensor([-2.0533, -2.8193, -2.9416, -3.2640, -3.3171], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2622, device='cuda:0', dtype=torch.float64)
tensor([-2.0484, -2.8287, -2.9423, -3.2518, -3.3133], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4177, device='cuda:0', dtype=torch.float64)
tensor([-2.0427, -2.8369, -2.9432, -3.2386, -3.3004], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2540, device='cuda:0', dtype=torch.float64)
tensor([-2.0383, -2.8469, -2.9396, -3.2288, -3.2859], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6966, device='cuda:0', dtype=torch.float64)
tensor([-2.0438, -2.8556, -2.9392, -3.2148, -3.2747], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4061, device='cuda:0', dtype=torch.float64)
tensor([-2.0452, -2.8593, -2.9439, -3.2058, -3.2655], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5375, device='cuda:0', dtype=torch.float64)
tensor([-2.0472, -2.8569, -2.9498, -3.2012, -3.2634], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6818, device='cuda:0', dtype=torch.float64)
tensor([-2.0501, -2.8527, -2.9533, -3.2045, -3.2630], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2184, device='cuda:0', dtype=torch.float64)
tensor([-2.0466, -2.8447, -2.9582, -3.2103, -3.2628], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5251, device='cuda:0', dtype=torch.float64)
tensor([-2.0399, -2.8304, -2.9615, -3.2208, -3.2611], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6612, device='cuda:0', dtype=torch.float64)
tensor([-2.0303, -2.8151, -2.9649, -3.2364, -3.2586], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3709, device='cuda:0', dtype=torch.float64)
tensor([-2.0155, -2.7939, -2.9693, -3.2582, -3.2515], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6129, device='cuda:0', dtype=torch.float64)
tensor([-2.0052, -2.7713, -2.9699, -3.2821, -3.2451], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8148, device='cuda:0', dtype=torch.float64)
tensor([-1.9955, -2.7556, -2.9669, -3.3056, -3.2470], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5519, device='cuda:0', dtype=torch.float64)
tensor([-1.9836, -2.7456, -2.9605, -3.3277, -3.2474], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3778, device='cuda:0', dtype=torch.float64)
tensor([-1.9726, -2.7401, -2.9514, -3.3491, -3.2516], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6281, device='cuda:0', dtype=torch.float64)
tensor([-1.9737, -2.7441, -2.9357, -3.3637, -3.2615], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4856, device='cuda:0', dtype=torch.float64)
tensor([-1.9807, -2.7525, -2.9184, -3.3744, -3.2735], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5083, device='cuda:0', dtype=torch.float64)
tensor([-1.9944, -2.7613, -2.9073, -3.3812, -3.2929], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4372, device='cuda:0', dtype=torch.float64)
tensor([-2.0132, -2.7732, -2.9031, -3.3857, -3.3181], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5122, device='cuda:0', dtype=torch.float64)
tensor([-2.0335, -2.7874, -2.9041, -3.3924, -3.3412], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3999, device='cuda:0', dtype=torch.float64)
tensor([-2.0472, -2.7969, -2.9046, -3.3933, -3.3604], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5592, device='cuda:0', dtype=torch.float64)
tensor([-2.0658, -2.8104, -2.9062, -3.3881, -3.3781], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4750, device='cuda:0', dtype=torch.float64)
tensor([-2.0825, -2.8175, -2.9101, -3.3799, -3.4000], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4591, device='cuda:0', dtype=torch.float64)
tensor([-2.0956, -2.8187, -2.9137, -3.3644, -3.4133], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9461, device='cuda:0', dtype=torch.float64)
tensor([-2.0991, -2.8178, -2.9206, -3.3462, -3.4187], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6220, device='cuda:0', dtype=torch.float64)
tensor([-2.0982, -2.8193, -2.9248, -3.3330, -3.4143], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4539, device='cuda:0', dtype=torch.float64)
tensor([-2.0954, -2.8160, -2.9262, -3.3193, -3.4072], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7789, device='cuda:0', dtype=torch.float64)
tensor([-2.0931, -2.8122, -2.9233, -3.2983, -3.3904], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6163, device='cuda:0', dtype=torch.float64)
tensor([-2.0879, -2.8139, -2.9188, -3.2865, -3.3675], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3921, device='cuda:0', dtype=torch.float64)
tensor([-2.0811, -2.8150, -2.9131, -3.2837, -3.3449], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5659, device='cuda:0', dtype=torch.float64)
tensor([-2.0801, -2.8191, -2.9092, -3.2851, -3.3225], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7182, device='cuda:0', dtype=torch.float64)
tensor([-2.0756, -2.8212, -2.9108, -3.2912, -3.3002], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6923, device='cuda:0', dtype=torch.float64)
tensor([-2.0795, -2.8317, -2.9135, -3.3057, -3.2850], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6344, device='cuda:0', dtype=torch.float64)
tensor([-2.0838, -2.8442, -2.9176, -3.3278, -3.2839], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6989, device='cuda:0', dtype=torch.float64)
tensor([-2.0829, -2.8548, -2.9252, -3.3464, -3.2863], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4453, device='cuda:0', dtype=torch.float64)
tensor([-2.0828, -2.8645, -2.9314, -3.3646, -3.2881], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6037, device='cuda:0', dtype=torch.float64)
tensor([-2.0805, -2.8729, -2.9385, -3.3845, -3.2923], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6355, device='cuda:0', dtype=torch.float64)
tensor([-2.0720, -2.8757, -2.9476, -3.4023, -3.2999], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4903, device='cuda:0', dtype=torch.float64)
tensor([-2.0670, -2.8769, -2.9531, -3.4073, -3.3092], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6770, device='cuda:0', dtype=torch.float64)
tensor([-2.0643, -2.8739, -2.9576, -3.4095, -3.3153], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8072, device='cuda:0', dtype=torch.float64)
tensor([-2.0578, -2.8697, -2.9638, -3.4122, -3.3284], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7640, device='cuda:0', dtype=torch.float64)
tensor([-2.0443, -2.8648, -2.9664, -3.4146, -3.3358], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5280, device='cuda:0', dtype=torch.float64)
tensor([-2.0338, -2.8605, -2.9696, -3.4123, -3.3395], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3582, device='cuda:0', dtype=torch.float64)
tensor([-2.0322, -2.8564, -2.9676, -3.4083, -3.3472], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6090, device='cuda:0', dtype=torch.float64)
tensor([-2.0409, -2.8551, -2.9624, -3.4017, -3.3519], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7737, device='cuda:0', dtype=torch.float64)
tensor([-2.0558, -2.8491, -2.9602, -3.3908, -3.3629], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0222, device='cuda:0', dtype=torch.float64)
tensor([-2.0740, -2.8500, -2.9610, -3.3842, -3.3801], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8887, device='cuda:0', dtype=torch.float64)
tensor([-2.0985, -2.8572, -2.9644, -3.3706, -3.4020], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7288, device='cuda:0', dtype=torch.float64)
tensor([-2.1239, -2.8652, -2.9648, -3.3608, -3.4233], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5035, device='cuda:0', dtype=torch.float64)
tensor([-2.1453, -2.8789, -2.9666, -3.3536, -3.4453], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4200, device='cuda:0', dtype=torch.float64)
tensor([-2.1640, -2.8890, -2.9699, -3.3428, -3.4590], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7605, device='cuda:0', dtype=torch.float64)
tensor([-2.1778, -2.9020, -2.9691, -3.3368, -3.4691], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6607, device='cuda:0', dtype=torch.float64)
tensor([-2.1901, -2.9140, -2.9754, -3.3352, -3.4732], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7705, device='cuda:0', dtype=torch.float64)
tensor([-2.1933, -2.9139, -2.9861, -3.3273, -3.4689], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8119, device='cuda:0', dtype=torch.float64)
tensor([-2.2018, -2.9112, -2.9959, -3.3263, -3.4725], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4537, device='cuda:0', dtype=torch.float64)
tensor([-2.2006, -2.9032, -2.9940, -3.3237, -3.4676], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6023, device='cuda:0', dtype=torch.float64)
tensor([-2.1981, -2.8984, -2.9940, -3.3265, -3.4609], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7484, device='cuda:0', dtype=torch.float64)
tensor([-2.1859, -2.8905, -2.9984, -3.3331, -3.4533], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7278, device='cuda:0', dtype=torch.float64)
tensor([-2.1805, -2.8901, -3.0037, -3.3373, -3.4439], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6550, device='cuda:0', dtype=torch.float64)
tensor([-2.1730, -2.8891, -3.0172, -3.3480, -3.4390], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6807, device='cuda:0', dtype=torch.float64)
tensor([-2.1601, -2.8890, -3.0325, -3.3586, -3.4383], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5737, device='cuda:0', dtype=torch.float64)
tensor([-2.1530, -2.8882, -3.0419, -3.3643, -3.4348], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3843, device='cuda:0', dtype=torch.float64)
tensor([-2.1428, -2.8859, -3.0475, -3.3660, -3.4242], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7814, device='cuda:0', dtype=torch.float64)
tensor([-2.1451, -2.8824, -3.0513, -3.3647, -3.4200], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5602, device='cuda:0', dtype=torch.float64)
tensor([-2.1478, -2.8792, -3.0517, -3.3622, -3.4189], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9208, device='cuda:0', dtype=torch.float64)
tensor([-2.1537, -2.8816, -3.0475, -3.3569, -3.4121], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3034, device='cuda:0', dtype=torch.float64)
tensor([-2.1611, -2.8859, -3.0461, -3.3594, -3.4113], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8468, device='cuda:0', dtype=torch.float64)
tensor([-2.1622, -2.8781, -3.0454, -3.3587, -3.4017], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6760, device='cuda:0', dtype=torch.float64)
tensor([-2.1637, -2.8758, -3.0472, -3.3660, -3.3866], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5226, device='cuda:0', dtype=torch.float64)
tensor([-2.1700, -2.8751, -3.0507, -3.3742, -3.3756], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9237, device='cuda:0', dtype=torch.float64)
tensor([-2.1780, -2.8761, -3.0585, -3.3757, -3.3759], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5916, device='cuda:0', dtype=torch.float64)
tensor([-2.1912, -2.8890, -3.0554, -3.3752, -3.3801], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7359, device='cuda:0', dtype=torch.float64)
tensor([-2.2040, -2.8958, -3.0544, -3.3660, -3.3852], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7667, device='cuda:0', dtype=torch.float64)
tensor([-2.2135, -2.9048, -3.0504, -3.3507, -3.4033], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5429, device='cuda:0', dtype=torch.float64)
tensor([-2.2139, -2.9054, -3.0496, -3.3351, -3.4279], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4856, device='cuda:0', dtype=torch.float64)
tensor([-2.2163, -2.9096, -3.0515, -3.3289, -3.4493], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5783, device='cuda:0', dtype=torch.float64)
tensor([-2.2234, -2.9159, -3.0487, -3.3278, -3.4749], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8498, device='cuda:0', dtype=torch.float64)
tensor([-2.2283, -2.9190, -3.0510, -3.3315, -3.5042], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7012, device='cuda:0', dtype=torch.float64)
tensor([-2.2258, -2.9217, -3.0523, -3.3396, -3.5282], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6150, device='cuda:0', dtype=torch.float64)
tensor([-2.2195, -2.9210, -3.0546, -3.3517, -3.5467], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8131, device='cuda:0', dtype=torch.float64)
tensor([-2.2157, -2.9282, -3.0538, -3.3717, -3.5598], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6583, device='cuda:0', dtype=torch.float64)
tensor([-2.2175, -2.9393, -3.0568, -3.3913, -3.5690], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1111, device='cuda:0', dtype=torch.float64)
tensor([-2.2199, -2.9439, -3.0607, -3.4022, -3.5673], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7851, device='cuda:0', dtype=torch.float64)
tensor([-2.2232, -2.9495, -3.0655, -3.4089, -3.5646], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6652, device='cuda:0', dtype=torch.float64)
tensor([-2.2312, -2.9538, -3.0644, -3.4098, -3.5519], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8094, device='cuda:0', dtype=torch.float64)
tensor([-2.2434, -2.9623, -3.0609, -3.4075, -3.5357], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5244, device='cuda:0', dtype=torch.float64)
tensor([-2.2549, -2.9737, -3.0554, -3.3971, -3.5197], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7224, device='cuda:0', dtype=torch.float64)
tensor([-2.2732, -2.9997, -3.0551, -3.3967, -3.5095], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9238, device='cuda:0', dtype=torch.float64)
tensor([-2.2930, -3.0206, -3.0599, -3.4011, -3.5145], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5682, device='cuda:0', dtype=torch.float64)
tensor([-2.3064, -3.0422, -3.0767, -3.4080, -3.5258], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7579, device='cuda:0', dtype=torch.float64)
tensor([-2.3195, -3.0713, -3.0956, -3.4202, -3.5461], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5714, device='cuda:0', dtype=torch.float64)
tensor([-2.3297, -3.0900, -3.1123, -3.4390, -3.5697], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7299, device='cuda:0', dtype=torch.float64)
tensor([-2.3330, -3.1075, -3.1310, -3.4624, -3.5911], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6752, device='cuda:0', dtype=torch.float64)
tensor([-2.3408, -3.1297, -3.1490, -3.4847, -3.6145], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6612, device='cuda:0', dtype=torch.float64)
tensor([-2.3463, -3.1429, -3.1699, -3.5082, -3.6394], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7934, device='cuda:0', dtype=torch.float64)
tensor([-2.3493, -3.1433, -3.1937, -3.5249, -3.6610], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8500, device='cuda:0', dtype=torch.float64)
tensor([-2.3564, -3.1401, -3.2158, -3.5425, -3.6767], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6347, device='cuda:0', dtype=torch.float64)
tensor([-2.3569, -3.1437, -3.2265, -3.5486, -3.6854], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9801, device='cuda:0', dtype=torch.float64)
tensor([-2.3619, -3.1509, -3.2308, -3.5432, -3.6837], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8277, device='cuda:0', dtype=torch.float64)
tensor([-2.3767, -3.1600, -3.2324, -3.5224, -3.6839], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7979, device='cuda:0', dtype=torch.float64)
tensor([-2.3929, -3.1601, -3.2308, -3.5012, -3.6779], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7326, device='cuda:0', dtype=torch.float64)
tensor([-2.4125, -3.1561, -3.2205, -3.4745, -3.6678], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5146, device='cuda:0', dtype=torch.float64)
tensor([-2.4293, -3.1521, -3.2025, -3.4456, -3.6483], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5175, device='cuda:0', dtype=torch.float64)
tensor([-2.4428, -3.1440, -3.1816, -3.4204, -3.6224], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5440, device='cuda:0', dtype=torch.float64)
tensor([-2.4574, -3.1383, -3.1606, -3.4000, -3.5966], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6784, device='cuda:0', dtype=torch.float64)
tensor([-2.4811, -3.1344, -3.1417, -3.3830, -3.5735], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3321, device='cuda:0', dtype=torch.float64)
tensor([-2.5008, -3.1313, -3.1302, -3.3728, -3.5540], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8619, device='cuda:0', dtype=torch.float64)
tensor([-2.5094, -3.1238, -3.1210, -3.3687, -3.5409], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7826, device='cuda:0', dtype=torch.float64)
tensor([-2.4980, -3.1117, -3.1160, -3.3652, -3.5334], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8293, device='cuda:0', dtype=torch.float64)
tensor([-2.4790, -3.0995, -3.1139, -3.3723, -3.5208], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5355, device='cuda:0', dtype=torch.float64)
tensor([-2.4504, -3.0929, -3.1222, -3.3797, -3.5199], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7372, device='cuda:0', dtype=torch.float64)
tensor([-2.4109, -3.0947, -3.1317, -3.3975, -3.5300], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1139, device='cuda:0', dtype=torch.float64)
tensor([-2.3955, -3.0860, -3.1485, -3.4160, -3.5452], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5584, device='cuda:0', dtype=torch.float64)
tensor([-2.3994, -3.0845, -3.1648, -3.4409, -3.5598], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6960, device='cuda:0', dtype=torch.float64)
tensor([-2.4158, -3.0878, -3.1838, -3.4720, -3.5813], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8028, device='cuda:0', dtype=torch.float64)
tensor([-2.4385, -3.0992, -3.1988, -3.5031, -3.6031], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8985, device='cuda:0', dtype=torch.float64)
tensor([-2.4617, -3.1157, -3.2182, -3.5310, -3.6200], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7153, device='cuda:0', dtype=torch.float64)
tensor([-2.4890, -3.1268, -3.2393, -3.5634, -3.6332], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5453, device='cuda:0', dtype=torch.float64)
tensor([-2.5137, -3.1384, -3.2621, -3.5986, -3.6490], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3351, device='cuda:0', dtype=torch.float64)
tensor([-2.5371, -3.1500, -3.2817, -3.6363, -3.6584], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5583, device='cuda:0', dtype=torch.float64)
tensor([-2.5607, -3.1696, -3.2953, -3.6739, -3.6670], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9883, device='cuda:0', dtype=torch.float64)
tensor([-2.5817, -3.1973, -3.3105, -3.7155, -3.6796], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6623, device='cuda:0', dtype=torch.float64)
tensor([-2.6094, -3.2284, -3.3279, -3.7504, -3.7021], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3850, device='cuda:0', dtype=torch.float64)
tensor([-2.6361, -3.2650, -3.3417, -3.7723, -3.7213], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5197, device='cuda:0', dtype=torch.float64)
tensor([-2.6522, -3.3013, -3.3521, -3.7843, -3.7389], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6512, device='cuda:0', dtype=torch.float64)
tensor([-2.6674, -3.3354, -3.3670, -3.7956, -3.7619], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6905, device='cuda:0', dtype=torch.float64)
tensor([-2.6909, -3.3740, -3.3798, -3.8050, -3.7938], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5963, device='cuda:0', dtype=torch.float64)
tensor([-2.7076, -3.4103, -3.3837, -3.8213, -3.8264], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4837, device='cuda:0', dtype=torch.float64)
tensor([-2.7257, -3.4398, -3.4028, -3.8368, -3.8637], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6054, device='cuda:0', dtype=torch.float64)
tensor([-2.7415, -3.4621, -3.4222, -3.8500, -3.8992], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7513, device='cuda:0', dtype=torch.float64)
tensor([-2.7594, -3.4804, -3.4310, -3.8637, -3.9231], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3710, device='cuda:0', dtype=torch.float64)
tensor([-2.7690, -3.4919, -3.4414, -3.8809, -3.9444], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4609, device='cuda:0', dtype=torch.float64)
tensor([-2.7706, -3.4975, -3.4574, -3.9199, -3.9686], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7610, device='cuda:0', dtype=torch.float64)
tensor([-2.7785, -3.4987, -3.4739, -3.9568, -3.9980], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8836, device='cuda:0', dtype=torch.float64)
tensor([-2.7890, -3.4993, -3.4930, -3.9841, -4.0315], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4135, device='cuda:0', dtype=torch.float64)
tensor([-2.8068, -3.5029, -3.5066, -3.9923, -4.0597], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0676, device='cuda:0', dtype=torch.float64)
tensor([-2.8314, -3.4999, -3.5237, -3.9960, -4.0813], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9258, device='cuda:0', dtype=torch.float64)
tensor([-2.8685, -3.5028, -3.5395, -4.0077, -4.0996], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9272, device='cuda:0', dtype=torch.float64)
tensor([-2.9115, -3.5078, -3.5625, -4.0217, -4.1203], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4528, device='cuda:0', dtype=torch.float64)
tensor([-2.9415, -3.5135, -3.5864, -4.0384, -4.1408], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7485, device='cuda:0', dtype=torch.float64)
tensor([-2.9900, -3.5310, -3.6167, -4.0606, -4.1715], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7997, device='cuda:0', dtype=torch.float64)
tensor([-3.0234, -3.5402, -3.6469, -4.0774, -4.1838], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5852, device='cuda:0', dtype=torch.float64)
tensor([-3.0773, -3.5542, -3.6800, -4.0903, -4.1956], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8891, device='cuda:0', dtype=torch.float64)
tensor([-3.1407, -3.5725, -3.7121, -4.1106, -4.2129], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8887, device='cuda:0', dtype=torch.float64)
tensor([-3.1677, -3.5952, -3.7622, -4.1648, -4.2509], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6684, device='cuda:0', dtype=torch.float64)
tensor([-3.2252, -3.6265, -3.8053, -4.2123, -4.2873], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7368, device='cuda:0', dtype=torch.float64)
tensor([-3.2693, -3.6785, -3.8538, -4.2612, -4.3204], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7368, device='cuda:0', dtype=torch.float64)
tensor([-3.2976, -3.7201, -3.9458, -4.3382, -4.3480], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4409, device='cuda:0', dtype=torch.float64)
tensor([-3.3260, -3.7558, -4.0206, -4.4125, -4.3628], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6136, device='cuda:0', dtype=torch.float64)
tensor([-3.3255, -3.7782, -4.0173, -4.4899, -4.3844], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9121, device='cuda:0', dtype=torch.float64)
tensor([-3.3470, -3.7782, -3.9780, -4.5456, -4.3886], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9551, device='cuda:0', dtype=torch.float64)
tensor([-3.3742, -3.7761, -3.9424, -4.5939, -4.4048], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7021, device='cuda:0', dtype=torch.float64)
tensor([-3.3849, -3.7851, -3.9342, -4.6307, -4.4216], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3853, device='cuda:0', dtype=torch.float64)
tensor([-3.3940, -3.8027, -3.9480, -4.6854, -4.4517], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4706, device='cuda:0', dtype=torch.float64)
tensor([-3.4212, -3.8364, -3.9630, -4.7331, -4.5052], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6292, device='cuda:0', dtype=torch.float64)
tensor([-3.4736, -3.8736, -3.9833, -4.7973, -4.5564], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5474, device='cuda:0', dtype=torch.float64)
tensor([-3.5101, -3.9276, -3.9994, -4.8592, -4.6185], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4047, device='cuda:0', dtype=torch.float64)
tensor([-3.5617, -3.9810, -4.0201, -4.9068, -4.6903], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5782, device='cuda:0', dtype=torch.float64)
tensor([-3.6228, -4.0247, -4.0497, -4.9415, -4.7004], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4695, device='cuda:0', dtype=torch.float64)
tensor([-3.6738, -4.0647, -4.0890, -4.9746, -4.7075], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4060, device='cuda:0', dtype=torch.float64)
tensor([-3.7052, -4.1001, -4.1324, -5.0022, -4.7186], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5544, device='cuda:0', dtype=torch.float64)
tensor([-3.7498, -4.1374, -4.1854, -5.0543, -4.7417], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4951, device='cuda:0', dtype=torch.float64)
tensor([-3.8272, -4.1773, -4.2253, -5.0859, -4.7812], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4448, device='cuda:0', dtype=torch.float64)
tensor([-3.9412, -4.2095, -4.2688, -5.1117, -4.8205], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5915, device='cuda:0', dtype=torch.float64)
tensor([-4.0466, -4.2739, -4.3167, -5.1915, -4.8868], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4315, device='cuda:0', dtype=torch.float64)
tensor([-4.1383, -4.3559, -4.3830, -5.3106, -4.9883], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5954, device='cuda:0', dtype=torch.float64)
tensor([-4.2792, -4.4723, -4.4436, -5.4476, -5.1096], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3008, device='cuda:0', dtype=torch.float64)
tensor([-4.4581, -4.6203, -4.5129, -5.6320, -5.2509], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4056, device='cuda:0', dtype=torch.float64)
tensor([-4.6589, -4.7967, -4.5897, -5.8307, -5.4430], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8170, device='cuda:0', dtype=torch.float64)
tensor([-4.8641, -4.9636, -4.6646, -6.0339, -5.6257], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3824, device='cuda:0', dtype=torch.float64)
tensor([-5.0684, -5.1376, -4.7372, -6.1991, -5.7714], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6430, device='cuda:0', dtype=torch.float64)
tensor([-5.3234, -5.3644, -4.8113, -6.4416, -5.9083], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8828, device='cuda:0', dtype=torch.float64)
tensor([-5.5728, -5.5513, -4.8763, -6.6924, -5.9617], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6282, device='cuda:0', dtype=torch.float64)
tensor([-5.8458, -5.8425, -4.9544, -6.9893, -6.0909], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7241, device='cuda:0', dtype=torch.float64)
tensor([-6.1447, -6.1117, -5.0503, -7.2939, -6.2478], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4610, device='cuda:0', dtype=torch.float64)
tensor([-6.3812, -6.4039, -5.1494, -7.6514, -6.4415], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7016, device='cuda:0', dtype=torch.float64)
tensor([-6.5901, -6.7165, -5.2380, -8.0224, -6.6112], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4544, device='cuda:0', dtype=torch.float64)
tensor([-6.8183, -7.0742, -5.3620, -8.3747, -6.7779], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3144, device='cuda:0', dtype=torch.float64)
tensor([-7.0392, -7.4309, -5.4988, -8.7775, -6.9460], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4383, device='cuda:0', dtype=torch.float64)
tensor([-7.3252, -7.7221, -5.6899, -9.1570, -7.0790], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4493, device='cuda:0', dtype=torch.float64)
tensor([-7.6510, -8.0796, -5.8784, -9.6155, -7.2041], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5618, device='cuda:0', dtype=torch.float64)
tensor([ -7.9982,  -8.3782,  -6.1734, -10.0025,  -7.3378], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6148, device='cuda:0', dtype=torch.float64)
tensor([ -8.3149,  -8.6869,  -6.5347, -10.5206,  -7.5056], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5932, device='cuda:0', dtype=torch.float64)
tensor([ -8.6213,  -8.9845,  -7.0204, -11.1773,  -7.7245], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4422, device='cuda:0', dtype=torch.float64)
tensor([ -8.8718,  -9.2601,  -7.5766, -11.7393,  -7.7856], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3112, device='cuda:0', dtype=torch.float64)
tensor([ -9.1454,  -9.5041,  -8.3096, -12.3927,  -7.9816], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8558, device='cuda:0', dtype=torch.float64)
tensor([ -9.5119,  -9.7682,  -9.0336, -12.8976,  -8.1357], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3402, device='cuda:0', dtype=torch.float64)
tensor([ -9.9745, -10.0567,  -9.7760, -13.5685,  -8.3147], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5728, device='cuda:0', dtype=torch.float64)
tensor([-10.4852, -10.4013, -10.6988, -14.3102,  -8.6529], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7149, device='cuda:0', dtype=torch.float64)
tensor([-10.9637, -10.8595, -11.6118, -15.1486,  -9.0668], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7209, device='cuda:0', dtype=torch.float64)
tensor([-11.5138, -11.3280, -12.4065, -15.8785,  -9.4975], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4607, device='cuda:0', dtype=torch.float64)
tensor([-11.9437, -11.8720, -13.3515, -16.7167, -10.1731], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4291, device='cuda:0', dtype=torch.float64)
tensor([-12.3529, -12.3263, -14.2517, -17.5512, -10.7481], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7209, device='cuda:0', dtype=torch.float64)
tensor([-12.6742, -12.8774, -15.6033, -18.6076, -11.8125], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2185, device='cuda:0', dtype=torch.float64)
tensor([-12.9144, -13.4002, -16.7117, -19.6832, -12.9973], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9719, device='cuda:0', dtype=torch.float64)
tensor([-13.1828, -13.9644, -17.8581, -20.9120, -14.3559], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4009, device='cuda:0', dtype=torch.float64)
tensor([-13.4459, -14.3917, -18.9907, -21.8016, -15.5891], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4235, device='cuda:0', dtype=torch.float64)
tensor([-13.6730, -14.7199, -19.8948, -22.5338, -16.5738], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4901, device='cuda:0', dtype=torch.float64)
tensor([-13.9225, -15.0002, -20.9952, -23.2251, -17.4191], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7413, device='cuda:0', dtype=torch.float64)
tensor([-14.0245, -14.9058, -21.7698, -23.6357, -18.2506], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1197, device='cuda:0', dtype=torch.float64)
tensor([-14.0985, -14.7116, -22.2287, -23.8581, -18.7576], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7108, device='cuda:0', dtype=torch.float64)
tensor([-14.1788, -14.3156, -22.1255, -23.8407, -18.7362], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4619, device='cuda:0', dtype=torch.float64)
tensor([-14.2910, -14.1351, -22.0977, -23.8434, -18.9807], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2396, device='cuda:0', dtype=torch.float64)
tensor([-14.4224, -14.0733, -21.8909, -23.8792, -19.2908], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6744, device='cuda:0', dtype=torch.float64)
tensor([-14.6519, -14.1437, -21.4460, -23.9097, -19.6705], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4551, device='cuda:0', dtype=torch.float64)
tensor([-14.8363, -14.3905, -21.4147, -24.2340, -20.3773], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4988, device='cuda:0', dtype=torch.float64)
tensor([-14.9088, -14.6949, -21.3282, -24.7540, -21.3487], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3955, device='cuda:0', dtype=torch.float64)
tensor([-14.8424, -15.0767, -21.1011, -25.4140, -22.5506], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7388, device='cuda:0', dtype=torch.float64)
tensor([-14.7556, -15.6693, -20.6256, -26.0043, -23.6261], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6700, device='cuda:0', dtype=torch.float64)
tensor([-14.5572, -16.2228, -20.3262, -26.5986, -24.5633], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4369, device='cuda:0', dtype=torch.float64)
tensor([-14.4213, -16.6768, -19.8344, -27.0927, -25.3664], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2644, device='cuda:0', dtype=torch.float64)
tensor([-14.3888, -17.3868, -19.1898, -27.8991, -26.6471], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2857, device='cuda:0', dtype=torch.float64)
tensor([-14.2086, -18.1770, -18.6260, -28.7712, -27.8739], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5849, device='cuda:0', dtype=torch.float64)
tensor([-14.0606, -18.9941, -18.2322, -29.3843, -28.7847], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5583, device='cuda:0', dtype=torch.float64)
tensor([-13.8928, -19.4075, -17.5520, -29.6596, -29.1087], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2940, device='cuda:0', dtype=torch.float64)
tensor([-13.6868, -19.7403, -16.9845, -29.8699, -29.3050], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2790, device='cuda:0', dtype=torch.float64)
tensor([-13.4470, -19.9140, -16.6889, -30.0621, -29.6359], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2785, device='cuda:0', dtype=torch.float64)
tensor([-13.2135, -19.9329, -16.3132, -30.1463, -29.9203], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4883, device='cuda:0', dtype=torch.float64)
tensor([-13.0384, -20.0261, -16.0960, -30.1337, -30.2742], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2475, device='cuda:0', dtype=torch.float64)
tensor([-12.8781, -19.9746, -15.6094, -29.6972, -30.1554], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6654, device='cuda:0', dtype=torch.float64)
tensor([-12.6998, -19.8553, -14.9677, -29.0274, -29.7584], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5220, device='cuda:0', dtype=torch.float64)
tensor([-12.5008, -19.8285, -13.9910, -28.3232, -29.5059], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6118, device='cuda:0', dtype=torch.float64)
tensor([-12.3812, -19.8358, -13.5172, -28.0316, -29.5398], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3669, device='cuda:0', dtype=torch.float64)
tensor([-12.2538, -19.8020, -12.8898, -27.8786, -29.6906], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4008, device='cuda:0', dtype=torch.float64)
tensor([-12.1808, -19.6492, -12.6137, -27.8542, -29.8064], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6257, device='cuda:0', dtype=torch.float64)
tensor([-12.1416, -19.9721, -12.6829, -28.3142, -30.3386], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5342, device='cuda:0', dtype=torch.float64)
tensor([-12.1392, -20.4453, -12.5526, -28.9454, -31.1619], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3800, device='cuda:0', dtype=torch.float64)
tensor([-12.1076, -20.8028, -12.5436, -29.6297, -32.0076], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3200, device='cuda:0', dtype=torch.float64)
tensor([-12.0497, -21.0913, -12.6924, -30.0770, -32.5477], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4651, device='cuda:0', dtype=torch.float64)
tensor([-12.0449, -21.2888, -12.8610, -30.3026, -32.6806], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3260, device='cuda:0', dtype=torch.float64)
tensor([-12.0021, -21.7151, -13.1940, -30.4612, -32.7931], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5723, device='cuda:0', dtype=torch.float64)
tensor([-11.9693, -22.2424, -13.3632, -30.4347, -32.8605], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5033, device='cuda:0', dtype=torch.float64)
tensor([-11.9784, -22.7900, -13.5819, -30.7931, -33.0615], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5015, device='cuda:0', dtype=torch.float64)
tensor([-12.0384, -23.5357, -13.9120, -31.3319, -33.5116], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4775, device='cuda:0', dtype=torch.float64)
tensor([-12.1243, -24.3768, -14.6309, -31.8459, -33.9537], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6303, device='cuda:0', dtype=torch.float64)
tensor([-12.2150, -25.2927, -15.2528, -32.1792, -34.0721], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3249, device='cuda:0', dtype=torch.float64)
tensor([-12.3659, -26.3633, -15.8059, -32.4375, -34.4310], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1120, device='cuda:0', dtype=torch.float64)
tensor([-12.5166, -27.4251, -15.9223, -32.5524, -34.7910], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3646, device='cuda:0', dtype=torch.float64)
tensor([-12.6750, -28.5651, -15.9240, -32.6400, -35.1321], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5212, device='cuda:0', dtype=torch.float64)
tensor([-12.7143, -29.5739, -16.0294, -32.7493, -35.5154], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5168, device='cuda:0', dtype=torch.float64)
tensor([-12.7711, -30.3863, -16.1129, -32.6455, -35.6915], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3258, device='cuda:0', dtype=torch.float64)
tensor([-12.8841, -31.1193, -16.2497, -32.7375, -36.0742], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3036, device='cuda:0', dtype=torch.float64)
tensor([-12.9950, -31.4844, -16.4355, -32.8865, -36.4714], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6910, device='cuda:0', dtype=torch.float64)
tensor([-13.0998, -31.4788, -17.0257, -33.4382, -37.0524], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5844, device='cuda:0', dtype=torch.float64)
tensor([-13.2398, -31.5066, -17.7924, -34.1185, -37.8425], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9035, device='cuda:0', dtype=torch.float64)
tensor([-13.3185, -31.4471, -18.9222, -35.1463, -38.7982], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2997, device='cuda:0', dtype=torch.float64)
tensor([-13.4186, -31.3676, -20.2267, -35.9497, -39.6430], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5103, device='cuda:0', dtype=torch.float64)
tensor([-13.4973, -31.1752, -21.1664, -36.5626, -40.3041], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4911, device='cuda:0', dtype=torch.float64)
tensor([-13.5924, -31.1630, -21.7175, -37.1396, -41.0485], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5054, device='cuda:0', dtype=torch.float64)
tensor([-13.8101, -31.3167, -22.6933, -38.2814, -42.1915], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6979, device='cuda:0', dtype=torch.float64)
tensor([-13.8568, -31.5244, -23.2347, -38.4710, -42.6940], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4631, device='cuda:0', dtype=torch.float64)
tensor([-13.9356, -31.8293, -23.9640, -38.9489, -43.4407], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4498, device='cuda:0', dtype=torch.float64)
tensor([-13.9403, -32.4203, -24.6789, -39.4246, -44.0837], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4176, device='cuda:0', dtype=torch.float64)
tensor([-13.9771, -32.8040, -25.8377, -39.4450, -44.4568], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6203, device='cuda:0', dtype=torch.float64)
tensor([-13.9671, -33.1333, -27.2298, -39.4583, -44.7193], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8240, device='cuda:0', dtype=torch.float64)
tensor([-14.0096, -33.4099, -28.7670, -39.8386, -45.0787], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5378, device='cuda:0', dtype=torch.float64)
tensor([-14.1011, -33.9441, -30.1532, -40.3664, -45.4506], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5042, device='cuda:0', dtype=torch.float64)
tensor([-14.1207, -34.5539, -31.1592, -40.6743, -45.7038], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0881, device='cuda:0', dtype=torch.float64)
tensor([-14.1503, -35.2760, -32.1492, -40.9296, -45.8613], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4863, device='cuda:0', dtype=torch.float64)
tensor([-14.2810, -35.9688, -33.1538, -41.4200, -46.1797], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2804, device='cuda:0', dtype=torch.float64)
tensor([-14.4157, -36.5819, -33.9393, -41.8896, -46.3114], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3727, device='cuda:0', dtype=torch.float64)
tensor([-14.4465, -36.9986, -33.9976, -42.3019, -46.1890], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5151, device='cuda:0', dtype=torch.float64)
tensor([-14.5631, -37.2842, -33.9168, -42.9643, -46.2183], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2853, device='cuda:0', dtype=torch.float64)
tensor([-14.6165, -37.7879, -33.6230, -43.2148, -46.1980], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3849, device='cuda:0', dtype=torch.float64)
tensor([-14.6740, -38.2297, -33.2416, -43.5492, -46.0274], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4433, device='cuda:0', dtype=torch.float64)
tensor([-14.8080, -38.9876, -33.5198, -44.1116, -46.2418], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4514, device='cuda:0', dtype=torch.float64)
tensor([-14.9905, -39.7060, -34.0788, -44.6792, -46.5916], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5524, device='cuda:0', dtype=torch.float64)
tensor([-15.2662, -40.3518, -34.7125, -45.4331, -47.2278], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5624, device='cuda:0', dtype=torch.float64)
tensor([-15.4819, -40.9848, -35.0080, -46.1670, -47.6761], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7702, device='cuda:0', dtype=torch.float64)
tensor([-15.4958, -41.4291, -34.6617, -46.8795, -47.5287], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4935, device='cuda:0', dtype=torch.float64)
tensor([-15.5407, -42.1688, -34.6619, -47.5906, -47.4761], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4313, device='cuda:0', dtype=torch.float64)
tensor([-15.5846, -42.8450, -34.4430, -48.0641, -47.5485], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2018, device='cuda:0', dtype=torch.float64)
tensor([-15.6133, -43.6446, -34.2946, -48.4599, -47.6940], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4233, device='cuda:0', dtype=torch.float64)
tensor([-15.6116, -44.3930, -34.5513, -48.8406, -47.7301], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2760, device='cuda:0', dtype=torch.float64)
tensor([-15.5479, -45.0554, -34.8396, -49.1577, -47.5422], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2374, device='cuda:0', dtype=torch.float64)
tensor([-15.4720, -46.0842, -35.4624, -49.5007, -47.4443], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4918, device='cuda:0', dtype=torch.float64)
tensor([-15.3258, -46.7552, -36.0223, -49.7556, -47.2504], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3938, device='cuda:0', dtype=torch.float64)
tensor([-15.1389, -47.4430, -36.2482, -49.9253, -46.8690], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3325, device='cuda:0', dtype=torch.float64)
tensor([-14.9089, -48.1522, -36.4471, -50.1748, -46.5795], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4716, device='cuda:0', dtype=torch.float64)
tensor([-14.7140, -48.9144, -36.3449, -50.3446, -46.4580], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4065, device='cuda:0', dtype=torch.float64)
tensor([-14.6113, -49.9957, -36.8415, -50.6956, -46.6708], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3171, device='cuda:0', dtype=torch.float64)
tensor([-14.7668, -51.5594, -38.1460, -51.0363, -47.1001], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4883, device='cuda:0', dtype=torch.float64)
tensor([-15.0129, -53.3007, -39.9689, -51.0334, -47.1148], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3555, device='cuda:0', dtype=torch.float64)
tensor([-15.2981, -55.4522, -41.8154, -51.1238, -47.3188], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4744, device='cuda:0', dtype=torch.float64)
tensor([-15.4597, -57.2228, -42.9217, -51.2164, -47.3899], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3655, device='cuda:0', dtype=torch.float64)
tensor([-15.5031, -58.5648, -43.5887, -51.2902, -47.3538], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2736, device='cuda:0', dtype=torch.float64)
tensor([-15.4695, -59.6181, -44.3117, -51.2253, -47.2788], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4603, device='cuda:0', dtype=torch.float64)
tensor([-15.4254, -60.2695, -44.8301, -51.0777, -47.0067], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2803, device='cuda:0', dtype=torch.float64)
tensor([-15.3657, -60.1949, -44.8398, -50.6425, -46.4375], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5291, device='cuda:0', dtype=torch.float64)
tensor([-15.4075, -60.2407, -44.3969, -50.4508, -45.9375], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2423, device='cuda:0', dtype=torch.float64)
tensor([-15.5711, -60.5456, -44.1067, -50.6408, -45.7334], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4864, device='cuda:0', dtype=torch.float64)
tensor([-15.6848, -60.9923, -43.5544, -50.8819, -45.8687], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3733, device='cuda:0', dtype=torch.float64)
tensor([-16.0371, -61.4262, -43.3107, -50.9111, -45.7967], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4825, device='cuda:0', dtype=torch.float64)
tensor([-16.3078, -61.7690, -43.1673, -50.9004, -45.9385], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7901, device='cuda:0', dtype=torch.float64)
tensor([-16.5592, -62.6042, -43.3150, -51.5460, -46.8726], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3905, device='cuda:0', dtype=torch.float64)
tensor([-16.7741, -63.5696, -44.1239, -52.2313, -47.8004], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3394, device='cuda:0', dtype=torch.float64)
tensor([-16.7855, -64.1972, -44.4454, -52.8284, -48.6140], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4838, device='cuda:0', dtype=torch.float64)
tensor([-16.8476, -65.3802, -45.0614, -53.7837, -49.8831], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4678, device='cuda:0', dtype=torch.float64)
tensor([-17.0177, -66.3355, -45.8163, -54.5186, -50.8178], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3048, device='cuda:0', dtype=torch.float64)
tensor([-17.2001, -67.9222, -46.7416, -55.3221, -51.8454], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6989, device='cuda:0', dtype=torch.float64)
tensor([-17.4730, -69.8391, -47.6578, -56.2356, -53.0527], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4402, device='cuda:0', dtype=torch.float64)
tensor([-17.7333, -72.3724, -48.8004, -57.8031, -55.0465], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5736, device='cuda:0', dtype=torch.float64)
tensor([-17.8346, -74.4704, -49.0794, -59.2785, -56.9430], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2656, device='cuda:0', dtype=torch.float64)
tensor([-17.9738, -76.9740, -49.5180, -60.9548, -59.2092], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4897, device='cuda:0', dtype=torch.float64)
tensor([-18.3200, -79.2574, -49.5973, -62.5214, -61.4206], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4850, device='cuda:0', dtype=torch.float64)
tensor([-18.5591, -80.8046, -49.1584, -63.7263, -62.9872], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4830, device='cuda:0', dtype=torch.float64)
tensor([-18.7839, -82.6292, -48.7042, -65.0781, -64.6032], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3553, device='cuda:0', dtype=torch.float64)
tensor([-19.0543, -84.3339, -48.1480, -65.8974, -65.7306], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2134, device='cuda:0', dtype=torch.float64)
tensor([-19.5294, -86.9837, -48.1866, -67.0539, -67.1826], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3464, device='cuda:0', dtype=torch.float64)
tensor([-20.1002, -89.0974, -48.3661, -68.0579, -68.7036], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4707, device='cuda:0', dtype=torch.float64)
tensor([-20.6547, -91.5477, -49.0787, -69.2216, -70.4889], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6670, device='cuda:0', dtype=torch.float64)
tensor([-21.3348, -94.1270, -49.7633, -69.7796, -71.9286], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4889, device='cuda:0', dtype=torch.float64)
tensor([-22.0497, -95.8309, -49.6976, -70.3324, -72.9091], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2542, device='cuda:0', dtype=torch.float64)
tensor([-22.5893, -97.5046, -49.7912, -71.0841, -73.8340], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5089, device='cuda:0', dtype=torch.float64)
tensor([-22.9413, -98.1575, -49.5562, -71.3795, -73.8735], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4043, device='cuda:0', dtype=torch.float64)
tensor([-23.4660, -99.2988, -49.7902, -71.9507, -74.6302], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3780, device='cuda:0', dtype=torch.float64)
tensor([ -23.9552, -100.3301,  -49.9903,  -72.5733,  -75.6187],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.3726, device='cuda:0', dtype=torch.float64)
tensor([ -24.5584, -101.6010,  -50.4353,  -73.2729,  -76.9049],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.4236, device='cuda:0', dtype=torch.float64)
tensor([ -25.2040, -103.2048,  -50.6932,  -73.9618,  -78.3962],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.5586, device='cuda:0', dtype=torch.float64)
tensor([ -25.6409, -104.7120,  -50.5256,  -74.4692,  -79.4123],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.5135, device='cuda:0', dtype=torch.float64)
tensor([ -26.0222, -105.4294,  -50.5054,  -74.5466,  -79.9108],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.4269, device='cuda:0', dtype=torch.float64)
tensor([ -26.3221, -106.2862,  -50.3777,  -74.7406,  -80.2796],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.5265, device='cuda:0', dtype=torch.float64)
tensor([ -26.1931, -106.5435,  -49.8143,  -74.9132,  -79.8555],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.2212, device='cuda:0', dtype=torch.float64)
tensor([ -25.9093, -105.8939,  -49.1304,  -74.8611,  -78.8349],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.3453, device='cuda:0', dtype=torch.float64)
tensor([ -25.6983, -106.2416,  -48.8758,  -75.2478,  -78.4177],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.4246, device='cuda:0', dtype=torch.float64)
tensor([ -25.5528, -107.6803,  -48.6126,  -75.8404,  -78.6666],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.2685, device='cuda:0', dtype=torch.float64)
tensor([ -25.3314, -108.7369,  -48.1111,  -76.1440,  -78.4113],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.4438, device='cuda:0', dtype=torch.float64)
tensor([ -25.0656, -109.2560,  -47.3840,  -76.1981,  -77.7930],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.4241, device='cuda:0', dtype=torch.float64)
tensor([ -24.7342, -108.5572,  -46.6252,  -75.6409,  -76.9818],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.2182, device='cuda:0', dtype=torch.float64)
tensor([ -24.4310, -107.2697,  -45.6914,  -74.9729,  -75.8717],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.6999, device='cuda:0', dtype=torch.float64)
tensor([ -24.0522, -106.5895,  -44.7419,  -74.6212,  -75.2198],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.1680, device='cuda:0', dtype=torch.float64)
tensor([ -23.7707, -106.3168,  -44.0757,  -74.5879,  -74.8371],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.6508, device='cuda:0', dtype=torch.float64)
tensor([ -23.7327, -107.1122,  -43.5450,  -75.1949,  -75.2827],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.2920, device='cuda:0', dtype=torch.float64)
tensor([ -23.8850, -107.5738,  -43.0882,  -75.6062,  -75.6567],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.6576, device='cuda:0', dtype=torch.float64)
tensor([ -23.7379, -106.2783,  -42.3641,  -75.6607,  -74.9374],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.4598, device='cuda:0', dtype=torch.float64)
tensor([ -24.1220, -106.6038,  -42.2965,  -76.5011,  -75.0824],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.4831, device='cuda:0', dtype=torch.float64)
tensor([ -24.4960, -107.2724,  -42.6062,  -77.3664,  -74.9950],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.2444, device='cuda:0', dtype=torch.float64)
tensor([ -24.8594, -108.5721,  -42.9985,  -78.6330,  -75.2252],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.3580, device='cuda:0', dtype=torch.float64)
tensor([ -25.2263, -110.0748,  -43.4201,  -79.8089,  -75.3925],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.2210, device='cuda:0', dtype=torch.float64)
tensor([ -25.5066, -111.7341,  -43.9790,  -81.2912,  -75.9227],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.2693, device='cuda:0', dtype=torch.float64)
tensor([ -25.9428, -113.1616,  -44.3876,  -82.6649,  -76.3215],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.9030, device='cuda:0', dtype=torch.float64)
tensor([ -26.0934, -113.3500,  -44.3145,  -83.4251,  -76.2290],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.4524, device='cuda:0', dtype=torch.float64)
tensor([ -26.1832, -113.2365,  -44.1639,  -84.5003,  -76.4245],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.4346, device='cuda:0', dtype=torch.float64)
tensor([ -26.2655, -113.1511,  -43.9039,  -85.5188,  -76.6985],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.3049, device='cuda:0', dtype=torch.float64)
tensor([ -26.3669, -113.6575,  -43.8822,  -86.9087,  -77.3611],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.5472, device='cuda:0', dtype=torch.float64)
tensor([ -26.6629, -114.6632,  -43.7455,  -88.6055,  -78.3217],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.5341, device='cuda:0', dtype=torch.float64)
tensor([ -27.0019, -115.4316,  -43.1823,  -90.1638,  -78.8613],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.6035, device='cuda:0', dtype=torch.float64)
tensor([ -27.3157, -115.9769,  -42.6891,  -91.4258,  -79.5283],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.3828, device='cuda:0', dtype=torch.float64)
tensor([ -27.4880, -116.2300,  -42.6479,  -92.4513,  -80.0362],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.3171, device='cuda:0', dtype=torch.float64)
tensor([ -27.7192, -117.4776,  -43.0842,  -93.9124,  -80.9615],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.5680, device='cuda:0', dtype=torch.float64)
tensor([ -28.2001, -120.2797,  -44.0810,  -95.9978,  -82.4873],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.5735, device='cuda:0', dtype=torch.float64)
tensor([ -28.9665, -123.8865,  -45.5975,  -98.1531,  -84.4801],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.3454, device='cuda:0', dtype=torch.float64)
tensor([ -29.5688, -127.2678,  -47.0405, -100.1134,  -86.2523],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.4257, device='cuda:0', dtype=torch.float64)
tensor([ -30.3433, -130.7343,  -48.5016, -102.2385,  -87.9570],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.3948, device='cuda:0', dtype=torch.float64)
tensor([ -30.9707, -133.7686,  -49.8250, -104.3891,  -89.3703],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.2453, device='cuda:0', dtype=torch.float64)
tensor([ -31.3392, -136.7188,  -51.0731, -106.2787,  -90.4317],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.4571, device='cuda:0', dtype=torch.float64)
tensor([ -31.4288, -138.4899,  -52.2868, -107.6484,  -91.0544],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.6056, device='cuda:0', dtype=torch.float64)
tensor([ -30.9695, -139.0825,  -53.1382, -107.8946,  -91.0306],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.5186, device='cuda:0', dtype=torch.float64)
tensor([ -30.2406, -138.4606,  -53.8836, -107.4193,  -90.3389],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.1608, device='cuda:0', dtype=torch.float64)
tensor([ -29.3878, -137.3363,  -54.0858, -106.5239,  -89.5190],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.5528, device='cuda:0', dtype=torch.float64)
tensor([ -28.8108, -135.9785,  -54.3698, -106.0266,  -88.9539],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.4358, device='cuda:0', dtype=torch.float64)
tensor([ -28.8326, -134.9344,  -55.3569, -106.1286,  -88.7177],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.2911, device='cuda:0', dtype=torch.float64)
tensor([ -28.8639, -133.5180,  -56.3519, -106.0182,  -88.2325],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.5308, device='cuda:0', dtype=torch.float64)
tensor([ -29.3512, -132.9114,  -57.6460, -106.4266,  -88.5375],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.3920, device='cuda:0', dtype=torch.float64)
tensor([ -29.6516, -131.3405,  -58.6036, -106.4142,  -88.0579],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.4707, device='cuda:0', dtype=torch.float64)
tensor([ -29.7429, -129.7751,  -59.7269, -106.4184,  -87.3776],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.3187, device='cuda:0', dtype=torch.float64)
tensor([ -29.3245, -127.7697,  -60.1084, -105.8209,  -86.4133],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.3796, device='cuda:0', dtype=torch.float64)
tensor([ -29.0379, -125.4909,  -59.9763, -105.3064,  -85.1182],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.2682, device='cuda:0', dtype=torch.float64)
tensor([ -28.8087, -123.6006,  -59.9437, -104.9807,  -83.8998],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.3714, device='cuda:0', dtype=torch.float64)
tensor([ -28.5985, -121.9550,  -59.9573, -104.4849,  -82.7244],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.6355, device='cuda:0', dtype=torch.float64)
tensor([ -28.1516, -119.8996,  -60.0175, -103.5737,  -81.4344],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.3291, device='cuda:0', dtype=torch.float64)
tensor([ -27.7834, -117.5657,  -60.0963, -103.1250,  -80.1592],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.6132, device='cuda:0', dtype=torch.float64)
tensor([ -27.2306, -114.5974,  -59.6097, -102.4655,  -78.5474],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.4506, device='cuda:0', dtype=torch.float64)
tensor([ -27.0380, -112.4072,  -59.6309, -102.4611,  -77.7543],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.3834, device='cuda:0', dtype=torch.float64)
tensor([ -26.8820, -110.8853,  -60.2005, -102.7367,  -77.2054],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.3723, device='cuda:0', dtype=torch.float64)
tensor([ -26.9379, -110.9668,  -61.4892, -103.6531,  -77.2852],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0902, device='cuda:0', dtype=torch.float64)
tensor([ -26.8194, -110.8463,  -62.7581, -104.3057,  -76.9555],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.6343, device='cuda:0', dtype=torch.float64)
tensor([ -26.8012, -111.0284,  -63.5033, -104.7901,  -76.7621],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.2579, device='cuda:0', dtype=torch.float64)
tensor([ -26.6889, -111.4460,  -64.1242, -105.2488,  -76.5355],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.4579, device='cuda:0', dtype=torch.float64)
tensor([ -26.7275, -111.7940,  -64.7634, -105.6446,  -76.1801],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.6116, device='cuda:0', dtype=torch.float64)
tensor([ -26.7440, -112.0087,  -65.5528, -105.7438,  -75.2107],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.3542, device='cuda:0', dtype=torch.float64)
tensor([ -27.1236, -112.8874,  -66.6226, -106.0773,  -74.6331],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.4921, device='cuda:0', dtype=torch.float64)
tensor([ -27.0247, -112.8916,  -67.1346, -105.7230,  -73.5595],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.2753, device='cuda:0', dtype=torch.float64)
tensor([ -26.7506, -111.9820,  -66.7043, -105.0683,  -72.0512],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.3410, device='cuda:0', dtype=torch.float64)
tensor([ -26.4859, -111.0934,  -66.3628, -104.7207,  -70.8498],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.4337, device='cuda:0', dtype=torch.float64)
tensor([ -26.5157, -110.6575,  -66.6553, -104.2714,  -69.6982],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.3487, device='cuda:0', dtype=torch.float64)
tensor([ -26.4732, -110.7759,  -67.0573, -104.2547,  -68.9986],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.3295, device='cuda:0', dtype=torch.float64)
tensor([ -25.9723, -109.7318,  -66.7887, -103.7371,  -67.9067],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.3568, device='cuda:0', dtype=torch.float64)
tensor([ -25.7110, -109.2638,  -66.5789, -103.5386,  -67.1170],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.2492, device='cuda:0', dtype=torch.float64)
tensor([ -25.4002, -108.7502,  -66.4485, -103.5963,  -66.3789],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.4004, device='cuda:0', dtype=torch.float64)
tensor([ -25.0485, -108.8248,  -66.2374, -104.1939,  -66.2496],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.1305, device='cuda:0', dtype=torch.float64)
tensor([ -24.8697, -108.6421,  -65.6556, -104.8381,  -66.0000],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.1933, device='cuda:0', dtype=torch.float64)
tensor([ -24.8038, -108.4138,  -64.9590, -105.1203,  -65.8758],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.3961, device='cuda:0', dtype=torch.float64)
tensor([ -25.1741, -108.8094,  -64.9496, -105.5926,  -65.9722],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.4183, device='cuda:0', dtype=torch.float64)
tensor([ -25.3292, -108.5838,  -64.8589, -105.6923,  -65.6349],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.4361, device='cuda:0', dtype=torch.float64)
tensor([ -25.2499, -106.9185,  -64.7671, -105.6239,  -64.9250],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.3568, device='cuda:0', dtype=torch.float64)
tensor([ -25.0855, -104.7961,  -64.2051, -105.1903,  -64.0473],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.3309, device='cuda:0', dtype=torch.float64)
tensor([ -25.1651, -103.0576,  -64.0430, -104.4718,  -63.1837],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9100, device='cuda:0', dtype=torch.float64)
tensor([ -25.3663, -101.4987,  -64.1291, -104.0863,  -62.5420],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.5508, device='cuda:0', dtype=torch.float64)
tensor([ -25.6064, -100.1051,  -64.3385, -103.5013,  -61.9214],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.1178, device='cuda:0', dtype=torch.float64)
tensor([ -25.7306,  -98.5142,  -64.6261, -103.1159,  -61.2122],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.2623, device='cuda:0', dtype=torch.float64)
tensor([ -25.5690,  -96.8259,  -64.6163, -102.2960,  -60.5242],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.5379, device='cuda:0', dtype=torch.float64)
tensor([ -25.1369,  -94.0336,  -63.5100, -101.0157,  -59.9250],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.3872, device='cuda:0', dtype=torch.float64)
tensor([-24.7232, -91.1939, -62.7605, -99.6529, -59.1060], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5847, device='cuda:0', dtype=torch.float64)
tensor([-24.1773, -87.9802, -61.6567, -98.2673, -58.0877], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2538, device='cuda:0', dtype=torch.float64)
tensor([-23.8574, -85.1835, -60.7189, -97.0724, -57.2642], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6874, device='cuda:0', dtype=torch.float64)
tensor([-23.2638, -81.8223, -59.0144, -95.7835, -56.4220], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5262, device='cuda:0', dtype=torch.float64)
tensor([-22.5027, -78.5770, -56.5976, -94.2523, -55.4329], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5692, device='cuda:0', dtype=torch.float64)
tensor([-22.2353, -76.8969, -54.9385, -93.4034, -55.0184], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3810, device='cuda:0', dtype=torch.float64)
tensor([-21.7171, -75.1299, -52.5809, -92.4071, -54.3654], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3024, device='cuda:0', dtype=torch.float64)
tensor([-21.5299, -74.1609, -50.7476, -91.7681, -53.9949], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3207, device='cuda:0', dtype=torch.float64)
tensor([-21.7692, -73.7821, -49.2601, -91.3987, -53.7085], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3278, device='cuda:0', dtype=torch.float64)
tensor([-22.1269, -73.2576, -47.7472, -90.8073, -53.1247], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1659, device='cuda:0', dtype=torch.float64)
tensor([-22.7137, -73.1969, -46.6983, -90.7258, -52.9014], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6983, device='cuda:0', dtype=torch.float64)
tensor([-23.2296, -73.7668, -45.4295, -90.4339, -52.5748], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1589, device='cuda:0', dtype=torch.float64)
tensor([-23.9564, -74.5837, -44.7385, -90.4386, -52.7234], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2867, device='cuda:0', dtype=torch.float64)
tensor([-24.4636, -75.0972, -43.7913, -90.0875, -52.4322], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6277, device='cuda:0', dtype=torch.float64)
tensor([-24.6492, -75.3299, -42.6893, -89.5368, -52.1281], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4659, device='cuda:0', dtype=torch.float64)
tensor([-24.9381, -75.6500, -41.7133, -89.2587, -51.9465], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3150, device='cuda:0', dtype=torch.float64)
tensor([-24.9768, -75.6892, -40.4778, -88.2489, -51.4019], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2369, device='cuda:0', dtype=torch.float64)
tensor([-25.0542, -75.7223, -39.2842, -87.0474, -50.8704], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3967, device='cuda:0', dtype=torch.float64)
tensor([-25.0808, -76.1657, -38.3057, -85.8734, -50.0898], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3444, device='cuda:0', dtype=torch.float64)
tensor([-25.1373, -76.7653, -37.5217, -85.3052, -49.6468], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4347, device='cuda:0', dtype=torch.float64)
tensor([-25.2327, -77.5478, -37.0978, -84.5980, -48.9401], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3811, device='cuda:0', dtype=torch.float64)
tensor([-25.2819, -78.4152, -36.6673, -83.4923, -48.2596], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2656, device='cuda:0', dtype=torch.float64)
tensor([-25.2489, -78.9593, -36.2331, -82.3670, -47.6958], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1030, device='cuda:0', dtype=torch.float64)
tensor([-25.3139, -79.6577, -35.7390, -81.2296, -47.0757], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6666, device='cuda:0', dtype=torch.float64)
tensor([-25.7926, -81.0033, -35.7035, -81.2328, -47.1397], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3317, device='cuda:0', dtype=torch.float64)
tensor([-26.0783, -81.6408, -35.5217, -80.8307, -47.1760], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4963, device='cuda:0', dtype=torch.float64)
tensor([-26.3864, -82.5456, -35.4603, -80.2375, -47.2224], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6072, device='cuda:0', dtype=torch.float64)
tensor([-26.7319, -83.7734, -35.3864, -79.8015, -47.3869], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6874, device='cuda:0', dtype=torch.float64)
tensor([-27.0558, -85.1299, -35.4547, -79.4437, -47.3823], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4666, device='cuda:0', dtype=torch.float64)
tensor([-27.6738, -86.3560, -36.2648, -79.3717, -47.2877], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4080, device='cuda:0', dtype=torch.float64)
tensor([-27.8891, -86.4927, -36.7633, -78.7262, -46.9484], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1479, device='cuda:0', dtype=torch.float64)
tensor([-28.0752, -86.2431, -37.0358, -78.2681, -46.6729], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1357, device='cuda:0', dtype=torch.float64)
tensor([-28.4111, -85.8513, -37.4010, -77.8899, -46.4718], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5110, device='cuda:0', dtype=torch.float64)
tensor([-28.6749, -85.5014, -37.7716, -77.4343, -46.1184], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3380, device='cuda:0', dtype=torch.float64)
tensor([-28.9197, -85.0588, -38.4674, -77.0585, -45.7381], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4559, device='cuda:0', dtype=torch.float64)
tensor([-28.9055, -83.9108, -39.1976, -76.5884, -45.2297], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5383, device='cuda:0', dtype=torch.float64)
tensor([-28.8356, -82.0406, -39.9093, -75.7183, -44.2179], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4564, device='cuda:0', dtype=torch.float64)
tensor([-28.6526, -80.3473, -40.3795, -75.0140, -43.3866], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4355, device='cuda:0', dtype=torch.float64)
tensor([-28.6771, -78.6332, -40.9354, -74.2421, -42.3993], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2929, device='cuda:0', dtype=torch.float64)
tensor([-28.6681, -77.1022, -41.1995, -73.6925, -41.6637], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2469, device='cuda:0', dtype=torch.float64)
tensor([-28.9583, -75.9682, -41.5591, -73.2926, -41.1953], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2844, device='cuda:0', dtype=torch.float64)
tensor([-29.0061, -74.7274, -41.4977, -72.9899, -40.7800], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3072, device='cuda:0', dtype=torch.float64)
tensor([-29.2540, -73.6831, -41.5500, -72.6626, -40.4881], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1646, device='cuda:0', dtype=torch.float64)
tensor([-29.5297, -72.9402, -41.5283, -72.6240, -40.3304], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2800, device='cuda:0', dtype=torch.float64)
tensor([-29.5994, -72.0263, -41.5087, -72.7457, -40.3725], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2395, device='cuda:0', dtype=torch.float64)
tensor([-29.4494, -71.3610, -41.5168, -73.0464, -40.3682], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3422, device='cuda:0', dtype=torch.float64)
tensor([-29.1176, -70.7922, -41.5107, -72.8842, -40.1311], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3439, device='cuda:0', dtype=torch.float64)
tensor([-28.5555, -70.3986, -41.4379, -72.4768, -39.5156], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4108, device='cuda:0', dtype=torch.float64)
tensor([-28.0260, -70.0588, -41.1002, -72.0915, -38.9708], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3271, device='cuda:0', dtype=torch.float64)
tensor([-27.4940, -69.5148, -40.6663, -71.8805, -38.5030], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3319, device='cuda:0', dtype=torch.float64)
tensor([-26.9539, -69.4667, -39.9581, -71.5179, -38.1434], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4464, device='cuda:0', dtype=torch.float64)
tensor([-26.7431, -69.9627, -39.8648, -71.6126, -38.0074], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3412, device='cuda:0', dtype=torch.float64)
tensor([-26.6808, -70.0107, -40.1382, -71.8048, -38.0094], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4105, device='cuda:0', dtype=torch.float64)
tensor([-26.8318, -70.0266, -40.2217, -71.8090, -37.9645], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2957, device='cuda:0', dtype=torch.float64)
tensor([-26.6967, -70.0230, -40.1046, -71.5750, -38.0382], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4841, device='cuda:0', dtype=torch.float64)
tensor([-26.5174, -69.9605, -40.0042, -71.2615, -38.2390], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3727, device='cuda:0', dtype=torch.float64)
tensor([-26.4512, -70.2987, -39.8476, -71.4719, -38.5770], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5756, device='cuda:0', dtype=torch.float64)
tensor([-26.4916, -69.9300, -39.4652, -71.3269, -38.8025], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2959, device='cuda:0', dtype=torch.float64)
tensor([-26.5497, -69.8721, -39.2060, -71.4126, -39.0548], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3259, device='cuda:0', dtype=torch.float64)
tensor([-26.7064, -70.0377, -38.7628, -71.1813, -39.2288], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3019, device='cuda:0', dtype=torch.float64)
tensor([-26.7623, -70.0881, -38.3498, -70.8612, -39.2475], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4644, device='cuda:0', dtype=torch.float64)
tensor([-26.7771, -70.2858, -38.3217, -70.7196, -39.2890], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3920, device='cuda:0', dtype=torch.float64)
tensor([-26.6590, -70.4586, -38.2698, -70.6094, -39.0932], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2833, device='cuda:0', dtype=torch.float64)
tensor([-26.5363, -70.1485, -38.4861, -70.1298, -38.7719], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2281, device='cuda:0', dtype=torch.float64)
tensor([-26.7275, -70.2025, -38.7796, -70.3611, -38.5564], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2155, device='cuda:0', dtype=torch.float64)
tensor([-26.6764, -70.4501, -39.4543, -70.9583, -38.4578], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3578, device='cuda:0', dtype=torch.float64)
tensor([-26.6476, -71.2598, -39.9863, -71.5973, -38.2622], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5207, device='cuda:0', dtype=torch.float64)
tensor([-26.5974, -71.9056, -40.7157, -72.3084, -38.1673], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2836, device='cuda:0', dtype=torch.float64)
tensor([-26.4423, -72.3123, -41.2217, -72.5076, -37.8625], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3134, device='cuda:0', dtype=torch.float64)
tensor([-25.8743, -72.2044, -41.5661, -72.4901, -37.3473], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2694, device='cuda:0', dtype=torch.float64)
tensor([-25.2261, -72.0004, -41.8892, -72.6604, -36.8848], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1358, device='cuda:0', dtype=torch.float64)
tensor([-24.7835, -71.8924, -42.1806, -73.4443, -36.6968], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4928, device='cuda:0', dtype=torch.float64)
tensor([-24.6288, -72.1708, -42.4354, -74.2212, -36.5313], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3591, device='cuda:0', dtype=torch.float64)
tensor([-24.5271, -72.4530, -42.6147, -74.5227, -36.3041], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3288, device='cuda:0', dtype=torch.float64)
tensor([-24.3053, -72.4852, -43.0830, -74.7752, -36.2300], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3643, device='cuda:0', dtype=torch.float64)
tensor([-24.1901, -72.0408, -43.4581, -75.0051, -35.8515], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4950, device='cuda:0', dtype=torch.float64)
tensor([-24.1012, -71.5860, -43.7616, -75.1987, -35.5270], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2841, device='cuda:0', dtype=torch.float64)
tensor([-24.1794, -71.8439, -44.2369, -75.7691, -35.3885], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0613, device='cuda:0', dtype=torch.float64)
tensor([-24.2413, -71.5606, -44.4964, -75.8975, -35.1159], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1163, device='cuda:0', dtype=torch.float64)
tensor([-24.4808, -71.7701, -45.1834, -76.3092, -35.0917], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0810, device='cuda:0', dtype=torch.float64)
tensor([-24.7094, -72.2488, -45.8469, -76.5922, -34.8669], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3968, device='cuda:0', dtype=torch.float64)
tensor([-25.0214, -72.1556, -46.3617, -77.0179, -34.5571], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4125, device='cuda:0', dtype=torch.float64)
tensor([-25.1668, -72.4018, -46.5628, -77.2432, -34.2892], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3463, device='cuda:0', dtype=torch.float64)
tensor([-25.1264, -72.4518, -46.7364, -76.6699, -33.7778], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1534, device='cuda:0', dtype=torch.float64)
tensor([-25.1523, -72.4362, -47.2849, -76.3101, -33.2220], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1877, device='cuda:0', dtype=torch.float64)
tensor([-25.1401, -72.0119, -47.8310, -75.6453, -32.6698], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3685, device='cuda:0', dtype=torch.float64)
tensor([-25.1677, -71.5397, -48.0384, -75.0652, -32.2611], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3128, device='cuda:0', dtype=torch.float64)
tensor([-25.0483, -70.6972, -48.2809, -74.4867, -31.7340], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4685, device='cuda:0', dtype=torch.float64)
tensor([-25.0670, -69.9110, -48.5390, -73.8730, -31.1919], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2760, device='cuda:0', dtype=torch.float64)
tensor([-25.1399, -69.4309, -48.7745, -73.0399, -30.7726], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6448, device='cuda:0', dtype=torch.float64)
tensor([-25.4375, -69.4408, -49.1088, -72.5958, -30.6111], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2236, device='cuda:0', dtype=torch.float64)
tensor([-25.9105, -69.8607, -49.5707, -72.4559, -30.5133], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2793, device='cuda:0', dtype=torch.float64)
tensor([-26.5707, -70.6046, -50.1829, -72.3961, -30.5037], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1339, device='cuda:0', dtype=torch.float64)
tensor([-27.4034, -71.9102, -50.7758, -72.9623, -30.6957], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1904, device='cuda:0', dtype=torch.float64)
tensor([-28.0755, -73.3385, -51.2896, -73.5896, -30.9519], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3367, device='cuda:0', dtype=torch.float64)
tensor([-28.7199, -74.8324, -52.2354, -74.2658, -31.1241], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3511, device='cuda:0', dtype=torch.float64)
tensor([-29.2964, -75.7481, -52.7220, -74.5166, -31.3131], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3354, device='cuda:0', dtype=torch.float64)
tensor([-29.7608, -76.9299, -53.3941, -74.8244, -31.5705], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1841, device='cuda:0', dtype=torch.float64)
tensor([-29.9182, -77.6110, -53.9237, -74.5557, -31.7345], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3883, device='cuda:0', dtype=torch.float64)
tensor([-30.1167, -78.1427, -54.7366, -74.7519, -31.9816], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3636, device='cuda:0', dtype=torch.float64)
tensor([-30.5757, -78.2071, -55.5671, -74.9385, -32.2502], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4172, device='cuda:0', dtype=torch.float64)
tensor([-31.0521, -78.3705, -56.4009, -75.0729, -32.5845], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2151, device='cuda:0', dtype=torch.float64)
tensor([-31.5161, -78.8263, -57.4516, -75.5706, -33.0129], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3357, device='cuda:0', dtype=torch.float64)
tensor([-31.8642, -79.1003, -58.4895, -75.9101, -33.3895], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4486, device='cuda:0', dtype=torch.float64)
tensor([-32.1801, -79.7183, -59.2393, -76.1657, -33.9143], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1326, device='cuda:0', dtype=torch.float64)
tensor([-32.4593, -80.0203, -59.5123, -76.2736, -34.4855], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4107, device='cuda:0', dtype=torch.float64)
tensor([-32.3274, -79.4897, -59.5873, -76.3981, -34.8257], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2246, device='cuda:0', dtype=torch.float64)
tensor([-32.4634, -79.0245, -59.7590, -76.7082, -35.2745], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2151, device='cuda:0', dtype=torch.float64)
tensor([-32.5137, -78.5251, -60.0544, -76.6444, -35.6827], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5015, device='cuda:0', dtype=torch.float64)
tensor([-32.5276, -78.4832, -60.1111, -76.5387, -36.1438], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3228, device='cuda:0', dtype=torch.float64)
tensor([-32.1852, -78.9059, -59.5528, -75.8707, -36.4514], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2602, device='cuda:0', dtype=torch.float64)
tensor([-31.8527, -78.8204, -59.1173, -75.1068, -36.6074], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4401, device='cuda:0', dtype=torch.float64)
tensor([-31.5913, -78.7934, -58.9695, -74.9260, -36.8219], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2947, device='cuda:0', dtype=torch.float64)
tensor([-31.2840, -78.3608, -58.6868, -74.4975, -36.9148], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6498, device='cuda:0', dtype=torch.float64)
tensor([-31.2258, -77.6584, -58.1216, -74.0624, -37.2177], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3639, device='cuda:0', dtype=torch.float64)
tensor([-31.1494, -77.3811, -57.6167, -74.0007, -37.6511], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5084, device='cuda:0', dtype=torch.float64)
tensor([-30.8689, -77.1120, -56.8497, -72.9881, -37.5938], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1373, device='cuda:0', dtype=torch.float64)
tensor([-30.7040, -76.8779, -56.5409, -72.4241, -37.5033], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0088, device='cuda:0', dtype=torch.float64)
tensor([-30.6436, -77.0714, -56.4909, -72.2797, -37.4899], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3308, device='cuda:0', dtype=torch.float64)
tensor([-30.5613, -77.5999, -56.5153, -72.0911, -37.5101], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1899, device='cuda:0', dtype=torch.float64)
tensor([-30.6443, -78.5202, -56.5314, -71.9756, -37.6192], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1154, device='cuda:0', dtype=torch.float64)
tensor([-30.5625, -79.1853, -56.5851, -71.7514, -37.5876], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0154, device='cuda:0', dtype=torch.float64)
tensor([-30.4777, -79.7190, -56.5163, -71.4570, -37.6506], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0274, device='cuda:0', dtype=torch.float64)
tensor([-30.4784, -80.0613, -56.4444, -71.1036, -37.6811], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3369, device='cuda:0', dtype=torch.float64)
tensor([-30.5380, -80.7249, -56.4462, -70.9028, -37.8621], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2624, device='cuda:0', dtype=torch.float64)
tensor([-30.3696, -80.6321, -56.3636, -69.9623, -37.7326], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3274, device='cuda:0', dtype=torch.float64)
tensor([-30.3057, -80.2170, -56.4612, -69.1717, -37.6688], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3069, device='cuda:0', dtype=torch.float64)
tensor([-30.2737, -79.3285, -56.6506, -67.9537, -37.3999], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3004, device='cuda:0', dtype=torch.float64)
tensor([-30.1727, -78.0747, -56.6790, -67.0017, -37.1673], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3257, device='cuda:0', dtype=torch.float64)
tensor([-30.0574, -76.8859, -56.6536, -66.3400, -37.0327], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2209, device='cuda:0', dtype=torch.float64)
tensor([-29.9230, -75.7403, -56.7280, -65.2489, -36.8545], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1770, device='cuda:0', dtype=torch.float64)
tensor([-30.0789, -74.5282, -57.0518, -64.4224, -36.7678], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2891, device='cuda:0', dtype=torch.float64)
tensor([-30.0747, -73.3082, -57.1504, -64.0180, -36.8763], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5190, device='cuda:0', dtype=torch.float64)
tensor([-30.0996, -72.0808, -57.0398, -63.6498, -36.9230], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1507, device='cuda:0', dtype=torch.float64)
tensor([-30.0809, -70.7424, -57.1719, -63.3370, -36.8855], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4538, device='cuda:0', dtype=torch.float64)
tensor([-30.0050, -69.7687, -57.2995, -62.9491, -36.7550], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4785, device='cuda:0', dtype=torch.float64)
tensor([-29.7393, -68.5220, -56.9296, -61.8144, -36.4189], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3186, device='cuda:0', dtype=torch.float64)
tensor([-29.6095, -67.0785, -56.3860, -60.8029, -36.0237], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6074, device='cuda:0', dtype=torch.float64)
tensor([-29.7497, -66.4149, -55.9897, -60.0952, -35.9057], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1511, device='cuda:0', dtype=torch.float64)
tensor([-29.6965, -65.4222, -55.5429, -59.3906, -35.6280], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3222, device='cuda:0', dtype=torch.float64)
tensor([-29.6206, -64.3008, -55.2282, -58.8298, -35.3533], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3305, device='cuda:0', dtype=torch.float64)
tensor([-29.7260, -63.1594, -54.7278, -58.4284, -35.3511], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4246, device='cuda:0', dtype=torch.float64)
tensor([-29.6643, -62.2664, -54.2109, -57.9539, -35.4739], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3926, device='cuda:0', dtype=torch.float64)
tensor([-29.4885, -61.1246, -53.5490, -57.0884, -35.5239], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0884, device='cuda:0', dtype=torch.float64)
tensor([-29.3647, -60.2419, -52.9794, -56.7068, -35.6841], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4197, device='cuda:0', dtype=torch.float64)
tensor([-29.0808, -58.8677, -52.2757, -56.0148, -35.7673], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1413, device='cuda:0', dtype=torch.float64)
tensor([-28.7334, -57.5577, -51.6365, -55.3924, -35.9086], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1372, device='cuda:0', dtype=torch.float64)
tensor([-28.4246, -56.5564, -51.2621, -54.8757, -36.0211], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2554, device='cuda:0', dtype=torch.float64)
tensor([-28.0244, -56.0633, -50.8811, -54.3521, -36.1216], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2469, device='cuda:0', dtype=torch.float64)
tensor([-27.5164, -55.5659, -50.6230, -54.0004, -36.1263], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3261, device='cuda:0', dtype=torch.float64)
tensor([-27.1723, -55.3988, -50.5982, -53.7439, -36.2570], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3477, device='cuda:0', dtype=torch.float64)
tensor([-26.7036, -55.4610, -50.3341, -53.0228, -36.3170], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2721, device='cuda:0', dtype=torch.float64)
tensor([-26.4433, -55.5075, -49.8403, -52.5905, -36.3690], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2336, device='cuda:0', dtype=torch.float64)
tensor([-26.3732, -55.7190, -49.5037, -52.7399, -36.5891], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1024, device='cuda:0', dtype=torch.float64)
tensor([-26.3580, -55.6910, -49.0258, -52.7609, -36.7582], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4282, device='cuda:0', dtype=torch.float64)
tensor([-26.3542, -56.0959, -48.7226, -52.9331, -37.0915], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3124, device='cuda:0', dtype=torch.float64)
tensor([-26.3060, -56.7306, -48.8316, -53.2625, -37.3067], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2027, device='cuda:0', dtype=torch.float64)
tensor([-26.1979, -57.1904, -48.9996, -53.7997, -37.3840], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2536, device='cuda:0', dtype=torch.float64)
tensor([-26.1177, -57.5022, -49.3612, -54.3943, -37.4898], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2286, device='cuda:0', dtype=torch.float64)
tensor([-26.1763, -57.6570, -49.4055, -55.0192, -37.4706], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1295, device='cuda:0', dtype=torch.float64)
tensor([-26.2188, -58.0859, -49.3322, -55.5490, -37.5045], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1756, device='cuda:0', dtype=torch.float64)
tensor([-26.3115, -58.4902, -49.1317, -55.6838, -37.6015], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3312, device='cuda:0', dtype=torch.float64)
tensor([-26.4112, -58.9921, -49.1174, -55.9610, -37.7320], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4496, device='cuda:0', dtype=torch.float64)
tensor([-26.3623, -59.4936, -49.2290, -56.4850, -38.1248], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2254, device='cuda:0', dtype=torch.float64)
tensor([-26.2688, -59.7276, -49.2148, -56.8799, -38.2683], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2893, device='cuda:0', dtype=torch.float64)
tensor([-26.3133, -60.4835, -49.1773, -57.2039, -38.6252], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2910, device='cuda:0', dtype=torch.float64)
tensor([-26.4293, -61.3176, -48.9764, -57.6779, -39.1090], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3669, device='cuda:0', dtype=torch.float64)
tensor([-26.1951, -62.1043, -48.4737, -57.9512, -39.3356], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2143, device='cuda:0', dtype=torch.float64)
tensor([-26.0327, -63.0057, -48.2401, -58.2418, -39.6362], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1104, device='cuda:0', dtype=torch.float64)
tensor([-25.8189, -63.6154, -47.9101, -58.0663, -39.7936], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3190, device='cuda:0', dtype=torch.float64)
tensor([-25.7859, -63.6875, -48.1327, -58.3414, -39.8638], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2166, device='cuda:0', dtype=torch.float64)
tensor([-25.5901, -63.8034, -48.2830, -58.3087, -39.7743], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3435, device='cuda:0', dtype=torch.float64)
tensor([-25.4489, -64.3145, -48.4836, -58.3531, -39.7650], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3493, device='cuda:0', dtype=torch.float64)
tensor([-25.4646, -64.4568, -48.7383, -58.4373, -39.8614], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2492, device='cuda:0', dtype=torch.float64)
tensor([-25.3816, -64.6355, -48.9208, -58.3999, -40.2269], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1745, device='cuda:0', dtype=torch.float64)
tensor([-25.2202, -64.9108, -48.9750, -58.5084, -40.7070], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1249, device='cuda:0', dtype=torch.float64)
tensor([-25.1199, -65.1240, -49.1844, -58.8544, -41.1562], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4917, device='cuda:0', dtype=torch.float64)
tensor([-24.8526, -65.3835, -49.2805, -59.3350, -41.4843], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1618, device='cuda:0', dtype=torch.float64)
tensor([-24.3945, -65.9080, -48.8727, -59.5925, -42.1570], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4538, device='cuda:0', dtype=torch.float64)
tensor([-23.8929, -66.3264, -48.3757, -59.4436, -42.5267], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4398, device='cuda:0', dtype=torch.float64)
tensor([-23.6144, -66.6981, -47.9343, -59.4100, -42.7709], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3150, device='cuda:0', dtype=torch.float64)
tensor([-23.3841, -67.3778, -47.3886, -59.4776, -42.8824], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1309, device='cuda:0', dtype=torch.float64)
tensor([-23.3137, -68.4842, -46.9805, -59.8721, -43.1008], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2351, device='cuda:0', dtype=torch.float64)
tensor([-23.2988, -69.6441, -46.6597, -60.2855, -43.3836], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2223, device='cuda:0', dtype=torch.float64)
tensor([-23.4479, -70.8793, -46.6198, -60.8692, -43.7385], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5743, device='cuda:0', dtype=torch.float64)
tensor([-23.8050, -72.5721, -46.8320, -61.5597, -44.2766], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4394, device='cuda:0', dtype=torch.float64)
tensor([-24.0820, -73.9594, -47.0569, -62.0791, -44.6470], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2003, device='cuda:0', dtype=torch.float64)
tensor([-24.1117, -74.7301, -47.2482, -62.3440, -45.0055], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3144, device='cuda:0', dtype=torch.float64)
tensor([-24.1355, -75.6938, -47.4467, -62.6477, -45.3702], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1254, device='cuda:0', dtype=torch.float64)
tensor([-24.1511, -76.5118, -47.5391, -62.8078, -45.7574], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2637, device='cuda:0', dtype=torch.float64)
tensor([-24.1275, -77.0730, -47.7003, -62.8937, -46.0904], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0869, device='cuda:0', dtype=torch.float64)
tensor([-24.1525, -77.9137, -47.9583, -63.0619, -46.6619], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0403, device='cuda:0', dtype=torch.float64)
tensor([-24.1244, -78.4163, -48.0883, -63.2576, -47.1048], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2097, device='cuda:0', dtype=torch.float64)
tensor([-24.2147, -78.7641, -48.4570, -63.5508, -47.4769], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4791, device='cuda:0', dtype=torch.float64)
tensor([-24.3308, -78.7755, -48.6481, -64.0041, -47.7745], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2639, device='cuda:0', dtype=torch.float64)
tensor([-24.3835, -78.0607, -48.6655, -64.5842, -48.1092], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1543, device='cuda:0', dtype=torch.float64)
tensor([-24.3248, -76.7202, -48.6857, -64.9769, -48.2329], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0666, device='cuda:0', dtype=torch.float64)
tensor([-24.1775, -75.3881, -48.5173, -65.1360, -48.2338], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2835, device='cuda:0', dtype=torch.float64)
tensor([-24.1479, -74.2090, -48.5374, -65.5037, -48.2639], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2367, device='cuda:0', dtype=torch.float64)
tensor([-23.9687, -73.3716, -48.4492, -65.7362, -48.4278], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0164, device='cuda:0', dtype=torch.float64)
tensor([-23.8967, -72.4547, -48.1741, -66.1265, -48.6925], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4782, device='cuda:0', dtype=torch.float64)
tensor([-24.0185, -71.4208, -48.0717, -66.7359, -48.7954], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4095, device='cuda:0', dtype=torch.float64)
tensor([-24.3420, -69.9429, -47.7938, -67.4825, -48.7716], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1697, device='cuda:0', dtype=torch.float64)
tensor([-24.6082, -68.6853, -47.7745, -68.2576, -48.8248], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1002, device='cuda:0', dtype=torch.float64)
tensor([-24.9756, -67.5511, -47.7441, -69.3377, -48.8698], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3219, device='cuda:0', dtype=torch.float64)
tensor([-25.5185, -66.5406, -47.8135, -70.2705, -48.8573], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5451, device='cuda:0', dtype=torch.float64)
tensor([-26.1096, -65.7478, -47.7966, -71.2023, -48.8658], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2837, device='cuda:0', dtype=torch.float64)
tensor([-26.6680, -64.4440, -48.0466, -72.0003, -48.5614], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2246, device='cuda:0', dtype=torch.float64)
tensor([-27.1137, -62.8422, -48.2847, -72.6229, -47.9319], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0940, device='cuda:0', dtype=torch.float64)
tensor([-27.7274, -61.0199, -48.4914, -73.1819, -47.4705], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2601, device='cuda:0', dtype=torch.float64)
tensor([-28.5368, -59.7328, -48.6409, -73.9871, -47.1753], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0872, device='cuda:0', dtype=torch.float64)
tensor([-29.4345, -58.7492, -48.7974, -74.9858, -47.1406], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3996, device='cuda:0', dtype=torch.float64)
tensor([-30.7310, -58.1977, -48.6953, -75.8985, -47.2742], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2283, device='cuda:0', dtype=torch.float64)
tensor([-32.0349, -58.2237, -48.6131, -76.9184, -47.5517], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3552, device='cuda:0', dtype=torch.float64)
tensor([-33.4854, -58.9640, -48.8547, -78.0915, -48.0373], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4418, device='cuda:0', dtype=torch.float64)
tensor([-34.8163, -59.8583, -49.1101, -78.8771, -48.5368], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3792, device='cuda:0', dtype=torch.float64)
tensor([-35.6957, -60.6444, -49.3938, -79.6190, -48.9767], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0806, device='cuda:0', dtype=torch.float64)
tensor([-36.5057, -61.5116, -49.6097, -80.5379, -49.5193], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0114, device='cuda:0', dtype=torch.float64)
tensor([-37.0532, -62.7068, -49.8189, -81.3674, -50.2057], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1001, device='cuda:0', dtype=torch.float64)
tensor([-37.4922, -64.1771, -50.0115, -82.0935, -50.8260], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2511, device='cuda:0', dtype=torch.float64)
tensor([-37.8695, -65.4378, -50.2798, -82.6397, -51.3477], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2909, device='cuda:0', dtype=torch.float64)
tensor([-38.6406, -67.0142, -50.6580, -83.3405, -52.0735], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3289, device='cuda:0', dtype=torch.float64)
tensor([-39.5514, -68.7675, -51.1486, -84.5071, -52.9116], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5273, device='cuda:0', dtype=torch.float64)
tensor([-40.0668, -70.6757, -51.8463, -85.3691, -53.8852], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1321, device='cuda:0', dtype=torch.float64)
tensor([-40.5890, -72.4127, -52.6633, -86.0531, -54.5243], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1837, device='cuda:0', dtype=torch.float64)
tensor([-41.4335, -74.0717, -53.5182, -86.8849, -55.0664], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2339, device='cuda:0', dtype=torch.float64)
tensor([-42.2664, -75.0887, -53.9725, -87.6227, -55.4950], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6137, device='cuda:0', dtype=torch.float64)
tensor([-42.5916, -76.4295, -54.4121, -88.5073, -55.7063], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3711, device='cuda:0', dtype=torch.float64)
tensor([-43.2443, -77.7201, -54.7062, -89.8545, -55.8790], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3507, device='cuda:0', dtype=torch.float64)
tensor([-44.2997, -78.6416, -55.1788, -91.3207, -56.1284], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0906, device='cuda:0', dtype=torch.float64)
tensor([-45.1543, -79.4419, -55.5648, -92.3862, -56.4197], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1218, device='cuda:0', dtype=torch.float64)
tensor([-46.0846, -79.8854, -56.0895, -93.5037, -56.7131], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4249, device='cuda:0', dtype=torch.float64)
tensor([-47.2511, -80.3387, -56.7060, -94.8309, -57.1270], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1033, device='cuda:0', dtype=torch.float64)
tensor([-48.7848, -80.5189, -57.3886, -96.1867, -57.5050], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0468, device='cuda:0', dtype=torch.float64)
tensor([-50.1970, -80.3807, -57.7651, -97.3923, -57.5253], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2246, device='cuda:0', dtype=torch.float64)
tensor([-51.1752, -80.5030, -58.1986, -98.4528, -57.5300], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1788, device='cuda:0', dtype=torch.float64)
tensor([-52.3026, -81.1676, -58.6529, -99.6343, -57.7716], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2644, device='cuda:0', dtype=torch.float64)
tensor([ -53.4754,  -81.9089,  -59.0103, -100.7287,  -58.0924],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.4949, device='cuda:0', dtype=torch.float64)
tensor([ -54.7182,  -83.0404,  -59.4590, -101.7503,  -58.5081],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.2598, device='cuda:0', dtype=torch.float64)
tensor([ -55.4664,  -83.5563,  -59.7234, -102.3733,  -58.8770],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0969, device='cuda:0', dtype=torch.float64)
tensor([ -56.0092,  -84.0045,  -60.0229, -103.1239,  -59.1921],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.1917, device='cuda:0', dtype=torch.float64)
tensor([ -56.5603,  -84.7516,  -60.2366, -104.1202,  -59.5327],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.2791, device='cuda:0', dtype=torch.float64)
tensor([ -57.0571,  -85.0958,  -60.4530, -105.0408,  -59.5563],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0681, device='cuda:0', dtype=torch.float64)
tensor([ -57.3397,  -85.3928,  -60.6521, -105.6939,  -59.5412],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0559, device='cuda:0', dtype=torch.float64)
tensor([ -57.4069,  -85.9559,  -60.5855, -106.2416,  -59.4984],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0597, device='cuda:0', dtype=torch.float64)
tensor([ -57.5607,  -86.2875,  -60.5895, -106.7730,  -59.4185],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0836, device='cuda:0', dtype=torch.float64)
tensor([ -57.8749,  -86.6105,  -60.4802, -107.4106,  -59.2952],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.1821, device='cuda:0', dtype=torch.float64)
tensor([ -58.2116,  -87.3810,  -60.1632, -108.0834,  -59.2873],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.3691, device='cuda:0', dtype=torch.float64)
tensor([ -58.8135,  -88.0709,  -60.1018, -108.9932,  -59.4590],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.2564, device='cuda:0', dtype=torch.float64)
tensor([ -59.6854,  -88.7955,  -60.3441, -110.1522,  -59.8642],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.5314, device='cuda:0', dtype=torch.float64)
tensor([ -60.7850,  -89.2062,  -60.5790, -111.3008,  -60.2298],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.2801, device='cuda:0', dtype=torch.float64)
tensor([ -61.7038,  -89.3626,  -60.5968, -112.0781,  -60.3552],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0119, device='cuda:0', dtype=torch.float64)
tensor([ -62.6309,  -89.0722,  -60.7999, -112.6669,  -60.4238],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9947, device='cuda:0', dtype=torch.float64)
tensor([ -63.7675,  -88.7268,  -61.0190, -113.3013,  -60.4855],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.1154, device='cuda:0', dtype=torch.float64)
tensor([ -64.5301,  -88.3146,  -60.9470, -113.2604,  -60.5076],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.1863, device='cuda:0', dtype=torch.float64)
tensor([ -65.0723,  -87.7427,  -60.8356, -113.3687,  -60.4893],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.1840, device='cuda:0', dtype=torch.float64)
tensor([ -66.2479,  -87.4227,  -61.2386, -113.8496,  -60.5793],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.2110, device='cuda:0', dtype=torch.float64)
tensor([ -67.0146,  -86.9019,  -61.5297, -114.1081,  -60.5771],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.1380, device='cuda:0', dtype=torch.float64)
tensor([ -67.5929,  -86.4422,  -61.9212, -114.3010,  -60.4344],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.4262, device='cuda:0', dtype=torch.float64)
tensor([ -68.2442,  -85.7376,  -62.5444, -114.5423,  -59.9686],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9834, device='cuda:0', dtype=torch.float64)
tensor([ -68.6817,  -85.2575,  -63.1327, -114.6445,  -59.5747],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.1308, device='cuda:0', dtype=torch.float64)
tensor([ -69.1529,  -84.9379,  -63.6023, -114.6700,  -59.1291],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.2292, device='cuda:0', dtype=torch.float64)
tensor([ -69.4874,  -84.6778,  -64.0072, -114.7290,  -58.9368],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.2356, device='cuda:0', dtype=torch.float64)
tensor([ -69.2424,  -84.2721,  -64.2240, -114.5538,  -58.9193],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.1055, device='cuda:0', dtype=torch.float64)
tensor([ -68.7853,  -84.0531,  -64.2627, -114.2500,  -58.8700],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.1443, device='cuda:0', dtype=torch.float64)
tensor([ -68.5747,  -83.6772,  -64.2412, -113.8297,  -58.8801],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.2289, device='cuda:0', dtype=torch.float64)
tensor([ -68.7878,  -83.4963,  -64.2773, -113.5986,  -58.7560],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0024, device='cuda:0', dtype=torch.float64)
tensor([ -68.8144,  -83.2764,  -64.1227, -113.2590,  -58.5723],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0684, device='cuda:0', dtype=torch.float64)
tensor([ -69.0130,  -83.0497,  -63.6712, -112.7610,  -58.4061],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0934, device='cuda:0', dtype=torch.float64)
tensor([ -69.1911,  -82.8658,  -63.2624, -112.3326,  -58.1788],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0948, device='cuda:0', dtype=torch.float64)
tensor([ -69.4590,  -82.8224,  -63.2987, -112.1002,  -57.8995],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0107, device='cuda:0', dtype=torch.float64)
tensor([ -70.2405,  -82.8418,  -63.5793, -112.3591,  -57.7345],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9735, device='cuda:0', dtype=torch.float64)
tensor([ -71.2378,  -82.8398,  -63.8671, -112.8579,  -57.6378],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.2666, device='cuda:0', dtype=torch.float64)
tensor([ -72.1386,  -82.9957,  -64.0635, -113.3192,  -57.5374],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.1932, device='cuda:0', dtype=torch.float64)
tensor([ -72.8630,  -83.6740,  -64.7771, -114.1325,  -57.5105],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.1414, device='cuda:0', dtype=torch.float64)
tensor([ -73.1085,  -84.8549,  -65.3869, -114.6060,  -57.4310],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.1599, device='cuda:0', dtype=torch.float64)
tensor([ -73.1526,  -86.2134,  -65.9581, -115.1767,  -57.3547],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.2143, device='cuda:0', dtype=torch.float64)
tensor([ -73.2362,  -87.3879,  -66.1652, -115.5054,  -57.1879],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0106, device='cuda:0', dtype=torch.float64)
tensor([ -73.1613,  -87.8901,  -66.2514, -115.3916,  -56.7837],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.1003, device='cuda:0', dtype=torch.float64)
tensor([ -73.3822,  -88.7949,  -66.5419, -115.7091,  -56.4586],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.5274, device='cuda:0', dtype=torch.float64)
tensor([ -74.4190,  -89.8027,  -66.8877, -116.5829,  -56.4455],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.2215, device='cuda:0', dtype=torch.float64)
tensor([ -75.6778,  -90.7523,  -67.3060, -117.7342,  -56.8307],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.2499, device='cuda:0', dtype=torch.float64)
tensor([ -77.2835,  -91.2974,  -67.9601, -119.0278,  -57.2357],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.3323, device='cuda:0', dtype=torch.float64)
tensor([ -79.2200,  -91.8608,  -68.4522, -119.9558,  -57.6557],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.3486, device='cuda:0', dtype=torch.float64)
tensor([ -80.8725,  -91.8820,  -69.0875, -120.7128,  -58.0031],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9952, device='cuda:0', dtype=torch.float64)
tensor([ -82.2431,  -92.2718,  -69.8174, -121.4449,  -58.2788],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.6804, device='cuda:0', dtype=torch.float64)
tensor([ -82.9548,  -92.9045,  -70.0801, -121.6136,  -58.5833],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.2878, device='cuda:0', dtype=torch.float64)
tensor([ -83.4664,  -92.9746,  -70.4542, -121.6611,  -58.6885],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0121, device='cuda:0', dtype=torch.float64)
tensor([ -83.6376,  -92.6841,  -70.6044, -121.4330,  -58.4814],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.3021, device='cuda:0', dtype=torch.float64)
tensor([ -83.2735,  -93.0211,  -70.6581, -121.1957,  -58.4297],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.1128, device='cuda:0', dtype=torch.float64)
tensor([ -83.2328,  -93.2466,  -70.6542, -121.0056,  -58.4826],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.2552, device='cuda:0', dtype=torch.float64)
tensor([ -82.9555,  -93.9963,  -70.8683, -121.1913,  -58.5497],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.2423, device='cuda:0', dtype=torch.float64)
tensor([ -83.4617,  -94.7957,  -71.2128, -121.7412,  -58.7620],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.2584, device='cuda:0', dtype=torch.float64)
tensor([ -83.6179,  -95.8940,  -71.5223, -122.3105,  -58.9754],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.1032, device='cuda:0', dtype=torch.float64)
tensor([ -84.0258,  -97.0185,  -71.8215, -122.7525,  -59.1420],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.2035, device='cuda:0', dtype=torch.float64)
tensor([ -85.0462,  -98.0930,  -72.1326, -123.7201,  -59.4255],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0004, device='cuda:0', dtype=torch.float64)
tensor([ -85.4238,  -99.0367,  -72.6550, -124.3172,  -59.6680],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.2142, device='cuda:0', dtype=torch.float64)
tensor([ -86.1038, -100.2761,  -73.2790, -125.1258,  -60.1015],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.3792, device='cuda:0', dtype=torch.float64)
tensor([ -86.1656, -100.9070,  -73.4539, -125.3309,  -60.3158],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.2481, device='cuda:0', dtype=torch.float64)
tensor([ -86.5133, -101.0488,  -73.3544, -125.6182,  -60.6676],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0846, device='cuda:0', dtype=torch.float64)
tensor([ -86.3435, -100.9524,  -72.9677, -125.5606,  -60.6916],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0272, device='cuda:0', dtype=torch.float64)
tensor([ -86.3938, -100.6607,  -72.9396, -125.5013,  -60.6998],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.1726, device='cuda:0', dtype=torch.float64)
tensor([ -86.6656, -100.2943,  -73.1473, -125.5083,  -60.6876],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.1840, device='cuda:0', dtype=torch.float64)
tensor([ -86.6742,  -99.8268,  -72.9871, -124.7937,  -60.6089],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.1029, device='cuda:0', dtype=torch.float64)
tensor([ -86.6081,  -98.9876,  -72.8371, -123.8837,  -60.5060],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.2566, device='cuda:0', dtype=torch.float64)
tensor([ -86.9020,  -97.8206,  -72.2808, -123.2962,  -60.4814],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.2155, device='cuda:0', dtype=torch.float64)
tensor([ -87.2365,  -96.3744,  -71.7116, -122.5090,  -60.2961],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.1574, device='cuda:0', dtype=torch.float64)
tensor([ -87.7386,  -94.9620,  -71.3242, -121.8452,  -60.1655],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0878, device='cuda:0', dtype=torch.float64)
tensor([ -88.2321,  -93.9763,  -70.9998, -121.5038,  -60.1668],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.1294, device='cuda:0', dtype=torch.float64)
tensor([ -88.7693,  -93.1733,  -70.7648, -121.2955,  -60.3346],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.2534, device='cuda:0', dtype=torch.float64)
tensor([ -89.6148,  -92.7784,  -70.6796, -121.3920,  -60.5371],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.1944, device='cuda:0', dtype=torch.float64)
tensor([ -90.3036,  -92.7467,  -70.5584, -121.0588,  -60.6407],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.4548, device='cuda:0', dtype=torch.float64)
tensor([ -90.9668,  -92.4833,  -70.5541, -120.4657,  -60.6931],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.1420, device='cuda:0', dtype=torch.float64)
tensor([ -91.8021,  -92.3958,  -70.7525, -120.2262,  -60.7877],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.2784, device='cuda:0', dtype=torch.float64)
tensor([ -92.2064,  -92.7400,  -71.0812, -120.2496,  -60.9524],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9966, device='cuda:0', dtype=torch.float64)
tensor([ -92.6537,  -93.2706,  -71.3459, -120.5133,  -61.1075],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9875, device='cuda:0', dtype=torch.float64)
tensor([ -93.1108,  -93.7128,  -71.4183, -120.8408,  -61.2134],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.3123, device='cuda:0', dtype=torch.float64)
tensor([ -93.5105,  -94.4650,  -71.4885, -121.3766,  -61.4714],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.2714, device='cuda:0', dtype=torch.float64)
tensor([ -93.8492,  -95.0542,  -71.4330, -122.0425,  -61.8407],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.3503, device='cuda:0', dtype=torch.float64)
tensor([ -93.5060,  -95.2838,  -71.2148, -122.1987,  -62.1471],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.2217, device='cuda:0', dtype=torch.float64)
tensor([ -93.1157,  -95.3370,  -71.0403, -122.2408,  -62.2596],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.3641, device='cuda:0', dtype=torch.float64)
tensor([ -92.5577,  -95.0812,  -70.7219, -122.0106,  -62.2557],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9378, device='cuda:0', dtype=torch.float64)
tensor([ -91.7937,  -95.1315,  -70.3677, -121.7266,  -62.1644],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.1697, device='cuda:0', dtype=torch.float64)
tensor([ -91.0188,  -94.9211,  -69.9912, -121.0469,  -61.9407],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0305, device='cuda:0', dtype=torch.float64)
tensor([ -90.3291,  -94.4792,  -69.7713, -120.2686,  -61.6496],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.1013, device='cuda:0', dtype=torch.float64)
tensor([ -90.1716,  -94.3121,  -69.7110, -119.9678,  -61.4757],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.1915, device='cuda:0', dtype=torch.float64)
tensor([ -89.4237,  -93.7721,  -69.6862, -119.4636,  -61.1613],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.1033, device='cuda:0', dtype=torch.float64)
tensor([ -88.6931,  -93.3971,  -69.6450, -118.9851,  -60.9064],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9380, device='cuda:0', dtype=torch.float64)
tensor([ -87.9148,  -92.7663,  -69.7150, -118.5092,  -60.6581],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8407, device='cuda:0', dtype=torch.float64)
tensor([ -87.5567,  -92.1601,  -69.7395, -118.4947,  -60.5868],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9443, device='cuda:0', dtype=torch.float64)
tensor([ -87.4363,  -91.6017,  -69.8226, -118.6428,  -60.6036],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.1722, device='cuda:0', dtype=torch.float64)
tensor([ -86.9835,  -90.9837,  -69.8603, -118.5291,  -60.6406],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.3285, device='cuda:0', dtype=torch.float64)
tensor([ -86.5752,  -90.4026,  -69.9665, -118.3494,  -60.5092],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.1458, device='cuda:0', dtype=torch.float64)
tensor([ -85.6400,  -90.2059,  -69.8991, -118.0099,  -60.4748],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0410, device='cuda:0', dtype=torch.float64)
tensor([ -84.9074,  -90.2386,  -69.9048, -117.8884,  -60.3894],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0455, device='cuda:0', dtype=torch.float64)
tensor([ -84.2293,  -90.2811,  -69.7558, -117.7426,  -60.3906],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0600, device='cuda:0', dtype=torch.float64)
tensor([ -83.9639,  -90.8017,  -69.8732, -118.0104,  -60.5890],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0092, device='cuda:0', dtype=torch.float64)
tensor([ -83.7351,  -91.5812,  -69.9928, -118.5625,  -60.8289],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.2085, device='cuda:0', dtype=torch.float64)
tensor([ -83.2811,  -92.4584,  -69.9297, -119.1268,  -61.2443],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.1959, device='cuda:0', dtype=torch.float64)
tensor([ -82.9292,  -92.9224,  -69.7319, -119.2430,  -61.5323],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.1384, device='cuda:0', dtype=torch.float64)
tensor([ -82.5545,  -93.6139,  -69.9063, -119.1220,  -61.7932],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0833, device='cuda:0', dtype=torch.float64)
tensor([ -82.0194,  -94.5233,  -70.1384, -118.9363,  -62.0779],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0288, device='cuda:0', dtype=torch.float64)
tensor([ -81.5914,  -95.3004,  -70.1970, -118.7037,  -62.2568],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.1394, device='cuda:0', dtype=torch.float64)
tensor([ -81.7341,  -95.9619,  -70.4114, -118.5902,  -62.3291],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.1461, device='cuda:0', dtype=torch.float64)
tensor([ -82.1050,  -96.9569,  -70.7083, -118.6670,  -62.5520],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.2601, device='cuda:0', dtype=torch.float64)
tensor([ -82.2272,  -97.8699,  -70.9574, -118.5551,  -62.6905],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0963, device='cuda:0', dtype=torch.float64)
tensor([ -82.7125,  -98.5454,  -71.3625, -118.7010,  -62.8578],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.1566, device='cuda:0', dtype=torch.float64)
tensor([ -83.1863,  -99.2553,  -71.8376, -118.9603,  -63.0853],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0786, device='cuda:0', dtype=torch.float64)
tensor([ -83.6075,  -99.5217,  -72.2235, -119.1334,  -63.1935],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0630, device='cuda:0', dtype=torch.float64)
tensor([ -83.8731, -100.2499,  -72.6794, -119.4107,  -63.4581],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.1081, device='cuda:0', dtype=torch.float64)
tensor([ -83.9899, -100.3242,  -73.0374, -119.3250,  -63.5779],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.2994, device='cuda:0', dtype=torch.float64)
tensor([ -84.2485, -100.8330,  -73.2396, -119.4593,  -63.9143],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9589, device='cuda:0', dtype=torch.float64)
tensor([ -84.5303, -101.4023,  -73.5126, -119.5427,  -64.2596],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.1350, device='cuda:0', dtype=torch.float64)
tensor([ -84.4616, -101.8068,  -73.5604, -119.3071,  -64.4755],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.2397, device='cuda:0', dtype=torch.float64)
tensor([ -84.5280, -101.9698,  -73.3241, -119.1802,  -64.6452],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9948, device='cuda:0', dtype=torch.float64)
tensor([ -84.8995, -102.2763,  -73.1932, -119.4263,  -64.7193],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0735, device='cuda:0', dtype=torch.float64)
tensor([ -85.2660, -102.4697,  -73.2051, -119.7918,  -64.6606],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.1948, device='cuda:0', dtype=torch.float64)
tensor([ -85.3558, -102.6470,  -72.8031, -119.9645,  -64.5925],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.1302, device='cuda:0', dtype=torch.float64)
tensor([ -85.7415, -102.9669,  -72.6614, -120.3679,  -64.4841],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9968, device='cuda:0', dtype=torch.float64)
tensor([ -86.0355, -103.2135,  -72.7122, -120.6818,  -64.3207],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9517, device='cuda:0', dtype=torch.float64)
tensor([ -86.4408, -103.8004,  -72.8608, -121.1768,  -64.1436],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.2465, device='cuda:0', dtype=torch.float64)
tensor([ -87.0726, -104.4187,  -72.9152, -121.6901,  -63.7727],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.2500, device='cuda:0', dtype=torch.float64)
tensor([ -88.2491, -105.5975,  -73.3523, -122.6123,  -63.7720],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8964, device='cuda:0', dtype=torch.float64)
tensor([ -89.1604, -106.7779,  -73.4546, -123.3766,  -63.9015],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0763, device='cuda:0', dtype=torch.float64)
tensor([ -89.8698, -108.0221,  -73.5262, -124.0356,  -64.1540],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9242, device='cuda:0', dtype=torch.float64)
tensor([ -90.7073, -109.1170,  -73.5982, -124.7253,  -64.3743],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.1543, device='cuda:0', dtype=torch.float64)
tensor([ -91.8479, -110.1638,  -73.8975, -125.6600,  -64.7135],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0797, device='cuda:0', dtype=torch.float64)
tensor([ -92.8601, -111.0139,  -74.0687, -126.5133,  -65.1541],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.2118, device='cuda:0', dtype=torch.float64)
tensor([ -93.8791, -111.6245,  -74.1045, -127.3455,  -65.6765],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9027, device='cuda:0', dtype=torch.float64)
tensor([ -94.8077, -111.9287,  -73.8720, -128.0401,  -66.1754],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9789, device='cuda:0', dtype=torch.float64)
tensor([ -95.3391, -111.9769,  -73.3459, -128.4675,  -66.5837],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.5094, device='cuda:0', dtype=torch.float64)
tensor([ -95.7687, -112.1833,  -72.9376, -128.6402,  -66.9193],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.1442, device='cuda:0', dtype=torch.float64)
tensor([ -95.9846, -111.7532,  -72.4901, -128.6877,  -66.9961],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0253, device='cuda:0', dtype=torch.float64)
tensor([ -96.5714, -111.3989,  -71.9932, -129.1369,  -67.0280],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.1091, device='cuda:0', dtype=torch.float64)
tensor([ -97.0229, -110.9432,  -71.4217, -129.3450,  -67.0570],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8782, device='cuda:0', dtype=torch.float64)
tensor([ -97.3665, -110.4346,  -70.8824, -129.4938,  -67.0749],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.2191, device='cuda:0', dtype=torch.float64)
tensor([ -97.6738, -109.8829,  -70.2455, -129.6765,  -67.1711],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.1943, device='cuda:0', dtype=torch.float64)
tensor([ -98.1824, -109.4213,  -69.7912, -130.1015,  -67.2872],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0076, device='cuda:0', dtype=torch.float64)
tensor([ -98.5081, -109.3158,  -69.2756, -130.5158,  -67.5576],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9587, device='cuda:0', dtype=torch.float64)
tensor([ -98.7150, -109.1436,  -68.7930, -130.9527,  -67.9064],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.3823, device='cuda:0', dtype=torch.float64)
tensor([ -99.2230, -108.8781,  -68.6375, -131.7510,  -68.2991],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8388, device='cuda:0', dtype=torch.float64)
tensor([ -99.5918, -108.8769,  -68.4045, -132.6341,  -68.8210],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.1439, device='cuda:0', dtype=torch.float64)
tensor([ -99.6164, -108.6127,  -68.0166, -133.2012,  -69.3355],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.1867, device='cuda:0', dtype=torch.float64)
tensor([ -99.5617, -108.6226,  -67.5469, -133.4871,  -69.9798],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0181, device='cuda:0', dtype=torch.float64)
tensor([ -99.8334, -108.6327,  -67.2169, -133.9102,  -70.6617],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0201, device='cuda:0', dtype=torch.float64)
tensor([-100.0345, -108.7321,  -66.8862, -134.2808,  -71.2625],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0628, device='cuda:0', dtype=torch.float64)
tensor([-100.0800, -108.7600,  -66.6193, -134.7490,  -71.8527],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9752, device='cuda:0', dtype=torch.float64)
tensor([ -99.6211, -108.6753,  -66.3043, -135.0235,  -72.4302],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0548, device='cuda:0', dtype=torch.float64)
tensor([ -99.4032, -108.7333,  -66.2198, -135.1043,  -72.9414],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.1306, device='cuda:0', dtype=torch.float64)
tensor([ -99.4912, -108.5844,  -66.3048, -135.1327,  -73.4248],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.4279, device='cuda:0', dtype=torch.float64)
tensor([ -99.3272, -108.0942,  -66.6175, -135.1049,  -73.8966],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9648, device='cuda:0', dtype=torch.float64)
tensor([ -99.1078, -107.8257,  -66.8368, -135.1303,  -74.6565],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9748, device='cuda:0', dtype=torch.float64)
tensor([ -98.7699, -107.7795,  -66.8773, -135.0853,  -75.5238],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.1576, device='cuda:0', dtype=torch.float64)
tensor([ -98.2267, -107.5318,  -67.1643, -134.9297,  -76.2226],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9437, device='cuda:0', dtype=torch.float64)
tensor([ -97.6083, -106.9560,  -67.1902, -134.6172,  -76.8385],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0662, device='cuda:0', dtype=torch.float64)
tensor([ -96.6633, -106.5983,  -67.1940, -134.1825,  -77.5663],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8522, device='cuda:0', dtype=torch.float64)
tensor([ -95.7219, -106.3304,  -67.3077, -133.9516,  -78.2101],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0658, device='cuda:0', dtype=torch.float64)
tensor([ -94.8615, -106.1963,  -67.4342, -133.7728,  -78.9869],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0281, device='cuda:0', dtype=torch.float64)
tensor([ -94.2590, -106.6061,  -67.7254, -133.7527,  -79.7740],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.1188, device='cuda:0', dtype=torch.float64)
tensor([ -93.4848, -106.7976,  -68.1937, -133.6883,  -80.4748],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0171, device='cuda:0', dtype=torch.float64)
tensor([ -92.8002, -107.2443,  -68.7631, -133.6206,  -81.1676],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.3106, device='cuda:0', dtype=torch.float64)
tensor([ -92.2784, -107.6316,  -69.3771, -133.4875,  -81.9254],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9582, device='cuda:0', dtype=torch.float64)
tensor([ -91.6506, -107.7244,  -69.8552, -133.0871,  -82.6387],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9915, device='cuda:0', dtype=torch.float64)
tensor([ -91.4117, -107.8978,  -70.4153, -133.1462,  -83.3656],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.1121, device='cuda:0', dtype=torch.float64)
tensor([ -91.2266, -108.1046,  -70.8575, -133.2239,  -83.9513],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0810, device='cuda:0', dtype=torch.float64)
tensor([ -91.1609, -108.3340,  -71.5690, -133.5116,  -84.3671],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9834, device='cuda:0', dtype=torch.float64)
tensor([ -91.2767, -108.2595,  -72.2625, -133.9814,  -84.5919],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0527, device='cuda:0', dtype=torch.float64)
tensor([ -91.7831, -108.2393,  -72.9943, -134.6197,  -84.6929],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9721, device='cuda:0', dtype=torch.float64)
tensor([ -92.1300, -107.9139,  -73.5605, -134.8543,  -84.5534],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9610, device='cuda:0', dtype=torch.float64)
tensor([ -92.4181, -107.6524,  -74.2417, -135.0401,  -84.2973],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9230, device='cuda:0', dtype=torch.float64)
tensor([ -92.5931, -107.4676,  -75.0318, -135.3747,  -84.1403],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8265, device='cuda:0', dtype=torch.float64)
tensor([ -92.6696, -107.1478,  -75.7485, -135.7017,  -83.8210],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0480, device='cuda:0', dtype=torch.float64)
tensor([ -92.9366, -106.7267,  -76.4137, -135.9475,  -83.5308],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0191, device='cuda:0', dtype=torch.float64)
tensor([ -93.2226, -106.5996,  -76.8787, -136.3620,  -83.5029],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0660, device='cuda:0', dtype=torch.float64)
tensor([ -93.5136, -106.8587,  -77.3914, -137.0089,  -83.8290],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8670, device='cuda:0', dtype=torch.float64)
tensor([ -93.3820, -106.9491,  -77.6756, -137.4428,  -83.9835],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7954, device='cuda:0', dtype=torch.float64)
tensor([ -93.1397, -107.0002,  -77.8108, -137.8566,  -84.0160],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0541, device='cuda:0', dtype=torch.float64)
tensor([ -92.8151, -106.9733,  -77.9829, -138.2852,  -83.8980],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9496, device='cuda:0', dtype=torch.float64)
tensor([ -92.4700, -106.8584,  -78.0452, -138.4660,  -83.7062],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0359, device='cuda:0', dtype=torch.float64)
tensor([ -92.1788, -106.6383,  -78.1252, -138.4767,  -83.6097],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0023, device='cuda:0', dtype=torch.float64)
tensor([ -91.8061, -106.5427,  -78.1771, -138.6436,  -83.4601],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.1139, device='cuda:0', dtype=torch.float64)
tensor([ -91.1190, -106.1512,  -78.1313, -138.4000,  -83.1105],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8899, device='cuda:0', dtype=torch.float64)
tensor([ -90.6655, -105.6433,  -78.0536, -138.1323,  -82.5614],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.1072, device='cuda:0', dtype=torch.float64)
tensor([ -90.4206, -105.3693,  -77.7892, -138.0152,  -82.0770],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0113, device='cuda:0', dtype=torch.float64)
tensor([ -90.1974, -105.0118,  -77.4010, -137.9772,  -81.5181],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9964, device='cuda:0', dtype=torch.float64)
tensor([ -90.1029, -104.4695,  -77.0325, -137.8164,  -80.8297],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0029, device='cuda:0', dtype=torch.float64)
tensor([ -90.2276, -103.9513,  -76.9454, -137.9862,  -80.1582],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0607, device='cuda:0', dtype=torch.float64)
tensor([ -90.5590, -103.4958,  -76.6876, -138.2495,  -79.6856],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9897, device='cuda:0', dtype=torch.float64)
tensor([ -90.9438, -102.9380,  -76.3433, -138.5717,  -79.1377],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0519, device='cuda:0', dtype=torch.float64)
tensor([ -91.2209, -102.3711,  -76.1510, -138.8714,  -78.6758],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.1062, device='cuda:0', dtype=torch.float64)
tensor([ -91.3482, -101.4192,  -76.0512, -139.0140,  -78.1097],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8379, device='cuda:0', dtype=torch.float64)
tensor([ -91.6265, -100.5732,  -76.0781, -139.0930,  -77.4623],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9663, device='cuda:0', dtype=torch.float64)
tensor([ -91.5129,  -99.9004,  -76.1747, -139.1782,  -76.9255],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0882, device='cuda:0', dtype=torch.float64)
tensor([ -91.4513,  -99.3658,  -76.5260, -139.1610,  -76.3582],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0137, device='cuda:0', dtype=torch.float64)
tensor([ -91.3533,  -98.5239,  -76.6794, -139.0719,  -75.4720],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7912, device='cuda:0', dtype=torch.float64)
tensor([ -91.3051,  -97.7157,  -76.9105, -139.0631,  -74.5767],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0738, device='cuda:0', dtype=torch.float64)
tensor([ -91.4451,  -97.0540,  -77.1593, -139.1931,  -73.8261],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0577, device='cuda:0', dtype=torch.float64)
tensor([ -91.8160,  -96.6082,  -77.2902, -139.4671,  -73.1566],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0362, device='cuda:0', dtype=torch.float64)
tensor([ -92.2013,  -96.3431,  -77.4181, -139.9365,  -72.6483],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9984, device='cuda:0', dtype=torch.float64)
tensor([ -92.5864,  -96.1778,  -77.2763, -140.3749,  -72.3006],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.2065, device='cuda:0', dtype=torch.float64)
tensor([ -92.7396,  -95.7512,  -77.1286, -140.3594,  -71.9642],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8733, device='cuda:0', dtype=torch.float64)
tensor([ -92.8638,  -95.0760,  -77.0689, -140.1606,  -71.3933],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9838, device='cuda:0', dtype=torch.float64)
tensor([ -92.8782,  -94.0801,  -76.9275, -139.5764,  -70.6638],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9846, device='cuda:0', dtype=torch.float64)
tensor([ -92.9258,  -93.1078,  -76.9088, -139.0467,  -70.1915],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0702, device='cuda:0', dtype=torch.float64)
tensor([ -93.2294,  -92.4830,  -77.1615, -138.9285,  -69.7471],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9453, device='cuda:0', dtype=torch.float64)
tensor([ -93.5995,  -92.3361,  -77.6627, -139.0268,  -69.4684],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9484, device='cuda:0', dtype=torch.float64)
tensor([ -93.9316,  -92.5520,  -78.4986, -139.4102,  -69.3448],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0725, device='cuda:0', dtype=torch.float64)
tensor([ -93.9330,  -93.1203,  -79.3912, -139.9984,  -69.3929],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0240, device='cuda:0', dtype=torch.float64)
tensor([ -93.9141,  -93.4521,  -79.9985, -140.5167,  -69.4458],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0901, device='cuda:0', dtype=torch.float64)
tensor([ -93.6216,  -93.8141,  -80.5450, -141.0926,  -69.7259],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0238, device='cuda:0', dtype=torch.float64)
tensor([ -93.3139,  -94.2523,  -80.8354, -141.5107,  -70.0295],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9990, device='cuda:0', dtype=torch.float64)
tensor([ -93.2887,  -94.7762,  -81.0682, -142.1740,  -70.4558],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9455, device='cuda:0', dtype=torch.float64)
tensor([ -93.2163,  -95.6595,  -81.1436, -142.7819,  -71.1711],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9002, device='cuda:0', dtype=torch.float64)
tensor([ -93.1647,  -96.5721,  -81.2165, -143.1437,  -72.0448],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0798, device='cuda:0', dtype=torch.float64)
tensor([ -93.0226,  -97.3269,  -81.2348, -143.2306,  -72.6891],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.3390, device='cuda:0', dtype=torch.float64)
tensor([ -93.0319,  -98.3089,  -81.3318, -143.3135,  -73.3538],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0358, device='cuda:0', dtype=torch.float64)
tensor([ -93.7066,  -99.3236,  -81.6597, -143.6440,  -73.8846],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9582, device='cuda:0', dtype=torch.float64)
tensor([ -94.2264, -100.4467,  -81.9127, -143.8826,  -74.3996],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.1486, device='cuda:0', dtype=torch.float64)
tensor([ -94.5299, -101.3445,  -82.0872, -143.8378,  -74.8019],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.1187, device='cuda:0', dtype=torch.float64)
tensor([ -94.9849, -102.2685,  -82.6854, -143.8296,  -75.0119],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8982, device='cuda:0', dtype=torch.float64)
tensor([ -95.1566, -102.8453,  -82.8824, -143.6116,  -75.0944],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9952, device='cuda:0', dtype=torch.float64)
tensor([ -95.3023, -103.4216,  -82.8321, -143.3178,  -75.0848],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0523, device='cuda:0', dtype=torch.float64)
tensor([ -95.4938, -104.0349,  -82.8906, -142.9953,  -75.1740],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0320, device='cuda:0', dtype=torch.float64)
tensor([ -95.9346, -104.4764,  -82.8369, -143.0303,  -75.2639],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0191, device='cuda:0', dtype=torch.float64)
tensor([ -96.3263, -104.7011,  -82.7912, -143.1139,  -75.4383],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9430, device='cuda:0', dtype=torch.float64)
tensor([ -96.7895, -105.0078,  -82.6985, -143.2366,  -75.5559],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9558, device='cuda:0', dtype=torch.float64)
tensor([ -97.2856, -105.3271,  -82.6044, -143.0859,  -75.5306],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9831, device='cuda:0', dtype=torch.float64)
tensor([ -97.6830, -105.3346,  -82.5295, -143.1438,  -75.4947],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8959, device='cuda:0', dtype=torch.float64)
tensor([ -97.9251, -105.1703,  -82.2197, -143.3296,  -75.5624],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8961, device='cuda:0', dtype=torch.float64)
tensor([ -97.9992, -105.0835,  -81.6853, -143.4658,  -75.6653],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.1474, device='cuda:0', dtype=torch.float64)
tensor([ -97.8623, -105.0830,  -81.4260, -143.2823,  -75.7283],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.1479, device='cuda:0', dtype=torch.float64)
tensor([ -97.2743, -105.0617,  -81.1039, -143.0380,  -75.9160],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0587, device='cuda:0', dtype=torch.float64)
tensor([ -96.8085, -105.0675,  -81.0228, -143.0109,  -76.0719],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9877, device='cuda:0', dtype=torch.float64)
tensor([ -96.4852, -105.2048,  -81.0835, -143.2204,  -76.3683],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9164, device='cuda:0', dtype=torch.float64)
tensor([ -96.5151, -105.3286,  -81.0135, -143.6611,  -76.5461],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.1346, device='cuda:0', dtype=torch.float64)
tensor([ -96.6030, -105.4997,  -81.1808, -144.3344,  -76.8315],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8417, device='cuda:0', dtype=torch.float64)
tensor([ -96.7293, -105.6722,  -81.2294, -145.1258,  -77.1642],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9162, device='cuda:0', dtype=torch.float64)
tensor([ -96.9194, -105.8916,  -81.3840, -145.9231,  -77.5910],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.1110, device='cuda:0', dtype=torch.float64)
tensor([ -97.1568, -106.4309,  -81.5258, -146.6624,  -78.3538],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9833, device='cuda:0', dtype=torch.float64)
tensor([ -97.2812, -106.8198,  -81.6907, -147.1798,  -78.8527],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0820, device='cuda:0', dtype=torch.float64)
tensor([ -97.3748, -106.7926,  -81.8077, -147.5643,  -79.0293],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0391, device='cuda:0', dtype=torch.float64)
tensor([ -97.4414, -106.8207,  -81.6201, -147.9444,  -79.2622],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.2858, device='cuda:0', dtype=torch.float64)
tensor([ -97.4906, -106.8541,  -81.5068, -148.1056,  -79.5398],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0321, device='cuda:0', dtype=torch.float64)
tensor([ -97.2947, -106.7490,  -81.2169, -147.9730,  -79.7112],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9779, device='cuda:0', dtype=torch.float64)
tensor([ -96.9020, -106.3112,  -80.5933, -147.8807,  -79.8514],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0843, device='cuda:0', dtype=torch.float64)
tensor([ -96.7904, -105.6608,  -79.9206, -147.7758,  -79.8356],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9935, device='cuda:0', dtype=torch.float64)
tensor([ -96.7833, -105.0062,  -79.4604, -147.5776,  -79.8554],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9465, device='cuda:0', dtype=torch.float64)
tensor([ -96.9460, -104.2366,  -79.1224, -147.5360,  -79.7389],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9915, device='cuda:0', dtype=torch.float64)
tensor([ -97.1028, -103.3028,  -78.7744, -147.3196,  -79.6642],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9501, device='cuda:0', dtype=torch.float64)
tensor([ -97.2968, -102.3687,  -78.2575, -147.1290,  -79.5567],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8825, device='cuda:0', dtype=torch.float64)
tensor([ -97.3560, -101.5180,  -77.7292, -146.6452,  -79.4002],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8944, device='cuda:0', dtype=torch.float64)
tensor([ -97.4730, -100.8689,  -77.2210, -146.0851,  -79.1501],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9461, device='cuda:0', dtype=torch.float64)
tensor([ -97.5973, -100.4988,  -76.7851, -145.6483,  -79.1073],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9307, device='cuda:0', dtype=torch.float64)
tensor([ -97.7543, -100.1423,  -76.4314, -145.3439,  -79.0605],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9574, device='cuda:0', dtype=torch.float64)
tensor([ -97.8193,  -99.5956,  -76.0231, -145.0465,  -79.1548],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9076, device='cuda:0', dtype=torch.float64)
tensor([ -97.7844,  -99.1141,  -75.8127, -144.8922,  -79.1357],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0226, device='cuda:0', dtype=torch.float64)
tensor([ -97.6504,  -98.5278,  -75.5255, -144.6113,  -78.9288],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9878, device='cuda:0', dtype=torch.float64)
tensor([ -97.6555,  -97.9249,  -75.1434, -144.4631,  -78.7546],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0445, device='cuda:0', dtype=torch.float64)
tensor([ -97.4711,  -97.5857,  -74.7508, -144.2051,  -78.7581],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9692, device='cuda:0', dtype=torch.float64)
tensor([ -97.5604,  -97.4134,  -74.2450, -144.1344,  -78.8902],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7849, device='cuda:0', dtype=torch.float64)
tensor([ -97.4422,  -97.6578,  -73.8282, -144.4503,  -79.2760],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8648, device='cuda:0', dtype=torch.float64)
tensor([ -97.4037,  -97.9173,  -73.6148, -144.7187,  -79.6455],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9860, device='cuda:0', dtype=torch.float64)
tensor([ -97.7063,  -98.4492,  -73.4908, -145.2356,  -80.2316],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9131, device='cuda:0', dtype=torch.float64)
tensor([ -97.9668,  -98.9401,  -73.6225, -145.6970,  -80.8281],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0232, device='cuda:0', dtype=torch.float64)
tensor([ -98.3536,  -99.0209,  -73.8807, -145.9282,  -81.0854],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8894, device='cuda:0', dtype=torch.float64)
tensor([ -98.9995,  -99.0358,  -74.2029, -146.3717,  -81.4156],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9730, device='cuda:0', dtype=torch.float64)
tensor([ -99.6186,  -98.9983,  -74.6459, -146.7052,  -81.5146],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9229, device='cuda:0', dtype=torch.float64)
tensor([-100.2957,  -98.9423,  -75.2973, -147.1519,  -81.8155],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8246, device='cuda:0', dtype=torch.float64)
tensor([-100.7956,  -99.0129,  -75.8102, -147.3997,  -81.9926],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8848, device='cuda:0', dtype=torch.float64)
tensor([-101.0068,  -99.0672,  -76.4584, -147.4403,  -82.1424],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8980, device='cuda:0', dtype=torch.float64)
tensor([-101.1463,  -99.0467,  -77.1623, -147.3392,  -82.1639],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9097, device='cuda:0', dtype=torch.float64)
tensor([-101.3882,  -98.9323,  -77.8486, -147.2576,  -82.2117],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9273, device='cuda:0', dtype=torch.float64)
tensor([-101.7227,  -99.0216,  -78.5008, -147.3550,  -82.3454],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0073, device='cuda:0', dtype=torch.float64)
tensor([-102.3600,  -98.4146,  -78.8913, -147.3041,  -81.9916],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8982, device='cuda:0', dtype=torch.float64)
tensor([-103.0974,  -98.0917,  -79.2182, -147.3457,  -81.6082],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0449, device='cuda:0', dtype=torch.float64)
tensor([-103.6568,  -97.6865,  -79.4342, -147.4622,  -81.3223],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9106, device='cuda:0', dtype=torch.float64)
tensor([-104.4097,  -97.4980,  -79.7842, -147.8945,  -81.2835],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0214, device='cuda:0', dtype=torch.float64)
tensor([-105.1246,  -97.2565,  -80.0672, -148.1001,  -81.2361],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8601, device='cuda:0', dtype=torch.float64)
tensor([-106.1441,  -96.9810,  -80.6253, -148.5775,  -81.2697],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.1498, device='cuda:0', dtype=torch.float64)
tensor([-107.2043,  -96.9795,  -81.4649, -149.6237,  -81.4751],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0698, device='cuda:0', dtype=torch.float64)
tensor([-108.1928,  -97.0672,  -82.0009, -150.6858,  -81.9184],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9463, device='cuda:0', dtype=torch.float64)
tensor([-108.8895,  -96.9844,  -82.2287, -151.4282,  -81.9996],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0210, device='cuda:0', dtype=torch.float64)
tensor([-109.6555,  -97.5371,  -82.8973, -152.4561,  -82.3363],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9850, device='cuda:0', dtype=torch.float64)
tensor([-110.3132,  -98.1019,  -83.5894, -153.1147,  -82.6358],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8546, device='cuda:0', dtype=torch.float64)
tensor([-110.8685,  -98.5813,  -84.3016, -153.6477,  -82.9368],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8762, device='cuda:0', dtype=torch.float64)
tensor([-111.4936,  -98.8081,  -85.0005, -154.1158,  -83.2046],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8891, device='cuda:0', dtype=torch.float64)
tensor([-112.0967,  -99.0317,  -85.6938, -154.3422,  -83.3667],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.2008, device='cuda:0', dtype=torch.float64)
tensor([-112.5230,  -99.4171,  -86.3840, -154.1093,  -83.5145],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0258, device='cuda:0', dtype=torch.float64)
tensor([-112.5653, -100.2803,  -86.8265, -153.5594,  -83.7259],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9579, device='cuda:0', dtype=torch.float64)
tensor([-112.5253, -100.8366,  -86.9927, -152.9256,  -83.8396],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8670, device='cuda:0', dtype=torch.float64)
tensor([-112.6152, -101.4031,  -87.2870, -152.3382,  -83.9069],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8335, device='cuda:0', dtype=torch.float64)
tensor([-112.6035, -101.7511,  -87.5070, -151.5962,  -83.9030],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7763, device='cuda:0', dtype=torch.float64)
tensor([-112.3661, -102.4684,  -87.6813, -150.8428,  -83.9986],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8503, device='cuda:0', dtype=torch.float64)
tensor([-112.4311, -103.2938,  -87.8355, -150.5003,  -84.1070],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9282, device='cuda:0', dtype=torch.float64)
tensor([-112.6086, -104.1659,  -87.8505, -150.4602,  -84.6378],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9126, device='cuda:0', dtype=torch.float64)
tensor([-112.5323, -105.1218,  -87.9017, -150.2811,  -85.4040],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8811, device='cuda:0', dtype=torch.float64)
tensor([-112.6345, -106.0422,  -87.9970, -150.1335,  -86.1916],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9401, device='cuda:0', dtype=torch.float64)
tensor([-112.6663, -106.9217,  -87.9546, -149.9960,  -86.9806],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8809, device='cuda:0', dtype=torch.float64)
tensor([-112.7394, -107.4612,  -87.8856, -149.8950,  -87.6785],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8361, device='cuda:0', dtype=torch.float64)
tensor([-112.5979, -107.9540,  -87.8791, -149.4490,  -88.3328],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8304, device='cuda:0', dtype=torch.float64)
tensor([-112.4051, -108.1480,  -87.8490, -149.1117,  -88.8634],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9790, device='cuda:0', dtype=torch.float64)
tensor([-112.2782, -108.2465,  -87.9222, -148.7823,  -89.3269],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9620, device='cuda:0', dtype=torch.float64)
tensor([-112.3254, -108.2740,  -88.0561, -148.7678,  -89.6561],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8155, device='cuda:0', dtype=torch.float64)
tensor([-112.3173, -108.0668,  -88.1102, -148.6693,  -89.8022],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9283, device='cuda:0', dtype=torch.float64)
tensor([-112.3815, -107.8979,  -87.9200, -148.7107,  -90.0246],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8853, device='cuda:0', dtype=torch.float64)
tensor([-112.1488, -107.9682,  -87.7836, -148.7677,  -90.5041],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7944, device='cuda:0', dtype=torch.float64)
tensor([-111.8565, -107.9797,  -87.5879, -148.8625,  -90.8448],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9368, device='cuda:0', dtype=torch.float64)
tensor([-111.5268, -107.9825,  -87.1247, -148.9926,  -91.1465],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9220, device='cuda:0', dtype=torch.float64)
tensor([-110.9497, -107.7131,  -86.2125, -148.8021,  -91.2909],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7490, device='cuda:0', dtype=torch.float64)
tensor([-110.7280, -107.7876,  -85.4385, -148.8383,  -91.5171],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0122, device='cuda:0', dtype=torch.float64)
tensor([-110.2225, -107.6035,  -84.9873, -148.4318,  -91.5660],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8438, device='cuda:0', dtype=torch.float64)
tensor([-109.9571, -107.6958,  -84.7659, -148.3164,  -91.7289],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7983, device='cuda:0', dtype=torch.float64)
tensor([-109.5564, -107.8202,  -84.4980, -148.2348,  -91.9894],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7642, device='cuda:0', dtype=torch.float64)
tensor([-109.2321, -107.9928,  -84.3164, -148.1678,  -92.3437],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0143, device='cuda:0', dtype=torch.float64)
tensor([-109.0168, -108.1656,  -84.3659, -148.4382,  -92.6433],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9905, device='cuda:0', dtype=torch.float64)
tensor([-108.7084, -108.6042,  -84.3830, -148.6790,  -93.1828],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9346, device='cuda:0', dtype=torch.float64)
tensor([-108.4070, -109.1688,  -84.4677, -149.0348,  -93.8857],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8963, device='cuda:0', dtype=torch.float64)
tensor([-108.3240, -109.7681,  -84.7951, -149.6861,  -94.6915],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7545, device='cuda:0', dtype=torch.float64)
tensor([-108.2092, -110.3623,  -85.2178, -150.0451,  -95.4865],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9327, device='cuda:0', dtype=torch.float64)
tensor([-108.0319, -110.7403,  -85.8565, -150.1956,  -96.1111],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9610, device='cuda:0', dtype=torch.float64)
tensor([-107.7130, -111.2230,  -86.4255, -150.3728,  -96.7544],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9929, device='cuda:0', dtype=torch.float64)
tensor([-107.5812, -111.2740,  -86.4876, -150.4746,  -96.9790],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8162, device='cuda:0', dtype=torch.float64)
tensor([-107.3944, -111.3309,  -86.7047, -150.4810,  -97.1423],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9451, device='cuda:0', dtype=torch.float64)
tensor([-107.2717, -111.2863,  -86.9638, -150.4148,  -97.0572],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0349, device='cuda:0', dtype=torch.float64)
tensor([-107.2803, -111.4230,  -87.0020, -150.2186,  -96.8956],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9571, device='cuda:0', dtype=torch.float64)
tensor([-107.2767, -111.8016,  -87.2053, -150.1104,  -96.8618],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9078, device='cuda:0', dtype=torch.float64)
tensor([-107.4371, -112.3343,  -87.1982, -150.1812,  -97.0706],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8983, device='cuda:0', dtype=torch.float64)
tensor([-107.5867, -112.5569,  -86.8187, -150.4526,  -97.2328],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8383, device='cuda:0', dtype=torch.float64)
tensor([-107.4981, -112.9754,  -86.6027, -150.8007,  -97.7693],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9050, device='cuda:0', dtype=torch.float64)
tensor([-107.4069, -113.3757,  -86.3778, -151.1953,  -98.3045],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0798, device='cuda:0', dtype=torch.float64)
tensor([-107.2127, -113.6023,  -86.1035, -151.3027,  -98.6648],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8852, device='cuda:0', dtype=torch.float64)
tensor([-107.3908, -113.8629,  -85.7456, -151.4492,  -98.8251],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8406, device='cuda:0', dtype=torch.float64)
tensor([-107.5211, -114.3176,  -85.3280, -151.4518,  -99.2031],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9816, device='cuda:0', dtype=torch.float64)
tensor([-107.7517, -115.3074,  -85.2419, -151.8093, -100.0359],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9911, device='cuda:0', dtype=torch.float64)
tensor([-108.1238, -116.2432,  -85.1332, -152.1960, -100.7387],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8892, device='cuda:0', dtype=torch.float64)
tensor([-108.4197, -117.1951,  -85.2626, -152.7342, -101.5509],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7664, device='cuda:0', dtype=torch.float64)
tensor([-108.5840, -118.0005,  -85.4616, -153.1944, -102.0923],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8460, device='cuda:0', dtype=torch.float64)
tensor([-108.6698, -118.7698,  -85.7964, -153.6751, -102.6090],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7773, device='cuda:0', dtype=torch.float64)
tensor([-108.7336, -119.5530,  -86.2307, -154.0725, -103.0728],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8886, device='cuda:0', dtype=torch.float64)
tensor([-108.6988, -120.1228,  -86.5097, -154.2960, -103.4544],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9347, device='cuda:0', dtype=torch.float64)
tensor([-108.5155, -120.5005,  -86.8789, -154.4742, -103.6199],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8038, device='cuda:0', dtype=torch.float64)
tensor([-108.3290, -120.8104,  -87.6036, -154.5348, -103.5803],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9076, device='cuda:0', dtype=torch.float64)
tensor([-108.3392, -121.1253,  -88.3392, -154.6963, -103.4178],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7453, device='cuda:0', dtype=torch.float64)
tensor([-108.4136, -121.2704,  -89.0706, -154.9771, -103.1446],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8247, device='cuda:0', dtype=torch.float64)
tensor([-108.3556, -121.3184,  -89.8423, -154.9754, -102.7209],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8793, device='cuda:0', dtype=torch.float64)
tensor([-108.1916, -121.6956,  -90.7583, -155.0886, -102.3005],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0189, device='cuda:0', dtype=torch.float64)
tensor([-107.7445, -122.1355,  -91.5255, -154.9565, -102.1461],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8658, device='cuda:0', dtype=torch.float64)
tensor([-107.2737, -122.1736,  -92.0209, -154.6380, -101.8531],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0650, device='cuda:0', dtype=torch.float64)
tensor([-106.8649, -122.2203,  -92.3746, -154.3694, -101.5114],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8739, device='cuda:0', dtype=torch.float64)
tensor([-106.6624, -121.9754,  -92.7925, -154.1825, -101.1794],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8969, device='cuda:0', dtype=torch.float64)
tensor([-106.3071, -121.4222,  -92.9328, -153.7448, -100.8053],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8592, device='cuda:0', dtype=torch.float64)
tensor([-105.9745, -120.7647,  -93.0161, -153.2664, -100.2240],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8830, device='cuda:0', dtype=torch.float64)
tensor([-105.6510, -120.2093,  -93.3946, -152.8499,  -99.6688],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8017, device='cuda:0', dtype=torch.float64)
tensor([-105.1876, -119.5458,  -93.5400, -152.4552,  -99.0719],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7881, device='cuda:0', dtype=torch.float64)
tensor([-104.7728, -118.8311,  -93.4475, -152.1342,  -98.4828],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8109, device='cuda:0', dtype=torch.float64)
tensor([-104.4098, -118.1155,  -93.2811, -151.7716,  -97.9363],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7594, device='cuda:0', dtype=torch.float64)
tensor([-104.1033, -117.3293,  -93.0389, -151.3519,  -97.3719],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9234, device='cuda:0', dtype=torch.float64)
tensor([-103.5315, -116.9244,  -92.8477, -150.8169,  -96.8841],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8704, device='cuda:0', dtype=torch.float64)
tensor([-103.1462, -116.4263,  -92.7317, -150.4416,  -96.3911],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9594, device='cuda:0', dtype=torch.float64)
tensor([-102.7592, -115.8442,  -92.5571, -150.1047,  -95.8092],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8336, device='cuda:0', dtype=torch.float64)
tensor([-102.3057, -115.2767,  -92.3826, -149.7583,  -95.3254],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8695, device='cuda:0', dtype=torch.float64)
tensor([-101.7025, -114.9981,  -92.4409, -149.4957,  -95.0199],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8216, device='cuda:0', dtype=torch.float64)
tensor([-100.9333, -114.9100,  -92.7081, -149.3170,  -94.8248],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8616, device='cuda:0', dtype=torch.float64)
tensor([-100.3434, -114.7743,  -93.1065, -149.1928,  -94.6249],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9691, device='cuda:0', dtype=torch.float64)
tensor([ -99.5633, -114.1027,  -93.6367, -148.7575,  -93.9368],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8901, device='cuda:0', dtype=torch.float64)
tensor([ -98.8459, -113.5582,  -94.3095, -148.3539,  -93.2585],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6839, device='cuda:0', dtype=torch.float64)
tensor([ -98.1541, -113.1945,  -94.9429, -148.0856,  -92.7994],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7602, device='cuda:0', dtype=torch.float64)
tensor([ -97.4201, -113.2246,  -95.6473, -147.9226,  -92.4903],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8772, device='cuda:0', dtype=torch.float64)
tensor([ -96.5559, -112.8853,  -96.2578, -147.4196,  -92.0198],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7528, device='cuda:0', dtype=torch.float64)
tensor([ -95.6452, -112.8875,  -96.6024, -146.8401,  -91.9207],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8741, device='cuda:0', dtype=torch.float64)
tensor([ -95.0954, -112.8534,  -96.9563, -146.5460,  -91.9414],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9053, device='cuda:0', dtype=torch.float64)
tensor([ -94.4127, -112.6714,  -97.3562, -145.9489,  -91.7684],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7663, device='cuda:0', dtype=torch.float64)
tensor([ -93.6954, -112.3038,  -97.6230, -145.2334,  -91.5587],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8554, device='cuda:0', dtype=torch.float64)
tensor([ -93.4375, -112.3090,  -97.9146, -144.9316,  -91.3918],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6456, device='cuda:0', dtype=torch.float64)
tensor([ -93.2129, -112.3728,  -98.2845, -144.5603,  -91.1233],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7727, device='cuda:0', dtype=torch.float64)
tensor([ -93.0076, -112.7193,  -98.6476, -144.1945,  -91.1762],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8890, device='cuda:0', dtype=torch.float64)
tensor([ -92.8210, -113.2349,  -98.7980, -143.6582,  -91.2737],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8454, device='cuda:0', dtype=torch.float64)
tensor([ -92.7174, -113.9719,  -98.8494, -143.3263,  -91.4213],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8878, device='cuda:0', dtype=torch.float64)
tensor([ -92.6098, -114.7785,  -99.0214, -142.9755,  -91.7140],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8133, device='cuda:0', dtype=torch.float64)
tensor([ -92.6193, -115.4103,  -99.0821, -142.9015,  -91.9789],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8269, device='cuda:0', dtype=torch.float64)
tensor([ -92.7210, -115.5880,  -98.9417, -142.7846,  -91.9812],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8511, device='cuda:0', dtype=torch.float64)
tensor([ -92.8302, -115.8223,  -98.8763, -142.8088,  -92.1543],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7582, device='cuda:0', dtype=torch.float64)
tensor([ -92.7523, -115.7383,  -98.8571, -142.4549,  -92.0739],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8791, device='cuda:0', dtype=torch.float64)
tensor([ -92.6608, -115.6127,  -98.7314, -142.0473,  -92.1068],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8996, device='cuda:0', dtype=torch.float64)
tensor([ -92.9507, -115.4378,  -98.4093, -142.0307,  -92.1067],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8028, device='cuda:0', dtype=torch.float64)
tensor([ -93.0637, -115.1233,  -98.2149, -141.9029,  -92.0108],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7357, device='cuda:0', dtype=torch.float64)
tensor([ -93.1232, -114.6906,  -98.1273, -141.6926,  -91.7452],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7893, device='cuda:0', dtype=torch.float64)
tensor([ -93.0455, -114.1677,  -98.2478, -141.4040,  -91.3264],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6805, device='cuda:0', dtype=torch.float64)
tensor([ -92.9175, -113.6243,  -98.3517, -141.1465,  -90.9109],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7219, device='cuda:0', dtype=torch.float64)
tensor([ -92.8435, -113.1361,  -98.7814, -141.0216,  -90.5587],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7961, device='cuda:0', dtype=torch.float64)
tensor([ -92.8505, -112.9769,  -99.3303, -141.0479,  -90.3499],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8644, device='cuda:0', dtype=torch.float64)
tensor([ -92.8745, -112.7514,  -99.8304, -141.1152,  -90.1713],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7115, device='cuda:0', dtype=torch.float64)
tensor([ -92.7997, -112.5131, -100.2146, -141.1662,  -90.0260],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7055, device='cuda:0', dtype=torch.float64)
tensor([ -92.8030, -112.0867, -100.4000, -141.1579,  -89.7570],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7197, device='cuda:0', dtype=torch.float64)
tensor([ -92.9006, -111.9614, -100.6814, -141.2506,  -89.6492],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8588, device='cuda:0', dtype=torch.float64)
tensor([ -92.9961, -112.0291, -101.0087, -141.6004,  -89.7314],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8298, device='cuda:0', dtype=torch.float64)
tensor([ -92.9452, -112.0250, -101.2538, -141.8826,  -89.8421],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6959, device='cuda:0', dtype=torch.float64)
tensor([ -92.9478, -111.9696, -101.4616, -142.0545,  -89.9708],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8295, device='cuda:0', dtype=torch.float64)
tensor([ -92.8530, -111.8834, -101.7869, -142.1082,  -90.0970],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7857, device='cuda:0', dtype=torch.float64)
tensor([ -92.8185, -111.5960, -102.0972, -142.3241,  -90.2036],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7615, device='cuda:0', dtype=torch.float64)
tensor([ -92.8047, -111.3678, -102.3109, -142.5137,  -90.3445],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7332, device='cuda:0', dtype=torch.float64)
tensor([ -92.7783, -110.9379, -102.2640, -142.5692,  -90.3274],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8543, device='cuda:0', dtype=torch.float64)
tensor([ -92.7611, -110.5455, -101.9365, -142.6852,  -90.2651],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8192, device='cuda:0', dtype=torch.float64)
tensor([ -92.7245, -110.1778, -101.6416, -142.6519,  -90.1320],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7154, device='cuda:0', dtype=torch.float64)
tensor([ -92.8454, -109.7998, -101.5355, -142.7752,  -90.1244],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7712, device='cuda:0', dtype=torch.float64)
tensor([ -93.0362, -109.5069, -101.7996, -142.9185,  -90.0033],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7503, device='cuda:0', dtype=torch.float64)
tensor([ -93.0904, -109.2954, -101.9005, -142.7892,  -89.8440],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7498, device='cuda:0', dtype=torch.float64)
tensor([ -93.1559, -109.3923, -101.8619, -142.5465,  -90.0470],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7974, device='cuda:0', dtype=torch.float64)
tensor([ -93.0372, -109.5623, -101.6736, -142.3102,  -90.2435],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7212, device='cuda:0', dtype=torch.float64)
tensor([ -92.8970, -109.6550, -101.6048, -141.9075,  -90.2475],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7044, device='cuda:0', dtype=torch.float64)
tensor([ -92.8363, -109.7243, -101.5688, -141.5276,  -90.1937],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7794, device='cuda:0', dtype=torch.float64)
tensor([ -92.9798, -109.9928, -101.5804, -141.3360,  -90.1190],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7195, device='cuda:0', dtype=torch.float64)
tensor([ -93.1669, -110.2710, -101.5435, -141.2248,  -90.2042],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7757, device='cuda:0', dtype=torch.float64)
tensor([ -93.3214, -110.5183, -101.4890, -140.9641,  -90.1383],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8856, device='cuda:0', dtype=torch.float64)
tensor([ -93.5608, -110.8537, -101.3485, -141.0865,  -90.1914],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7100, device='cuda:0', dtype=torch.float64)
tensor([ -94.0133, -111.3178, -101.4855, -141.3456,  -90.3759],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7338, device='cuda:0', dtype=torch.float64)
tensor([ -94.3831, -111.5668, -101.6754, -141.5830,  -90.5439],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7721, device='cuda:0', dtype=torch.float64)
tensor([ -94.9135, -111.6121, -102.1288, -141.8420,  -90.5019],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7512, device='cuda:0', dtype=torch.float64)
tensor([ -95.5855, -111.5407, -102.6462, -142.3046,  -90.4405],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7813, device='cuda:0', dtype=torch.float64)
tensor([ -96.2628, -111.5775, -103.2789, -142.9701,  -90.5677],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8538, device='cuda:0', dtype=torch.float64)
tensor([ -96.9934, -111.7017, -103.6009, -143.5761,  -90.9644],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8631, device='cuda:0', dtype=torch.float64)
tensor([ -97.5957, -111.7671, -103.9796, -144.0791,  -91.2982],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7636, device='cuda:0', dtype=torch.float64)
tensor([ -98.1443, -111.7529, -104.2947, -144.5669,  -91.4791],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9326, device='cuda:0', dtype=torch.float64)
tensor([ -98.6763, -111.7489, -104.8597, -144.9836,  -91.6769],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7943, device='cuda:0', dtype=torch.float64)
tensor([ -99.0854, -112.1813, -105.3359, -145.3291,  -92.0654],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7968, device='cuda:0', dtype=torch.float64)
tensor([ -99.3336, -112.9008, -105.6300, -145.5567,  -92.4382],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6856, device='cuda:0', dtype=torch.float64)
tensor([ -99.7831, -113.4446, -105.9892, -145.8993,  -92.9055],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8128, device='cuda:0', dtype=torch.float64)
tensor([-100.2981, -113.8319, -106.4256, -146.2640,  -93.2973],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5838, device='cuda:0', dtype=torch.float64)
tensor([-100.7741, -114.1719, -106.9249, -146.5873,  -93.6780],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7094, device='cuda:0', dtype=torch.float64)
tensor([-101.2408, -114.6590, -107.3738, -146.8730,  -94.1082],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8246, device='cuda:0', dtype=torch.float64)
tensor([-101.8957, -114.7728, -107.8012, -147.1571,  -94.3404],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8243, device='cuda:0', dtype=torch.float64)
tensor([-102.6505, -114.7369, -108.3813, -147.6503,  -94.4724],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7904, device='cuda:0', dtype=torch.float64)
tensor([-103.3968, -114.7731, -108.8248, -147.9687,  -94.5369],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6724, device='cuda:0', dtype=torch.float64)
tensor([-104.1149, -115.2296, -109.2651, -148.3047,  -94.8745],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7676, device='cuda:0', dtype=torch.float64)
tensor([-104.7578, -115.6340, -109.6609, -148.7467,  -95.1934],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7126, device='cuda:0', dtype=torch.float64)
tensor([-105.2751, -116.1730, -109.7950, -149.0607,  -95.6066],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6833, device='cuda:0', dtype=torch.float64)
tensor([-105.7247, -116.6929, -109.8632, -149.3173,  -95.9111],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6974, device='cuda:0', dtype=torch.float64)
tensor([-106.0770, -117.0721, -109.8869, -149.2867,  -96.1941],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7659, device='cuda:0', dtype=torch.float64)
tensor([-106.3096, -117.0835, -109.7937, -149.1182,  -96.3644],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8139, device='cuda:0', dtype=torch.float64)
tensor([-106.6640, -117.0103, -109.4731, -148.7860,  -96.2884],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6613, device='cuda:0', dtype=torch.float64)
tensor([-107.1946, -116.9575, -109.3564, -148.6652,  -96.1854],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7175, device='cuda:0', dtype=torch.float64)
tensor([-107.6720, -116.8261, -109.3138, -148.5853,  -95.9715],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6455, device='cuda:0', dtype=torch.float64)
tensor([-107.9664, -116.6454, -109.1329, -148.3758,  -95.7268],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7362, device='cuda:0', dtype=torch.float64)
tensor([-108.4435, -116.5609, -108.9237, -148.1165,  -95.5177],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8822, device='cuda:0', dtype=torch.float64)
tensor([-108.8099, -116.2920, -108.8371, -147.8956,  -95.0657],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6101, device='cuda:0', dtype=torch.float64)
tensor([-109.0631, -116.0689, -108.7538, -147.6311,  -94.5771],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8239, device='cuda:0', dtype=torch.float64)
tensor([-108.9826, -115.9090, -108.5401, -147.2502,  -94.2080],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8160, device='cuda:0', dtype=torch.float64)
tensor([-108.7487, -115.7550, -108.4692, -146.7754,  -93.8435],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7879, device='cuda:0', dtype=torch.float64)
tensor([-108.6617, -115.7376, -108.7225, -146.4588,  -93.6934],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8814, device='cuda:0', dtype=torch.float64)
tensor([-108.6789, -115.5099, -109.2979, -146.2008,  -93.4057],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6834, device='cuda:0', dtype=torch.float64)
tensor([-108.7585, -115.0027, -109.9372, -145.8518,  -93.0387],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6960, device='cuda:0', dtype=torch.float64)
tensor([-108.7825, -114.6256, -110.5310, -145.5210,  -92.7236],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6252, device='cuda:0', dtype=torch.float64)
tensor([-108.7805, -114.5455, -111.1117, -145.3131,  -92.4786],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7585, device='cuda:0', dtype=torch.float64)
tensor([-108.8722, -114.6313, -111.7868, -145.1961,  -92.2807],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7632, device='cuda:0', dtype=torch.float64)
tensor([-108.8453, -114.6407, -112.5663, -145.0197,  -92.0757],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6700, device='cuda:0', dtype=torch.float64)
tensor([-108.8585, -114.6159, -113.2940, -144.6910,  -91.8304],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6745, device='cuda:0', dtype=torch.float64)
tensor([-108.9876, -114.6257, -113.9150, -144.3673,  -91.5953],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7333, device='cuda:0', dtype=torch.float64)
tensor([-109.2719, -114.5655, -114.4874, -144.0295,  -91.3217],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6895, device='cuda:0', dtype=torch.float64)
tensor([-109.4475, -114.2854, -115.0308, -143.5817,  -90.9816],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6602, device='cuda:0', dtype=torch.float64)
tensor([-109.6727, -114.1070, -115.4260, -143.0014,  -90.7126],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7756, device='cuda:0', dtype=torch.float64)
tensor([-110.2368, -114.0306, -116.0821, -142.6253,  -90.4450],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7816, device='cuda:0', dtype=torch.float64)
tensor([-110.9114, -113.6741, -116.7349, -142.3149,  -90.0575],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7194, device='cuda:0', dtype=torch.float64)
tensor([-111.3569, -113.2099, -117.1681, -141.7703,  -89.6161],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7138, device='cuda:0', dtype=torch.float64)
tensor([-111.6371, -112.7613, -117.3335, -141.0147,  -89.1282],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6209, device='cuda:0', dtype=torch.float64)
tensor([-111.9442, -112.4377, -117.4251, -140.3735,  -88.8165],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7444, device='cuda:0', dtype=torch.float64)
tensor([-112.2262, -112.3656, -117.3218, -139.7143,  -88.5761],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6765, device='cuda:0', dtype=torch.float64)
tensor([-112.3908, -112.3529, -117.1541, -139.1758,  -88.3507],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6777, device='cuda:0', dtype=torch.float64)
tensor([-112.7015, -112.3022, -117.1571, -138.8102,  -88.2808],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6252, device='cuda:0', dtype=torch.float64)
tensor([-113.0449, -112.1196, -117.0711, -138.4237,  -88.2248],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6754, device='cuda:0', dtype=torch.float64)
tensor([-113.4673, -111.8801, -116.9594, -138.0500,  -88.0491],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5954, device='cuda:0', dtype=torch.float64)
tensor([-113.9499, -111.5797, -116.8194, -137.6811,  -87.8521],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8321, device='cuda:0', dtype=torch.float64)
tensor([-114.5967, -111.1185, -116.7543, -137.3268,  -87.5771],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6663, device='cuda:0', dtype=torch.float64)
tensor([-115.2635, -110.7752, -116.8628, -137.0068,  -87.4099],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6607, device='cuda:0', dtype=torch.float64)
tensor([-115.8629, -110.5084, -116.9078, -136.6492,  -87.3096],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5773, device='cuda:0', dtype=torch.float64)
tensor([-116.5671, -110.2851, -116.9512, -136.3369,  -87.3422],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7211, device='cuda:0', dtype=torch.float64)
tensor([-116.9392, -110.0398, -116.8011, -135.8979,  -87.4038],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6297, device='cuda:0', dtype=torch.float64)
tensor([-117.4023, -109.9718, -116.6472, -135.6287,  -87.6107],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6900, device='cuda:0', dtype=torch.float64)
tensor([-117.6888, -109.8363, -116.5819, -135.3135,  -87.8570],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6689, device='cuda:0', dtype=torch.float64)
tensor([-117.8004, -109.6555, -116.3847, -135.0030,  -88.0571],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6200, device='cuda:0', dtype=torch.float64)
tensor([-117.8061, -109.5396, -116.2401, -134.7184,  -88.3034],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6589, device='cuda:0', dtype=torch.float64)
tensor([-117.7152, -109.3691, -115.8161, -134.2425,  -88.4334],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5940, device='cuda:0', dtype=torch.float64)
tensor([-117.6286, -109.4910, -115.3068, -133.8586,  -88.7593],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6448, device='cuda:0', dtype=torch.float64)
tensor([-117.7920, -109.5415, -115.0081, -133.5158,  -89.0646],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7988, device='cuda:0', dtype=torch.float64)
tensor([-118.0356, -109.4011, -114.8589, -133.2686,  -89.2859],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6932, device='cuda:0', dtype=torch.float64)
tensor([-118.1153, -109.1588, -114.8631, -132.9484,  -89.4163],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6001, device='cuda:0', dtype=torch.float64)
tensor([-118.0894, -109.2521, -114.9277, -132.6596,  -89.6999],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6426, device='cuda:0', dtype=torch.float64)
tensor([-118.0572, -109.3554, -114.7618, -132.5403,  -89.9932],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7661, device='cuda:0', dtype=torch.float64)
tensor([-118.0265, -109.4001, -114.2885, -132.3500,  -90.1530],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7277, device='cuda:0', dtype=torch.float64)
tensor([-117.6776, -109.7295, -113.6711, -131.9639,  -90.4665],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6558, device='cuda:0', dtype=torch.float64)
tensor([-117.2923, -110.1386, -113.2640, -131.5304,  -90.7492],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7070, device='cuda:0', dtype=torch.float64)
tensor([-117.0303, -110.4660, -112.9114, -131.2031,  -91.0925],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6335, device='cuda:0', dtype=torch.float64)
tensor([-116.8496, -110.5905, -112.7214, -130.9250,  -91.4306],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6762, device='cuda:0', dtype=torch.float64)
tensor([-116.7427, -110.6650, -112.7653, -130.8377,  -91.7830],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7364, device='cuda:0', dtype=torch.float64)
tensor([-116.6830, -110.6425, -112.8710, -130.7297,  -91.9429],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7590, device='cuda:0', dtype=torch.float64)
tensor([-116.3472, -110.7131, -112.8758, -130.5189,  -92.1874],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6397, device='cuda:0', dtype=torch.float64)
tensor([-116.3205, -110.8818, -113.0603, -130.4907,  -92.4451],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6940, device='cuda:0', dtype=torch.float64)
tensor([-116.3091, -111.0815, -113.2895, -130.5217,  -92.5755],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7336, device='cuda:0', dtype=torch.float64)
tensor([-116.5261, -111.6040, -113.7177, -130.7242,  -92.7639],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7346, device='cuda:0', dtype=torch.float64)
tensor([-116.6835, -111.9552, -113.9946, -130.9165,  -92.7666],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6276, device='cuda:0', dtype=torch.float64)
tensor([-116.9251, -112.3005, -114.3055, -131.0769,  -92.7529],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6720, device='cuda:0', dtype=torch.float64)
tensor([-117.2081, -112.5307, -114.5686, -131.1908,  -92.6585],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7442, device='cuda:0', dtype=torch.float64)
tensor([-117.4348, -112.6817, -115.0823, -131.2316,  -92.4575],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6853, device='cuda:0', dtype=torch.float64)
tensor([-117.7397, -112.7469, -115.6987, -131.4807,  -92.2021],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6163, device='cuda:0', dtype=torch.float64)
tensor([-118.0612, -112.5347, -116.2986, -131.6342,  -91.8261],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7325, device='cuda:0', dtype=torch.float64)
tensor([-118.2810, -112.3332, -116.8867, -131.7410,  -91.6485],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7327, device='cuda:0', dtype=torch.float64)
tensor([-118.6796, -112.2231, -117.3450, -131.8758,  -91.4741],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6910, device='cuda:0', dtype=torch.float64)
tensor([-119.1729, -112.3328, -117.8480, -132.1028,  -91.5157],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6338, device='cuda:0', dtype=torch.float64)
tensor([-119.7807, -112.4818, -118.4911, -132.3467,  -91.5251],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6705, device='cuda:0', dtype=torch.float64)
tensor([-120.4252, -112.6178, -119.0561, -132.5254,  -91.5023],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7018, device='cuda:0', dtype=torch.float64)
tensor([-121.2710, -112.9041, -119.8531, -132.8869,  -91.5691],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7696, device='cuda:0', dtype=torch.float64)
tensor([-122.1621, -112.9989, -120.6486, -133.3011,  -91.5881],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5596, device='cuda:0', dtype=torch.float64)
tensor([-123.0879, -113.0648, -121.3973, -133.7131,  -91.5402],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6028, device='cuda:0', dtype=torch.float64)
tensor([-124.0343, -113.2992, -122.1927, -134.0678,  -91.5272],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7235, device='cuda:0', dtype=torch.float64)
tensor([-125.0721, -113.5484, -122.8241, -134.4764,  -91.4865],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6648, device='cuda:0', dtype=torch.float64)
tensor([-125.9922, -113.8621, -123.3485, -134.9108,  -91.5604],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5940, device='cuda:0', dtype=torch.float64)
tensor([-126.6000, -114.0918, -123.6912, -135.1316,  -91.6921],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6270, device='cuda:0', dtype=torch.float64)
tensor([-127.1061, -114.6344, -124.0043, -135.1971,  -91.9674],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6977, device='cuda:0', dtype=torch.float64)
tensor([-127.5472, -115.1202, -124.3811, -135.2439,  -92.1587],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6775, device='cuda:0', dtype=torch.float64)
tensor([-127.5679, -115.5382, -124.3732, -134.9784,  -92.2758],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6438, device='cuda:0', dtype=torch.float64)
tensor([-127.6994, -115.7894, -124.4750, -134.7566,  -92.3392],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7180, device='cuda:0', dtype=torch.float64)
tensor([-127.6718, -115.9356, -124.6158, -134.4593,  -92.4649],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6390, device='cuda:0', dtype=torch.float64)
tensor([-127.7292, -116.0492, -124.6312, -134.2063,  -92.5450],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7172, device='cuda:0', dtype=torch.float64)
tensor([-128.1261, -116.3731, -124.9074, -134.4269,  -92.7507],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6103, device='cuda:0', dtype=torch.float64)
tensor([-128.5055, -116.4453, -125.2623, -134.5688,  -92.9471],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5970, device='cuda:0', dtype=torch.float64)
tensor([-129.1590, -116.3262, -125.6908, -134.8814,  -93.1277],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6495, device='cuda:0', dtype=torch.float64)
tensor([-129.9481, -116.5162, -126.1497, -135.1496,  -93.4335],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6036, device='cuda:0', dtype=torch.float64)
tensor([-130.6764, -116.6696, -126.7509, -135.4320,  -93.8189],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7163, device='cuda:0', dtype=torch.float64)
tensor([-131.3930, -116.9188, -127.2681, -135.7435,  -94.1341],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6215, device='cuda:0', dtype=torch.float64)
tensor([-132.1319, -116.9666, -127.5145, -135.9584,  -94.4364],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6362, device='cuda:0', dtype=torch.float64)
tensor([-132.8149, -117.0920, -127.8095, -136.2067,  -94.7218],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7398, device='cuda:0', dtype=torch.float64)
tensor([-133.4922, -117.0393, -128.1810, -136.4033,  -94.9714],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7685, device='cuda:0', dtype=torch.float64)
tensor([-134.4233, -117.2022, -128.5820, -136.8296,  -95.1559],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6571, device='cuda:0', dtype=torch.float64)
tensor([-135.1968, -117.5091, -128.8989, -137.0902,  -95.4322],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6127, device='cuda:0', dtype=torch.float64)
tensor([-135.7784, -117.9136, -129.3280, -137.0878,  -95.7189],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7194, device='cuda:0', dtype=torch.float64)
tensor([-136.3431, -118.1910, -129.7019, -136.9070,  -95.9976],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6284, device='cuda:0', dtype=torch.float64)
tensor([-136.6272, -118.3820, -130.0358, -136.5775,  -96.0713],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5846, device='cuda:0', dtype=torch.float64)
tensor([-136.9116, -118.1578, -130.3198, -136.2997,  -96.0552],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6931, device='cuda:0', dtype=torch.float64)
tensor([-137.1248, -117.9512, -130.4620, -136.0871,  -96.0338],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5622, device='cuda:0', dtype=torch.float64)
tensor([-137.3149, -117.9315, -130.6269, -135.6701,  -95.9967],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6296, device='cuda:0', dtype=torch.float64)
tensor([-137.2731, -117.7100, -130.7650, -135.1775,  -95.8650],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6228, device='cuda:0', dtype=torch.float64)
tensor([-137.1128, -117.4912, -130.8393, -134.6893,  -95.6949],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5327, device='cuda:0', dtype=torch.float64)
tensor([-137.1112, -117.3400, -130.8463, -134.1839,  -95.5603],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6109, device='cuda:0', dtype=torch.float64)
tensor([-137.1336, -117.1439, -130.8112, -133.8092,  -95.4648],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6181, device='cuda:0', dtype=torch.float64)
tensor([-137.1438, -116.8468, -130.7446, -133.4284,  -95.4198],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6635, device='cuda:0', dtype=torch.float64)
tensor([-136.9917, -116.1704, -130.5243, -132.8816,  -95.1815],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6153, device='cuda:0', dtype=torch.float64)
tensor([-136.9592, -115.3907, -130.5668, -132.3713,  -94.7881],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4947, device='cuda:0', dtype=torch.float64)
tensor([-136.7709, -114.6465, -130.5019, -131.8269,  -94.3518],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7025, device='cuda:0', dtype=torch.float64)
tensor([-136.3689, -114.2923, -130.1748, -131.1278,  -94.0739],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5461, device='cuda:0', dtype=torch.float64)
tensor([-135.9272, -113.8508, -129.7693, -130.3983,  -93.8144],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6564, device='cuda:0', dtype=torch.float64)
tensor([-135.4934, -113.3923, -129.4840, -129.7767,  -93.6133],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5770, device='cuda:0', dtype=torch.float64)
tensor([-135.2405, -113.1240, -129.4756, -129.2504,  -93.4847],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6143, device='cuda:0', dtype=torch.float64)
tensor([-135.1782, -112.8642, -129.3423, -128.8898,  -93.4487],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6064, device='cuda:0', dtype=torch.float64)
tensor([-135.2365, -112.8523, -129.1835, -128.5986,  -93.4413],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6528, device='cuda:0', dtype=torch.float64)
tensor([-135.4971, -112.9240, -129.1243, -128.5635,  -93.5101],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5975, device='cuda:0', dtype=torch.float64)
tensor([-135.6863, -112.9471, -129.3424, -128.6439,  -93.5653],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5769, device='cuda:0', dtype=torch.float64)
tensor([-135.6498, -113.0968, -129.5634, -128.6025,  -93.7345],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6557, device='cuda:0', dtype=torch.float64)
tensor([-135.6392, -113.3164, -129.9717, -128.5410,  -93.9817],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6199, device='cuda:0', dtype=torch.float64)
tensor([-135.7142, -113.6005, -130.2925, -128.5848,  -94.2551],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5304, device='cuda:0', dtype=torch.float64)
tensor([-135.7488, -113.9948, -130.6192, -128.6419,  -94.5055],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5560, device='cuda:0', dtype=torch.float64)
tensor([-135.8415, -114.2443, -130.9156, -128.7032,  -94.6364],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5207, device='cuda:0', dtype=torch.float64)
tensor([-135.8174, -114.3733, -131.2514, -128.6229,  -94.6758],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6759, device='cuda:0', dtype=torch.float64)
tensor([-135.8050, -114.6679, -131.4700, -128.5475,  -94.6737],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4652, device='cuda:0', dtype=torch.float64)
tensor([-135.6749, -114.9399, -131.7742, -128.4280,  -94.6667],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6160, device='cuda:0', dtype=torch.float64)
tensor([-135.6081, -115.4979, -132.2292, -128.3877,  -94.7519],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7420, device='cuda:0', dtype=torch.float64)
tensor([-135.5783, -115.8167, -132.7624, -128.3943,  -94.7830],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6731, device='cuda:0', dtype=torch.float64)
tensor([-135.3315, -116.2036, -133.2756, -128.3686,  -94.9729],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5290, device='cuda:0', dtype=torch.float64)
tensor([-135.1598, -116.5838, -133.7529, -128.3859,  -95.2478],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5616, device='cuda:0', dtype=torch.float64)
tensor([-135.1894, -116.8508, -134.3441, -128.5537,  -95.4077],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5903, device='cuda:0', dtype=torch.float64)
tensor([-135.4359, -117.1705, -134.8756, -128.7841,  -95.5469],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6023, device='cuda:0', dtype=torch.float64)
tensor([-135.7121, -117.5625, -135.4652, -129.1107,  -95.8625],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6438, device='cuda:0', dtype=torch.float64)
tensor([-135.9860, -117.8657, -136.1979, -129.4638,  -96.0580],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5839, device='cuda:0', dtype=torch.float64)
tensor([-136.1430, -118.2047, -136.8329, -129.6403,  -96.3190],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6233, device='cuda:0', dtype=torch.float64)
tensor([-136.4399, -118.4314, -137.5091, -129.9241,  -96.5346],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5309, device='cuda:0', dtype=torch.float64)
tensor([-136.8986, -118.5563, -138.2153, -130.2071,  -96.6378],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6132, device='cuda:0', dtype=torch.float64)
tensor([-137.4390, -118.6456, -138.7043, -130.6556,  -96.7203],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6276, device='cuda:0', dtype=torch.float64)
tensor([-137.9489, -118.7577, -139.2898, -131.0785,  -96.8321],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5158, device='cuda:0', dtype=torch.float64)
tensor([-138.4107, -118.7756, -139.6929, -131.4370,  -96.9615],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6548, device='cuda:0', dtype=torch.float64)
tensor([-138.9221, -118.7220, -140.2305, -131.6908,  -97.0600],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6516, device='cuda:0', dtype=torch.float64)
tensor([-139.3042, -118.7658, -140.7748, -131.8601,  -97.3037],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6424, device='cuda:0', dtype=torch.float64)
tensor([-139.7583, -118.6466, -141.4517, -132.0177,  -97.5806],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6161, device='cuda:0', dtype=torch.float64)
tensor([-140.1674, -118.5142, -142.0980, -132.0438,  -97.8048],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5560, device='cuda:0', dtype=torch.float64)
tensor([-140.6604, -118.4551, -142.7788, -132.1238,  -98.0943],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6003, device='cuda:0', dtype=torch.float64)
tensor([-141.2866, -118.5052, -143.2997, -132.2848,  -98.2858],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5918, device='cuda:0', dtype=torch.float64)
tensor([-141.9277, -118.5255, -143.9231, -132.5394,  -98.5351],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6635, device='cuda:0', dtype=torch.float64)
tensor([-142.4486, -118.4885, -144.5241, -132.7274,  -98.7207],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5466, device='cuda:0', dtype=torch.float64)
tensor([-142.9457, -118.6218, -145.0089, -132.9856,  -98.9561],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6025, device='cuda:0', dtype=torch.float64)
tensor([-143.3461, -118.5987, -145.3617, -133.2365,  -99.2945],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5708, device='cuda:0', dtype=torch.float64)
tensor([-143.7558, -118.6392, -145.5244, -133.4594,  -99.6685],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5800, device='cuda:0', dtype=torch.float64)
tensor([-144.1492, -118.7704, -145.8248, -133.6980, -100.1721],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6155, device='cuda:0', dtype=torch.float64)
tensor([-144.3191, -118.8613, -146.0540, -133.7698, -100.5641],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6201, device='cuda:0', dtype=torch.float64)
tensor([-144.4064, -118.9996, -146.2863, -133.8642, -100.9428],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5957, device='cuda:0', dtype=torch.float64)
tensor([-144.5144, -119.2096, -146.4491, -133.7933, -101.3024],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5885, device='cuda:0', dtype=torch.float64)
tensor([-144.7047, -119.5550, -146.6186, -133.7304, -101.7190],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5516, device='cuda:0', dtype=torch.float64)
tensor([-145.0073, -120.0703, -146.9128, -133.6901, -102.2071],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5073, device='cuda:0', dtype=torch.float64)
tensor([-145.4686, -120.4013, -147.2578, -133.6808, -102.7017],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6021, device='cuda:0', dtype=torch.float64)
tensor([-146.0473, -120.8108, -147.7095, -133.7368, -103.1869],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5873, device='cuda:0', dtype=torch.float64)
tensor([-146.5476, -121.2034, -148.1441, -133.7828, -103.6719],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4894, device='cuda:0', dtype=torch.float64)
tensor([-147.1361, -121.5152, -148.6852, -133.7927, -104.0408],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5691, device='cuda:0', dtype=torch.float64)
tensor([-147.6818, -121.6311, -148.9411, -133.9203, -104.3697],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5308, device='cuda:0', dtype=torch.float64)
tensor([-148.2605, -121.5918, -149.1218, -134.1113, -104.7552],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5102, device='cuda:0', dtype=torch.float64)
tensor([-148.9651, -121.5853, -149.3403, -134.3369, -105.1305],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6224, device='cuda:0', dtype=torch.float64)
tensor([-149.6935, -121.6641, -149.5534, -134.6483, -105.5980],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5962, device='cuda:0', dtype=torch.float64)
tensor([-150.4581, -121.7665, -149.7810, -134.9707, -106.0499],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5898, device='cuda:0', dtype=torch.float64)
tensor([-151.3615, -121.9263, -150.0555, -135.3238, -106.5797],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5496, device='cuda:0', dtype=torch.float64)
tensor([-152.1713, -122.1298, -150.4273, -135.7155, -107.0654],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6177, device='cuda:0', dtype=torch.float64)
tensor([-152.8005, -122.2298, -150.9669, -136.1276, -107.4748],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5776, device='cuda:0', dtype=torch.float64)
tensor([-153.4561, -122.0541, -151.4080, -136.3751, -107.7036],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5107, device='cuda:0', dtype=torch.float64)
tensor([-154.2407, -122.0960, -151.8289, -136.7508, -107.9544],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5292, device='cuda:0', dtype=torch.float64)
tensor([-155.0639, -122.0292, -152.4553, -137.1760, -108.0608],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5060, device='cuda:0', dtype=torch.float64)
tensor([-155.6933, -121.8804, -152.8335, -137.5008, -108.1400],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5382, device='cuda:0', dtype=torch.float64)
tensor([-156.3650, -121.5833, -153.3744, -137.8353, -108.0672],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5482, device='cuda:0', dtype=torch.float64)
tensor([-157.1161, -121.4224, -153.9688, -138.1644, -107.9526],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6138, device='cuda:0', dtype=torch.float64)
tensor([-157.8157, -121.1942, -154.3410, -138.3725, -107.7791],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4963, device='cuda:0', dtype=torch.float64)
tensor([-158.4398, -121.0645, -154.7113, -138.5339, -107.8003],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5751, device='cuda:0', dtype=torch.float64)
tensor([-158.9580, -120.9376, -154.8909, -138.5541, -107.8777],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6194, device='cuda:0', dtype=torch.float64)
tensor([-159.6259, -120.9323, -155.3586, -138.6974, -108.0962],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5501, device='cuda:0', dtype=torch.float64)
tensor([-160.1185, -120.9502, -155.6896, -138.7031, -108.3102],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5570, device='cuda:0', dtype=torch.float64)
tensor([-160.6595, -120.8886, -156.1514, -138.7614, -108.5040],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4951, device='cuda:0', dtype=torch.float64)
tensor([-161.0053, -120.8000, -156.5957, -138.8163, -108.6500],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5549, device='cuda:0', dtype=torch.float64)
tensor([-161.1943, -120.7686, -156.9729, -138.9385, -108.8649],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5144, device='cuda:0', dtype=torch.float64)
tensor([-161.5238, -120.7324, -157.2072, -139.2546, -109.1041],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6093, device='cuda:0', dtype=torch.float64)
tensor([-161.9944, -120.8537, -157.4929, -139.5549, -109.4101],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4904, device='cuda:0', dtype=torch.float64)
tensor([-162.3893, -121.0208, -157.6951, -139.7170, -109.6915],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5414, device='cuda:0', dtype=torch.float64)
tensor([-162.8829, -121.2123, -157.8375, -139.9927, -109.8356],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5926, device='cuda:0', dtype=torch.float64)
tensor([-163.6005, -121.5630, -158.1850, -140.4119, -110.2130],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5117, device='cuda:0', dtype=torch.float64)
tensor([-164.0748, -121.9327, -158.4770, -140.6478, -110.5493],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5897, device='cuda:0', dtype=torch.float64)
tensor([-164.4976, -122.3549, -158.8472, -140.8467, -110.8947],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4690, device='cuda:0', dtype=torch.float64)
tensor([-165.0215, -122.7731, -159.3301, -140.8961, -111.2608],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5570, device='cuda:0', dtype=torch.float64)
tensor([-165.7079, -123.1628, -159.8270, -141.0679, -111.6447],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5585, device='cuda:0', dtype=torch.float64)
tensor([-166.6062, -123.5417, -160.5084, -141.3259, -112.0341],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6090, device='cuda:0', dtype=torch.float64)
tensor([-167.5184, -123.8070, -161.0951, -141.4927, -112.4144],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6145, device='cuda:0', dtype=torch.float64)
tensor([-168.4682, -123.9959, -161.5943, -141.5426, -112.6559],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5305, device='cuda:0', dtype=torch.float64)
tensor([-169.3867, -124.1742, -162.1993, -141.4978, -112.9212],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4981, device='cuda:0', dtype=torch.float64)
tensor([-170.2357, -124.2661, -162.8601, -141.4905, -113.2680],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5019, device='cuda:0', dtype=torch.float64)
tensor([-170.9884, -124.3452, -163.3337, -141.4419, -113.6168],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4837, device='cuda:0', dtype=torch.float64)
tensor([-171.6144, -124.5705, -163.9074, -141.3949, -114.1749],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4829, device='cuda:0', dtype=torch.float64)
tensor([-171.8964, -124.8969, -164.1788, -141.3651, -114.8681],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5688, device='cuda:0', dtype=torch.float64)
tensor([-171.9353, -125.0698, -164.4111, -141.0829, -115.5140],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6597, device='cuda:0', dtype=torch.float64)
tensor([-172.2707, -125.3191, -164.8256, -140.8786, -116.2561],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5651, device='cuda:0', dtype=torch.float64)
tensor([-172.4784, -125.6786, -165.4158, -140.3406, -116.9224],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5393, device='cuda:0', dtype=torch.float64)
tensor([-172.5765, -126.0530, -165.8991, -139.8895, -117.6009],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5171, device='cuda:0', dtype=torch.float64)
tensor([-172.4222, -126.3477, -166.1761, -139.4725, -118.2689],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6615, device='cuda:0', dtype=torch.float64)
tensor([-172.4314, -126.6916, -166.6567, -139.1991, -119.1165],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5758, device='cuda:0', dtype=torch.float64)
tensor([-172.6983, -127.0832, -167.4055, -139.0972, -119.9703],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5602, device='cuda:0', dtype=torch.float64)
tensor([-172.9164, -127.4256, -168.0775, -139.0400, -120.8032],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5510, device='cuda:0', dtype=torch.float64)
tensor([-172.9258, -127.7201, -168.3772, -138.9134, -121.4073],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5289, device='cuda:0', dtype=torch.float64)
tensor([-172.9995, -127.9902, -168.7858, -138.8470, -122.0034],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5272, device='cuda:0', dtype=torch.float64)
tensor([-172.8653, -128.1525, -168.9368, -138.6970, -122.4866],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4976, device='cuda:0', dtype=torch.float64)
tensor([-172.8772, -128.2677, -169.3019, -138.6772, -123.0796],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4641, device='cuda:0', dtype=torch.float64)
tensor([-172.8849, -128.3611, -169.6405, -138.8099, -123.6030],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6030, device='cuda:0', dtype=torch.float64)
tensor([-172.9949, -128.5582, -170.1968, -138.9113, -124.0609],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5503, device='cuda:0', dtype=torch.float64)
tensor([-173.3709, -128.6569, -170.8855, -139.1442, -124.5730],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5601, device='cuda:0', dtype=torch.float64)
tensor([-173.7887, -128.5435, -171.2981, -139.3828, -124.7527],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5061, device='cuda:0', dtype=torch.float64)
tensor([-174.0256, -128.4545, -171.5702, -139.6235, -124.9554],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4433, device='cuda:0', dtype=torch.float64)
tensor([-174.2419, -128.3563, -171.7905, -139.7847, -125.1138],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5421, device='cuda:0', dtype=torch.float64)
tensor([-174.5731, -128.3918, -172.0737, -139.9704, -125.4334],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4952, device='cuda:0', dtype=torch.float64)
tensor([-174.7580, -128.4293, -172.3793, -140.1343, -125.6946],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6122, device='cuda:0', dtype=torch.float64)
tensor([-175.0414, -128.6145, -172.7155, -140.4115, -126.0745],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5243, device='cuda:0', dtype=torch.float64)
tensor([-175.2810, -128.7342, -173.1475, -140.6334, -126.3792],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4749, device='cuda:0', dtype=torch.float64)
tensor([-175.6241, -128.6645, -173.6711, -140.9693, -126.5361],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5309, device='cuda:0', dtype=torch.float64)
tensor([-176.1733, -128.5467, -174.1681, -141.4218, -126.5200],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4717, device='cuda:0', dtype=torch.float64)
tensor([-176.7002, -128.4761, -174.5550, -141.9439, -126.6405],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4683, device='cuda:0', dtype=torch.float64)
tensor([-177.2497, -128.2887, -174.7932, -142.4718, -126.6653],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5509, device='cuda:0', dtype=torch.float64)
tensor([-177.6733, -128.1213, -174.7200, -143.0543, -126.6721],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4589, device='cuda:0', dtype=torch.float64)
tensor([-178.1399, -128.1209, -174.7691, -143.6656, -126.8816],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4998, device='cuda:0', dtype=torch.float64)
tensor([-178.4768, -128.0298, -174.7698, -144.1482, -126.9855],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5305, device='cuda:0', dtype=torch.float64)
tensor([-178.7022, -127.8143, -174.7165, -144.4824, -127.0656],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4254, device='cuda:0', dtype=torch.float64)
tensor([-178.8189, -127.4566, -174.4702, -144.6859, -126.9766],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4865, device='cuda:0', dtype=torch.float64)
tensor([-178.8739, -127.1773, -174.4087, -144.7295, -126.9085],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4739, device='cuda:0', dtype=torch.float64)
tensor([-178.9469, -126.9641, -174.4809, -144.5991, -126.9076],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4985, device='cuda:0', dtype=torch.float64)
tensor([-179.1443, -126.8413, -174.7581, -144.4420, -127.1129],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5183, device='cuda:0', dtype=torch.float64)
tensor([-179.1841, -126.7377, -174.9445, -144.1006, -127.1835],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5178, device='cuda:0', dtype=torch.float64)
tensor([-179.2658, -126.7323, -175.1270, -143.6189, -127.1988],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5447, device='cuda:0', dtype=torch.float64)
tensor([-179.3923, -126.8405, -175.4667, -143.2516, -127.1790],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6067, device='cuda:0', dtype=torch.float64)
tensor([-179.4943, -126.8739, -175.7097, -142.7226, -127.1053],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4614, device='cuda:0', dtype=torch.float64)
tensor([-179.6300, -126.7999, -175.8223, -142.3034, -126.8024],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4900, device='cuda:0', dtype=torch.float64)
tensor([-179.8573, -126.6033, -175.8653, -141.9677, -126.4691],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5574, device='cuda:0', dtype=torch.float64)
tensor([-180.1669, -126.5443, -175.9571, -141.9348, -126.2839],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4923, device='cuda:0', dtype=torch.float64)
tensor([-180.0528, -126.5550, -175.6761, -141.7410, -125.9441],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4382, device='cuda:0', dtype=torch.float64)
tensor([-180.0887, -126.5070, -175.3751, -141.5027, -125.5703],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4783, device='cuda:0', dtype=torch.float64)
tensor([-180.1228, -126.4137, -175.0906, -141.1478, -125.3093],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4617, device='cuda:0', dtype=torch.float64)
tensor([-180.1338, -126.2516, -174.8667, -140.8121, -125.1154],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4708, device='cuda:0', dtype=torch.float64)
tensor([-180.1643, -126.0856, -174.5671, -140.4859, -124.8393],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4928, device='cuda:0', dtype=torch.float64)
tensor([-180.2326, -125.9032, -174.2673, -140.3135, -124.6525],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5047, device='cuda:0', dtype=torch.float64)
tensor([-180.2723, -125.8279, -173.9917, -140.1413, -124.5664],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4672, device='cuda:0', dtype=torch.float64)
tensor([-180.4253, -125.6067, -173.7658, -140.0551, -124.4884],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4659, device='cuda:0', dtype=torch.float64)
tensor([-180.6286, -125.3407, -173.4708, -139.9413, -124.4206],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4563, device='cuda:0', dtype=torch.float64)
tensor([-180.9621, -124.9416, -173.1481, -139.9179, -124.2587],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4310, device='cuda:0', dtype=torch.float64)
tensor([-181.1923, -124.6024, -172.8339, -139.9153, -124.2389],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4037, device='cuda:0', dtype=torch.float64)
tensor([-181.2917, -124.1381, -172.5883, -140.0041, -124.2405],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4811, device='cuda:0', dtype=torch.float64)
tensor([-181.2282, -123.7340, -172.5107, -140.0835, -124.3861],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4190, device='cuda:0', dtype=torch.float64)
tensor([-181.2731, -123.4083, -172.6285, -140.2173, -124.6481],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5048, device='cuda:0', dtype=torch.float64)
tensor([-181.5972, -123.1185, -172.8253, -140.4944, -124.9765],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3898, device='cuda:0', dtype=torch.float64)
tensor([-182.0761, -122.9386, -173.0904, -140.7536, -125.2591],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4691, device='cuda:0', dtype=torch.float64)
tensor([-182.5541, -122.8218, -173.4007, -140.9897, -125.5999],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4947, device='cuda:0', dtype=torch.float64)
tensor([-183.2302, -122.7128, -173.8990, -141.3156, -126.0251],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5119, device='cuda:0', dtype=torch.float64)
tensor([-184.0619, -122.7013, -174.5977, -141.7662, -126.6166],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4908, device='cuda:0', dtype=torch.float64)
tensor([-184.5469, -122.7124, -175.1675, -142.0636, -127.2524],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5164, device='cuda:0', dtype=torch.float64)
tensor([-185.1255, -122.7717, -175.7198, -142.3252, -127.8756],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4923, device='cuda:0', dtype=torch.float64)
tensor([-185.8537, -122.8163, -176.3075, -142.6133, -128.5178],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4695, device='cuda:0', dtype=torch.float64)
tensor([-186.5704, -123.0233, -177.1642, -142.9243, -129.4893],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5092, device='cuda:0', dtype=torch.float64)
tensor([-187.0302, -122.9598, -178.0153, -143.1648, -130.3051],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5055, device='cuda:0', dtype=torch.float64)
tensor([-187.4802, -122.8132, -178.6339, -143.3903, -131.1379],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4810, device='cuda:0', dtype=torch.float64)
tensor([-187.8054, -122.5789, -179.0719, -143.5519, -131.8845],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4321, device='cuda:0', dtype=torch.float64)
tensor([-188.1834, -122.3768, -179.4456, -143.7260, -132.5526],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4043, device='cuda:0', dtype=torch.float64)
tensor([-188.6287, -122.2078, -179.7365, -144.0183, -133.1309],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4493, device='cuda:0', dtype=torch.float64)
tensor([-188.7595, -122.0610, -179.9214, -144.1146, -133.6510],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5042, device='cuda:0', dtype=torch.float64)
tensor([-188.6495, -121.9362, -180.0085, -144.1652, -134.1947],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4187, device='cuda:0', dtype=torch.float64)
tensor([-188.3996, -121.8289, -180.1327, -144.1119, -134.6861],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4351, device='cuda:0', dtype=torch.float64)
tensor([-188.2194, -121.7378, -180.2249, -144.1415, -135.1607],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4533, device='cuda:0', dtype=torch.float64)
tensor([-187.9027, -121.6660, -180.1295, -144.3062, -135.5480],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4873, device='cuda:0', dtype=torch.float64)
tensor([-187.7774, -121.6064, -180.1210, -144.3913, -135.9370],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4179, device='cuda:0', dtype=torch.float64)
tensor([-187.7203, -121.4796, -180.2130, -144.4607, -136.2775],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4161, device='cuda:0', dtype=torch.float64)
tensor([-188.0133, -121.4615, -180.5353, -144.5346, -136.6935],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4198, device='cuda:0', dtype=torch.float64)
tensor([-188.2838, -121.5682, -181.0100, -144.5810, -137.2359],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4385, device='cuda:0', dtype=torch.float64)
tensor([-188.7320, -121.7250, -181.7517, -144.8005, -137.7929],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4954, device='cuda:0', dtype=torch.float64)
tensor([-189.1239, -121.8071, -182.5057, -144.9236, -138.2602],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4507, device='cuda:0', dtype=torch.float64)
tensor([-189.5286, -121.9408, -183.2651, -145.1650, -138.6956],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4348, device='cuda:0', dtype=torch.float64)
tensor([-189.7756, -122.0332, -183.8891, -145.2355, -139.1523],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4745, device='cuda:0', dtype=torch.float64)
tensor([-189.9018, -122.0794, -184.5222, -145.1719, -139.5849],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5197, device='cuda:0', dtype=torch.float64)
tensor([-190.3116, -122.0938, -185.1208, -145.1505, -139.8964],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4397, device='cuda:0', dtype=torch.float64)
tensor([-190.7950, -122.1891, -185.6503, -145.2081, -140.1822],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4964, device='cuda:0', dtype=torch.float64)
tensor([-191.6425, -122.2447, -186.1554, -145.4256, -140.3643],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4297, device='cuda:0', dtype=torch.float64)
tensor([-192.4308, -122.3799, -186.7316, -145.5688, -140.4561],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4588, device='cuda:0', dtype=torch.float64)
tensor([-192.9922, -122.4044, -187.1888, -145.8296, -140.5394],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4988, device='cuda:0', dtype=torch.float64)
tensor([-193.4846, -122.4007, -187.5209, -146.2127, -140.6958],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3901, device='cuda:0', dtype=torch.float64)
tensor([-194.0257, -122.4697, -187.9545, -146.5038, -140.9805],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4394, device='cuda:0', dtype=torch.float64)
tensor([-194.5574, -122.5260, -188.1742, -146.6735, -141.1438],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4123, device='cuda:0', dtype=torch.float64)
tensor([-195.1089, -122.5910, -188.4458, -147.0029, -141.3144],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4023, device='cuda:0', dtype=torch.float64)
tensor([-195.7190, -122.6480, -188.6984, -147.3270, -141.3824],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4452, device='cuda:0', dtype=torch.float64)
tensor([-196.3178, -122.6127, -188.9604, -147.6826, -141.3901],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4690, device='cuda:0', dtype=torch.float64)
tensor([-197.0412, -122.3801, -189.1726, -147.9978, -141.1300],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3673, device='cuda:0', dtype=torch.float64)
tensor([-197.8982, -122.2373, -189.5289, -148.2609, -140.9739],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3942, device='cuda:0', dtype=torch.float64)
tensor([-198.6237, -122.1230, -189.8912, -148.6376, -140.8519],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4137, device='cuda:0', dtype=torch.float64)
tensor([-199.2333, -121.8820, -190.0834, -148.9070, -140.7512],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4033, device='cuda:0', dtype=torch.float64)
tensor([-199.6927, -121.6922, -190.1544, -149.1282, -140.6808],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4928, device='cuda:0', dtype=torch.float64)
tensor([-199.9501, -121.6046, -190.3400, -149.1948, -140.9260],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3890, device='cuda:0', dtype=torch.float64)
tensor([-200.2650, -121.5936, -190.6997, -149.2987, -141.3311],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4360, device='cuda:0', dtype=torch.float64)
tensor([-200.7478, -121.7736, -191.2348, -149.3113, -141.9744],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4268, device='cuda:0', dtype=torch.float64)
tensor([-201.2740, -121.9598, -191.8896, -149.3905, -142.6761],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4431, device='cuda:0', dtype=torch.float64)
tensor([-201.7898, -122.1534, -192.3464, -149.5123, -143.3758],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4397, device='cuda:0', dtype=torch.float64)
tensor([-202.2704, -122.3820, -192.7920, -149.7019, -144.1340],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4026, device='cuda:0', dtype=torch.float64)
tensor([-202.7749, -122.7145, -193.0697, -149.9381, -144.8706],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4025, device='cuda:0', dtype=torch.float64)
tensor([-203.4819, -123.1165, -193.5780, -150.1238, -145.6437],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3744, device='cuda:0', dtype=torch.float64)
tensor([-204.0633, -123.4700, -193.9640, -150.2018, -146.3380],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4110, device='cuda:0', dtype=torch.float64)
tensor([-204.7170, -123.7794, -194.4829, -150.3531, -147.0962],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4013, device='cuda:0', dtype=torch.float64)
tensor([-205.5441, -124.1648, -194.9820, -150.5141, -147.9209],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4252, device='cuda:0', dtype=torch.float64)
tensor([-206.3116, -124.5514, -195.5733, -150.6883, -148.6932],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3387, device='cuda:0', dtype=torch.float64)
tensor([-206.8443, -124.8854, -196.1755, -150.7988, -149.4363],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3974, device='cuda:0', dtype=torch.float64)
tensor([-207.2422, -125.2268, -196.8013, -150.7781, -150.1100],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4047, device='cuda:0', dtype=torch.float64)
tensor([-207.9044, -125.5839, -197.6907, -150.8079, -150.8604],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3376, device='cuda:0', dtype=torch.float64)
tensor([-208.5105, -125.9452, -198.3687, -150.7363, -151.5676],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4071, device='cuda:0', dtype=torch.float64)
tensor([-208.9119, -126.2436, -198.9170, -150.6702, -152.1699],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3666, device='cuda:0', dtype=torch.float64)
tensor([-209.2800, -126.4585, -199.3518, -150.6311, -152.5959],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4460, device='cuda:0', dtype=torch.float64)
tensor([-209.8604, -126.8180, -199.8659, -150.7405, -153.0874],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3974, device='cuda:0', dtype=torch.float64)
tensor([-210.4502, -127.3317, -200.4647, -150.7651, -153.6642],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4617, device='cuda:0', dtype=torch.float64)
tensor([-210.7714, -127.8548, -200.9322, -150.8699, -154.2723],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3207, device='cuda:0', dtype=torch.float64)
tensor([-210.8950, -128.2844, -201.3039, -150.9254, -154.8266],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4211, device='cuda:0', dtype=torch.float64)
tensor([-210.9457, -128.6873, -201.6692, -150.9312, -155.3450],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3673, device='cuda:0', dtype=torch.float64)
tensor([-211.0013, -129.0064, -201.8487, -150.9643, -155.8361],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3650, device='cuda:0', dtype=torch.float64)
tensor([-211.1077, -129.3863, -202.0641, -150.8720, -156.2922],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4163, device='cuda:0', dtype=torch.float64)
tensor([-211.2472, -129.8896, -202.3128, -150.7036, -156.8369],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3763, device='cuda:0', dtype=torch.float64)
tensor([-211.4529, -130.3553, -202.4106, -150.5139, -157.4084],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3640, device='cuda:0', dtype=torch.float64)
tensor([-211.5620, -130.6495, -202.2988, -150.2209, -157.6881],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3834, device='cuda:0', dtype=torch.float64)
tensor([-211.8590, -130.9680, -202.4008, -149.8415, -158.0160],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3490, device='cuda:0', dtype=torch.float64)
tensor([-212.3885, -131.2125, -202.6503, -149.6043, -158.4710],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3732, device='cuda:0', dtype=torch.float64)
tensor([-212.9978, -131.5769, -202.9095, -149.5382, -158.9600],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3239, device='cuda:0', dtype=torch.float64)
tensor([-213.5983, -131.9374, -203.0992, -149.5287, -159.5676],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3873, device='cuda:0', dtype=torch.float64)
tensor([-214.1692, -132.2842, -203.6055, -149.5077, -160.2114],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3741, device='cuda:0', dtype=torch.float64)
tensor([-214.7488, -132.5927, -204.0291, -149.4694, -160.7581],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4134, device='cuda:0', dtype=torch.float64)
tensor([-215.3539, -132.8669, -204.5599, -149.5418, -161.3539],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3889, device='cuda:0', dtype=torch.float64)
tensor([-216.1013, -133.2396, -205.1972, -149.6190, -162.1118],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3729, device='cuda:0', dtype=torch.float64)
tensor([-216.9481, -133.5056, -205.7546, -149.7670, -162.7410],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3743, device='cuda:0', dtype=torch.float64)
tensor([-217.7517, -133.8111, -206.2278, -150.0272, -163.4227],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3366, device='cuda:0', dtype=torch.float64)
tensor([-218.5929, -134.1360, -206.6613, -150.1819, -163.9320],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3422, device='cuda:0', dtype=torch.float64)
tensor([-219.4317, -134.4556, -207.1393, -150.4683, -164.4807],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3707, device='cuda:0', dtype=torch.float64)
tensor([-220.0790, -134.6779, -207.5765, -150.6669, -164.9428],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4049, device='cuda:0', dtype=torch.float64)
tensor([-221.0458, -134.8925, -208.2757, -150.9805, -165.5431],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3709, device='cuda:0', dtype=torch.float64)
tensor([-221.8103, -135.1256, -209.0142, -151.1566, -166.2263],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3326, device='cuda:0', dtype=torch.float64)
tensor([-222.7395, -135.2538, -209.8417, -151.4510, -166.8951],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3653, device='cuda:0', dtype=torch.float64)
tensor([-223.7949, -135.4172, -210.6902, -151.7859, -167.5109],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3638, device='cuda:0', dtype=torch.float64)
tensor([-224.4691, -135.6337, -211.4237, -152.0472, -168.0916],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3638, device='cuda:0', dtype=torch.float64)
tensor([-225.0778, -135.9278, -212.2276, -152.1707, -168.7287],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3287, device='cuda:0', dtype=torch.float64)
tensor([-225.5923, -136.1285, -212.9648, -152.1701, -169.3669],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3407, device='cuda:0', dtype=torch.float64)
tensor([-226.1099, -136.2790, -213.7271, -152.2799, -169.9863],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3864, device='cuda:0', dtype=torch.float64)
tensor([-226.6796, -136.5724, -214.6998, -152.3413, -170.6939],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4080, device='cuda:0', dtype=torch.float64)
tensor([-227.3440, -136.8585, -215.5341, -152.5293, -171.4278],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3833, device='cuda:0', dtype=torch.float64)
tensor([-227.8241, -137.2171, -216.3000, -152.7216, -172.2040],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3578, device='cuda:0', dtype=torch.float64)
tensor([-228.2060, -137.5782, -217.1543, -152.9730, -173.1119],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3490, device='cuda:0', dtype=torch.float64)
tensor([-228.4105, -137.8501, -217.7431, -153.2002, -174.0630],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3461, device='cuda:0', dtype=torch.float64)
tensor([-228.5314, -138.1194, -218.3927, -153.3858, -175.0141],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3422, device='cuda:0', dtype=torch.float64)
tensor([-228.4804, -138.4118, -218.8723, -153.4971, -175.8681],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3764, device='cuda:0', dtype=torch.float64)
tensor([-228.4483, -138.7309, -219.4107, -153.8416, -176.7685],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3735, device='cuda:0', dtype=torch.float64)
tensor([-228.7352, -138.9154, -219.8916, -154.2844, -177.3885],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3766, device='cuda:0', dtype=torch.float64)
tensor([-228.9493, -138.9636, -220.1414, -154.8063, -177.8261],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3329, device='cuda:0', dtype=torch.float64)
tensor([-229.1888, -138.8878, -220.4563, -155.2917, -178.2641],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3084, device='cuda:0', dtype=torch.float64)
tensor([-229.5326, -138.8797, -220.8040, -155.9198, -178.7097],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3943, device='cuda:0', dtype=torch.float64)
tensor([-229.9551, -138.9683, -221.2277, -156.6025, -179.2116],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3275, device='cuda:0', dtype=torch.float64)
tensor([-230.4283, -139.1411, -221.7132, -157.2428, -179.9112],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3520, device='cuda:0', dtype=torch.float64)
tensor([-231.0763, -139.3853, -222.2841, -157.8465, -180.6996],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2966, device='cuda:0', dtype=torch.float64)
tensor([-231.6565, -139.5352, -222.7546, -158.4184, -181.4135],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3683, device='cuda:0', dtype=torch.float64)
tensor([-232.0481, -139.6767, -223.1456, -159.0412, -182.0666],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3621, device='cuda:0', dtype=torch.float64)
tensor([-232.4355, -139.8224, -223.5551, -159.6224, -182.6540],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3143, device='cuda:0', dtype=torch.float64)
tensor([-232.8132, -139.9506, -223.9986, -160.1086, -183.2443],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3218, device='cuda:0', dtype=torch.float64)
tensor([-233.1786, -140.0141, -224.2743, -160.4422, -183.8021],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3179, device='cuda:0', dtype=torch.float64)
tensor([-233.5712, -139.9927, -224.4130, -160.8438, -184.1598],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3244, device='cuda:0', dtype=torch.float64)
tensor([-233.9939, -140.1034, -224.6788, -161.2571, -184.7428],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3562, device='cuda:0', dtype=torch.float64)
tensor([-234.5050, -140.2862, -225.0785, -161.7496, -185.5377],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3414, device='cuda:0', dtype=torch.float64)
tensor([-235.0902, -140.5753, -225.5670, -162.1206, -186.4891],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2971, device='cuda:0', dtype=torch.float64)
tensor([-235.7691, -140.8754, -226.1890, -162.5434, -187.5594],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3702, device='cuda:0', dtype=torch.float64)
tensor([-236.4740, -141.2852, -226.9185, -163.0158, -188.7491],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3543, device='cuda:0', dtype=torch.float64)
tensor([-237.0994, -141.7205, -227.7518, -163.4403, -189.8853],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3547, device='cuda:0', dtype=torch.float64)
tensor([-238.0742, -142.0766, -228.7840, -163.9844, -191.1249],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3521, device='cuda:0', dtype=torch.float64)
tensor([-238.9932, -142.3301, -230.0130, -164.5959, -192.1868],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2784, device='cuda:0', dtype=torch.float64)
tensor([-239.7471, -142.6088, -231.0651, -164.9559, -193.1035],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3638, device='cuda:0', dtype=torch.float64)
tensor([-240.5115, -143.0002, -232.3259, -165.3215, -194.1548],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3170, device='cuda:0', dtype=torch.float64)
tensor([-241.1724, -143.3915, -233.3804, -165.5692, -195.0338],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2761, device='cuda:0', dtype=torch.float64)
tensor([-241.5992, -143.6934, -234.1144, -165.7313, -195.7443],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3149, device='cuda:0', dtype=torch.float64)
tensor([-241.9818, -144.0221, -234.9978, -165.8857, -196.6376],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3461, device='cuda:0', dtype=torch.float64)
tensor([-242.2793, -144.1777, -235.9087, -166.0380, -197.3928],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3497, device='cuda:0', dtype=torch.float64)
tensor([-242.7414, -144.4304, -236.7665, -166.1937, -198.0955],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3165, device='cuda:0', dtype=torch.float64)
tensor([-243.2269, -144.6576, -237.4369, -166.4282, -198.6711],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3316, device='cuda:0', dtype=torch.float64)
tensor([-243.6088, -144.7695, -238.1089, -166.5544, -199.1697],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2867, device='cuda:0', dtype=torch.float64)
tensor([-243.9350, -144.9677, -238.7792, -166.7816, -199.6964],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3321, device='cuda:0', dtype=torch.float64)
tensor([-244.2627, -145.1685, -239.4644, -167.1203, -200.0586],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3431, device='cuda:0', dtype=torch.float64)
tensor([-244.3692, -145.3095, -239.9784, -167.4231, -200.2207],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2623, device='cuda:0', dtype=torch.float64)
tensor([-244.4422, -145.4627, -240.4534, -167.7289, -200.5172],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3524, device='cuda:0', dtype=torch.float64)
tensor([-244.3699, -145.4421, -240.6802, -167.9611, -200.5605],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3407, device='cuda:0', dtype=torch.float64)
tensor([-244.3627, -145.3623, -240.8721, -168.1362, -200.5012],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3645, device='cuda:0', dtype=torch.float64)
tensor([-244.4528, -145.2942, -241.1983, -168.3527, -200.7092],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2997, device='cuda:0', dtype=torch.float64)
tensor([-244.5628, -145.1314, -241.3521, -168.3005, -200.7934],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3275, device='cuda:0', dtype=torch.float64)
tensor([-244.6619, -145.0400, -241.6399, -168.2637, -201.0423],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2638, device='cuda:0', dtype=torch.float64)
tensor([-244.7219, -144.9907, -241.9355, -168.3422, -201.3783],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3213, device='cuda:0', dtype=torch.float64)
tensor([-244.8548, -144.9224, -242.3128, -168.5036, -201.8001],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2568, device='cuda:0', dtype=torch.float64)
tensor([-244.9568, -144.9180, -242.7817, -168.8026, -202.2469],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3159, device='cuda:0', dtype=torch.float64)
tensor([-245.1378, -145.0607, -243.5435, -169.1843, -202.8704],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2708, device='cuda:0', dtype=torch.float64)
tensor([-245.4412, -145.2771, -244.3379, -169.5537, -203.5556],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3287, device='cuda:0', dtype=torch.float64)
tensor([-245.6265, -145.4741, -245.1357, -169.8392, -204.2560],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3275, device='cuda:0', dtype=torch.float64)
tensor([-245.9094, -145.6714, -245.9062, -170.2555, -205.0817],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3644, device='cuda:0', dtype=torch.float64)
tensor([-246.3736, -146.0206, -246.9718, -170.8588, -206.1240],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3234, device='cuda:0', dtype=torch.float64)
tensor([-246.7666, -146.3505, -247.8419, -171.3801, -207.3101],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3133, device='cuda:0', dtype=torch.float64)
tensor([-247.1119, -146.6427, -248.5847, -171.8148, -208.3433],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3378, device='cuda:0', dtype=torch.float64)
tensor([-247.4270, -146.9280, -249.2672, -172.0832, -209.4488],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2923, device='cuda:0', dtype=torch.float64)
tensor([-247.8523, -147.2520, -249.9649, -172.4225, -210.5542],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2780, device='cuda:0', dtype=torch.float64)
tensor([-248.1174, -147.4295, -250.6231, -172.6946, -211.5534],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2789, device='cuda:0', dtype=torch.float64)
tensor([-248.5534, -147.6128, -251.1895, -172.8462, -212.4391],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2633, device='cuda:0', dtype=torch.float64)
tensor([-248.8863, -147.9398, -251.8323, -172.9639, -213.4637],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2697, device='cuda:0', dtype=torch.float64)
tensor([-249.2856, -148.3408, -252.7583, -173.2229, -214.4463],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3471, device='cuda:0', dtype=torch.float64)
tensor([-249.5993, -148.6724, -253.6970, -173.2486, -215.4198],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2940, device='cuda:0', dtype=torch.float64)
tensor([-249.9003, -149.0053, -254.4973, -173.3354, -216.4150],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2875, device='cuda:0', dtype=torch.float64)
tensor([-250.2434, -149.3020, -255.2219, -173.4256, -217.4234],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2580, device='cuda:0', dtype=torch.float64)
tensor([-250.5209, -149.6153, -255.8681, -173.4686, -218.3093],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3145, device='cuda:0', dtype=torch.float64)
tensor([-250.9374, -149.9861, -256.4099, -173.5064, -219.2219],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2824, device='cuda:0', dtype=torch.float64)
tensor([-251.3834, -150.4123, -256.7731, -173.5366, -220.0345],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2824, device='cuda:0', dtype=torch.float64)
tensor([-251.7851, -150.6748, -257.0761, -173.5030, -220.7564],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2404, device='cuda:0', dtype=torch.float64)
tensor([-252.2154, -150.9375, -257.4193, -173.5205, -221.3669],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2675, device='cuda:0', dtype=torch.float64)
tensor([-252.5524, -151.1659, -257.7896, -173.6798, -221.9240],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2874, device='cuda:0', dtype=torch.float64)
tensor([-253.0637, -151.3549, -257.9617, -173.8063, -222.3370],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2893, device='cuda:0', dtype=torch.float64)
tensor([-253.5167, -151.4737, -258.0373, -173.8556, -222.7468],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2620, device='cuda:0', dtype=torch.float64)
tensor([-253.6770, -151.5611, -258.1401, -174.0008, -223.0186],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3019, device='cuda:0', dtype=torch.float64)
tensor([-254.0052, -151.6488, -258.3208, -174.0822, -223.3767],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3187, device='cuda:0', dtype=torch.float64)
tensor([-254.2566, -151.6138, -258.4686, -174.1436, -223.7889],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2937, device='cuda:0', dtype=torch.float64)
tensor([-254.5575, -151.5940, -258.6188, -174.2812, -224.0711],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2864, device='cuda:0', dtype=torch.float64)
tensor([-254.7832, -151.4514, -258.7420, -174.3725, -224.1500],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3074, device='cuda:0', dtype=torch.float64)
tensor([-255.0185, -151.4616, -259.1890, -174.5731, -224.5391],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3082, device='cuda:0', dtype=torch.float64)
tensor([-255.1743, -151.3873, -259.5460, -174.8034, -224.9090],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3107, device='cuda:0', dtype=torch.float64)
tensor([-255.0489, -151.2955, -259.7331, -174.8293, -225.2065],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2563, device='cuda:0', dtype=torch.float64)
tensor([-255.1543, -151.3263, -260.0564, -174.8501, -225.6085],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2356, device='cuda:0', dtype=torch.float64)
tensor([-255.3201, -151.4504, -260.4153, -174.7887, -226.0664],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2536, device='cuda:0', dtype=torch.float64)
tensor([-255.3694, -151.4799, -260.7438, -174.8014, -226.3978],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2668, device='cuda:0', dtype=torch.float64)
tensor([-255.3121, -151.4200, -260.8965, -174.9315, -226.5113],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2545, device='cuda:0', dtype=torch.float64)
tensor([-255.2656, -151.4721, -261.0906, -175.0096, -226.6836],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2583, device='cuda:0', dtype=torch.float64)
tensor([-255.3336, -151.5483, -261.4513, -175.1367, -226.9405],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2009, device='cuda:0', dtype=torch.float64)
tensor([-255.4461, -151.6487, -261.8511, -175.2139, -227.3706],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2498, device='cuda:0', dtype=torch.float64)
tensor([-255.4365, -151.7126, -262.0696, -175.1928, -227.7734],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2734, device='cuda:0', dtype=torch.float64)
tensor([-255.4007, -151.8993, -262.4509, -175.2070, -228.2524],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2156, device='cuda:0', dtype=torch.float64)
tensor([-255.4340, -152.0882, -262.6856, -175.2123, -228.5886],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2638, device='cuda:0', dtype=torch.float64)
tensor([-255.5858, -152.2869, -263.0412, -175.2391, -228.9546],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2283, device='cuda:0', dtype=torch.float64)
tensor([-255.8563, -152.5664, -263.5204, -175.3266, -229.5092],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2243, device='cuda:0', dtype=torch.float64)
tensor([-256.1737, -152.8872, -264.0013, -175.3420, -230.1032],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2585, device='cuda:0', dtype=torch.float64)
tensor([-256.4780, -153.2841, -264.6922, -175.3658, -230.8609],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2550, device='cuda:0', dtype=torch.float64)
tensor([-256.8742, -153.6525, -265.3662, -175.2458, -231.5673],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2503, device='cuda:0', dtype=torch.float64)
tensor([-257.2412, -153.9494, -265.9042, -175.1004, -232.2224],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2178, device='cuda:0', dtype=torch.float64)
tensor([-257.5986, -154.1931, -266.4219, -175.0086, -232.8489],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2285, device='cuda:0', dtype=torch.float64)
tensor([-257.9379, -154.4681, -267.0846, -175.0102, -233.4991],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2460, device='cuda:0', dtype=torch.float64)
tensor([-258.1054, -154.7544, -267.4524, -174.9927, -233.9556],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2462, device='cuda:0', dtype=torch.float64)
tensor([-258.2801, -155.0019, -267.6306, -174.9536, -234.4322],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2253, device='cuda:0', dtype=torch.float64)
tensor([-258.3841, -155.2626, -267.9907, -174.9823, -235.0531],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2445, device='cuda:0', dtype=torch.float64)
tensor([-258.4713, -155.5607, -268.1249, -174.7816, -235.5989],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2347, device='cuda:0', dtype=torch.float64)
tensor([-258.5417, -155.8344, -268.2551, -174.6072, -236.1385],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2445, device='cuda:0', dtype=torch.float64)
tensor([-258.6520, -155.9968, -268.1491, -174.3639, -236.5161],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2471, device='cuda:0', dtype=torch.float64)
tensor([-258.8561, -156.2168, -268.1538, -174.0246, -236.9793],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2197, device='cuda:0', dtype=torch.float64)
tensor([-259.0884, -156.4847, -268.2991, -173.7984, -237.5097],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2081, device='cuda:0', dtype=torch.float64)
tensor([-259.2698, -156.8264, -268.5901, -173.5915, -238.0651],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2399, device='cuda:0', dtype=torch.float64)
tensor([-259.4292, -157.1970, -269.0937, -173.5190, -238.6339],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2447, device='cuda:0', dtype=torch.float64)
tensor([-259.5705, -157.4910, -269.3626, -173.2574, -239.1131],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2530, device='cuda:0', dtype=torch.float64)
tensor([-259.6589, -157.7455, -269.6623, -173.0232, -239.5217],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2282, device='cuda:0', dtype=torch.float64)
tensor([-259.7246, -158.0233, -270.1775, -172.8840, -239.9773],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2045, device='cuda:0', dtype=torch.float64)
tensor([-259.6875, -158.3415, -270.6860, -172.8430, -240.3942],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2301, device='cuda:0', dtype=torch.float64)
tensor([-259.5922, -158.6494, -271.1770, -172.8617, -240.8144],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2317, device='cuda:0', dtype=torch.float64)
tensor([-259.3867, -158.8917, -271.4083, -172.8498, -241.1416],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2290, device='cuda:0', dtype=torch.float64)
tensor([-259.2565, -159.1680, -271.7528, -172.9005, -241.5604],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2015, device='cuda:0', dtype=torch.float64)
tensor([-259.1045, -159.4211, -272.0191, -172.9876, -241.8782],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2233, device='cuda:0', dtype=torch.float64)
tensor([-259.0172, -159.5866, -272.3258, -173.1506, -242.1924],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2064, device='cuda:0', dtype=torch.float64)
tensor([-258.9081, -159.8326, -272.8253, -173.3587, -242.5804],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2840, device='cuda:0', dtype=torch.float64)
tensor([-258.8889, -160.0690, -273.5971, -173.7026, -243.0003],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2264, device='cuda:0', dtype=torch.float64)
tensor([-258.8265, -160.2638, -274.0095, -173.9007, -243.3585],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2393, device='cuda:0', dtype=torch.float64)
tensor([-258.7419, -160.4451, -274.4135, -174.2264, -243.7361],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2319, device='cuda:0', dtype=torch.float64)
tensor([-258.7477, -160.6813, -274.9566, -174.6371, -244.1589],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2566, device='cuda:0', dtype=torch.float64)
tensor([-258.7482, -160.9860, -275.8671, -175.0478, -244.6942],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2415, device='cuda:0', dtype=torch.float64)
tensor([-258.6434, -161.2086, -276.7436, -175.4582, -245.0712],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2176, device='cuda:0', dtype=torch.float64)
tensor([-258.6345, -161.3099, -277.5001, -175.8150, -245.3882],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1957, device='cuda:0', dtype=torch.float64)
tensor([-258.6301, -161.4224, -278.3712, -176.2489, -245.6486],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2177, device='cuda:0', dtype=torch.float64)
tensor([-258.6695, -161.5101, -279.0083, -176.6952, -245.7696],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2115, device='cuda:0', dtype=torch.float64)
tensor([-258.5501, -161.5759, -279.4214, -177.1333, -245.7261],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1975, device='cuda:0', dtype=torch.float64)
tensor([-258.4312, -161.7527, -279.7338, -177.5472, -245.6787],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1960, device='cuda:0', dtype=torch.float64)
tensor([-258.3583, -161.9735, -280.1698, -178.0670, -245.6841],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2168, device='cuda:0', dtype=torch.float64)
tensor([-258.2869, -162.1376, -280.5043, -178.5265, -245.5992],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2537, device='cuda:0', dtype=torch.float64)
tensor([-258.2679, -162.3839, -280.9785, -178.9625, -245.6777],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1991, device='cuda:0', dtype=torch.float64)
tensor([-258.3585, -162.7282, -281.5776, -179.3423, -245.8607],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2398, device='cuda:0', dtype=torch.float64)
tensor([-258.5019, -162.9808, -282.0195, -179.7324, -245.9500],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1982, device='cuda:0', dtype=torch.float64)
tensor([-258.6855, -163.2616, -282.6445, -180.1512, -246.0691],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1831, device='cuda:0', dtype=torch.float64)
tensor([-258.9445, -163.5856, -283.4083, -180.5572, -246.3084],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1961, device='cuda:0', dtype=torch.float64)
tensor([-259.3090, -163.9053, -284.1736, -180.8787, -246.5615],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2205, device='cuda:0', dtype=torch.float64)
tensor([-259.6526, -164.0282, -284.8342, -181.2732, -246.6465],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2356, device='cuda:0', dtype=torch.float64)
tensor([-260.1203, -164.2140, -285.3443, -181.6370, -246.8757],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1976, device='cuda:0', dtype=torch.float64)
tensor([-260.3848, -164.2928, -285.4616, -181.8407, -247.0027],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1872, device='cuda:0', dtype=torch.float64)
tensor([-260.6182, -164.4095, -285.5787, -181.9939, -247.1985],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1946, device='cuda:0', dtype=torch.float64)
tensor([-260.9121, -164.5958, -285.7811, -182.1406, -247.4983],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2117, device='cuda:0', dtype=torch.float64)
tensor([-261.3720, -164.9235, -286.2624, -182.2733, -247.8898],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1923, device='cuda:0', dtype=torch.float64)
tensor([-261.7062, -165.0872, -286.5458, -182.4233, -248.1864],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1925, device='cuda:0', dtype=torch.float64)
tensor([-261.9632, -165.2617, -286.9578, -182.5656, -248.5316],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1913, device='cuda:0', dtype=torch.float64)
tensor([-262.2542, -165.4652, -287.3140, -182.6461, -248.9223],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1902, device='cuda:0', dtype=torch.float64)
tensor([-262.5580, -165.6917, -287.7417, -182.6935, -249.3209],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1865, device='cuda:0', dtype=torch.float64)
tensor([-262.7814, -165.9246, -288.2182, -182.6874, -249.6860],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1815, device='cuda:0', dtype=torch.float64)
tensor([-263.0030, -166.2270, -288.6681, -182.6396, -250.0396],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1929, device='cuda:0', dtype=torch.float64)
tensor([-263.1888, -166.4932, -289.0640, -182.4030, -250.3705],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1894, device='cuda:0', dtype=torch.float64)
tensor([-263.2836, -166.7085, -289.3320, -182.0394, -250.6865],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2410, device='cuda:0', dtype=torch.float64)
tensor([-263.3819, -166.9925, -289.7134, -181.6459, -251.0610],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2059, device='cuda:0', dtype=torch.float64)
tensor([-263.6403, -167.2985, -290.0882, -181.2401, -251.5265],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1926, device='cuda:0', dtype=torch.float64)
tensor([-263.9200, -167.5061, -290.3166, -180.7220, -252.0222],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1712, device='cuda:0', dtype=torch.float64)
tensor([-264.2639, -167.7424, -290.4888, -180.2575, -252.5259],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1799, device='cuda:0', dtype=torch.float64)
tensor([-264.6069, -168.0712, -290.6539, -179.7780, -253.0447],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1815, device='cuda:0', dtype=torch.float64)
tensor([-264.9659, -168.2829, -290.6414, -179.2526, -253.4606],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1824, device='cuda:0', dtype=torch.float64)
tensor([-265.2270, -168.4983, -290.6526, -178.7608, -253.8411],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1802, device='cuda:0', dtype=torch.float64)
tensor([-265.5098, -168.8059, -290.6965, -178.3273, -254.2060],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1605, device='cuda:0', dtype=torch.float64)
tensor([-265.8707, -169.1075, -290.6793, -177.8533, -254.6216],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1902, device='cuda:0', dtype=torch.float64)
tensor([-266.1788, -169.2693, -290.5782, -177.3254, -254.8877],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1969, device='cuda:0', dtype=torch.float64)
tensor([-266.4460, -169.5271, -290.4657, -176.7892, -255.2011],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1910, device='cuda:0', dtype=torch.float64)
tensor([-266.7716, -169.8570, -290.4263, -176.3416, -255.5290],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1687, device='cuda:0', dtype=torch.float64)
tensor([-267.1023, -170.2221, -290.5928, -176.0394, -255.8962],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1873, device='cuda:0', dtype=torch.float64)
tensor([-267.2930, -170.4908, -290.4892, -175.6682, -256.0758],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1593, device='cuda:0', dtype=torch.float64)
tensor([-267.5326, -170.7643, -290.5099, -175.4077, -256.2618],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1644, device='cuda:0', dtype=torch.float64)
tensor([-267.8153, -171.0880, -290.5153, -175.1198, -256.5154],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1616, device='cuda:0', dtype=torch.float64)
tensor([-268.1036, -171.4498, -290.5810, -174.9004, -256.8109],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1741, device='cuda:0', dtype=torch.float64)
tensor([-268.4681, -171.8838, -290.6597, -174.6987, -257.2400],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1735, device='cuda:0', dtype=torch.float64)
tensor([-268.7523, -172.3420, -290.7033, -174.4806, -257.6619],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1487, device='cuda:0', dtype=torch.float64)
tensor([-269.0944, -172.7897, -290.7065, -174.2979, -258.0599],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1608, device='cuda:0', dtype=torch.float64)
tensor([-269.3787, -173.2337, -290.7833, -174.1799, -258.4055],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1898, device='cuda:0', dtype=torch.float64)
tensor([-269.6078, -173.6120, -290.8343, -174.0266, -258.6256],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1672, device='cuda:0', dtype=torch.float64)
tensor([-269.8923, -174.0001, -290.9669, -173.9634, -258.8186],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1727, device='cuda:0', dtype=torch.float64)
tensor([-270.2367, -174.4050, -291.2366, -174.0131, -259.1360],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1689, device='cuda:0', dtype=torch.float64)
tensor([-270.5740, -174.9027, -291.6253, -174.0543, -259.5593],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1761, device='cuda:0', dtype=torch.float64)
tensor([-270.8982, -175.2027, -291.9142, -174.0694, -259.9169],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1708, device='cuda:0', dtype=torch.float64)
tensor([-271.1483, -175.4201, -292.0072, -174.0707, -260.1450],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1608, device='cuda:0', dtype=torch.float64)
tensor([-271.4537, -175.6458, -292.1213, -173.9907, -260.4282],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1524, device='cuda:0', dtype=torch.float64)
tensor([-271.7166, -175.9335, -292.3027, -173.9313, -260.7545],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1668, device='cuda:0', dtype=torch.float64)
tensor([-272.0424, -176.2557, -292.3993, -173.8782, -261.0919],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1861, device='cuda:0', dtype=torch.float64)
tensor([-272.2705, -176.6734, -292.7808, -173.9085, -261.4996],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1760, device='cuda:0', dtype=torch.float64)
tensor([-272.3806, -177.0139, -293.1743, -173.9814, -261.8283],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1698, device='cuda:0', dtype=torch.float64)
tensor([-272.5138, -177.3896, -293.5011, -173.9891, -262.2162],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1479, device='cuda:0', dtype=torch.float64)
tensor([-272.6782, -177.8615, -293.8639, -174.0423, -262.6411],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1757, device='cuda:0', dtype=torch.float64)
tensor([-272.8202, -178.2853, -294.1823, -174.1367, -263.0544],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1444, device='cuda:0', dtype=torch.float64)
tensor([-272.9256, -178.7096, -294.5308, -174.1780, -263.3963],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1537, device='cuda:0', dtype=torch.float64)
tensor([-272.9196, -179.0616, -294.7634, -174.2408, -263.6119],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1636, device='cuda:0', dtype=torch.float64)
tensor([-273.0566, -179.4070, -295.0807, -174.4123, -263.8563],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1431, device='cuda:0', dtype=torch.float64)
tensor([-273.2157, -179.6940, -295.3366, -174.5443, -264.0651],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1507, device='cuda:0', dtype=torch.float64)
tensor([-273.2971, -180.0181, -295.5417, -174.6528, -264.3301],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1421, device='cuda:0', dtype=torch.float64)
tensor([-273.4422, -180.3716, -295.6402, -174.6687, -264.6166],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1397, device='cuda:0', dtype=torch.float64)
tensor([-273.5958, -180.6978, -295.7525, -174.7101, -264.9117],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1701, device='cuda:0', dtype=torch.float64)
tensor([-273.8332, -181.0165, -295.8688, -174.8421, -265.2866],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1583, device='cuda:0', dtype=torch.float64)
tensor([-273.9262, -181.2161, -295.8797, -174.9204, -265.5511],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1219, device='cuda:0', dtype=torch.float64)
tensor([-273.9017, -181.4279, -295.8671, -175.0416, -265.8236],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1563, device='cuda:0', dtype=torch.float64)
tensor([-273.9643, -181.6588, -295.9132, -175.2213, -266.1732],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1375, device='cuda:0', dtype=torch.float64)
tensor([-274.0404, -181.8433, -295.9948, -175.4838, -266.5263],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1564, device='cuda:0', dtype=torch.float64)
tensor([-274.1378, -182.1542, -296.1453, -175.7982, -266.9319],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1534, device='cuda:0', dtype=torch.float64)
tensor([-274.2177, -182.5027, -296.3379, -176.0749, -267.3717],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1454, device='cuda:0', dtype=torch.float64)
tensor([-274.3568, -182.8162, -296.5999, -176.3398, -267.8664],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1368, device='cuda:0', dtype=torch.float64)
tensor([-274.5315, -183.1416, -296.7763, -176.5856, -268.3631],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1344, device='cuda:0', dtype=torch.float64)
tensor([-274.6221, -183.5028, -297.1005, -176.8935, -268.8444],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1425, device='cuda:0', dtype=torch.float64)
tensor([-274.6161, -183.8720, -297.5577, -177.1960, -269.3853],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1333, device='cuda:0', dtype=torch.float64)
tensor([-274.6285, -184.2318, -297.9118, -177.4991, -269.9301],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1573, device='cuda:0', dtype=torch.float64)
tensor([-274.6368, -184.6918, -298.3163, -177.7975, -270.4820],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1562, device='cuda:0', dtype=torch.float64)
tensor([-274.5855, -185.1670, -298.5962, -178.0577, -271.0536],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1353, device='cuda:0', dtype=torch.float64)
tensor([-274.6560, -185.6443, -298.8874, -178.3706, -271.6281],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1374, device='cuda:0', dtype=torch.float64)
tensor([-274.6800, -186.1263, -299.2816, -178.6482, -272.1695],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1489, device='cuda:0', dtype=torch.float64)
tensor([-274.7118, -186.6417, -299.4146, -178.6340, -272.7288],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1370, device='cuda:0', dtype=torch.float64)
tensor([-274.7640, -187.1923, -299.5452, -178.6207, -273.2998],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1660, device='cuda:0', dtype=torch.float64)
tensor([-274.8722, -187.7950, -299.6419, -178.5534, -273.9013],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1664, device='cuda:0', dtype=torch.float64)
tensor([-275.0119, -188.3342, -299.7986, -178.5099, -274.4560],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1342, device='cuda:0', dtype=torch.float64)
tensor([-275.0788, -188.7641, -299.7132, -178.3653, -274.8920],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1446, device='cuda:0', dtype=torch.float64)
tensor([-275.1864, -189.1958, -299.7106, -178.3784, -275.2902],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1379, device='cuda:0', dtype=torch.float64)
tensor([-275.1645, -189.5629, -299.4820, -178.2550, -275.5725],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1379, device='cuda:0', dtype=torch.float64)
tensor([-275.2146, -189.9577, -299.1492, -178.1184, -275.8468],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1250, device='cuda:0', dtype=torch.float64)
tensor([-275.2313, -190.2705, -298.7168, -177.8680, -276.0515],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1491, device='cuda:0', dtype=torch.float64)
tensor([-275.3319, -190.5347, -298.1647, -177.4969, -276.2976],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1261, device='cuda:0', dtype=torch.float64)
tensor([-275.4008, -190.7048, -297.8090, -177.1951, -276.4641],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1353, device='cuda:0', dtype=torch.float64)
tensor([-275.4687, -190.9374, -297.5155, -176.9762, -276.6332],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1240, device='cuda:0', dtype=torch.float64)
tensor([-275.5254, -191.1581, -297.1388, -176.7330, -276.7737],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1279, device='cuda:0', dtype=torch.float64)
tensor([-275.5873, -191.4117, -296.7672, -176.4896, -276.9946],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1388, device='cuda:0', dtype=torch.float64)
tensor([-275.6354, -191.7573, -296.4232, -176.3189, -277.2802],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1547, device='cuda:0', dtype=torch.float64)
tensor([-275.6741, -192.2047, -296.1487, -176.1485, -277.6151],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1461, device='cuda:0', dtype=torch.float64)
tensor([-275.7738, -192.7513, -295.8712, -176.1877, -278.0270],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1475, device='cuda:0', dtype=torch.float64)
tensor([-275.9235, -193.3229, -295.4980, -176.2803, -278.4005],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1199, device='cuda:0', dtype=torch.float64)
tensor([-276.0550, -193.8491, -294.8966, -176.2218, -278.7099],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1312, device='cuda:0', dtype=torch.float64)
tensor([-276.1223, -194.3894, -294.3508, -176.2169, -278.9734],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1045, device='cuda:0', dtype=torch.float64)
tensor([-276.1867, -194.9265, -293.8432, -176.2766, -279.1948],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1308, device='cuda:0', dtype=torch.float64)
tensor([-276.2557, -195.4636, -293.4548, -176.4449, -279.4530],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1267, device='cuda:0', dtype=torch.float64)
tensor([-276.3506, -196.0189, -293.0551, -176.5841, -279.7525],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1141, device='cuda:0', dtype=torch.float64)
tensor([-276.5524, -196.5715, -292.6519, -176.6660, -280.0251],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1184, device='cuda:0', dtype=torch.float64)
tensor([-276.6026, -196.9853, -292.1477, -176.6419, -280.1078],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1084, device='cuda:0', dtype=torch.float64)
tensor([-276.6060, -197.3356, -291.5604, -176.4646, -280.1535],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1165, device='cuda:0', dtype=torch.float64)
tensor([-276.6994, -197.7256, -290.7185, -176.1689, -280.2121],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1067, device='cuda:0', dtype=torch.float64)
tensor([-276.7932, -198.0972, -289.9099, -175.9558, -280.2455],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1062, device='cuda:0', dtype=torch.float64)
tensor([-276.8130, -198.4035, -289.1442, -175.7328, -280.1787],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1038, device='cuda:0', dtype=torch.float64)
tensor([-276.9105, -198.6805, -288.3307, -175.4710, -280.1498],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1063, device='cuda:0', dtype=torch.float64)
tensor([-277.0132, -198.9050, -287.4152, -175.1700, -280.0151],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1196, device='cuda:0', dtype=torch.float64)
tensor([-277.2338, -199.1924, -286.6318, -174.9154, -279.9042],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1188, device='cuda:0', dtype=torch.float64)
tensor([-277.3770, -199.4025, -285.8460, -174.6540, -279.6660],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0955, device='cuda:0', dtype=torch.float64)
tensor([-277.5181, -199.6485, -285.1950, -174.4668, -279.4254],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1029, device='cuda:0', dtype=torch.float64)
tensor([-277.6524, -199.8154, -284.5749, -174.3478, -279.1479],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1140, device='cuda:0', dtype=torch.float64)
tensor([-277.7416, -199.9807, -283.9432, -174.2265, -278.9107],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1163, device='cuda:0', dtype=torch.float64)
tensor([-277.8465, -200.1040, -283.3894, -174.2369, -278.6591],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1214, device='cuda:0', dtype=torch.float64)
tensor([-277.8218, -200.1595, -282.8583, -174.1717, -278.4167],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1040, device='cuda:0', dtype=torch.float64)
tensor([-277.7951, -200.1884, -282.2825, -174.1045, -278.2065],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1168, device='cuda:0', dtype=torch.float64)
tensor([-277.7767, -200.2372, -281.8041, -174.0399, -278.0419],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1072, device='cuda:0', dtype=torch.float64)
tensor([-277.8395, -200.3075, -281.3418, -174.0565, -277.9179],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1129, device='cuda:0', dtype=torch.float64)
tensor([-277.7897, -200.4324, -281.1109, -174.1639, -277.8187],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1222, device='cuda:0', dtype=torch.float64)
tensor([-277.7606, -200.4958, -280.9462, -174.3277, -277.6441],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1072, device='cuda:0', dtype=torch.float64)
tensor([-277.7790, -200.6582, -280.9258, -174.5194, -277.5582],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1204, device='cuda:0', dtype=torch.float64)
tensor([-277.7791, -200.7818, -280.9260, -174.6192, -277.3899],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0941, device='cuda:0', dtype=torch.float64)
tensor([-277.7883, -200.9270, -280.7077, -174.6649, -277.1590],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1173, device='cuda:0', dtype=torch.float64)
tensor([-277.8221, -201.1341, -280.4807, -174.7344, -276.9859],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0932, device='cuda:0', dtype=torch.float64)
tensor([-277.7637, -201.3595, -280.3038, -174.8227, -276.8048],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1052, device='cuda:0', dtype=torch.float64)
tensor([-277.5992, -201.5528, -280.0192, -174.8618, -276.6218],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1038, device='cuda:0', dtype=torch.float64)
tensor([-277.4141, -201.7313, -279.8013, -174.9319, -276.4768],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1055, device='cuda:0', dtype=torch.float64)
tensor([-277.1953, -201.9052, -279.7419, -174.9918, -276.3114],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0907, device='cuda:0', dtype=torch.float64)
tensor([-276.9724, -202.1119, -279.8039, -175.0820, -276.1785],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1016, device='cuda:0', dtype=torch.float64)
tensor([-276.8795, -202.3608, -279.7164, -175.1459, -276.0836],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0927, device='cuda:0', dtype=torch.float64)
tensor([-276.9344, -202.5258, -279.5040, -175.2376, -275.9772],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0862, device='cuda:0', dtype=torch.float64)
tensor([-277.0036, -202.7070, -279.2192, -175.2427, -275.9005],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1176, device='cuda:0', dtype=torch.float64)
tensor([-277.2259, -202.9428, -279.0021, -175.2496, -275.9163],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0919, device='cuda:0', dtype=torch.float64)
tensor([-277.4865, -203.1907, -278.7284, -175.3040, -275.9900],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1018, device='cuda:0', dtype=torch.float64)
tensor([-277.7826, -203.4210, -278.4456, -175.3052, -276.0315],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0957, device='cuda:0', dtype=torch.float64)
tensor([-278.0023, -203.6050, -278.1248, -175.1655, -275.9750],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0920, device='cuda:0', dtype=torch.float64)
tensor([-278.2125, -203.7725, -277.8039, -175.0539, -275.8933],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0896, device='cuda:0', dtype=torch.float64)
tensor([-278.4063, -203.8718, -277.4978, -174.9448, -275.7412],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0780, device='cuda:0', dtype=torch.float64)
tensor([-278.4829, -203.9261, -277.2622, -174.8415, -275.5611],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0984, device='cuda:0', dtype=torch.float64)
tensor([-278.5306, -204.0127, -276.9588, -174.6871, -275.3588],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0961, device='cuda:0', dtype=torch.float64)
tensor([-278.4841, -204.0452, -276.5977, -174.4815, -275.0698],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1037, device='cuda:0', dtype=torch.float64)
tensor([-278.5318, -204.0873, -276.2118, -174.3558, -274.8375],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1040, device='cuda:0', dtype=torch.float64)
tensor([-278.6125, -204.1522, -275.8427, -174.2793, -274.6150],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0928, device='cuda:0', dtype=torch.float64)
tensor([-278.7058, -204.1924, -275.3870, -174.2161, -274.3160],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1035, device='cuda:0', dtype=torch.float64)
tensor([-278.8251, -204.3056, -274.8273, -174.1434, -274.0202],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0958, device='cuda:0', dtype=torch.float64)
tensor([-278.9548, -204.4374, -274.3181, -174.1015, -273.7138],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0872, device='cuda:0', dtype=torch.float64)
tensor([-279.1174, -204.6209, -273.8899, -174.1013, -273.5004],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0878, device='cuda:0', dtype=torch.float64)
tensor([-279.1661, -204.7227, -273.4101, -174.0198, -273.1869],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0919, device='cuda:0', dtype=torch.float64)
tensor([-279.2625, -204.8736, -272.8918, -173.9477, -272.9626],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0824, device='cuda:0', dtype=torch.float64)
tensor([-279.2485, -205.0528, -272.3119, -173.7903, -272.7247],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0857, device='cuda:0', dtype=torch.float64)
tensor([-279.1273, -205.2550, -271.7623, -173.6640, -272.4804],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0707, device='cuda:0', dtype=torch.float64)
tensor([-279.0291, -205.3949, -271.1929, -173.5539, -272.2313],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0876, device='cuda:0', dtype=torch.float64)
tensor([-278.9406, -205.5175, -270.7046, -173.5285, -271.9273],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0723, device='cuda:0', dtype=torch.float64)
tensor([-278.7998, -205.6475, -270.2974, -173.5107, -271.6406],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0760, device='cuda:0', dtype=torch.float64)
tensor([-278.6177, -205.7353, -269.9371, -173.4565, -271.3617],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0880, device='cuda:0', dtype=torch.float64)
tensor([-278.4258, -205.8539, -269.7191, -173.4601, -271.1425],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0719, device='cuda:0', dtype=torch.float64)
tensor([-278.2323, -205.9646, -269.5462, -173.4871, -270.8998],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0827, device='cuda:0', dtype=torch.float64)
tensor([-278.0838, -206.0534, -269.2791, -173.5195, -270.6223],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0715, device='cuda:0', dtype=torch.float64)
tensor([-278.0090, -206.1014, -268.9219, -173.5574, -270.3557],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0791, device='cuda:0', dtype=torch.float64)
tensor([-278.0070, -206.1658, -268.5196, -173.5999, -270.1717],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0851, device='cuda:0', dtype=torch.float64)
tensor([-277.9817, -206.2457, -268.1283, -173.6381, -270.0079],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0862, device='cuda:0', dtype=torch.float64)
tensor([-277.9630, -206.2426, -267.5385, -173.6980, -269.7920],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0710, device='cuda:0', dtype=torch.float64)
tensor([-277.8614, -206.2566, -267.0370, -173.7724, -269.5681],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0799, device='cuda:0', dtype=torch.float64)
tensor([-277.7422, -206.3018, -266.5096, -173.8405, -269.3502],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0792, device='cuda:0', dtype=torch.float64)
tensor([-277.5622, -206.2353, -266.0097, -173.8610, -269.0490],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0882, device='cuda:0', dtype=torch.float64)
tensor([-277.4171, -206.2100, -265.5405, -173.9491, -268.7851],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0684, device='cuda:0', dtype=torch.float64)
tensor([-277.2920, -206.1681, -265.0588, -174.0264, -268.5211],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0818, device='cuda:0', dtype=torch.float64)
tensor([-277.1940, -206.1167, -264.5417, -174.0858, -268.2562],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0875, device='cuda:0', dtype=torch.float64)
tensor([-277.0356, -206.0884, -264.0596, -174.1214, -268.0267],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0914, device='cuda:0', dtype=torch.float64)
tensor([-276.8878, -206.0882, -263.6039, -174.1595, -267.7880],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0846, device='cuda:0', dtype=torch.float64)
tensor([-276.7236, -206.1217, -263.0845, -174.1985, -267.5721],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0634, device='cuda:0', dtype=torch.float64)
tensor([-276.5505, -206.1487, -262.6012, -174.2414, -267.3837],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0871, device='cuda:0', dtype=torch.float64)
tensor([-276.3642, -206.1065, -262.0068, -174.1247, -267.2108],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0701, device='cuda:0', dtype=torch.float64)
tensor([-276.1939, -206.0593, -261.3156, -174.0229, -267.0306],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0665, device='cuda:0', dtype=torch.float64)
tensor([-276.0975, -206.0171, -260.6318, -173.9388, -266.8802],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0682, device='cuda:0', dtype=torch.float64)
tensor([-276.0199, -205.9855, -259.8673, -173.8512, -266.7326],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0704, device='cuda:0', dtype=torch.float64)
tensor([-275.9805, -205.9871, -259.1381, -173.7554, -266.6525],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0723, device='cuda:0', dtype=torch.float64)
tensor([-275.8555, -205.9587, -258.5280, -173.6524, -266.4872],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0725, device='cuda:0', dtype=torch.float64)
tensor([-275.7926, -205.9285, -258.0053, -173.6036, -266.3329],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0648, device='cuda:0', dtype=torch.float64)
tensor([-275.7535, -205.8823, -257.4003, -173.5213, -266.1914],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0723, device='cuda:0', dtype=torch.float64)
tensor([-275.6299, -205.8613, -256.8520, -173.4445, -266.0380],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0700, device='cuda:0', dtype=torch.float64)
tensor([-275.4457, -205.8116, -256.4972, -173.3922, -265.8437],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0769, device='cuda:0', dtype=torch.float64)
tensor([-275.1431, -205.7532, -256.1895, -173.2639, -265.6127],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0703, device='cuda:0', dtype=torch.float64)
tensor([-274.8686, -205.6576, -255.8832, -173.1259, -265.3415],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0694, device='cuda:0', dtype=torch.float64)
tensor([-274.6340, -205.5651, -255.5960, -172.9681, -265.0386],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0797, device='cuda:0', dtype=torch.float64)
tensor([-274.4928, -205.5032, -255.2245, -172.8378, -264.7853],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0693, device='cuda:0', dtype=torch.float64)
tensor([-274.2773, -205.3960, -254.8709, -172.6101, -264.4603],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0604, device='cuda:0', dtype=torch.float64)
tensor([-274.0361, -205.3137, -254.4996, -172.3496, -264.1557],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0727, device='cuda:0', dtype=torch.float64)
tensor([-273.7574, -205.1882, -254.1797, -172.1354, -263.7833],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0705, device='cuda:0', dtype=torch.float64)
tensor([-273.4410, -205.0489, -253.8923, -171.9324, -263.4123],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0753, device='cuda:0', dtype=torch.float64)
tensor([-273.0376, -204.9087, -253.7154, -171.7110, -263.0275],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0558, device='cuda:0', dtype=torch.float64)
tensor([-272.5863, -204.7628, -253.5790, -171.4930, -262.6341],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0701, device='cuda:0', dtype=torch.float64)
tensor([-272.1499, -204.6250, -253.6030, -171.4120, -262.2356],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0615, device='cuda:0', dtype=torch.float64)
tensor([-271.7264, -204.4692, -253.5627, -171.3315, -261.8728],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0760, device='cuda:0', dtype=torch.float64)
tensor([-271.3472, -204.2662, -253.3941, -171.2029, -261.4670],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0688, device='cuda:0', dtype=torch.float64)
tensor([-270.9115, -204.0816, -253.2220, -171.0308, -261.0759],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0747, device='cuda:0', dtype=torch.float64)
tensor([-270.4508, -203.8712, -252.9847, -170.8141, -260.6412],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0684, device='cuda:0', dtype=torch.float64)
tensor([-269.9023, -203.6155, -252.7023, -170.5696, -260.1216],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0750, device='cuda:0', dtype=torch.float64)
tensor([-269.3427, -203.3856, -252.4491, -170.3325, -259.6314],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0676, device='cuda:0', dtype=torch.float64)
tensor([-268.8236, -203.1878, -252.2730, -170.0875, -259.1794],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0540, device='cuda:0', dtype=torch.float64)
tensor([-268.3531, -203.0247, -252.0749, -169.8712, -258.7858],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0690, device='cuda:0', dtype=torch.float64)
tensor([-267.9386, -202.8342, -251.9210, -169.6704, -258.3804],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0651, device='cuda:0', dtype=torch.float64)
tensor([-267.4054, -202.6411, -251.7648, -169.4712, -257.9269],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0776, device='cuda:0', dtype=torch.float64)
tensor([-266.8790, -202.4302, -251.6363, -169.3122, -257.4529],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0632, device='cuda:0', dtype=torch.float64)
tensor([-266.4435, -202.2408, -251.4832, -169.1845, -256.9905],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0647, device='cuda:0', dtype=torch.float64)
tensor([-266.1014, -202.1045, -251.2734, -169.1004, -256.6631],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0716, device='cuda:0', dtype=torch.float64)
tensor([-265.7649, -201.9814, -251.0587, -169.0799, -256.3537],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0672, device='cuda:0', dtype=torch.float64)
tensor([-265.4217, -201.9080, -250.8888, -169.0628, -256.0667],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0724, device='cuda:0', dtype=torch.float64)
tensor([-265.0982, -201.8613, -250.7422, -169.0227, -255.8029],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0600, device='cuda:0', dtype=torch.float64)
tensor([-264.7169, -201.8178, -250.6421, -168.9405, -255.5022],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0649, device='cuda:0', dtype=torch.float64)
tensor([-264.4083, -201.7506, -250.5429, -168.8963, -255.2380],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0580, device='cuda:0', dtype=torch.float64)
tensor([-264.1528, -201.6562, -250.4182, -168.8486, -254.9637],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0700, device='cuda:0', dtype=torch.float64)
tensor([-263.8560, -201.5451, -250.2472, -168.7810, -254.6521],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0673, device='cuda:0', dtype=torch.float64)
tensor([-263.5687, -201.4259, -250.1825, -168.7561, -254.3776],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0564, device='cuda:0', dtype=torch.float64)
tensor([-263.2865, -201.2841, -250.1770, -168.7011, -254.0798],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0550, device='cuda:0', dtype=torch.float64)
tensor([-262.9970, -201.1129, -250.2340, -168.6666, -253.7721],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0638, device='cuda:0', dtype=torch.float64)
tensor([-262.7549, -200.9147, -250.0532, -168.5221, -253.5374],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0690, device='cuda:0', dtype=torch.float64)
tensor([-262.4730, -200.7498, -249.9188, -168.4206, -253.3034],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0697, device='cuda:0', dtype=torch.float64)
tensor([-262.2495, -200.5884, -249.6389, -168.3004, -253.1660],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0633, device='cuda:0', dtype=torch.float64)
tensor([-262.0484, -200.4104, -249.3574, -168.2220, -252.9927],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0663, device='cuda:0', dtype=torch.float64)
tensor([-261.8078, -200.2606, -249.0791, -168.0641, -252.8452],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0630, device='cuda:0', dtype=torch.float64)
tensor([-261.5975, -200.1063, -248.7329, -167.9037, -252.7391],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0602, device='cuda:0', dtype=torch.float64)
tensor([-261.3774, -199.9406, -248.4506, -167.7158, -252.6177],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0661, device='cuda:0', dtype=torch.float64)
tensor([-261.1866, -199.8133, -248.0800, -167.4932, -252.5331],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0527, device='cuda:0', dtype=torch.float64)
tensor([-261.0129, -199.6408, -247.6654, -167.2858, -252.4054],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0597, device='cuda:0', dtype=torch.float64)
tensor([-260.7821, -199.4530, -247.2135, -167.0158, -252.2711],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0753, device='cuda:0', dtype=torch.float64)
tensor([-260.5263, -199.2418, -246.7971, -166.8041, -252.0625],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0642, device='cuda:0', dtype=torch.float64)
tensor([-260.2745, -199.0572, -246.3903, -166.5943, -251.8398],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0542, device='cuda:0', dtype=torch.float64)
tensor([-260.0236, -198.8768, -245.9482, -166.3671, -251.5889],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0599, device='cuda:0', dtype=torch.float64)
tensor([-259.7193, -198.6938, -245.6382, -166.2478, -251.3439],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0541, device='cuda:0', dtype=torch.float64)
tensor([-259.4577, -198.5280, -245.2136, -166.1037, -251.1481],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0489, device='cuda:0', dtype=torch.float64)
tensor([-259.2781, -198.3872, -244.7975, -165.9938, -251.0036],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0537, device='cuda:0', dtype=torch.float64)
tensor([-259.0389, -198.2607, -244.4981, -165.8846, -250.8419],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0691, device='cuda:0', dtype=torch.float64)
tensor([-258.7709, -198.1570, -244.1974, -165.8099, -250.6997],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0630, device='cuda:0', dtype=torch.float64)
tensor([-258.5208, -198.0584, -243.9996, -165.7302, -250.6010],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0624, device='cuda:0', dtype=torch.float64)
tensor([-258.3478, -197.9445, -243.7412, -165.6623, -250.5302],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0534, device='cuda:0', dtype=torch.float64)
tensor([-258.1488, -197.8352, -243.6203, -165.5991, -250.4328],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0703, device='cuda:0', dtype=torch.float64)
tensor([-257.9424, -197.7214, -243.5798, -165.5350, -250.3216],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0609, device='cuda:0', dtype=torch.float64)
tensor([-257.7279, -197.6267, -243.5611, -165.5218, -250.2394],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0578, device='cuda:0', dtype=torch.float64)
tensor([-257.4816, -197.5852, -243.6648, -165.5130, -250.1534],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0568, device='cuda:0', dtype=torch.float64)
tensor([-257.2320, -197.5231, -243.6738, -165.4389, -250.0555],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0640, device='cuda:0', dtype=torch.float64)
tensor([-257.1080, -197.4536, -243.5167, -165.3909, -249.9874],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0637, device='cuda:0', dtype=torch.float64)
tensor([-256.9798, -197.3394, -243.3631, -165.3014, -249.8739],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0553, device='cuda:0', dtype=torch.float64)
tensor([-256.8540, -197.2146, -243.2382, -165.2175, -249.7671],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0736, device='cuda:0', dtype=torch.float64)
tensor([-256.7210, -197.0806, -243.1727, -165.1268, -249.5996],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0556, device='cuda:0', dtype=torch.float64)
tensor([-256.5995, -196.9354, -243.1127, -165.0463, -249.4418],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0596, device='cuda:0', dtype=torch.float64)
tensor([-256.4661, -196.8118, -243.0541, -164.9332, -249.3089],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0559, device='cuda:0', dtype=torch.float64)
tensor([-256.3007, -196.7344, -243.0904, -164.8950, -249.2184],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0604, device='cuda:0', dtype=torch.float64)
tensor([-256.1748, -196.6323, -242.9774, -164.8447, -249.1423],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0457, device='cuda:0', dtype=torch.float64)
tensor([-256.0729, -196.5263, -242.8334, -164.8190, -249.1031],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0652, device='cuda:0', dtype=torch.float64)
tensor([-255.9974, -196.4280, -242.7118, -164.8251, -249.0645],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0567, device='cuda:0', dtype=torch.float64)
tensor([-255.9077, -196.2882, -242.5155, -164.7748, -248.9740],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0606, device='cuda:0', dtype=torch.float64)
tensor([-255.7556, -196.1381, -242.3723, -164.7385, -248.8347],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0648, device='cuda:0', dtype=torch.float64)
tensor([-255.6343, -195.9843, -242.2144, -164.6799, -248.6953],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0525, device='cuda:0', dtype=torch.float64)
tensor([-255.5257, -195.8451, -242.0026, -164.6482, -248.6099],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0600, device='cuda:0', dtype=torch.float64)
tensor([-255.4855, -195.7074, -241.7192, -164.5800, -248.5851],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0505, device='cuda:0', dtype=torch.float64)
tensor([-255.4361, -195.5775, -241.4356, -164.5018, -248.5221],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0504, device='cuda:0', dtype=torch.float64)
tensor([-255.4363, -195.4628, -241.2012, -164.4375, -248.4935],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0491, device='cuda:0', dtype=torch.float64)
tensor([-255.3938, -195.4104, -241.0361, -164.3975, -248.4833],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0565, device='cuda:0', dtype=torch.float64)
tensor([-255.3353, -195.3690, -240.9084, -164.3488, -248.4936],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0467, device='cuda:0', dtype=torch.float64)
tensor([-255.2939, -195.2885, -240.7375, -164.3256, -248.4617],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0622, device='cuda:0', dtype=torch.float64)
tensor([-255.2713, -195.2534, -240.6455, -164.3633, -248.4566],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0545, device='cuda:0', dtype=torch.float64)
tensor([-255.2609, -195.2052, -240.4723, -164.3661, -248.4149],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0562, device='cuda:0', dtype=torch.float64)
tensor([-255.2571, -195.1372, -240.3154, -164.3848, -248.3651],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0564, device='cuda:0', dtype=torch.float64)
tensor([-255.2760, -195.0432, -240.0495, -164.3185, -248.2900],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0495, device='cuda:0', dtype=torch.float64)
tensor([-255.2539, -194.9521, -239.8029, -164.2406, -248.1971],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0586, device='cuda:0', dtype=torch.float64)
tensor([-255.2570, -194.8538, -239.5202, -164.1580, -248.1182],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0511, device='cuda:0', dtype=torch.float64)
tensor([-255.3094, -194.7779, -239.2076, -164.1116, -248.0880],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0534, device='cuda:0', dtype=torch.float64)
tensor([-255.2918, -194.7050, -239.0288, -164.0326, -248.0561],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0604, device='cuda:0', dtype=torch.float64)
tensor([-255.3061, -194.6705, -238.8377, -163.9387, -248.0419],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0493, device='cuda:0', dtype=torch.float64)
tensor([-255.2389, -194.6279, -238.7644, -163.8863, -247.9868],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0515, device='cuda:0', dtype=torch.float64)
tensor([-255.1875, -194.5783, -238.6271, -163.8124, -247.9460],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0546, device='cuda:0', dtype=torch.float64)
tensor([-255.1562, -194.5572, -238.5653, -163.8056, -247.8984],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0530, device='cuda:0', dtype=torch.float64)
tensor([-255.1281, -194.5098, -238.4243, -163.7949, -247.8045],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0532, device='cuda:0', dtype=torch.float64)
tensor([-255.1807, -194.4497, -238.2077, -163.8118, -247.7871],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0551, device='cuda:0', dtype=torch.float64)
tensor([-255.2132, -194.3849, -238.0510, -163.7962, -247.7579],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0470, device='cuda:0', dtype=torch.float64)
tensor([-255.2617, -194.3234, -237.8489, -163.7649, -247.7063],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0541, device='cuda:0', dtype=torch.float64)
tensor([-255.2726, -194.3237, -237.6909, -163.7804, -247.6936],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0505, device='cuda:0', dtype=torch.float64)
tensor([-255.2528, -194.3364, -237.6073, -163.8014, -247.6917],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0418, device='cuda:0', dtype=torch.float64)
tensor([-255.2425, -194.3697, -237.4719, -163.8124, -247.7098],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0560, device='cuda:0', dtype=torch.float64)
tensor([-255.2204, -194.4089, -237.3706, -163.8516, -247.7380],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0536, device='cuda:0', dtype=torch.float64)
tensor([-255.1150, -194.3945, -237.3278, -163.8309, -247.6481],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0491, device='cuda:0', dtype=torch.float64)
tensor([-254.9228, -194.3517, -237.3079, -163.7781, -247.5004],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0522, device='cuda:0', dtype=torch.float64)
tensor([-254.6879, -194.3204, -237.3075, -163.7349, -247.3300],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0508, device='cuda:0', dtype=torch.float64)
tensor([-254.4506, -194.3125, -237.2967, -163.7072, -247.1782],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0459, device='cuda:0', dtype=torch.float64)
tensor([-254.2301, -194.2682, -237.2652, -163.6620, -247.0381],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0573, device='cuda:0', dtype=torch.float64)
tensor([-253.9425, -194.1741, -237.2420, -163.6047, -246.7835],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0542, device='cuda:0', dtype=torch.float64)
tensor([-253.7132, -194.0602, -237.1510, -163.5195, -246.5218],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0454, device='cuda:0', dtype=torch.float64)
tensor([-253.4773, -193.9447, -237.0999, -163.4332, -246.2522],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0439, device='cuda:0', dtype=torch.float64)
tensor([-253.2887, -193.8431, -236.9746, -163.3367, -246.0392],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0496, device='cuda:0', dtype=torch.float64)
tensor([-253.0686, -193.7529, -236.9681, -163.2764, -245.8117],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0606, device='cuda:0', dtype=torch.float64)
tensor([-252.8693, -193.6789, -236.9799, -163.2301, -245.6244],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0492, device='cuda:0', dtype=torch.float64)
tensor([-252.6537, -193.6055, -236.9676, -163.2046, -245.4537],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0473, device='cuda:0', dtype=torch.float64)
tensor([-252.4596, -193.5316, -236.9284, -163.2030, -245.3103],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0462, device='cuda:0', dtype=torch.float64)
tensor([-252.2929, -193.4057, -236.8448, -163.1495, -245.1523],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0490, device='cuda:0', dtype=torch.float64)
tensor([-252.1104, -193.2780, -236.7519, -163.0606, -244.9721],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0499, device='cuda:0', dtype=torch.float64)
tensor([-251.9386, -193.1181, -236.6411, -162.9173, -244.7878],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0490, device='cuda:0', dtype=torch.float64)
tensor([-251.7714, -192.9620, -236.5541, -162.8240, -244.6245],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0530, device='cuda:0', dtype=torch.float64)
tensor([-251.6484, -192.8131, -236.3282, -162.6831, -244.5118],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0471, device='cuda:0', dtype=torch.float64)
tensor([-251.4685, -192.7066, -236.2424, -162.6029, -244.4415],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0520, device='cuda:0', dtype=torch.float64)
tensor([-251.2829, -192.5824, -236.1485, -162.4961, -244.3341],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0411, device='cuda:0', dtype=torch.float64)
tensor([-251.1452, -192.4514, -236.0233, -162.4088, -244.2360],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0472, device='cuda:0', dtype=torch.float64)
tensor([-250.9817, -192.3361, -235.9473, -162.3263, -244.1302],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0497, device='cuda:0', dtype=torch.float64)
tensor([-250.8025, -192.2348, -235.9301, -162.2820, -243.9909],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0493, device='cuda:0', dtype=torch.float64)
tensor([-250.5689, -192.1348, -235.9586, -162.2272, -243.8560],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0513, device='cuda:0', dtype=torch.float64)
tensor([-250.3400, -192.0129, -236.1128, -162.1890, -243.6916],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0485, device='cuda:0', dtype=torch.float64)
tensor([-250.0838, -191.8851, -236.3401, -162.1340, -243.5007],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0398, device='cuda:0', dtype=torch.float64)
tensor([-249.8156, -191.7543, -236.5729, -162.0680, -243.2742],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0522, device='cuda:0', dtype=torch.float64)
tensor([-249.5400, -191.6133, -236.8322, -162.0037, -243.0787],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0483, device='cuda:0', dtype=torch.float64)
tensor([-249.2745, -191.4859, -237.1260, -161.9530, -242.9137],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0513, device='cuda:0', dtype=torch.float64)
tensor([-249.0200, -191.3581, -237.3667, -161.8391, -242.7737],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0505, device='cuda:0', dtype=torch.float64)
tensor([-248.7780, -191.1988, -237.5832, -161.6654, -242.6558],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0500, device='cuda:0', dtype=torch.float64)
tensor([-248.5614, -191.0358, -237.7297, -161.4679, -242.5087],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0477, device='cuda:0', dtype=torch.float64)
tensor([-248.3193, -190.8481, -237.8551, -161.2572, -242.3470],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0472, device='cuda:0', dtype=torch.float64)
tensor([-248.1317, -190.6399, -237.9437, -161.0642, -242.1983],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0496, device='cuda:0', dtype=torch.float64)
tensor([-247.9419, -190.4431, -238.0291, -160.8561, -242.0305],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0458, device='cuda:0', dtype=torch.float64)
tensor([-247.7782, -190.2419, -238.0973, -160.6680, -241.8924],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0421, device='cuda:0', dtype=torch.float64)
tensor([-247.6066, -190.0656, -238.1634, -160.4996, -241.7455],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0463, device='cuda:0', dtype=torch.float64)
tensor([-247.3980, -189.9277, -238.3025, -160.3849, -241.6001],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0466, device='cuda:0', dtype=torch.float64)
tensor([-247.1750, -189.7823, -238.4486, -160.2464, -241.4397],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0484, device='cuda:0', dtype=torch.float64)
tensor([-246.9123, -189.6196, -238.6165, -160.0982, -241.2488],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0396, device='cuda:0', dtype=torch.float64)
tensor([-246.6744, -189.4379, -238.7236, -159.9216, -241.0579],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0429, device='cuda:0', dtype=torch.float64)
tensor([-246.4364, -189.2654, -238.8272, -159.7495, -240.8890],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0469, device='cuda:0', dtype=torch.float64)
tensor([-246.1917, -189.1122, -238.8946, -159.5763, -240.7245],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0562, device='cuda:0', dtype=torch.float64)
tensor([-245.9917, -188.9055, -238.8486, -159.3493, -240.5576],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0431, device='cuda:0', dtype=torch.float64)
tensor([-245.8328, -188.7032, -238.7397, -159.1011, -240.3912],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0557, device='cuda:0', dtype=torch.float64)
tensor([-245.6916, -188.4877, -238.6761, -158.8944, -240.2215],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0526, device='cuda:0', dtype=torch.float64)
tensor([-245.5692, -188.2978, -238.6300, -158.7537, -240.0493],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0559, device='cuda:0', dtype=torch.float64)
tensor([-245.4424, -188.1213, -238.5869, -158.6195, -239.8991],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0469, device='cuda:0', dtype=torch.float64)
tensor([-245.2660, -187.9871, -238.6246, -158.5378, -239.7570],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0463, device='cuda:0', dtype=torch.float64)
tensor([-245.1169, -187.8403, -238.6869, -158.4755, -239.6381],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0473, device='cuda:0', dtype=torch.float64)
tensor([-244.9352, -187.6744, -238.7942, -158.4161, -239.4749],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0487, device='cuda:0', dtype=torch.float64)
tensor([-244.7680, -187.5165, -238.9218, -158.3539, -239.3486],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0482, device='cuda:0', dtype=torch.float64)
tensor([-244.6358, -187.3501, -238.9666, -158.2910, -239.2258],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0433, device='cuda:0', dtype=torch.float64)
tensor([-244.4853, -187.1736, -238.9474, -158.2024, -239.0949],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0467, device='cuda:0', dtype=torch.float64)
tensor([-244.3352, -186.9912, -238.9468, -158.0631, -238.9778],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0509, device='cuda:0', dtype=torch.float64)
tensor([-244.1372, -186.8007, -239.0502, -157.9301, -238.8435],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0450, device='cuda:0', dtype=torch.float64)
tensor([-243.9474, -186.6271, -239.2354, -157.8311, -238.7250],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0546, device='cuda:0', dtype=torch.float64)
tensor([-243.7581, -186.4464, -239.4875, -157.7407, -238.6495],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0435, device='cuda:0', dtype=torch.float64)
tensor([-243.5633, -186.2657, -239.6921, -157.6372, -238.5833],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0433, device='cuda:0', dtype=torch.float64)
tensor([-243.3924, -186.0924, -239.8658, -157.5687, -238.5062],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0420, device='cuda:0', dtype=torch.float64)
tensor([-243.2537, -185.9075, -239.9364, -157.4981, -238.4498],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0437, device='cuda:0', dtype=torch.float64)
tensor([-243.0807, -185.7580, -239.9971, -157.4341, -238.4142],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0433, device='cuda:0', dtype=torch.float64)
tensor([-242.8968, -185.6139, -240.0567, -157.3430, -238.3777],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0434, device='cuda:0', dtype=torch.float64)
tensor([-242.6987, -185.4681, -240.0609, -157.2401, -238.3326],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0546, device='cuda:0', dtype=torch.float64)
tensor([-242.5029, -185.2637, -240.0623, -157.1134, -238.2422],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0501, device='cuda:0', dtype=torch.float64)
tensor([-242.3084, -185.0287, -240.0783, -156.9949, -238.1189],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0465, device='cuda:0', dtype=torch.float64)
tensor([-242.1142, -184.8044, -240.0785, -156.8807, -238.0165],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0486, device='cuda:0', dtype=torch.float64)
tensor([-241.9666, -184.5668, -240.0573, -156.7681, -237.9022],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0378, device='cuda:0', dtype=torch.float64)
tensor([-241.8039, -184.3424, -240.0751, -156.6562, -237.7762],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0402, device='cuda:0', dtype=torch.float64)
tensor([-241.6803, -184.0661, -239.9984, -156.5117, -237.6306],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0498, device='cuda:0', dtype=torch.float64)
tensor([-241.5380, -183.7841, -239.9351, -156.3659, -237.4589],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0480, device='cuda:0', dtype=torch.float64)
tensor([-241.3501, -183.4833, -239.8284, -156.2080, -237.2517],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0490, device='cuda:0', dtype=torch.float64)
tensor([-241.1545, -183.1685, -239.7245, -156.0470, -237.0345],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0465, device='cuda:0', dtype=torch.float64)
tensor([-240.9257, -182.8596, -239.6717, -155.8806, -236.7927],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0439, device='cuda:0', dtype=torch.float64)
tensor([-240.7127, -182.5585, -239.6402, -155.7466, -236.5700],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0481, device='cuda:0', dtype=torch.float64)
tensor([-240.4761, -182.2641, -239.5845, -155.6008, -236.3035],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0468, device='cuda:0', dtype=torch.float64)
tensor([-240.2429, -181.9767, -239.6267, -155.4638, -236.0574],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0505, device='cuda:0', dtype=torch.float64)
tensor([-240.0249, -181.7276, -239.7357, -155.3325, -235.8429],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0458, device='cuda:0', dtype=torch.float64)
tensor([-239.8232, -181.4906, -239.9068, -155.1839, -235.6719],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0500, device='cuda:0', dtype=torch.float64)
tensor([-239.6437, -181.2431, -240.0695, -155.0387, -235.5053],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0395, device='cuda:0', dtype=torch.float64)
tensor([-239.4892, -180.9969, -240.2045, -154.8842, -235.3422],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0458, device='cuda:0', dtype=torch.float64)
tensor([-239.3476, -180.7204, -240.2969, -154.6940, -235.1550],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0433, device='cuda:0', dtype=torch.float64)
tensor([-239.2469, -180.4840, -240.3921, -154.5348, -235.0074],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0451, device='cuda:0', dtype=torch.float64)
tensor([-239.1869, -180.2235, -240.4729, -154.3711, -234.8959],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0570, device='cuda:0', dtype=torch.float64)
tensor([-239.1481, -179.8946, -240.4889, -154.1734, -234.7436],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0420, device='cuda:0', dtype=torch.float64)
tensor([-239.0864, -179.5841, -240.5460, -153.9911, -234.5936],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0440, device='cuda:0', dtype=torch.float64)
tensor([-239.0481, -179.2560, -240.5220, -153.7906, -234.4334],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0458, device='cuda:0', dtype=torch.float64)
tensor([-238.9603, -178.9532, -240.5974, -153.5931, -234.2548],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0439, device='cuda:0', dtype=torch.float64)
tensor([-238.8585, -178.6532, -240.6435, -153.4089, -234.0747],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0471, device='cuda:0', dtype=torch.float64)
tensor([-238.7824, -178.3548, -240.6629, -153.2398, -233.8970],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0484, device='cuda:0', dtype=torch.float64)
tensor([-238.6939, -178.0776, -240.6964, -153.0804, -233.7429],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0438, device='cuda:0', dtype=torch.float64)
tensor([-238.5880, -177.8192, -240.7300, -152.9428, -233.5989],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0467, device='cuda:0', dtype=torch.float64)
tensor([-238.4698, -177.5574, -240.7730, -152.7965, -233.4338],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0470, device='cuda:0', dtype=torch.float64)
tensor([-238.3572, -177.3066, -240.7827, -152.6570, -233.3005],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0436, device='cuda:0', dtype=torch.float64)
tensor([-238.2252, -177.0479, -240.8227, -152.5059, -233.1491],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0395, device='cuda:0', dtype=torch.float64)
tensor([-238.0481, -176.7977, -240.8729, -152.3262, -233.0014],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0491, device='cuda:0', dtype=torch.float64)
tensor([-237.8723, -176.5524, -240.9492, -152.1532, -232.8707],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0480, device='cuda:0', dtype=torch.float64)
tensor([-237.7128, -176.2974, -241.0198, -151.9805, -232.7298],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0465, device='cuda:0', dtype=torch.float64)
tensor([-237.5710, -176.0214, -241.1054, -151.8028, -232.6021],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0513, device='cuda:0', dtype=torch.float64)
tensor([-237.3770, -175.7322, -241.1267, -151.6065, -232.3961],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0470, device='cuda:0', dtype=torch.float64)
tensor([-237.2144, -175.4260, -241.1200, -151.4060, -232.1974],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0411, device='cuda:0', dtype=torch.float64)
tensor([-237.0839, -175.1198, -241.0906, -151.2020, -231.9969],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0427, device='cuda:0', dtype=torch.float64)
tensor([-236.9275, -174.7866, -241.0898, -150.9891, -231.7915],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0511, device='cuda:0', dtype=torch.float64)
tensor([-236.7853, -174.4274, -241.1431, -150.7766, -231.5698],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0457, device='cuda:0', dtype=torch.float64)
tensor([-236.6581, -174.0641, -241.1152, -150.5595, -231.3640],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0410, device='cuda:0', dtype=torch.float64)
tensor([-236.5683, -173.6833, -241.1281, -150.3468, -231.1851],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0421, device='cuda:0', dtype=torch.float64)
tensor([-236.5097, -173.3227, -241.1150, -150.1454, -231.0293],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0513, device='cuda:0', dtype=torch.float64)
tensor([-236.4220, -172.9538, -241.0596, -149.9167, -230.8683],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0517, device='cuda:0', dtype=torch.float64)
tensor([-236.3095, -172.5548, -240.9857, -149.6955, -230.6813],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0487, device='cuda:0', dtype=torch.float64)
tensor([-236.2293, -172.1765, -240.9155, -149.5011, -230.4808],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0484, device='cuda:0', dtype=torch.float64)
tensor([-236.1600, -171.8052, -240.8081, -149.3083, -230.2985],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0505, device='cuda:0', dtype=torch.float64)
tensor([-236.1182, -171.4259, -240.6892, -149.1155, -230.1032],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0487, device='cuda:0', dtype=torch.float64)
tensor([-236.0230, -171.0434, -240.6183, -148.9450, -229.8928],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0427, device='cuda:0', dtype=torch.float64)
tensor([-235.9330, -170.6522, -240.5156, -148.7713, -229.6878],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0460, device='cuda:0', dtype=torch.float64)
tensor([-235.8251, -170.3097, -240.4636, -148.6023, -229.4980],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0470, device='cuda:0', dtype=torch.float64)
tensor([-235.7272, -169.9520, -240.3333, -148.4120, -229.2899],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0505, device='cuda:0', dtype=torch.float64)
tensor([-235.6217, -169.6059, -240.2535, -148.2587, -229.0874],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0509, device='cuda:0', dtype=torch.float64)
tensor([-235.4986, -169.2219, -240.1862, -148.0638, -228.8671],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0435, device='cuda:0', dtype=torch.float64)
tensor([-235.3129, -168.8961, -240.2591, -147.9097, -228.6550],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0494, device='cuda:0', dtype=torch.float64)
tensor([-235.1691, -168.5666, -240.3148, -147.7344, -228.4709],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0490, device='cuda:0', dtype=torch.float64)
tensor([-235.0759, -168.2297, -240.3446, -147.5347, -228.3073],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0483, device='cuda:0', dtype=torch.float64)
tensor([-234.9638, -167.8699, -240.3350, -147.2877, -228.1241],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0508, device='cuda:0', dtype=torch.float64)
tensor([-234.8510, -167.5105, -240.3167, -147.0421, -227.9506],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0528, device='cuda:0', dtype=torch.float64)
tensor([-234.7687, -167.1347, -240.2415, -146.7793, -227.7765],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0536, device='cuda:0', dtype=torch.float64)
tensor([-234.6491, -166.7220, -240.1531, -146.4882, -227.5681],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0490, device='cuda:0', dtype=torch.float64)
tensor([-234.5234, -166.3315, -240.0511, -146.2349, -227.3391],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0477, device='cuda:0', dtype=torch.float64)
tensor([-234.3745, -165.9621, -240.0005, -146.0093, -227.1212],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0621, device='cuda:0', dtype=torch.float64)
tensor([-234.2170, -165.5319, -239.9047, -145.7537, -226.8404],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0484, device='cuda:0', dtype=torch.float64)
tensor([-234.0031, -165.1147, -239.8460, -145.5183, -226.5363],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0464, device='cuda:0', dtype=torch.float64)
tensor([-233.7968, -164.7296, -239.8501, -145.3303, -226.2448],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0494, device='cuda:0', dtype=torch.float64)
tensor([-233.5776, -164.3252, -239.8191, -145.1267, -225.9320],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0595, device='cuda:0', dtype=torch.float64)
tensor([-233.3082, -163.9225, -239.8304, -144.9007, -225.6242],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0618, device='cuda:0', dtype=torch.float64)
tensor([-233.0378, -163.5006, -239.9636, -144.6872, -225.3561],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0478, device='cuda:0', dtype=torch.float64)
tensor([-232.8016, -163.0955, -240.1363, -144.5000, -225.1323],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0479, device='cuda:0', dtype=torch.float64)
tensor([-232.5781, -162.7147, -240.3677, -144.3782, -224.9355],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0597, device='cuda:0', dtype=torch.float64)
tensor([-232.3121, -162.3307, -240.6046, -144.2621, -224.7077],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0487, device='cuda:0', dtype=torch.float64)
tensor([-232.1076, -161.9433, -240.7872, -144.1762, -224.4810],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0441, device='cuda:0', dtype=torch.float64)
tensor([-231.9328, -161.5556, -240.9881, -144.0765, -224.3048],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0533, device='cuda:0', dtype=torch.float64)
tensor([-231.8067, -161.1492, -241.1782, -143.9630, -224.1402],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0555, device='cuda:0', dtype=torch.float64)
tensor([-231.6806, -160.7399, -241.3252, -143.8591, -223.9957],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0450, device='cuda:0', dtype=torch.float64)
tensor([-231.5811, -160.3429, -241.4915, -143.7408, -223.8912],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0509, device='cuda:0', dtype=torch.float64)
tensor([-231.4956, -159.9449, -241.6317, -143.5881, -223.7919],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0465, device='cuda:0', dtype=torch.float64)
tensor([-231.3958, -159.5741, -241.7737, -143.4390, -223.6944],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0641, device='cuda:0', dtype=torch.float64)
tensor([-231.2363, -159.1422, -241.8793, -143.2666, -223.5539],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0457, device='cuda:0', dtype=torch.float64)
tensor([-231.0789, -158.7118, -242.0073, -143.0851, -223.4299],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0479, device='cuda:0', dtype=torch.float64)
tensor([-230.9102, -158.3119, -242.1825, -142.9361, -223.3049],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0492, device='cuda:0', dtype=torch.float64)
tensor([-230.7315, -157.9159, -242.3452, -142.7899, -223.1533],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0488, device='cuda:0', dtype=torch.float64)
tensor([-230.5954, -157.5023, -242.4627, -142.6432, -223.0140],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0445, device='cuda:0', dtype=torch.float64)
tensor([-230.4602, -157.1250, -242.5640, -142.5034, -222.8777],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0428, device='cuda:0', dtype=torch.float64)
tensor([-230.3321, -156.7729, -242.6499, -142.3643, -222.7730],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0611, device='cuda:0', dtype=torch.float64)
tensor([-230.1734, -156.3896, -242.6833, -142.2100, -222.6474],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0495, device='cuda:0', dtype=torch.float64)
tensor([-230.0423, -155.9852, -242.6832, -142.0202, -222.5325],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0463, device='cuda:0', dtype=torch.float64)
tensor([-229.9187, -155.5991, -242.7386, -141.8359, -222.4484],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0483, device='cuda:0', dtype=torch.float64)
tensor([-229.8095, -155.1794, -242.7794, -141.6362, -222.3385],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0533, device='cuda:0', dtype=torch.float64)
tensor([-229.7182, -154.7707, -242.8550, -141.4363, -222.2459],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0525, device='cuda:0', dtype=torch.float64)
tensor([-229.6375, -154.3512, -242.9658, -141.2584, -222.1718],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0465, device='cuda:0', dtype=torch.float64)
tensor([-229.5851, -153.9287, -243.0954, -141.0683, -222.1365],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0500, device='cuda:0', dtype=torch.float64)
tensor([-229.4853, -153.5206, -243.2463, -140.8860, -222.1047],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0495, device='cuda:0', dtype=torch.float64)
tensor([-229.3820, -153.1175, -243.3316, -140.6825, -222.0777],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0548, device='cuda:0', dtype=torch.float64)
tensor([-229.2315, -152.6947, -243.3802, -140.4592, -222.0280],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0487, device='cuda:0', dtype=torch.float64)
tensor([-229.0365, -152.2669, -243.4548, -140.2570, -221.9602],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0548, device='cuda:0', dtype=torch.float64)
tensor([-228.8044, -151.8236, -243.5187, -140.0542, -221.8767],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0550, device='cuda:0', dtype=torch.float64)
tensor([-228.6100, -151.3530, -243.5821, -139.8438, -221.7882],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0555, device='cuda:0', dtype=torch.float64)
tensor([-228.4560, -150.8530, -243.5535, -139.5979, -221.7090],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0443, device='cuda:0', dtype=torch.float64)
tensor([-228.2795, -150.3865, -243.6106, -139.3729, -221.6196],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0536, device='cuda:0', dtype=torch.float64)
tensor([-228.0274, -149.9403, -243.7269, -139.1590, -221.5278],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0495, device='cuda:0', dtype=torch.float64)
tensor([-227.7975, -149.5039, -243.8348, -138.9448, -221.4466],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0551, device='cuda:0', dtype=torch.float64)
tensor([-227.5102, -149.0603, -243.9555, -138.7198, -221.3575],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0511, device='cuda:0', dtype=torch.float64)
tensor([-227.2613, -148.6437, -244.0874, -138.5096, -221.2987],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0533, device='cuda:0', dtype=torch.float64)
tensor([-227.0012, -148.2363, -244.2286, -138.3237, -221.2058],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0573, device='cuda:0', dtype=torch.float64)
tensor([-226.7785, -147.8081, -244.3559, -138.1165, -221.1247],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0530, device='cuda:0', dtype=torch.float64)
tensor([-226.5223, -147.3677, -244.5457, -137.9089, -221.0021],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0429, device='cuda:0', dtype=torch.float64)
tensor([-226.2767, -146.9627, -244.7575, -137.7041, -220.8955],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0410, device='cuda:0', dtype=torch.float64)
tensor([-225.9984, -146.5641, -244.9292, -137.4965, -220.7824],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0597, device='cuda:0', dtype=torch.float64)
tensor([-225.6806, -146.1503, -245.0301, -137.2841, -220.6680],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0486, device='cuda:0', dtype=torch.float64)
tensor([-225.3693, -145.7699, -245.1582, -137.1055, -220.5700],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0541, device='cuda:0', dtype=torch.float64)
tensor([-225.0790, -145.3662, -245.1996, -136.9121, -220.4406],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0526, device='cuda:0', dtype=torch.float64)
tensor([-224.7882, -144.9532, -245.2010, -136.7162, -220.3090],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0489, device='cuda:0', dtype=torch.float64)
tensor([-224.4690, -144.5469, -245.2194, -136.5114, -220.1666],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0562, device='cuda:0', dtype=torch.float64)
tensor([-224.0699, -144.1293, -245.2422, -136.2984, -219.9913],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0566, device='cuda:0', dtype=torch.float64)
tensor([-223.6394, -143.7021, -245.2068, -136.0601, -219.7908],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0527, device='cuda:0', dtype=torch.float64)
tensor([-223.2190, -143.2689, -245.1450, -135.8161, -219.5868],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0512, device='cuda:0', dtype=torch.float64)
tensor([-222.8233, -142.8783, -245.1379, -135.5820, -219.4503],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0465, device='cuda:0', dtype=torch.float64)
tensor([-222.4391, -142.5098, -245.1982, -135.3756, -219.3193],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0613, device='cuda:0', dtype=torch.float64)
tensor([-221.9604, -142.1324, -245.2583, -135.1771, -219.1358],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0546, device='cuda:0', dtype=torch.float64)
tensor([-221.5058, -141.7162, -245.3070, -134.9612, -218.9527],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0460, device='cuda:0', dtype=torch.float64)
tensor([-221.1210, -141.3252, -245.3908, -134.7563, -218.8367],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0573, device='cuda:0', dtype=torch.float64)
tensor([-220.7339, -140.9394, -245.4758, -134.5538, -218.7177],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0607, device='cuda:0', dtype=torch.float64)
tensor([-220.3673, -140.5371, -245.4952, -134.3097, -218.6185],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0522, device='cuda:0', dtype=torch.float64)
tensor([-219.9487, -140.1494, -245.6002, -134.1203, -218.5007],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0578, device='cuda:0', dtype=torch.float64)
tensor([-219.4841, -139.7471, -245.7377, -133.9389, -218.3834],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0672, device='cuda:0', dtype=torch.float64)
tensor([-218.9993, -139.3129, -245.9314, -133.7849, -218.2337],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0469, device='cuda:0', dtype=torch.float64)
tensor([-218.5587, -138.9214, -246.1284, -133.6284, -218.1105],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0600, device='cuda:0', dtype=torch.float64)
tensor([-218.0939, -138.5247, -246.2957, -133.4963, -217.9628],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0639, device='cuda:0', dtype=torch.float64)
tensor([-217.6922, -138.1069, -246.5019, -133.3870, -217.8367],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0662, device='cuda:0', dtype=torch.float64)
tensor([-217.3348, -137.6701, -246.6672, -133.2137, -217.7861],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0592, device='cuda:0', dtype=torch.float64)
tensor([-216.9734, -137.2266, -246.7882, -133.0237, -217.7329],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0561, device='cuda:0', dtype=torch.float64)
tensor([-216.6075, -136.8057, -246.9706, -132.8061, -217.7231],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0498, device='cuda:0', dtype=torch.float64)
tensor([-216.2041, -136.3938, -247.2178, -132.6089, -217.6998],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0697, device='cuda:0', dtype=torch.float64)
tensor([-215.8167, -135.9530, -247.3612, -132.3568, -217.6672],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0561, device='cuda:0', dtype=torch.float64)
tensor([-215.3757, -135.4980, -247.4955, -132.1312, -217.6018],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0473, device='cuda:0', dtype=torch.float64)
tensor([-214.9046, -135.0640, -247.6561, -131.9437, -217.5288],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0649, device='cuda:0', dtype=torch.float64)
tensor([-214.3775, -134.6523, -247.8487, -131.7526, -217.4500],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0517, device='cuda:0', dtype=torch.float64)
tensor([-213.8758, -134.2459, -248.0388, -131.5731, -217.3845],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0522, device='cuda:0', dtype=torch.float64)
tensor([-213.3869, -133.8490, -248.2469, -131.4110, -217.3062],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0573, device='cuda:0', dtype=torch.float64)
tensor([-212.9322, -133.4575, -248.4131, -131.2276, -217.2601],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0636, device='cuda:0', dtype=torch.float64)
tensor([-212.3833, -133.0616, -248.6124, -131.0558, -217.1568],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0491, device='cuda:0', dtype=torch.float64)
tensor([-211.7919, -132.6953, -248.8341, -130.9053, -217.0461],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0487, device='cuda:0', dtype=torch.float64)
tensor([-211.1592, -132.3536, -249.0515, -130.7714, -216.9078],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0563, device='cuda:0', dtype=torch.float64)
tensor([-210.5278, -131.9943, -249.2756, -130.6256, -216.7763],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0480, device='cuda:0', dtype=torch.float64)
tensor([-209.8603, -131.6459, -249.5381, -130.5005, -216.6455],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0510, device='cuda:0', dtype=torch.float64)
tensor([-209.2402, -131.3267, -249.8584, -130.3982, -216.5359],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0641, device='cuda:0', dtype=torch.float64)
tensor([-208.6529, -130.9743, -250.0904, -130.2680, -216.4055],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0501, device='cuda:0', dtype=torch.float64)
tensor([-208.0553, -130.6643, -250.3740, -130.1628, -216.2906],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0600, device='cuda:0', dtype=torch.float64)
tensor([-207.4737, -130.3438, -250.6890, -130.0799, -216.1490],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0758, device='cuda:0', dtype=torch.float64)
tensor([-206.7981, -130.0036, -251.0335, -130.0121, -215.9682],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0654, device='cuda:0', dtype=torch.float64)
tensor([-206.1499, -129.6320, -251.3513, -129.9534, -215.7800],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0530, device='cuda:0', dtype=torch.float64)
tensor([-205.5640, -129.2735, -251.6553, -129.8814, -215.6588],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0624, device='cuda:0', dtype=torch.float64)
tensor([-204.9642, -128.8971, -251.9625, -129.8411, -215.4779],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0600, device='cuda:0', dtype=torch.float64)
tensor([-204.3049, -128.5156, -252.2619, -129.7988, -215.2746],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0587, device='cuda:0', dtype=torch.float64)
tensor([-203.6504, -128.1202, -252.5047, -129.7609, -215.0381],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0543, device='cuda:0', dtype=torch.float64)
tensor([-203.0914, -127.7665, -252.7361, -129.6913, -214.8814],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0516, device='cuda:0', dtype=torch.float64)
tensor([-202.5351, -127.4258, -252.9863, -129.6298, -214.7463],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0622, device='cuda:0', dtype=torch.float64)
tensor([-202.0120, -127.0681, -253.1827, -129.5350, -214.5975],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0744, device='cuda:0', dtype=torch.float64)
tensor([-201.4857, -126.6682, -253.3517, -129.4093, -214.4350],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0634, device='cuda:0', dtype=torch.float64)
tensor([-200.9352, -126.2520, -253.5692, -129.3244, -214.2468],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0590, device='cuda:0', dtype=torch.float64)
tensor([-200.3153, -125.8616, -253.8777, -129.2712, -214.0579],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0586, device='cuda:0', dtype=torch.float64)
tensor([-199.7188, -125.4909, -254.1805, -129.2004, -213.9274],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0533, device='cuda:0', dtype=torch.float64)
tensor([-199.1393, -125.1473, -254.5406, -129.1338, -213.8474],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0658, device='cuda:0', dtype=torch.float64)
tensor([-198.5139, -124.7878, -254.9059, -129.0752, -213.7430],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0528, device='cuda:0', dtype=torch.float64)
tensor([-197.9775, -124.4257, -255.2416, -128.9918, -213.6871],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0593, device='cuda:0', dtype=torch.float64)
tensor([-197.3858, -124.0799, -255.6649, -128.9353, -213.6321],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0702, device='cuda:0', dtype=torch.float64)
tensor([-196.7336, -123.7356, -256.0678, -128.8798, -213.5429],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0637, device='cuda:0', dtype=torch.float64)
tensor([-196.1302, -123.3687, -256.4165, -128.8309, -213.4421],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0593, device='cuda:0', dtype=torch.float64)
tensor([-195.5076, -123.0316, -256.7820, -128.8158, -213.3774],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0463, device='cuda:0', dtype=torch.float64)
tensor([-194.9110, -122.6939, -257.0918, -128.8125, -213.3134],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0592, device='cuda:0', dtype=torch.float64)
tensor([-194.3219, -122.3666, -257.3760, -128.8274, -213.2460],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0742, device='cuda:0', dtype=torch.float64)
tensor([-193.6846, -122.0126, -257.6315, -128.8320, -213.1431],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0728, device='cuda:0', dtype=torch.float64)
tensor([-193.0757, -121.6212, -257.8024, -128.8075, -213.0241],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0557, device='cuda:0', dtype=torch.float64)
tensor([-192.5367, -121.2584, -258.0041, -128.7786, -212.9535],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0623, device='cuda:0', dtype=torch.float64)
tensor([-191.9657, -120.8811, -258.2134, -128.7428, -212.8412],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0608, device='cuda:0', dtype=torch.float64)
tensor([-191.3479, -120.4997, -258.4243, -128.7200, -212.7221],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0623, device='cuda:0', dtype=torch.float64)
tensor([-190.7536, -120.1474, -258.6032, -128.6404, -212.6423],
       device='cuda:0', dtype=torch.float64)
Saved results to /home/idrissm/projects/def-mh541-ab/idrissm/neighborVCA/runs/results/tsp/tsp64_/home/idrissm/projects/def-mh541-ab/idrissm/neighborVCA/scripts/VCA/tsp/configHVCA64.json_20250925_034210.csv
rnn.0.0.weight tensor(0.3170, device='cuda:0', dtype=torch.float64)
tensor([-1.6865, -2.6073, -2.8708, -3.3009, -3.1848], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(5.0354, device='cuda:0', dtype=torch.float64)
tensor([-14.4420, -45.6815, -20.3319, -43.9481, -45.2178], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(262.2607, device='cuda:0', dtype=torch.float64)
tensor([-11.2595, -10.9702,  -3.4619,  -7.1320,  -5.7480], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(162.0420, device='cuda:0', dtype=torch.float64)
tensor([ -9.3402, -23.5550, -18.2759, -12.7365, -11.0287], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(226.8343, device='cuda:0', dtype=torch.float64)
tensor([ -5.1013,  -7.9205, -12.8064,  -8.7364,  -6.8890], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(138.3463, device='cuda:0', dtype=torch.float64)
tensor([-2.2540, -4.4399, -3.0293, -6.9713, -3.6957], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(97.7700, device='cuda:0', dtype=torch.float64)
tensor([-2.4050, -4.9466, -3.0162, -4.2190, -3.8884], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(91.0359, device='cuda:0', dtype=torch.float64)
tensor([-2.4210, -5.1243, -3.0232, -3.8561, -4.4951], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(59.1118, device='cuda:0', dtype=torch.float64)
tensor([-2.4941, -4.3644, -2.9887, -3.5073, -4.8500], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(57.7416, device='cuda:0', dtype=torch.float64)
tensor([-2.4295, -4.9567, -2.9402, -5.1881, -4.9919], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(71.7824, device='cuda:0', dtype=torch.float64)
tensor([-2.1484, -4.5509, -2.8442, -5.5030, -5.1297], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(69.8066, device='cuda:0', dtype=torch.float64)
tensor([-1.8962, -3.5013, -2.7821, -3.8131, -4.6408], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(45.6806, device='cuda:0', dtype=torch.float64)
tensor([-1.7557, -3.2289, -2.8226, -3.9438, -4.0377], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(22.9439, device='cuda:0', dtype=torch.float64)
tensor([-1.7300, -3.6117, -2.9312, -4.2317, -3.6481], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(13.2249, device='cuda:0', dtype=torch.float64)
tensor([-1.8300, -3.8361, -3.0405, -4.4370, -3.5013], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(23.7675, device='cuda:0', dtype=torch.float64)
tensor([-2.0913, -3.5180, -3.1395, -4.4936, -3.4649], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(39.2871, device='cuda:0', dtype=torch.float64)
tensor([-1.9173, -3.1173, -3.2190, -4.2455, -3.3831], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(38.9331, device='cuda:0', dtype=torch.float64)
tensor([-1.6661, -2.8683, -3.2905, -3.8840, -3.2779], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(28.9260, device='cuda:0', dtype=torch.float64)
tensor([-1.5949, -2.7338, -3.4030, -3.6557, -3.2010], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(20.0490, device='cuda:0', dtype=torch.float64)
tensor([-1.6070, -2.7084, -3.3664, -3.5010, -3.1869], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(15.7987, device='cuda:0', dtype=torch.float64)
tensor([-1.6743, -2.7593, -3.2715, -3.3727, -3.2624], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(15.3120, device='cuda:0', dtype=torch.float64)
tensor([-1.7863, -2.8818, -3.3029, -3.2607, -3.4001], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(15.3663, device='cuda:0', dtype=torch.float64)
tensor([-1.9173, -3.0777, -3.4065, -3.1594, -3.5045], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(14.9074, device='cuda:0', dtype=torch.float64)
tensor([-2.0335, -3.2382, -3.4561, -3.0760, -3.5204], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(13.8825, device='cuda:0', dtype=torch.float64)
tensor([-2.1215, -3.2324, -3.3990, -3.0215, -3.4998], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(12.5041, device='cuda:0', dtype=torch.float64)
tensor([-2.1815, -3.1676, -3.2872, -2.9926, -3.4820], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(12.9975, device='cuda:0', dtype=torch.float64)
tensor([-2.2101, -3.1100, -3.1790, -2.9820, -3.4394], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(13.2677, device='cuda:0', dtype=torch.float64)
tensor([-2.2022, -3.0431, -3.0962, -2.9902, -3.3612], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(12.8714, device='cuda:0', dtype=torch.float64)
tensor([-2.1502, -2.9746, -3.0426, -3.0202, -3.2701], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(11.6305, device='cuda:0', dtype=torch.float64)
tensor([-2.0561, -2.9398, -3.0172, -3.0674, -3.1863], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(9.7151, device='cuda:0', dtype=torch.float64)
tensor([-1.9424, -2.9645, -3.0140, -3.1217, -3.1160], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(7.6792, device='cuda:0', dtype=torch.float64)
tensor([-1.8362, -3.0020, -3.0237, -3.1750, -3.0634], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(6.2353, device='cuda:0', dtype=torch.float64)
tensor([-1.7519, -2.9612, -3.0362, -3.2205, -3.0329], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(6.9076, device='cuda:0', dtype=torch.float64)
tensor([-1.6930, -2.8418, -3.0429, -3.2520, -3.0264], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(8.0034, device='cuda:0', dtype=torch.float64)
tensor([-1.6592, -2.7212, -3.0387, -3.2650, -3.0418], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(8.0422, device='cuda:0', dtype=torch.float64)
tensor([-1.6490, -2.6385, -3.0218, -3.2588, -3.0755], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(7.2078, device='cuda:0', dtype=torch.float64)
tensor([-1.6599, -2.5916, -2.9936, -3.2362, -3.1239], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(6.0101, device='cuda:0', dtype=torch.float64)
tensor([-1.6884, -2.5738, -2.9583, -3.2033, -3.1831], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(4.8599, device='cuda:0', dtype=torch.float64)
tensor([-1.7299, -2.5786, -2.9203, -3.1675, -3.2465], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(3.9576, device='cuda:0', dtype=torch.float64)
tensor([-1.7786, -2.6003, -2.8832, -3.1357, -3.3058], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(3.5917, device='cuda:0', dtype=torch.float64)
tensor([-1.8273, -2.6317, -2.8496, -3.1120, -3.3523], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(4.1119, device='cuda:0', dtype=torch.float64)
tensor([-1.8690, -2.6650, -2.8204, -3.0974, -3.3789], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(4.7572, device='cuda:0', dtype=torch.float64)
tensor([-1.8984, -2.6918, -2.7950, -3.0897, -3.3830], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(4.9789, device='cuda:0', dtype=torch.float64)
tensor([-1.9125, -2.7064, -2.7733, -3.0869, -3.3673], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(4.7212, device='cuda:0', dtype=torch.float64)
tensor([-1.9121, -2.7081, -2.7561, -3.0881, -3.3388], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(4.1188, device='cuda:0', dtype=torch.float64)
tensor([-1.9004, -2.7008, -2.7451, -3.0935, -3.3052], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(3.4538, device='cuda:0', dtype=torch.float64)
tensor([-1.8820, -2.6912, -2.7403, -3.1034, -3.2732], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.8584, device='cuda:0', dtype=torch.float64)
tensor([-1.8614, -2.6824, -2.7408, -3.1170, -3.2467], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.8126, device='cuda:0', dtype=torch.float64)
tensor([-1.8423, -2.6750, -2.7452, -3.1328, -3.2283], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.8556, device='cuda:0', dtype=torch.float64)
tensor([-1.8272, -2.6692, -2.7518, -3.1485, -3.2185], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.8321, device='cuda:0', dtype=torch.float64)
tensor([-1.8174, -2.6652, -2.7590, -3.1624, -3.2167], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.7342, device='cuda:0', dtype=torch.float64)
tensor([-1.8126, -2.6630, -2.7652, -3.1730, -3.2211], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.5772, device='cuda:0', dtype=torch.float64)
tensor([-1.8118, -2.6627, -2.7687, -3.1799, -3.2288], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.4116, device='cuda:0', dtype=torch.float64)
tensor([-1.8133, -2.6638, -2.7684, -3.1828, -3.2370], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.3413, device='cuda:0', dtype=torch.float64)
tensor([-1.8154, -2.6657, -2.7647, -3.1825, -3.2435], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.3766, device='cuda:0', dtype=torch.float64)
tensor([-1.8169, -2.6676, -2.7587, -3.1797, -3.2469], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.3955, device='cuda:0', dtype=torch.float64)
tensor([-1.8166, -2.6684, -2.7525, -3.1760, -3.2467], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.2585, device='cuda:0', dtype=torch.float64)
tensor([-1.8143, -2.6675, -2.7483, -3.1730, -3.2435], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0537, device='cuda:0', dtype=torch.float64)
tensor([-1.8098, -2.6643, -2.7477, -3.1723, -3.2381], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8649, device='cuda:0', dtype=torch.float64)
tensor([-1.8037, -2.6588, -2.7516, -3.1744, -3.2322], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8346, device='cuda:0', dtype=torch.float64)
tensor([-1.7965, -2.6512, -2.7596, -3.1795, -3.2273], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8803, device='cuda:0', dtype=torch.float64)
tensor([-1.7889, -2.6421, -2.7707, -3.1866, -3.2244], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8557, device='cuda:0', dtype=torch.float64)
tensor([-1.7818, -2.6323, -2.7838, -3.1951, -3.2242], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7823, device='cuda:0', dtype=torch.float64)
tensor([-1.7767, -2.6233, -2.7974, -3.2037, -3.2264], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7162, device='cuda:0', dtype=torch.float64)
tensor([-1.7743, -2.6158, -2.8101, -3.2117, -3.2303], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6542, device='cuda:0', dtype=torch.float64)
tensor([-1.7749, -2.6107, -2.8208, -3.2183, -3.2349], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6218, device='cuda:0', dtype=torch.float64)
tensor([-1.7784, -2.6083, -2.8283, -3.2226, -3.2385], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6079, device='cuda:0', dtype=torch.float64)
tensor([-1.7843, -2.6088, -2.8322, -3.2240, -3.2406], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4834, device='cuda:0', dtype=torch.float64)
tensor([-1.7920, -2.6118, -2.8322, -3.2219, -3.2408], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3564, device='cuda:0', dtype=torch.float64)
tensor([-1.8009, -2.6169, -2.8286, -3.2164, -3.2394], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1969, device='cuda:0', dtype=torch.float64)
tensor([-1.8105, -2.6234, -2.8221, -3.2078, -3.2371], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1828, device='cuda:0', dtype=torch.float64)
tensor([-1.8202, -2.6308, -2.8138, -3.1968, -3.2346], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1776, device='cuda:0', dtype=torch.float64)
tensor([-1.8296, -2.6383, -2.8047, -3.1846, -3.2326], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2000, device='cuda:0', dtype=torch.float64)
tensor([-1.8381, -2.6444, -2.7963, -3.1724, -3.2317], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2250, device='cuda:0', dtype=torch.float64)
tensor([-1.8449, -2.6490, -2.7894, -3.1610, -3.2317], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2078, device='cuda:0', dtype=torch.float64)
tensor([-1.8495, -2.6514, -2.7847, -3.1510, -3.2324], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1378, device='cuda:0', dtype=torch.float64)
tensor([-1.8514, -2.6515, -2.7821, -3.1433, -3.2331], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0094, device='cuda:0', dtype=torch.float64)
tensor([-1.8503, -2.6493, -2.7815, -3.1380, -3.2329], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9861, device='cuda:0', dtype=torch.float64)
tensor([-1.8463, -2.6454, -2.7824, -3.1354, -3.2314], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0026, device='cuda:0', dtype=torch.float64)
tensor([-1.8398, -2.6400, -2.7844, -3.1354, -3.2280], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9884, device='cuda:0', dtype=torch.float64)
tensor([-1.8315, -2.6337, -2.7867, -3.1375, -3.2227], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9720, device='cuda:0', dtype=torch.float64)
tensor([-1.8225, -2.6274, -2.7889, -3.1413, -3.2160], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9118, device='cuda:0', dtype=torch.float64)
tensor([-1.8137, -2.6214, -2.7911, -3.1462, -3.2087], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8592, device='cuda:0', dtype=torch.float64)
tensor([-1.8060, -2.6164, -2.7930, -3.1522, -3.2018], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7784, device='cuda:0', dtype=torch.float64)
tensor([-1.8004, -2.6128, -2.7945, -3.1579, -3.1960], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8126, device='cuda:0', dtype=torch.float64)
tensor([-1.7971, -2.6109, -2.7955, -3.1629, -3.1920], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8495, device='cuda:0', dtype=torch.float64)
tensor([-1.7963, -2.6105, -2.7961, -3.1668, -3.1904], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8369, device='cuda:0', dtype=torch.float64)
tensor([-1.7979, -2.6113, -2.7965, -3.1693, -3.1908], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8185, device='cuda:0', dtype=torch.float64)
tensor([-1.8015, -2.6135, -2.7962, -3.1700, -3.1926], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7585, device='cuda:0', dtype=torch.float64)
tensor([-1.8065, -2.6166, -2.7951, -3.1692, -3.1954], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7199, device='cuda:0', dtype=torch.float64)
tensor([-1.8123, -2.6206, -2.7938, -3.1675, -3.1986], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6748, device='cuda:0', dtype=torch.float64)
tensor([-1.8180, -2.6249, -2.7921, -3.1645, -3.2009], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6936, device='cuda:0', dtype=torch.float64)
tensor([-1.8231, -2.6292, -2.7901, -3.1610, -3.2019], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6849, device='cuda:0', dtype=torch.float64)
tensor([-1.8271, -2.6335, -2.7880, -3.1572, -3.2016], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6792, device='cuda:0', dtype=torch.float64)
tensor([-1.8300, -2.6375, -2.7859, -3.1537, -3.2002], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6631, device='cuda:0', dtype=torch.float64)
tensor([-1.8315, -2.6409, -2.7843, -3.1509, -3.1979], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6762, device='cuda:0', dtype=torch.float64)
tensor([-1.8315, -2.6435, -2.7832, -3.1490, -3.1952], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6947, device='cuda:0', dtype=torch.float64)
tensor([-1.8305, -2.6454, -2.7828, -3.1482, -3.1927], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6636, device='cuda:0', dtype=torch.float64)
tensor([-1.8286, -2.6466, -2.7829, -3.1484, -3.1899], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6201, device='cuda:0', dtype=torch.float64)
tensor([-1.8263, -2.6471, -2.7835, -3.1492, -3.1879], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5765, device='cuda:0', dtype=torch.float64)
tensor([-1.8236, -2.6471, -2.7845, -3.1507, -3.1861], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6058, device='cuda:0', dtype=torch.float64)
tensor([-1.8207, -2.6466, -2.7854, -3.1525, -3.1848], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5786, device='cuda:0', dtype=torch.float64)
tensor([-1.8178, -2.6457, -2.7867, -3.1542, -3.1837], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5985, device='cuda:0', dtype=torch.float64)
tensor([-1.8152, -2.6445, -2.7882, -3.1557, -3.1829], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5840, device='cuda:0', dtype=torch.float64)
tensor([-1.8131, -2.6434, -2.7895, -3.1569, -3.1823], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5750, device='cuda:0', dtype=torch.float64)
tensor([-1.8118, -2.6427, -2.7904, -3.1576, -3.1821], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6012, device='cuda:0', dtype=torch.float64)
tensor([-1.8116, -2.6424, -2.7910, -3.1578, -3.1823], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5856, device='cuda:0', dtype=torch.float64)
tensor([-1.8124, -2.6426, -2.7909, -3.1576, -3.1830], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5636, device='cuda:0', dtype=torch.float64)
tensor([-1.8138, -2.6429, -2.7910, -3.1577, -3.1843], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5668, device='cuda:0', dtype=torch.float64)
tensor([-1.8155, -2.6435, -2.7911, -3.1581, -3.1858], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5656, device='cuda:0', dtype=torch.float64)
tensor([-1.8181, -2.6445, -2.7914, -3.1579, -3.1874], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5452, device='cuda:0', dtype=torch.float64)
tensor([-1.8203, -2.6455, -2.7913, -3.1579, -3.1882], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5482, device='cuda:0', dtype=torch.float64)
tensor([-1.8223, -2.6464, -2.7911, -3.1581, -3.1886], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5574, device='cuda:0', dtype=torch.float64)
tensor([-1.8234, -2.6467, -2.7907, -3.1586, -3.1883], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5629, device='cuda:0', dtype=torch.float64)
tensor([-1.8236, -2.6467, -2.7905, -3.1591, -3.1873], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5688, device='cuda:0', dtype=torch.float64)
tensor([-1.8235, -2.6464, -2.7901, -3.1597, -3.1859], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5167, device='cuda:0', dtype=torch.float64)
tensor([-1.8233, -2.6460, -2.7897, -3.1601, -3.1840], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5667, device='cuda:0', dtype=torch.float64)
tensor([-1.8236, -2.6455, -2.7899, -3.1601, -3.1825], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5202, device='cuda:0', dtype=torch.float64)
tensor([-1.8237, -2.6450, -2.7899, -3.1599, -3.1812], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5067, device='cuda:0', dtype=torch.float64)
tensor([-1.8237, -2.6441, -2.7897, -3.1591, -3.1799], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5258, device='cuda:0', dtype=torch.float64)
tensor([-1.8240, -2.6433, -2.7893, -3.1583, -3.1788], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5263, device='cuda:0', dtype=torch.float64)
tensor([-1.8241, -2.6429, -2.7891, -3.1577, -3.1782], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4946, device='cuda:0', dtype=torch.float64)
tensor([-1.8240, -2.6424, -2.7889, -3.1572, -3.1774], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4899, device='cuda:0', dtype=torch.float64)
tensor([-1.8237, -2.6421, -2.7890, -3.1573, -3.1770], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4839, device='cuda:0', dtype=torch.float64)
tensor([-1.8231, -2.6417, -2.7890, -3.1576, -3.1765], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4803, device='cuda:0', dtype=torch.float64)
tensor([-1.8224, -2.6413, -2.7892, -3.1577, -3.1758], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4894, device='cuda:0', dtype=torch.float64)
tensor([-1.8221, -2.6412, -2.7889, -3.1576, -3.1756], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4824, device='cuda:0', dtype=torch.float64)
tensor([-1.8221, -2.6413, -2.7889, -3.1576, -3.1761], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4913, device='cuda:0', dtype=torch.float64)
tensor([-1.8224, -2.6419, -2.7887, -3.1569, -3.1768], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4760, device='cuda:0', dtype=torch.float64)
tensor([-1.8229, -2.6426, -2.7884, -3.1563, -3.1780], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4748, device='cuda:0', dtype=torch.float64)
tensor([-1.8234, -2.6430, -2.7881, -3.1562, -3.1794], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4561, device='cuda:0', dtype=torch.float64)
tensor([-1.8236, -2.6430, -2.7877, -3.1561, -3.1804], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4932, device='cuda:0', dtype=torch.float64)
tensor([-1.8238, -2.6432, -2.7872, -3.1558, -3.1810], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4917, device='cuda:0', dtype=torch.float64)
tensor([-1.8241, -2.6437, -2.7868, -3.1555, -3.1811], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4604, device='cuda:0', dtype=torch.float64)
tensor([-1.8247, -2.6439, -2.7861, -3.1548, -3.1808], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4908, device='cuda:0', dtype=torch.float64)
tensor([-1.8257, -2.6439, -2.7857, -3.1543, -3.1806], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4806, device='cuda:0', dtype=torch.float64)
tensor([-1.8265, -2.6433, -2.7855, -3.1544, -3.1804], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5068, device='cuda:0', dtype=torch.float64)
tensor([-1.8266, -2.6421, -2.7857, -3.1547, -3.1797], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4493, device='cuda:0', dtype=torch.float64)
tensor([-1.8262, -2.6407, -2.7859, -3.1553, -3.1784], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4990, device='cuda:0', dtype=torch.float64)
tensor([-1.8253, -2.6398, -2.7863, -3.1559, -3.1772], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4773, device='cuda:0', dtype=torch.float64)
tensor([-1.8242, -2.6391, -2.7865, -3.1560, -3.1757], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4803, device='cuda:0', dtype=torch.float64)
tensor([-1.8228, -2.6385, -2.7867, -3.1566, -3.1743], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4807, device='cuda:0', dtype=torch.float64)
tensor([-1.8212, -2.6383, -2.7866, -3.1572, -3.1735], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5183, device='cuda:0', dtype=torch.float64)
tensor([-1.8205, -2.6389, -2.7860, -3.1575, -3.1731], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4603, device='cuda:0', dtype=torch.float64)
tensor([-1.8205, -2.6401, -2.7851, -3.1567, -3.1734], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4615, device='cuda:0', dtype=torch.float64)
tensor([-1.8209, -2.6413, -2.7843, -3.1559, -3.1744], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4430, device='cuda:0', dtype=torch.float64)
tensor([-1.8218, -2.6427, -2.7839, -3.1548, -3.1757], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4682, device='cuda:0', dtype=torch.float64)
tensor([-1.8231, -2.6442, -2.7837, -3.1539, -3.1767], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4656, device='cuda:0', dtype=torch.float64)
tensor([-1.8245, -2.6454, -2.7838, -3.1527, -3.1776], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4565, device='cuda:0', dtype=torch.float64)
tensor([-1.8258, -2.6462, -2.7840, -3.1517, -3.1780], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5157, device='cuda:0', dtype=torch.float64)
tensor([-1.8270, -2.6471, -2.7844, -3.1504, -3.1792], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4533, device='cuda:0', dtype=torch.float64)
tensor([-1.8281, -2.6477, -2.7851, -3.1496, -3.1800], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4597, device='cuda:0', dtype=torch.float64)
tensor([-1.8292, -2.6481, -2.7861, -3.1493, -3.1803], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4785, device='cuda:0', dtype=torch.float64)
tensor([-1.8297, -2.6483, -2.7866, -3.1493, -3.1798], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4062, device='cuda:0', dtype=torch.float64)
tensor([-1.8297, -2.6477, -2.7870, -3.1502, -3.1795], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4734, device='cuda:0', dtype=torch.float64)
tensor([-1.8291, -2.6462, -2.7873, -3.1516, -3.1789], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4843, device='cuda:0', dtype=torch.float64)
tensor([-1.8280, -2.6446, -2.7877, -3.1527, -3.1780], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4844, device='cuda:0', dtype=torch.float64)
tensor([-1.8268, -2.6429, -2.7874, -3.1542, -3.1780], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4827, device='cuda:0', dtype=torch.float64)
tensor([-1.8254, -2.6413, -2.7868, -3.1557, -3.1779], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4964, device='cuda:0', dtype=torch.float64)
tensor([-1.8242, -2.6399, -2.7855, -3.1568, -3.1778], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4737, device='cuda:0', dtype=torch.float64)
tensor([-1.8236, -2.6395, -2.7840, -3.1573, -3.1779], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4468, device='cuda:0', dtype=torch.float64)
tensor([-1.8233, -2.6397, -2.7821, -3.1570, -3.1778], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5108, device='cuda:0', dtype=torch.float64)
tensor([-1.8233, -2.6404, -2.7806, -3.1564, -3.1777], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4376, device='cuda:0', dtype=torch.float64)
tensor([-1.8230, -2.6411, -2.7793, -3.1560, -3.1771], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4268, device='cuda:0', dtype=torch.float64)
tensor([-1.8224, -2.6420, -2.7790, -3.1558, -3.1769], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4607, device='cuda:0', dtype=torch.float64)
tensor([-1.8221, -2.6429, -2.7790, -3.1560, -3.1772], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5063, device='cuda:0', dtype=torch.float64)
tensor([-1.8225, -2.6434, -2.7792, -3.1559, -3.1773], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4862, device='cuda:0', dtype=torch.float64)
tensor([-1.8229, -2.6430, -2.7797, -3.1554, -3.1770], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4720, device='cuda:0', dtype=torch.float64)
tensor([-1.8231, -2.6425, -2.7806, -3.1546, -3.1759], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5141, device='cuda:0', dtype=torch.float64)
tensor([-1.8236, -2.6422, -2.7819, -3.1536, -3.1744], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4740, device='cuda:0', dtype=torch.float64)
tensor([-1.8243, -2.6427, -2.7832, -3.1526, -3.1736], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4478, device='cuda:0', dtype=torch.float64)
tensor([-1.8252, -2.6432, -2.7841, -3.1518, -3.1731], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4715, device='cuda:0', dtype=torch.float64)
tensor([-1.8270, -2.6428, -2.7851, -3.1513, -3.1728], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5019, device='cuda:0', dtype=torch.float64)
tensor([-1.8280, -2.6424, -2.7866, -3.1506, -3.1725], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5018, device='cuda:0', dtype=torch.float64)
tensor([-1.8287, -2.6418, -2.7879, -3.1501, -3.1729], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4586, device='cuda:0', dtype=torch.float64)
tensor([-1.8304, -2.6417, -2.7886, -3.1504, -3.1747], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4668, device='cuda:0', dtype=torch.float64)
tensor([-1.8311, -2.6419, -2.7888, -3.1519, -3.1753], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4337, device='cuda:0', dtype=torch.float64)
tensor([-1.8308, -2.6421, -2.7887, -3.1537, -3.1754], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4534, device='cuda:0', dtype=torch.float64)
tensor([-1.8301, -2.6420, -2.7888, -3.1556, -3.1751], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4425, device='cuda:0', dtype=torch.float64)
tensor([-1.8293, -2.6423, -2.7887, -3.1568, -3.1740], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4747, device='cuda:0', dtype=torch.float64)
tensor([-1.8277, -2.6436, -2.7883, -3.1576, -3.1717], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4530, device='cuda:0', dtype=torch.float64)
tensor([-1.8263, -2.6447, -2.7881, -3.1580, -3.1695], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4766, device='cuda:0', dtype=torch.float64)
tensor([-1.8255, -2.6454, -2.7879, -3.1584, -3.1682], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5007, device='cuda:0', dtype=torch.float64)
tensor([-1.8252, -2.6452, -2.7887, -3.1583, -3.1686], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4814, device='cuda:0', dtype=torch.float64)
tensor([-1.8246, -2.6442, -2.7899, -3.1581, -3.1693], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4578, device='cuda:0', dtype=torch.float64)
tensor([-1.8240, -2.6433, -2.7901, -3.1575, -3.1697], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4424, device='cuda:0', dtype=torch.float64)
tensor([-1.8233, -2.6420, -2.7902, -3.1576, -3.1704], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5174, device='cuda:0', dtype=torch.float64)
tensor([-1.8233, -2.6406, -2.7901, -3.1572, -3.1719], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4013, device='cuda:0', dtype=torch.float64)
tensor([-1.8232, -2.6397, -2.7896, -3.1570, -3.1728], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5022, device='cuda:0', dtype=torch.float64)
tensor([-1.8232, -2.6396, -2.7890, -3.1569, -3.1735], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4985, device='cuda:0', dtype=torch.float64)
tensor([-1.8236, -2.6399, -2.7879, -3.1559, -3.1736], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4663, device='cuda:0', dtype=torch.float64)
tensor([-1.8244, -2.6403, -2.7867, -3.1546, -3.1735], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4997, device='cuda:0', dtype=torch.float64)
tensor([-1.8254, -2.6411, -2.7853, -3.1534, -3.1733], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5278, device='cuda:0', dtype=torch.float64)
tensor([-1.8273, -2.6422, -2.7851, -3.1521, -3.1735], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4686, device='cuda:0', dtype=torch.float64)
tensor([-1.8294, -2.6438, -2.7854, -3.1512, -3.1750], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4699, device='cuda:0', dtype=torch.float64)
tensor([-1.8315, -2.6455, -2.7856, -3.1505, -3.1757], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4371, device='cuda:0', dtype=torch.float64)
tensor([-1.8328, -2.6471, -2.7856, -3.1503, -3.1755], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5222, device='cuda:0', dtype=torch.float64)
tensor([-1.8336, -2.6483, -2.7854, -3.1505, -3.1746], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5024, device='cuda:0', dtype=torch.float64)
tensor([-1.8341, -2.6486, -2.7851, -3.1515, -3.1737], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4877, device='cuda:0', dtype=torch.float64)
tensor([-1.8345, -2.6491, -2.7848, -3.1519, -3.1726], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4998, device='cuda:0', dtype=torch.float64)
tensor([-1.8345, -2.6492, -2.7846, -3.1525, -3.1720], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4722, device='cuda:0', dtype=torch.float64)
tensor([-1.8350, -2.6486, -2.7846, -3.1531, -3.1716], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4483, device='cuda:0', dtype=torch.float64)
tensor([-1.8354, -2.6477, -2.7845, -3.1526, -3.1715], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5301, device='cuda:0', dtype=torch.float64)
tensor([-1.8344, -2.6467, -2.7847, -3.1527, -3.1710], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5114, device='cuda:0', dtype=torch.float64)
tensor([-1.8323, -2.6451, -2.7858, -3.1535, -3.1706], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5072, device='cuda:0', dtype=torch.float64)
tensor([-1.8303, -2.6447, -2.7871, -3.1538, -3.1706], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4455, device='cuda:0', dtype=torch.float64)
tensor([-1.8292, -2.6444, -2.7879, -3.1533, -3.1703], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4769, device='cuda:0', dtype=torch.float64)
tensor([-1.8284, -2.6441, -2.7880, -3.1526, -3.1693], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5048, device='cuda:0', dtype=torch.float64)
tensor([-1.8275, -2.6450, -2.7875, -3.1513, -3.1672], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4818, device='cuda:0', dtype=torch.float64)
tensor([-1.8258, -2.6456, -2.7865, -3.1507, -3.1644], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5823, device='cuda:0', dtype=torch.float64)
tensor([-1.8243, -2.6455, -2.7854, -3.1513, -3.1625], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4753, device='cuda:0', dtype=torch.float64)
tensor([-1.8244, -2.6461, -2.7835, -3.1521, -3.1623], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5014, device='cuda:0', dtype=torch.float64)
tensor([-1.8252, -2.6465, -2.7818, -3.1522, -3.1631], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5302, device='cuda:0', dtype=torch.float64)
tensor([-1.8277, -2.6469, -2.7798, -3.1524, -3.1655], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4657, device='cuda:0', dtype=torch.float64)
tensor([-1.8304, -2.6467, -2.7776, -3.1530, -3.1684], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4857, device='cuda:0', dtype=torch.float64)
tensor([-1.8333, -2.6467, -2.7756, -3.1533, -3.1711], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4994, device='cuda:0', dtype=torch.float64)
tensor([-1.8360, -2.6462, -2.7741, -3.1533, -3.1729], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5747, device='cuda:0', dtype=torch.float64)
tensor([-1.8372, -2.6443, -2.7735, -3.1531, -3.1736], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5587, device='cuda:0', dtype=torch.float64)
tensor([-1.8373, -2.6428, -2.7745, -3.1525, -3.1733], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5066, device='cuda:0', dtype=torch.float64)
tensor([-1.8367, -2.6416, -2.7759, -3.1522, -3.1729], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4855, device='cuda:0', dtype=torch.float64)
tensor([-1.8362, -2.6407, -2.7771, -3.1518, -3.1729], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5142, device='cuda:0', dtype=torch.float64)
tensor([-1.8352, -2.6400, -2.7784, -3.1517, -3.1730], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5132, device='cuda:0', dtype=torch.float64)
tensor([-1.8348, -2.6407, -2.7795, -3.1514, -3.1731], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5145, device='cuda:0', dtype=torch.float64)
tensor([-1.8343, -2.6427, -2.7801, -3.1510, -3.1735], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5193, device='cuda:0', dtype=torch.float64)
tensor([-1.8335, -2.6436, -2.7808, -3.1509, -3.1743], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4345, device='cuda:0', dtype=torch.float64)
tensor([-1.8329, -2.6443, -2.7816, -3.1513, -3.1748], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5067, device='cuda:0', dtype=torch.float64)
tensor([-1.8334, -2.6462, -2.7821, -3.1510, -3.1755], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4763, device='cuda:0', dtype=torch.float64)
tensor([-1.8339, -2.6480, -2.7815, -3.1495, -3.1753], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4620, device='cuda:0', dtype=torch.float64)
tensor([-1.8336, -2.6487, -2.7810, -3.1482, -3.1751], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5146, device='cuda:0', dtype=torch.float64)
tensor([-1.8333, -2.6487, -2.7804, -3.1470, -3.1749], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5386, device='cuda:0', dtype=torch.float64)
tensor([-1.8320, -2.6482, -2.7802, -3.1471, -3.1732], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5382, device='cuda:0', dtype=torch.float64)
tensor([-1.8311, -2.6466, -2.7817, -3.1477, -3.1716], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5101, device='cuda:0', dtype=torch.float64)
tensor([-1.8303, -2.6447, -2.7830, -3.1487, -3.1696], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4994, device='cuda:0', dtype=torch.float64)
tensor([-1.8289, -2.6425, -2.7846, -3.1502, -3.1687], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5463, device='cuda:0', dtype=torch.float64)
tensor([-1.8274, -2.6408, -2.7861, -3.1522, -3.1684], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5225, device='cuda:0', dtype=torch.float64)
tensor([-1.8275, -2.6395, -2.7870, -3.1532, -3.1689], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4793, device='cuda:0', dtype=torch.float64)
tensor([-1.8282, -2.6389, -2.7877, -3.1542, -3.1701], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5547, device='cuda:0', dtype=torch.float64)
tensor([-1.8287, -2.6382, -2.7878, -3.1548, -3.1703], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5650, device='cuda:0', dtype=torch.float64)
tensor([-1.8290, -2.6376, -2.7866, -3.1552, -3.1681], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5613, device='cuda:0', dtype=torch.float64)
tensor([-1.8295, -2.6376, -2.7842, -3.1550, -3.1658], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5685, device='cuda:0', dtype=torch.float64)
tensor([-1.8302, -2.6382, -2.7824, -3.1538, -3.1639], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6581, device='cuda:0', dtype=torch.float64)
tensor([-1.8304, -2.6388, -2.7809, -3.1528, -3.1605], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5378, device='cuda:0', dtype=torch.float64)
tensor([-1.8320, -2.6402, -2.7808, -3.1524, -3.1593], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5721, device='cuda:0', dtype=torch.float64)
tensor([-1.8335, -2.6420, -2.7808, -3.1519, -3.1592], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5142, device='cuda:0', dtype=torch.float64)
tensor([-1.8349, -2.6436, -2.7809, -3.1521, -3.1602], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5126, device='cuda:0', dtype=torch.float64)
tensor([-1.8361, -2.6447, -2.7815, -3.1518, -3.1623], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5541, device='cuda:0', dtype=torch.float64)
tensor([-1.8382, -2.6454, -2.7826, -3.1509, -3.1657], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6425, device='cuda:0', dtype=torch.float64)
tensor([-1.8393, -2.6453, -2.7845, -3.1516, -3.1691], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4802, device='cuda:0', dtype=torch.float64)
tensor([-1.8390, -2.6445, -2.7864, -3.1519, -3.1723], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4619, device='cuda:0', dtype=torch.float64)
tensor([-1.8375, -2.6433, -2.7875, -3.1514, -3.1734], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5145, device='cuda:0', dtype=torch.float64)
tensor([-1.8354, -2.6418, -2.7882, -3.1515, -3.1716], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5465, device='cuda:0', dtype=torch.float64)
tensor([-1.8334, -2.6407, -2.7884, -3.1507, -3.1699], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6484, device='cuda:0', dtype=torch.float64)
tensor([-1.8332, -2.6405, -2.7872, -3.1488, -3.1688], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5323, device='cuda:0', dtype=torch.float64)
tensor([-1.8335, -2.6409, -2.7856, -3.1471, -3.1689], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5765, device='cuda:0', dtype=torch.float64)
tensor([-1.8345, -2.6426, -2.7836, -3.1447, -3.1705], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5088, device='cuda:0', dtype=torch.float64)
tensor([-1.8369, -2.6447, -2.7822, -3.1423, -3.1740], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4929, device='cuda:0', dtype=torch.float64)
tensor([-1.8385, -2.6460, -2.7825, -3.1414, -3.1766], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6004, device='cuda:0', dtype=torch.float64)
tensor([-1.8383, -2.6480, -2.7839, -3.1407, -3.1780], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6125, device='cuda:0', dtype=torch.float64)
tensor([-1.8365, -2.6492, -2.7845, -3.1405, -3.1761], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5495, device='cuda:0', dtype=torch.float64)
tensor([-1.8338, -2.6495, -2.7846, -3.1411, -3.1734], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5768, device='cuda:0', dtype=torch.float64)
tensor([-1.8297, -2.6488, -2.7838, -3.1423, -3.1685], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5131, device='cuda:0', dtype=torch.float64)
tensor([-1.8267, -2.6480, -2.7838, -3.1453, -3.1650], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5985, device='cuda:0', dtype=torch.float64)
tensor([-1.8245, -2.6474, -2.7842, -3.1497, -3.1640], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6460, device='cuda:0', dtype=torch.float64)
tensor([-1.8248, -2.6477, -2.7843, -3.1544, -3.1670], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4796, device='cuda:0', dtype=torch.float64)
tensor([-1.8260, -2.6462, -2.7855, -3.1588, -3.1714], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5102, device='cuda:0', dtype=torch.float64)
tensor([-1.8283, -2.6435, -2.7871, -3.1629, -3.1749], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7126, device='cuda:0', dtype=torch.float64)
tensor([-1.8301, -2.6413, -2.7874, -3.1637, -3.1749], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5817, device='cuda:0', dtype=torch.float64)
tensor([-1.8300, -2.6382, -2.7868, -3.1633, -3.1717], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5205, device='cuda:0', dtype=torch.float64)
tensor([-1.8300, -2.6349, -2.7852, -3.1611, -3.1682], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5612, device='cuda:0', dtype=torch.float64)
tensor([-1.8319, -2.6339, -2.7827, -3.1574, -3.1675], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5959, device='cuda:0', dtype=torch.float64)
tensor([-1.8347, -2.6354, -2.7795, -3.1530, -3.1675], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6179, device='cuda:0', dtype=torch.float64)
tensor([-1.8380, -2.6388, -2.7761, -3.1479, -3.1693], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5400, device='cuda:0', dtype=torch.float64)
tensor([-1.8414, -2.6429, -2.7742, -3.1436, -3.1732], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6936, device='cuda:0', dtype=torch.float64)
tensor([-1.8445, -2.6465, -2.7737, -3.1389, -3.1758], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6858, device='cuda:0', dtype=torch.float64)
tensor([-1.8457, -2.6491, -2.7749, -3.1369, -3.1756], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5863, device='cuda:0', dtype=torch.float64)
tensor([-1.8444, -2.6503, -2.7769, -3.1366, -3.1729], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5760, device='cuda:0', dtype=torch.float64)
tensor([-1.8415, -2.6507, -2.7815, -3.1374, -3.1702], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5165, device='cuda:0', dtype=torch.float64)
tensor([-1.8383, -2.6496, -2.7861, -3.1399, -3.1663], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5073, device='cuda:0', dtype=torch.float64)
tensor([-1.8348, -2.6485, -2.7893, -3.1422, -3.1631], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5807, device='cuda:0', dtype=torch.float64)
tensor([-1.8320, -2.6473, -2.7913, -3.1467, -3.1599], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5870, device='cuda:0', dtype=torch.float64)
tensor([-1.8309, -2.6464, -2.7923, -3.1510, -3.1589], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5983, device='cuda:0', dtype=torch.float64)
tensor([-1.8327, -2.6461, -2.7913, -3.1533, -3.1607], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6132, device='cuda:0', dtype=torch.float64)
tensor([-1.8370, -2.6459, -2.7893, -3.1540, -3.1649], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5797, device='cuda:0', dtype=torch.float64)
tensor([-1.8417, -2.6454, -2.7873, -3.1535, -3.1689], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5162, device='cuda:0', dtype=torch.float64)
tensor([-1.8464, -2.6435, -2.7851, -3.1520, -3.1722], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5839, device='cuda:0', dtype=torch.float64)
tensor([-1.8490, -2.6405, -2.7841, -3.1516, -3.1741], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6262, device='cuda:0', dtype=torch.float64)
tensor([-1.8501, -2.6397, -2.7823, -3.1518, -3.1744], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5344, device='cuda:0', dtype=torch.float64)
tensor([-1.8488, -2.6394, -2.7804, -3.1533, -3.1738], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5810, device='cuda:0', dtype=torch.float64)
tensor([-1.8460, -2.6400, -2.7788, -3.1552, -3.1728], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5154, device='cuda:0', dtype=torch.float64)
tensor([-1.8405, -2.6407, -2.7789, -3.1587, -3.1703], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5556, device='cuda:0', dtype=torch.float64)
tensor([-1.8352, -2.6424, -2.7798, -3.1607, -3.1679], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5633, device='cuda:0', dtype=torch.float64)
tensor([-1.8301, -2.6450, -2.7803, -3.1622, -3.1663], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6559, device='cuda:0', dtype=torch.float64)
tensor([-1.8266, -2.6475, -2.7810, -3.1634, -3.1649], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5054, device='cuda:0', dtype=torch.float64)
tensor([-1.8241, -2.6489, -2.7838, -3.1640, -3.1632], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6002, device='cuda:0', dtype=torch.float64)
tensor([-1.8231, -2.6509, -2.7857, -3.1634, -3.1620], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5693, device='cuda:0', dtype=torch.float64)
tensor([-1.8236, -2.6527, -2.7868, -3.1610, -3.1605], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6203, device='cuda:0', dtype=torch.float64)
tensor([-1.8251, -2.6530, -2.7869, -3.1580, -3.1597], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5586, device='cuda:0', dtype=torch.float64)
tensor([-1.8274, -2.6528, -2.7871, -3.1554, -3.1616], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6434, device='cuda:0', dtype=torch.float64)
tensor([-1.8305, -2.6529, -2.7873, -3.1533, -3.1634], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6226, device='cuda:0', dtype=torch.float64)
tensor([-1.8337, -2.6515, -2.7878, -3.1524, -3.1667], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5836, device='cuda:0', dtype=torch.float64)
tensor([-1.8377, -2.6485, -2.7898, -3.1516, -3.1713], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5479, device='cuda:0', dtype=torch.float64)
tensor([-1.8433, -2.6457, -2.7930, -3.1493, -3.1783], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5883, device='cuda:0', dtype=torch.float64)
tensor([-1.8484, -2.6436, -2.7957, -3.1469, -3.1850], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5792, device='cuda:0', dtype=torch.float64)
tensor([-1.8502, -2.6400, -2.7978, -3.1466, -3.1876], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5936, device='cuda:0', dtype=torch.float64)
tensor([-1.8491, -2.6362, -2.7984, -3.1472, -3.1856], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6634, device='cuda:0', dtype=torch.float64)
tensor([-1.8468, -2.6357, -2.7963, -3.1481, -3.1816], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6151, device='cuda:0', dtype=torch.float64)
tensor([-1.8431, -2.6365, -2.7939, -3.1485, -3.1757], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6025, device='cuda:0', dtype=torch.float64)
tensor([-1.8402, -2.6398, -2.7910, -3.1485, -3.1710], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6435, device='cuda:0', dtype=torch.float64)
tensor([-1.8384, -2.6450, -2.7870, -3.1479, -3.1678], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6484, device='cuda:0', dtype=torch.float64)
tensor([-1.8380, -2.6488, -2.7835, -3.1476, -3.1663], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6105, device='cuda:0', dtype=torch.float64)
tensor([-1.8386, -2.6509, -2.7807, -3.1475, -3.1650], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7031, device='cuda:0', dtype=torch.float64)
tensor([-1.8396, -2.6514, -2.7789, -3.1468, -3.1650], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6362, device='cuda:0', dtype=torch.float64)
tensor([-1.8412, -2.6511, -2.7776, -3.1447, -3.1652], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6910, device='cuda:0', dtype=torch.float64)
tensor([-1.8422, -2.6511, -2.7757, -3.1433, -3.1654], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6421, device='cuda:0', dtype=torch.float64)
tensor([-1.8430, -2.6502, -2.7756, -3.1430, -3.1661], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7242, device='cuda:0', dtype=torch.float64)
tensor([-1.8425, -2.6496, -2.7728, -3.1434, -3.1639], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6426, device='cuda:0', dtype=torch.float64)
tensor([-1.8427, -2.6506, -2.7700, -3.1448, -3.1623], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6588, device='cuda:0', dtype=torch.float64)
tensor([-1.8440, -2.6495, -2.7696, -3.1475, -3.1637], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8498, device='cuda:0', dtype=torch.float64)
tensor([-1.8456, -2.6488, -2.7728, -3.1523, -3.1695], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5415, device='cuda:0', dtype=torch.float64)
tensor([-1.8451, -2.6480, -2.7771, -3.1579, -3.1756], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5778, device='cuda:0', dtype=torch.float64)
tensor([-1.8423, -2.6475, -2.7808, -3.1629, -3.1783], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6636, device='cuda:0', dtype=torch.float64)
tensor([-1.8360, -2.6461, -2.7835, -3.1669, -3.1764], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6888, device='cuda:0', dtype=torch.float64)
tensor([-1.8300, -2.6464, -2.7829, -3.1676, -3.1716], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5693, device='cuda:0', dtype=torch.float64)
tensor([-1.8262, -2.6465, -2.7809, -3.1667, -3.1666], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5812, device='cuda:0', dtype=torch.float64)
tensor([-1.8242, -2.6480, -2.7789, -3.1626, -3.1632], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6198, device='cuda:0', dtype=torch.float64)
tensor([-1.8270, -2.6502, -2.7766, -3.1574, -3.1643], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7604, device='cuda:0', dtype=torch.float64)
tensor([-1.8321, -2.6512, -2.7748, -3.1528, -3.1688], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6911, device='cuda:0', dtype=torch.float64)
tensor([-1.8379, -2.6524, -2.7726, -3.1484, -3.1753], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6652, device='cuda:0', dtype=torch.float64)
tensor([-1.8434, -2.6529, -2.7710, -3.1445, -3.1805], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5751, device='cuda:0', dtype=torch.float64)
tensor([-1.8466, -2.6521, -2.7703, -3.1433, -3.1833], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5903, device='cuda:0', dtype=torch.float64)
tensor([-1.8470, -2.6504, -2.7705, -3.1447, -3.1852], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7295, device='cuda:0', dtype=torch.float64)
tensor([-1.8460, -2.6473, -2.7710, -3.1486, -3.1844], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6089, device='cuda:0', dtype=torch.float64)
tensor([-1.8440, -2.6447, -2.7721, -3.1547, -3.1838], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7289, device='cuda:0', dtype=torch.float64)
tensor([-1.8441, -2.6432, -2.7750, -3.1604, -3.1831], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6756, device='cuda:0', dtype=torch.float64)
tensor([-1.8442, -2.6422, -2.7785, -3.1643, -3.1821], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6654, device='cuda:0', dtype=torch.float64)
tensor([-1.8432, -2.6419, -2.7822, -3.1658, -3.1789], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5593, device='cuda:0', dtype=torch.float64)
tensor([-1.8423, -2.6423, -2.7851, -3.1637, -3.1750], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6332, device='cuda:0', dtype=torch.float64)
tensor([-1.8436, -2.6429, -2.7878, -3.1589, -3.1722], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6717, device='cuda:0', dtype=torch.float64)
tensor([-1.8448, -2.6443, -2.7904, -3.1554, -3.1697], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9289, device='cuda:0', dtype=torch.float64)
tensor([-1.8445, -2.6460, -2.7879, -3.1525, -3.1630], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6972, device='cuda:0', dtype=torch.float64)
tensor([-1.8431, -2.6463, -2.7837, -3.1503, -3.1552], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7133, device='cuda:0', dtype=torch.float64)
tensor([-1.8414, -2.6443, -2.7817, -3.1510, -3.1523], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8233, device='cuda:0', dtype=torch.float64)
tensor([-1.8404, -2.6449, -2.7801, -3.1520, -3.1540], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8113, device='cuda:0', dtype=torch.float64)
tensor([-1.8389, -2.6453, -2.7811, -3.1542, -3.1583], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6427, device='cuda:0', dtype=torch.float64)
tensor([-1.8389, -2.6455, -2.7818, -3.1580, -3.1643], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7085, device='cuda:0', dtype=torch.float64)
tensor([-1.8395, -2.6454, -2.7829, -3.1608, -3.1703], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7527, device='cuda:0', dtype=torch.float64)
tensor([-1.8407, -2.6440, -2.7839, -3.1629, -3.1730], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8037, device='cuda:0', dtype=torch.float64)
tensor([-1.8421, -2.6415, -2.7836, -3.1645, -3.1741], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7597, device='cuda:0', dtype=torch.float64)
tensor([-1.8457, -2.6387, -2.7835, -3.1649, -3.1757], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5858, device='cuda:0', dtype=torch.float64)
tensor([-1.8486, -2.6367, -2.7854, -3.1669, -3.1789], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8309, device='cuda:0', dtype=torch.float64)
tensor([-1.8532, -2.6385, -2.7882, -3.1677, -3.1844], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6503, device='cuda:0', dtype=torch.float64)
tensor([-1.8555, -2.6404, -2.7913, -3.1699, -3.1878], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8159, device='cuda:0', dtype=torch.float64)
tensor([-1.8568, -2.6418, -2.7927, -3.1728, -3.1896], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8347, device='cuda:0', dtype=torch.float64)
tensor([-1.8540, -2.6420, -2.7949, -3.1738, -3.1852], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7037, device='cuda:0', dtype=torch.float64)
tensor([-1.8475, -2.6423, -2.7929, -3.1716, -3.1752], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8526, device='cuda:0', dtype=torch.float64)
tensor([-1.8416, -2.6446, -2.7874, -3.1645, -3.1621], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8359, device='cuda:0', dtype=torch.float64)
tensor([-1.8369, -2.6474, -2.7818, -3.1560, -3.1490], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8773, device='cuda:0', dtype=torch.float64)
tensor([-1.8368, -2.6520, -2.7752, -3.1475, -3.1421], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8396, device='cuda:0', dtype=torch.float64)
tensor([-1.8397, -2.6565, -2.7691, -3.1393, -3.1410], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8274, device='cuda:0', dtype=torch.float64)
tensor([-1.8442, -2.6635, -2.7652, -3.1336, -3.1498], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6997, device='cuda:0', dtype=torch.float64)
tensor([-1.8496, -2.6700, -2.7652, -3.1306, -3.1636], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8831, device='cuda:0', dtype=torch.float64)
tensor([-1.8534, -2.6756, -2.7645, -3.1319, -3.1781], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7697, device='cuda:0', dtype=torch.float64)
tensor([-1.8536, -2.6776, -2.7659, -3.1364, -3.1868], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7667, device='cuda:0', dtype=torch.float64)
tensor([-1.8522, -2.6765, -2.7683, -3.1413, -3.1909], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7429, device='cuda:0', dtype=torch.float64)
tensor([-1.8481, -2.6719, -2.7708, -3.1487, -3.1888], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7960, device='cuda:0', dtype=torch.float64)
tensor([-1.8451, -2.6668, -2.7770, -3.1557, -3.1876], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8182, device='cuda:0', dtype=torch.float64)
tensor([-1.8429, -2.6595, -2.7846, -3.1642, -3.1860], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8733, device='cuda:0', dtype=torch.float64)
tensor([-1.8418, -2.6522, -2.7906, -3.1714, -3.1834], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8425, device='cuda:0', dtype=torch.float64)
tensor([-1.8434, -2.6453, -2.7978, -3.1782, -3.1839], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7485, device='cuda:0', dtype=torch.float64)
tensor([-1.8472, -2.6398, -2.8010, -3.1815, -3.1857], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6298, device='cuda:0', dtype=torch.float64)
tensor([-1.8489, -2.6346, -2.8033, -3.1830, -3.1849], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8704, device='cuda:0', dtype=torch.float64)
tensor([-1.8471, -2.6307, -2.8033, -3.1826, -3.1767], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7635, device='cuda:0', dtype=torch.float64)
tensor([-1.8455, -2.6312, -2.8010, -3.1791, -3.1672], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9153, device='cuda:0', dtype=torch.float64)
tensor([-1.8425, -2.6356, -2.7970, -3.1738, -3.1590], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6906, device='cuda:0', dtype=torch.float64)
tensor([-1.8390, -2.6402, -2.7941, -3.1681, -3.1525], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7857, device='cuda:0', dtype=torch.float64)
tensor([-1.8383, -2.6464, -2.7909, -3.1609, -3.1511], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8959, device='cuda:0', dtype=torch.float64)
tensor([-1.8386, -2.6541, -2.7890, -3.1560, -3.1545], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6776, device='cuda:0', dtype=torch.float64)
tensor([-1.8388, -2.6620, -2.7879, -3.1514, -3.1584], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7660, device='cuda:0', dtype=torch.float64)
tensor([-1.8385, -2.6668, -2.7867, -3.1490, -3.1607], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7138, device='cuda:0', dtype=torch.float64)
tensor([-1.8380, -2.6684, -2.7842, -3.1475, -3.1611], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8450, device='cuda:0', dtype=torch.float64)
tensor([-1.8385, -2.6672, -2.7830, -3.1447, -3.1618], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7501, device='cuda:0', dtype=torch.float64)
tensor([-1.8401, -2.6633, -2.7830, -3.1423, -3.1635], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8406, device='cuda:0', dtype=torch.float64)
tensor([-1.8449, -2.6552, -2.7832, -3.1402, -3.1670], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7599, device='cuda:0', dtype=torch.float64)
tensor([-1.8505, -2.6467, -2.7815, -3.1389, -3.1711], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7375, device='cuda:0', dtype=torch.float64)
tensor([-1.8571, -2.6407, -2.7802, -3.1373, -3.1749], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8139, device='cuda:0', dtype=torch.float64)
tensor([-1.8624, -2.6383, -2.7756, -3.1370, -3.1788], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8341, device='cuda:0', dtype=torch.float64)
tensor([-1.8676, -2.6373, -2.7730, -3.1379, -3.1845], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7536, device='cuda:0', dtype=torch.float64)
tensor([-1.8703, -2.6383, -2.7699, -3.1387, -3.1861], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7655, device='cuda:0', dtype=torch.float64)
tensor([-1.8680, -2.6403, -2.7650, -3.1410, -3.1810], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6146, device='cuda:0', dtype=torch.float64)
tensor([-1.8598, -2.6416, -2.7636, -3.1454, -3.1724], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7303, device='cuda:0', dtype=torch.float64)
tensor([-1.8495, -2.6424, -2.7635, -3.1487, -3.1624], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6967, device='cuda:0', dtype=torch.float64)
tensor([-1.8418, -2.6427, -2.7660, -3.1522, -3.1527], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7757, device='cuda:0', dtype=torch.float64)
tensor([-1.8375, -2.6427, -2.7703, -3.1558, -3.1488], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8395, device='cuda:0', dtype=torch.float64)
tensor([-1.8353, -2.6410, -2.7771, -3.1586, -3.1480], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8480, device='cuda:0', dtype=torch.float64)
tensor([-1.8351, -2.6404, -2.7844, -3.1618, -3.1522], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6542, device='cuda:0', dtype=torch.float64)
tensor([-1.8383, -2.6393, -2.7919, -3.1661, -3.1596], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7426, device='cuda:0', dtype=torch.float64)
tensor([-1.8432, -2.6389, -2.7983, -3.1681, -3.1671], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7923, device='cuda:0', dtype=torch.float64)
tensor([-1.8475, -2.6411, -2.8023, -3.1695, -3.1719], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7951, device='cuda:0', dtype=torch.float64)
tensor([-1.8525, -2.6447, -2.8015, -3.1668, -3.1736], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8463, device='cuda:0', dtype=torch.float64)
tensor([-1.8573, -2.6466, -2.7969, -3.1610, -3.1738], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7189, device='cuda:0', dtype=torch.float64)
tensor([-1.8627, -2.6486, -2.7892, -3.1535, -3.1732], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9427, device='cuda:0', dtype=torch.float64)
tensor([-1.8639, -2.6497, -2.7831, -3.1495, -3.1728], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6655, device='cuda:0', dtype=torch.float64)
tensor([-1.8610, -2.6521, -2.7762, -3.1479, -3.1728], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7646, device='cuda:0', dtype=torch.float64)
tensor([-1.8571, -2.6538, -2.7733, -3.1493, -3.1728], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8914, device='cuda:0', dtype=torch.float64)
tensor([-1.8528, -2.6571, -2.7697, -3.1503, -3.1724], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8088, device='cuda:0', dtype=torch.float64)
tensor([-1.8503, -2.6618, -2.7646, -3.1516, -3.1722], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7812, device='cuda:0', dtype=torch.float64)
tensor([-1.8471, -2.6644, -2.7608, -3.1543, -3.1707], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8962, device='cuda:0', dtype=torch.float64)
tensor([-1.8455, -2.6621, -2.7593, -3.1556, -3.1705], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7587, device='cuda:0', dtype=torch.float64)
tensor([-1.8460, -2.6600, -2.7605, -3.1572, -3.1678], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8024, device='cuda:0', dtype=torch.float64)
tensor([-1.8486, -2.6587, -2.7620, -3.1577, -3.1679], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7259, device='cuda:0', dtype=torch.float64)
tensor([-1.8510, -2.6577, -2.7664, -3.1590, -3.1702], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7269, device='cuda:0', dtype=torch.float64)
tensor([-1.8506, -2.6561, -2.7719, -3.1599, -3.1722], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7535, device='cuda:0', dtype=torch.float64)
tensor([-1.8498, -2.6552, -2.7768, -3.1600, -3.1752], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8382, device='cuda:0', dtype=torch.float64)
tensor([-1.8501, -2.6550, -2.7826, -3.1570, -3.1800], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8578, device='cuda:0', dtype=torch.float64)
tensor([-1.8509, -2.6563, -2.7869, -3.1525, -3.1847], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7369, device='cuda:0', dtype=torch.float64)
tensor([-1.8509, -2.6582, -2.7899, -3.1481, -3.1892], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8950, device='cuda:0', dtype=torch.float64)
tensor([-1.8489, -2.6604, -2.7920, -3.1436, -3.1921], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7875, device='cuda:0', dtype=torch.float64)
tensor([-1.8462, -2.6637, -2.7905, -3.1379, -3.1907], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9586, device='cuda:0', dtype=torch.float64)
tensor([-1.8433, -2.6658, -2.7854, -3.1311, -3.1859], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8786, device='cuda:0', dtype=torch.float64)
tensor([-1.8447, -2.6689, -2.7802, -3.1264, -3.1846], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9060, device='cuda:0', dtype=torch.float64)
tensor([-1.8491, -2.6741, -2.7718, -3.1204, -3.1831], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7757, device='cuda:0', dtype=torch.float64)
tensor([-1.8538, -2.6783, -2.7634, -3.1197, -3.1789], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6721, device='cuda:0', dtype=torch.float64)
tensor([-1.8548, -2.6781, -2.7550, -3.1254, -3.1725], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7454, device='cuda:0', dtype=torch.float64)
tensor([-1.8526, -2.6723, -2.7515, -3.1346, -3.1660], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8845, device='cuda:0', dtype=torch.float64)
tensor([-1.8474, -2.6609, -2.7538, -3.1475, -3.1598], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7824, device='cuda:0', dtype=torch.float64)
tensor([-1.8419, -2.6464, -2.7592, -3.1605, -3.1571], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7490, device='cuda:0', dtype=torch.float64)
tensor([-1.8378, -2.6329, -2.7654, -3.1742, -3.1555], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8131, device='cuda:0', dtype=torch.float64)
tensor([-1.8389, -2.6224, -2.7718, -3.1804, -3.1593], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9319, device='cuda:0', dtype=torch.float64)
tensor([-1.8451, -2.6181, -2.7778, -3.1790, -3.1660], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8983, device='cuda:0', dtype=torch.float64)
tensor([-1.8535, -2.6196, -2.7826, -3.1747, -3.1754], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9060, device='cuda:0', dtype=torch.float64)
tensor([-1.8636, -2.6241, -2.7844, -3.1675, -3.1859], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8247, device='cuda:0', dtype=torch.float64)
tensor([-1.8722, -2.6298, -2.7855, -3.1596, -3.1934], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8411, device='cuda:0', dtype=torch.float64)
tensor([-1.8771, -2.6343, -2.7886, -3.1514, -3.1978], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7957, device='cuda:0', dtype=torch.float64)
tensor([-1.8733, -2.6379, -2.7933, -3.1470, -3.1997], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6409, device='cuda:0', dtype=torch.float64)
tensor([-1.8678, -2.6418, -2.7969, -3.1430, -3.1983], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6010, device='cuda:0', dtype=torch.float64)
tensor([-1.8589, -2.6456, -2.7986, -3.1409, -3.1942], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7479, device='cuda:0', dtype=torch.float64)
tensor([-1.8479, -2.6483, -2.7978, -3.1416, -3.1862], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8941, device='cuda:0', dtype=torch.float64)
tensor([-1.8412, -2.6491, -2.7959, -3.1413, -3.1792], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7891, device='cuda:0', dtype=torch.float64)
tensor([-1.8398, -2.6530, -2.7908, -3.1405, -3.1760], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8488, device='cuda:0', dtype=torch.float64)
tensor([-1.8441, -2.6586, -2.7832, -3.1357, -3.1778], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8380, device='cuda:0', dtype=torch.float64)
tensor([-1.8518, -2.6623, -2.7753, -3.1319, -3.1802], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7989, device='cuda:0', dtype=torch.float64)
tensor([-1.8593, -2.6648, -2.7683, -3.1276, -3.1827], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8391, device='cuda:0', dtype=torch.float64)
tensor([-1.8596, -2.6631, -2.7653, -3.1270, -3.1775], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9633, device='cuda:0', dtype=torch.float64)
tensor([-1.8582, -2.6585, -2.7700, -3.1256, -3.1747], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8907, device='cuda:0', dtype=torch.float64)
tensor([-1.8543, -2.6506, -2.7770, -3.1259, -3.1709], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9629, device='cuda:0', dtype=torch.float64)
tensor([-1.8492, -2.6430, -2.7831, -3.1286, -3.1668], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8768, device='cuda:0', dtype=torch.float64)
tensor([-1.8473, -2.6369, -2.7900, -3.1319, -3.1674], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8449, device='cuda:0', dtype=torch.float64)
tensor([-1.8461, -2.6319, -2.7944, -3.1360, -3.1658], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0908, device='cuda:0', dtype=torch.float64)
tensor([-1.8477, -2.6305, -2.7948, -3.1403, -3.1621], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9503, device='cuda:0', dtype=torch.float64)
tensor([-1.8528, -2.6373, -2.7894, -3.1414, -3.1584], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7618, device='cuda:0', dtype=torch.float64)
tensor([-1.8553, -2.6474, -2.7824, -3.1411, -3.1541], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9106, device='cuda:0', dtype=torch.float64)
tensor([-1.8586, -2.6560, -2.7788, -3.1422, -3.1526], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8988, device='cuda:0', dtype=torch.float64)
tensor([-1.8599, -2.6649, -2.7758, -3.1456, -3.1529], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0071, device='cuda:0', dtype=torch.float64)
tensor([-1.8617, -2.6695, -2.7760, -3.1485, -3.1550], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9346, device='cuda:0', dtype=torch.float64)
tensor([-1.8632, -2.6693, -2.7785, -3.1500, -3.1589], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8038, device='cuda:0', dtype=torch.float64)
tensor([-1.8653, -2.6665, -2.7828, -3.1552, -3.1643], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7982, device='cuda:0', dtype=torch.float64)
tensor([-1.8664, -2.6615, -2.7875, -3.1602, -3.1677], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9399, device='cuda:0', dtype=torch.float64)
tensor([-1.8662, -2.6541, -2.7938, -3.1614, -3.1672], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0654, device='cuda:0', dtype=torch.float64)
tensor([-1.8688, -2.6495, -2.7965, -3.1624, -3.1638], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8966, device='cuda:0', dtype=torch.float64)
tensor([-1.8682, -2.6457, -2.7969, -3.1645, -3.1586], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8990, device='cuda:0', dtype=torch.float64)
tensor([-1.8708, -2.6448, -2.7958, -3.1653, -3.1563], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8621, device='cuda:0', dtype=torch.float64)
tensor([-1.8712, -2.6486, -2.7945, -3.1649, -3.1558], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9443, device='cuda:0', dtype=torch.float64)
tensor([-1.8709, -2.6538, -2.7924, -3.1610, -3.1571], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9456, device='cuda:0', dtype=torch.float64)
tensor([-1.8692, -2.6568, -2.7932, -3.1597, -3.1629], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7328, device='cuda:0', dtype=torch.float64)
tensor([-1.8653, -2.6607, -2.7946, -3.1581, -3.1709], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7989, device='cuda:0', dtype=torch.float64)
tensor([-1.8629, -2.6647, -2.7951, -3.1520, -3.1794], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8300, device='cuda:0', dtype=torch.float64)
tensor([-1.8617, -2.6709, -2.7925, -3.1455, -3.1857], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2196, device='cuda:0', dtype=torch.float64)
tensor([-1.8579, -2.6749, -2.7892, -3.1447, -3.1853], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8802, device='cuda:0', dtype=torch.float64)
tensor([-1.8542, -2.6751, -2.7868, -3.1477, -3.1831], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7658, device='cuda:0', dtype=torch.float64)
tensor([-1.8506, -2.6719, -2.7879, -3.1514, -3.1798], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9020, device='cuda:0', dtype=torch.float64)
tensor([-1.8480, -2.6664, -2.7925, -3.1538, -3.1803], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0243, device='cuda:0', dtype=torch.float64)
tensor([-1.8457, -2.6590, -2.7973, -3.1609, -3.1852], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7408, device='cuda:0', dtype=torch.float64)
tensor([-1.8417, -2.6490, -2.8024, -3.1681, -3.1869], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8694, device='cuda:0', dtype=torch.float64)
tensor([-1.8368, -2.6399, -2.8021, -3.1733, -3.1824], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1031, device='cuda:0', dtype=torch.float64)
tensor([-1.8328, -2.6338, -2.7980, -3.1739, -3.1765], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9903, device='cuda:0', dtype=torch.float64)
tensor([-1.8294, -2.6333, -2.7909, -3.1705, -3.1635], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8337, device='cuda:0', dtype=torch.float64)
tensor([-1.8306, -2.6397, -2.7828, -3.1658, -3.1597], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1051, device='cuda:0', dtype=torch.float64)
tensor([-1.8399, -2.6503, -2.7754, -3.1587, -3.1628], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1057, device='cuda:0', dtype=torch.float64)
tensor([-1.8512, -2.6619, -2.7688, -3.1537, -3.1718], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2092, device='cuda:0', dtype=torch.float64)
tensor([-1.8685, -2.6701, -2.7662, -3.1490, -3.1885], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0304, device='cuda:0', dtype=torch.float64)
tensor([-1.8826, -2.6783, -2.7666, -3.1465, -3.1997], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9437, device='cuda:0', dtype=torch.float64)
tensor([-1.8882, -2.6818, -2.7681, -3.1473, -3.2006], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1057, device='cuda:0', dtype=torch.float64)
tensor([-1.8850, -2.6815, -2.7714, -3.1484, -3.1927], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9298, device='cuda:0', dtype=torch.float64)
tensor([-1.8732, -2.6735, -2.7750, -3.1540, -3.1795], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7439, device='cuda:0', dtype=torch.float64)
tensor([-1.8579, -2.6622, -2.7791, -3.1626, -3.1645], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8449, device='cuda:0', dtype=torch.float64)
tensor([-1.8488, -2.6498, -2.7831, -3.1732, -3.1550], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0339, device='cuda:0', dtype=torch.float64)
tensor([-1.8435, -2.6407, -2.7882, -3.1818, -3.1557], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8823, device='cuda:0', dtype=torch.float64)
tensor([-1.8435, -2.6331, -2.7929, -3.1845, -3.1631], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8759, device='cuda:0', dtype=torch.float64)
tensor([-1.8465, -2.6301, -2.7952, -3.1850, -3.1715], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8356, device='cuda:0', dtype=torch.float64)
tensor([-1.8537, -2.6323, -2.7931, -3.1809, -3.1798], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0123, device='cuda:0', dtype=torch.float64)
tensor([-1.8618, -2.6389, -2.7879, -3.1706, -3.1854], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0040, device='cuda:0', dtype=torch.float64)
tensor([-1.8706, -2.6444, -2.7872, -3.1576, -3.1881], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0343, device='cuda:0', dtype=torch.float64)
tensor([-1.8780, -2.6493, -2.7906, -3.1432, -3.1916], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0073, device='cuda:0', dtype=torch.float64)
tensor([-1.8796, -2.6516, -2.7951, -3.1338, -3.1931], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9024, device='cuda:0', dtype=torch.float64)
tensor([-1.8796, -2.6527, -2.8008, -3.1278, -3.1950], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0096, device='cuda:0', dtype=torch.float64)
tensor([-1.8824, -2.6536, -2.8024, -3.1239, -3.1963], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7819, device='cuda:0', dtype=torch.float64)
tensor([-1.8821, -2.6526, -2.8029, -3.1241, -3.1943], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7203, device='cuda:0', dtype=torch.float64)
tensor([-1.8783, -2.6517, -2.8007, -3.1270, -3.1828], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7909, device='cuda:0', dtype=torch.float64)
tensor([-1.8692, -2.6466, -2.7996, -3.1341, -3.1680], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8058, device='cuda:0', dtype=torch.float64)
tensor([-1.8575, -2.6413, -2.8012, -3.1463, -3.1529], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0654, device='cuda:0', dtype=torch.float64)
tensor([-1.8470, -2.6389, -2.8026, -3.1581, -3.1421], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0293, device='cuda:0', dtype=torch.float64)
tensor([-1.8429, -2.6394, -2.8033, -3.1616, -3.1369], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9576, device='cuda:0', dtype=torch.float64)
tensor([-1.8460, -2.6428, -2.8013, -3.1639, -3.1385], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8537, device='cuda:0', dtype=torch.float64)
tensor([-1.8552, -2.6487, -2.7972, -3.1648, -3.1446], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8927, device='cuda:0', dtype=torch.float64)
tensor([-1.8672, -2.6570, -2.7925, -3.1651, -3.1505], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9550, device='cuda:0', dtype=torch.float64)
tensor([-1.8774, -2.6642, -2.7878, -3.1658, -3.1586], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9700, device='cuda:0', dtype=torch.float64)
tensor([-1.8842, -2.6703, -2.7834, -3.1716, -3.1645], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8742, device='cuda:0', dtype=torch.float64)
tensor([-1.8875, -2.6736, -2.7766, -3.1755, -3.1740], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0282, device='cuda:0', dtype=torch.float64)
tensor([-1.8867, -2.6795, -2.7692, -3.1756, -3.1759], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2959, device='cuda:0', dtype=torch.float64)
tensor([-1.8801, -2.6828, -2.7626, -3.1756, -3.1739], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0836, device='cuda:0', dtype=torch.float64)
tensor([-1.8669, -2.6792, -2.7588, -3.1787, -3.1681], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0858, device='cuda:0', dtype=torch.float64)
tensor([-1.8501, -2.6690, -2.7642, -3.1846, -3.1642], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9502, device='cuda:0', dtype=torch.float64)
tensor([-1.8380, -2.6603, -2.7716, -3.1860, -3.1609], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9012, device='cuda:0', dtype=torch.float64)
tensor([-1.8301, -2.6530, -2.7772, -3.1826, -3.1597], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9946, device='cuda:0', dtype=torch.float64)
tensor([-1.8293, -2.6475, -2.7819, -3.1777, -3.1644], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0600, device='cuda:0', dtype=torch.float64)
tensor([-1.8336, -2.6486, -2.7837, -3.1701, -3.1672], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8765, device='cuda:0', dtype=torch.float64)
tensor([-1.8415, -2.6531, -2.7839, -3.1599, -3.1682], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9223, device='cuda:0', dtype=torch.float64)
tensor([-1.8553, -2.6603, -2.7835, -3.1469, -3.1712], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0903, device='cuda:0', dtype=torch.float64)
tensor([-1.8683, -2.6681, -2.7837, -3.1349, -3.1755], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9787, device='cuda:0', dtype=torch.float64)
tensor([-1.8770, -2.6706, -2.7869, -3.1297, -3.1805], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4274, device='cuda:0', dtype=torch.float64)
tensor([-1.8828, -2.6682, -2.7896, -3.1305, -3.1896], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1125, device='cuda:0', dtype=torch.float64)
tensor([-1.8815, -2.6614, -2.7924, -3.1374, -3.1946], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2497, device='cuda:0', dtype=torch.float64)
tensor([-1.8731, -2.6543, -2.7940, -3.1500, -3.1944], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9201, device='cuda:0', dtype=torch.float64)
tensor([-1.8581, -2.6452, -2.7982, -3.1641, -3.1878], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0146, device='cuda:0', dtype=torch.float64)
tensor([-1.8417, -2.6386, -2.8039, -3.1761, -3.1771], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7299, device='cuda:0', dtype=torch.float64)
tensor([-1.8325, -2.6375, -2.8049, -3.1865, -3.1697], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9979, device='cuda:0', dtype=torch.float64)
tensor([-1.8353, -2.6395, -2.8062, -3.1876, -3.1661], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0527, device='cuda:0', dtype=torch.float64)
tensor([-1.8480, -2.6456, -2.8054, -3.1795, -3.1693], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0336, device='cuda:0', dtype=torch.float64)
tensor([-1.8683, -2.6533, -2.8013, -3.1643, -3.1796], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6962, device='cuda:0', dtype=torch.float64)
tensor([-1.8862, -2.6590, -2.7969, -3.1514, -3.1876], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0851, device='cuda:0', dtype=torch.float64)
tensor([-1.9012, -2.6655, -2.7884, -3.1398, -3.1903], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8717, device='cuda:0', dtype=torch.float64)
tensor([-1.9056, -2.6698, -2.7795, -3.1306, -3.1869], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9138, device='cuda:0', dtype=torch.float64)
tensor([-1.8980, -2.6724, -2.7734, -3.1258, -3.1794], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9291, device='cuda:0', dtype=torch.float64)
tensor([-1.8831, -2.6686, -2.7740, -3.1290, -3.1706], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0961, device='cuda:0', dtype=torch.float64)
tensor([-1.8680, -2.6632, -2.7809, -3.1396, -3.1669], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1364, device='cuda:0', dtype=torch.float64)
tensor([-1.8549, -2.6568, -2.7883, -3.1504, -3.1678], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9498, device='cuda:0', dtype=torch.float64)
tensor([-1.8445, -2.6521, -2.7943, -3.1594, -3.1704], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2044, device='cuda:0', dtype=torch.float64)
tensor([-1.8387, -2.6462, -2.7986, -3.1669, -3.1760], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1370, device='cuda:0', dtype=torch.float64)
tensor([-1.8397, -2.6422, -2.8036, -3.1698, -3.1810], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2126, device='cuda:0', dtype=torch.float64)
tensor([-1.8464, -2.6417, -2.8056, -3.1688, -3.1828], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8585, device='cuda:0', dtype=torch.float64)
tensor([-1.8546, -2.6431, -2.8072, -3.1698, -3.1857], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0382, device='cuda:0', dtype=torch.float64)
tensor([-1.8597, -2.6428, -2.8087, -3.1723, -3.1862], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1273, device='cuda:0', dtype=torch.float64)
tensor([-1.8644, -2.6454, -2.8097, -3.1786, -3.1831], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2702, device='cuda:0', dtype=torch.float64)
tensor([-1.8688, -2.6451, -2.8121, -3.1850, -3.1764], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9646, device='cuda:0', dtype=torch.float64)
tensor([-1.8725, -2.6457, -2.8109, -3.1891, -3.1684], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9046, device='cuda:0', dtype=torch.float64)
tensor([-1.8741, -2.6472, -2.8040, -3.1875, -3.1604], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3297, device='cuda:0', dtype=torch.float64)
tensor([-1.8713, -2.6484, -2.7914, -3.1876, -3.1462], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0162, device='cuda:0', dtype=torch.float64)
tensor([-1.8706, -2.6517, -2.7798, -3.1817, -3.1366], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0406, device='cuda:0', dtype=torch.float64)
tensor([-1.8700, -2.6557, -2.7677, -3.1753, -3.1346], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9189, device='cuda:0', dtype=torch.float64)
tensor([-1.8706, -2.6606, -2.7586, -3.1697, -3.1389], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1964, device='cuda:0', dtype=torch.float64)
tensor([-1.8765, -2.6699, -2.7510, -3.1601, -3.1466], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1515, device='cuda:0', dtype=torch.float64)
tensor([-1.8840, -2.6783, -2.7457, -3.1554, -3.1633], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9126, device='cuda:0', dtype=torch.float64)
tensor([-1.8899, -2.6855, -2.7428, -3.1505, -3.1794], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2900, device='cuda:0', dtype=torch.float64)
tensor([-1.8914, -2.6874, -2.7478, -3.1501, -3.1947], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9397, device='cuda:0', dtype=torch.float64)
tensor([-1.8864, -2.6876, -2.7569, -3.1507, -3.2037], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0475, device='cuda:0', dtype=torch.float64)
tensor([-1.8778, -2.6845, -2.7674, -3.1550, -3.2095], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9767, device='cuda:0', dtype=torch.float64)
tensor([-1.8685, -2.6762, -2.7806, -3.1586, -3.2123], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9742, device='cuda:0', dtype=torch.float64)
tensor([-1.8653, -2.6631, -2.7903, -3.1606, -3.2091], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9302, device='cuda:0', dtype=torch.float64)
tensor([-1.8643, -2.6507, -2.7976, -3.1659, -3.2082], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3610, device='cuda:0', dtype=torch.float64)
tensor([-1.8718, -2.6385, -2.8010, -3.1668, -3.2137], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1814, device='cuda:0', dtype=torch.float64)
tensor([-1.8786, -2.6331, -2.7994, -3.1625, -3.2140], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3560, device='cuda:0', dtype=torch.float64)
tensor([-1.8870, -2.6319, -2.8021, -3.1573, -3.2171], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0417, device='cuda:0', dtype=torch.float64)
tensor([-1.8919, -2.6344, -2.8032, -3.1502, -3.2150], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1747, device='cuda:0', dtype=torch.float64)
tensor([-1.8860, -2.6385, -2.8034, -3.1432, -3.2080], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1282, device='cuda:0', dtype=torch.float64)
tensor([-1.8709, -2.6451, -2.8028, -3.1398, -3.1942], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0044, device='cuda:0', dtype=torch.float64)
tensor([-1.8538, -2.6522, -2.8029, -3.1399, -3.1795], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1221, device='cuda:0', dtype=torch.float64)
tensor([-1.8427, -2.6593, -2.8074, -3.1437, -3.1713], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3766, device='cuda:0', dtype=torch.float64)
tensor([-1.8421, -2.6686, -2.8136, -3.1481, -3.1768], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1051, device='cuda:0', dtype=torch.float64)
tensor([-1.8450, -2.6766, -2.8199, -3.1565, -3.1865], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9351, device='cuda:0', dtype=torch.float64)
tensor([-1.8489, -2.6786, -2.8275, -3.1659, -3.1928], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9844, device='cuda:0', dtype=torch.float64)
tensor([-1.8549, -2.6767, -2.8333, -3.1720, -3.1945], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9952, device='cuda:0', dtype=torch.float64)
tensor([-1.8605, -2.6677, -2.8332, -3.1662, -3.1871], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1227, device='cuda:0', dtype=torch.float64)
tensor([-1.8607, -2.6553, -2.8306, -3.1613, -3.1738], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9978, device='cuda:0', dtype=torch.float64)
tensor([-1.8655, -2.6445, -2.8262, -3.1554, -3.1616], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1285, device='cuda:0', dtype=torch.float64)
tensor([-1.8738, -2.6373, -2.8230, -3.1490, -3.1552], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0436, device='cuda:0', dtype=torch.float64)
tensor([-1.8860, -2.6349, -2.8172, -3.1410, -3.1564], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9611, device='cuda:0', dtype=torch.float64)
tensor([-1.8983, -2.6387, -2.8095, -3.1333, -3.1625], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9527, device='cuda:0', dtype=torch.float64)
tensor([-1.9074, -2.6465, -2.7983, -3.1270, -3.1698], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1329, device='cuda:0', dtype=torch.float64)
tensor([-1.9162, -2.6609, -2.7849, -3.1221, -3.1798], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2512, device='cuda:0', dtype=torch.float64)
tensor([-1.9230, -2.6761, -2.7702, -3.1205, -3.1866], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9876, device='cuda:0', dtype=torch.float64)
tensor([-1.9258, -2.6878, -2.7610, -3.1250, -3.1948], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1295, device='cuda:0', dtype=torch.float64)
tensor([-1.9215, -2.6926, -2.7567, -3.1347, -3.2019], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2521, device='cuda:0', dtype=torch.float64)
tensor([-1.9096, -2.6863, -2.7558, -3.1466, -3.2062], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0704, device='cuda:0', dtype=torch.float64)
tensor([-1.8920, -2.6763, -2.7586, -3.1617, -3.2064], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9088, device='cuda:0', dtype=torch.float64)
tensor([-1.8747, -2.6684, -2.7661, -3.1756, -3.2035], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9859, device='cuda:0', dtype=torch.float64)
tensor([-1.8558, -2.6640, -2.7738, -3.1926, -3.1974], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2144, device='cuda:0', dtype=torch.float64)
tensor([-1.8463, -2.6612, -2.7825, -3.2053, -3.1928], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1166, device='cuda:0', dtype=torch.float64)
tensor([-1.8457, -2.6661, -2.7874, -3.2139, -3.1898], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8349, device='cuda:0', dtype=torch.float64)
tensor([-1.8507, -2.6736, -2.7893, -3.2184, -3.1865], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3743, device='cuda:0', dtype=torch.float64)
tensor([-1.8574, -2.6746, -2.7928, -3.2170, -3.1835], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9937, device='cuda:0', dtype=torch.float64)
tensor([-1.8692, -2.6780, -2.7945, -3.2082, -3.1835], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3044, device='cuda:0', dtype=torch.float64)
tensor([-1.8776, -2.6807, -2.7963, -3.1956, -3.1786], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0622, device='cuda:0', dtype=torch.float64)
tensor([-1.8852, -2.6813, -2.7997, -3.1840, -3.1773], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1338, device='cuda:0', dtype=torch.float64)
tensor([-1.8906, -2.6818, -2.8004, -3.1764, -3.1732], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0338, device='cuda:0', dtype=torch.float64)
tensor([-1.8950, -2.6799, -2.8015, -3.1698, -3.1734], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2823, device='cuda:0', dtype=torch.float64)
tensor([-1.8931, -2.6744, -2.8049, -3.1657, -3.1748], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0945, device='cuda:0', dtype=torch.float64)
tensor([-1.8883, -2.6679, -2.8092, -3.1665, -3.1790], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1849, device='cuda:0', dtype=torch.float64)
tensor([-1.8847, -2.6593, -2.8130, -3.1624, -3.1802], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1203, device='cuda:0', dtype=torch.float64)
tensor([-1.8840, -2.6537, -2.8142, -3.1542, -3.1799], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2483, device='cuda:0', dtype=torch.float64)
tensor([-1.8855, -2.6496, -2.8137, -3.1455, -3.1802], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1597, device='cuda:0', dtype=torch.float64)
tensor([-1.8860, -2.6457, -2.8146, -3.1433, -3.1859], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0929, device='cuda:0', dtype=torch.float64)
tensor([-1.8847, -2.6420, -2.8131, -3.1444, -3.1896], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0208, device='cuda:0', dtype=torch.float64)
tensor([-1.8811, -2.6404, -2.8118, -3.1504, -3.1956], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4311, device='cuda:0', dtype=torch.float64)
tensor([-1.8758, -2.6461, -2.8070, -3.1588, -3.1997], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1022, device='cuda:0', dtype=torch.float64)
tensor([-1.8699, -2.6540, -2.8028, -3.1679, -3.2004], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2229, device='cuda:0', dtype=torch.float64)
tensor([-1.8631, -2.6592, -2.7998, -3.1800, -3.2037], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0452, device='cuda:0', dtype=torch.float64)
tensor([-1.8547, -2.6635, -2.8018, -3.1881, -3.2018], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9998, device='cuda:0', dtype=torch.float64)
tensor([-1.8514, -2.6704, -2.8009, -3.1919, -3.1999], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2137, device='cuda:0', dtype=torch.float64)
tensor([-1.8501, -2.6768, -2.7960, -3.1885, -3.1996], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1685, device='cuda:0', dtype=torch.float64)
tensor([-1.8537, -2.6844, -2.7881, -3.1815, -3.2019], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1608, device='cuda:0', dtype=torch.float64)
tensor([-1.8653, -2.6905, -2.7802, -3.1735, -3.2050], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3323, device='cuda:0', dtype=torch.float64)
tensor([-1.8860, -2.6984, -2.7694, -3.1626, -3.2101], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2978, device='cuda:0', dtype=torch.float64)
tensor([-1.9066, -2.7033, -2.7614, -3.1486, -3.2158], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3153, device='cuda:0', dtype=torch.float64)
tensor([-1.9250, -2.7010, -2.7583, -3.1374, -3.2257], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9838, device='cuda:0', dtype=torch.float64)
tensor([-1.9327, -2.6899, -2.7639, -3.1321, -3.2344], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3066, device='cuda:0', dtype=torch.float64)
tensor([-1.9299, -2.6727, -2.7732, -3.1295, -3.2332], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2378, device='cuda:0', dtype=torch.float64)
tensor([-1.9181, -2.6532, -2.7769, -3.1247, -3.2230], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1205, device='cuda:0', dtype=torch.float64)
tensor([-1.8989, -2.6333, -2.7782, -3.1262, -3.2101], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9879, device='cuda:0', dtype=torch.float64)
tensor([-1.8765, -2.6190, -2.7781, -3.1376, -3.1923], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9305, device='cuda:0', dtype=torch.float64)
tensor([-1.8567, -2.6111, -2.7769, -3.1549, -3.1741], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0846, device='cuda:0', dtype=torch.float64)
tensor([-1.8450, -2.6114, -2.7766, -3.1731, -3.1638], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2456, device='cuda:0', dtype=torch.float64)
tensor([-1.8410, -2.6155, -2.7828, -3.1870, -3.1661], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1959, device='cuda:0', dtype=torch.float64)
tensor([-1.8436, -2.6246, -2.7918, -3.1955, -3.1761], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9845, device='cuda:0', dtype=torch.float64)
tensor([-1.8477, -2.6354, -2.8037, -3.1962, -3.1881], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2312, device='cuda:0', dtype=torch.float64)
tensor([-1.8563, -2.6488, -2.8145, -3.1952, -3.1968], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2688, device='cuda:0', dtype=torch.float64)
tensor([-1.8683, -2.6641, -2.8211, -3.1874, -3.2033], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2938, device='cuda:0', dtype=torch.float64)
tensor([-1.8772, -2.6770, -2.8208, -3.1713, -3.2017], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2823, device='cuda:0', dtype=torch.float64)
tensor([-1.8861, -2.6869, -2.8156, -3.1568, -3.1930], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1872, device='cuda:0', dtype=torch.float64)
tensor([-1.8940, -2.6947, -2.8060, -3.1410, -3.1841], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2352, device='cuda:0', dtype=torch.float64)
tensor([-1.8933, -2.6972, -2.7982, -3.1345, -3.1766], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3540, device='cuda:0', dtype=torch.float64)
tensor([-1.8960, -2.6969, -2.7898, -3.1323, -3.1773], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2409, device='cuda:0', dtype=torch.float64)
tensor([-1.9027, -2.6994, -2.7815, -3.1365, -3.1841], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9724, device='cuda:0', dtype=torch.float64)
tensor([-1.9039, -2.6983, -2.7808, -3.1484, -3.1937], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4891, device='cuda:0', dtype=torch.float64)
tensor([-1.8981, -2.6924, -2.7824, -3.1628, -3.1964], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2789, device='cuda:0', dtype=torch.float64)
tensor([-1.8903, -2.6876, -2.7916, -3.1784, -3.1990], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1565, device='cuda:0', dtype=torch.float64)
tensor([-1.8842, -2.6801, -2.8070, -3.1920, -3.2044], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1896, device='cuda:0', dtype=torch.float64)
tensor([-1.8813, -2.6769, -2.8182, -3.1997, -3.2103], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2362, device='cuda:0', dtype=torch.float64)
tensor([-1.8795, -2.6737, -2.8310, -3.1987, -3.2169], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1325, device='cuda:0', dtype=torch.float64)
tensor([-1.8769, -2.6665, -2.8450, -3.1956, -3.2271], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5103, device='cuda:0', dtype=torch.float64)
tensor([-1.8744, -2.6569, -2.8589, -3.1916, -3.2318], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1948, device='cuda:0', dtype=torch.float64)
tensor([-1.8747, -2.6502, -2.8615, -3.1828, -3.2297], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0902, device='cuda:0', dtype=torch.float64)
tensor([-1.8792, -2.6483, -2.8513, -3.1688, -3.2214], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2709, device='cuda:0', dtype=torch.float64)
tensor([-1.8877, -2.6590, -2.8285, -3.1516, -3.2123], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1747, device='cuda:0', dtype=torch.float64)
tensor([-1.8952, -2.6735, -2.7971, -3.1339, -3.1994], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0506, device='cuda:0', dtype=torch.float64)
tensor([-1.8996, -2.6887, -2.7659, -3.1218, -3.1880], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1253, device='cuda:0', dtype=torch.float64)
tensor([-1.9003, -2.7014, -2.7452, -3.1203, -3.1831], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1384, device='cuda:0', dtype=torch.float64)
tensor([-1.8915, -2.7028, -2.7315, -3.1306, -3.1785], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1028, device='cuda:0', dtype=torch.float64)
tensor([-1.8824, -2.6980, -2.7277, -3.1423, -3.1782], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9102, device='cuda:0', dtype=torch.float64)
tensor([-1.8707, -2.6846, -2.7365, -3.1592, -3.1821], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3329, device='cuda:0', dtype=torch.float64)
tensor([-1.8649, -2.6658, -2.7572, -3.1728, -3.1898], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0434, device='cuda:0', dtype=torch.float64)
tensor([-1.8571, -2.6460, -2.7783, -3.1866, -3.1925], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1813, device='cuda:0', dtype=torch.float64)
tensor([-1.8557, -2.6331, -2.7984, -3.1947, -3.1945], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9419, device='cuda:0', dtype=torch.float64)
tensor([-1.8613, -2.6298, -2.8121, -3.1957, -3.1946], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3776, device='cuda:0', dtype=torch.float64)
tensor([-1.8728, -2.6365, -2.8181, -3.1929, -3.1923], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3696, device='cuda:0', dtype=torch.float64)
tensor([-1.8878, -2.6409, -2.8152, -3.1809, -3.1921], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2667, device='cuda:0', dtype=torch.float64)
tensor([-1.9079, -2.6519, -2.8132, -3.1664, -3.1947], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4694, device='cuda:0', dtype=torch.float64)
tensor([-1.9239, -2.6711, -2.8083, -3.1489, -3.1969], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0579, device='cuda:0', dtype=torch.float64)
tensor([-1.9301, -2.6883, -2.7991, -3.1313, -3.1906], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2841, device='cuda:0', dtype=torch.float64)
tensor([-1.9299, -2.6991, -2.7891, -3.1178, -3.1762], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2130, device='cuda:0', dtype=torch.float64)
tensor([-1.9240, -2.7017, -2.7850, -3.1094, -3.1639], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1470, device='cuda:0', dtype=torch.float64)
tensor([-1.9153, -2.7011, -2.7802, -3.1118, -3.1548], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2470, device='cuda:0', dtype=torch.float64)
tensor([-1.9090, -2.7034, -2.7789, -3.1159, -3.1534], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2504, device='cuda:0', dtype=torch.float64)
tensor([-1.8970, -2.6956, -2.7868, -3.1314, -3.1554], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4029, device='cuda:0', dtype=torch.float64)
tensor([-1.8875, -2.6836, -2.7985, -3.1537, -3.1629], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0914, device='cuda:0', dtype=torch.float64)
tensor([-1.8882, -2.6741, -2.8061, -3.1680, -3.1735], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0305, device='cuda:0', dtype=torch.float64)
tensor([-1.8890, -2.6603, -2.8169, -3.1873, -3.1822], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2274, device='cuda:0', dtype=torch.float64)
tensor([-1.8872, -2.6448, -2.8225, -3.2030, -3.1810], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4006, device='cuda:0', dtype=torch.float64)
tensor([-1.8845, -2.6291, -2.8188, -3.2066, -3.1700], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0902, device='cuda:0', dtype=torch.float64)
tensor([-1.8848, -2.6210, -2.8120, -3.2003, -3.1591], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4003, device='cuda:0', dtype=torch.float64)
tensor([-1.8948, -2.6226, -2.8029, -3.1910, -3.1531], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1495, device='cuda:0', dtype=torch.float64)
tensor([-1.9037, -2.6283, -2.7948, -3.1815, -3.1518], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2065, device='cuda:0', dtype=torch.float64)
tensor([-1.9132, -2.6395, -2.7916, -3.1748, -3.1591], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0271, device='cuda:0', dtype=torch.float64)
tensor([-1.9201, -2.6511, -2.7891, -3.1708, -3.1699], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1847, device='cuda:0', dtype=torch.float64)
tensor([-1.9258, -2.6662, -2.7867, -3.1650, -3.1807], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2387, device='cuda:0', dtype=torch.float64)
tensor([-1.9250, -2.6810, -2.7845, -3.1640, -3.1887], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2716, device='cuda:0', dtype=torch.float64)
tensor([-1.9220, -2.6959, -2.7866, -3.1562, -3.1934], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2270, device='cuda:0', dtype=torch.float64)
tensor([-1.9088, -2.7030, -2.7913, -3.1543, -3.1933], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2965, device='cuda:0', dtype=torch.float64)
tensor([-1.8872, -2.7065, -2.8004, -3.1540, -3.1928], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3610, device='cuda:0', dtype=torch.float64)
tensor([-1.8661, -2.7029, -2.8129, -3.1599, -3.1994], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3674, device='cuda:0', dtype=torch.float64)
tensor([-1.8550, -2.6966, -2.8265, -3.1704, -3.2120], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1385, device='cuda:0', dtype=torch.float64)
tensor([-1.8527, -2.6920, -2.8370, -3.1864, -3.2300], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4642, device='cuda:0', dtype=torch.float64)
tensor([-1.8548, -2.6946, -2.8429, -3.2034, -3.2447], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3092, device='cuda:0', dtype=torch.float64)
tensor([-1.8636, -2.6926, -2.8409, -3.2053, -3.2479], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2595, device='cuda:0', dtype=torch.float64)
tensor([-1.8729, -2.6879, -2.8298, -3.2001, -3.2412], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9787, device='cuda:0', dtype=torch.float64)
tensor([-1.8824, -2.6829, -2.8152, -3.1943, -3.2323], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9802, device='cuda:0', dtype=torch.float64)
tensor([-1.8906, -2.6781, -2.7990, -3.1891, -3.2252], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5742, device='cuda:0', dtype=torch.float64)
tensor([-1.9027, -2.6807, -2.7841, -3.1830, -3.2167], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1939, device='cuda:0', dtype=torch.float64)
tensor([-1.9113, -2.6875, -2.7753, -3.1792, -3.2108], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3554, device='cuda:0', dtype=torch.float64)
tensor([-1.9189, -2.6895, -2.7708, -3.1791, -3.2050], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2247, device='cuda:0', dtype=torch.float64)
tensor([-1.9203, -2.6860, -2.7738, -3.1848, -3.2047], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2702, device='cuda:0', dtype=torch.float64)
tensor([-1.9155, -2.6806, -2.7749, -3.1870, -3.1951], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1777, device='cuda:0', dtype=torch.float64)
tensor([-1.9069, -2.6737, -2.7787, -3.1827, -3.1835], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3383, device='cuda:0', dtype=torch.float64)
tensor([-1.9036, -2.6621, -2.7846, -3.1706, -3.1788], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0893, device='cuda:0', dtype=torch.float64)
tensor([-1.9047, -2.6543, -2.7893, -3.1518, -3.1756], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3763, device='cuda:0', dtype=torch.float64)
tensor([-1.9165, -2.6569, -2.7950, -3.1332, -3.1829], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5481, device='cuda:0', dtype=torch.float64)
tensor([-1.9259, -2.6607, -2.7964, -3.1144, -3.1843], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4819, device='cuda:0', dtype=torch.float64)
tensor([-1.9415, -2.6754, -2.7951, -3.0939, -3.1929], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2015, device='cuda:0', dtype=torch.float64)
tensor([-1.9484, -2.6886, -2.7900, -3.0864, -3.1950], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2974, device='cuda:0', dtype=torch.float64)
tensor([-1.9414, -2.6913, -2.7921, -3.0903, -3.1982], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3362, device='cuda:0', dtype=torch.float64)
tensor([-1.9273, -2.6951, -2.7954, -3.1005, -3.2001], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2323, device='cuda:0', dtype=torch.float64)
tensor([-1.9040, -2.6926, -2.8042, -3.1265, -3.2044], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2486, device='cuda:0', dtype=torch.float64)
tensor([-1.8802, -2.6882, -2.8175, -3.1559, -3.2130], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4924, device='cuda:0', dtype=torch.float64)
tensor([-1.8569, -2.6823, -2.8274, -3.1849, -3.2178], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2973, device='cuda:0', dtype=torch.float64)
tensor([-1.8425, -2.6789, -2.8333, -3.2095, -3.2216], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4439, device='cuda:0', dtype=torch.float64)
tensor([-1.8358, -2.6758, -2.8348, -3.2304, -3.2228], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2502, device='cuda:0', dtype=torch.float64)
tensor([-1.8366, -2.6791, -2.8298, -3.2451, -3.2191], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3783, device='cuda:0', dtype=torch.float64)
tensor([-1.8447, -2.6826, -2.8135, -3.2434, -3.2106], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2318, device='cuda:0', dtype=torch.float64)
tensor([-1.8618, -2.6929, -2.7856, -3.2291, -3.1985], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6111, device='cuda:0', dtype=torch.float64)
tensor([-1.8804, -2.7029, -2.7574, -3.2103, -3.1870], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2988, device='cuda:0', dtype=torch.float64)
tensor([-1.9089, -2.7108, -2.7385, -3.1891, -3.1823], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1674, device='cuda:0', dtype=torch.float64)
tensor([-1.9340, -2.7163, -2.7268, -3.1719, -3.1840], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2296, device='cuda:0', dtype=torch.float64)
tensor([-1.9507, -2.7136, -2.7249, -3.1670, -3.1880], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9512, device='cuda:0', dtype=torch.float64)
tensor([-1.9540, -2.7069, -2.7297, -3.1737, -3.1825], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3206, device='cuda:0', dtype=torch.float64)
tensor([-1.9490, -2.6964, -2.7389, -3.1891, -3.1744], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4173, device='cuda:0', dtype=torch.float64)
tensor([-1.9425, -2.6856, -2.7508, -3.2076, -3.1638], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3893, device='cuda:0', dtype=torch.float64)
tensor([-1.9336, -2.6746, -2.7622, -3.2240, -3.1516], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1518, device='cuda:0', dtype=torch.float64)
tensor([-1.9255, -2.6669, -2.7814, -3.2430, -3.1428], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2261, device='cuda:0', dtype=torch.float64)
tensor([-1.9178, -2.6624, -2.8063, -3.2619, -3.1423], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5631, device='cuda:0', dtype=torch.float64)
tensor([-1.9130, -2.6663, -2.8215, -3.2776, -3.1413], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2690, device='cuda:0', dtype=torch.float64)
tensor([-1.9085, -2.6702, -2.8377, -3.2881, -3.1430], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4451, device='cuda:0', dtype=torch.float64)
tensor([-1.9055, -2.6680, -2.8391, -3.2835, -3.1381], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5235, device='cuda:0', dtype=torch.float64)
tensor([-1.9101, -2.6686, -2.8358, -3.2512, -3.1346], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2279, device='cuda:0', dtype=torch.float64)
tensor([-1.9189, -2.6701, -2.8289, -3.2076, -3.1322], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2974, device='cuda:0', dtype=torch.float64)
tensor([-1.9315, -2.6751, -2.8217, -3.1677, -3.1375], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5099, device='cuda:0', dtype=torch.float64)
tensor([-1.9437, -2.6786, -2.8082, -3.1334, -3.1385], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1436, device='cuda:0', dtype=torch.float64)
tensor([-1.9568, -2.6844, -2.7939, -3.1029, -3.1438], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0318, device='cuda:0', dtype=torch.float64)
tensor([-1.9643, -2.6897, -2.7834, -3.0846, -3.1494], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4230, device='cuda:0', dtype=torch.float64)
tensor([-1.9569, -2.6961, -2.7782, -3.0797, -3.1476], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3635, device='cuda:0', dtype=torch.float64)
tensor([-1.9408, -2.6953, -2.7816, -3.0840, -3.1474], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2359, device='cuda:0', dtype=torch.float64)
tensor([-1.9144, -2.6925, -2.7835, -3.0996, -3.1464], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4658, device='cuda:0', dtype=torch.float64)
tensor([-1.8886, -2.6910, -2.7885, -3.1145, -3.1463], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4850, device='cuda:0', dtype=torch.float64)
tensor([-1.8694, -2.6942, -2.7968, -3.1307, -3.1487], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1910, device='cuda:0', dtype=torch.float64)
tensor([-1.8602, -2.7026, -2.8054, -3.1474, -3.1584], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7044, device='cuda:0', dtype=torch.float64)
tensor([-1.8699, -2.7117, -2.8085, -3.1489, -3.1822], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1131, device='cuda:0', dtype=torch.float64)
tensor([-1.8849, -2.7195, -2.8064, -3.1451, -3.2063], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2693, device='cuda:0', dtype=torch.float64)
tensor([-1.9025, -2.7285, -2.8020, -3.1385, -3.2244], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3644, device='cuda:0', dtype=torch.float64)
tensor([-1.9234, -2.7331, -2.8003, -3.1396, -3.2346], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3387, device='cuda:0', dtype=torch.float64)
tensor([-1.9407, -2.7316, -2.8033, -3.1381, -3.2415], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2255, device='cuda:0', dtype=torch.float64)
tensor([-1.9458, -2.7233, -2.8096, -3.1380, -3.2437], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0911, device='cuda:0', dtype=torch.float64)
tensor([-1.9446, -2.7080, -2.8112, -3.1420, -3.2461], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1312, device='cuda:0', dtype=torch.float64)
tensor([-1.9335, -2.6858, -2.8121, -3.1524, -3.2451], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2133, device='cuda:0', dtype=torch.float64)
tensor([-1.9171, -2.6637, -2.8072, -3.1668, -3.2424], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1592, device='cuda:0', dtype=torch.float64)
tensor([-1.9012, -2.6457, -2.8003, -3.1840, -3.2385], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3145, device='cuda:0', dtype=torch.float64)
tensor([-1.8902, -2.6354, -2.7874, -3.2033, -3.2378], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3477, device='cuda:0', dtype=torch.float64)
tensor([-1.8789, -2.6234, -2.7783, -3.2166, -3.2368], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1071, device='cuda:0', dtype=torch.float64)
tensor([-1.8777, -2.6176, -2.7669, -3.2181, -3.2330], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1451, device='cuda:0', dtype=torch.float64)
tensor([-1.8865, -2.6211, -2.7561, -3.2088, -3.2273], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2829, device='cuda:0', dtype=torch.float64)
tensor([-1.9008, -2.6316, -2.7436, -3.1938, -3.2194], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3353, device='cuda:0', dtype=torch.float64)
tensor([-1.9189, -2.6501, -2.7335, -3.1772, -3.2167], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2290, device='cuda:0', dtype=torch.float64)
tensor([-1.9342, -2.6662, -2.7383, -3.1742, -3.2212], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5472, device='cuda:0', dtype=torch.float64)
tensor([-1.9377, -2.6756, -2.7561, -3.1794, -3.2253], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3179, device='cuda:0', dtype=torch.float64)
tensor([-1.9357, -2.6721, -2.7843, -3.1929, -3.2318], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7928, device='cuda:0', dtype=torch.float64)
tensor([-1.9385, -2.6784, -2.8152, -3.2115, -3.2424], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3069, device='cuda:0', dtype=torch.float64)
tensor([-1.9381, -2.6778, -2.8404, -3.2357, -3.2444], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7161, device='cuda:0', dtype=torch.float64)
tensor([-1.9301, -2.6711, -2.8521, -3.2484, -3.2302], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4291, device='cuda:0', dtype=torch.float64)
tensor([-1.9268, -2.6684, -2.8516, -3.2499, -3.2124], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3325, device='cuda:0', dtype=torch.float64)
tensor([-1.9245, -2.6696, -2.8428, -3.2445, -3.1898], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3426, device='cuda:0', dtype=torch.float64)
tensor([-1.9256, -2.6758, -2.8288, -3.2356, -3.1729], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2853, device='cuda:0', dtype=torch.float64)
tensor([-1.9310, -2.6834, -2.8092, -3.2186, -3.1639], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1239, device='cuda:0', dtype=torch.float64)
tensor([-1.9333, -2.6886, -2.7910, -3.1963, -3.1614], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1767, device='cuda:0', dtype=torch.float64)
tensor([-1.9388, -2.6909, -2.7878, -3.1760, -3.1732], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1608, device='cuda:0', dtype=torch.float64)
tensor([-1.9421, -2.6955, -2.7904, -3.1611, -3.1896], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3270, device='cuda:0', dtype=torch.float64)
tensor([-1.9366, -2.6974, -2.7973, -3.1520, -3.1984], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4199, device='cuda:0', dtype=torch.float64)
tensor([-1.9200, -2.6941, -2.8040, -3.1426, -3.1983], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0317, device='cuda:0', dtype=torch.float64)
tensor([-1.8921, -2.6890, -2.8141, -3.1375, -3.1909], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1002, device='cuda:0', dtype=torch.float64)
tensor([-1.8723, -2.6870, -2.8203, -3.1379, -3.1911], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4213, device='cuda:0', dtype=torch.float64)
tensor([-1.8569, -2.6903, -2.8353, -3.1423, -3.1978], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5338, device='cuda:0', dtype=torch.float64)
tensor([-1.8527, -2.7008, -2.8435, -3.1440, -3.2090], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3574, device='cuda:0', dtype=torch.float64)
tensor([-1.8573, -2.7143, -2.8521, -3.1469, -3.2259], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1330, device='cuda:0', dtype=torch.float64)
tensor([-1.8690, -2.7259, -2.8507, -3.1456, -3.2342], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4523, device='cuda:0', dtype=torch.float64)
tensor([-1.8858, -2.7298, -2.8499, -3.1520, -3.2439], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0824, device='cuda:0', dtype=torch.float64)
tensor([-1.9009, -2.7284, -2.8429, -3.1566, -3.2457], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0686, device='cuda:0', dtype=torch.float64)
tensor([-1.9146, -2.7225, -2.8415, -3.1666, -3.2452], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3864, device='cuda:0', dtype=torch.float64)
tensor([-1.9281, -2.7221, -2.8343, -3.1744, -3.2274], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4598, device='cuda:0', dtype=torch.float64)
tensor([-1.9367, -2.7193, -2.8292, -3.1896, -3.2118], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3640, device='cuda:0', dtype=torch.float64)
tensor([-1.9454, -2.7143, -2.8232, -3.1982, -3.2020], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7604, device='cuda:0', dtype=torch.float64)
tensor([-1.9625, -2.7039, -2.8176, -3.1991, -3.2013], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1478, device='cuda:0', dtype=torch.float64)
tensor([-1.9752, -2.6935, -2.8146, -3.1978, -3.1984], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2363, device='cuda:0', dtype=torch.float64)
tensor([-1.9839, -2.6838, -2.8121, -3.1971, -3.1941], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3133, device='cuda:0', dtype=torch.float64)
tensor([-1.9871, -2.6779, -2.8144, -3.1932, -3.1974], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5397, device='cuda:0', dtype=torch.float64)
tensor([-1.9821, -2.6747, -2.8076, -3.1868, -3.1980], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3517, device='cuda:0', dtype=torch.float64)
tensor([-1.9697, -2.6795, -2.7950, -3.1719, -3.1929], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3349, device='cuda:0', dtype=torch.float64)
tensor([-1.9498, -2.6903, -2.7824, -3.1621, -3.1865], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5005, device='cuda:0', dtype=torch.float64)
tensor([-1.9291, -2.6957, -2.7795, -3.1619, -3.1873], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4875, device='cuda:0', dtype=torch.float64)
tensor([-1.9116, -2.7026, -2.7834, -3.1648, -3.1938], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8300, device='cuda:0', dtype=torch.float64)
tensor([-1.8957, -2.7022, -2.7981, -3.1642, -3.2039], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5738, device='cuda:0', dtype=torch.float64)
tensor([-1.8874, -2.6961, -2.8090, -3.1632, -3.2291], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2405, device='cuda:0', dtype=torch.float64)
tensor([-1.8807, -2.6910, -2.8244, -3.1630, -3.2526], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3458, device='cuda:0', dtype=torch.float64)
tensor([-1.8803, -2.6883, -2.8297, -3.1640, -3.2703], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4205, device='cuda:0', dtype=torch.float64)
tensor([-1.8836, -2.6889, -2.8324, -3.1574, -3.2817], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6287, device='cuda:0', dtype=torch.float64)
tensor([-1.8909, -2.6911, -2.8321, -3.1500, -3.2793], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3874, device='cuda:0', dtype=torch.float64)
tensor([-1.8969, -2.6911, -2.8247, -3.1445, -3.2659], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2513, device='cuda:0', dtype=torch.float64)
tensor([-1.9065, -2.6920, -2.8103, -3.1365, -3.2490], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4962, device='cuda:0', dtype=torch.float64)
tensor([-1.9226, -2.7036, -2.7933, -3.1288, -3.2375], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8672, device='cuda:0', dtype=torch.float64)
tensor([-1.9422, -2.7178, -2.7863, -3.1298, -3.2439], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1330, device='cuda:0', dtype=torch.float64)
tensor([-1.9519, -2.7254, -2.7911, -3.1462, -3.2550], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3132, device='cuda:0', dtype=torch.float64)
tensor([-1.9532, -2.7242, -2.8012, -3.1649, -3.2575], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2616, device='cuda:0', dtype=torch.float64)
tensor([-1.9486, -2.7187, -2.8100, -3.1747, -3.2508], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4526, device='cuda:0', dtype=torch.float64)
tensor([-1.9393, -2.7149, -2.8198, -3.1840, -3.2342], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1841, device='cuda:0', dtype=torch.float64)
tensor([-1.9262, -2.7090, -2.8277, -3.1901, -3.2151], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5579, device='cuda:0', dtype=torch.float64)
tensor([-1.9203, -2.7003, -2.8406, -3.1978, -3.1966], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4233, device='cuda:0', dtype=torch.float64)
tensor([-1.9226, -2.6950, -2.8514, -3.2043, -3.1870], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4374, device='cuda:0', dtype=torch.float64)
tensor([-1.9324, -2.6930, -2.8615, -3.2170, -3.1901], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3087, device='cuda:0', dtype=torch.float64)
tensor([-1.9423, -2.6820, -2.8668, -3.2321, -3.1953], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3628, device='cuda:0', dtype=torch.float64)
tensor([-1.9499, -2.6720, -2.8680, -3.2409, -3.1968], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4172, device='cuda:0', dtype=torch.float64)
tensor([-1.9551, -2.6636, -2.8613, -3.2453, -3.1865], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6120, device='cuda:0', dtype=torch.float64)
tensor([-1.9614, -2.6614, -2.8501, -3.2412, -3.1828], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0234, device='cuda:0', dtype=torch.float64)
tensor([-1.9658, -2.6606, -2.8353, -3.2397, -3.1893], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2967, device='cuda:0', dtype=torch.float64)
tensor([-1.9701, -2.6568, -2.8242, -3.2350, -3.1966], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3925, device='cuda:0', dtype=torch.float64)
tensor([-1.9696, -2.6561, -2.8236, -3.2258, -3.2149], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2590, device='cuda:0', dtype=torch.float64)
tensor([-1.9661, -2.6536, -2.8255, -3.2197, -3.2342], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2904, device='cuda:0', dtype=torch.float64)
tensor([-1.9684, -2.6574, -2.8309, -3.2091, -3.2519], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2065, device='cuda:0', dtype=torch.float64)
tensor([-1.9601, -2.6641, -2.8379, -3.1969, -3.2610], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4472, device='cuda:0', dtype=torch.float64)
tensor([-1.9479, -2.6746, -2.8399, -3.1796, -3.2616], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5734, device='cuda:0', dtype=torch.float64)
tensor([-1.9405, -2.6894, -2.8305, -3.1710, -3.2535], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5060, device='cuda:0', dtype=torch.float64)
tensor([-1.9285, -2.6967, -2.8191, -3.1638, -3.2352], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6035, device='cuda:0', dtype=torch.float64)
tensor([-1.9113, -2.6999, -2.8053, -3.1575, -3.2044], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4188, device='cuda:0', dtype=torch.float64)
tensor([-1.8983, -2.6976, -2.8015, -3.1615, -3.1871], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3601, device='cuda:0', dtype=torch.float64)
tensor([-1.8867, -2.6945, -2.8040, -3.1725, -3.1782], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9485, device='cuda:0', dtype=torch.float64)
tensor([-1.8762, -2.6878, -2.8196, -3.1847, -3.1782], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6335, device='cuda:0', dtype=torch.float64)
tensor([-1.8770, -2.6805, -2.8384, -3.1960, -3.1954], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4239, device='cuda:0', dtype=torch.float64)
tensor([-1.8902, -2.6793, -2.8629, -3.2046, -3.2168], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5240, device='cuda:0', dtype=torch.float64)
tensor([-1.9184, -2.6839, -2.8875, -3.2128, -3.2479], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6373, device='cuda:0', dtype=torch.float64)
tensor([-1.9418, -2.6878, -2.8966, -3.2160, -3.2618], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8620, device='cuda:0', dtype=torch.float64)
tensor([-1.9578, -2.6926, -2.8917, -3.1972, -3.2568], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2789, device='cuda:0', dtype=torch.float64)
tensor([-1.9650, -2.7009, -2.8823, -3.1823, -3.2436], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5554, device='cuda:0', dtype=torch.float64)
tensor([-1.9668, -2.7057, -2.8745, -3.1681, -3.2329], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6417, device='cuda:0', dtype=torch.float64)
tensor([-1.9642, -2.7149, -2.8525, -3.1508, -3.2181], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5960, device='cuda:0', dtype=torch.float64)
tensor([-1.9566, -2.7143, -2.8409, -3.1363, -3.2128], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6993, device='cuda:0', dtype=torch.float64)
tensor([-1.9449, -2.7135, -2.8361, -3.1334, -3.2095], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0230, device='cuda:0', dtype=torch.float64)
tensor([-1.9280, -2.7109, -2.8350, -3.1378, -3.2048], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6032, device='cuda:0', dtype=torch.float64)
tensor([-1.9131, -2.7122, -2.8309, -3.1441, -3.2036], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4311, device='cuda:0', dtype=torch.float64)
tensor([-1.8981, -2.7108, -2.8311, -3.1486, -3.1957], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6805, device='cuda:0', dtype=torch.float64)
tensor([-1.8855, -2.7110, -2.8389, -3.1478, -3.1933], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4326, device='cuda:0', dtype=torch.float64)
tensor([-1.8846, -2.7119, -2.8485, -3.1483, -3.1977], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6330, device='cuda:0', dtype=torch.float64)
tensor([-1.8998, -2.7146, -2.8499, -3.1455, -3.2073], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5708, device='cuda:0', dtype=torch.float64)
tensor([-1.9210, -2.7138, -2.8460, -3.1421, -3.2107], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3909, device='cuda:0', dtype=torch.float64)
tensor([-1.9497, -2.7146, -2.8336, -3.1384, -3.2214], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5417, device='cuda:0', dtype=torch.float64)
tensor([-1.9844, -2.7138, -2.8263, -3.1325, -3.2392], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6603, device='cuda:0', dtype=torch.float64)
tensor([-2.0101, -2.7108, -2.8220, -3.1407, -3.2603], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4623, device='cuda:0', dtype=torch.float64)
tensor([-2.0190, -2.7081, -2.8228, -3.1629, -3.2810], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6436, device='cuda:0', dtype=torch.float64)
tensor([-2.0126, -2.6994, -2.8251, -3.1908, -3.2914], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3684, device='cuda:0', dtype=torch.float64)
tensor([-1.9920, -2.6883, -2.8266, -3.2235, -3.2855], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6751, device='cuda:0', dtype=torch.float64)
tensor([-1.9601, -2.6765, -2.8331, -3.2546, -3.2677], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4880, device='cuda:0', dtype=torch.float64)
tensor([-1.9284, -2.6710, -2.8358, -3.2734, -3.2461], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3271, device='cuda:0', dtype=torch.float64)
tensor([-1.8966, -2.6696, -2.8335, -3.2782, -3.2156], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5150, device='cuda:0', dtype=torch.float64)
tensor([-1.8797, -2.6763, -2.8247, -3.2693, -3.1893], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3942, device='cuda:0', dtype=torch.float64)
tensor([-1.8745, -2.6902, -2.8095, -3.2572, -3.1725], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8818, device='cuda:0', dtype=torch.float64)
tensor([-1.8774, -2.7040, -2.7990, -3.2416, -3.1800], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8279, device='cuda:0', dtype=torch.float64)
tensor([-1.9106, -2.7242, -2.7893, -3.2086, -3.2152], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5645, device='cuda:0', dtype=torch.float64)
tensor([-1.9568, -2.7444, -2.7786, -3.1737, -3.2581], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7594, device='cuda:0', dtype=torch.float64)
tensor([-1.9967, -2.7584, -2.7773, -3.1573, -3.2950], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1048, device='cuda:0', dtype=torch.float64)
tensor([-2.0161, -2.7554, -2.7844, -3.1599, -3.3165], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7437, device='cuda:0', dtype=torch.float64)
tensor([-2.0147, -2.7330, -2.7965, -3.1663, -3.3150], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4872, device='cuda:0', dtype=torch.float64)
tensor([-1.9932, -2.7091, -2.8169, -3.1803, -3.3005], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8613, device='cuda:0', dtype=torch.float64)
tensor([-1.9604, -2.6830, -2.8451, -3.2060, -3.2764], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4601, device='cuda:0', dtype=torch.float64)
tensor([-1.9248, -2.6650, -2.8777, -3.2348, -3.2505], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3365, device='cuda:0', dtype=torch.float64)
tensor([-1.9023, -2.6539, -2.9071, -3.2538, -3.2307], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5838, device='cuda:0', dtype=torch.float64)
tensor([-1.8960, -2.6569, -2.9318, -3.2559, -3.2120], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1776, device='cuda:0', dtype=torch.float64)
tensor([-1.8903, -2.6708, -2.9355, -3.2524, -3.1953], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4749, device='cuda:0', dtype=torch.float64)
tensor([-1.8995, -2.7038, -2.9294, -3.2416, -3.1938], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1253, device='cuda:0', dtype=torch.float64)
tensor([-1.9148, -2.7405, -2.9223, -3.2334, -3.1999], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1058, device='cuda:0', dtype=torch.float64)
tensor([-1.9296, -2.7707, -2.9127, -3.2320, -3.2059], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5234, device='cuda:0', dtype=torch.float64)
tensor([-1.9353, -2.7896, -2.8995, -3.2259, -3.2098], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2467, device='cuda:0', dtype=torch.float64)
tensor([-1.9420, -2.7951, -2.8852, -3.2150, -3.2081], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5738, device='cuda:0', dtype=torch.float64)
tensor([-1.9480, -2.7912, -2.8711, -3.2021, -3.2002], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2308, device='cuda:0', dtype=torch.float64)
tensor([-1.9551, -2.7815, -2.8525, -3.1841, -3.1919], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4688, device='cuda:0', dtype=torch.float64)
tensor([-1.9562, -2.7600, -2.8460, -3.1738, -3.1777], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5349, device='cuda:0', dtype=torch.float64)
tensor([-1.9648, -2.7413, -2.8364, -3.1731, -3.1775], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1749, device='cuda:0', dtype=torch.float64)
tensor([-1.9750, -2.7220, -2.8284, -3.1775, -3.1838], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5672, device='cuda:0', dtype=torch.float64)
tensor([-1.9849, -2.7113, -2.8233, -3.1861, -3.1882], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3691, device='cuda:0', dtype=torch.float64)
tensor([-1.9982, -2.7061, -2.8112, -3.1936, -3.1879], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6158, device='cuda:0', dtype=torch.float64)
tensor([-2.0156, -2.7144, -2.7967, -3.1990, -3.1873], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2416, device='cuda:0', dtype=torch.float64)
tensor([-2.0245, -2.7252, -2.7879, -3.2059, -3.1897], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4161, device='cuda:0', dtype=torch.float64)
tensor([-2.0294, -2.7400, -2.7855, -3.2298, -3.2109], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5584, device='cuda:0', dtype=torch.float64)
tensor([-2.0258, -2.7588, -2.7912, -3.2558, -3.2323], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4041, device='cuda:0', dtype=torch.float64)
tensor([-2.0102, -2.7683, -2.8007, -3.2830, -3.2485], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5098, device='cuda:0', dtype=torch.float64)
tensor([-1.9906, -2.7620, -2.8178, -3.3054, -3.2609], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3004, device='cuda:0', dtype=torch.float64)
tensor([-1.9690, -2.7533, -2.8317, -3.3151, -3.2695], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6345, device='cuda:0', dtype=torch.float64)
tensor([-1.9468, -2.7457, -2.8378, -3.3205, -3.2662], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5208, device='cuda:0', dtype=torch.float64)
tensor([-1.9247, -2.7389, -2.8354, -3.3038, -3.2475], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4214, device='cuda:0', dtype=torch.float64)
tensor([-1.9128, -2.7443, -2.8238, -3.2813, -3.2234], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5118, device='cuda:0', dtype=torch.float64)
tensor([-1.9173, -2.7508, -2.8109, -3.2561, -3.2104], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4499, device='cuda:0', dtype=torch.float64)
tensor([-1.9266, -2.7577, -2.7985, -3.2276, -3.2051], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7255, device='cuda:0', dtype=torch.float64)
tensor([-1.9392, -2.7665, -2.7900, -3.2068, -3.2131], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5096, device='cuda:0', dtype=torch.float64)
tensor([-1.9530, -2.7665, -2.7945, -3.1954, -3.2289], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6192, device='cuda:0', dtype=torch.float64)
tensor([-1.9723, -2.7639, -2.8011, -3.1957, -3.2418], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4609, device='cuda:0', dtype=torch.float64)
tensor([-1.9988, -2.7585, -2.8121, -3.1991, -3.2590], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6761, device='cuda:0', dtype=torch.float64)
tensor([-2.0106, -2.7402, -2.8282, -3.2082, -3.2647], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6265, device='cuda:0', dtype=torch.float64)
tensor([-2.0045, -2.7193, -2.8404, -3.2245, -3.2601], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3511, device='cuda:0', dtype=torch.float64)
tensor([-1.9925, -2.6961, -2.8457, -3.2349, -3.2496], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3824, device='cuda:0', dtype=torch.float64)
tensor([-1.9799, -2.6788, -2.8433, -3.2408, -3.2291], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3394, device='cuda:0', dtype=torch.float64)
tensor([-1.9687, -2.6668, -2.8393, -3.2483, -3.2016], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5591, device='cuda:0', dtype=torch.float64)
tensor([-1.9648, -2.6679, -2.8325, -3.2573, -3.1693], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3946, device='cuda:0', dtype=torch.float64)
tensor([-1.9615, -2.6779, -2.8297, -3.2724, -3.1427], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6197, device='cuda:0', dtype=torch.float64)
tensor([-1.9655, -2.6987, -2.8331, -3.2815, -3.1331], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7006, device='cuda:0', dtype=torch.float64)
tensor([-1.9716, -2.7158, -2.8439, -3.2890, -3.1416], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4500, device='cuda:0', dtype=torch.float64)
tensor([-1.9852, -2.7325, -2.8557, -3.2850, -3.1634], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5168, device='cuda:0', dtype=torch.float64)
tensor([-2.0008, -2.7455, -2.8622, -3.2672, -3.1879], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6374, device='cuda:0', dtype=torch.float64)
tensor([-2.0123, -2.7457, -2.8647, -3.2440, -3.1990], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1269, device='cuda:0', dtype=torch.float64)
tensor([-2.0167, -2.7396, -2.8758, -3.2171, -3.2001], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8511, device='cuda:0', dtype=torch.float64)
tensor([-2.0080, -2.7371, -2.8867, -3.1976, -3.1981], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5105, device='cuda:0', dtype=torch.float64)
tensor([-2.0008, -2.7412, -2.8945, -3.1826, -3.2039], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5876, device='cuda:0', dtype=torch.float64)
tensor([-1.9956, -2.7488, -2.9007, -3.1732, -3.2156], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6908, device='cuda:0', dtype=torch.float64)
tensor([-2.0040, -2.7706, -2.9058, -3.1596, -3.2495], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1089, device='cuda:0', dtype=torch.float64)
tensor([-2.0100, -2.7758, -2.9116, -3.1481, -3.2760], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4997, device='cuda:0', dtype=torch.float64)
tensor([-2.0089, -2.7798, -2.9183, -3.1475, -3.2897], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6456, device='cuda:0', dtype=torch.float64)
tensor([-2.0110, -2.7750, -2.9283, -3.1519, -3.2924], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5065, device='cuda:0', dtype=torch.float64)
tensor([-2.0069, -2.7642, -2.9421, -3.1622, -3.2866], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5157, device='cuda:0', dtype=torch.float64)
tensor([-1.9935, -2.7450, -2.9575, -3.1815, -3.2737], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6556, device='cuda:0', dtype=torch.float64)
tensor([-1.9773, -2.7256, -2.9680, -3.1901, -3.2667], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5912, device='cuda:0', dtype=torch.float64)
tensor([-1.9559, -2.7011, -2.9714, -3.1949, -3.2540], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3676, device='cuda:0', dtype=torch.float64)
tensor([-1.9350, -2.6841, -2.9752, -3.2025, -3.2509], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6506, device='cuda:0', dtype=torch.float64)
tensor([-1.9193, -2.6742, -2.9660, -3.2148, -3.2483], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2653, device='cuda:0', dtype=torch.float64)
tensor([-1.9129, -2.6681, -2.9505, -3.2301, -3.2495], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3991, device='cuda:0', dtype=torch.float64)
tensor([-1.9196, -2.6834, -2.9243, -3.2403, -3.2580], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5943, device='cuda:0', dtype=torch.float64)
tensor([-1.9318, -2.7083, -2.9026, -3.2566, -3.2744], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4688, device='cuda:0', dtype=torch.float64)
tensor([-1.9485, -2.7401, -2.8816, -3.2693, -3.2891], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7239, device='cuda:0', dtype=torch.float64)
tensor([-1.9591, -2.7636, -2.8585, -3.2805, -3.2998], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4155, device='cuda:0', dtype=torch.float64)
tensor([-1.9710, -2.7811, -2.8320, -3.2884, -3.2980], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6650, device='cuda:0', dtype=torch.float64)
tensor([-1.9878, -2.8019, -2.8073, -3.2819, -3.2892], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3682, device='cuda:0', dtype=torch.float64)
tensor([-1.9963, -2.8142, -2.7900, -3.2715, -3.2764], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3196, device='cuda:0', dtype=torch.float64)
tensor([-2.0043, -2.8144, -2.7814, -3.2575, -3.2673], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1190, device='cuda:0', dtype=torch.float64)
tensor([-2.0078, -2.8111, -2.7735, -3.2503, -3.2562], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5857, device='cuda:0', dtype=torch.float64)
tensor([-2.0072, -2.8066, -2.7775, -3.2423, -3.2417], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6308, device='cuda:0', dtype=torch.float64)
tensor([-2.0121, -2.8023, -2.7891, -3.2304, -3.2259], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3892, device='cuda:0', dtype=torch.float64)
tensor([-2.0195, -2.7982, -2.8131, -3.2111, -3.2171], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5667, device='cuda:0', dtype=torch.float64)
tensor([-2.0321, -2.7959, -2.8395, -3.1973, -3.2170], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7294, device='cuda:0', dtype=torch.float64)
tensor([-2.0426, -2.7925, -2.8724, -3.1974, -3.2256], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8405, device='cuda:0', dtype=torch.float64)
tensor([-2.0431, -2.7743, -2.9080, -3.2070, -3.2303], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4834, device='cuda:0', dtype=torch.float64)
tensor([-2.0416, -2.7581, -2.9330, -3.2269, -3.2313], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7553, device='cuda:0', dtype=torch.float64)
tensor([-2.0241, -2.7416, -2.9520, -3.2576, -3.2174], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5077, device='cuda:0', dtype=torch.float64)
tensor([-1.9939, -2.7293, -2.9635, -3.2936, -3.1908], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9085, device='cuda:0', dtype=torch.float64)
tensor([-1.9734, -2.7238, -2.9723, -3.3268, -3.1668], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3948, device='cuda:0', dtype=torch.float64)
tensor([-1.9678, -2.7277, -2.9681, -3.3423, -3.1599], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5577, device='cuda:0', dtype=torch.float64)
tensor([-1.9740, -2.7390, -2.9558, -3.3330, -3.1634], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7594, device='cuda:0', dtype=torch.float64)
tensor([-1.9999, -2.7669, -2.9296, -3.2961, -3.1907], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4158, device='cuda:0', dtype=torch.float64)
tensor([-2.0288, -2.7984, -2.9069, -3.2674, -3.2252], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7975, device='cuda:0', dtype=torch.float64)
tensor([-2.0649, -2.8340, -2.8778, -3.2354, -3.2630], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6023, device='cuda:0', dtype=torch.float64)
tensor([-2.1019, -2.8768, -2.8567, -3.2095, -3.2926], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6900, device='cuda:0', dtype=torch.float64)
tensor([-2.1151, -2.8920, -2.8368, -3.1883, -3.3048], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7861, device='cuda:0', dtype=torch.float64)
tensor([-2.1119, -2.8729, -2.8255, -3.1693, -3.2996], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6487, device='cuda:0', dtype=torch.float64)
tensor([-2.0909, -2.8437, -2.8169, -3.1615, -3.2861], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9422, device='cuda:0', dtype=torch.float64)
tensor([-2.0614, -2.8154, -2.8151, -3.1692, -3.2752], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3377, device='cuda:0', dtype=torch.float64)
tensor([-2.0267, -2.7810, -2.8239, -3.1938, -3.2700], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7974, device='cuda:0', dtype=torch.float64)
tensor([-1.9937, -2.7504, -2.8339, -3.2251, -3.2750], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4936, device='cuda:0', dtype=torch.float64)
tensor([-1.9585, -2.7264, -2.8363, -3.2687, -3.2792], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6215, device='cuda:0', dtype=torch.float64)
tensor([-1.9358, -2.7190, -2.8285, -3.3169, -3.2923], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9499, device='cuda:0', dtype=torch.float64)
tensor([-1.9339, -2.7269, -2.8128, -3.3526, -3.3063], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5763, device='cuda:0', dtype=torch.float64)
tensor([-1.9338, -2.7358, -2.8013, -3.3806, -3.3161], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4469, device='cuda:0', dtype=torch.float64)
tensor([-1.9392, -2.7498, -2.7945, -3.3915, -3.3209], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6816, device='cuda:0', dtype=torch.float64)
tensor([-1.9611, -2.7668, -2.7854, -3.3838, -3.3258], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4886, device='cuda:0', dtype=torch.float64)
tensor([-1.9960, -2.7818, -2.7861, -3.3604, -3.3446], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8999, device='cuda:0', dtype=torch.float64)
tensor([-2.0275, -2.7852, -2.7936, -3.3187, -3.3585], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5254, device='cuda:0', dtype=torch.float64)
tensor([-2.0547, -2.7865, -2.8065, -3.2817, -3.3615], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3633, device='cuda:0', dtype=torch.float64)
tensor([-2.0604, -2.7869, -2.8227, -3.2491, -3.3568], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7174, device='cuda:0', dtype=torch.float64)
tensor([-2.0556, -2.7875, -2.8497, -3.2317, -3.3505], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0526, device='cuda:0', dtype=torch.float64)
tensor([-2.0448, -2.7921, -2.8769, -3.2121, -3.3370], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4306, device='cuda:0', dtype=torch.float64)
tensor([-2.0322, -2.7969, -2.8936, -3.1886, -3.3177], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1942, device='cuda:0', dtype=torch.float64)
tensor([-2.0231, -2.8015, -2.8963, -3.1708, -3.2904], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4673, device='cuda:0', dtype=torch.float64)
tensor([-2.0203, -2.8126, -2.8927, -3.1539, -3.2703], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8609, device='cuda:0', dtype=torch.float64)
tensor([-2.0266, -2.8222, -2.8895, -3.1417, -3.2628], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7058, device='cuda:0', dtype=torch.float64)
tensor([-2.0235, -2.8235, -2.8818, -3.1507, -3.2584], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2207, device='cuda:0', dtype=torch.float64)
tensor([-2.0237, -2.8208, -2.8688, -3.1631, -3.2604], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6127, device='cuda:0', dtype=torch.float64)
tensor([-2.0260, -2.8091, -2.8699, -3.1783, -3.2677], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9016, device='cuda:0', dtype=torch.float64)
tensor([-2.0329, -2.7895, -2.8770, -3.1847, -3.2792], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4412, device='cuda:0', dtype=torch.float64)
tensor([-2.0342, -2.7640, -2.8833, -3.1983, -3.2984], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7775, device='cuda:0', dtype=torch.float64)
tensor([-2.0282, -2.7439, -2.8820, -3.2139, -3.3043], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8249, device='cuda:0', dtype=torch.float64)
tensor([-2.0191, -2.7282, -2.8898, -3.2348, -3.2984], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8831, device='cuda:0', dtype=torch.float64)
tensor([-2.0050, -2.7165, -2.9094, -3.2594, -3.2885], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4577, device='cuda:0', dtype=torch.float64)
tensor([-1.9925, -2.7140, -2.9224, -3.2797, -3.2753], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7550, device='cuda:0', dtype=torch.float64)
tensor([-1.9913, -2.7258, -2.9239, -3.2933, -3.2654], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5626, device='cuda:0', dtype=torch.float64)
tensor([-1.9946, -2.7306, -2.9238, -3.3039, -3.2640], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6779, device='cuda:0', dtype=torch.float64)
tensor([-2.0079, -2.7444, -2.9227, -3.3142, -3.2786], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4606, device='cuda:0', dtype=torch.float64)
tensor([-2.0319, -2.7644, -2.9121, -3.3149, -3.2906], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5058, device='cuda:0', dtype=torch.float64)
tensor([-2.0480, -2.7796, -2.9056, -3.3231, -3.3139], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5647, device='cuda:0', dtype=torch.float64)
tensor([-2.0607, -2.7840, -2.9008, -3.3432, -3.3318], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7052, device='cuda:0', dtype=torch.float64)
tensor([-2.0720, -2.7824, -2.9009, -3.3559, -3.3563], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4544, device='cuda:0', dtype=torch.float64)
tensor([-2.0760, -2.7752, -2.9095, -3.3601, -3.3713], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8238, device='cuda:0', dtype=torch.float64)
tensor([-2.0683, -2.7691, -2.9069, -3.3496, -3.3535], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9677, device='cuda:0', dtype=torch.float64)
tensor([-2.0640, -2.7704, -2.9006, -3.3228, -3.3146], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0051, device='cuda:0', dtype=torch.float64)
tensor([-2.0711, -2.7760, -2.8796, -3.2847, -3.2529], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4864, device='cuda:0', dtype=torch.float64)
tensor([-2.0854, -2.7851, -2.8590, -3.2469, -3.2136], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8225, device='cuda:0', dtype=torch.float64)
tensor([-2.0865, -2.7924, -2.8494, -3.2208, -3.1926], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8590, device='cuda:0', dtype=torch.float64)
tensor([-2.0785, -2.8077, -2.8691, -3.2072, -3.1971], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7435, device='cuda:0', dtype=torch.float64)
tensor([-2.0586, -2.8075, -2.8990, -3.2033, -3.2162], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9238, device='cuda:0', dtype=torch.float64)
tensor([-2.0438, -2.8041, -2.8928, -3.2245, -3.2499], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4072, device='cuda:0', dtype=torch.float64)
tensor([-2.0433, -2.8096, -2.8740, -3.2542, -3.2915], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6416, device='cuda:0', dtype=torch.float64)
tensor([-2.0458, -2.8212, -2.8696, -3.2788, -3.3287], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7392, device='cuda:0', dtype=torch.float64)
tensor([-2.0532, -2.8337, -2.8671, -3.2954, -3.3516], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6557, device='cuda:0', dtype=torch.float64)
tensor([-2.0604, -2.8496, -2.8566, -3.3096, -3.3571], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4835, device='cuda:0', dtype=torch.float64)
tensor([-2.0701, -2.8683, -2.8326, -3.3288, -3.3545], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8133, device='cuda:0', dtype=torch.float64)
tensor([-2.0812, -2.8805, -2.8203, -3.3470, -3.3709], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4488, device='cuda:0', dtype=torch.float64)
tensor([-2.0984, -2.8949, -2.8159, -3.3648, -3.3926], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8103, device='cuda:0', dtype=torch.float64)
tensor([-2.1147, -2.8984, -2.8188, -3.3690, -3.4271], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8301, device='cuda:0', dtype=torch.float64)
tensor([-2.1136, -2.8879, -2.8345, -3.3722, -3.4463], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6103, device='cuda:0', dtype=torch.float64)
tensor([-2.0940, -2.8635, -2.8611, -3.3727, -3.4535], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6509, device='cuda:0', dtype=torch.float64)
tensor([-2.0602, -2.8305, -2.8933, -3.3770, -3.4496], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6786, device='cuda:0', dtype=torch.float64)
tensor([-2.0223, -2.7974, -2.9281, -3.3846, -3.4398], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7286, device='cuda:0', dtype=torch.float64)
tensor([-1.9760, -2.7645, -2.9575, -3.3750, -3.4163], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7285, device='cuda:0', dtype=torch.float64)
tensor([-1.9355, -2.7411, -2.9885, -3.3601, -3.3818], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6700, device='cuda:0', dtype=torch.float64)
tensor([-1.9096, -2.7239, -3.0193, -3.3413, -3.3591], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0480, device='cuda:0', dtype=torch.float64)
tensor([-1.9122, -2.7266, -3.0320, -3.3033, -3.3503], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6613, device='cuda:0', dtype=torch.float64)
tensor([-1.9395, -2.7349, -3.0288, -3.2639, -3.3394], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6776, device='cuda:0', dtype=torch.float64)
tensor([-1.9864, -2.7518, -3.0189, -3.2241, -3.3240], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6633, device='cuda:0', dtype=torch.float64)
tensor([-2.0369, -2.7758, -3.0045, -3.1882, -3.3251], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3927, device='cuda:0', dtype=torch.float64)
tensor([-2.0969, -2.7991, -2.9919, -3.1664, -3.3395], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5298, device='cuda:0', dtype=torch.float64)
tensor([-2.1550, -2.8280, -2.9779, -3.1627, -3.3634], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6519, device='cuda:0', dtype=torch.float64)
tensor([-2.2114, -2.8680, -2.9606, -3.1773, -3.3794], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6779, device='cuda:0', dtype=torch.float64)
tensor([-2.2416, -2.9058, -2.9362, -3.2032, -3.3731], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3362, device='cuda:0', dtype=torch.float64)
tensor([-2.2439, -2.9219, -2.9175, -3.2416, -3.3420], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6688, device='cuda:0', dtype=torch.float64)
tensor([-2.2182, -2.9132, -2.9066, -3.2758, -3.2976], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9142, device='cuda:0', dtype=torch.float64)
tensor([-2.1664, -2.8732, -2.9038, -3.2954, -3.2404], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8649, device='cuda:0', dtype=torch.float64)
tensor([-2.0974, -2.8159, -2.9133, -3.3236, -3.1901], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8034, device='cuda:0', dtype=torch.float64)
tensor([-2.0303, -2.7634, -2.9376, -3.3712, -3.1636], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6520, device='cuda:0', dtype=torch.float64)
tensor([-1.9928, -2.7340, -2.9563, -3.3973, -3.1604], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7266, device='cuda:0', dtype=torch.float64)
tensor([-1.9780, -2.7131, -2.9739, -3.4070, -3.1808], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9571, device='cuda:0', dtype=torch.float64)
tensor([-1.9874, -2.7076, -2.9842, -3.4023, -3.2163], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7366, device='cuda:0', dtype=torch.float64)
tensor([-2.0079, -2.7306, -2.9704, -3.3865, -3.2430], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8106, device='cuda:0', dtype=torch.float64)
tensor([-2.0330, -2.7643, -2.9602, -3.3548, -3.2530], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4178, device='cuda:0', dtype=torch.float64)
tensor([-2.0638, -2.8075, -2.9453, -3.3142, -3.2679], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8389, device='cuda:0', dtype=torch.float64)
tensor([-2.0836, -2.8541, -2.9337, -3.2675, -3.2558], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5013, device='cuda:0', dtype=torch.float64)
tensor([-2.1030, -2.9027, -2.9069, -3.2293, -3.2465], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6945, device='cuda:0', dtype=torch.float64)
tensor([-2.1181, -2.9326, -2.8881, -3.2181, -3.2519], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0653, device='cuda:0', dtype=torch.float64)
tensor([-2.1305, -2.9351, -2.8790, -3.2196, -3.2466], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7236, device='cuda:0', dtype=torch.float64)
tensor([-2.1383, -2.9232, -2.8844, -3.2292, -3.2483], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5068, device='cuda:0', dtype=torch.float64)
tensor([-2.1308, -2.8955, -2.9004, -3.2512, -3.2610], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7717, device='cuda:0', dtype=torch.float64)
tensor([-2.1273, -2.8624, -2.9280, -3.2740, -3.2863], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7697, device='cuda:0', dtype=torch.float64)
tensor([-2.1235, -2.8235, -2.9583, -3.2898, -3.3141], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7617, device='cuda:0', dtype=torch.float64)
tensor([-2.1208, -2.7950, -2.9838, -3.3229, -3.3460], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.2192, device='cuda:0', dtype=torch.float64)
tensor([-2.1138, -2.7661, -2.9942, -3.3419, -3.3495], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5720, device='cuda:0', dtype=torch.float64)
tensor([-2.1096, -2.7460, -2.9891, -3.3600, -3.3469], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6184, device='cuda:0', dtype=torch.float64)
tensor([-2.1118, -2.7418, -2.9758, -3.3856, -3.3448], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5411, device='cuda:0', dtype=torch.float64)
tensor([-2.1224, -2.7516, -2.9661, -3.4194, -3.3448], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6604, device='cuda:0', dtype=torch.float64)
tensor([-2.1223, -2.7640, -2.9668, -3.4534, -3.3409], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7576, device='cuda:0', dtype=torch.float64)
tensor([-2.1217, -2.7720, -2.9697, -3.4739, -3.3392], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9922, device='cuda:0', dtype=torch.float64)
tensor([-2.1268, -2.7832, -2.9733, -3.4743, -3.3392], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7702, device='cuda:0', dtype=torch.float64)
tensor([-2.1239, -2.7966, -2.9751, -3.4712, -3.3373], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4665, device='cuda:0', dtype=torch.float64)
tensor([-2.1173, -2.8187, -2.9788, -3.4658, -3.3239], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9589, device='cuda:0', dtype=torch.float64)
tensor([-2.1188, -2.8477, -2.9786, -3.4556, -3.3254], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5817, device='cuda:0', dtype=torch.float64)
tensor([-2.1099, -2.8818, -2.9712, -3.4286, -3.3244], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6413, device='cuda:0', dtype=torch.float64)
tensor([-2.1025, -2.9060, -2.9566, -3.3897, -3.3215], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5334, device='cuda:0', dtype=torch.float64)
tensor([-2.0949, -2.9223, -2.9457, -3.3511, -3.3228], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4431, device='cuda:0', dtype=torch.float64)
tensor([-2.0910, -2.9343, -2.9351, -3.3008, -3.3362], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7680, device='cuda:0', dtype=torch.float64)
tensor([-2.0800, -2.9274, -2.9301, -3.2526, -3.3469], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3356, device='cuda:0', dtype=torch.float64)
tensor([-2.0699, -2.9198, -2.9227, -3.2218, -3.3586], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6911, device='cuda:0', dtype=torch.float64)
tensor([-2.0686, -2.9061, -2.9104, -3.1897, -3.3630], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1045, device='cuda:0', dtype=torch.float64)
tensor([-2.0672, -2.8879, -2.9197, -3.1867, -3.3727], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4904, device='cuda:0', dtype=torch.float64)
tensor([-2.0748, -2.8668, -2.9276, -3.1871, -3.3797], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5977, device='cuda:0', dtype=torch.float64)
tensor([-2.0873, -2.8422, -2.9451, -3.2023, -3.3914], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4942, device='cuda:0', dtype=torch.float64)
tensor([-2.0846, -2.8117, -2.9625, -3.2318, -3.3976], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3472, device='cuda:0', dtype=torch.float64)
tensor([-2.0875, -2.7909, -2.9761, -3.2533, -3.4067], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4312, device='cuda:0', dtype=torch.float64)
tensor([-2.0929, -2.7769, -2.9732, -3.2692, -3.4012], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2850, device='cuda:0', dtype=torch.float64)
tensor([-2.1032, -2.7634, -2.9534, -3.2709, -3.3913], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5964, device='cuda:0', dtype=torch.float64)
tensor([-2.1178, -2.7509, -2.9377, -3.2650, -3.3780], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7810, device='cuda:0', dtype=torch.float64)
tensor([-2.1454, -2.7460, -2.9250, -3.2487, -3.3845], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7907, device='cuda:0', dtype=torch.float64)
tensor([-2.1704, -2.7559, -2.9074, -3.2364, -3.3996], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6060, device='cuda:0', dtype=torch.float64)
tensor([-2.1886, -2.7738, -2.8959, -3.2289, -3.4286], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5227, device='cuda:0', dtype=torch.float64)
tensor([-2.1993, -2.7916, -2.8889, -3.2253, -3.4546], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6205, device='cuda:0', dtype=torch.float64)
tensor([-2.1958, -2.7952, -2.8963, -3.2334, -3.4740], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4580, device='cuda:0', dtype=torch.float64)
tensor([-2.1789, -2.7954, -2.9119, -3.2475, -3.4881], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6359, device='cuda:0', dtype=torch.float64)
tensor([-2.1485, -2.7810, -2.9321, -3.2727, -3.4985], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4810, device='cuda:0', dtype=torch.float64)
tensor([-2.1182, -2.7765, -2.9441, -3.2894, -3.4917], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9771, device='cuda:0', dtype=torch.float64)
tensor([-2.0908, -2.7900, -2.9339, -3.2976, -3.4709], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7285, device='cuda:0', dtype=torch.float64)
tensor([-2.0729, -2.8164, -2.9099, -3.3040, -3.4465], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4938, device='cuda:0', dtype=torch.float64)
tensor([-2.0693, -2.8504, -2.8876, -3.3016, -3.4252], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5636, device='cuda:0', dtype=torch.float64)
tensor([-2.0742, -2.8901, -2.8774, -3.2915, -3.4041], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7640, device='cuda:0', dtype=torch.float64)
tensor([-2.0833, -2.9372, -2.8747, -3.2949, -3.3980], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5518, device='cuda:0', dtype=torch.float64)
tensor([-2.0895, -2.9822, -2.8715, -3.3185, -3.3961], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1036, device='cuda:0', dtype=torch.float64)
tensor([-2.0873, -2.9952, -2.8657, -3.3466, -3.3827], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8100, device='cuda:0', dtype=torch.float64)
tensor([-2.0992, -2.9951, -2.8694, -3.3712, -3.3816], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3102, device='cuda:0', dtype=torch.float64)
tensor([-2.1053, -2.9674, -2.8856, -3.3854, -3.3753], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8161, device='cuda:0', dtype=torch.float64)
tensor([-2.1150, -2.9386, -2.9034, -3.4059, -3.3725], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8856, device='cuda:0', dtype=torch.float64)
tensor([-2.1264, -2.9112, -2.9211, -3.4235, -3.3705], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6742, device='cuda:0', dtype=torch.float64)
tensor([-2.1374, -2.8932, -2.9438, -3.4381, -3.3733], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9251, device='cuda:0', dtype=torch.float64)
tensor([-2.1494, -2.8814, -2.9658, -3.4476, -3.3909], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6554, device='cuda:0', dtype=torch.float64)
tensor([-2.1716, -2.8870, -2.9801, -3.4658, -3.4296], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8492, device='cuda:0', dtype=torch.float64)
tensor([-2.1917, -2.8941, -3.0078, -3.4870, -3.4854], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7386, device='cuda:0', dtype=torch.float64)
tensor([-2.2077, -2.9011, -3.0294, -3.4999, -3.5293], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9173, device='cuda:0', dtype=torch.float64)
tensor([-2.2237, -2.9151, -3.0427, -3.5077, -3.5689], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4241, device='cuda:0', dtype=torch.float64)
tensor([-2.2404, -2.9361, -3.0449, -3.5129, -3.5931], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3284, device='cuda:0', dtype=torch.float64)
tensor([-2.2466, -2.9453, -3.0416, -3.5099, -3.6003], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5470, device='cuda:0', dtype=torch.float64)
tensor([-2.2502, -2.9566, -3.0334, -3.5002, -3.5862], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7445, device='cuda:0', dtype=torch.float64)
tensor([-2.2508, -2.9660, -3.0288, -3.4892, -3.5621], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4855, device='cuda:0', dtype=torch.float64)
tensor([-2.2435, -2.9749, -3.0027, -3.4810, -3.5214], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7171, device='cuda:0', dtype=torch.float64)
tensor([-2.2219, -2.9843, -2.9743, -3.4558, -3.4840], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9213, device='cuda:0', dtype=torch.float64)
tensor([-2.2027, -2.9830, -2.9737, -3.3996, -3.4812], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8757, device='cuda:0', dtype=torch.float64)
tensor([-2.1829, -2.9807, -2.9803, -3.3513, -3.4901], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4185, device='cuda:0', dtype=torch.float64)
tensor([-2.1647, -2.9783, -2.9890, -3.3167, -3.4974], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4677, device='cuda:0', dtype=torch.float64)
tensor([-2.1499, -2.9779, -3.0028, -3.2919, -3.5069], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3416, device='cuda:0', dtype=torch.float64)
tensor([-2.1402, -2.9835, -3.0128, -3.2774, -3.5174], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3834, device='cuda:0', dtype=torch.float64)
tensor([-2.1333, -2.9783, -3.0169, -3.2528, -3.5125], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5489, device='cuda:0', dtype=torch.float64)
tensor([-2.1392, -2.9786, -3.0186, -3.2262, -3.4949], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9317, device='cuda:0', dtype=torch.float64)
tensor([-2.1530, -2.9568, -3.0253, -3.2070, -3.4733], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6618, device='cuda:0', dtype=torch.float64)
tensor([-2.1834, -2.9292, -3.0389, -3.1990, -3.4616], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0211, device='cuda:0', dtype=torch.float64)
tensor([-2.2032, -2.9229, -3.0698, -3.1932, -3.4608], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5938, device='cuda:0', dtype=torch.float64)
tensor([-2.2152, -2.9156, -3.1038, -3.1941, -3.4681], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8499, device='cuda:0', dtype=torch.float64)
tensor([-2.2075, -2.9073, -3.1380, -3.2027, -3.4587], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4973, device='cuda:0', dtype=torch.float64)
tensor([-2.2054, -2.9088, -3.1701, -3.2153, -3.4527], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7504, device='cuda:0', dtype=torch.float64)
tensor([-2.2064, -2.9182, -3.1943, -3.2162, -3.4562], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4735, device='cuda:0', dtype=torch.float64)
tensor([-2.2124, -2.9271, -3.2092, -3.2237, -3.4702], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7504, device='cuda:0', dtype=torch.float64)
tensor([-2.2216, -2.9453, -3.2133, -3.2489, -3.5007], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7169, device='cuda:0', dtype=torch.float64)
tensor([-2.2254, -2.9552, -3.2182, -3.2911, -3.5282], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6377, device='cuda:0', dtype=torch.float64)
tensor([-2.2284, -2.9703, -3.2163, -3.3469, -3.5365], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6573, device='cuda:0', dtype=torch.float64)
tensor([-2.2117, -2.9830, -3.2019, -3.4041, -3.5209], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7017, device='cuda:0', dtype=torch.float64)
tensor([-2.1805, -2.9840, -3.1694, -3.4482, -3.4783], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4956, device='cuda:0', dtype=torch.float64)
tensor([-2.1548, -2.9839, -3.1493, -3.4995, -3.4330], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5546, device='cuda:0', dtype=torch.float64)
tensor([-2.1357, -2.9875, -3.1221, -3.5456, -3.4043], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7503, device='cuda:0', dtype=torch.float64)
tensor([-2.1225, -2.9886, -3.0825, -3.5630, -3.3656], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8365, device='cuda:0', dtype=torch.float64)
tensor([-2.1088, -3.0008, -3.0289, -3.5704, -3.3150], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5866, device='cuda:0', dtype=torch.float64)
tensor([-2.1101, -3.0218, -2.9838, -3.5702, -3.2769], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9330, device='cuda:0', dtype=torch.float64)
tensor([-2.1393, -3.0353, -2.9434, -3.5527, -3.2609], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5861, device='cuda:0', dtype=torch.float64)
tensor([-2.1870, -3.0475, -2.9121, -3.5319, -3.2571], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7534, device='cuda:0', dtype=torch.float64)
tensor([-2.2346, -3.0502, -2.9028, -3.4858, -3.2636], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4001, device='cuda:0', dtype=torch.float64)
tensor([-2.2836, -3.0602, -2.9010, -3.4518, -3.2779], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.3140, device='cuda:0', dtype=torch.float64)
tensor([-2.3282, -3.0691, -2.9172, -3.4433, -3.3156], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4542, device='cuda:0', dtype=torch.float64)
tensor([-2.3375, -3.0697, -2.9428, -3.4517, -3.3631], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.2734, device='cuda:0', dtype=torch.float64)
tensor([-2.3308, -3.0627, -2.9990, -3.4941, -3.4086], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1401, device='cuda:0', dtype=torch.float64)
tensor([-2.3348, -3.0566, -3.0590, -3.5627, -3.4367], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1334, device='cuda:0', dtype=torch.float64)
tensor([-2.3514, -3.0457, -3.1066, -3.5867, -3.4447], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0406, device='cuda:0', dtype=torch.float64)
tensor([-2.3754, -3.0354, -3.1415, -3.5941, -3.4484], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5819, device='cuda:0', dtype=torch.float64)
tensor([-2.3783, -3.0219, -3.1630, -3.5650, -3.4433], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7340, device='cuda:0', dtype=torch.float64)
tensor([-2.3996, -3.0213, -3.1725, -3.5314, -3.4472], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7914, device='cuda:0', dtype=torch.float64)
tensor([-2.3955, -3.0174, -3.1729, -3.5134, -3.4406], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5836, device='cuda:0', dtype=torch.float64)
tensor([-2.3764, -3.0081, -3.1762, -3.5074, -3.4477], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0966, device='cuda:0', dtype=torch.float64)
tensor([-2.3489, -2.9935, -3.1976, -3.4961, -3.4548], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.3421, device='cuda:0', dtype=torch.float64)
tensor([-2.3153, -2.9784, -3.2180, -3.4777, -3.4646], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8513, device='cuda:0', dtype=torch.float64)
tensor([-2.2913, -2.9666, -3.2504, -3.4730, -3.4828], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8988, device='cuda:0', dtype=torch.float64)
tensor([-2.2676, -2.9527, -3.2783, -3.4636, -3.4961], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3544, device='cuda:0', dtype=torch.float64)
tensor([-2.2515, -2.9411, -3.3000, -3.4527, -3.5031], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4854, device='cuda:0', dtype=torch.float64)
tensor([-2.2410, -2.9245, -3.3297, -3.4402, -3.5135], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9706, device='cuda:0', dtype=torch.float64)
tensor([-2.2382, -2.9141, -3.3648, -3.4369, -3.5265], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6921, device='cuda:0', dtype=torch.float64)
tensor([-2.2277, -2.9086, -3.3875, -3.4311, -3.5133], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7252, device='cuda:0', dtype=torch.float64)
tensor([-2.2340, -2.9106, -3.4013, -3.4161, -3.5175], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7266, device='cuda:0', dtype=torch.float64)
tensor([-2.2407, -2.9160, -3.3177, -3.4033, -3.5175], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7030, device='cuda:0', dtype=torch.float64)
tensor([-2.2535, -2.9236, -3.2456, -3.3912, -3.5228], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.2944, device='cuda:0', dtype=torch.float64)
tensor([-2.2583, -2.9197, -3.2245, -3.3987, -3.5058], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8957, device='cuda:0', dtype=torch.float64)
tensor([-2.2545, -2.9173, -3.2244, -3.4150, -3.4882], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7814, device='cuda:0', dtype=torch.float64)
tensor([-2.2504, -2.9211, -3.2298, -3.4350, -3.4609], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6059, device='cuda:0', dtype=torch.float64)
tensor([-2.2613, -2.9354, -3.2398, -3.4554, -3.4548], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9336, device='cuda:0', dtype=torch.float64)
tensor([-2.2695, -2.9432, -3.2417, -3.4567, -3.4499], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1543, device='cuda:0', dtype=torch.float64)
tensor([-2.2980, -2.9724, -3.2162, -3.4337, -3.4549], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5213, device='cuda:0', dtype=torch.float64)
tensor([-2.3372, -2.9972, -3.1895, -3.4220, -3.4643], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4067, device='cuda:0', dtype=torch.float64)
tensor([-2.3728, -3.0190, -3.1541, -3.4211, -3.4726], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5555, device='cuda:0', dtype=torch.float64)
tensor([-2.4124, -3.0471, -3.1310, -3.4266, -3.5048], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0394, device='cuda:0', dtype=torch.float64)
tensor([-2.4412, -3.0778, -3.1229, -3.4275, -3.5262], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9369, device='cuda:0', dtype=torch.float64)
tensor([-2.4558, -3.1133, -3.1183, -3.4614, -3.5615], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8528, device='cuda:0', dtype=torch.float64)
tensor([-2.4737, -3.1521, -3.1157, -3.5138, -3.6052], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6840, device='cuda:0', dtype=torch.float64)
tensor([-2.4519, -3.1653, -3.1192, -3.5718, -3.6081], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8196, device='cuda:0', dtype=torch.float64)
tensor([-2.4274, -3.1586, -3.1244, -3.5956, -3.6042], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6253, device='cuda:0', dtype=torch.float64)
tensor([-2.4178, -3.1581, -3.1420, -3.6363, -3.6314], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8736, device='cuda:0', dtype=torch.float64)
tensor([-2.4003, -3.1498, -3.1703, -3.6672, -3.6564], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5018, device='cuda:0', dtype=torch.float64)
tensor([-2.3714, -3.1384, -3.1887, -3.6810, -3.6749], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8105, device='cuda:0', dtype=torch.float64)
tensor([-2.3373, -3.1259, -3.1959, -3.6946, -3.6773], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7393, device='cuda:0', dtype=torch.float64)
tensor([-2.3022, -3.1132, -3.1988, -3.6830, -3.6750], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7140, device='cuda:0', dtype=torch.float64)
tensor([-2.2811, -3.1002, -3.1915, -3.6487, -3.6668], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7666, device='cuda:0', dtype=torch.float64)
tensor([-2.2777, -3.0827, -3.1821, -3.6162, -3.6632], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6781, device='cuda:0', dtype=torch.float64)
tensor([-2.2922, -3.0670, -3.1843, -3.5858, -3.6787], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7805, device='cuda:0', dtype=torch.float64)
tensor([-2.3248, -3.0611, -3.1865, -3.5454, -3.7192], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0256, device='cuda:0', dtype=torch.float64)
tensor([-2.3790, -3.0685, -3.1843, -3.5294, -3.7770], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1183, device='cuda:0', dtype=torch.float64)
tensor([-2.4482, -3.0965, -3.1967, -3.5282, -3.8222], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0096, device='cuda:0', dtype=torch.float64)
tensor([-2.5061, -3.1244, -3.2033, -3.5256, -3.8462], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7774, device='cuda:0', dtype=torch.float64)
tensor([-2.5542, -3.1520, -3.2228, -3.5508, -3.8880], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7308, device='cuda:0', dtype=torch.float64)
tensor([-2.6042, -3.1804, -3.2607, -3.5773, -3.9268], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7092, device='cuda:0', dtype=torch.float64)
tensor([-2.6414, -3.1949, -3.2892, -3.5862, -3.9451], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0556, device='cuda:0', dtype=torch.float64)
tensor([-2.6304, -3.1809, -3.3057, -3.5550, -3.9230], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4716, device='cuda:0', dtype=torch.float64)
tensor([-2.6114, -3.1651, -3.3168, -3.4922, -3.8848], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9960, device='cuda:0', dtype=torch.float64)
tensor([-2.5822, -3.1499, -3.3321, -3.4400, -3.8369], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7165, device='cuda:0', dtype=torch.float64)
tensor([-2.5430, -3.1437, -3.3425, -3.4183, -3.7892], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7070, device='cuda:0', dtype=torch.float64)
tensor([-2.5113, -3.1564, -3.3480, -3.4148, -3.7410], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4046, device='cuda:0', dtype=torch.float64)
tensor([-2.4874, -3.1767, -3.3582, -3.4348, -3.7147], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8936, device='cuda:0', dtype=torch.float64)
tensor([-2.4600, -3.1956, -3.3741, -3.4547, -3.7043], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.4339, device='cuda:0', dtype=torch.float64)
tensor([-2.4671, -3.2325, -3.3910, -3.4472, -3.7096], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6567, device='cuda:0', dtype=torch.float64)
tensor([-2.5002, -3.2558, -3.3975, -3.4394, -3.7402], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.2793, device='cuda:0', dtype=torch.float64)
tensor([-2.5393, -3.2831, -3.3994, -3.4452, -3.7894], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5617, device='cuda:0', dtype=torch.float64)
tensor([-2.5719, -3.2874, -3.3927, -3.4664, -3.8044], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6220, device='cuda:0', dtype=torch.float64)
tensor([-2.6063, -3.2929, -3.3829, -3.4803, -3.7987], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9051, device='cuda:0', dtype=torch.float64)
tensor([-2.6173, -3.2903, -3.3681, -3.4744, -3.7745], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0391, device='cuda:0', dtype=torch.float64)
tensor([-2.6269, -3.2873, -3.3437, -3.4539, -3.7420], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7056, device='cuda:0', dtype=torch.float64)
tensor([-2.6277, -3.2850, -3.3223, -3.4356, -3.7117], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9004, device='cuda:0', dtype=torch.float64)
tensor([-2.6165, -3.2764, -3.3004, -3.4184, -3.6868], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8096, device='cuda:0', dtype=torch.float64)
tensor([-2.6053, -3.2624, -3.2829, -3.4227, -3.6564], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7289, device='cuda:0', dtype=torch.float64)
tensor([-2.5853, -3.2545, -3.2720, -3.4383, -3.6257], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6887, device='cuda:0', dtype=torch.float64)
tensor([-2.5716, -3.2507, -3.2695, -3.4724, -3.6099], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.2342, device='cuda:0', dtype=torch.float64)
tensor([-2.5668, -3.2563, -3.2646, -3.5227, -3.6143], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8629, device='cuda:0', dtype=torch.float64)
tensor([-2.5627, -3.2617, -3.2325, -3.5861, -3.6207], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9357, device='cuda:0', dtype=torch.float64)
tensor([-2.5735, -3.2882, -3.2231, -3.6771, -3.6623], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5500, device='cuda:0', dtype=torch.float64)
tensor([-2.5775, -3.3208, -3.2144, -3.7822, -3.7200], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5967, device='cuda:0', dtype=torch.float64)
tensor([-2.5656, -3.3473, -3.2162, -3.9112, -3.7827], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5977, device='cuda:0', dtype=torch.float64)
tensor([-2.5639, -3.3636, -3.2327, -3.9875, -3.8269], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.2444, device='cuda:0', dtype=torch.float64)
tensor([-2.5633, -3.3887, -3.2712, -4.0465, -3.7960], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9478, device='cuda:0', dtype=torch.float64)
tensor([-2.5359, -3.3824, -3.3226, -4.0305, -3.7392], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9953, device='cuda:0', dtype=torch.float64)
tensor([-2.4949, -3.3521, -3.3817, -4.0012, -3.7107], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9015, device='cuda:0', dtype=torch.float64)
tensor([-2.4604, -3.3294, -3.4439, -4.0039, -3.7207], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7191, device='cuda:0', dtype=torch.float64)
tensor([-2.4302, -3.3042, -3.5127, -3.9835, -3.7430], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7907, device='cuda:0', dtype=torch.float64)
tensor([-2.4129, -3.3000, -3.5805, -3.9732, -3.7880], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5206, device='cuda:0', dtype=torch.float64)
tensor([-2.4086, -3.2921, -3.6345, -3.9633, -3.8345], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5773, device='cuda:0', dtype=torch.float64)
tensor([-2.4231, -3.2929, -3.6801, -3.9520, -3.8770], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8900, device='cuda:0', dtype=torch.float64)
tensor([-2.4529, -3.2983, -3.6940, -3.9184, -3.9161], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4030, device='cuda:0', dtype=torch.float64)
tensor([-2.4947, -3.3038, -3.6918, -3.8886, -3.9405], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7693, device='cuda:0', dtype=torch.float64)
tensor([-2.5555, -3.3050, -3.6841, -3.8829, -3.9684], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5343, device='cuda:0', dtype=torch.float64)
tensor([-2.6248, -3.3080, -3.6651, -3.9057, -3.9961], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7443, device='cuda:0', dtype=torch.float64)
tensor([-2.6965, -3.3361, -3.6388, -3.9560, -4.0159], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6202, device='cuda:0', dtype=torch.float64)
tensor([-2.7574, -3.3521, -3.6116, -4.0078, -4.0173], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7837, device='cuda:0', dtype=torch.float64)
tensor([-2.8288, -3.3708, -3.5931, -4.0513, -4.0173], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5616, device='cuda:0', dtype=torch.float64)
tensor([-2.9216, -3.3918, -3.6101, -4.0912, -4.0101], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5958, device='cuda:0', dtype=torch.float64)
tensor([-3.0198, -3.4154, -3.7023, -4.0899, -3.9882], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1685, device='cuda:0', dtype=torch.float64)
tensor([-3.1095, -3.4417, -3.8314, -4.1024, -3.9837], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6657, device='cuda:0', dtype=torch.float64)
tensor([-3.1465, -3.4728, -3.7230, -4.0898, -3.9732], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6115, device='cuda:0', dtype=torch.float64)
tensor([-3.1237, -3.5116, -3.6027, -4.0914, -3.9674], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5727, device='cuda:0', dtype=torch.float64)
tensor([-3.0922, -3.5436, -3.5426, -4.0948, -3.9753], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0186, device='cuda:0', dtype=torch.float64)
tensor([-3.0663, -3.5946, -3.5802, -4.1206, -3.9989], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8012, device='cuda:0', dtype=torch.float64)
tensor([-3.0365, -3.6084, -3.7303, -4.1153, -4.0217], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3442, device='cuda:0', dtype=torch.float64)
tensor([-3.0261, -3.6175, -3.8992, -4.1111, -4.0401], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7919, device='cuda:0', dtype=torch.float64)
tensor([-3.0015, -3.5859, -4.0249, -4.0772, -4.0637], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5587, device='cuda:0', dtype=torch.float64)
tensor([-2.9914, -3.5667, -3.8829, -4.0623, -4.1342], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5043, device='cuda:0', dtype=torch.float64)
tensor([-2.9668, -3.5484, -3.7773, -4.0562, -4.2211], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8591, device='cuda:0', dtype=torch.float64)
tensor([-2.9462, -3.5567, -3.7019, -4.0593, -4.3011], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7252, device='cuda:0', dtype=torch.float64)
tensor([-2.9292, -3.5696, -3.6554, -4.0633, -4.3712], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8173, device='cuda:0', dtype=torch.float64)
tensor([-2.8950, -3.6083, -3.6205, -4.0329, -4.3917], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8806, device='cuda:0', dtype=torch.float64)
tensor([-2.8559, -3.6637, -3.6089, -3.9893, -4.4258], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0841, device='cuda:0', dtype=torch.float64)
tensor([-2.8185, -3.7418, -3.6049, -3.9612, -4.3894], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5768, device='cuda:0', dtype=torch.float64)
tensor([-2.7835, -3.8573, -3.6095, -3.9500, -4.3308], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6974, device='cuda:0', dtype=torch.float64)
tensor([-2.7686, -3.9773, -3.6040, -3.9402, -4.2121], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5721, device='cuda:0', dtype=torch.float64)
tensor([-2.7698, -4.0588, -3.5984, -3.9377, -4.1502], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5857, device='cuda:0', dtype=torch.float64)
tensor([-2.7838, -4.1200, -3.5849, -3.9599, -4.1441], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5320, device='cuda:0', dtype=torch.float64)
tensor([-2.8003, -4.1812, -3.5667, -3.9879, -4.1691], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5596, device='cuda:0', dtype=torch.float64)
tensor([-2.8328, -4.2832, -3.5541, -4.0548, -4.2562], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7827, device='cuda:0', dtype=torch.float64)
tensor([-2.8584, -4.3136, -3.5425, -4.0581, -4.3356], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4787, device='cuda:0', dtype=torch.float64)
tensor([-2.8913, -4.2598, -3.5385, -4.0601, -4.4131], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1094, device='cuda:0', dtype=torch.float64)
tensor([-2.9432, -4.2392, -3.5388, -4.0442, -4.4816], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3834, device='cuda:0', dtype=torch.float64)
tensor([-2.9886, -4.2213, -3.5544, -4.0755, -4.5824], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4614, device='cuda:0', dtype=torch.float64)
tensor([-3.0401, -4.1841, -3.5802, -4.0909, -4.6264], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0181, device='cuda:0', dtype=torch.float64)
tensor([-3.1196, -4.1618, -3.6100, -4.0898, -4.6926], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6367, device='cuda:0', dtype=torch.float64)
tensor([-3.1847, -4.1548, -3.6359, -4.1105, -4.7714], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4966, device='cuda:0', dtype=torch.float64)
tensor([-3.2418, -4.1194, -3.6704, -4.1031, -4.7077], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6341, device='cuda:0', dtype=torch.float64)
tensor([-3.2937, -4.0746, -3.6960, -4.1241, -4.6365], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6040, device='cuda:0', dtype=torch.float64)
tensor([-3.3649, -4.0538, -3.7291, -4.1108, -4.5496], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5082, device='cuda:0', dtype=torch.float64)
tensor([-3.4684, -4.0537, -3.7549, -4.1496, -4.5538], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9323, device='cuda:0', dtype=torch.float64)
tensor([-3.5661, -4.0451, -3.7842, -4.1916, -4.5520], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6064, device='cuda:0', dtype=torch.float64)
tensor([-3.6413, -4.0435, -3.8211, -4.2564, -4.5554], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6959, device='cuda:0', dtype=torch.float64)
tensor([-3.6877, -4.0186, -3.8399, -4.2701, -4.5105], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4444, device='cuda:0', dtype=torch.float64)
tensor([-3.7199, -3.9827, -3.8540, -4.3493, -4.5219], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3617, device='cuda:0', dtype=torch.float64)
tensor([-3.7335, -3.9622, -3.8644, -4.4007, -4.5609], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9777, device='cuda:0', dtype=torch.float64)
tensor([-3.6916, -3.9380, -3.8768, -4.5302, -4.6437], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6896, device='cuda:0', dtype=torch.float64)
tensor([-3.6584, -3.9138, -3.8964, -4.5524, -4.6621], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9736, device='cuda:0', dtype=torch.float64)
tensor([-3.6389, -3.9129, -3.9264, -4.5573, -4.6042], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.4586, device='cuda:0', dtype=torch.float64)
tensor([-3.6149, -3.9137, -3.9870, -4.5137, -4.4478], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6045, device='cuda:0', dtype=torch.float64)
tensor([-3.6236, -3.9193, -4.0555, -4.4835, -4.3784], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2767, device='cuda:0', dtype=torch.float64)
tensor([-3.6802, -3.9381, -4.1302, -4.4508, -4.3671], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5697, device='cuda:0', dtype=torch.float64)
tensor([-3.7723, -3.9561, -4.2601, -4.4387, -4.4092], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6862, device='cuda:0', dtype=torch.float64)
tensor([-3.8210, -3.9657, -4.3837, -4.4607, -4.4475], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7868, device='cuda:0', dtype=torch.float64)
tensor([-3.8776, -3.9691, -4.4344, -4.4597, -4.4672], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5344, device='cuda:0', dtype=torch.float64)
tensor([-3.8864, -3.9859, -4.3791, -4.4363, -4.4739], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7155, device='cuda:0', dtype=torch.float64)
tensor([-3.8451, -3.9966, -4.2638, -4.4257, -4.4530], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6379, device='cuda:0', dtype=torch.float64)
tensor([-3.7921, -4.0079, -4.1371, -4.4274, -4.4394], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6227, device='cuda:0', dtype=torch.float64)
tensor([-3.8080, -4.0362, -4.0590, -4.4553, -4.4538], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7599, device='cuda:0', dtype=torch.float64)
tensor([-3.7688, -4.0347, -3.9985, -4.5197, -4.4806], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9110, device='cuda:0', dtype=torch.float64)
tensor([-3.7366, -4.0547, -3.9726, -4.5634, -4.5261], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4625, device='cuda:0', dtype=torch.float64)
tensor([-3.7554, -4.0646, -3.9596, -4.6225, -4.5915], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3174, device='cuda:0', dtype=torch.float64)
tensor([-3.7992, -4.1000, -3.9915, -4.7201, -4.7157], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6429, device='cuda:0', dtype=torch.float64)
tensor([-3.8714, -4.1187, -4.0283, -4.8662, -4.9366], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7094, device='cuda:0', dtype=torch.float64)
tensor([-3.9075, -4.1992, -4.0918, -5.0193, -5.2627], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2573, device='cuda:0', dtype=torch.float64)
tensor([-3.9215, -4.3191, -4.1534, -5.1210, -5.5641], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7451, device='cuda:0', dtype=torch.float64)
tensor([-3.9991, -4.5875, -4.2644, -5.2231, -5.8797], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5328, device='cuda:0', dtype=torch.float64)
tensor([-4.0947, -5.0247, -4.4118, -5.2613, -5.9918], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6344, device='cuda:0', dtype=torch.float64)
tensor([-4.1722, -5.8519, -4.6247, -5.3475, -6.0698], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4850, device='cuda:0', dtype=torch.float64)
tensor([-4.2454, -6.5442, -4.7255, -5.4577, -6.1203], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6455, device='cuda:0', dtype=torch.float64)
tensor([-4.3659, -7.0886, -4.7884, -5.4956, -6.0083], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7704, device='cuda:0', dtype=torch.float64)
tensor([-4.5042, -7.3133, -4.8939, -5.5622, -5.9206], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3209, device='cuda:0', dtype=torch.float64)
tensor([-4.5677, -7.3356, -4.9677, -5.6158, -5.8163], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2464, device='cuda:0', dtype=torch.float64)
tensor([-4.5970, -7.4082, -5.0206, -5.7026, -5.7227], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4836, device='cuda:0', dtype=torch.float64)
tensor([-4.6473, -7.5421, -5.0960, -5.7903, -5.7224], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6458, device='cuda:0', dtype=torch.float64)
tensor([-4.7035, -7.3617, -5.2881, -5.9987, -5.7982], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6340, device='cuda:0', dtype=torch.float64)
tensor([-4.7464, -7.0180, -5.5296, -6.2937, -5.8888], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3657, device='cuda:0', dtype=torch.float64)
tensor([-4.8174, -6.6450, -5.7993, -6.6659, -6.0057], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3881, device='cuda:0', dtype=torch.float64)
tensor([-4.8600, -6.4362, -6.0225, -7.0195, -6.1748], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8814, device='cuda:0', dtype=torch.float64)
tensor([-4.8924, -6.3957, -6.2306, -7.4526, -6.3717], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3797, device='cuda:0', dtype=torch.float64)
tensor([-4.9829, -6.3889, -6.5030, -7.9500, -6.6345], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5983, device='cuda:0', dtype=torch.float64)
tensor([-5.1037, -6.6449, -6.8472, -8.5905, -6.8980], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8000, device='cuda:0', dtype=torch.float64)
tensor([-5.2419, -6.9241, -7.2577, -9.2291, -7.2091], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2551, device='cuda:0', dtype=torch.float64)
tensor([-5.3874, -7.0950, -7.8553, -9.8282, -7.5871], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3838, device='cuda:0', dtype=torch.float64)
tensor([ -5.4836,  -7.4708,  -8.6018, -10.6331,  -7.9894], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4813, device='cuda:0', dtype=torch.float64)
tensor([ -5.5871,  -7.7245,  -9.5883, -11.3839,  -8.4145], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6380, device='cuda:0', dtype=torch.float64)
tensor([ -5.7434,  -8.1809, -10.5716, -12.0669,  -8.9213], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4608, device='cuda:0', dtype=torch.float64)
tensor([ -5.8779,  -8.5377, -11.6461, -13.0373,  -9.5319], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5295, device='cuda:0', dtype=torch.float64)
tensor([ -6.0550,  -8.8895, -12.4038, -13.8321, -10.3253], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5346, device='cuda:0', dtype=torch.float64)
tensor([ -6.2570,  -9.3336, -12.8733, -14.7894, -11.2990], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5726, device='cuda:0', dtype=torch.float64)
tensor([ -6.6654,  -9.8911, -13.6416, -15.8288, -12.7740], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6082, device='cuda:0', dtype=torch.float64)
tensor([ -7.0410, -10.4184, -14.5972, -16.5615, -13.8713], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6425, device='cuda:0', dtype=torch.float64)
tensor([ -7.4629, -10.7122, -15.5204, -17.3197, -14.8610], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6030, device='cuda:0', dtype=torch.float64)
tensor([ -7.8281, -11.0270, -15.9132, -17.7733, -15.4176], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5722, device='cuda:0', dtype=torch.float64)
tensor([ -8.0599, -11.2329, -16.0314, -17.7708, -15.6261], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6018, device='cuda:0', dtype=torch.float64)
tensor([ -8.4680, -11.8166, -16.2858, -18.1559, -16.2430], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2846, device='cuda:0', dtype=torch.float64)
tensor([ -9.0054, -12.6154, -16.2365, -18.3908, -17.0227], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5066, device='cuda:0', dtype=torch.float64)
tensor([ -9.3353, -13.3482, -16.3905, -18.7483, -17.6318], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6202, device='cuda:0', dtype=torch.float64)
tensor([ -9.8302, -14.5748, -16.6405, -19.1625, -18.6764], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4518, device='cuda:0', dtype=torch.float64)
tensor([-10.2955, -16.5061, -17.3797, -19.9032, -20.0568], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4982, device='cuda:0', dtype=torch.float64)
tensor([-10.7319, -18.8350, -17.9957, -20.6656, -21.4419], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5605, device='cuda:0', dtype=torch.float64)
tensor([-11.1385, -20.7836, -18.5942, -21.7425, -22.7255], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6473, device='cuda:0', dtype=torch.float64)
tensor([-11.5626, -22.7605, -18.8930, -23.1942, -24.0761], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3312, device='cuda:0', dtype=torch.float64)
tensor([-11.7095, -24.4996, -19.0995, -24.6688, -24.9554], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5647, device='cuda:0', dtype=torch.float64)
tensor([-11.7219, -25.8588, -18.8059, -25.8816, -25.4912], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4650, device='cuda:0', dtype=torch.float64)
tensor([-11.7091, -26.8821, -18.4310, -26.7471, -25.6664], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5709, device='cuda:0', dtype=torch.float64)
tensor([-11.8013, -27.5487, -18.4641, -27.5433, -25.8752], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8131, device='cuda:0', dtype=torch.float64)
tensor([-11.6858, -27.2310, -18.0798, -28.1154, -25.4625], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5054, device='cuda:0', dtype=torch.float64)
tensor([-11.5384, -26.9322, -17.9225, -28.9619, -25.1838], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5634, device='cuda:0', dtype=torch.float64)
tensor([-11.1987, -26.7212, -17.7317, -29.9126, -24.5599], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3547, device='cuda:0', dtype=torch.float64)
tensor([-10.8486, -26.6595, -17.8584, -30.9864, -24.1656], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5230, device='cuda:0', dtype=torch.float64)
tensor([-10.7948, -26.5168, -18.1953, -32.2737, -24.2087], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5615, device='cuda:0', dtype=torch.float64)
tensor([-10.6854, -26.6760, -18.5549, -33.5614, -24.2815], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4801, device='cuda:0', dtype=torch.float64)
tensor([-10.5564, -27.1886, -19.1748, -34.5969, -24.4390], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4847, device='cuda:0', dtype=torch.float64)
tensor([-10.5123, -27.6656, -19.6794, -35.3082, -24.5891], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4987, device='cuda:0', dtype=torch.float64)
tensor([-11.0651, -28.1816, -20.4368, -36.9133, -25.9461], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6784, device='cuda:0', dtype=torch.float64)
tensor([-11.4461, -28.5198, -21.0054, -38.7246, -26.9405], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4806, device='cuda:0', dtype=torch.float64)
tensor([-11.8629, -29.1428, -21.8753, -40.6934, -28.3655], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5464, device='cuda:0', dtype=torch.float64)
tensor([-12.4641, -29.2676, -23.1808, -42.6386, -29.6174], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4779, device='cuda:0', dtype=torch.float64)
tensor([-13.0882, -29.1151, -24.3432, -44.3365, -30.6926], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6782, device='cuda:0', dtype=torch.float64)
tensor([-13.9630, -29.5557, -25.8693, -46.1957, -32.1792], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4722, device='cuda:0', dtype=torch.float64)
tensor([-14.8445, -30.3017, -27.1902, -47.8840, -33.4852], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3405, device='cuda:0', dtype=torch.float64)
tensor([-15.8339, -31.3260, -28.5123, -49.2334, -34.6218], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4601, device='cuda:0', dtype=torch.float64)
tensor([-16.5086, -31.9971, -29.2095, -50.4628, -35.2101], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4069, device='cuda:0', dtype=torch.float64)
tensor([-17.1606, -33.3821, -30.0200, -52.3575, -36.6372], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6438, device='cuda:0', dtype=torch.float64)
tensor([-17.6293, -34.1499, -30.8216, -52.9457, -37.1898], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8351, device='cuda:0', dtype=torch.float64)
tensor([-18.5308, -34.9650, -32.1360, -53.2207, -37.9219], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3909, device='cuda:0', dtype=torch.float64)
tensor([-19.5122, -36.0353, -33.7666, -53.4435, -38.6327], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4722, device='cuda:0', dtype=torch.float64)
tensor([-20.5453, -37.5900, -35.7811, -53.9419, -39.6454], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6453, device='cuda:0', dtype=torch.float64)
tensor([-22.0378, -39.0243, -38.7098, -54.4515, -40.7921], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5234, device='cuda:0', dtype=torch.float64)
tensor([-23.5479, -40.1877, -41.3212, -54.7169, -41.6751], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3284, device='cuda:0', dtype=torch.float64)
tensor([-25.1445, -41.5046, -43.7722, -55.2950, -42.8238], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3291, device='cuda:0', dtype=torch.float64)
tensor([-26.6851, -43.1612, -45.7966, -55.2693, -44.5667], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6131, device='cuda:0', dtype=torch.float64)
tensor([-27.7530, -43.5980, -46.6740, -54.7428, -45.4687], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6027, device='cuda:0', dtype=torch.float64)
tensor([-28.1240, -43.6089, -47.0349, -53.5862, -46.2451], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5863, device='cuda:0', dtype=torch.float64)
tensor([-28.7050, -43.6809, -47.9424, -52.5896, -47.6965], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3235, device='cuda:0', dtype=torch.float64)
tensor([-29.3083, -43.4689, -48.4767, -52.1235, -48.9123], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7278, device='cuda:0', dtype=torch.float64)
tensor([-29.7765, -42.7089, -48.7688, -52.2017, -50.0141], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5347, device='cuda:0', dtype=torch.float64)
tensor([-29.9269, -42.3264, -48.8247, -51.2662, -50.3415], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6380, device='cuda:0', dtype=torch.float64)
tensor([-30.1026, -41.8159, -49.3183, -50.4419, -50.1992], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6509, device='cuda:0', dtype=torch.float64)
tensor([-29.7069, -41.2933, -49.3519, -49.3608, -49.8074], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4438, device='cuda:0', dtype=torch.float64)
tensor([-29.4836, -40.7552, -49.4990, -47.8176, -48.9927], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3985, device='cuda:0', dtype=torch.float64)
tensor([-29.6899, -40.5313, -50.3811, -46.7396, -48.5201], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6679, device='cuda:0', dtype=torch.float64)
tensor([-29.4574, -40.2846, -50.4900, -45.0049, -47.6640], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3130, device='cuda:0', dtype=torch.float64)
tensor([-29.2100, -39.9247, -50.5863, -43.3445, -45.9461], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8539, device='cuda:0', dtype=torch.float64)
tensor([-29.3106, -39.4054, -51.3238, -42.5954, -44.0177], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7418, device='cuda:0', dtype=torch.float64)
tensor([-29.4969, -38.8603, -51.7276, -42.3483, -42.4975], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4883, device='cuda:0', dtype=torch.float64)
tensor([-29.2421, -38.1428, -51.5709, -41.6175, -40.2901], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5239, device='cuda:0', dtype=torch.float64)
tensor([-29.2247, -37.5488, -51.4430, -41.3058, -38.5821], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3841, device='cuda:0', dtype=torch.float64)
tensor([-29.4940, -37.3276, -51.2460, -41.0580, -37.6178], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7362, device='cuda:0', dtype=torch.float64)
tensor([-29.6882, -37.5721, -51.2098, -40.7308, -37.4093], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5499, device='cuda:0', dtype=torch.float64)
tensor([-29.6997, -37.2718, -50.5856, -40.1791, -35.9798], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4633, device='cuda:0', dtype=torch.float64)
tensor([-29.5913, -37.3082, -49.9870, -40.4286, -34.5223], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8498, device='cuda:0', dtype=torch.float64)
tensor([-29.4868, -37.6373, -49.3079, -40.5324, -32.8944], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3040, device='cuda:0', dtype=torch.float64)
tensor([-29.5310, -38.1608, -48.8877, -41.2624, -31.9214], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5765, device='cuda:0', dtype=torch.float64)
tensor([-29.6985, -37.5735, -48.5035, -42.5884, -29.8447], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2341, device='cuda:0', dtype=torch.float64)
tensor([-29.8459, -37.1560, -48.4431, -43.6916, -28.4194], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3121, device='cuda:0', dtype=torch.float64)
tensor([-30.0672, -36.4532, -48.5284, -44.6469, -26.4645], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7710, device='cuda:0', dtype=torch.float64)
tensor([-30.1274, -37.0452, -48.8054, -45.5071, -25.5168], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3488, device='cuda:0', dtype=torch.float64)
tensor([-30.0290, -37.7657, -48.9307, -45.9247, -24.8133], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5873, device='cuda:0', dtype=torch.float64)
tensor([-29.7531, -38.1042, -48.5026, -45.8236, -23.5514], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7127, device='cuda:0', dtype=torch.float64)
tensor([-29.2437, -38.4359, -47.3660, -46.3867, -22.6860], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4547, device='cuda:0', dtype=torch.float64)
tensor([-28.7521, -38.7548, -46.4911, -47.0350, -21.7676], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4200, device='cuda:0', dtype=torch.float64)
tensor([-27.8320, -38.5070, -44.9684, -47.3055, -20.8162], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6070, device='cuda:0', dtype=torch.float64)
tensor([-26.8626, -38.8891, -43.3997, -46.8673, -20.3279], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6680, device='cuda:0', dtype=torch.float64)
tensor([-25.5018, -40.0244, -41.5948, -46.2713, -20.2171], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5923, device='cuda:0', dtype=torch.float64)
tensor([-24.2107, -41.0281, -40.3355, -46.2145, -20.2669], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3820, device='cuda:0', dtype=torch.float64)
tensor([-22.8599, -42.2588, -38.8338, -45.8402, -20.4312], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8421, device='cuda:0', dtype=torch.float64)
tensor([-21.9842, -42.9624, -37.6554, -45.7994, -20.3824], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5194, device='cuda:0', dtype=torch.float64)
tensor([-21.1531, -43.6317, -36.9087, -45.8552, -20.4296], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6043, device='cuda:0', dtype=torch.float64)
tensor([-20.4350, -44.0585, -36.4516, -46.4785, -20.5843], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4211, device='cuda:0', dtype=torch.float64)
tensor([-19.9597, -44.9507, -36.1413, -47.3955, -20.7215], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0489, device='cuda:0', dtype=torch.float64)
tensor([-19.6779, -46.5884, -35.8392, -48.0266, -20.9784], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4298, device='cuda:0', dtype=torch.float64)
tensor([-19.6314, -47.3311, -35.7970, -49.4756, -21.2942], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3914, device='cuda:0', dtype=torch.float64)
tensor([-19.6198, -48.3008, -36.0609, -51.1857, -21.8399], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3949, device='cuda:0', dtype=torch.float64)
tensor([-19.5993, -49.0424, -36.4450, -53.0247, -22.6586], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7317, device='cuda:0', dtype=torch.float64)
tensor([-19.6795, -48.8561, -36.9107, -55.2244, -23.8241], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9251, device='cuda:0', dtype=torch.float64)
tensor([-19.6043, -47.6708, -37.5916, -57.3639, -24.7995], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5742, device='cuda:0', dtype=torch.float64)
tensor([-19.4658, -46.5064, -38.3335, -58.9908, -25.5509], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6641, device='cuda:0', dtype=torch.float64)
tensor([-19.5564, -44.7734, -39.2706, -60.1024, -25.9537], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9431, device='cuda:0', dtype=torch.float64)
tensor([-19.6283, -44.1703, -39.9008, -60.4414, -26.2353], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4832, device='cuda:0', dtype=torch.float64)
tensor([-19.7647, -43.9884, -40.7508, -60.7529, -26.4782], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6727, device='cuda:0', dtype=torch.float64)
tensor([-19.9754, -43.5632, -41.7768, -61.8654, -26.8650], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5950, device='cuda:0', dtype=torch.float64)
tensor([-20.0705, -43.2151, -42.3249, -62.8098, -27.2800], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3461, device='cuda:0', dtype=torch.float64)
tensor([-20.1665, -43.3007, -43.1846, -64.4269, -27.5639], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4323, device='cuda:0', dtype=torch.float64)
tensor([-20.2921, -43.6495, -44.2526, -65.8577, -27.4839], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5993, device='cuda:0', dtype=torch.float64)
tensor([-20.4561, -44.0275, -44.7850, -65.3958, -26.9802], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5043, device='cuda:0', dtype=torch.float64)
tensor([-20.9011, -44.8208, -45.8854, -65.1782, -26.6979], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5567, device='cuda:0', dtype=torch.float64)
tensor([-21.2860, -46.0263, -47.0254, -65.3293, -26.6916], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5230, device='cuda:0', dtype=torch.float64)
tensor([-21.5826, -46.8987, -47.8549, -64.8450, -26.4501], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6836, device='cuda:0', dtype=torch.float64)
tensor([-22.0279, -48.1130, -49.0682, -65.2935, -26.3722], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7662, device='cuda:0', dtype=torch.float64)
tensor([-22.2028, -49.5455, -50.6382, -66.2163, -26.4013], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7719, device='cuda:0', dtype=torch.float64)
tensor([-22.2644, -51.6261, -52.7126, -67.0142, -26.5778], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7109, device='cuda:0', dtype=torch.float64)
tensor([-22.4587, -53.7933, -54.7170, -67.3279, -26.4228], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6280, device='cuda:0', dtype=torch.float64)
tensor([-23.4189, -55.8412, -57.4569, -69.1121, -26.5779], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7889, device='cuda:0', dtype=torch.float64)
tensor([-24.3937, -57.3456, -60.1862, -71.8410, -27.3151], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2600, device='cuda:0', dtype=torch.float64)
tensor([-25.3236, -59.6026, -62.9774, -74.0501, -27.8624], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4678, device='cuda:0', dtype=torch.float64)
tensor([-26.6050, -61.9688, -65.7335, -77.0200, -28.5147], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4261, device='cuda:0', dtype=torch.float64)
tensor([-28.6147, -64.1127, -68.9489, -80.2553, -29.2146], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7926, device='cuda:0', dtype=torch.float64)
tensor([-30.3902, -65.6520, -71.7973, -84.1104, -30.0919], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5639, device='cuda:0', dtype=torch.float64)
tensor([-31.4474, -66.3606, -73.6300, -86.9486, -30.6846], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6138, device='cuda:0', dtype=torch.float64)
tensor([-32.5508, -66.5020, -75.0755, -88.1092, -30.5763], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5278, device='cuda:0', dtype=torch.float64)
tensor([-33.7747, -66.8935, -76.3688, -89.7641, -30.5737], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2665, device='cuda:0', dtype=torch.float64)
tensor([-35.0126, -67.0626, -77.5632, -91.7649, -30.8718], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6509, device='cuda:0', dtype=torch.float64)
tensor([-36.3718, -67.7248, -78.6149, -93.1787, -31.0959], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7363, device='cuda:0', dtype=torch.float64)
tensor([-36.7703, -68.7987, -79.1832, -92.8020, -30.6835], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5478, device='cuda:0', dtype=torch.float64)
tensor([-38.1052, -70.3160, -80.1780, -92.6042, -30.3990], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5945, device='cuda:0', dtype=torch.float64)
tensor([-39.0586, -71.9950, -80.5785, -92.1730, -30.0145], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6617, device='cuda:0', dtype=torch.float64)
tensor([-40.0351, -73.8256, -80.8488, -92.0811, -29.6774], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3923, device='cuda:0', dtype=torch.float64)
tensor([-41.0718, -75.4748, -80.9103, -92.6211, -29.6667], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7175, device='cuda:0', dtype=torch.float64)
tensor([-42.6497, -77.0458, -82.0514, -94.3204, -29.9902], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4543, device='cuda:0', dtype=torch.float64)
tensor([-44.3979, -78.6695, -83.4883, -96.0358, -30.5172], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7509, device='cuda:0', dtype=torch.float64)
tensor([-46.4354, -80.8119, -85.4945, -98.4064, -31.4792], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4773, device='cuda:0', dtype=torch.float64)
tensor([ -48.3207,  -82.1934,  -86.9531, -100.5397,  -32.3015],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.3181, device='cuda:0', dtype=torch.float64)
tensor([ -49.9092,  -83.3587,  -88.2602, -103.2905,  -33.4196],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.4701, device='cuda:0', dtype=torch.float64)
tensor([ -50.5746,  -83.3701,  -89.0667, -104.4300,  -34.1149],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.6544, device='cuda:0', dtype=torch.float64)
tensor([ -50.7027,  -83.2290,  -89.0297, -104.2082,  -34.5100],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.7619, device='cuda:0', dtype=torch.float64)
tensor([ -50.1628,  -82.7501,  -88.5145, -102.5138,  -34.3856],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.4535, device='cuda:0', dtype=torch.float64)
tensor([ -50.8586,  -82.8236,  -88.6416, -101.7832,  -34.8591],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(2.0043, device='cuda:0', dtype=torch.float64)
tensor([ -51.3913,  -82.2391,  -88.8592, -101.2213,  -35.2366],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.5997, device='cuda:0', dtype=torch.float64)
tensor([ -52.4654,  -82.2329,  -90.0931, -100.4007,  -35.7814],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.8922, device='cuda:0', dtype=torch.float64)
tensor([-51.9382, -81.9339, -90.3104, -97.4967, -35.6841], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8314, device='cuda:0', dtype=torch.float64)
tensor([-51.2348, -82.8982, -90.4610, -94.3510, -35.7726], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6113, device='cuda:0', dtype=torch.float64)
tensor([-50.7658, -84.1806, -90.1843, -91.3910, -35.9896], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4622, device='cuda:0', dtype=torch.float64)
tensor([-49.9719, -84.2097, -89.7386, -88.1771, -35.9712], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6523, device='cuda:0', dtype=torch.float64)
tensor([-49.0036, -83.3319, -89.4873, -85.0714, -35.7780], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9933, device='cuda:0', dtype=torch.float64)
tensor([-48.2046, -82.4087, -89.5928, -82.5265, -36.3356], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5675, device='cuda:0', dtype=torch.float64)
tensor([-47.9455, -80.8809, -90.0220, -81.0977, -37.2117], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4123, device='cuda:0', dtype=torch.float64)
tensor([-47.8363, -78.7545, -90.3258, -80.4384, -38.5325], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7000, device='cuda:0', dtype=torch.float64)
tensor([-48.0901, -76.9970, -90.7974, -80.8075, -39.8611], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7265, device='cuda:0', dtype=torch.float64)
tensor([-47.4653, -76.5519, -91.2289, -80.2640, -40.8320], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8444, device='cuda:0', dtype=torch.float64)
tensor([-47.0808, -76.6846, -91.9710, -80.4326, -41.4671], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7186, device='cuda:0', dtype=torch.float64)
tensor([-46.8098, -76.2367, -92.7617, -81.8516, -41.6224], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6343, device='cuda:0', dtype=torch.float64)
tensor([-46.2148, -75.3600, -93.5193, -82.2228, -41.7052], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6481, device='cuda:0', dtype=torch.float64)
tensor([-45.4355, -74.2830, -93.2624, -81.1449, -41.5582], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7480, device='cuda:0', dtype=torch.float64)
tensor([-45.8763, -74.0594, -93.6005, -81.0844, -41.8819], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4760, device='cuda:0', dtype=torch.float64)
tensor([-45.6589, -73.2082, -93.5082, -80.6750, -41.9928], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5808, device='cuda:0', dtype=torch.float64)
tensor([-46.2657, -73.7213, -94.5595, -81.7221, -42.3370], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8151, device='cuda:0', dtype=torch.float64)
tensor([-46.3531, -73.9241, -94.9506, -82.3294, -42.3868], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5669, device='cuda:0', dtype=torch.float64)
tensor([-45.9654, -73.9846, -95.0908, -82.9106, -42.3683], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5197, device='cuda:0', dtype=torch.float64)
tensor([-45.5332, -74.6129, -95.3298, -83.6394, -42.0115], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6865, device='cuda:0', dtype=torch.float64)
tensor([-45.6199, -75.1812, -95.9889, -83.8265, -42.2367], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6327, device='cuda:0', dtype=torch.float64)
tensor([-45.8846, -76.8730, -96.3942, -83.6207, -42.8888], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7033, device='cuda:0', dtype=torch.float64)
tensor([-46.8533, -78.5599, -97.3589, -84.6410, -44.0798], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5874, device='cuda:0', dtype=torch.float64)
tensor([-47.4969, -80.4922, -98.1429, -85.8378, -45.9132], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6195, device='cuda:0', dtype=torch.float64)
tensor([-47.5424, -82.1928, -98.0678, -87.1325, -47.9411], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5155, device='cuda:0', dtype=torch.float64)
tensor([-47.6512, -83.7466, -97.9283, -88.8294, -50.2503], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5598, device='cuda:0', dtype=torch.float64)
tensor([-47.0311, -84.9114, -97.5851, -90.9557, -52.0987], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6287, device='cuda:0', dtype=torch.float64)
tensor([-46.7663, -85.0647, -97.1202, -93.6174, -54.0244], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7215, device='cuda:0', dtype=torch.float64)
tensor([-46.4223, -85.1337, -96.2020, -95.4900, -55.6139], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6096, device='cuda:0', dtype=torch.float64)
tensor([-46.0076, -84.8230, -95.2015, -97.5615, -56.3917], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5712, device='cuda:0', dtype=torch.float64)
tensor([-45.4051, -83.2985, -93.8624, -99.9410, -56.9435], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5991, device='cuda:0', dtype=torch.float64)
tensor([ -45.3660,  -82.5609,  -92.5906, -102.0254,  -57.3896],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.7884, device='cuda:0', dtype=torch.float64)
tensor([ -45.3035,  -81.4396,  -91.6443, -104.2499,  -58.0282],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.7365, device='cuda:0', dtype=torch.float64)
tensor([ -45.2894,  -79.8412,  -90.4516, -105.3624,  -58.3325],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.7129, device='cuda:0', dtype=torch.float64)
tensor([ -45.1653,  -78.6867,  -89.6649, -106.3063,  -58.7646],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.4164, device='cuda:0', dtype=torch.float64)
tensor([ -45.2531,  -77.5969,  -89.3835, -107.3153,  -59.3354],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.3674, device='cuda:0', dtype=torch.float64)
tensor([ -45.1056,  -76.7117,  -88.7399, -108.9935,  -60.2266],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.9576, device='cuda:0', dtype=torch.float64)
tensor([ -44.5204,  -75.8352,  -87.8796, -110.6207,  -61.1836],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.2917, device='cuda:0', dtype=torch.float64)
tensor([ -43.8547,  -75.4490,  -86.8271, -110.7176,  -61.6648],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.5254, device='cuda:0', dtype=torch.float64)
tensor([ -43.2799,  -75.5743,  -86.1589, -110.7174,  -62.0522],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.4736, device='cuda:0', dtype=torch.float64)
tensor([ -42.7070,  -75.9996,  -85.6307, -111.2409,  -62.4382],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.9122, device='cuda:0', dtype=torch.float64)
tensor([ -41.5033,  -75.1079,  -84.3489, -110.9238,  -62.1711],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.7082, device='cuda:0', dtype=torch.float64)
tensor([ -40.3736,  -73.7713,  -83.3387, -111.0389,  -62.3150],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.3592, device='cuda:0', dtype=torch.float64)
tensor([ -39.3029,  -72.6927,  -82.6502, -111.8736,  -62.3055],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.5931, device='cuda:0', dtype=torch.float64)
tensor([ -38.1433,  -71.1341,  -81.9471, -113.3423,  -62.2381],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.7154, device='cuda:0', dtype=torch.float64)
tensor([ -37.4088,  -70.5787,  -81.2650, -114.7450,  -61.9372],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.6195, device='cuda:0', dtype=torch.float64)
tensor([ -36.8465,  -70.5714,  -80.9887, -115.9382,  -61.8891],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.8994, device='cuda:0', dtype=torch.float64)
tensor([ -36.3468,  -69.9446,  -79.8457, -116.7929,  -61.9514],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.6811, device='cuda:0', dtype=torch.float64)
tensor([ -35.9733,  -69.4711,  -78.5164, -117.0907,  -62.0491],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.6049, device='cuda:0', dtype=torch.float64)
tensor([ -35.8377,  -68.8925,  -78.1854, -118.3595,  -62.4941],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.5280, device='cuda:0', dtype=torch.float64)
tensor([ -35.9078,  -68.1348,  -77.3367, -119.5683,  -63.1119],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.4823, device='cuda:0', dtype=torch.float64)
tensor([ -36.2594,  -68.1076,  -77.2022, -120.8683,  -63.5319],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.6429, device='cuda:0', dtype=torch.float64)
tensor([ -36.3501,  -67.8028,  -77.0712, -120.7843,  -63.7473],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.7344, device='cuda:0', dtype=torch.float64)
tensor([ -36.0539,  -67.9708,  -76.7284, -120.4654,  -64.2509],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.3289, device='cuda:0', dtype=torch.float64)
tensor([ -35.9862,  -67.8917,  -76.1167, -120.2053,  -64.3542],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.8202, device='cuda:0', dtype=torch.float64)
tensor([ -35.9367,  -67.7766,  -74.8730, -119.4435,  -64.4409],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.9766, device='cuda:0', dtype=torch.float64)
tensor([ -35.9750,  -68.0799,  -73.9610, -118.3400,  -64.0138],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.6189, device='cuda:0', dtype=torch.float64)
tensor([ -35.7151,  -68.5420,  -72.4281, -116.7386,  -63.5482],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.4486, device='cuda:0', dtype=torch.float64)
tensor([ -35.3919,  -68.6522,  -71.4906, -115.6912,  -63.1050],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.6516, device='cuda:0', dtype=torch.float64)
tensor([ -35.4279,  -69.3357,  -70.8495, -114.8770,  -62.3980],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.5853, device='cuda:0', dtype=torch.float64)
tensor([ -35.7259,  -70.5350,  -70.5129, -114.4136,  -62.1434],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.7313, device='cuda:0', dtype=torch.float64)
tensor([ -36.0601,  -71.5228,  -70.6212, -113.1999,  -62.0557],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.7899, device='cuda:0', dtype=torch.float64)
tensor([ -35.6766,  -71.7572,  -69.9874, -110.5820,  -61.3669],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.7497, device='cuda:0', dtype=torch.float64)
tensor([ -35.4510,  -71.6312,  -68.9712, -108.8041,  -60.7705],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.8238, device='cuda:0', dtype=torch.float64)
tensor([ -35.2126,  -71.5920,  -68.0090, -107.8294,  -60.4168],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.4969, device='cuda:0', dtype=torch.float64)
tensor([ -34.9937,  -72.5651,  -67.1236, -106.3418,  -60.2575],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.5016, device='cuda:0', dtype=torch.float64)
tensor([ -34.4543,  -73.5138,  -66.2698, -104.0792,  -60.1954],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(2.1402, device='cuda:0', dtype=torch.float64)
tensor([-33.6730, -74.6131, -65.6476, -99.7917, -59.7996], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7385, device='cuda:0', dtype=torch.float64)
tensor([-32.9883, -74.7657, -65.5736, -95.5551, -59.1183], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6035, device='cuda:0', dtype=torch.float64)
tensor([-32.4378, -74.8478, -65.7601, -92.3604, -58.5219], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7172, device='cuda:0', dtype=torch.float64)
tensor([-31.7363, -75.0919, -66.0170, -89.9178, -58.4253], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5548, device='cuda:0', dtype=torch.float64)
tensor([-31.0143, -74.8376, -66.2125, -87.0152, -58.2621], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5876, device='cuda:0', dtype=torch.float64)
tensor([-30.3074, -73.8062, -66.0939, -84.5094, -57.8425], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6093, device='cuda:0', dtype=torch.float64)
tensor([-30.2867, -72.2729, -67.2484, -83.3777, -56.8602], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5641, device='cuda:0', dtype=torch.float64)
tensor([-30.5355, -70.6099, -68.1479, -83.8939, -56.2449], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3917, device='cuda:0', dtype=torch.float64)
tensor([-31.3843, -69.6152, -69.5671, -84.9600, -55.6750], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5598, device='cuda:0', dtype=torch.float64)
tensor([-32.3463, -68.5817, -70.8888, -85.9779, -55.1646], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8134, device='cuda:0', dtype=torch.float64)
tensor([-33.3358, -67.5378, -72.0400, -87.5941, -54.5950], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6927, device='cuda:0', dtype=torch.float64)
tensor([-34.1876, -66.2034, -73.1760, -90.1601, -53.7929], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6722, device='cuda:0', dtype=torch.float64)
tensor([-34.9769, -64.8414, -73.9299, -91.8667, -53.3817], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8186, device='cuda:0', dtype=torch.float64)
tensor([-36.2621, -63.9848, -75.1422, -95.1638, -53.4028], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8166, device='cuda:0', dtype=torch.float64)
tensor([-36.1803, -62.6496, -74.9265, -97.9169, -53.8977], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4935, device='cuda:0', dtype=torch.float64)
tensor([ -35.7778,  -61.1663,  -73.8977, -100.3520,  -53.9985],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.5003, device='cuda:0', dtype=torch.float64)
tensor([ -35.8576,  -60.2840,  -73.5827, -103.5418,  -54.4517],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.7744, device='cuda:0', dtype=torch.float64)
tensor([ -35.2358,  -59.5292,  -72.5001, -105.8933,  -54.3038],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.7232, device='cuda:0', dtype=torch.float64)
tensor([ -34.5385,  -58.9367,  -71.6130, -109.2026,  -54.3411],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.3816, device='cuda:0', dtype=torch.float64)
tensor([ -33.8476,  -58.3535,  -70.6737, -112.2660,  -54.4992],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.5023, device='cuda:0', dtype=torch.float64)
tensor([ -33.8546,  -58.2463,  -70.7212, -116.1657,  -54.8358],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.5865, device='cuda:0', dtype=torch.float64)
tensor([ -34.3065,  -58.3332,  -71.6846, -119.4665,  -54.6417],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.6711, device='cuda:0', dtype=torch.float64)
tensor([ -34.6797,  -58.5494,  -72.8507, -122.4808,  -54.6721],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.5569, device='cuda:0', dtype=torch.float64)
tensor([ -34.9417,  -58.9557,  -74.3134, -125.6448,  -54.6948],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.5433, device='cuda:0', dtype=torch.float64)
tensor([ -34.9857,  -59.1969,  -75.4754, -128.0871,  -54.2823],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.7789, device='cuda:0', dtype=torch.float64)
tensor([ -35.1661,  -59.4180,  -76.5001, -130.3223,  -54.2567],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.4560, device='cuda:0', dtype=torch.float64)
tensor([ -35.3589,  -59.4868,  -76.8057, -132.2085,  -54.5205],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.4066, device='cuda:0', dtype=torch.float64)
tensor([ -35.1364,  -59.2363,  -77.0065, -133.0109,  -54.5359],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.2722, device='cuda:0', dtype=torch.float64)
tensor([ -35.3162,  -59.1222,  -76.8842, -134.0961,  -54.9795],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.6454, device='cuda:0', dtype=torch.float64)
tensor([ -35.4053,  -59.5707,  -77.4618, -135.3881,  -55.8629],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.4048, device='cuda:0', dtype=torch.float64)
tensor([ -35.8882,  -59.8599,  -77.7336, -136.6718,  -56.5498],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.8163, device='cuda:0', dtype=torch.float64)
tensor([ -36.3903,  -59.7377,  -77.5316, -136.8118,  -57.1919],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.6066, device='cuda:0', dtype=torch.float64)
tensor([ -36.8332,  -59.5759,  -77.4941, -136.8985,  -57.8653],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.4949, device='cuda:0', dtype=torch.float64)
tensor([ -37.4629,  -59.9137,  -77.6447, -137.9867,  -58.7308],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.6092, device='cuda:0', dtype=torch.float64)
tensor([ -37.2420,  -60.1589,  -77.4912, -138.3004,  -59.4706],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.7645, device='cuda:0', dtype=torch.float64)
tensor([ -37.3646,  -60.3605,  -77.3382, -138.1294,  -59.5049],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.5936, device='cuda:0', dtype=torch.float64)
tensor([ -38.6315,  -60.4702,  -77.5931, -138.5091,  -59.0473],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.6726, device='cuda:0', dtype=torch.float64)
tensor([ -39.7702,  -60.9282,  -77.4690, -138.4994,  -59.2198],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.6211, device='cuda:0', dtype=torch.float64)
tensor([ -40.8022,  -61.5248,  -77.4261, -138.4054,  -59.0998],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.2827, device='cuda:0', dtype=torch.float64)
tensor([ -42.1178,  -62.2756,  -77.8333, -138.4095,  -59.1009],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.7319, device='cuda:0', dtype=torch.float64)
tensor([ -43.2420,  -63.2969,  -78.0619, -138.5818,  -59.7150],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.9053, device='cuda:0', dtype=torch.float64)
tensor([ -44.5070,  -64.0785,  -78.7253, -138.6949,  -60.2826],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.6683, device='cuda:0', dtype=torch.float64)
tensor([ -45.4054,  -64.7013,  -79.3578, -138.9702,  -61.0003],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.1967, device='cuda:0', dtype=torch.float64)
tensor([ -46.1613,  -65.9617,  -79.9342, -139.5665,  -61.7606],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.4322, device='cuda:0', dtype=torch.float64)
tensor([ -46.9976,  -67.3146,  -80.7391, -139.7476,  -62.3255],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.5050, device='cuda:0', dtype=torch.float64)
tensor([ -47.6911,  -68.4503,  -80.8512, -139.8695,  -62.9372],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.4964, device='cuda:0', dtype=torch.float64)
tensor([ -48.4014,  -69.9250,  -81.0739, -140.2748,  -63.6733],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.5080, device='cuda:0', dtype=torch.float64)
tensor([ -49.1282,  -71.3944,  -81.5082, -141.0927,  -64.3426],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.2748, device='cuda:0', dtype=torch.float64)
tensor([ -49.8245,  -72.6967,  -81.6255, -141.6696,  -64.8686],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.2036, device='cuda:0', dtype=torch.float64)
tensor([ -50.4158,  -73.4127,  -81.5699, -142.2008,  -65.2955],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.5054, device='cuda:0', dtype=torch.float64)
tensor([ -50.7213,  -74.0773,  -81.9123, -143.6805,  -65.6737],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.7458, device='cuda:0', dtype=torch.float64)
tensor([ -51.3128,  -75.7769,  -82.8344, -146.4369,  -66.5077],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.6994, device='cuda:0', dtype=torch.float64)
tensor([ -51.4573,  -77.2753,  -83.7206, -149.0626,  -67.6199],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.6144, device='cuda:0', dtype=torch.float64)
tensor([ -51.4101,  -77.9070,  -83.8989, -151.0135,  -68.5366],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.5588, device='cuda:0', dtype=torch.float64)
tensor([ -52.0405,  -78.4068,  -83.8487, -152.6753,  -69.4614],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.5720, device='cuda:0', dtype=torch.float64)
tensor([ -52.3886,  -78.8297,  -83.4731, -153.8365,  -70.0406],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.7304, device='cuda:0', dtype=torch.float64)
tensor([ -51.6514,  -78.5723,  -82.8390, -153.7489,  -70.2985],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.3915, device='cuda:0', dtype=torch.float64)
tensor([ -51.2722,  -77.8716,  -81.6336, -153.1164,  -70.9681],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.3100, device='cuda:0', dtype=torch.float64)
tensor([ -50.7273,  -78.0622,  -81.4952, -153.9549,  -72.0293],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.4378, device='cuda:0', dtype=torch.float64)
tensor([ -50.1487,  -78.1233,  -82.0435, -154.3976,  -72.6136],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.5771, device='cuda:0', dtype=torch.float64)
tensor([ -50.5342,  -78.1990,  -83.1084, -155.9031,  -73.4522],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.4616, device='cuda:0', dtype=torch.float64)
tensor([ -50.5333,  -78.1298,  -84.0225, -156.6460,  -73.6458],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.3502, device='cuda:0', dtype=torch.float64)
tensor([ -50.9642,  -77.6072,  -84.5540, -157.5881,  -73.9335],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.5507, device='cuda:0', dtype=torch.float64)
tensor([ -51.1721,  -76.2803,  -85.3066, -157.9161,  -73.6615],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.7981, device='cuda:0', dtype=torch.float64)
tensor([ -50.5902,  -75.2244,  -86.1819, -157.6495,  -73.6416],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.6511, device='cuda:0', dtype=torch.float64)
tensor([ -50.7013,  -74.4407,  -87.6677, -157.7703,  -73.7103],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.6901, device='cuda:0', dtype=torch.float64)
tensor([ -50.2181,  -73.9005,  -88.5737, -157.1992,  -73.2757],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.4997, device='cuda:0', dtype=torch.float64)
tensor([ -49.8237,  -73.4314,  -90.1762, -156.6365,  -73.0442],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.3134, device='cuda:0', dtype=torch.float64)
tensor([ -49.3928,  -73.0465,  -91.5005, -155.9739,  -72.7388],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.4535, device='cuda:0', dtype=torch.float64)
tensor([ -48.9107,  -72.4716,  -91.8578, -155.1359,  -72.3068],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.5754, device='cuda:0', dtype=torch.float64)
tensor([ -47.6764,  -72.2559,  -91.4269, -153.7310,  -71.6501],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.2228, device='cuda:0', dtype=torch.float64)
tensor([ -47.3875,  -72.7436,  -91.3624, -153.4030,  -71.1455],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.4047, device='cuda:0', dtype=torch.float64)
tensor([ -47.9747,  -73.1704,  -92.1477, -153.8277,  -70.8531],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.5127, device='cuda:0', dtype=torch.float64)
tensor([ -49.0212,  -73.4962,  -93.1666, -155.0768,  -70.7491],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.5815, device='cuda:0', dtype=torch.float64)
tensor([ -50.5497,  -73.6007,  -93.9655, -156.4095,  -70.8574],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.3101, device='cuda:0', dtype=torch.float64)
tensor([ -52.3027,  -73.5564,  -94.9421, -157.7411,  -71.1991],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.4195, device='cuda:0', dtype=torch.float64)
tensor([ -54.7433,  -73.8786,  -97.2799, -159.9567,  -71.9504],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.5670, device='cuda:0', dtype=torch.float64)
tensor([ -56.1744,  -74.2447,  -99.1565, -161.2349,  -72.7289],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.5482, device='cuda:0', dtype=torch.float64)
tensor([ -57.5757,  -74.7878, -101.2382, -162.1820,  -73.6787],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.3435, device='cuda:0', dtype=torch.float64)
tensor([ -58.7545,  -75.5227, -102.7876, -163.2895,  -74.2871],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.4877, device='cuda:0', dtype=torch.float64)
tensor([ -59.9910,  -76.8648, -104.4063, -165.1875,  -75.1176],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.3137, device='cuda:0', dtype=torch.float64)
tensor([ -60.2373,  -78.1864, -105.4872, -166.0206,  -75.2946],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(2.0210, device='cuda:0', dtype=torch.float64)
tensor([ -60.0501,  -79.2545, -105.5705, -166.3422,  -75.5051],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.2383, device='cuda:0', dtype=torch.float64)
tensor([ -59.4686,  -79.6606, -104.9080, -165.4157,  -75.2564],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.3507, device='cuda:0', dtype=torch.float64)
tensor([ -58.8366,  -80.7582, -104.2495, -164.9225,  -75.4547],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.3131, device='cuda:0', dtype=torch.float64)
tensor([ -58.9079,  -82.0967, -103.8894, -165.0544,  -75.6498],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.4496, device='cuda:0', dtype=torch.float64)
tensor([ -59.3075,  -82.8171, -104.4880, -165.5683,  -75.7997],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.3388, device='cuda:0', dtype=torch.float64)
tensor([ -59.3068,  -83.3225, -104.5079, -165.3275,  -75.8888],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.4587, device='cuda:0', dtype=torch.float64)
tensor([ -59.2479,  -83.2383, -104.0771, -164.5986,  -75.9569],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.8153, device='cuda:0', dtype=torch.float64)
tensor([ -58.6164,  -82.0014, -102.7592, -163.0193,  -75.6952],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.6597, device='cuda:0', dtype=torch.float64)
tensor([ -58.4815,  -79.6448, -101.3155, -160.7123,  -74.9388],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.5988, device='cuda:0', dtype=torch.float64)
tensor([ -58.6331,  -76.9749,  -99.5698, -157.7940,  -73.9644],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.3459, device='cuda:0', dtype=torch.float64)
tensor([ -58.1187,  -74.4909,  -97.4157, -154.4662,  -72.6583],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.4405, device='cuda:0', dtype=torch.float64)
tensor([ -58.6914,  -72.3685,  -96.3302, -152.3100,  -71.5549],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.8669, device='cuda:0', dtype=torch.float64)
tensor([ -59.6338,  -71.0810,  -95.3899, -150.5710,  -70.7024],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.4478, device='cuda:0', dtype=torch.float64)
tensor([ -60.3751,  -70.5473,  -94.8236, -149.8538,  -70.2986],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.4265, device='cuda:0', dtype=torch.float64)
tensor([ -61.2556,  -70.1271,  -94.5297, -149.8952,  -70.2824],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.7126, device='cuda:0', dtype=torch.float64)
tensor([ -61.2296,  -69.9037,  -93.4612, -148.6877,  -69.8932],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.4660, device='cuda:0', dtype=torch.float64)
tensor([ -61.2855,  -69.3866,  -92.0209, -146.7854,  -69.3400],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.7201, device='cuda:0', dtype=torch.float64)
tensor([ -60.5567,  -69.3609,  -91.2466, -144.5983,  -69.0447],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.2941, device='cuda:0', dtype=torch.float64)
tensor([ -59.3853,  -69.6940,  -90.5257, -142.2750,  -68.6325],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.5990, device='cuda:0', dtype=torch.float64)
tensor([ -58.5875,  -70.5890,  -90.3316, -140.4861,  -68.0824],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.3573, device='cuda:0', dtype=torch.float64)
tensor([ -57.9728,  -71.3919,  -90.4900, -138.5009,  -67.4231],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.5821, device='cuda:0', dtype=torch.float64)
tensor([ -57.1418,  -72.6004,  -90.5717, -136.8710,  -67.0327],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.3961, device='cuda:0', dtype=torch.float64)
tensor([ -56.8668,  -73.4214,  -90.8028, -135.2016,  -66.1666],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.5424, device='cuda:0', dtype=torch.float64)
tensor([ -57.1935,  -73.9164,  -91.2280, -135.0155,  -65.4812],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.4849, device='cuda:0', dtype=torch.float64)
tensor([ -57.0041,  -74.5239,  -91.3265, -133.9798,  -64.7994],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.4017, device='cuda:0', dtype=torch.float64)
tensor([ -57.2649,  -75.0420,  -91.8344, -132.8551,  -64.2580],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.5957, device='cuda:0', dtype=torch.float64)
tensor([ -57.4591,  -74.9828,  -92.8530, -132.1436,  -63.4092],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.5329, device='cuda:0', dtype=torch.float64)
tensor([ -57.6848,  -75.0480,  -93.7350, -132.3486,  -62.6257],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.7258, device='cuda:0', dtype=torch.float64)
tensor([ -58.8262,  -74.4321,  -95.4299, -133.2087,  -61.7727],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.6000, device='cuda:0', dtype=torch.float64)
tensor([ -60.0504,  -74.0794,  -96.8134, -134.2113,  -61.1583],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.3861, device='cuda:0', dtype=torch.float64)
tensor([ -60.8157,  -74.1602,  -98.0211, -134.9823,  -60.8271],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.6052, device='cuda:0', dtype=torch.float64)
tensor([ -61.4946,  -75.1996,  -99.1112, -135.2709,  -60.6637],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.7358, device='cuda:0', dtype=torch.float64)
tensor([ -62.4901,  -75.8596, -100.1418, -135.5132,  -60.7678],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.5072, device='cuda:0', dtype=torch.float64)
tensor([ -63.7844,  -76.7673, -101.2488, -136.4325,  -60.9533],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.5911, device='cuda:0', dtype=torch.float64)
tensor([ -64.3279,  -77.1795, -101.3005, -136.8873,  -61.1623],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.5278, device='cuda:0', dtype=torch.float64)
tensor([ -66.2032,  -77.2566, -102.1971, -138.0983,  -61.5935],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.8020, device='cuda:0', dtype=torch.float64)
tensor([ -68.5949,  -78.1471, -103.6679, -139.5067,  -62.5582],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.6346, device='cuda:0', dtype=torch.float64)
tensor([ -70.5915,  -78.7818, -103.7785, -140.0357,  -63.8583],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.5578, device='cuda:0', dtype=torch.float64)
tensor([ -72.5029,  -79.3530, -103.9267, -140.9945,  -65.6063],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.3223, device='cuda:0', dtype=torch.float64)
tensor([ -74.2010,  -79.5304, -103.8941, -140.8296,  -67.0417],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.5396, device='cuda:0', dtype=torch.float64)
tensor([ -76.2531,  -80.6763, -104.1465, -141.3016,  -68.7860],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.6357, device='cuda:0', dtype=torch.float64)
tensor([ -78.7547,  -81.7773, -104.6733, -141.6715,  -70.5838],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.4101, device='cuda:0', dtype=torch.float64)
tensor([ -80.6112,  -83.2851, -105.1183, -141.3016,  -72.2161],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.4759, device='cuda:0', dtype=torch.float64)
tensor([ -82.0390,  -84.4274, -105.8630, -140.4339,  -73.4469],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.4154, device='cuda:0', dtype=torch.float64)
tensor([ -82.5394,  -85.7350, -105.8397, -138.6932,  -74.6565],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.7082, device='cuda:0', dtype=torch.float64)
tensor([ -82.7394,  -87.2491, -105.1722, -136.2934,  -75.5172],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.3418, device='cuda:0', dtype=torch.float64)
tensor([ -82.6049,  -89.2386, -105.3710, -134.1857,  -76.2187],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.5374, device='cuda:0', dtype=torch.float64)
tensor([ -82.2127,  -92.4142, -105.7983, -132.4980,  -77.1129],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.4961, device='cuda:0', dtype=torch.float64)
tensor([ -82.1591,  -95.5584, -106.1377, -131.7618,  -77.8792],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.4144, device='cuda:0', dtype=torch.float64)
tensor([ -81.7427,  -97.8771, -105.7986, -130.6800,  -78.2153],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.4423, device='cuda:0', dtype=torch.float64)
tensor([ -81.6976,  -99.8341, -105.1192, -130.1231,  -78.4207],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.4861, device='cuda:0', dtype=torch.float64)
tensor([ -81.9533, -101.6152, -104.7200, -130.2577,  -78.9143],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.4676, device='cuda:0', dtype=torch.float64)
tensor([ -81.8396, -103.0640, -104.3871, -130.4500,  -79.5032],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.5315, device='cuda:0', dtype=torch.float64)
tensor([ -81.7025, -104.7302, -104.3071, -130.7092,  -79.7607],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.4750, device='cuda:0', dtype=torch.float64)
tensor([ -81.1186, -106.0227, -103.8549, -130.6688,  -79.6665],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.4556, device='cuda:0', dtype=torch.float64)
tensor([ -80.1628, -107.1706, -103.0800, -130.4018,  -80.2388],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.6899, device='cuda:0', dtype=torch.float64)
tensor([ -79.6550, -108.4681, -102.2204, -131.3538,  -80.4641],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.4602, device='cuda:0', dtype=torch.float64)
tensor([ -79.0834, -110.3415, -101.6254, -132.2354,  -80.9711],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.4344, device='cuda:0', dtype=torch.float64)
tensor([ -78.7776, -111.5371, -101.4527, -133.2553,  -80.9705],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.4010, device='cuda:0', dtype=torch.float64)
tensor([ -78.6338, -112.3145, -102.2189, -134.4938,  -80.6275],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.4897, device='cuda:0', dtype=torch.float64)
tensor([ -79.1024, -111.9811, -102.9777, -135.6061,  -79.5184],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.3933, device='cuda:0', dtype=torch.float64)
tensor([ -79.1672, -111.2951, -103.9355, -136.1798,  -78.5983],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.1465, device='cuda:0', dtype=torch.float64)
tensor([ -79.2303, -110.2169, -104.7438, -136.7964,  -77.5968],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.5903, device='cuda:0', dtype=torch.float64)
tensor([ -79.3928, -109.8878, -105.4068, -137.3325,  -77.1063],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.1895, device='cuda:0', dtype=torch.float64)
tensor([ -79.0448, -109.2573, -105.8186, -137.4446,  -76.0597],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.7235, device='cuda:0', dtype=torch.float64)
tensor([ -78.8045, -109.1196, -106.7244, -137.7125,  -75.2043],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.7237, device='cuda:0', dtype=torch.float64)
tensor([ -79.3749, -107.9443, -107.0325, -138.4250,  -74.4690],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.3906, device='cuda:0', dtype=torch.float64)
tensor([ -80.0619, -107.2061, -108.2236, -139.6382,  -73.3573],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.5310, device='cuda:0', dtype=torch.float64)
tensor([ -81.1885, -106.4206, -109.6085, -141.1550,  -72.0403],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.6088, device='cuda:0', dtype=torch.float64)
tensor([ -82.5556, -104.3732, -110.7647, -143.0545,  -70.9486],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.6006, device='cuda:0', dtype=torch.float64)
tensor([ -83.7739, -102.6383, -111.8557, -144.3171,  -69.7539],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.4227, device='cuda:0', dtype=torch.float64)
tensor([ -84.6621, -102.1781, -112.4618, -145.9788,  -69.0477],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.2895, device='cuda:0', dtype=torch.float64)
tensor([ -85.3628, -102.1863, -112.1560, -147.0823,  -68.6356],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.5717, device='cuda:0', dtype=torch.float64)
tensor([ -86.2337, -101.5251, -111.4248, -147.8072,  -68.1867],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.3284, device='cuda:0', dtype=torch.float64)
tensor([ -86.9651, -100.8833, -110.1322, -148.0037,  -67.9562],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.6691, device='cuda:0', dtype=torch.float64)
tensor([ -88.4780,  -99.4615, -109.6195, -148.8344,  -67.8975],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.3601, device='cuda:0', dtype=torch.float64)
tensor([ -89.6105,  -98.4076, -109.3129, -149.6668,  -67.8484],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.4427, device='cuda:0', dtype=torch.float64)
tensor([ -90.3755,  -98.0674, -109.2924, -149.9294,  -67.8157],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.2337, device='cuda:0', dtype=torch.float64)
tensor([ -91.4993,  -97.3323, -109.0602, -149.9309,  -67.5536],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.5255, device='cuda:0', dtype=torch.float64)
tensor([ -93.1670,  -95.9539, -109.3300, -150.0256,  -66.9679],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.5127, device='cuda:0', dtype=torch.float64)
tensor([ -95.1548,  -94.8865, -109.9290, -150.6738,  -66.6700],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.5088, device='cuda:0', dtype=torch.float64)
tensor([ -97.5373,  -93.6169, -110.7242, -151.6582,  -66.8697],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.3040, device='cuda:0', dtype=torch.float64)
tensor([ -99.5069,  -91.6178, -111.5756, -152.1412,  -66.8123],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.3633, device='cuda:0', dtype=torch.float64)
tensor([-101.1797,  -89.4887, -111.9177, -152.0892,  -66.4059],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.4855, device='cuda:0', dtype=torch.float64)
tensor([-102.6799,  -87.8803, -112.7027, -151.9994,  -66.3631],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.4860, device='cuda:0', dtype=torch.float64)
tensor([-104.0570,  -86.5313, -113.1331, -151.9321,  -66.0319],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.2703, device='cuda:0', dtype=torch.float64)
tensor([-106.2876,  -85.2750, -113.2401, -152.5525,  -66.0600],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.5184, device='cuda:0', dtype=torch.float64)
tensor([-108.4438,  -84.5379, -113.3531, -153.4651,  -66.3251],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.5637, device='cuda:0', dtype=torch.float64)
tensor([-109.8066,  -84.4907, -113.3701, -153.4429,  -66.7065],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.3734, device='cuda:0', dtype=torch.float64)
tensor([-111.3232,  -85.1852, -113.4791, -153.3246,  -67.5658],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.7682, device='cuda:0', dtype=torch.float64)
tensor([-111.5474,  -87.0307, -113.7112, -152.4128,  -68.2933],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.5506, device='cuda:0', dtype=torch.float64)
tensor([-111.5021,  -89.1273, -113.0514, -150.9307,  -68.8660],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.3011, device='cuda:0', dtype=torch.float64)
tensor([-110.8361,  -91.9889, -112.1340, -149.1580,  -69.0548],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.3764, device='cuda:0', dtype=torch.float64)
tensor([-110.8357,  -94.8815, -111.7568, -147.9266,  -69.4935],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.4731, device='cuda:0', dtype=torch.float64)
tensor([-111.1128,  -98.0268, -111.7707, -146.5728,  -69.8827],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.3346, device='cuda:0', dtype=torch.float64)
tensor([-110.8876, -101.4578, -112.2696, -145.1069,  -69.8523],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.7048, device='cuda:0', dtype=torch.float64)
tensor([-110.5696, -105.2698, -112.4850, -143.5939,  -70.3184],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.5640, device='cuda:0', dtype=torch.float64)
tensor([-111.3769, -108.2159, -113.1006, -143.3562,  -70.8655],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.5248, device='cuda:0', dtype=torch.float64)
tensor([-112.8010, -111.0798, -114.1332, -143.6374,  -71.5733],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.5740, device='cuda:0', dtype=torch.float64)
tensor([-114.1963, -112.8666, -115.0356, -144.4691,  -72.4111],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.2419, device='cuda:0', dtype=torch.float64)
tensor([-115.7949, -114.5159, -116.4656, -145.5356,  -73.1897],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.5164, device='cuda:0', dtype=torch.float64)
tensor([-118.3369, -115.0906, -118.6728, -147.3121,  -74.0702],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.3331, device='cuda:0', dtype=torch.float64)
tensor([-120.8196, -115.0135, -120.5937, -148.2764,  -74.6460],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.2762, device='cuda:0', dtype=torch.float64)
tensor([-123.6025, -114.2493, -122.4638, -149.4579,  -75.0983],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.6070, device='cuda:0', dtype=torch.float64)
tensor([-126.1274, -114.0181, -124.4597, -150.5367,  -75.5315],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.3696, device='cuda:0', dtype=torch.float64)
tensor([-128.5695, -113.3559, -126.3605, -151.6890,  -75.8106],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.7314, device='cuda:0', dtype=torch.float64)
tensor([-131.5293, -111.9060, -128.6406, -153.3585,  -75.9342],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.5535, device='cuda:0', dtype=torch.float64)
tensor([-133.9824, -110.4363, -130.8270, -154.7970,  -75.9314],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.6485, device='cuda:0', dtype=torch.float64)
tensor([-135.6264, -108.9109, -132.0150, -155.5684,  -75.9514],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.5220, device='cuda:0', dtype=torch.float64)
tensor([-136.4496, -108.9342, -132.9554, -156.2524,  -75.9525],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.3490, device='cuda:0', dtype=torch.float64)
tensor([-137.0077, -108.6738, -133.9262, -156.7048,  -75.5865],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.7756, device='cuda:0', dtype=torch.float64)
tensor([-136.7285, -108.7512, -134.1803, -156.3948,  -75.2325],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.5368, device='cuda:0', dtype=torch.float64)
tensor([-136.7284, -108.2848, -133.8108, -155.9614,  -74.7632],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.4455, device='cuda:0', dtype=torch.float64)
tensor([-136.6787, -108.2921, -132.8696, -155.0109,  -73.7754],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.4139, device='cuda:0', dtype=torch.float64)
tensor([-136.7627, -108.3754, -132.0551, -153.9372,  -72.7505],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.4558, device='cuda:0', dtype=torch.float64)
tensor([-136.6579, -108.9763, -131.6840, -153.0941,  -72.0562],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.4622, device='cuda:0', dtype=torch.float64)
tensor([-136.0459, -108.9015, -131.0832, -151.6401,  -71.2306],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.3842, device='cuda:0', dtype=torch.float64)
tensor([-135.0265, -108.9060, -130.2027, -149.8710,  -70.2941],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.3427, device='cuda:0', dtype=torch.float64)
tensor([-134.2099, -108.8765, -129.1402, -148.3535,  -69.3125],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.1418, device='cuda:0', dtype=torch.float64)
tensor([-133.6668, -109.0373, -127.9145, -146.7677,  -68.3283],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.5905, device='cuda:0', dtype=torch.float64)
tensor([-132.8391, -110.0814, -126.8479, -144.7496,  -67.4544],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.5995, device='cuda:0', dtype=torch.float64)
tensor([-132.5075, -110.7107, -126.2402, -143.6771,  -67.3103],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.2996, device='cuda:0', dtype=torch.float64)
tensor([-131.5204, -110.9359, -125.1055, -142.6090,  -67.3104],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.2443, device='cuda:0', dtype=torch.float64)
tensor([-130.7246, -111.8658, -124.3986, -141.9677,  -67.4887],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.5368, device='cuda:0', dtype=torch.float64)
tensor([-129.9716, -112.1649, -124.2084, -141.4379,  -67.6426],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.3755, device='cuda:0', dtype=torch.float64)
tensor([-129.0879, -113.1549, -123.7489, -140.6321,  -67.7490],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.4309, device='cuda:0', dtype=torch.float64)
tensor([-128.4075, -113.5732, -122.8832, -139.8839,  -68.0397],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.4035, device='cuda:0', dtype=torch.float64)
tensor([-127.8285, -114.2630, -122.5568, -139.0959,  -68.3474],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.6170, device='cuda:0', dtype=torch.float64)
tensor([-127.6821, -113.8689, -122.8624, -139.0709,  -68.6423],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.6154, device='cuda:0', dtype=torch.float64)
tensor([-127.5093, -113.2883, -122.6841, -138.8654,  -68.5993],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.6735, device='cuda:0', dtype=torch.float64)
tensor([-125.9758, -113.1213, -121.7322, -137.1155,  -68.5446],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.4441, device='cuda:0', dtype=torch.float64)
tensor([-124.8476, -112.5770, -120.7155, -135.8346,  -68.6054],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.3318, device='cuda:0', dtype=torch.float64)
tensor([-124.1327, -111.9413, -120.1328, -134.9230,  -68.9360],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.1397, device='cuda:0', dtype=torch.float64)
tensor([-123.4465, -111.1930, -119.7948, -134.4104,  -69.3920],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.2841, device='cuda:0', dtype=torch.float64)
tensor([-123.3024, -111.0801, -120.1311, -134.1407,  -69.7620],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.5158, device='cuda:0', dtype=torch.float64)
tensor([-123.0259, -110.3170, -120.3688, -133.3174,  -70.1001],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.1934, device='cuda:0', dtype=torch.float64)
tensor([-122.4419, -109.5095, -120.9676, -132.5240,  -70.3331],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.2508, device='cuda:0', dtype=torch.float64)
tensor([-121.8799, -108.7071, -121.9814, -131.8795,  -70.6480],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.2445, device='cuda:0', dtype=torch.float64)
tensor([-121.5380, -107.6596, -123.3068, -131.7679,  -71.2270],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.4150, device='cuda:0', dtype=torch.float64)
tensor([-121.0864, -107.0590, -124.7652, -131.4066,  -71.5226],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.4372, device='cuda:0', dtype=torch.float64)
tensor([-121.1888, -107.3803, -127.3913, -132.1044,  -72.2157],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.2241, device='cuda:0', dtype=torch.float64)
tensor([-121.5597, -107.3671, -129.9093, -132.9285,  -73.0208],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.4014, device='cuda:0', dtype=torch.float64)
tensor([-122.2736, -106.4910, -131.9408, -133.7533,  -73.4372],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.3337, device='cuda:0', dtype=torch.float64)
tensor([-122.8628, -106.4539, -133.6170, -134.4248,  -73.5129],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.3096, device='cuda:0', dtype=torch.float64)
tensor([-123.5539, -106.6098, -135.0488, -134.8717,  -73.4156],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.1974, device='cuda:0', dtype=torch.float64)
tensor([-123.6979, -106.9618, -136.0330, -135.2262,  -73.3210],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.1749, device='cuda:0', dtype=torch.float64)
tensor([-123.7000, -107.9341, -137.3211, -135.4984,  -73.0981],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.3249, device='cuda:0', dtype=torch.float64)
tensor([-123.7106, -108.3322, -138.3911, -135.3529,  -72.8753],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.3626, device='cuda:0', dtype=torch.float64)
tensor([-124.0979, -108.8951, -138.9643, -135.4039,  -72.6637],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.4630, device='cuda:0', dtype=torch.float64)
tensor([-124.5641, -109.9285, -139.9131, -135.8611,  -72.7763],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.3101, device='cuda:0', dtype=torch.float64)
tensor([-124.7817, -110.7213, -139.8883, -135.9087,  -72.9845],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.4167, device='cuda:0', dtype=torch.float64)
tensor([-125.2462, -111.6759, -140.1501, -136.0800,  -73.2820],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.4011, device='cuda:0', dtype=torch.float64)
tensor([-125.5484, -112.2337, -139.6407, -135.7811,  -73.4452],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.4499, device='cuda:0', dtype=torch.float64)
tensor([-125.8163, -111.5270, -138.4176, -135.2525,  -73.1105],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.4198, device='cuda:0', dtype=torch.float64)
tensor([-125.2643, -111.3065, -137.1439, -134.2146,  -72.9194],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.5007, device='cuda:0', dtype=torch.float64)
tensor([-124.5966, -112.1913, -136.6123, -132.7841,  -72.6154],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.5118, device='cuda:0', dtype=torch.float64)
tensor([-123.9118, -113.1869, -136.6492, -131.7256,  -72.1537],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.2517, device='cuda:0', dtype=torch.float64)
tensor([-122.7162, -114.2818, -136.4148, -130.4415,  -71.4205],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.1265, device='cuda:0', dtype=torch.float64)
tensor([-121.5697, -115.4076, -136.6487, -129.5688,  -70.9620],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.3889, device='cuda:0', dtype=torch.float64)
tensor([-120.0807, -116.2058, -136.3985, -128.7226,  -70.1498],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.2740, device='cuda:0', dtype=torch.float64)
tensor([-119.3685, -116.3534, -136.0572, -128.2037,  -69.5124],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.2156, device='cuda:0', dtype=torch.float64)
tensor([-118.4616, -117.0457, -135.6666, -127.5504,  -69.1386],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.4896, device='cuda:0', dtype=torch.float64)
tensor([-117.2820, -118.1006, -135.1831, -126.5488,  -68.9217],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.3134, device='cuda:0', dtype=torch.float64)
tensor([-116.8850, -118.7803, -134.7561, -126.4979,  -68.9768],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.2597, device='cuda:0', dtype=torch.float64)
tensor([-116.7084, -119.4106, -134.6211, -127.1456,  -69.4412],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.3631, device='cuda:0', dtype=torch.float64)
tensor([-116.5502, -120.4235, -134.3723, -127.7188,  -69.9395],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.1938, device='cuda:0', dtype=torch.float64)
tensor([-116.4938, -120.8067, -134.0102, -128.4960,  -70.1823],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.4159, device='cuda:0', dtype=torch.float64)
tensor([-116.1167, -121.5065, -133.8674, -129.0226,  -70.6933],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.5612, device='cuda:0', dtype=torch.float64)
tensor([-115.5924, -121.7128, -133.1248, -129.2629,  -70.9861],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.5454, device='cuda:0', dtype=torch.float64)
tensor([-115.2235, -120.9921, -132.5317, -129.8188,  -71.0943],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.2238, device='cuda:0', dtype=torch.float64)
tensor([-114.6622, -120.5844, -132.1482, -130.2103,  -71.2287],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.4895, device='cuda:0', dtype=torch.float64)
tensor([-114.5221, -120.2371, -132.5492, -131.3761,  -71.6819],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.7156, device='cuda:0', dtype=torch.float64)
tensor([-114.3399, -120.1016, -132.6049, -131.7831,  -71.8994],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.3773, device='cuda:0', dtype=torch.float64)
tensor([-114.2129, -119.4711, -133.3740, -132.5407,  -72.0151],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.4813, device='cuda:0', dtype=torch.float64)
tensor([-114.6195, -118.6194, -133.9507, -133.8421,  -72.4090],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.3210, device='cuda:0', dtype=torch.float64)
tensor([-114.3385, -118.1957, -133.6848, -133.9430,  -72.8363],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.5286, device='cuda:0', dtype=torch.float64)
tensor([-113.2529, -118.3073, -132.9895, -133.6477,  -73.2717],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.3345, device='cuda:0', dtype=torch.float64)
tensor([-113.0619, -118.0554, -133.1221, -134.1183,  -74.0395],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.3185, device='cuda:0', dtype=torch.float64)
tensor([-112.8094, -118.3471, -133.0796, -134.1818,  -74.7315],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.1899, device='cuda:0', dtype=torch.float64)
tensor([-112.5836, -118.4585, -133.1475, -134.5756,  -75.3640],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.4349, device='cuda:0', dtype=torch.float64)
tensor([-112.4970, -118.3290, -133.5486, -134.9807,  -76.0421],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.2881, device='cuda:0', dtype=torch.float64)
tensor([-112.5796, -118.5646, -133.9416, -135.6599,  -76.6817],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.1722, device='cuda:0', dtype=torch.float64)
tensor([-112.8231, -119.0911, -134.0946, -136.3471,  -77.5426],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.3953, device='cuda:0', dtype=torch.float64)
tensor([-112.8067, -119.9243, -134.2463, -137.1220,  -78.4612],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.4234, device='cuda:0', dtype=torch.float64)
tensor([-112.3806, -120.6162, -134.1205, -137.5864,  -79.5239],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.3864, device='cuda:0', dtype=torch.float64)
tensor([-112.3263, -121.5856, -134.4736, -138.6841,  -80.4523],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.2164, device='cuda:0', dtype=torch.float64)
tensor([-112.4799, -122.6023, -134.9828, -139.7006,  -81.2080],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.3711, device='cuda:0', dtype=torch.float64)
tensor([-112.9322, -123.1424, -135.8411, -141.2951,  -82.1212],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.4145, device='cuda:0', dtype=torch.float64)
tensor([-113.3359, -124.6419, -136.8408, -142.4584,  -83.7753],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.3827, device='cuda:0', dtype=torch.float64)
tensor([-114.0025, -126.4612, -137.8791, -143.7215,  -85.3900],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.3249, device='cuda:0', dtype=torch.float64)
tensor([-114.3236, -128.1737, -139.3213, -144.8081,  -86.8138],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.4653, device='cuda:0', dtype=torch.float64)
tensor([-114.7977, -130.1274, -140.3099, -145.9573,  -88.4783],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.3937, device='cuda:0', dtype=torch.float64)
tensor([-115.7439, -131.8224, -140.9218, -146.7832,  -89.8579],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.4469, device='cuda:0', dtype=torch.float64)
tensor([-116.1987, -132.7753, -140.6288, -147.2265,  -90.8166],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.1861, device='cuda:0', dtype=torch.float64)
tensor([-117.0284, -134.0054, -141.0457, -148.1232,  -91.8064],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.2655, device='cuda:0', dtype=torch.float64)
tensor([-117.5941, -134.6390, -141.5050, -148.7350,  -92.5228],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.3422, device='cuda:0', dtype=torch.float64)
tensor([-117.7996, -134.8205, -141.4371, -148.9363,  -92.9162],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.4012, device='cuda:0', dtype=torch.float64)
tensor([-117.5410, -134.9433, -141.2056, -148.4128,  -93.1192],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.2871, device='cuda:0', dtype=torch.float64)
tensor([-117.8535, -134.5824, -140.6999, -148.6377,  -93.1378],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.5278, device='cuda:0', dtype=torch.float64)
tensor([-118.9193, -133.7485, -140.2538, -148.9113,  -92.6891],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.2180, device='cuda:0', dtype=torch.float64)
tensor([-119.6666, -132.2322, -139.7314, -148.6451,  -91.8884],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.1741, device='cuda:0', dtype=torch.float64)
tensor([-120.7168, -130.6360, -139.3464, -148.8159,  -91.0003],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.2813, device='cuda:0', dtype=torch.float64)
tensor([-122.0466, -129.2098, -139.0950, -149.4321,  -89.9010],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.2001, device='cuda:0', dtype=torch.float64)
tensor([-123.6568, -128.2649, -139.2253, -150.5628,  -89.2280],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.4464, device='cuda:0', dtype=torch.float64)
tensor([-125.5021, -127.1859, -139.1479, -151.4310,  -88.6349],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.4210, device='cuda:0', dtype=torch.float64)
tensor([-126.5978, -125.7880, -139.9783, -151.9037,  -87.4212],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.4488, device='cuda:0', dtype=torch.float64)
tensor([-128.0072, -123.5770, -140.9682, -152.7607,  -86.3444],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.2349, device='cuda:0', dtype=torch.float64)
tensor([-129.2858, -121.5128, -141.5197, -152.9224,  -85.4800],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.2051, device='cuda:0', dtype=torch.float64)
tensor([-129.7031, -120.1051, -141.6722, -152.5160,  -84.8367],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.2697, device='cuda:0', dtype=torch.float64)
tensor([-129.3755, -119.2684, -141.3591, -151.7040,  -84.1076],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.3502, device='cuda:0', dtype=torch.float64)
tensor([-129.1845, -118.8205, -140.8275, -150.9536,  -83.3254],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.1754, device='cuda:0', dtype=torch.float64)
tensor([-128.6857, -118.2761, -140.0392, -149.9385,  -82.7554],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.4666, device='cuda:0', dtype=torch.float64)
tensor([-128.4214, -118.0367, -139.9067, -148.9830,  -82.1182],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.1300, device='cuda:0', dtype=torch.float64)
tensor([-128.1025, -118.2694, -139.4394, -148.0241,  -81.7818],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.4050, device='cuda:0', dtype=torch.float64)
tensor([-127.9108, -119.0834, -138.8932, -147.1529,  -81.4604],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.3443, device='cuda:0', dtype=torch.float64)
tensor([-128.5843, -119.0654, -138.1347, -146.5775,  -81.2815],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.2296, device='cuda:0', dtype=torch.float64)
tensor([-129.2350, -118.5772, -137.8219, -146.5036,  -81.4212],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.2682, device='cuda:0', dtype=torch.float64)
tensor([-130.1911, -117.9872, -137.8608, -146.5362,  -81.6130],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.3231, device='cuda:0', dtype=torch.float64)
tensor([-131.3203, -117.9436, -137.9457, -146.8824,  -82.2046],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.6642, device='cuda:0', dtype=torch.float64)
tensor([-132.0976, -118.9497, -137.4189, -147.0241,  -83.0732],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.2968, device='cuda:0', dtype=torch.float64)
tensor([-132.8185, -120.4461, -137.2996, -147.9411,  -84.3714],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.3364, device='cuda:0', dtype=torch.float64)
tensor([-134.1261, -122.1134, -137.1932, -149.3050,  -86.1409],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.5203, device='cuda:0', dtype=torch.float64)
tensor([-135.6760, -123.4462, -137.2737, -150.7426,  -87.7863],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.2748, device='cuda:0', dtype=torch.float64)
tensor([-137.4249, -123.8929, -137.2108, -152.0300,  -89.0714],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.4170, device='cuda:0', dtype=torch.float64)
tensor([-138.8188, -125.1016, -136.7303, -152.6676,  -90.3687],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.2391, device='cuda:0', dtype=torch.float64)
tensor([-140.1956, -126.0425, -136.7111, -153.3218,  -91.3667],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.2862, device='cuda:0', dtype=torch.float64)
tensor([-141.5275, -127.8972, -136.7156, -153.9208,  -92.5675],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.2107, device='cuda:0', dtype=torch.float64)
tensor([-142.7368, -129.4113, -136.6628, -154.3753,  -93.8038],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.1412, device='cuda:0', dtype=torch.float64)
tensor([-143.5768, -130.7193, -136.5723, -154.8190,  -94.7053],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.3390, device='cuda:0', dtype=torch.float64)
tensor([-144.3688, -131.2775, -136.1438, -154.7085,  -95.0715],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.3420, device='cuda:0', dtype=torch.float64)
tensor([-144.9387, -131.9703, -135.8624, -154.8009,  -95.4667],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.1352, device='cuda:0', dtype=torch.float64)
tensor([-145.0966, -132.3513, -135.6949, -154.5707,  -95.7925],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.2649, device='cuda:0', dtype=torch.float64)
tensor([-144.9644, -132.4896, -135.2310, -153.7316,  -95.7365],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.7134, device='cuda:0', dtype=torch.float64)
tensor([-144.6958, -132.1497, -134.5533, -152.6222,  -95.3615],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.2680, device='cuda:0', dtype=torch.float64)
tensor([-144.0065, -133.0354, -133.7536, -151.1864,  -95.4203],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0512, device='cuda:0', dtype=torch.float64)
tensor([-143.5148, -133.5569, -133.0893, -150.2304,  -95.4931],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.2835, device='cuda:0', dtype=torch.float64)
tensor([-143.0755, -133.4354, -132.1036, -149.4653,  -95.4047],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.2354, device='cuda:0', dtype=torch.float64)
tensor([-141.9915, -133.3799, -131.3049, -148.4876,  -95.2272],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.6860, device='cuda:0', dtype=torch.float64)
tensor([-140.0659, -133.0345, -130.7236, -146.8512,  -94.7293],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.2505, device='cuda:0', dtype=torch.float64)
tensor([-139.1176, -132.4584, -130.3506, -145.7019,  -94.3274],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.2034, device='cuda:0', dtype=torch.float64)
tensor([-138.1801, -132.6345, -129.9355, -144.6814,  -94.3470],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.2078, device='cuda:0', dtype=torch.float64)
tensor([-137.8413, -132.9361, -129.5252, -143.7646,  -94.4001],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.3245, device='cuda:0', dtype=torch.float64)
tensor([-137.1473, -133.3869, -128.8510, -142.4927,  -94.1536],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.4824, device='cuda:0', dtype=torch.float64)
tensor([-136.0280, -134.9547, -128.3874, -141.2379,  -93.9979],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0800, device='cuda:0', dtype=torch.float64)
tensor([-134.9737, -136.0266, -128.0978, -139.9260,  -93.7987],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.3376, device='cuda:0', dtype=torch.float64)
tensor([-134.0776, -137.3858, -128.1757, -138.8901,  -93.6323],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.3251, device='cuda:0', dtype=torch.float64)
tensor([-133.4292, -138.7977, -128.4311, -138.0902,  -93.7677],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.3933, device='cuda:0', dtype=torch.float64)
tensor([-133.4940, -140.2215, -128.9552, -137.9367,  -94.0847],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.4013, device='cuda:0', dtype=torch.float64)
tensor([-134.1389, -141.4254, -129.7904, -138.0792,  -94.1453],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.5850, device='cuda:0', dtype=torch.float64)
tensor([-134.8084, -142.4661, -130.5436, -137.9553,  -93.9923],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.3281, device='cuda:0', dtype=torch.float64)
tensor([-135.3815, -143.0690, -130.9774, -137.6024,  -93.9100],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.3085, device='cuda:0', dtype=torch.float64)
tensor([-135.6497, -143.4832, -130.5241, -136.7158,  -93.6306],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.5414, device='cuda:0', dtype=torch.float64)
tensor([-136.1530, -143.0322, -129.7052, -136.0541,  -93.3630],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.4843, device='cuda:0', dtype=torch.float64)
tensor([-136.6287, -143.0409, -129.2862, -135.5657,  -93.2540],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.4668, device='cuda:0', dtype=torch.float64)
tensor([-137.1837, -142.7783, -129.5031, -134.4872,  -92.8827],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.2539, device='cuda:0', dtype=torch.float64)
tensor([-137.7338, -142.4862, -129.9413, -133.7754,  -92.4558],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.1591, device='cuda:0', dtype=torch.float64)
tensor([-138.4885, -142.1689, -130.2742, -133.3464,  -92.1772],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.4906, device='cuda:0', dtype=torch.float64)
tensor([-139.0652, -140.9166, -129.8676, -132.8263,  -91.4675],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.4677, device='cuda:0', dtype=torch.float64)
tensor([-139.2383, -139.7554, -129.2950, -131.7091,  -90.5885],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.5844, device='cuda:0', dtype=torch.float64)
tensor([-139.9362, -138.8577, -129.5871, -131.8933,  -90.1196],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.2708, device='cuda:0', dtype=torch.float64)
tensor([-140.7416, -137.7744, -129.8945, -132.2301,  -89.6726],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.2261, device='cuda:0', dtype=torch.float64)
tensor([-141.2066, -136.8419, -129.9123, -132.3235,  -89.0882],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.4174, device='cuda:0', dtype=torch.float64)
tensor([-142.0814, -135.5855, -129.9750, -132.7518,  -88.4103],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.1356, device='cuda:0', dtype=torch.float64)
tensor([-142.9955, -134.7701, -129.8127, -132.9197,  -87.8602],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.2958, device='cuda:0', dtype=torch.float64)
tensor([-144.5232, -134.4746, -129.7500, -133.4053,  -87.6218],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.5616, device='cuda:0', dtype=torch.float64)
tensor([-145.8133, -134.8047, -129.5326, -133.9935,  -87.5611],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.4657, device='cuda:0', dtype=torch.float64)
tensor([-147.8682, -135.0001, -129.6044, -135.3536,  -87.8475],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.3303, device='cuda:0', dtype=torch.float64)
tensor([-149.8663, -135.1592, -129.2772, -136.8227,  -88.1559],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.2786, device='cuda:0', dtype=torch.float64)
tensor([-151.3407, -134.9177, -128.9813, -137.9860,  -88.3549],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.3744, device='cuda:0', dtype=torch.float64)
tensor([-152.4476, -134.9907, -129.2799, -139.0829,  -88.8376],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.5370, device='cuda:0', dtype=torch.float64)
tensor([-152.9825, -135.1837, -128.9651, -139.5103,  -89.2609],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.5734, device='cuda:0', dtype=torch.float64)
tensor([-152.9912, -135.2916, -128.8625, -139.6135,  -89.3094],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.1938, device='cuda:0', dtype=torch.float64)
tensor([-152.8480, -135.9178, -129.0183, -139.5901,  -89.4089],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.1316, device='cuda:0', dtype=torch.float64)
tensor([-153.3050, -136.3295, -128.9110, -139.8405,  -89.5166],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.4412, device='cuda:0', dtype=torch.float64)
tensor([-153.3826, -136.6732, -129.2485, -139.6378,  -89.3259],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.4264, device='cuda:0', dtype=torch.float64)
tensor([-153.5137, -136.9776, -129.3653, -139.0315,  -89.2384],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.2936, device='cuda:0', dtype=torch.float64)
tensor([-153.2718, -137.7669, -128.9788, -137.4096,  -88.8518],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.1582, device='cuda:0', dtype=torch.float64)
tensor([-153.0088, -138.1039, -128.4791, -135.7859,  -88.5194],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.2094, device='cuda:0', dtype=torch.float64)
tensor([-152.5412, -138.6016, -128.1014, -134.4340,  -88.1874],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0991, device='cuda:0', dtype=torch.float64)
tensor([-152.3084, -138.9295, -127.6428, -133.5199,  -87.9535],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.3386, device='cuda:0', dtype=torch.float64)
tensor([-152.6637, -139.4470, -127.2581, -132.8830,  -88.0245],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9495, device='cuda:0', dtype=torch.float64)
tensor([-153.1378, -139.6940, -127.0539, -132.3546,  -88.1224],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.3360, device='cuda:0', dtype=torch.float64)
tensor([-153.2838, -139.9640, -126.7917, -131.5937,  -87.9182],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.3181, device='cuda:0', dtype=torch.float64)
tensor([-153.0693, -140.1213, -126.8994, -131.4610,  -87.9395],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0518, device='cuda:0', dtype=torch.float64)
tensor([-153.0390, -140.2633, -127.2164, -131.3252,  -88.0172],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.2276, device='cuda:0', dtype=torch.float64)
tensor([-152.7233, -140.0749, -127.8292, -131.4244,  -88.1094],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.1165, device='cuda:0', dtype=torch.float64)
tensor([-152.9716, -139.4250, -128.4547, -131.7235,  -88.2388],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.2651, device='cuda:0', dtype=torch.float64)
tensor([-153.2593, -139.3060, -128.4481, -131.7559,  -88.4997],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.2383, device='cuda:0', dtype=torch.float64)
tensor([-153.8772, -139.0364, -128.4772, -132.1554,  -88.8812],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.2290, device='cuda:0', dtype=torch.float64)
tensor([-154.5422, -139.0038, -128.6267, -132.8955,  -89.4347],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.2261, device='cuda:0', dtype=torch.float64)
tensor([-155.4336, -139.2692, -128.8010, -133.3624,  -90.0424],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.2989, device='cuda:0', dtype=torch.float64)
tensor([-156.5437, -139.8434, -128.5796, -133.6572,  -90.9451],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.3501, device='cuda:0', dtype=torch.float64)
tensor([-157.9483, -140.7565, -128.8101, -134.1076,  -92.1923],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.3994, device='cuda:0', dtype=torch.float64)
tensor([-159.3833, -141.5453, -128.6826, -134.5104,  -93.2118],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.1616, device='cuda:0', dtype=torch.float64)
tensor([-160.7588, -141.9914, -128.7061, -134.8957,  -93.9075],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.2149, device='cuda:0', dtype=torch.float64)
tensor([-161.7268, -142.8159, -128.4783, -135.2304,  -94.8031],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.2661, device='cuda:0', dtype=torch.float64)
tensor([-162.5196, -143.1667, -128.4907, -135.7828,  -95.6683],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.3178, device='cuda:0', dtype=torch.float64)
tensor([-162.8346, -143.5783, -128.3420, -136.3026,  -96.4565],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.1731, device='cuda:0', dtype=torch.float64)
tensor([-162.7924, -144.6433, -128.4620, -136.7153,  -97.5452],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.2772, device='cuda:0', dtype=torch.float64)
tensor([-162.7526, -145.3294, -128.8012, -136.7199,  -98.0799],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0131, device='cuda:0', dtype=torch.float64)
tensor([-162.6595, -146.4869, -129.6186, -136.8836,  -98.6296],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.2060, device='cuda:0', dtype=torch.float64)
tensor([-162.6825, -147.5181, -129.9845, -137.0998,  -99.2291],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.2771, device='cuda:0', dtype=torch.float64)
tensor([-163.0476, -148.4909, -130.2332, -138.0156, -100.1003],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.1687, device='cuda:0', dtype=torch.float64)
tensor([-163.4641, -149.1130, -130.5966, -139.0681, -100.8958],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.2862, device='cuda:0', dtype=torch.float64)
tensor([-163.5661, -149.8680, -131.3686, -140.0619, -101.6828],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0604, device='cuda:0', dtype=torch.float64)
tensor([-163.3379, -150.5258, -132.4698, -140.7186, -102.6019],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.2928, device='cuda:0', dtype=torch.float64)
tensor([-163.4473, -151.3072, -134.3190, -141.5345, -103.5937],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.2074, device='cuda:0', dtype=torch.float64)
tensor([-163.4524, -152.0603, -135.9173, -142.0676, -104.2889],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.2427, device='cuda:0', dtype=torch.float64)
tensor([-163.0244, -153.0507, -137.6579, -142.2505, -105.2049],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.3803, device='cuda:0', dtype=torch.float64)
tensor([-162.8163, -153.9645, -139.7750, -142.6835, -106.5350],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.2428, device='cuda:0', dtype=torch.float64)
tensor([-162.5057, -154.5452, -141.9484, -143.2080, -107.7718],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.1597, device='cuda:0', dtype=torch.float64)
tensor([-162.2432, -154.2271, -144.0996, -144.1691, -108.7773],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.1649, device='cuda:0', dtype=torch.float64)
tensor([-162.1659, -154.6992, -146.3562, -145.0155, -110.1872],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.3298, device='cuda:0', dtype=torch.float64)
tensor([-161.4851, -155.7309, -148.9742, -145.3348, -111.8286],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.1962, device='cuda:0', dtype=torch.float64)
tensor([-161.3934, -156.8485, -151.6597, -145.9608, -113.5079],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.3149, device='cuda:0', dtype=torch.float64)
tensor([-161.1802, -157.5619, -153.6768, -146.5678, -114.9063],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.2434, device='cuda:0', dtype=torch.float64)
tensor([-161.2371, -157.6439, -155.3083, -147.3478, -115.6569],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.1607, device='cuda:0', dtype=torch.float64)
tensor([-161.3086, -157.6657, -157.0001, -147.9303, -116.2833],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.4217, device='cuda:0', dtype=torch.float64)
tensor([-161.4258, -156.7058, -158.9409, -148.6182, -116.8241],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.3984, device='cuda:0', dtype=torch.float64)
tensor([-161.9325, -156.1645, -160.4439, -149.4073, -117.5038],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.1613, device='cuda:0', dtype=torch.float64)
tensor([-163.0528, -155.7135, -162.1920, -150.4741, -118.1690],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.3635, device='cuda:0', dtype=torch.float64)
tensor([-164.9453, -155.2438, -164.4676, -152.2719, -119.1591],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0784, device='cuda:0', dtype=torch.float64)
tensor([-166.5928, -155.0549, -166.7530, -154.0135, -120.4830],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.2883, device='cuda:0', dtype=torch.float64)
tensor([-168.2243, -155.5037, -169.1580, -155.4915, -122.3399],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.1918, device='cuda:0', dtype=torch.float64)
tensor([-169.7824, -155.7550, -171.6186, -156.6483, -124.0937],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.3384, device='cuda:0', dtype=torch.float64)
tensor([-171.5531, -155.6630, -174.3640, -157.9112, -125.3541],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0506, device='cuda:0', dtype=torch.float64)
tensor([-172.8982, -155.5337, -177.1779, -159.0082, -126.3540],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.2571, device='cuda:0', dtype=torch.float64)
tensor([-173.9075, -155.8280, -179.5214, -159.7974, -127.3937],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.3211, device='cuda:0', dtype=torch.float64)
tensor([-174.7517, -155.4775, -181.4106, -160.2832, -128.0829],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9967, device='cuda:0', dtype=torch.float64)
tensor([-175.3651, -155.3816, -182.6158, -160.5378, -128.9666],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.3135, device='cuda:0', dtype=torch.float64)
tensor([-175.4841, -155.1512, -183.3158, -160.2942, -129.5568],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0679, device='cuda:0', dtype=torch.float64)
tensor([-175.6675, -154.8282, -183.6809, -160.2682, -129.7127],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.3180, device='cuda:0', dtype=torch.float64)
tensor([-175.7895, -154.0723, -183.6691, -160.3675, -129.5927],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.2276, device='cuda:0', dtype=torch.float64)
tensor([-175.6047, -153.1898, -183.7378, -160.4415, -129.3043],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.3967, device='cuda:0', dtype=torch.float64)
tensor([-175.7400, -151.8971, -183.0503, -160.4074, -128.7923],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.1405, device='cuda:0', dtype=torch.float64)
tensor([-175.9045, -150.4678, -182.8992, -160.8527, -128.5119],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.1888, device='cuda:0', dtype=torch.float64)
tensor([-175.6875, -149.6934, -183.1520, -161.1872, -128.6021],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.3000, device='cuda:0', dtype=torch.float64)
tensor([-175.8514, -148.7379, -183.6440, -161.9536, -128.8727],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.3359, device='cuda:0', dtype=torch.float64)
tensor([-175.0553, -147.1974, -183.6700, -162.2037, -128.4145],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.1587, device='cuda:0', dtype=torch.float64)
tensor([-174.2937, -145.9558, -183.1223, -162.0029, -128.1502],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.1267, device='cuda:0', dtype=torch.float64)
tensor([-173.2513, -145.5863, -183.6126, -161.5557, -128.4483],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.1757, device='cuda:0', dtype=torch.float64)
tensor([-172.3048, -145.7964, -184.2973, -161.0405, -129.2336],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9822, device='cuda:0', dtype=torch.float64)
tensor([-171.7233, -146.1976, -184.8669, -160.9250, -130.1843],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.1261, device='cuda:0', dtype=torch.float64)
tensor([-171.1229, -146.4408, -185.3504, -161.0038, -131.1494],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.3973, device='cuda:0', dtype=torch.float64)
tensor([-170.2552, -146.2884, -185.4466, -161.1948, -132.1195],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.1015, device='cuda:0', dtype=torch.float64)
tensor([-169.5621, -146.0183, -185.8119, -161.3277, -133.4463],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.2674, device='cuda:0', dtype=torch.float64)
tensor([-168.9186, -145.2730, -185.9176, -161.5936, -134.0338],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0610, device='cuda:0', dtype=torch.float64)
tensor([-168.3660, -144.6927, -185.9541, -161.6930, -134.6379],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0975, device='cuda:0', dtype=torch.float64)
tensor([-168.0246, -144.0603, -185.9924, -161.9736, -134.8809],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.1168, device='cuda:0', dtype=torch.float64)
tensor([-168.0405, -143.8234, -186.0548, -162.3390, -135.2277],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.2702, device='cuda:0', dtype=torch.float64)
tensor([-168.3683, -143.7411, -186.2302, -163.0998, -135.7894],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.1366, device='cuda:0', dtype=torch.float64)
tensor([-168.7252, -144.3436, -186.9072, -163.7335, -136.6611],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.1415, device='cuda:0', dtype=torch.float64)
tensor([-169.1720, -144.6921, -187.8194, -164.4114, -137.5611],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.2302, device='cuda:0', dtype=torch.float64)
tensor([-169.2128, -145.1583, -188.2198, -164.6516, -138.2901],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.3724, device='cuda:0', dtype=torch.float64)
tensor([-169.1040, -146.0195, -188.6338, -164.4785, -139.0472],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.1720, device='cuda:0', dtype=torch.float64)
tensor([-168.8662, -146.4750, -188.6792, -164.3085, -139.6450],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.1182, device='cuda:0', dtype=torch.float64)
tensor([-168.6457, -146.4916, -188.1056, -163.9103, -139.7779],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.1921, device='cuda:0', dtype=torch.float64)
tensor([-168.8558, -146.8919, -187.6515, -163.4781, -140.0892],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.2154, device='cuda:0', dtype=torch.float64)
tensor([-168.7897, -147.1745, -186.5815, -162.4390, -139.9973],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0801, device='cuda:0', dtype=torch.float64)
tensor([-168.8109, -147.5019, -186.2454, -161.5705, -140.0395],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.2014, device='cuda:0', dtype=torch.float64)
tensor([-168.7185, -147.6110, -186.1034, -160.5733, -139.8035],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0421, device='cuda:0', dtype=torch.float64)
tensor([-168.6359, -147.0833, -185.7554, -159.9624, -139.1788],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.1543, device='cuda:0', dtype=torch.float64)
tensor([-168.5772, -147.0538, -185.4286, -159.1429, -138.6804],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.2915, device='cuda:0', dtype=torch.float64)
tensor([-169.0514, -147.2351, -185.4085, -158.9087, -138.5167],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.2642, device='cuda:0', dtype=torch.float64)
tensor([-170.0753, -147.2732, -186.0575, -159.3221, -138.8100],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.1386, device='cuda:0', dtype=torch.float64)
tensor([-170.8967, -147.3946, -186.9647, -159.7057, -139.3684],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.1906, device='cuda:0', dtype=torch.float64)
tensor([-171.5027, -147.5533, -187.9348, -160.2887, -140.1525],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.2022, device='cuda:0', dtype=torch.float64)
tensor([-171.8609, -148.0332, -188.7894, -160.7719, -140.9545],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.3713, device='cuda:0', dtype=torch.float64)
tensor([-172.3497, -149.3870, -190.2965, -161.2421, -142.4567],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.2374, device='cuda:0', dtype=torch.float64)
tensor([-172.8492, -150.1599, -190.9944, -161.5984, -143.1430],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.2280, device='cuda:0', dtype=torch.float64)
tensor([-173.0626, -150.6870, -192.4027, -162.3313, -143.8161],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0435, device='cuda:0', dtype=torch.float64)
tensor([-173.5189, -150.8547, -193.4360, -162.8835, -144.2670],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.1838, device='cuda:0', dtype=torch.float64)
tensor([-174.0576, -151.2742, -194.1082, -163.4776, -144.6762],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0437, device='cuda:0', dtype=torch.float64)
tensor([-174.6649, -151.7838, -194.9460, -164.0055, -145.0329],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.1416, device='cuda:0', dtype=torch.float64)
tensor([-175.2410, -152.1499, -195.8385, -164.7190, -145.4878],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0486, device='cuda:0', dtype=torch.float64)
tensor([-175.5758, -152.4987, -196.9591, -165.4579, -145.9267],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0957, device='cuda:0', dtype=torch.float64)
tensor([-176.2180, -152.9954, -198.1418, -166.3318, -146.5560],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0573, device='cuda:0', dtype=torch.float64)
tensor([-176.7665, -153.4370, -199.5705, -166.9508, -147.5971],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0406, device='cuda:0', dtype=torch.float64)
tensor([-177.3232, -154.0599, -200.8811, -167.4020, -148.5409],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.1066, device='cuda:0', dtype=torch.float64)
tensor([-177.8766, -154.9055, -202.2448, -167.5057, -149.8261],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0978, device='cuda:0', dtype=torch.float64)
tensor([-178.4288, -155.1980, -203.9788, -167.7300, -151.2939],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.1813, device='cuda:0', dtype=torch.float64)
tensor([-179.4295, -155.4277, -206.0398, -168.0846, -153.0196],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.2445, device='cuda:0', dtype=torch.float64)
tensor([-180.2036, -155.3754, -207.9421, -168.2953, -154.5704],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.2507, device='cuda:0', dtype=torch.float64)
tensor([-181.1583, -155.8180, -210.2049, -168.5149, -156.4680],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.3048, device='cuda:0', dtype=torch.float64)
tensor([-182.3945, -156.1188, -211.5828, -168.9650, -158.0569],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.1499, device='cuda:0', dtype=torch.float64)
tensor([-183.1443, -156.4425, -212.6084, -168.9882, -159.5156],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9411, device='cuda:0', dtype=torch.float64)
tensor([-183.5833, -156.6592, -212.9536, -168.5240, -160.3997],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9856, device='cuda:0', dtype=torch.float64)
tensor([-183.8652, -157.0988, -212.9166, -167.6059, -161.0290],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.1915, device='cuda:0', dtype=torch.float64)
tensor([-184.1163, -157.8169, -213.1521, -166.6956, -161.6496],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.1076, device='cuda:0', dtype=torch.float64)
tensor([-184.5840, -158.4146, -213.0528, -165.9969, -162.2548],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.1040, device='cuda:0', dtype=torch.float64)
tensor([-185.1192, -158.5830, -212.6421, -165.4642, -162.8929],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0116, device='cuda:0', dtype=torch.float64)
tensor([-185.9449, -158.4457, -212.5073, -165.2440, -163.5831],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.1324, device='cuda:0', dtype=torch.float64)
tensor([-186.5333, -158.3954, -211.9307, -164.4088, -164.0667],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9121, device='cuda:0', dtype=torch.float64)
tensor([-186.7335, -158.1282, -211.0218, -163.1732, -163.9547],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.2999, device='cuda:0', dtype=torch.float64)
tensor([-187.4029, -158.0855, -209.6246, -162.1766, -164.1698],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9168, device='cuda:0', dtype=torch.float64)
tensor([-187.8467, -158.3363, -208.3689, -161.2685, -164.5425],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0340, device='cuda:0', dtype=torch.float64)
tensor([-188.1624, -158.1602, -206.7097, -160.4614, -164.6013],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0546, device='cuda:0', dtype=torch.float64)
tensor([-188.9033, -158.2315, -205.7022, -159.9842, -164.9052],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0280, device='cuda:0', dtype=torch.float64)
tensor([-189.8795, -158.5392, -204.7807, -159.3719, -165.2233],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0133, device='cuda:0', dtype=torch.float64)
tensor([-190.8505, -158.8815, -204.3538, -158.6605, -165.6892],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0636, device='cuda:0', dtype=torch.float64)
tensor([-191.4877, -159.1279, -203.5928, -157.5836, -166.1223],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0846, device='cuda:0', dtype=torch.float64)
tensor([-192.6025, -159.5291, -202.7227, -157.0387, -166.6571],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0541, device='cuda:0', dtype=torch.float64)
tensor([-193.4198, -159.9370, -202.1820, -156.6524, -167.0730],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.2420, device='cuda:0', dtype=torch.float64)
tensor([-193.7207, -159.6110, -201.0790, -156.7402, -166.9296],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.1088, device='cuda:0', dtype=torch.float64)
tensor([-194.3074, -158.8324, -199.6749, -156.7996, -166.8004],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0178, device='cuda:0', dtype=torch.float64)
tensor([-194.3103, -158.0939, -198.8426, -156.6126, -166.6034],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9294, device='cuda:0', dtype=torch.float64)
tensor([-194.1460, -157.5681, -197.7958, -156.4385, -166.4942],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0213, device='cuda:0', dtype=torch.float64)
tensor([-194.1039, -156.9368, -196.9096, -156.5803, -166.5935],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.1032, device='cuda:0', dtype=torch.float64)
tensor([-194.3097, -156.3033, -195.8894, -156.7415, -166.9340],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.2008, device='cuda:0', dtype=torch.float64)
tensor([-194.9619, -155.8968, -195.2469, -157.3372, -167.1008],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9671, device='cuda:0', dtype=torch.float64)
tensor([-195.8832, -155.6209, -195.0587, -158.3037, -167.4822],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0659, device='cuda:0', dtype=torch.float64)
tensor([-196.6918, -155.1014, -195.0871, -159.4496, -167.8924],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0359, device='cuda:0', dtype=torch.float64)
tensor([-197.1893, -154.9089, -195.1325, -160.2149, -168.4163],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9761, device='cuda:0', dtype=torch.float64)
tensor([-197.3576, -154.1114, -195.1015, -160.8203, -168.6109],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.1345, device='cuda:0', dtype=torch.float64)
tensor([-197.8869, -153.5280, -195.9627, -161.4459, -169.1795],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.2574, device='cuda:0', dtype=torch.float64)
tensor([-199.0874, -153.3974, -197.5981, -162.8597, -170.6376],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9227, device='cuda:0', dtype=torch.float64)
tensor([-200.2424, -153.0813, -199.3954, -164.3680, -171.9277],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0769, device='cuda:0', dtype=torch.float64)
tensor([-201.5021, -152.9466, -201.6629, -166.0474, -173.9417],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.1628, device='cuda:0', dtype=torch.float64)
tensor([-202.4900, -153.0360, -204.0378, -167.4549, -176.1480],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8725, device='cuda:0', dtype=torch.float64)
tensor([-203.4091, -152.6500, -206.1687, -168.8326, -178.3479],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9554, device='cuda:0', dtype=torch.float64)
tensor([-204.1719, -152.6484, -208.7265, -170.2702, -180.5710],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9944, device='cuda:0', dtype=torch.float64)
tensor([-205.2892, -152.9653, -211.8245, -171.8373, -183.0455],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9106, device='cuda:0', dtype=torch.float64)
tensor([-206.7384, -153.9465, -215.2373, -173.3889, -185.8939],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0260, device='cuda:0', dtype=torch.float64)
tensor([-208.5674, -155.1143, -218.4892, -174.6853, -188.5536],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0002, device='cuda:0', dtype=torch.float64)
tensor([-210.4910, -156.4365, -221.9160, -176.1834, -191.3663],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9800, device='cuda:0', dtype=torch.float64)
tensor([-212.5841, -157.9118, -224.2082, -177.4227, -193.7421],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9245, device='cuda:0', dtype=torch.float64)
tensor([-214.7370, -159.7095, -227.3314, -178.9632, -196.4642],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9369, device='cuda:0', dtype=torch.float64)
tensor([-216.6583, -161.1952, -230.2303, -180.2155, -199.0237],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8517, device='cuda:0', dtype=torch.float64)
tensor([-218.2484, -162.4252, -233.7910, -181.8286, -201.2862],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0131, device='cuda:0', dtype=torch.float64)
tensor([-219.8608, -163.1315, -236.8480, -183.3055, -202.9525],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8444, device='cuda:0', dtype=torch.float64)
tensor([-221.3952, -163.9940, -240.5578, -184.9291, -204.9889],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0828, device='cuda:0', dtype=torch.float64)
tensor([-223.1470, -164.1747, -243.5559, -186.6673, -206.5242],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9875, device='cuda:0', dtype=torch.float64)
tensor([-224.6260, -164.3240, -247.0498, -188.4246, -208.1775],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8794, device='cuda:0', dtype=torch.float64)
tensor([-226.2833, -164.8286, -250.7431, -190.4727, -210.2707],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0006, device='cuda:0', dtype=torch.float64)
tensor([-227.9533, -165.3254, -253.5763, -192.1921, -212.1869],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9410, device='cuda:0', dtype=torch.float64)
tensor([-229.1269, -166.1214, -256.5366, -193.7471, -213.6764],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0265, device='cuda:0', dtype=torch.float64)
tensor([-230.4586, -166.7876, -260.0072, -195.7490, -215.3281],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9159, device='cuda:0', dtype=torch.float64)
tensor([-232.1373, -168.1845, -263.7014, -197.6974, -217.8867],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8794, device='cuda:0', dtype=torch.float64)
tensor([-233.5442, -169.1960, -266.1856, -199.2372, -219.7113],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7321, device='cuda:0', dtype=torch.float64)
tensor([-235.0025, -170.1925, -268.4175, -200.7685, -221.4187],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9637, device='cuda:0', dtype=torch.float64)
tensor([-236.8083, -171.6409, -270.7870, -201.6034, -223.6026],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9207, device='cuda:0', dtype=torch.float64)
tensor([-238.2796, -173.5674, -273.4506, -202.4461, -225.6027],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9871, device='cuda:0', dtype=torch.float64)
tensor([-239.9033, -175.3289, -275.7249, -203.2231, -227.5043],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8551, device='cuda:0', dtype=torch.float64)
tensor([-241.6305, -176.7968, -277.1402, -203.8071, -229.2256],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9516, device='cuda:0', dtype=torch.float64)
tensor([-243.1591, -177.9005, -278.4252, -204.8027, -230.5527],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0406, device='cuda:0', dtype=torch.float64)
tensor([-244.1687, -178.6769, -279.4470, -205.2403, -231.6071],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9496, device='cuda:0', dtype=torch.float64)
tensor([-244.9111, -179.0324, -280.5035, -205.9665, -232.1039],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9126, device='cuda:0', dtype=torch.float64)
tensor([-245.3543, -178.8734, -280.1856, -206.8431, -231.9281],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7501, device='cuda:0', dtype=torch.float64)
tensor([-245.7601, -178.8471, -279.5055, -207.1741, -231.6402],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9040, device='cuda:0', dtype=torch.float64)
tensor([-246.0039, -178.7861, -279.2984, -206.7827, -231.3673],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8843, device='cuda:0', dtype=torch.float64)
tensor([-245.8520, -178.8078, -280.3183, -206.5807, -231.2324],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0994, device='cuda:0', dtype=torch.float64)
tensor([-245.6214, -179.4833, -282.1814, -206.5196, -231.7034],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7376, device='cuda:0', dtype=torch.float64)
tensor([-245.9957, -180.7597, -285.0765, -206.6816, -232.9642],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9218, device='cuda:0', dtype=torch.float64)
tensor([-246.3350, -182.1907, -287.4945, -205.7506, -234.5887],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8426, device='cuda:0', dtype=torch.float64)
tensor([-246.7034, -183.5406, -289.8440, -205.0223, -236.1681],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8771, device='cuda:0', dtype=torch.float64)
tensor([-247.6067, -184.8994, -291.0823, -204.3394, -237.9682],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9250, device='cuda:0', dtype=torch.float64)
tensor([-248.6847, -186.3728, -292.5641, -204.0734, -239.4576],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8704, device='cuda:0', dtype=torch.float64)
tensor([-250.2289, -187.7725, -293.5869, -204.2654, -240.9233],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9045, device='cuda:0', dtype=torch.float64)
tensor([-252.3652, -189.4968, -295.1721, -205.1810, -242.5741],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7291, device='cuda:0', dtype=torch.float64)
tensor([-254.5298, -191.6284, -297.5217, -206.0450, -244.1892],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8682, device='cuda:0', dtype=torch.float64)
tensor([-256.4705, -193.5580, -300.0352, -207.0555, -245.3101],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9001, device='cuda:0', dtype=torch.float64)
tensor([-258.5576, -196.1064, -303.3464, -207.7203, -246.8600],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8216, device='cuda:0', dtype=torch.float64)
tensor([-261.0675, -199.1657, -306.5521, -208.4005, -248.5950],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8649, device='cuda:0', dtype=torch.float64)
tensor([-263.3211, -201.9100, -308.9737, -208.8514, -250.2428],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7441, device='cuda:0', dtype=torch.float64)
tensor([-265.0768, -204.0935, -310.8157, -209.3229, -251.3404],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7350, device='cuda:0', dtype=torch.float64)
tensor([-266.5166, -206.2209, -311.7435, -209.5028, -251.7713],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8403, device='cuda:0', dtype=torch.float64)
tensor([-268.5822, -208.6637, -313.0178, -210.0430, -252.8012],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7779, device='cuda:0', dtype=torch.float64)
tensor([-270.4735, -210.7605, -314.2094, -210.7655, -253.7046],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7577, device='cuda:0', dtype=torch.float64)
tensor([-272.2551, -212.4720, -314.9691, -211.7407, -254.6335],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6649, device='cuda:0', dtype=torch.float64)
tensor([-273.7393, -214.1738, -316.2875, -213.2889, -255.8194],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6663, device='cuda:0', dtype=torch.float64)
tensor([-275.3786, -216.0360, -317.4169, -214.5299, -257.1156],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6252, device='cuda:0', dtype=torch.float64)
tensor([-276.9681, -217.7346, -318.6664, -215.6982, -258.5221],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6432, device='cuda:0', dtype=torch.float64)
tensor([-278.4883, -219.5200, -319.6040, -216.5025, -259.5048],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5920, device='cuda:0', dtype=torch.float64)
tensor([-280.2086, -221.7382, -320.9289, -216.9141, -260.8230],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6220, device='cuda:0', dtype=torch.float64)
tensor([-282.1854, -224.0292, -322.8055, -217.4241, -262.2955],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6840, device='cuda:0', dtype=torch.float64)
tensor([-284.3675, -226.2311, -325.6967, -217.9429, -263.6717],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6606, device='cuda:0', dtype=torch.float64)
tensor([-286.8142, -228.5786, -328.3673, -218.0238, -265.0063],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6151, device='cuda:0', dtype=torch.float64)
tensor([-289.3004, -230.6111, -331.4388, -218.3981, -266.3643],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5478, device='cuda:0', dtype=torch.float64)
tensor([-291.9852, -232.9453, -333.9366, -218.7429, -267.9063],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5100, device='cuda:0', dtype=torch.float64)
tensor([-294.2519, -235.0664, -335.8918, -218.6829, -268.9811],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6515, device='cuda:0', dtype=torch.float64)
tensor([-296.5741, -237.1055, -338.0609, -218.7259, -269.8487],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4828, device='cuda:0', dtype=torch.float64)
tensor([-299.2792, -239.4076, -339.9644, -218.6033, -270.9373],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4708, device='cuda:0', dtype=torch.float64)
tensor([-302.6202, -242.0733, -341.4634, -218.6886, -272.5588],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4227, device='cuda:0', dtype=torch.float64)
tensor([-306.4194, -245.1752, -342.0742, -218.2066, -274.4360],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5336, device='cuda:0', dtype=torch.float64)
tensor([-310.3023, -248.0970, -342.6313, -217.7634, -276.5964],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5018, device='cuda:0', dtype=torch.float64)
tensor([-314.4493, -250.9059, -342.3446, -217.2175, -278.5953],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4262, device='cuda:0', dtype=torch.float64)
tensor([-317.9721, -253.4524, -342.7847, -216.7006, -279.6371],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4423, device='cuda:0', dtype=torch.float64)
tensor([-321.7718, -255.3476, -341.7775, -216.1149, -280.2909],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4060, device='cuda:0', dtype=torch.float64)
tensor([-326.4157, -256.9782, -340.3712, -215.7894, -281.5319],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4579, device='cuda:0', dtype=torch.float64)
tensor([-331.2143, -258.3904, -338.3314, -215.4129, -282.7303],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4489, device='cuda:0', dtype=torch.float64)
tensor([-334.4997, -259.4656, -336.0803, -214.2899, -282.7616],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3277, device='cuda:0', dtype=torch.float64)
tensor([-336.2793, -260.3956, -334.9860, -213.3428, -281.9377],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2780, device='cuda:0', dtype=torch.float64)
tensor([-337.5758, -261.5000, -334.6784, -212.7548, -281.0632],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3731, device='cuda:0', dtype=torch.float64)
tensor([-338.7582, -262.3617, -332.8083, -211.6388, -280.0568],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3597, device='cuda:0', dtype=torch.float64)
tensor([-339.0327, -262.7009, -330.7497, -210.5932, -278.4319],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3630, device='cuda:0', dtype=torch.float64)
tensor([-339.2166, -261.8023, -327.9076, -210.2645, -276.8808],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3683, device='cuda:0', dtype=torch.float64)
tensor([-338.9551, -260.3211, -324.1681, -209.6047, -275.1223],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2890, device='cuda:0', dtype=torch.float64)
tensor([-340.4387, -259.3904, -319.0637, -208.4498, -274.6923],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3048, device='cuda:0', dtype=torch.float64)
tensor([-341.6893, -258.3631, -313.8744, -207.4395, -274.4167],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3102, device='cuda:0', dtype=torch.float64)
tensor([-340.9809, -257.0488, -309.5305, -206.4552, -273.1371],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3207, device='cuda:0', dtype=torch.float64)
tensor([-338.9923, -255.5508, -305.7992, -205.3930, -271.2451],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2858, device='cuda:0', dtype=torch.float64)
tensor([-337.4749, -254.4739, -302.3847, -204.3650, -269.8873],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2695, device='cuda:0', dtype=torch.float64)
tensor([-336.2220, -253.6998, -298.7442, -203.1348, -268.8666],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3228, device='cuda:0', dtype=torch.float64)
tensor([-334.1442, -252.9080, -295.2985, -201.4568, -267.2537],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2495, device='cuda:0', dtype=torch.float64)
tensor([-330.9560, -252.1174, -292.8161, -200.0238, -264.7864],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2756, device='cuda:0', dtype=torch.float64)
tensor([-327.0846, -251.2572, -290.9282, -198.8175, -261.9437],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3101, device='cuda:0', dtype=torch.float64)
tensor([-324.2263, -250.6381, -288.8380, -197.5708, -259.8446],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3207, device='cuda:0', dtype=torch.float64)
tensor([-321.6686, -250.0964, -286.6644, -196.2101, -258.0812],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2108, device='cuda:0', dtype=torch.float64)
tensor([-319.2070, -249.5335, -284.9047, -195.1966, -256.4432],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2102, device='cuda:0', dtype=torch.float64)
tensor([-317.1819, -249.2878, -283.4538, -194.1896, -255.0061],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2390, device='cuda:0', dtype=torch.float64)
tensor([-315.9445, -249.1472, -281.6967, -193.1397, -254.0738],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2713, device='cuda:0', dtype=torch.float64)
tensor([-315.2033, -249.1144, -279.7176, -192.3262, -253.4803],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2661, device='cuda:0', dtype=torch.float64)
tensor([-314.6896, -249.0181, -278.2086, -191.8490, -253.2582],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2349, device='cuda:0', dtype=torch.float64)
tensor([-314.8203, -249.0932, -276.4007, -191.2877, -253.5428],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2155, device='cuda:0', dtype=torch.float64)
tensor([-314.0777, -248.7885, -274.8986, -191.1223, -253.0187],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2318, device='cuda:0', dtype=torch.float64)
tensor([-312.0211, -248.2047, -274.1712, -191.4716, -251.5022],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1916, device='cuda:0', dtype=torch.float64)
tensor([-309.9237, -247.4829, -273.3888, -191.9858, -250.0394],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2069, device='cuda:0', dtype=torch.float64)
tensor([-308.6272, -246.7895, -271.5146, -192.1621, -249.2155],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2458, device='cuda:0', dtype=torch.float64)
tensor([-307.4822, -246.0553, -269.5349, -192.2828, -248.6314],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2606, device='cuda:0', dtype=torch.float64)
tensor([-307.5794, -245.7109, -267.0050, -191.8885, -248.8274],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2126, device='cuda:0', dtype=torch.float64)
tensor([-307.7640, -245.5460, -264.2863, -191.3015, -249.0095],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2335, device='cuda:0', dtype=torch.float64)
tensor([-308.5828, -245.4607, -261.1060, -190.4481, -250.0148],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1939, device='cuda:0', dtype=torch.float64)
tensor([-309.1662, -245.3491, -257.7128, -189.9423, -251.2041],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2033, device='cuda:0', dtype=torch.float64)
tensor([-309.2981, -245.3151, -254.9851, -189.7553, -251.8687],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2099, device='cuda:0', dtype=torch.float64)
tensor([-309.3974, -245.3349, -252.4920, -189.5267, -252.5131],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1949, device='cuda:0', dtype=torch.float64)
tensor([-309.2839, -245.3889, -250.1636, -189.2825, -253.2333],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2622, device='cuda:0', dtype=torch.float64)
tensor([-308.6990, -245.0593, -247.8183, -189.4796, -253.7192],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2290, device='cuda:0', dtype=torch.float64)
tensor([-306.6621, -244.1640, -246.0357, -189.7623, -253.0958],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2036, device='cuda:0', dtype=torch.float64)
tensor([-303.6120, -242.7015, -245.0490, -190.4078, -251.4602],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2191, device='cuda:0', dtype=torch.float64)
tensor([-299.7563, -240.9032, -244.4455, -191.1298, -249.0751],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2048, device='cuda:0', dtype=torch.float64)
tensor([-295.7855, -239.1419, -243.8435, -191.8356, -246.7427],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1821, device='cuda:0', dtype=torch.float64)
tensor([-292.0954, -237.6477, -243.5560, -192.5501, -244.6005],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2137, device='cuda:0', dtype=torch.float64)
tensor([-289.3119, -236.5677, -242.8869, -193.1128, -243.1475],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1979, device='cuda:0', dtype=torch.float64)
tensor([-286.7327, -235.5961, -241.6599, -193.4538, -242.0316],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2247, device='cuda:0', dtype=torch.float64)
tensor([-283.8967, -234.6267, -240.4456, -193.6907, -240.7449],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2055, device='cuda:0', dtype=torch.float64)
tensor([-281.2179, -233.7625, -239.2089, -193.8221, -239.6101],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2050, device='cuda:0', dtype=torch.float64)
tensor([-279.5659, -233.1285, -237.1933, -193.6358, -239.3177],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2274, device='cuda:0', dtype=torch.float64)
tensor([-278.3078, -232.6652, -235.5133, -193.2744, -239.1669],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2223, device='cuda:0', dtype=torch.float64)
tensor([-277.3101, -232.2980, -233.8418, -192.4015, -238.9766],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1820, device='cuda:0', dtype=torch.float64)
tensor([-277.1136, -232.1477, -232.0184, -191.4240, -239.3509],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1620, device='cuda:0', dtype=torch.float64)
tensor([-276.8027, -232.0026, -230.8811, -190.6707, -239.3931],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1870, device='cuda:0', dtype=torch.float64)
tensor([-276.6472, -231.8922, -230.0847, -190.0639, -239.4732],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1718, device='cuda:0', dtype=torch.float64)
tensor([-276.8191, -231.9072, -229.0538, -189.1595, -239.7711],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1675, device='cuda:0', dtype=torch.float64)
tensor([-277.3983, -232.0648, -227.7452, -188.4223, -240.5671],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1671, device='cuda:0', dtype=torch.float64)
tensor([-277.3879, -232.0208, -226.5039, -187.8957, -240.8404],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1927, device='cuda:0', dtype=torch.float64)
tensor([-277.4206, -231.9315, -225.1828, -187.3548, -241.1069],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1626, device='cuda:0', dtype=torch.float64)
tensor([-276.4827, -231.5136, -224.4636, -187.0757, -240.5815],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1822, device='cuda:0', dtype=torch.float64)
tensor([-275.0737, -230.9699, -223.4945, -186.8368, -239.8821],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2084, device='cuda:0', dtype=torch.float64)
tensor([-273.5294, -230.3084, -222.2794, -186.6728, -239.1730],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1925, device='cuda:0', dtype=torch.float64)
tensor([-271.6482, -229.4124, -221.2619, -186.7500, -238.2569],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1961, device='cuda:0', dtype=torch.float64)
tensor([-270.2895, -228.7350, -220.1598, -186.8158, -237.8555],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1612, device='cuda:0', dtype=torch.float64)
tensor([-268.8270, -228.0804, -219.2607, -186.7252, -237.3880],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1699, device='cuda:0', dtype=torch.float64)
tensor([-267.1093, -227.4353, -218.5311, -186.5602, -236.5723],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1850, device='cuda:0', dtype=torch.float64)
tensor([-265.2589, -226.7055, -217.8163, -186.5707, -235.6626],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1666, device='cuda:0', dtype=torch.float64)
tensor([-263.2336, -225.9194, -217.0770, -186.7903, -234.6840],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1487, device='cuda:0', dtype=torch.float64)
tensor([-261.2949, -225.1835, -216.7632, -186.7965, -233.6104],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1712, device='cuda:0', dtype=torch.float64)
tensor([-259.8118, -224.5699, -216.6123, -186.8797, -232.8771],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1602, device='cuda:0', dtype=torch.float64)
tensor([-258.6042, -224.0468, -216.4051, -187.0273, -232.4053],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1668, device='cuda:0', dtype=torch.float64)
tensor([-258.1477, -223.6421, -215.6901, -187.0726, -232.5277],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1781, device='cuda:0', dtype=torch.float64)
tensor([-258.2227, -223.4002, -214.6304, -186.8213, -232.9895],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1567, device='cuda:0', dtype=torch.float64)
tensor([-258.3224, -223.2530, -213.3564, -186.5629, -233.4767],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1762, device='cuda:0', dtype=torch.float64)
tensor([-258.5463, -223.0706, -211.9746, -186.5335, -234.0288],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1696, device='cuda:0', dtype=torch.float64)
tensor([-259.0317, -222.9529, -210.6018, -186.2937, -234.7112],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1501, device='cuda:0', dtype=torch.float64)
tensor([-259.7639, -222.9000, -209.3499, -186.2477, -235.6522],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1398, device='cuda:0', dtype=torch.float64)
tensor([-260.0233, -222.7040, -208.3973, -186.4725, -236.2574],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1785, device='cuda:0', dtype=torch.float64)
tensor([-260.3411, -222.5332, -207.4947, -186.6982, -237.1333],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1343, device='cuda:0', dtype=torch.float64)
tensor([-260.3550, -222.2500, -206.7432, -187.2967, -237.7672],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1409, device='cuda:0', dtype=torch.float64)
tensor([-260.0385, -221.8416, -206.0232, -188.0150, -238.0618],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1327, device='cuda:0', dtype=torch.float64)
tensor([-259.3379, -221.3275, -205.5674, -188.5369, -238.0299],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1815, device='cuda:0', dtype=torch.float64)
tensor([-257.4248, -220.3614, -205.3700, -188.9059, -237.0257],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1197, device='cuda:0', dtype=torch.float64)
tensor([-254.9898, -219.2194, -205.5123, -189.4946, -235.6209],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1243, device='cuda:0', dtype=torch.float64)
tensor([-252.7485, -218.2202, -205.7058, -189.9243, -234.3191],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1555, device='cuda:0', dtype=torch.float64)
tensor([-250.2686, -217.1851, -206.1950, -190.4661, -232.7947],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1218, device='cuda:0', dtype=torch.float64)
tensor([-247.7787, -216.3172, -206.8060, -190.8059, -231.1328],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1404, device='cuda:0', dtype=torch.float64)
tensor([-245.8256, -215.6648, -207.2195, -190.9638, -229.8776],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1263, device='cuda:0', dtype=torch.float64)
tensor([-243.9506, -215.1619, -207.6323, -191.0379, -228.6766],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1422, device='cuda:0', dtype=torch.float64)
tensor([-242.3882, -214.7320, -207.9344, -191.3891, -227.7077],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1162, device='cuda:0', dtype=torch.float64)
tensor([-240.9828, -214.3362, -208.3198, -191.7456, -226.8963],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1458, device='cuda:0', dtype=torch.float64)
tensor([-239.8515, -213.9949, -208.5626, -192.0358, -226.3175],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1227, device='cuda:0', dtype=torch.float64)
tensor([-238.8918, -213.6884, -208.7631, -192.1666, -225.8255],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1398, device='cuda:0', dtype=torch.float64)
tensor([-238.2548, -213.3311, -208.7163, -192.3673, -225.6296],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1269, device='cuda:0', dtype=torch.float64)
tensor([-238.0300, -212.9756, -208.3447, -192.2072, -225.7418],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1160, device='cuda:0', dtype=torch.float64)
tensor([-238.1541, -212.6240, -207.8489, -192.0041, -226.1020],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1430, device='cuda:0', dtype=torch.float64)
tensor([-238.3681, -212.2494, -207.3022, -191.9120, -226.4930],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1193, device='cuda:0', dtype=torch.float64)
tensor([-238.7236, -211.8416, -206.7669, -192.0260, -226.9431],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1261, device='cuda:0', dtype=torch.float64)
tensor([-239.3606, -211.4593, -206.0582, -192.2294, -227.4970],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1180, device='cuda:0', dtype=torch.float64)
tensor([-239.8608, -211.0991, -205.6451, -192.7115, -227.8555],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1103, device='cuda:0', dtype=torch.float64)
tensor([-240.0948, -210.7367, -205.4965, -193.3249, -228.0711],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1068, device='cuda:0', dtype=torch.float64)
tensor([-239.7873, -210.2773, -205.5051, -194.0736, -227.8225],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1019, device='cuda:0', dtype=torch.float64)
tensor([-239.4100, -209.8117, -205.4235, -194.7082, -227.4622],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0912, device='cuda:0', dtype=torch.float64)
tensor([-238.9744, -209.3693, -205.3176, -195.2658, -227.0945],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1027, device='cuda:0', dtype=torch.float64)
tensor([-238.6415, -208.9555, -205.1824, -195.8115, -226.8302],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1274, device='cuda:0', dtype=torch.float64)
tensor([-237.9585, -208.4875, -204.9315, -196.2397, -226.3748],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0938, device='cuda:0', dtype=torch.float64)
tensor([-237.2937, -208.0998, -204.6224, -196.4277, -225.9156],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1139, device='cuda:0', dtype=torch.float64)
tensor([-236.4888, -207.7485, -204.2020, -196.4693, -225.2302],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0822, device='cuda:0', dtype=torch.float64)
tensor([-235.4959, -207.4410, -203.7921, -196.1963, -224.4461],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1079, device='cuda:0', dtype=torch.float64)
tensor([-234.5476, -207.1915, -203.2947, -195.7534, -223.7452],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1015, device='cuda:0', dtype=torch.float64)
tensor([-233.7140, -206.9822, -202.7867, -195.2307, -223.0927],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1023, device='cuda:0', dtype=torch.float64)
tensor([-233.0346, -206.7704, -202.3188, -194.6413, -222.6885],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0892, device='cuda:0', dtype=torch.float64)
tensor([-232.4745, -206.5997, -201.7165, -193.8484, -222.2591],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0979, device='cuda:0', dtype=torch.float64)
tensor([-231.6657, -206.3971, -201.2712, -193.3425, -221.6805],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1097, device='cuda:0', dtype=torch.float64)
tensor([-230.9196, -206.1299, -200.8895, -193.1164, -221.1745],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0824, device='cuda:0', dtype=torch.float64)
tensor([-230.1524, -205.8887, -200.5500, -193.0173, -220.6186],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1075, device='cuda:0', dtype=torch.float64)
tensor([-229.5082, -205.6675, -200.1815, -193.0656, -220.1012],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1020, device='cuda:0', dtype=torch.float64)
tensor([-228.7813, -205.4233, -199.9117, -193.3562, -219.5572],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0785, device='cuda:0', dtype=torch.float64)
tensor([-228.1316, -205.1959, -199.7107, -193.5383, -219.0840],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1151, device='cuda:0', dtype=torch.float64)
tensor([-227.3925, -204.9959, -199.6352, -193.8093, -218.5465],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0857, device='cuda:0', dtype=torch.float64)
tensor([-227.0435, -204.7922, -199.4806, -194.0523, -218.2349],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1005, device='cuda:0', dtype=torch.float64)
tensor([-226.9835, -204.6206, -199.1574, -194.3256, -218.0507],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0937, device='cuda:0', dtype=torch.float64)
tensor([-226.8794, -204.4707, -198.9606, -194.7347, -217.8917],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0881, device='cuda:0', dtype=torch.float64)
tensor([-226.8472, -204.3549, -198.7256, -195.1886, -217.8467],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0908, device='cuda:0', dtype=torch.float64)
tensor([-226.9264, -204.2619, -198.3346, -195.4913, -217.8459],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0808, device='cuda:0', dtype=torch.float64)
tensor([-226.9101, -204.2326, -197.9586, -195.7508, -217.7184],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0919, device='cuda:0', dtype=torch.float64)
tensor([-227.1943, -204.1725, -197.4679, -195.9441, -217.8850],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1004, device='cuda:0', dtype=torch.float64)
tensor([-227.5612, -204.1066, -196.9931, -196.1962, -218.1615],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1078, device='cuda:0', dtype=torch.float64)
tensor([-228.0110, -203.9705, -196.5463, -196.4543, -218.5781],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1076, device='cuda:0', dtype=torch.float64)
tensor([-228.3534, -203.8440, -196.2503, -196.8695, -219.0090],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0705, device='cuda:0', dtype=torch.float64)
tensor([-228.5427, -203.6946, -196.0513, -197.2485, -219.3136],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0700, device='cuda:0', dtype=torch.float64)
tensor([-228.6434, -203.5379, -195.8643, -197.4921, -219.6467],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0866, device='cuda:0', dtype=torch.float64)
tensor([-228.6189, -203.3806, -195.6589, -197.5767, -219.8486],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0814, device='cuda:0', dtype=torch.float64)
tensor([-228.4024, -203.1727, -195.6454, -197.7219, -219.9218],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0910, device='cuda:0', dtype=torch.float64)
tensor([-227.8800, -202.9370, -195.8306, -198.1020, -219.8348],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0841, device='cuda:0', dtype=torch.float64)
tensor([-227.0701, -202.6877, -196.0408, -198.3598, -219.5422],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0800, device='cuda:0', dtype=torch.float64)
tensor([-226.3986, -202.4566, -196.2388, -198.6840, -219.3499],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0753, device='cuda:0', dtype=torch.float64)
tensor([-225.5120, -202.2251, -196.3669, -198.7846, -218.9419],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0824, device='cuda:0', dtype=torch.float64)
tensor([-224.7580, -202.0353, -196.3727, -198.7553, -218.5489],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0647, device='cuda:0', dtype=torch.float64)
tensor([-224.0663, -201.8675, -196.3665, -198.7025, -218.1581],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0805, device='cuda:0', dtype=torch.float64)
tensor([-223.2294, -201.7100, -196.4502, -198.7096, -217.6862],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0855, device='cuda:0', dtype=torch.float64)
tensor([-222.4094, -201.5809, -196.5357, -198.7817, -217.1675],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0811, device='cuda:0', dtype=torch.float64)
tensor([-221.5003, -201.4612, -196.6759, -198.9739, -216.6097],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0684, device='cuda:0', dtype=torch.float64)
tensor([-220.7875, -201.3925, -196.7175, -199.1031, -216.1349],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0705, device='cuda:0', dtype=torch.float64)
tensor([-219.9955, -201.3537, -196.7421, -199.2903, -215.5588],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0730, device='cuda:0', dtype=torch.float64)
tensor([-219.2281, -201.3085, -196.8207, -199.5334, -215.0400],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0746, device='cuda:0', dtype=torch.float64)
tensor([-218.7315, -201.2548, -196.8388, -199.8324, -214.7257],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0702, device='cuda:0', dtype=torch.float64)
tensor([-218.2904, -201.2267, -196.9036, -200.1580, -214.4894],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0739, device='cuda:0', dtype=torch.float64)
tensor([-217.7995, -201.1971, -196.8887, -200.2662, -214.1623],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0946, device='cuda:0', dtype=torch.float64)
tensor([-217.3538, -201.1718, -196.8742, -200.2901, -213.8707],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0695, device='cuda:0', dtype=torch.float64)
tensor([-216.8303, -201.1332, -196.8764, -200.3169, -213.5509],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0809, device='cuda:0', dtype=torch.float64)
tensor([-216.5430, -201.0783, -196.7935, -200.3059, -213.3651],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0840, device='cuda:0', dtype=torch.float64)
tensor([-216.4760, -201.0088, -196.6084, -200.2234, -213.3302],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0642, device='cuda:0', dtype=torch.float64)
tensor([-216.3100, -200.9529, -196.4790, -200.1853, -213.2352],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0585, device='cuda:0', dtype=torch.float64)
tensor([-216.2415, -200.9327, -196.2698, -200.0362, -213.1991],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0752, device='cuda:0', dtype=torch.float64)
tensor([-216.2774, -200.8917, -196.1190, -200.0145, -213.2368],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0753, device='cuda:0', dtype=torch.float64)
tensor([-216.3519, -200.8563, -196.0307, -200.0683, -213.3385],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0750, device='cuda:0', dtype=torch.float64)
tensor([-216.6186, -200.8044, -195.8452, -200.0112, -213.5433],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0669, device='cuda:0', dtype=torch.float64)
tensor([-216.8900, -200.7527, -195.6583, -199.9040, -213.7544],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0721, device='cuda:0', dtype=torch.float64)
tensor([-217.2132, -200.6881, -195.4443, -199.8150, -214.0052],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0674, device='cuda:0', dtype=torch.float64)
tensor([-217.5240, -200.6448, -195.2441, -199.7123, -214.2557],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0617, device='cuda:0', dtype=torch.float64)
tensor([-217.5988, -200.5921, -195.2500, -199.7845, -214.3751],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0609, device='cuda:0', dtype=torch.float64)
tensor([-217.5391, -200.5490, -195.3424, -199.9456, -214.4206],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0819, device='cuda:0', dtype=torch.float64)
tensor([-217.5109, -200.5414, -195.3200, -199.9650, -214.4948],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0682, device='cuda:0', dtype=torch.float64)
tensor([-217.4892, -200.5098, -195.2858, -200.0142, -214.5459],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0669, device='cuda:0', dtype=torch.float64)
tensor([-217.5434, -200.5063, -195.1445, -199.9226, -214.6838],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0646, device='cuda:0', dtype=torch.float64)
tensor([-217.5665, -200.4930, -195.0474, -199.9592, -214.7968],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0621, device='cuda:0', dtype=torch.float64)
tensor([-217.4483, -200.4450, -195.0329, -200.0513, -214.7791],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0719, device='cuda:0', dtype=torch.float64)
tensor([-217.2808, -200.4005, -195.0869, -200.2545, -214.7391],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0703, device='cuda:0', dtype=torch.float64)
tensor([-217.1054, -200.3315, -195.1783, -200.5108, -214.6909],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0703, device='cuda:0', dtype=torch.float64)
tensor([-216.6607, -200.2995, -195.4335, -200.8977, -214.4243],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0662, device='cuda:0', dtype=torch.float64)
tensor([-216.2664, -200.2703, -195.6307, -201.2826, -214.1592],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0561, device='cuda:0', dtype=torch.float64)
tensor([-215.9658, -200.2356, -195.6508, -201.4752, -213.8836],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0535, device='cuda:0', dtype=torch.float64)
tensor([-215.5709, -200.2259, -195.6840, -201.6624, -213.5124],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0684, device='cuda:0', dtype=torch.float64)
tensor([-215.1730, -200.2441, -195.7021, -201.8656, -213.1103],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0494, device='cuda:0', dtype=torch.float64)
tensor([-214.7812, -200.2846, -195.6888, -201.9507, -212.7149],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0579, device='cuda:0', dtype=torch.float64)
tensor([-214.4261, -200.2683, -195.5095, -201.7791, -212.3338],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0611, device='cuda:0', dtype=torch.float64)
tensor([-214.2082, -200.2136, -195.2512, -201.5661, -212.0480],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0605, device='cuda:0', dtype=torch.float64)
tensor([-214.0186, -200.1651, -195.0119, -201.3280, -211.8381],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0759, device='cuda:0', dtype=torch.float64)
tensor([-213.7817, -200.1084, -194.7270, -201.0025, -211.6275],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0637, device='cuda:0', dtype=torch.float64)
tensor([-213.4895, -200.0504, -194.4739, -200.6632, -211.3741],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0612, device='cuda:0', dtype=torch.float64)
tensor([-213.2999, -200.0054, -194.2319, -200.4280, -211.2341],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0497, device='cuda:0', dtype=torch.float64)
tensor([-212.9890, -199.9751, -194.0665, -200.2140, -211.0467],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0569, device='cuda:0', dtype=torch.float64)
tensor([-212.7666, -199.9322, -193.8781, -200.0249, -210.9155],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0493, device='cuda:0', dtype=torch.float64)
tensor([-212.6808, -199.8833, -193.5845, -199.6853, -210.9504],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0608, device='cuda:0', dtype=torch.float64)
tensor([-212.5855, -199.8084, -193.3213, -199.4135, -210.9303],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0742, device='cuda:0', dtype=torch.float64)
tensor([-212.5212, -199.7778, -193.0089, -199.0935, -210.9358],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0608, device='cuda:0', dtype=torch.float64)
tensor([-212.5684, -199.7278, -192.7161, -198.8715, -211.0318],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0555, device='cuda:0', dtype=torch.float64)
tensor([-212.6095, -199.7041, -192.4722, -198.7740, -211.0873],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0557, device='cuda:0', dtype=torch.float64)
tensor([-212.6305, -199.7029, -192.3162, -198.7667, -211.1606],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0596, device='cuda:0', dtype=torch.float64)
tensor([-212.6117, -199.7251, -192.2405, -198.8469, -211.2079],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0481, device='cuda:0', dtype=torch.float64)
tensor([-212.6465, -199.7403, -192.2025, -198.9895, -211.3009],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0556, device='cuda:0', dtype=torch.float64)
tensor([-212.5652, -199.7982, -192.2757, -199.2617, -211.2768],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0600, device='cuda:0', dtype=torch.float64)
tensor([-212.5965, -199.8556, -192.3684, -199.5475, -211.3459],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0453, device='cuda:0', dtype=torch.float64)
tensor([-212.4737, -199.9217, -192.5504, -199.8806, -211.3198],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0598, device='cuda:0', dtype=torch.float64)
tensor([-212.3320, -199.9876, -192.7490, -200.1931, -211.3289],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0484, device='cuda:0', dtype=torch.float64)
tensor([-212.1521, -200.0439, -192.9375, -200.4425, -211.2808],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0596, device='cuda:0', dtype=torch.float64)
tensor([-211.8654, -200.0926, -193.1474, -200.7083, -211.1586],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0655, device='cuda:0', dtype=torch.float64)
tensor([-211.5871, -200.1364, -193.3217, -200.8997, -211.0769],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0468, device='cuda:0', dtype=torch.float64)
tensor([-211.3414, -200.1818, -193.5091, -201.1143, -211.0213],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0562, device='cuda:0', dtype=torch.float64)
tensor([-211.1348, -200.1900, -193.6321, -201.2751, -210.9951],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0584, device='cuda:0', dtype=torch.float64)
tensor([-211.0425, -200.1770, -193.8246, -201.6057, -210.9981],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0649, device='cuda:0', dtype=torch.float64)
tensor([-211.0049, -200.1339, -193.9635, -201.8637, -211.0694],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0429, device='cuda:0', dtype=torch.float64)
tensor([-210.9536, -200.0693, -194.0727, -202.0237, -211.1044],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0437, device='cuda:0', dtype=torch.float64)
tensor([-210.9214, -200.0081, -194.1521, -202.1299, -211.1683],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0556, device='cuda:0', dtype=torch.float64)
tensor([-210.8740, -199.9562, -194.2649, -202.2719, -211.1956],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0600, device='cuda:0', dtype=torch.float64)
tensor([-210.7030, -199.9097, -194.4401, -202.4707, -211.1418],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0522, device='cuda:0', dtype=torch.float64)
tensor([-210.5116, -199.8311, -194.5453, -202.5596, -211.1016],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0644, device='cuda:0', dtype=torch.float64)
tensor([-210.3796, -199.6788, -194.5032, -202.4911, -211.0988],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0492, device='cuda:0', dtype=torch.float64)
tensor([-210.2127, -199.5526, -194.4187, -202.3067, -211.0548],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0540, device='cuda:0', dtype=torch.float64)
tensor([-210.0336, -199.4196, -194.3868, -202.1737, -211.0258],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0500, device='cuda:0', dtype=torch.float64)
tensor([-209.9430, -199.2711, -194.3049, -202.0374, -211.0352],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0461, device='cuda:0', dtype=torch.float64)
tensor([-209.8199, -199.1346, -194.2015, -201.8556, -211.0511],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0447, device='cuda:0', dtype=torch.float64)
tensor([-209.7368, -199.0174, -194.0866, -201.6853, -211.1073],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0587, device='cuda:0', dtype=torch.float64)
tensor([-209.7251, -198.8965, -193.9296, -201.5308, -211.1953],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0573, device='cuda:0', dtype=torch.float64)
tensor([-209.6960, -198.7779, -193.7998, -201.4159, -211.2664],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0522, device='cuda:0', dtype=torch.float64)
tensor([-209.5388, -198.6858, -193.7752, -201.4112, -211.2038],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0470, device='cuda:0', dtype=torch.float64)
tensor([-209.3725, -198.6225, -193.8079, -201.4866, -211.1523],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0581, device='cuda:0', dtype=torch.float64)
tensor([-209.2170, -198.5804, -193.8569, -201.5817, -211.1101],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0480, device='cuda:0', dtype=torch.float64)
tensor([-209.0671, -198.5699, -193.9269, -201.7120, -211.0652],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0326, device='cuda:0', dtype=torch.float64)
tensor([-208.9228, -198.5686, -193.9645, -201.8000, -210.9890],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0515, device='cuda:0', dtype=torch.float64)
tensor([-208.8094, -198.5581, -193.9217, -201.8219, -210.9265],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0463, device='cuda:0', dtype=torch.float64)
tensor([-208.7691, -198.5636, -193.8321, -201.8046, -210.9503],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0486, device='cuda:0', dtype=torch.float64)
tensor([-208.7566, -198.5515, -193.6478, -201.6557, -210.9894],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0429, device='cuda:0', dtype=torch.float64)
tensor([-208.5408, -198.5663, -193.6100, -201.6173, -210.8466],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0446, device='cuda:0', dtype=torch.float64)
tensor([-208.3364, -198.5893, -193.6018, -201.6237, -210.7072],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0474, device='cuda:0', dtype=torch.float64)
tensor([-208.0478, -198.6305, -193.6783, -201.6866, -210.5100],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0464, device='cuda:0', dtype=torch.float64)
tensor([-207.7276, -198.7183, -193.8109, -201.8196, -210.2741],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0397, device='cuda:0', dtype=torch.float64)
tensor([-207.3768, -198.7985, -193.9711, -201.9507, -210.0369],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0475, device='cuda:0', dtype=torch.float64)
tensor([-207.1038, -198.8803, -194.1176, -202.1424, -209.8892],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0433, device='cuda:0', dtype=torch.float64)
tensor([-206.9066, -198.9856, -194.2629, -202.3736, -209.7859],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0434, device='cuda:0', dtype=torch.float64)
tensor([-206.8215, -199.0293, -194.3099, -202.5076, -209.7471],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0395, device='cuda:0', dtype=torch.float64)
tensor([-206.7684, -199.0337, -194.2735, -202.5227, -209.6976],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0348, device='cuda:0', dtype=torch.float64)
tensor([-206.7963, -199.0333, -194.2060, -202.4998, -209.7159],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0441, device='cuda:0', dtype=torch.float64)
tensor([-206.7825, -199.0120, -194.1208, -202.4226, -209.6865],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0385, device='cuda:0', dtype=torch.float64)
tensor([-206.8249, -198.9816, -194.0055, -202.3652, -209.6724],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0389, device='cuda:0', dtype=torch.float64)
tensor([-206.8815, -198.9881, -193.8992, -202.3519, -209.6515],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0386, device='cuda:0', dtype=torch.float64)
tensor([-206.9650, -199.0139, -193.8221, -202.4044, -209.6631],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0497, device='cuda:0', dtype=torch.float64)
tensor([-206.9944, -199.0683, -193.7888, -202.4347, -209.6819],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0450, device='cuda:0', dtype=torch.float64)
tensor([-206.9948, -199.0780, -193.7465, -202.3958, -209.7149],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0468, device='cuda:0', dtype=torch.float64)
tensor([-207.0178, -199.0424, -193.6467, -202.2642, -209.7943],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0443, device='cuda:0', dtype=torch.float64)
tensor([-207.0082, -199.0142, -193.5674, -202.1523, -209.8199],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0445, device='cuda:0', dtype=torch.float64)
tensor([-207.1076, -199.0119, -193.4625, -202.0811, -209.9301],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0429, device='cuda:0', dtype=torch.float64)
tensor([-207.2349, -198.9931, -193.3583, -202.0530, -210.0518],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0455, device='cuda:0', dtype=torch.float64)
tensor([-207.3933, -198.9266, -193.1778, -201.9435, -210.1995],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0453, device='cuda:0', dtype=torch.float64)
tensor([-207.5564, -198.8350, -193.0353, -201.9014, -210.3595],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0473, device='cuda:0', dtype=torch.float64)
tensor([-207.7674, -198.7388, -192.8729, -201.8925, -210.5496],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0421, device='cuda:0', dtype=torch.float64)
tensor([-207.9643, -198.6524, -192.7324, -201.9140, -210.7043],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0470, device='cuda:0', dtype=torch.float64)
tensor([-208.0806, -198.5803, -192.5980, -201.9084, -210.8047],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0394, device='cuda:0', dtype=torch.float64)
tensor([-208.1970, -198.5111, -192.4577, -201.8668, -210.9264],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0449, device='cuda:0', dtype=torch.float64)
tensor([-208.2341, -198.5073, -192.4659, -202.0087, -210.9916],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0376, device='cuda:0', dtype=torch.float64)
tensor([-208.2246, -198.5060, -192.4859, -202.1191, -210.9953],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0370, device='cuda:0', dtype=torch.float64)
tensor([-208.2070, -198.5221, -192.5106, -202.2234, -210.9843],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0407, device='cuda:0', dtype=torch.float64)
tensor([-208.1430, -198.5466, -192.5852, -202.3742, -210.9409],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0470, device='cuda:0', dtype=torch.float64)
tensor([-208.0474, -198.5799, -192.6864, -202.5421, -210.8661],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0486, device='cuda:0', dtype=torch.float64)
tensor([-207.9220, -198.5938, -192.7791, -202.6512, -210.7792],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0469, device='cuda:0', dtype=torch.float64)
tensor([-207.8120, -198.5698, -192.8739, -202.7620, -210.6903],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0423, device='cuda:0', dtype=torch.float64)
tensor([-207.6706, -198.5603, -192.9355, -202.8298, -210.5233],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0394, device='cuda:0', dtype=torch.float64)
tensor([-207.5519, -198.5583, -193.0547, -202.9657, -210.3993],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0345, device='cuda:0', dtype=torch.float64)
tensor([-207.4342, -198.5458, -193.1476, -203.0544, -210.2938],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0394, device='cuda:0', dtype=torch.float64)
tensor([-207.3559, -198.5092, -193.1791, -203.0738, -210.2191],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0454, device='cuda:0', dtype=torch.float64)
tensor([-207.2540, -198.4269, -193.1479, -202.9698, -210.1200],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0395, device='cuda:0', dtype=torch.float64)
tensor([-207.1710, -198.3166, -193.0391, -202.7671, -210.0110],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0358, device='cuda:0', dtype=torch.float64)
tensor([-207.0812, -198.2288, -192.9686, -202.6197, -209.8936],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0373, device='cuda:0', dtype=torch.float64)
tensor([-206.9349, -198.1477, -192.9631, -202.5290, -209.7524],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0422, device='cuda:0', dtype=torch.float64)
tensor([-206.9062, -198.0454, -192.8715, -202.3917, -209.6803],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0328, device='cuda:0', dtype=torch.float64)
tensor([-206.9038, -197.9616, -192.7904, -202.2807, -209.6553],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0351, device='cuda:0', dtype=torch.float64)
tensor([-206.9363, -197.8900, -192.7133, -202.1984, -209.6550],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0399, device='cuda:0', dtype=torch.float64)
tensor([-206.9601, -197.8248, -192.6350, -202.1071, -209.6544],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0383, device='cuda:0', dtype=torch.float64)
tensor([-206.9066, -197.7851, -192.5941, -202.0307, -209.5912],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0333, device='cuda:0', dtype=torch.float64)
tensor([-206.8577, -197.7526, -192.5154, -201.8961, -209.5254],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0368, device='cuda:0', dtype=torch.float64)
tensor([-206.8655, -197.6268, -192.3276, -201.6500, -209.4754],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0384, device='cuda:0', dtype=torch.float64)
tensor([-206.7881, -197.5439, -192.2803, -201.5517, -209.3877],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0374, device='cuda:0', dtype=torch.float64)
tensor([-206.6910, -197.4869, -192.2926, -201.5171, -209.3124],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0397, device='cuda:0', dtype=torch.float64)
tensor([-206.6195, -197.4179, -192.2623, -201.4112, -209.2611],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0329, device='cuda:0', dtype=torch.float64)
tensor([-206.5339, -197.3794, -192.2922, -201.3819, -209.2134],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0432, device='cuda:0', dtype=torch.float64)
tensor([-206.4413, -197.3420, -192.3079, -201.3185, -209.1882],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0464, device='cuda:0', dtype=torch.float64)
tensor([-206.2990, -197.3267, -192.3913, -201.3118, -209.1520],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0348, device='cuda:0', dtype=torch.float64)
tensor([-206.1918, -197.3191, -192.5003, -201.3414, -209.1637],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0290, device='cuda:0', dtype=torch.float64)
tensor([-206.0373, -197.3230, -192.5984, -201.3363, -209.1106],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0449, device='cuda:0', dtype=torch.float64)
tensor([-205.8947, -197.3740, -192.7408, -201.3844, -209.0733],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0435, device='cuda:0', dtype=torch.float64)
tensor([-205.6935, -197.4628, -192.8957, -201.4515, -208.9856],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0343, device='cuda:0', dtype=torch.float64)
tensor([-205.4474, -197.5511, -193.0545, -201.4917, -208.8545],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0354, device='cuda:0', dtype=torch.float64)
tensor([-205.2190, -197.6368, -193.1770, -201.4816, -208.7466],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0387, device='cuda:0', dtype=torch.float64)
tensor([-205.0387, -197.7069, -193.2499, -201.4316, -208.6733],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0393, device='cuda:0', dtype=torch.float64)
tensor([-204.8641, -197.7877, -193.3882, -201.4526, -208.6258],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0391, device='cuda:0', dtype=torch.float64)
tensor([-204.6742, -197.8515, -193.5414, -201.4684, -208.5565],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0346, device='cuda:0', dtype=torch.float64)
tensor([-204.4909, -197.9226, -193.7034, -201.5167, -208.5034],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0366, device='cuda:0', dtype=torch.float64)
tensor([-204.3391, -197.9767, -193.8551, -201.5732, -208.4894],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0427, device='cuda:0', dtype=torch.float64)
tensor([-204.1733, -198.0515, -194.0356, -201.6948, -208.4360],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0353, device='cuda:0', dtype=torch.float64)
tensor([-204.0280, -198.1355, -194.2228, -201.8715, -208.3777],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0468, device='cuda:0', dtype=torch.float64)
tensor([-203.9200, -198.2188, -194.3841, -202.0339, -208.3326],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0333, device='cuda:0', dtype=torch.float64)
tensor([-203.8251, -198.2968, -194.5053, -202.1603, -208.2876],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0320, device='cuda:0', dtype=torch.float64)
tensor([-203.8003, -198.3530, -194.6057, -202.2840, -208.2952],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0342, device='cuda:0', dtype=torch.float64)
tensor([-203.7968, -198.3907, -194.6604, -202.3563, -208.3139],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0345, device='cuda:0', dtype=torch.float64)
tensor([-203.8241, -198.4134, -194.6800, -202.3829, -208.3554],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0332, device='cuda:0', dtype=torch.float64)
tensor([-203.8865, -198.4423, -194.6996, -202.4181, -208.4206],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0395, device='cuda:0', dtype=torch.float64)
tensor([-203.9832, -198.4755, -194.7347, -202.4862, -208.4974],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0318, device='cuda:0', dtype=torch.float64)
tensor([-204.0886, -198.5141, -194.7434, -202.5340, -208.5665],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0362, device='cuda:0', dtype=torch.float64)
tensor([-204.2132, -198.5409, -194.7033, -202.5219, -208.6397],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0364, device='cuda:0', dtype=torch.float64)
tensor([-204.3395, -198.5613, -194.6448, -202.4545, -208.7190],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0388, device='cuda:0', dtype=torch.float64)
tensor([-204.4677, -198.5486, -194.5755, -202.3588, -208.8145],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0297, device='cuda:0', dtype=torch.float64)
tensor([-204.6251, -198.5161, -194.4860, -202.2483, -208.9249],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0387, device='cuda:0', dtype=torch.float64)
tensor([-204.7999, -198.4615, -194.3701, -202.0966, -209.0539],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0321, device='cuda:0', dtype=torch.float64)
tensor([-204.9647, -198.3519, -194.2009, -201.8656, -209.1917],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0306, device='cuda:0', dtype=torch.float64)
tensor([-205.1571, -198.2666, -194.0348, -201.6563, -209.3446],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0343, device='cuda:0', dtype=torch.float64)
tensor([-205.3502, -198.2057, -193.8537, -201.4504, -209.4945],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0414, device='cuda:0', dtype=torch.float64)
tensor([-205.5173, -198.1615, -193.7402, -201.3186, -209.6359],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0510, device='cuda:0', dtype=torch.float64)
tensor([-205.7235, -198.0866, -193.5836, -201.1441, -209.8050],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0334, device='cuda:0', dtype=torch.float64)
tensor([-205.8876, -198.0284, -193.4495, -200.9857, -209.9361],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0389, device='cuda:0', dtype=torch.float64)
tensor([-205.9858, -197.9986, -193.4440, -200.9394, -210.0527],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0383, device='cuda:0', dtype=torch.float64)
tensor([-206.0457, -198.0168, -193.5122, -200.9538, -210.1505],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0468, device='cuda:0', dtype=torch.float64)
tensor([-206.1350, -198.0572, -193.6242, -201.0299, -210.2824],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0283, device='cuda:0', dtype=torch.float64)
tensor([-206.2185, -198.0870, -193.7141, -201.0814, -210.4028],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0331, device='cuda:0', dtype=torch.float64)
tensor([-206.3029, -198.1457, -193.8489, -201.1998, -210.5394],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0284, device='cuda:0', dtype=torch.float64)
tensor([-206.3414, -198.2096, -194.0072, -201.3307, -210.6208],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0380, device='cuda:0', dtype=torch.float64)
tensor([-206.3409, -198.2569, -194.1843, -201.4748, -210.6563],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0304, device='cuda:0', dtype=torch.float64)
tensor([-206.3647, -198.2725, -194.3082, -201.5600, -210.7057],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0341, device='cuda:0', dtype=torch.float64)
tensor([-206.3930, -198.3002, -194.3955, -201.6215, -210.7501],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0347, device='cuda:0', dtype=torch.float64)
tensor([-206.4116, -198.3259, -194.4869, -201.6911, -210.7739],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0409, device='cuda:0', dtype=torch.float64)
tensor([-206.4451, -198.3582, -194.5342, -201.7188, -210.7935],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0424, device='cuda:0', dtype=torch.float64)
tensor([-206.4489, -198.3890, -194.6011, -201.7603, -210.7857],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0350, device='cuda:0', dtype=torch.float64)
tensor([-206.4622, -198.4379, -194.6704, -201.8045, -210.7907],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0307, device='cuda:0', dtype=torch.float64)
tensor([-206.4587, -198.4856, -194.7334, -201.8323, -210.7986],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0351, device='cuda:0', dtype=torch.float64)
tensor([-206.4596, -198.5377, -194.7752, -201.8367, -210.7979],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0298, device='cuda:0', dtype=torch.float64)
tensor([-206.4906, -198.5572, -194.7694, -201.7806, -210.8330],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0305, device='cuda:0', dtype=torch.float64)
tensor([-206.4919, -198.5536, -194.7633, -201.7206, -210.8240],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0382, device='cuda:0', dtype=torch.float64)
tensor([-206.5153, -198.5666, -194.7460, -201.6628, -210.7982],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0392, device='cuda:0', dtype=torch.float64)
tensor([-206.5562, -198.5747, -194.6978, -201.5631, -210.7765],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0445, device='cuda:0', dtype=torch.float64)
tensor([-206.6057, -198.5281, -194.6305, -201.4479, -210.7769],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0326, device='cuda:0', dtype=torch.float64)
tensor([-206.6822, -198.5088, -194.5816, -201.3667, -210.7977],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0373, device='cuda:0', dtype=torch.float64)
tensor([-206.8058, -198.4852, -194.5497, -201.3151, -210.8805],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0372, device='cuda:0', dtype=torch.float64)
tensor([-206.9350, -198.4382, -194.5657, -201.3202, -210.9924],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0271, device='cuda:0', dtype=torch.float64)
tensor([-207.0715, -198.3890, -194.5692, -201.3144, -211.1078],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0351, device='cuda:0', dtype=torch.float64)
tensor([-207.1504, -198.3431, -194.6127, -201.3193, -211.1855],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0346, device='cuda:0', dtype=torch.float64)
tensor([-207.1677, -198.3096, -194.6723, -201.3203, -211.2218],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0450, device='cuda:0', dtype=torch.float64)
tensor([-207.2070, -198.2608, -194.6976, -201.2899, -211.2646],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0341, device='cuda:0', dtype=torch.float64)
tensor([-207.2732, -198.1954, -194.6943, -201.2457, -211.2975],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0310, device='cuda:0', dtype=torch.float64)
tensor([-207.3688, -198.1247, -194.6719, -201.2016, -211.3544],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0343, device='cuda:0', dtype=torch.float64)
tensor([-207.4601, -198.0872, -194.7211, -201.2402, -211.4456],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0251, device='cuda:0', dtype=torch.float64)
tensor([-207.5447, -198.0520, -194.7538, -201.2608, -211.5247],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0417, device='cuda:0', dtype=torch.float64)
tensor([-207.5986, -197.9958, -194.7862, -201.2509, -211.5881],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0356, device='cuda:0', dtype=torch.float64)
tensor([-207.6657, -197.9264, -194.8338, -201.2461, -211.6749],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0328, device='cuda:0', dtype=torch.float64)
tensor([-207.6967, -197.8751, -194.9162, -201.2848, -211.7150],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0552, device='cuda:0', dtype=torch.float64)
tensor([-207.7041, -197.8104, -194.9581, -201.2530, -211.7019],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0356, device='cuda:0', dtype=torch.float64)
tensor([-207.7130, -197.7493, -195.0003, -201.2269, -211.6942],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0294, device='cuda:0', dtype=torch.float64)
tensor([-207.6709, -197.6821, -195.0415, -201.1942, -211.6484],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0381, device='cuda:0', dtype=torch.float64)
tensor([-207.5771, -197.6135, -195.0858, -201.1421, -211.5448],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0384, device='cuda:0', dtype=torch.float64)
tensor([-207.4867, -197.5899, -195.1559, -201.1213, -211.4339],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0275, device='cuda:0', dtype=torch.float64)
tensor([-207.4049, -197.5532, -195.1815, -201.0655, -211.3196],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0293, device='cuda:0', dtype=torch.float64)
tensor([-207.3027, -197.5286, -195.2480, -201.0322, -211.2102],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0371, device='cuda:0', dtype=torch.float64)
tensor([-207.1523, -197.5473, -195.3720, -201.0484, -211.0618],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0269, device='cuda:0', dtype=torch.float64)
tensor([-207.0098, -197.5776, -195.4815, -201.0699, -210.9109],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0333, device='cuda:0', dtype=torch.float64)
tensor([-206.9025, -197.5719, -195.5381, -201.0411, -210.7723],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0316, device='cuda:0', dtype=torch.float64)
tensor([-206.7884, -197.5594, -195.5779, -201.0082, -210.6218],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0302, device='cuda:0', dtype=torch.float64)
tensor([-206.7294, -197.5434, -195.5906, -200.9670, -210.5219],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0303, device='cuda:0', dtype=torch.float64)
tensor([-206.6984, -197.5156, -195.5855, -200.9303, -210.4402],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0422, device='cuda:0', dtype=torch.float64)
tensor([-206.7057, -197.5083, -195.6129, -200.9264, -210.4087],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0402, device='cuda:0', dtype=torch.float64)
tensor([-206.6914, -197.5185, -195.6447, -200.9232, -210.3524],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0310, device='cuda:0', dtype=torch.float64)
tensor([-206.6779, -197.5288, -195.6417, -200.8786, -210.2804],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0367, device='cuda:0', dtype=torch.float64)
tensor([-206.6766, -197.5216, -195.6275, -200.8297, -210.2116],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0351, device='cuda:0', dtype=torch.float64)
tensor([-206.7354, -197.5123, -195.5809, -200.7814, -210.1905],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0322, device='cuda:0', dtype=torch.float64)
tensor([-206.7967, -197.4951, -195.4830, -200.6775, -210.1617],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0307, device='cuda:0', dtype=torch.float64)
tensor([-206.8603, -197.4823, -195.3902, -200.5864, -210.1445],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0322, device='cuda:0', dtype=torch.float64)
tensor([-206.9932, -197.4441, -195.2637, -200.4944, -210.1861],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0295, device='cuda:0', dtype=torch.float64)
tensor([-207.1436, -197.3952, -195.1383, -200.4158, -210.2323],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0338, device='cuda:0', dtype=torch.float64)
tensor([-207.2522, -197.3764, -195.0714, -200.3765, -210.2482],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0304, device='cuda:0', dtype=torch.float64)
tensor([-207.3207, -197.3775, -195.0743, -200.3970, -210.2632],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0319, device='cuda:0', dtype=torch.float64)
tensor([-207.4078, -197.3844, -195.0565, -200.3823, -210.2914],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0280, device='cuda:0', dtype=torch.float64)
tensor([-207.4705, -197.3961, -195.0682, -200.3962, -210.3097],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0450, device='cuda:0', dtype=torch.float64)
tensor([-207.5541, -197.3985, -195.0768, -200.4090, -210.3664],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0345, device='cuda:0', dtype=torch.float64)
tensor([-207.6368, -197.4116, -195.0889, -200.4296, -210.4307],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0303, device='cuda:0', dtype=torch.float64)
tensor([-207.6647, -197.4591, -195.1487, -200.4817, -210.4549],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0364, device='cuda:0', dtype=torch.float64)
tensor([-207.6814, -197.5010, -195.2313, -200.5425, -210.4703],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0261, device='cuda:0', dtype=torch.float64)
tensor([-207.6740, -197.5500, -195.3621, -200.6491, -210.4785],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0305, device='cuda:0', dtype=torch.float64)
tensor([-207.6999, -197.5794, -195.4594, -200.7369, -210.5097],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0275, device='cuda:0', dtype=torch.float64)
tensor([-207.7753, -197.5997, -195.5346, -200.8225, -210.5647],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0358, device='cuda:0', dtype=torch.float64)
tensor([-207.8782, -197.6140, -195.5721, -200.8844, -210.6316],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0301, device='cuda:0', dtype=torch.float64)
tensor([-207.9847, -197.6402, -195.5999, -200.9311, -210.6881],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0228, device='cuda:0', dtype=torch.float64)
tensor([-208.0704, -197.6621, -195.6164, -200.9473, -210.7371],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0336, device='cuda:0', dtype=torch.float64)
tensor([-208.1353, -197.6751, -195.6418, -200.9677, -210.7792],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0312, device='cuda:0', dtype=torch.float64)
tensor([-208.2304, -197.7073, -195.7110, -201.0426, -210.8644],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0289, device='cuda:0', dtype=torch.float64)
tensor([-208.3360, -197.7465, -195.7767, -201.1327, -210.9501],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0350, device='cuda:0', dtype=torch.float64)
tensor([-208.3407, -197.8194, -195.8995, -201.2489, -210.9500],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0430, device='cuda:0', dtype=torch.float64)
tensor([-208.3653, -197.8713, -195.9910, -201.3321, -210.9362],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0264, device='cuda:0', dtype=torch.float64)
tensor([-208.3277, -197.9550, -196.1335, -201.4416, -210.8956],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0292, device='cuda:0', dtype=torch.float64)
tensor([-208.2679, -198.0564, -196.2995, -201.5643, -210.8494],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0280, device='cuda:0', dtype=torch.float64)
tensor([-208.2253, -198.1376, -196.4532, -201.6766, -210.8109],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0377, device='cuda:0', dtype=torch.float64)
tensor([-208.1856, -198.2136, -196.6408, -201.8164, -210.7835],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0317, device='cuda:0', dtype=torch.float64)
tensor([-208.1623, -198.2574, -196.7991, -201.9298, -210.7755],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0316, device='cuda:0', dtype=torch.float64)
tensor([-208.1820, -198.2512, -196.8954, -201.9936, -210.8043],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0285, device='cuda:0', dtype=torch.float64)
tensor([-208.1961, -198.2147, -196.9421, -202.0087, -210.8187],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0342, device='cuda:0', dtype=torch.float64)
tensor([-208.2011, -198.2222, -196.9901, -202.0288, -210.8204],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0345, device='cuda:0', dtype=torch.float64)
tensor([-208.2175, -198.2154, -197.0130, -202.0213, -210.8260],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0300, device='cuda:0', dtype=torch.float64)
tensor([-208.2502, -198.1716, -196.9908, -201.9719, -210.8521],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0326, device='cuda:0', dtype=torch.float64)
tensor([-208.2930, -198.1191, -196.9397, -201.8874, -210.8767],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0267, device='cuda:0', dtype=torch.float64)
tensor([-208.3349, -198.0534, -196.8362, -201.7430, -210.8902],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0275, device='cuda:0', dtype=torch.float64)
tensor([-208.3685, -198.0022, -196.7380, -201.6171, -210.8847],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0291, device='cuda:0', dtype=torch.float64)
tensor([-208.3981, -197.9776, -196.6660, -201.5099, -210.8890],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0247, device='cuda:0', dtype=torch.float64)
tensor([-208.4592, -197.9365, -196.5778, -201.4031, -210.9364],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0264, device='cuda:0', dtype=torch.float64)
tensor([-208.5215, -197.8761, -196.4680, -201.2825, -210.9891],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0302, device='cuda:0', dtype=torch.float64)
tensor([-208.5781, -197.8122, -196.3839, -201.1829, -211.0278],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0254, device='cuda:0', dtype=torch.float64)
tensor([-208.6194, -197.7358, -196.3108, -201.0915, -211.0757],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0556, device='cuda:0', dtype=torch.float64)
tensor([-208.6914, -197.6504, -196.2417, -201.0014, -211.1491],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0308, device='cuda:0', dtype=torch.float64)
tensor([-208.7739, -197.6021, -196.2209, -200.9810, -211.2392],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0248, device='cuda:0', dtype=torch.float64)
tensor([-208.8224, -197.5645, -196.2043, -200.9388, -211.2983],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0294, device='cuda:0', dtype=torch.float64)
tensor([-208.8296, -197.5350, -196.1903, -200.8775, -211.3182],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0372, device='cuda:0', dtype=torch.float64)
tensor([-208.8197, -197.4834, -196.1610, -200.7844, -211.3319],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0244, device='cuda:0', dtype=torch.float64)
tensor([-208.7853, -197.4380, -196.1467, -200.7027, -211.3344],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0295, device='cuda:0', dtype=torch.float64)
tensor([-208.8092, -197.3915, -196.1416, -200.6537, -211.3954],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0316, device='cuda:0', dtype=torch.float64)
tensor([-208.8144, -197.3683, -196.1731, -200.6426, -211.4422],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0255, device='cuda:0', dtype=torch.float64)
tensor([-208.8054, -197.3655, -196.2159, -200.6454, -211.4517],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0292, device='cuda:0', dtype=torch.float64)
tensor([-208.7994, -197.3571, -196.2452, -200.6283, -211.4531],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0323, device='cuda:0', dtype=torch.float64)
tensor([-208.8088, -197.3411, -196.2729, -200.6125, -211.4699],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0357, device='cuda:0', dtype=torch.float64)
tensor([-208.7892, -197.3521, -196.3470, -200.6422, -211.4756],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0504, device='cuda:0', dtype=torch.float64)
tensor([-208.7573, -197.3971, -196.4756, -200.7262, -211.4817],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0267, device='cuda:0', dtype=torch.float64)
tensor([-208.7376, -197.4555, -196.6343, -200.8495, -211.5051],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0298, device='cuda:0', dtype=torch.float64)
tensor([-208.7469, -197.5011, -196.7559, -200.9556, -211.5265],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0266, device='cuda:0', dtype=torch.float64)
tensor([-208.7740, -197.5433, -196.8468, -201.0301, -211.5451],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0253, device='cuda:0', dtype=torch.float64)
tensor([-208.7870, -197.5801, -196.9251, -201.1009, -211.5193],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0280, device='cuda:0', dtype=torch.float64)
tensor([-208.7753, -197.6165, -197.0080, -201.1611, -211.4739],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0235, device='cuda:0', dtype=torch.float64)
tensor([-208.7773, -197.6348, -197.0578, -201.1883, -211.4299],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0228, device='cuda:0', dtype=torch.float64)
tensor([-208.7761, -197.6586, -197.0963, -201.1945, -211.3792],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0306, device='cuda:0', dtype=torch.float64)
tensor([-208.7782, -197.6703, -197.1257, -201.1898, -211.3234],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0357, device='cuda:0', dtype=torch.float64)
tensor([-208.7772, -197.6952, -197.1556, -201.1753, -211.2650],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0308, device='cuda:0', dtype=torch.float64)
tensor([-208.7504, -197.7202, -197.1903, -201.1500, -211.1889],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0233, device='cuda:0', dtype=torch.float64)
tensor([-208.7288, -197.7391, -197.2320, -201.1381, -211.1156],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0248, device='cuda:0', dtype=torch.float64)
tensor([-208.6830, -197.7565, -197.3185, -201.1568, -211.0479],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0290, device='cuda:0', dtype=torch.float64)
tensor([-208.6637, -197.7810, -197.3848, -201.1708, -210.9981],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0268, device='cuda:0', dtype=torch.float64)
tensor([-208.6355, -197.8025, -197.4337, -201.1633, -210.9375],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0339, device='cuda:0', dtype=torch.float64)
tensor([-208.6399, -197.7918, -197.4495, -201.1353, -210.8855],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0412, device='cuda:0', dtype=torch.float64)
tensor([-208.6727, -197.7794, -197.4709, -201.1178, -210.8359],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0437, device='cuda:0', dtype=torch.float64)
tensor([-208.7059, -197.7055, -197.4126, -201.0116, -210.7824],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0258, device='cuda:0', dtype=torch.float64)
tensor([-208.7493, -197.6357, -197.3418, -200.9058, -210.7386],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0251, device='cuda:0', dtype=torch.float64)
tensor([-208.7819, -197.6065, -197.3408, -200.8800, -210.7106],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0237, device='cuda:0', dtype=torch.float64)
tensor([-208.8256, -197.6073, -197.3202, -200.8380, -210.6917],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0250, device='cuda:0', dtype=torch.float64)
tensor([-208.8864, -197.6035, -197.2945, -200.8026, -210.6981],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0245, device='cuda:0', dtype=torch.float64)
tensor([-208.9656, -197.5921, -197.2564, -200.7547, -210.7120],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0338, device='cuda:0', dtype=torch.float64)
tensor([-209.0317, -197.5716, -197.1857, -200.6638, -210.6903],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0209, device='cuda:0', dtype=torch.float64)
tensor([-209.0883, -197.5557, -197.1282, -200.5729, -210.6776],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0242, device='cuda:0', dtype=torch.float64)
tensor([-209.1588, -197.5239, -197.0344, -200.4523, -210.6697],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0274, device='cuda:0', dtype=torch.float64)
tensor([-209.2384, -197.4897, -196.9732, -200.3713, -210.6875],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0342, device='cuda:0', dtype=torch.float64)
tensor([-209.3259, -197.4691, -196.9316, -200.3180, -210.7283],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0229, device='cuda:0', dtype=torch.float64)
tensor([-209.3979, -197.4722, -196.9202, -200.2886, -210.7668],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0195, device='cuda:0', dtype=torch.float64)
tensor([-209.4292, -197.4952, -196.8893, -200.2238, -210.7713],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0236, device='cuda:0', dtype=torch.float64)
tensor([-209.4428, -197.5289, -196.8593, -200.1608, -210.7698],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0334, device='cuda:0', dtype=torch.float64)
tensor([-209.4266, -197.5585, -196.8441, -200.0936, -210.7380],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0189, device='cuda:0', dtype=torch.float64)
tensor([-209.4035, -197.6140, -196.8910, -200.0911, -210.7145],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0391, device='cuda:0', dtype=torch.float64)
tensor([-209.3508, -197.7207, -197.0412, -200.1812, -210.6870],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0244, device='cuda:0', dtype=torch.float64)
tensor([-209.3155, -197.8124, -197.1992, -200.2945, -210.6844],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0241, device='cuda:0', dtype=torch.float64)
tensor([-209.2945, -197.9013, -197.3631, -200.4255, -210.6940],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0238, device='cuda:0', dtype=torch.float64)
tensor([-209.2937, -197.9483, -197.4491, -200.4655, -210.7358],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0280, device='cuda:0', dtype=torch.float64)
tensor([-209.3093, -198.0026, -197.5383, -200.5158, -210.7908],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0339, device='cuda:0', dtype=torch.float64)
tensor([-209.3157, -198.0401, -197.6324, -200.5736, -210.8388],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0312, device='cuda:0', dtype=torch.float64)
tensor([-209.3698, -198.0422, -197.6738, -200.5981, -210.9364],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0234, device='cuda:0', dtype=torch.float64)
tensor([-209.4184, -198.0591, -197.7208, -200.6293, -211.0153],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0243, device='cuda:0', dtype=torch.float64)
tensor([-209.4255, -198.0892, -197.7843, -200.6579, -211.0658],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0201, device='cuda:0', dtype=torch.float64)
tensor([-209.4433, -198.1114, -197.8223, -200.6679, -211.1098],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0259, device='cuda:0', dtype=torch.float64)
tensor([-209.4888, -198.1042, -197.8108, -200.6433, -211.1706],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0322, device='cuda:0', dtype=torch.float64)
tensor([-209.5163, -198.1322, -197.8521, -200.6567, -211.2050],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0458, device='cuda:0', dtype=torch.float64)
tensor([-209.5638, -198.1424, -197.8428, -200.6085, -211.2468],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0215, device='cuda:0', dtype=torch.float64)
tensor([-209.6068, -198.1341, -197.8343, -200.5715, -211.2921],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0301, device='cuda:0', dtype=torch.float64)
tensor([-209.6906, -198.1038, -197.8046, -200.5376, -211.4012],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0301, device='cuda:0', dtype=torch.float64)
tensor([-209.7722, -198.0707, -197.7558, -200.4895, -211.4982],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0237, device='cuda:0', dtype=torch.float64)
tensor([-209.8594, -198.0392, -197.7370, -200.4851, -211.6007],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0243, device='cuda:0', dtype=torch.float64)
tensor([-209.9266, -198.0056, -197.7292, -200.4856, -211.6884],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0383, device='cuda:0', dtype=torch.float64)
tensor([-209.9928, -197.9964, -197.7364, -200.5042, -211.7760],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0229, device='cuda:0', dtype=torch.float64)
tensor([-210.0632, -197.9849, -197.7444, -200.5286, -211.8645],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0258, device='cuda:0', dtype=torch.float64)
tensor([-210.1313, -197.9698, -197.7459, -200.5415, -211.9398],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0254, device='cuda:0', dtype=torch.float64)
tensor([-210.1678, -197.9586, -197.7570, -200.5449, -211.9820],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0286, device='cuda:0', dtype=torch.float64)
tensor([-210.1708, -197.9930, -197.8231, -200.5904, -211.9855],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0233, device='cuda:0', dtype=torch.float64)
tensor([-210.1972, -198.0218, -197.8896, -200.6472, -212.0123],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0210, device='cuda:0', dtype=torch.float64)
tensor([-210.2172, -198.0496, -197.9580, -200.6904, -212.0464],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0233, device='cuda:0', dtype=torch.float64)
tensor([-210.2315, -198.0950, -198.0461, -200.7588, -212.0627],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0209, device='cuda:0', dtype=torch.float64)
tensor([-210.2500, -198.1203, -198.0925, -200.7842, -212.0756],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0239, device='cuda:0', dtype=torch.float64)
tensor([-210.2429, -198.1633, -198.1925, -200.8472, -212.0886],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0259, device='cuda:0', dtype=torch.float64)
tensor([-210.2101, -198.2143, -198.2837, -200.8876, -212.0587],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0252, device='cuda:0', dtype=torch.float64)
tensor([-210.1275, -198.2830, -198.3813, -200.9179, -211.9760],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0293, device='cuda:0', dtype=torch.float64)
tensor([-210.0492, -198.3640, -198.5045, -200.9794, -211.9002],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0247, device='cuda:0', dtype=torch.float64)
tensor([-209.9624, -198.4782, -198.6563, -201.0687, -211.8133],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0232, device='cuda:0', dtype=torch.float64)
tensor([-209.8985, -198.5679, -198.7770, -201.1340, -211.7549],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0217, device='cuda:0', dtype=torch.float64)
tensor([-209.8240, -198.6532, -198.8805, -201.1774, -211.6807],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0240, device='cuda:0', dtype=torch.float64)
tensor([-209.7324, -198.7429, -198.9871, -201.2151, -211.5884],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0260, device='cuda:0', dtype=torch.float64)
tensor([-209.6699, -198.8029, -199.0770, -201.2553, -211.5350],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0155, device='cuda:0', dtype=torch.float64)
tensor([-209.6095, -198.8569, -199.1595, -201.2905, -211.4808],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0216, device='cuda:0', dtype=torch.float64)
tensor([-209.5441, -198.8870, -199.2026, -201.2838, -211.4276],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0205, device='cuda:0', dtype=torch.float64)
tensor([-209.4703, -198.9092, -199.2378, -201.2737, -211.3559],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0274, device='cuda:0', dtype=torch.float64)
tensor([-209.4274, -198.9084, -199.2673, -201.2676, -211.3340],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0207, device='cuda:0', dtype=torch.float64)
tensor([-209.4039, -198.9118, -199.2857, -201.2480, -211.3273],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0243, device='cuda:0', dtype=torch.float64)
tensor([-209.4274, -198.8818, -199.2516, -201.1928, -211.3610],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0205, device='cuda:0', dtype=torch.float64)
tensor([-209.4433, -198.8393, -199.2078, -201.1234, -211.4021],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0218, device='cuda:0', dtype=torch.float64)
tensor([-209.4665, -198.7874, -199.1097, -201.0039, -211.4331],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0311, device='cuda:0', dtype=torch.float64)
tensor([-209.4667, -198.7523, -199.0435, -200.9109, -211.4413],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0201, device='cuda:0', dtype=torch.float64)
tensor([-209.5063, -198.6866, -198.9771, -200.8435, -211.5000],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0344, device='cuda:0', dtype=torch.float64)
tensor([-209.5577, -198.6244, -198.9077, -200.7796, -211.5626],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0302, device='cuda:0', dtype=torch.float64)
tensor([-209.6207, -198.5576, -198.8401, -200.7215, -211.6442],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0254, device='cuda:0', dtype=torch.float64)
tensor([-209.6312, -198.5161, -198.7849, -200.6578, -211.6531],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0194, device='cuda:0', dtype=torch.float64)
tensor([-209.6429, -198.4897, -198.7381, -200.6032, -211.6556],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0243, device='cuda:0', dtype=torch.float64)
tensor([-209.6690, -198.4660, -198.6745, -200.5388, -211.6468],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0213, device='cuda:0', dtype=torch.float64)
tensor([-209.7118, -198.4399, -198.6039, -200.4727, -211.6596],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0234, device='cuda:0', dtype=torch.float64)
tensor([-209.7474, -198.4053, -198.5288, -200.3971, -211.6681],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0206, device='cuda:0', dtype=torch.float64)
tensor([-209.7660, -198.3984, -198.5069, -200.3703, -211.6669],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0317, device='cuda:0', dtype=torch.float64)
tensor([-209.7545, -198.4419, -198.5217, -200.3691, -211.6288],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0406, device='cuda:0', dtype=torch.float64)
tensor([-209.7258, -198.4937, -198.5274, -200.3427, -211.5574],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0273, device='cuda:0', dtype=torch.float64)
tensor([-209.6886, -198.5446, -198.5308, -200.3020, -211.4823],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0220, device='cuda:0', dtype=torch.float64)
tensor([-209.6403, -198.6170, -198.5785, -200.3000, -211.4225],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0200, device='cuda:0', dtype=torch.float64)
tensor([-209.6014, -198.6716, -198.6200, -200.3004, -211.3657],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0243, device='cuda:0', dtype=torch.float64)
tensor([-209.5862, -198.6952, -198.6065, -200.2621, -211.3260],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0290, device='cuda:0', dtype=torch.float64)
tensor([-209.5865, -198.7272, -198.6051, -200.2513, -211.2982],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0303, device='cuda:0', dtype=torch.float64)
tensor([-209.5959, -198.7566, -198.6073, -200.2497, -211.2933],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0199, device='cuda:0', dtype=torch.float64)
tensor([-209.5939, -198.7875, -198.6083, -200.2456, -211.2792],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0238, device='cuda:0', dtype=torch.float64)
tensor([-209.6132, -198.8105, -198.6059, -200.2490, -211.2974],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0281, device='cuda:0', dtype=torch.float64)
tensor([-209.6346, -198.8509, -198.6300, -200.2726, -211.3254],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0347, device='cuda:0', dtype=torch.float64)
tensor([-209.6413, -198.9048, -198.6596, -200.2964, -211.3162],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0271, device='cuda:0', dtype=torch.float64)
tensor([-209.6550, -198.9540, -198.6974, -200.3320, -211.3288],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0355, device='cuda:0', dtype=torch.float64)
tensor([-209.7163, -198.9862, -198.7188, -200.3734, -211.3872],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0179, device='cuda:0', dtype=torch.float64)
tensor([-209.7720, -199.0335, -198.7611, -200.4317, -211.4494],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0225, device='cuda:0', dtype=torch.float64)
tensor([-209.8210, -199.1032, -198.8402, -200.5198, -211.5122],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0243, device='cuda:0', dtype=torch.float64)
tensor([-209.8809, -199.1544, -198.8939, -200.5884, -211.5775],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0208, device='cuda:0', dtype=torch.float64)
tensor([-209.9182, -199.2194, -198.9479, -200.6494, -211.6007],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0211, device='cuda:0', dtype=torch.float64)
tensor([-209.9703, -199.2795, -198.9998, -200.7120, -211.6330],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0283, device='cuda:0', dtype=torch.float64)
tensor([-210.0183, -199.3406, -199.0780, -200.8031, -211.6801],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0257, device='cuda:0', dtype=torch.float64)
tensor([-210.0367, -199.4124, -199.1400, -200.8731, -211.6902],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0261, device='cuda:0', dtype=torch.float64)
tensor([-210.0677, -199.4942, -199.2115, -200.9656, -211.6941],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0243, device='cuda:0', dtype=torch.float64)
tensor([-210.0821, -199.5905, -199.3007, -201.0748, -211.6673],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0201, device='cuda:0', dtype=torch.float64)
tensor([-210.0978, -199.6646, -199.3781, -201.1650, -211.6483],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0280, device='cuda:0', dtype=torch.float64)
tensor([-210.1158, -199.7317, -199.4280, -201.2321, -211.6134],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0342, device='cuda:0', dtype=torch.float64)
tensor([-210.1644, -199.7587, -199.4213, -201.2587, -211.5920],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0246, device='cuda:0', dtype=torch.float64)
tensor([-210.2080, -199.7921, -199.3960, -201.2620, -211.5616],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0277, device='cuda:0', dtype=torch.float64)
tensor([-210.2472, -199.8216, -199.3494, -201.2422, -211.5325],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0236, device='cuda:0', dtype=torch.float64)
tensor([-210.2736, -199.8591, -199.3410, -201.2490, -211.5066],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0293, device='cuda:0', dtype=torch.float64)
tensor([-210.3277, -199.8678, -199.3336, -201.2600, -211.5464],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0237, device='cuda:0', dtype=torch.float64)
tensor([-210.3599, -199.8759, -199.3156, -201.2520, -211.5600],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0162, device='cuda:0', dtype=torch.float64)
tensor([-210.3866, -199.8767, -199.2930, -201.2371, -211.5792],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0275, device='cuda:0', dtype=torch.float64)
tensor([-210.4117, -199.8744, -199.2653, -201.2163, -211.5982],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0198, device='cuda:0', dtype=torch.float64)
tensor([-210.4296, -199.8792, -199.2487, -201.2054, -211.5941],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0194, device='cuda:0', dtype=torch.float64)
tensor([-210.4426, -199.8931, -199.2477, -201.2034, -211.5984],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0147, device='cuda:0', dtype=torch.float64)
tensor([-210.4737, -199.8954, -199.2316, -201.1890, -211.6298],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0159, device='cuda:0', dtype=torch.float64)
tensor([-210.4839, -199.9123, -199.2242, -201.1790, -211.6207],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0212, device='cuda:0', dtype=torch.float64)
tensor([-210.4946, -199.9345, -199.1965, -201.1506, -211.5981],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0190, device='cuda:0', dtype=torch.float64)
tensor([-210.5113, -199.9573, -199.1897, -201.1537, -211.5976],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0214, device='cuda:0', dtype=torch.float64)
tensor([-210.5030, -199.9848, -199.1829, -201.1394, -211.5703],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0317, device='cuda:0', dtype=torch.float64)
tensor([-210.4974, -200.0013, -199.1724, -201.1188, -211.5594],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0209, device='cuda:0', dtype=torch.float64)
tensor([-210.4832, -200.0178, -199.1913, -201.1151, -211.5560],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0157, device='cuda:0', dtype=torch.float64)
tensor([-210.4631, -200.0250, -199.2130, -201.1089, -211.5654],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0159, device='cuda:0', dtype=torch.float64)
tensor([-210.4400, -200.0219, -199.2381, -201.1094, -211.5738],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0227, device='cuda:0', dtype=torch.float64)
tensor([-210.4403, -200.0198, -199.2846, -201.1391, -211.6136],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0193, device='cuda:0', dtype=torch.float64)
tensor([-210.4247, -200.0408, -199.3560, -201.1878, -211.6225],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0316, device='cuda:0', dtype=torch.float64)
tensor([-210.4105, -200.0640, -199.4111, -201.2191, -211.6243],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0184, device='cuda:0', dtype=torch.float64)
tensor([-210.3720, -200.1139, -199.5065, -201.2781, -211.5950],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0284, device='cuda:0', dtype=torch.float64)
tensor([-210.3448, -200.1239, -199.5373, -201.2838, -211.5674],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0251, device='cuda:0', dtype=torch.float64)
tensor([-210.3404, -200.1197, -199.5340, -201.2670, -211.5586],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0276, device='cuda:0', dtype=torch.float64)
tensor([-210.3501, -200.1110, -199.5119, -201.2284, -211.5526],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0264, device='cuda:0', dtype=torch.float64)
tensor([-210.3397, -200.1073, -199.4963, -201.1820, -211.5346],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0241, device='cuda:0', dtype=torch.float64)
tensor([-210.3552, -200.1016, -199.4687, -201.1361, -211.5392],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0243, device='cuda:0', dtype=torch.float64)
tensor([-210.3442, -200.1070, -199.4444, -201.0833, -211.5004],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0242, device='cuda:0', dtype=torch.float64)
tensor([-210.3419, -200.1226, -199.4171, -201.0260, -211.4516],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0241, device='cuda:0', dtype=torch.float64)
tensor([-210.3447, -200.1293, -199.3729, -200.9628, -211.4157],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0151, device='cuda:0', dtype=torch.float64)
tensor([-210.3359, -200.1391, -199.3451, -200.9151, -211.3727],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0204, device='cuda:0', dtype=torch.float64)
tensor([-210.3431, -200.1508, -199.3103, -200.8757, -211.3305],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0217, device='cuda:0', dtype=torch.float64)
tensor([-210.3602, -200.1703, -199.2861, -200.8535, -211.2904],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0224, device='cuda:0', dtype=torch.float64)
tensor([-210.3543, -200.1920, -199.2738, -200.8299, -211.2347],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0272, device='cuda:0', dtype=torch.float64)
tensor([-210.3569, -200.2309, -199.2791, -200.8201, -211.1868],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0227, device='cuda:0', dtype=torch.float64)
tensor([-210.3970, -200.2483, -199.2650, -200.8113, -211.1751],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0254, device='cuda:0', dtype=torch.float64)
tensor([-210.4038, -200.2982, -199.2958, -200.8229, -211.1317],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0299, device='cuda:0', dtype=torch.float64)
tensor([-210.4227, -200.3293, -199.3209, -200.8306, -211.1037],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0205, device='cuda:0', dtype=torch.float64)
tensor([-210.4476, -200.3572, -199.3439, -200.8358, -211.0916],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0162, device='cuda:0', dtype=torch.float64)
tensor([-210.4881, -200.3695, -199.3690, -200.8499, -211.1227],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0227, device='cuda:0', dtype=torch.float64)
tensor([-210.5233, -200.3910, -199.4062, -200.8696, -211.1589],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0199, device='cuda:0', dtype=torch.float64)
tensor([-210.5701, -200.4046, -199.4332, -200.8882, -211.2056],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0194, device='cuda:0', dtype=torch.float64)
tensor([-210.6137, -200.4230, -199.4624, -200.9107, -211.2430],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0247, device='cuda:0', dtype=torch.float64)
tensor([-210.6493, -200.4518, -199.4913, -200.9282, -211.2606],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0180, device='cuda:0', dtype=torch.float64)
tensor([-210.6791, -200.4696, -199.4883, -200.9085, -211.2784],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0267, device='cuda:0', dtype=torch.float64)
tensor([-210.7084, -200.4949, -199.4919, -200.8995, -211.2824],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0241, device='cuda:0', dtype=torch.float64)
tensor([-210.7615, -200.4896, -199.4725, -200.8832, -211.3187],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0146, device='cuda:0', dtype=torch.float64)
tensor([-210.8033, -200.4994, -199.4725, -200.8828, -211.3416],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0271, device='cuda:0', dtype=torch.float64)
tensor([-210.8626, -200.5136, -199.4544, -200.8778, -211.3617],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0213, device='cuda:0', dtype=torch.float64)
tensor([-210.9259, -200.5214, -199.4602, -200.9021, -211.3887],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0152, device='cuda:0', dtype=torch.float64)
tensor([-210.9540, -200.5381, -199.4456, -200.8971, -211.3551],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0202, device='cuda:0', dtype=torch.float64)
tensor([-210.9542, -200.5611, -199.4402, -200.8845, -211.3060],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0149, device='cuda:0', dtype=torch.float64)
tensor([-210.9452, -200.5940, -199.4289, -200.8583, -211.2450],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0210, device='cuda:0', dtype=torch.float64)
tensor([-210.9554, -200.6407, -199.4573, -200.8767, -211.2194],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0161, device='cuda:0', dtype=torch.float64)
tensor([-210.9768, -200.6644, -199.4658, -200.8781, -211.2155],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0179, device='cuda:0', dtype=torch.float64)
tensor([-210.9942, -200.6827, -199.4712, -200.8750, -211.2184],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0217, device='cuda:0', dtype=torch.float64)
tensor([-210.9895, -200.7252, -199.4928, -200.8793, -211.1770],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0195, device='cuda:0', dtype=torch.float64)
tensor([-210.9806, -200.7710, -199.5296, -200.8836, -211.1527],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0195, device='cuda:0', dtype=torch.float64)
tensor([-210.9864, -200.7944, -199.5425, -200.8714, -211.1596],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0212, device='cuda:0', dtype=torch.float64)
tensor([-210.9846, -200.7999, -199.5390, -200.8327, -211.1747],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0207, device='cuda:0', dtype=torch.float64)
tensor([-210.9988, -200.8091, -199.5499, -200.8265, -211.2021],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0229, device='cuda:0', dtype=torch.float64)
tensor([-211.0493, -200.8042, -199.5619, -200.8431, -211.2611],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0184, device='cuda:0', dtype=torch.float64)
tensor([-211.0905, -200.8152, -199.6056, -200.8900, -211.2968],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0207, device='cuda:0', dtype=torch.float64)
tensor([-211.1529, -200.8033, -199.6120, -200.9090, -211.3577],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0254, device='cuda:0', dtype=torch.float64)
tensor([-211.2169, -200.7927, -199.6159, -200.9244, -211.4165],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0200, device='cuda:0', dtype=torch.float64)
tensor([-211.2613, -200.8122, -199.6725, -200.9846, -211.4564],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0202, device='cuda:0', dtype=torch.float64)
tensor([-211.3018, -200.8211, -199.7092, -201.0203, -211.4874],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0224, device='cuda:0', dtype=torch.float64)
tensor([-211.3582, -200.8207, -199.7376, -201.0579, -211.5311],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0177, device='cuda:0', dtype=torch.float64)
tensor([-211.4022, -200.8251, -199.7578, -201.0820, -211.5567],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0160, device='cuda:0', dtype=torch.float64)
tensor([-211.4471, -200.8119, -199.7417, -201.0752, -211.5732],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0253, device='cuda:0', dtype=torch.float64)
tensor([-211.4711, -200.7830, -199.7138, -201.0527, -211.5738],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0277, device='cuda:0', dtype=torch.float64)
tensor([-211.4829, -200.7527, -199.6998, -201.0351, -211.5636],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0268, device='cuda:0', dtype=torch.float64)
tensor([-211.5078, -200.6958, -199.6716, -201.0098, -211.5727],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0242, device='cuda:0', dtype=torch.float64)
tensor([-211.5232, -200.6842, -199.6803, -201.0090, -211.5596],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0251, device='cuda:0', dtype=torch.float64)
tensor([-211.5282, -200.6913, -199.6922, -201.0000, -211.5397],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0199, device='cuda:0', dtype=torch.float64)
tensor([-211.5400, -200.6846, -199.6811, -200.9705, -211.5296],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0199, device='cuda:0', dtype=torch.float64)
tensor([-211.5291, -200.6755, -199.6797, -200.9451, -211.5021],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0215, device='cuda:0', dtype=torch.float64)
tensor([-211.5407, -200.6640, -199.6733, -200.9199, -211.5038],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0201, device='cuda:0', dtype=torch.float64)
tensor([-211.5754, -200.6368, -199.6399, -200.8890, -211.5112],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0206, device='cuda:0', dtype=torch.float64)
tensor([-211.5826, -200.6455, -199.6193, -200.8543, -211.4930],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0206, device='cuda:0', dtype=torch.float64)
tensor([-211.5814, -200.6655, -199.6119, -200.8274, -211.4684],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0159, device='cuda:0', dtype=torch.float64)
tensor([-211.5683, -200.7010, -199.6272, -200.8173, -211.4319],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0269, device='cuda:0', dtype=torch.float64)
tensor([-211.5751, -200.7446, -199.6591, -200.8321, -211.4140],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0211, device='cuda:0', dtype=torch.float64)
tensor([-211.5841, -200.7890, -199.7002, -200.8554, -211.3993],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0192, device='cuda:0', dtype=torch.float64)
tensor([-211.5830, -200.8460, -199.7390, -200.8657, -211.3724],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0202, device='cuda:0', dtype=torch.float64)
tensor([-211.5975, -200.9085, -199.7923, -200.9004, -211.3509],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0232, device='cuda:0', dtype=torch.float64)
tensor([-211.6169, -200.9701, -199.8511, -200.9379, -211.3314],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0310, device='cuda:0', dtype=torch.float64)
tensor([-211.6319, -201.0162, -199.9049, -200.9642, -211.3145],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0300, device='cuda:0', dtype=torch.float64)
tensor([-211.6372, -201.0895, -199.9800, -201.0019, -211.2756],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0187, device='cuda:0', dtype=torch.float64)
tensor([-211.6353, -201.1755, -200.0652, -201.0486, -211.2255],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0211, device='cuda:0', dtype=torch.float64)
tensor([-211.6283, -201.2544, -200.1393, -201.0869, -211.1707],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0207, device='cuda:0', dtype=torch.float64)
tensor([-211.6034, -201.3236, -200.1815, -201.0900, -211.1077],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0139, device='cuda:0', dtype=torch.float64)
tensor([-211.5816, -201.3868, -200.2239, -201.1006, -211.0383],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0160, device='cuda:0', dtype=torch.float64)
tensor([-211.5746, -201.4491, -200.2838, -201.1337, -210.9804],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0246, device='cuda:0', dtype=torch.float64)
tensor([-211.5909, -201.4811, -200.3352, -201.1664, -210.9672],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0160, device='cuda:0', dtype=torch.float64)
tensor([-211.6182, -201.5026, -200.3791, -201.2052, -210.9646],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0191, device='cuda:0', dtype=torch.float64)
tensor([-211.6416, -201.5373, -200.4518, -201.2629, -210.9620],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0172, device='cuda:0', dtype=torch.float64)
tensor([-211.6415, -201.5603, -200.5058, -201.2933, -210.9412],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0188, device='cuda:0', dtype=torch.float64)
tensor([-211.6494, -201.5886, -200.5465, -201.3176, -210.9201],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0155, device='cuda:0', dtype=torch.float64)
tensor([-211.6462, -201.6146, -200.5708, -201.3277, -210.8747],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0191, device='cuda:0', dtype=torch.float64)
tensor([-211.6562, -201.6042, -200.5563, -201.3066, -210.8477],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0121, device='cuda:0', dtype=torch.float64)
tensor([-211.6543, -201.5928, -200.5336, -201.2725, -210.8177],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0268, device='cuda:0', dtype=torch.float64)
tensor([-211.6156, -201.6096, -200.5117, -201.2074, -210.7419],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0146, device='cuda:0', dtype=torch.float64)
tensor([-211.5885, -201.6175, -200.4895, -201.1444, -210.6905],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0176, device='cuda:0', dtype=torch.float64)
tensor([-211.5633, -201.6195, -200.4664, -201.0851, -210.6469],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0152, device='cuda:0', dtype=torch.float64)
tensor([-211.5378, -201.6065, -200.4239, -201.0020, -210.6266],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0193, device='cuda:0', dtype=torch.float64)
tensor([-211.5129, -201.6059, -200.3990, -200.9436, -210.5802],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0150, device='cuda:0', dtype=torch.float64)
tensor([-211.5172, -201.5936, -200.3622, -200.8901, -210.5750],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0178, device='cuda:0', dtype=torch.float64)
tensor([-211.5177, -201.5607, -200.3066, -200.8208, -210.5775],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0133, device='cuda:0', dtype=torch.float64)
tensor([-211.5263, -201.5261, -200.2695, -200.7731, -210.5968],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0177, device='cuda:0', dtype=torch.float64)
tensor([-211.5433, -201.4947, -200.2307, -200.7237, -210.6245],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0155, device='cuda:0', dtype=torch.float64)
tensor([-211.5546, -201.4747, -200.1879, -200.6703, -210.6511],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0142, device='cuda:0', dtype=torch.float64)
tensor([-211.5662, -201.4501, -200.1476, -200.6226, -210.6821],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0148, device='cuda:0', dtype=torch.float64)
tensor([-211.5848, -201.4143, -200.1121, -200.5724, -210.7516],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0149, device='cuda:0', dtype=torch.float64)
tensor([-211.6038, -201.3820, -200.0708, -200.5116, -210.8083],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0146, device='cuda:0', dtype=torch.float64)
tensor([-211.6452, -201.3580, -200.0396, -200.4769, -210.8711],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0153, device='cuda:0', dtype=torch.float64)
tensor([-211.6947, -201.3313, -200.0182, -200.4575, -210.9440],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0203, device='cuda:0', dtype=torch.float64)
tensor([-211.7531, -201.3079, -200.0075, -200.4537, -211.0074],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0176, device='cuda:0', dtype=torch.float64)
tensor([-211.8260, -201.2761, -199.9671, -200.4259, -211.0779],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0201, device='cuda:0', dtype=torch.float64)
tensor([-211.8971, -201.2450, -199.9072, -200.3796, -211.1335],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0196, device='cuda:0', dtype=torch.float64)
tensor([-211.9764, -201.2361, -199.8586, -200.3460, -211.1885],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0113, device='cuda:0', dtype=torch.float64)
tensor([-212.0358, -201.2438, -199.8181, -200.3112, -211.2257],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0229, device='cuda:0', dtype=torch.float64)
tensor([-212.0617, -201.2949, -199.8165, -200.2969, -211.2104],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0186, device='cuda:0', dtype=torch.float64)
tensor([-212.0858, -201.3604, -199.8204, -200.2926, -211.1944],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0155, device='cuda:0', dtype=torch.float64)
tensor([-212.1136, -201.4218, -199.8261, -200.2969, -211.1688],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0118, device='cuda:0', dtype=torch.float64)
tensor([-212.1222, -201.4950, -199.8405, -200.2987, -211.1258],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0188, device='cuda:0', dtype=torch.float64)
tensor([-212.1123, -201.5649, -199.8243, -200.2630, -211.0643],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0210, device='cuda:0', dtype=torch.float64)
tensor([-212.0926, -201.6472, -199.8203, -200.2332, -210.9953],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0213, device='cuda:0', dtype=torch.float64)
tensor([-212.0669, -201.7201, -199.8189, -200.2102, -210.9312],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0155, device='cuda:0', dtype=torch.float64)
tensor([-212.0097, -201.7928, -199.8014, -200.1601, -210.8260],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0256, device='cuda:0', dtype=torch.float64)
tensor([-211.9592, -201.8597, -199.7875, -200.1156, -210.7259],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0187, device='cuda:0', dtype=torch.float64)
tensor([-211.9224, -201.9291, -199.7853, -200.0940, -210.6218],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0186, device='cuda:0', dtype=torch.float64)
tensor([-211.8591, -202.0065, -199.7703, -200.0397, -210.4980],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0166, device='cuda:0', dtype=torch.float64)
tensor([-211.7748, -202.1002, -199.7734, -199.9893, -210.3540],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0236, device='cuda:0', dtype=torch.float64)
tensor([-211.7205, -202.1697, -199.7640, -199.9490, -210.2496],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0178, device='cuda:0', dtype=torch.float64)
tensor([-211.6780, -202.2332, -199.7645, -199.9279, -210.1526],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0226, device='cuda:0', dtype=torch.float64)
tensor([-211.6195, -202.2913, -199.7542, -199.8853, -210.0519],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0182, device='cuda:0', dtype=torch.float64)
tensor([-211.5859, -202.3183, -199.7330, -199.8459, -209.9835],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0151, device='cuda:0', dtype=torch.float64)
tensor([-211.5650, -202.3117, -199.6717, -199.7759, -209.9501],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0197, device='cuda:0', dtype=torch.float64)
tensor([-211.5482, -202.3158, -199.6442, -199.7372, -209.9347],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0143, device='cuda:0', dtype=torch.float64)
tensor([-211.5575, -202.2782, -199.5901, -199.6819, -209.9676],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0175, device='cuda:0', dtype=torch.float64)
tensor([-211.5831, -202.2630, -199.5714, -199.6686, -210.0159],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0114, device='cuda:0', dtype=torch.float64)
tensor([-211.6135, -202.2678, -199.5951, -199.6977, -210.0620],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0154, device='cuda:0', dtype=torch.float64)
tensor([-211.6282, -202.2981, -199.6379, -199.7336, -210.0929],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0153, device='cuda:0', dtype=torch.float64)
tensor([-211.6579, -202.3299, -199.6951, -199.7843, -210.1545],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0203, device='cuda:0', dtype=torch.float64)
tensor([-211.6840, -202.3627, -199.7560, -199.8402, -210.2091],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0173, device='cuda:0', dtype=torch.float64)
tensor([-211.7202, -202.3899, -199.8260, -199.9112, -210.2787],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0154, device='cuda:0', dtype=torch.float64)
tensor([-211.7492, -202.4260, -199.8923, -199.9647, -210.3340],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0205, device='cuda:0', dtype=torch.float64)
tensor([-211.7880, -202.4468, -199.9513, -200.0196, -210.3963],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0164, device='cuda:0', dtype=torch.float64)
tensor([-211.8266, -202.4676, -200.0161, -200.0832, -210.4582],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0172, device='cuda:0', dtype=torch.float64)
tensor([-211.8840, -202.4694, -200.0444, -200.1273, -210.5223],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0143, device='cuda:0', dtype=torch.float64)
tensor([-211.9453, -202.4512, -200.0546, -200.1579, -210.5950],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0155, device='cuda:0', dtype=torch.float64)
tensor([-212.0116, -202.4381, -200.0711, -200.1927, -210.6625],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0156, device='cuda:0', dtype=torch.float64)
tensor([-212.0604, -202.4393, -200.0939, -200.2262, -210.7110],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0214, device='cuda:0', dtype=torch.float64)
tensor([-212.1098, -202.4470, -200.1455, -200.2972, -210.7483],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0126, device='cuda:0', dtype=torch.float64)
tensor([-212.1477, -202.4737, -200.2183, -200.3809, -210.7707],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0374, device='cuda:0', dtype=torch.float64)
tensor([-212.1989, -202.4851, -200.2632, -200.4493, -210.7968],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0127, device='cuda:0', dtype=torch.float64)
tensor([-212.2496, -202.4860, -200.2932, -200.5024, -210.8266],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0179, device='cuda:0', dtype=torch.float64)
tensor([-212.3084, -202.4759, -200.3013, -200.5357, -210.8611],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0183, device='cuda:0', dtype=torch.float64)
tensor([-212.3743, -202.4482, -200.2990, -200.5710, -210.9000],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0181, device='cuda:0', dtype=torch.float64)
tensor([-212.4159, -202.4417, -200.2961, -200.5891, -210.8957],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0179, device='cuda:0', dtype=torch.float64)
tensor([-212.4375, -202.4465, -200.2775, -200.5785, -210.8697],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0148, device='cuda:0', dtype=torch.float64)
tensor([-212.4537, -202.4506, -200.2375, -200.5429, -210.8499],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0187, device='cuda:0', dtype=torch.float64)
tensor([-212.4488, -202.4506, -200.1972, -200.4927, -210.8313],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0189, device='cuda:0', dtype=torch.float64)
tensor([-212.4643, -202.4349, -200.1297, -200.4273, -210.8398],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0245, device='cuda:0', dtype=torch.float64)
tensor([-212.4802, -202.4036, -200.0341, -200.3335, -210.8395],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0183, device='cuda:0', dtype=torch.float64)
tensor([-212.4897, -202.3881, -199.9601, -200.2549, -210.8410],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0159, device='cuda:0', dtype=torch.float64)
tensor([-212.5041, -202.3791, -199.8908, -200.1847, -210.8412],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0165, device='cuda:0', dtype=torch.float64)
tensor([-212.5063, -202.3898, -199.8296, -200.1188, -210.8158],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0160, device='cuda:0', dtype=torch.float64)
tensor([-212.5128, -202.4051, -199.7799, -200.0650, -210.7934],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0193, device='cuda:0', dtype=torch.float64)
tensor([-212.5202, -202.4237, -199.7371, -200.0158, -210.7631],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0153, device='cuda:0', dtype=torch.float64)
tensor([-212.5204, -202.4519, -199.7159, -199.9833, -210.7345],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0133, device='cuda:0', dtype=torch.float64)
tensor([-212.4951, -202.4950, -199.6989, -199.9431, -210.6749],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0148, device='cuda:0', dtype=torch.float64)
tensor([-212.4894, -202.5401, -199.6883, -199.9271, -210.6432],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0121, device='cuda:0', dtype=torch.float64)
tensor([-212.4863, -202.5635, -199.6746, -199.9123, -210.6232],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0185, device='cuda:0', dtype=torch.float64)
tensor([-212.4639, -202.6067, -199.6882, -199.9095, -210.5740],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0175, device='cuda:0', dtype=torch.float64)
tensor([-212.4428, -202.6459, -199.6903, -199.8976, -210.5271],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0186, device='cuda:0', dtype=torch.float64)
tensor([-212.4408, -202.6786, -199.7039, -199.9089, -210.4934],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0176, device='cuda:0', dtype=torch.float64)
tensor([-212.4487, -202.6947, -199.7004, -199.9109, -210.4820],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0146, device='cuda:0', dtype=torch.float64)
tensor([-212.4504, -202.7219, -199.7152, -199.9205, -210.4608],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0149, device='cuda:0', dtype=torch.float64)
tensor([-212.4361, -202.7495, -199.7187, -199.9148, -210.4334],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0212, device='cuda:0', dtype=torch.float64)
tensor([-212.4319, -202.7775, -199.7220, -199.9171, -210.4273],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0215, device='cuda:0', dtype=torch.float64)
tensor([-212.4169, -202.8073, -199.7143, -199.8986, -210.4154],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0179, device='cuda:0', dtype=torch.float64)
tensor([-212.3904, -202.8510, -199.7084, -199.8737, -210.3790],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0132, device='cuda:0', dtype=torch.float64)
tensor([-212.3666, -202.8513, -199.6525, -199.8102, -210.3594],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0132, device='cuda:0', dtype=torch.float64)
tensor([-212.3459, -202.8383, -199.5914, -199.7485, -210.3551],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0143, device='cuda:0', dtype=torch.float64)
tensor([-212.3314, -202.8261, -199.5352, -199.6958, -210.3395],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0156, device='cuda:0', dtype=torch.float64)
tensor([-212.3204, -202.8108, -199.4798, -199.6413, -210.3240],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0155, device='cuda:0', dtype=torch.float64)
tensor([-212.3242, -202.7879, -199.4112, -199.5835, -210.3258],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0156, device='cuda:0', dtype=torch.float64)
tensor([-212.3193, -202.7836, -199.3517, -199.5332, -210.3068],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0162, device='cuda:0', dtype=torch.float64)
tensor([-212.3470, -202.7657, -199.2990, -199.5106, -210.3161],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0134, device='cuda:0', dtype=torch.float64)
tensor([-212.3337, -202.7647, -199.2592, -199.4746, -210.2897],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0180, device='cuda:0', dtype=torch.float64)
tensor([-212.3234, -202.7737, -199.2322, -199.4484, -210.2686],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0174, device='cuda:0', dtype=torch.float64)
tensor([-212.3101, -202.7883, -199.2119, -199.4245, -210.2454],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0152, device='cuda:0', dtype=torch.float64)
tensor([-212.3050, -202.8306, -199.2302, -199.4433, -210.2250],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0120, device='cuda:0', dtype=torch.float64)
tensor([-212.2788, -202.8888, -199.2442, -199.4503, -210.1727],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0168, device='cuda:0', dtype=torch.float64)
tensor([-212.2728, -202.9415, -199.2579, -199.4681, -210.1403],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0183, device='cuda:0', dtype=torch.float64)
tensor([-212.2806, -202.9773, -199.2814, -199.4966, -210.1381],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0202, device='cuda:0', dtype=torch.float64)
tensor([-212.2864, -203.0002, -199.3154, -199.5273, -210.1433],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0184, device='cuda:0', dtype=torch.float64)
tensor([-212.2899, -203.0189, -199.3499, -199.5600, -210.1368],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0195, device='cuda:0', dtype=torch.float64)
tensor([-212.3197, -203.0330, -199.3788, -199.5967, -210.1556],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0219, device='cuda:0', dtype=torch.float64)
tensor([-212.3435, -203.0482, -199.4284, -199.6548, -210.1711],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0186, device='cuda:0', dtype=torch.float64)
tensor([-212.3730, -203.0558, -199.4771, -199.7134, -210.1837],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0187, device='cuda:0', dtype=torch.float64)
tensor([-212.4002, -203.0547, -199.5132, -199.7588, -210.2092],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0157, device='cuda:0', dtype=torch.float64)
tensor([-212.4480, -203.0513, -199.5597, -199.8197, -210.2590],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0180, device='cuda:0', dtype=torch.float64)
tensor([-212.5018, -203.0330, -199.5773, -199.8513, -210.3213],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0158, device='cuda:0', dtype=torch.float64)
tensor([-212.5553, -202.9966, -199.5824, -199.8683, -210.3902],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0158, device='cuda:0', dtype=torch.float64)
tensor([-212.6094, -202.9629, -199.5982, -199.8968, -210.4487],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0186, device='cuda:0', dtype=torch.float64)
tensor([-212.6496, -202.9260, -199.6143, -199.9201, -210.4723],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0174, device='cuda:0', dtype=torch.float64)
tensor([-212.6950, -202.8719, -199.6162, -199.9278, -210.5171],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0204, device='cuda:0', dtype=torch.float64)
tensor([-212.7386, -202.8059, -199.6022, -199.9191, -210.5623],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0197, device='cuda:0', dtype=torch.float64)
tensor([-212.7776, -202.7435, -199.5766, -199.9003, -210.5943],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0117, device='cuda:0', dtype=torch.float64)
tensor([-212.8002, -202.7202, -199.5805, -199.9035, -210.6004],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0188, device='cuda:0', dtype=torch.float64)
tensor([-212.8220, -202.6955, -199.5820, -199.9047, -210.6062],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0195, device='cuda:0', dtype=torch.float64)
tensor([-212.8318, -202.6813, -199.5975, -199.9112, -210.6034],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0159, device='cuda:0', dtype=torch.float64)
tensor([-212.8489, -202.6549, -199.5933, -199.9027, -210.6012],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0208, device='cuda:0', dtype=torch.float64)
tensor([-212.8577, -202.6345, -199.5879, -199.8915, -210.5942],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0157, device='cuda:0', dtype=torch.float64)
tensor([-212.8702, -202.6128, -199.5717, -199.8707, -210.6084],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0208, device='cuda:0', dtype=torch.float64)
tensor([-212.8844, -202.6002, -199.5707, -199.8794, -210.6057],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0114, device='cuda:0', dtype=torch.float64)
tensor([-212.8848, -202.6009, -199.5681, -199.8800, -210.5894],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0245, device='cuda:0', dtype=torch.float64)
tensor([-212.8690, -202.6351, -199.6011, -199.9023, -210.5563],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0145, device='cuda:0', dtype=torch.float64)
tensor([-212.8601, -202.6609, -199.6209, -199.9168, -210.5259],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0177, device='cuda:0', dtype=torch.float64)
tensor([-212.8317, -202.7073, -199.6574, -199.9333, -210.4712],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0160, device='cuda:0', dtype=torch.float64)
tensor([-212.8086, -202.7783, -199.7296, -199.9919, -210.4298],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0182, device='cuda:0', dtype=torch.float64)
tensor([-212.7813, -202.8611, -199.8181, -200.0668, -210.3748],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0211, device='cuda:0', dtype=torch.float64)
tensor([-212.7597, -202.9451, -199.9176, -200.1499, -210.3327],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0130, device='cuda:0', dtype=torch.float64)
tensor([-212.7532, -203.0118, -199.9929, -200.2143, -210.3092],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0147, device='cuda:0', dtype=torch.float64)
tensor([-212.7638, -203.0632, -200.0570, -200.2702, -210.3049],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0171, device='cuda:0', dtype=torch.float64)
tensor([-212.7679, -203.1136, -200.1160, -200.3175, -210.2992],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0130, device='cuda:0', dtype=torch.float64)
tensor([-212.7567, -203.1563, -200.1413, -200.3286, -210.2625],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0170, device='cuda:0', dtype=torch.float64)
tensor([-212.7518, -203.1859, -200.1450, -200.3278, -210.2309],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0165, device='cuda:0', dtype=torch.float64)
tensor([-212.7454, -203.1952, -200.1242, -200.3033, -210.1992],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0152, device='cuda:0', dtype=torch.float64)
tensor([-212.7414, -203.1988, -200.1046, -200.2785, -210.1774],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0164, device='cuda:0', dtype=torch.float64)
tensor([-212.7269, -203.1916, -200.0644, -200.2250, -210.1528],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0160, device='cuda:0', dtype=torch.float64)
tensor([-212.6982, -203.2009, -200.0338, -200.1778, -210.1087],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0154, device='cuda:0', dtype=torch.float64)
tensor([-212.6677, -203.2297, -200.0388, -200.1582, -210.0696],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0154, device='cuda:0', dtype=torch.float64)
tensor([-212.6456, -203.2466, -200.0363, -200.1330, -210.0428],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0149, device='cuda:0', dtype=torch.float64)
tensor([-212.6175, -203.2711, -200.0420, -200.1059, -210.0225],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0182, device='cuda:0', dtype=torch.float64)
tensor([-212.5970, -203.2941, -200.0436, -200.0773, -210.0116],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0174, device='cuda:0', dtype=torch.float64)
tensor([-212.5860, -203.3093, -200.0250, -200.0361, -210.0184],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0149, device='cuda:0', dtype=torch.float64)
tensor([-212.5849, -203.3106, -199.9853, -199.9853, -210.0308],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0130, device='cuda:0', dtype=torch.float64)
tensor([-212.5774, -203.3115, -199.9476, -199.9344, -210.0402],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0123, device='cuda:0', dtype=torch.float64)
tensor([-212.5788, -203.3012, -199.8995, -199.8789, -210.0543],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0154, device='cuda:0', dtype=torch.float64)
tensor([-212.5969, -203.2790, -199.8678, -199.8508, -210.0969],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0140, device='cuda:0', dtype=torch.float64)
tensor([-212.6016, -203.2663, -199.8448, -199.8278, -210.1298],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0122, device='cuda:0', dtype=torch.float64)
tensor([-212.5821, -203.2640, -199.8363, -199.8062, -210.1294],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0164, device='cuda:0', dtype=torch.float64)
tensor([-212.5660, -203.2665, -199.8484, -199.8017, -210.1416],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0118, device='cuda:0', dtype=torch.float64)
tensor([-212.5541, -203.2532, -199.8468, -199.7912, -210.1546],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0119, device='cuda:0', dtype=torch.float64)
tensor([-212.5543, -203.2298, -199.8338, -199.7755, -210.1868],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0154, device='cuda:0', dtype=torch.float64)
tensor([-212.5538, -203.2050, -199.8262, -199.7636, -210.2194],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0199, device='cuda:0', dtype=torch.float64)
tensor([-212.5466, -203.1982, -199.8213, -199.7482, -210.2361],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0184, device='cuda:0', dtype=torch.float64)
tensor([-212.5247, -203.2000, -199.8174, -199.7336, -210.2358],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0173, device='cuda:0', dtype=torch.float64)
tensor([-212.4934, -203.2291, -199.8451, -199.7471, -210.2228],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0174, device='cuda:0', dtype=torch.float64)
tensor([-212.4622, -203.2717, -199.8842, -199.7650, -210.2051],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0157, device='cuda:0', dtype=torch.float64)
tensor([-212.4424, -203.3281, -199.9256, -199.7939, -210.1832],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0168, device='cuda:0', dtype=torch.float64)
tensor([-212.4236, -203.3945, -199.9928, -199.8451, -210.1517],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0127, device='cuda:0', dtype=torch.float64)
tensor([-212.4168, -203.4535, -200.0614, -199.9089, -210.1176],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0132, device='cuda:0', dtype=torch.float64)
tensor([-212.4276, -203.4996, -200.1311, -199.9848, -210.1064],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0135, device='cuda:0', dtype=torch.float64)
tensor([-212.4344, -203.5560, -200.1980, -200.0542, -210.0901],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0158, device='cuda:0', dtype=torch.float64)
tensor([-212.4515, -203.5776, -200.2316, -200.0963, -210.0852],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0134, device='cuda:0', dtype=torch.float64)
tensor([-212.4823, -203.5992, -200.2748, -200.1541, -210.0969],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0153, device='cuda:0', dtype=torch.float64)
tensor([-212.5175, -203.6362, -200.3309, -200.2262, -210.1016],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0153, device='cuda:0', dtype=torch.float64)
tensor([-212.5621, -203.6497, -200.3660, -200.2771, -210.1271],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0144, device='cuda:0', dtype=torch.float64)
tensor([-212.6052, -203.6552, -200.3926, -200.3150, -210.1519],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0160, device='cuda:0', dtype=torch.float64)
tensor([-212.6599, -203.6669, -200.4365, -200.3756, -210.1919],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0156, device='cuda:0', dtype=torch.float64)
tensor([-212.6912, -203.6805, -200.4797, -200.4222, -210.2051],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0251, device='cuda:0', dtype=torch.float64)
tensor([-212.7218, -203.6922, -200.5252, -200.4677, -210.2126],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0170, device='cuda:0', dtype=torch.float64)
tensor([-212.7450, -203.7030, -200.5642, -200.5064, -210.2222],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0173, device='cuda:0', dtype=torch.float64)
tensor([-212.7907, -203.6921, -200.5845, -200.5346, -210.2584],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0143, device='cuda:0', dtype=torch.float64)
tensor([-212.8310, -203.6926, -200.6378, -200.5949, -210.2906],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0189, device='cuda:0', dtype=torch.float64)
tensor([-212.8633, -203.6921, -200.6675, -200.6246, -210.3264],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0118, device='cuda:0', dtype=torch.float64)
tensor([-212.9008, -203.6841, -200.6944, -200.6518, -210.3743],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0121, device='cuda:0', dtype=torch.float64)
tensor([-212.9257, -203.6684, -200.7098, -200.6625, -210.4081],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0146, device='cuda:0', dtype=torch.float64)
tensor([-212.9461, -203.6461, -200.7039, -200.6489, -210.4380],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0152, device='cuda:0', dtype=torch.float64)
tensor([-212.9581, -203.6367, -200.6925, -200.6261, -210.4545],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0178, device='cuda:0', dtype=torch.float64)
tensor([-212.9622, -203.6250, -200.6690, -200.5930, -210.4544],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0174, device='cuda:0', dtype=torch.float64)
tensor([-212.9642, -203.6083, -200.6335, -200.5425, -210.4623],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0208, device='cuda:0', dtype=torch.float64)
tensor([-212.9791, -203.5945, -200.6324, -200.5339, -210.4879],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0143, device='cuda:0', dtype=torch.float64)
tensor([-212.9929, -203.5828, -200.6192, -200.5178, -210.5106],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0170, device='cuda:0', dtype=torch.float64)
tensor([-213.0093, -203.5936, -200.6141, -200.5125, -210.5193],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0145, device='cuda:0', dtype=torch.float64)
tensor([-213.0009, -203.6042, -200.6140, -200.4997, -210.4969],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0107, device='cuda:0', dtype=torch.float64)
tensor([-212.9708, -203.6247, -200.6218, -200.4856, -210.4471],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0138, device='cuda:0', dtype=torch.float64)
tensor([-212.9642, -203.6160, -200.6105, -200.4711, -210.4121],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0154, device='cuda:0', dtype=torch.float64)
tensor([-212.9514, -203.5951, -200.5837, -200.4407, -210.3790],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0119, device='cuda:0', dtype=torch.float64)
tensor([-212.9754, -203.5510, -200.5544, -200.4319, -210.3924],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0115, device='cuda:0', dtype=torch.float64)
tensor([-212.9978, -203.5143, -200.5335, -200.4307, -210.4080],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0134, device='cuda:0', dtype=torch.float64)
tensor([-213.0233, -203.4833, -200.5176, -200.4366, -210.4109],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0141, device='cuda:0', dtype=torch.float64)
tensor([-213.0444, -203.4627, -200.5237, -200.4619, -210.4019],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0136, device='cuda:0', dtype=torch.float64)
tensor([-213.0729, -203.4366, -200.5253, -200.4766, -210.4150],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0198, device='cuda:0', dtype=torch.float64)
tensor([-213.0808, -203.4498, -200.5509, -200.4976, -210.3999],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0131, device='cuda:0', dtype=torch.float64)
tensor([-213.0718, -203.4744, -200.5826, -200.5206, -210.3548],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0139, device='cuda:0', dtype=torch.float64)
tensor([-213.0520, -203.5220, -200.6447, -200.5662, -210.2945],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0134, device='cuda:0', dtype=torch.float64)
tensor([-213.0276, -203.5569, -200.6938, -200.5980, -210.2226],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0190, device='cuda:0', dtype=torch.float64)
tensor([-212.9842, -203.6021, -200.7192, -200.5952, -210.1385],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0154, device='cuda:0', dtype=torch.float64)
tensor([-212.9499, -203.6616, -200.7554, -200.6075, -210.0500],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0138, device='cuda:0', dtype=torch.float64)
tensor([-212.9229, -203.7150, -200.7847, -200.6166, -209.9743],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0165, device='cuda:0', dtype=torch.float64)
tensor([-212.9156, -203.7514, -200.8106, -200.6318, -209.9335],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0186, device='cuda:0', dtype=torch.float64)
tensor([-212.9221, -203.7754, -200.8286, -200.6478, -209.9169],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0153, device='cuda:0', dtype=torch.float64)
tensor([-212.9322, -203.7924, -200.8286, -200.6473, -209.9132],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0171, device='cuda:0', dtype=torch.float64)
tensor([-212.9517, -203.7987, -200.8155, -200.6400, -209.9223],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0121, device='cuda:0', dtype=torch.float64)
tensor([-212.9455, -203.7997, -200.7914, -200.6063, -209.9212],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0113, device='cuda:0', dtype=torch.float64)
tensor([-212.9424, -203.7956, -200.7458, -200.5543, -209.9184],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0115, device='cuda:0', dtype=torch.float64)
tensor([-212.9517, -203.7945, -200.7013, -200.5106, -209.9215],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0164, device='cuda:0', dtype=torch.float64)
tensor([-212.9580, -203.8083, -200.6855, -200.4935, -209.9122],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0105, device='cuda:0', dtype=torch.float64)
tensor([-212.9644, -203.8089, -200.6520, -200.4583, -209.9101],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0152, device='cuda:0', dtype=torch.float64)
tensor([-212.9604, -203.8288, -200.6348, -200.4252, -209.9081],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0160, device='cuda:0', dtype=torch.float64)
tensor([-212.9851, -203.8432, -200.6349, -200.4258, -209.9457],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0169, device='cuda:0', dtype=torch.float64)
tensor([-213.0061, -203.8427, -200.6197, -200.4113, -209.9837],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0124, device='cuda:0', dtype=torch.float64)
tensor([-213.0013, -203.8557, -200.5980, -200.3804, -209.9909],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0181, device='cuda:0', dtype=torch.float64)
tensor([-212.9923, -203.8531, -200.5762, -200.3433, -209.9993],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0155, device='cuda:0', dtype=torch.float64)
tensor([-213.0044, -203.8425, -200.5650, -200.3261, -210.0341],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0132, device='cuda:0', dtype=torch.float64)
tensor([-212.9911, -203.8514, -200.5590, -200.3007, -210.0394],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0102, device='cuda:0', dtype=torch.float64)
tensor([-212.9735, -203.8741, -200.5703, -200.2958, -210.0381],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0138, device='cuda:0', dtype=torch.float64)
tensor([-212.9508, -203.8975, -200.5770, -200.2822, -210.0206],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0153, device='cuda:0', dtype=torch.float64)
tensor([-212.9228, -203.9349, -200.6111, -200.2951, -209.9940],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0129, device='cuda:0', dtype=torch.float64)
tensor([-212.9118, -203.9497, -200.6298, -200.3095, -209.9778],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0145, device='cuda:0', dtype=torch.float64)
tensor([-212.9209, -203.9488, -200.6405, -200.3259, -209.9838],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0150, device='cuda:0', dtype=torch.float64)
tensor([-212.9174, -203.9562, -200.6749, -200.3583, -209.9835],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0167, device='cuda:0', dtype=torch.float64)
tensor([-212.9094, -203.9756, -200.7108, -200.3923, -209.9708],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0124, device='cuda:0', dtype=torch.float64)
tensor([-212.9112, -203.9899, -200.7627, -200.4475, -209.9761],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0113, device='cuda:0', dtype=torch.float64)
tensor([-212.9056, -203.9966, -200.7942, -200.4768, -209.9956],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0115, device='cuda:0', dtype=torch.float64)
tensor([-212.9037, -203.9986, -200.8165, -200.4970, -210.0124],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0158, device='cuda:0', dtype=torch.float64)
tensor([-212.9265, -203.9727, -200.8318, -200.5241, -210.0516],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0135, device='cuda:0', dtype=torch.float64)
tensor([-212.9637, -203.9512, -200.8580, -200.5695, -210.1047],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0169, device='cuda:0', dtype=torch.float64)
tensor([-213.0015, -203.8985, -200.8323, -200.5605, -210.1698],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0158, device='cuda:0', dtype=torch.float64)
tensor([-213.0243, -203.8616, -200.8153, -200.5511, -210.2222],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0116, device='cuda:0', dtype=torch.float64)
tensor([-213.0575, -203.8127, -200.7699, -200.5184, -210.2983],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0139, device='cuda:0', dtype=torch.float64)
tensor([-213.0915, -203.7769, -200.7411, -200.5022, -210.3637],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0145, device='cuda:0', dtype=torch.float64)
tensor([-213.1134, -203.7594, -200.7324, -200.4867, -210.4278],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0221, device='cuda:0', dtype=torch.float64)
tensor([-213.1171, -203.7428, -200.7033, -200.4512, -210.4504],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0143, device='cuda:0', dtype=torch.float64)
tensor([-213.1154, -203.7276, -200.6738, -200.4114, -210.4626],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0163, device='cuda:0', dtype=torch.float64)
tensor([-213.1112, -203.7094, -200.6383, -200.3646, -210.4644],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0176, device='cuda:0', dtype=torch.float64)
tensor([-213.1047, -203.7017, -200.6109, -200.3248, -210.4677],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0145, device='cuda:0', dtype=torch.float64)
tensor([-213.0949, -203.7032, -200.5922, -200.2937, -210.4713],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0127, device='cuda:0', dtype=torch.float64)
tensor([-213.0859, -203.7356, -200.6173, -200.3049, -210.4842],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0152, device='cuda:0', dtype=torch.float64)
tensor([-213.0668, -203.7805, -200.6502, -200.3229, -210.4844],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0137, device='cuda:0', dtype=torch.float64)
tensor([-213.0656, -203.8205, -200.6879, -200.3515, -210.5060],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0124, device='cuda:0', dtype=torch.float64)
tensor([-213.0661, -203.8628, -200.7311, -200.3892, -210.5179],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0115, device='cuda:0', dtype=torch.float64)
tensor([-213.0497, -203.9008, -200.7571, -200.4049, -210.5195],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0119, device='cuda:0', dtype=torch.float64)
tensor([-213.0545, -203.9254, -200.7823, -200.4302, -210.5437],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0144, device='cuda:0', dtype=torch.float64)
tensor([-213.0509, -203.9638, -200.7992, -200.4454, -210.5573],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0190, device='cuda:0', dtype=torch.float64)
tensor([-213.0292, -204.0235, -200.8332, -200.4715, -210.5426],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0164, device='cuda:0', dtype=torch.float64)
tensor([-212.9993, -204.0771, -200.8348, -200.4608, -210.5128],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0144, device='cuda:0', dtype=torch.float64)
tensor([-212.9458, -204.1447, -200.8459, -200.4532, -210.4371],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0141, device='cuda:0', dtype=torch.float64)
tensor([-212.8856, -204.2140, -200.8477, -200.4349, -210.3512],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0158, device='cuda:0', dtype=torch.float64)
tensor([-212.8247, -204.2658, -200.8240, -200.3869, -210.2767],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0090, device='cuda:0', dtype=torch.float64)
tensor([-212.7655, -204.3099, -200.7867, -200.3261, -210.2041],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0164, device='cuda:0', dtype=torch.float64)
tensor([-212.7110, -204.3506, -200.7531, -200.2692, -210.1243],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0125, device='cuda:0', dtype=torch.float64)
tensor([-212.6646, -204.3907, -200.6915, -200.1935, -210.0425],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0151, device='cuda:0', dtype=torch.float64)
tensor([-212.6376, -204.4012, -200.6088, -200.1090, -209.9785],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0080, device='cuda:0', dtype=torch.float64)
tensor([-212.6234, -204.3816, -200.4986, -200.0077, -209.9225],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0127, device='cuda:0', dtype=torch.float64)
tensor([-212.6228, -204.3462, -200.3896, -199.9114, -209.8894],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0119, device='cuda:0', dtype=torch.float64)
tensor([-212.6194, -204.3229, -200.3016, -199.8380, -209.8550],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0184, device='cuda:0', dtype=torch.float64)
tensor([-212.6268, -204.2966, -200.2149, -199.7735, -209.8317],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0168, device='cuda:0', dtype=torch.float64)
tensor([-212.6442, -204.2670, -200.1539, -199.7410, -209.8187],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0157, device='cuda:0', dtype=torch.float64)
tensor([-212.6729, -204.2249, -200.0874, -199.7063, -209.8393],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0185, device='cuda:0', dtype=torch.float64)
tensor([-212.7201, -204.1880, -200.0421, -199.7007, -209.8834],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0142, device='cuda:0', dtype=torch.float64)
tensor([-212.7778, -204.1528, -199.9987, -199.7039, -209.9385],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0119, device='cuda:0', dtype=torch.float64)
tensor([-212.8402, -204.1279, -199.9724, -199.7265, -209.9966],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0185, device='cuda:0', dtype=torch.float64)
tensor([-212.8943, -204.1210, -199.9830, -199.7864, -210.0329],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0144, device='cuda:0', dtype=torch.float64)
tensor([-212.9726, -204.1120, -199.9977, -199.8638, -210.0949],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0110, device='cuda:0', dtype=torch.float64)
tensor([-213.0477, -204.1127, -200.0283, -199.9507, -210.1434],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0152, device='cuda:0', dtype=torch.float64)
tensor([-213.1255, -204.1100, -200.0678, -200.0459, -210.2049],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0112, device='cuda:0', dtype=torch.float64)
tensor([-213.1853, -204.1118, -200.0998, -200.1233, -210.2555],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0209, device='cuda:0', dtype=torch.float64)
tensor([-213.2538, -204.1094, -200.1308, -200.1994, -210.3198],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0128, device='cuda:0', dtype=torch.float64)
tensor([-213.3120, -204.1039, -200.1472, -200.2554, -210.3702],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0128, device='cuda:0', dtype=torch.float64)
tensor([-213.3672, -204.1129, -200.1732, -200.3180, -210.4183],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0126, device='cuda:0', dtype=torch.float64)
tensor([-213.4295, -204.1051, -200.1787, -200.3692, -210.4629],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0114, device='cuda:0', dtype=torch.float64)
tensor([-213.4752, -204.1162, -200.1839, -200.4111, -210.4763],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0197, device='cuda:0', dtype=torch.float64)
tensor([-213.5206, -204.1224, -200.1862, -200.4407, -210.4903],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0195, device='cuda:0', dtype=torch.float64)
tensor([-213.5259, -204.1406, -200.1626, -200.4279, -210.4653],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0125, device='cuda:0', dtype=torch.float64)
tensor([-213.5117, -204.1659, -200.1419, -200.4088, -210.4230],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0247, device='cuda:0', dtype=torch.float64)
tensor([-213.4888, -204.2168, -200.1494, -200.4060, -210.3880],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0165, device='cuda:0', dtype=torch.float64)
tensor([-213.4523, -204.2511, -200.1318, -200.3738, -210.3385],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0209, device='cuda:0', dtype=torch.float64)
tensor([-213.4089, -204.2657, -200.0824, -200.3086, -210.2810],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0143, device='cuda:0', dtype=torch.float64)
tensor([-213.3789, -204.2661, -200.0168, -200.2348, -210.2377],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0160, device='cuda:0', dtype=torch.float64)
tensor([-213.3812, -204.2340, -199.9188, -200.1445, -210.2296],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0240, device='cuda:0', dtype=torch.float64)
tensor([-213.3872, -204.2089, -199.8445, -200.0785, -210.2153],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0120, device='cuda:0', dtype=torch.float64)
tensor([-213.3800, -204.2080, -199.7992, -200.0325, -210.1876],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0119, device='cuda:0', dtype=torch.float64)
tensor([-213.3561, -204.2146, -199.7555, -199.9815, -210.1477],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0111, device='cuda:0', dtype=torch.float64)
tensor([-213.3255, -204.2184, -199.6954, -199.9140, -210.1018],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0163, device='cuda:0', dtype=torch.float64)
tensor([-213.2922, -204.2205, -199.6436, -199.8555, -210.0506],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0090, device='cuda:0', dtype=torch.float64)
tensor([-213.2487, -204.2205, -199.5851, -199.7843, -209.9843],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0147, device='cuda:0', dtype=torch.float64)
tensor([-213.2055, -204.2262, -199.5192, -199.7040, -209.9176],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0107, device='cuda:0', dtype=torch.float64)
tensor([-213.1766, -204.2138, -199.4607, -199.6298, -209.8896],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0104, device='cuda:0', dtype=torch.float64)
tensor([-213.1483, -204.2211, -199.4277, -199.5833, -209.8462],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0116, device='cuda:0', dtype=torch.float64)
tensor([-213.1262, -204.2385, -199.4244, -199.5691, -209.8148],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0140, device='cuda:0', dtype=torch.float64)
tensor([-213.1286, -204.2398, -199.4186, -199.5602, -209.8061],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0108, device='cuda:0', dtype=torch.float64)
tensor([-213.1254, -204.2567, -199.4467, -199.5805, -209.8006],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0120, device='cuda:0', dtype=torch.float64)
tensor([-213.1191, -204.2524, -199.4476, -199.5664, -209.7994],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0127, device='cuda:0', dtype=torch.float64)
tensor([-213.1054, -204.2714, -199.4548, -199.5590, -209.7861],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0161, device='cuda:0', dtype=torch.float64)
tensor([-213.0833, -204.2929, -199.4663, -199.5478, -209.7754],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0113, device='cuda:0', dtype=torch.float64)
tensor([-213.0686, -204.3043, -199.4815, -199.5448, -209.7669],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0111, device='cuda:0', dtype=torch.float64)
tensor([-213.0579, -204.3349, -199.5314, -199.5779, -209.7601],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0180, device='cuda:0', dtype=torch.float64)
tensor([-213.0677, -204.3524, -199.5736, -199.6145, -209.7630],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0124, device='cuda:0', dtype=torch.float64)
tensor([-213.0770, -204.3672, -199.6102, -199.6498, -209.7646],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0097, device='cuda:0', dtype=torch.float64)
tensor([-213.0897, -204.3710, -199.6523, -199.6939, -209.7825],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0153, device='cuda:0', dtype=torch.float64)
tensor([-213.1030, -204.3813, -199.6846, -199.7337, -209.7913],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0094, device='cuda:0', dtype=torch.float64)
tensor([-213.1054, -204.4006, -199.7152, -199.7647, -209.7858],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0123, device='cuda:0', dtype=torch.float64)
tensor([-213.0959, -204.4310, -199.7660, -199.8122, -209.7723],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0108, device='cuda:0', dtype=torch.float64)
tensor([-213.0870, -204.4736, -199.8180, -199.8646, -209.7511],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0121, device='cuda:0', dtype=torch.float64)
tensor([-213.0670, -204.5174, -199.8556, -199.9027, -209.7189],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0096, device='cuda:0', dtype=torch.float64)
tensor([-213.0505, -204.5584, -199.8930, -199.9422, -209.6833],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0151, device='cuda:0', dtype=torch.float64)
tensor([-213.0383, -204.5897, -199.9209, -199.9686, -209.6661],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0121, device='cuda:0', dtype=torch.float64)
tensor([-213.0207, -204.6189, -199.9410, -199.9800, -209.6433],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0146, device='cuda:0', dtype=torch.float64)
tensor([-212.9938, -204.6469, -199.9466, -199.9722, -209.6187],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0151, device='cuda:0', dtype=torch.float64)
tensor([-212.9726, -204.6713, -199.9495, -199.9660, -209.5996],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0148, device='cuda:0', dtype=torch.float64)
tensor([-212.9489, -204.7005, -199.9638, -199.9706, -209.5818],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0178, device='cuda:0', dtype=torch.float64)
tensor([-212.9364, -204.7075, -199.9588, -199.9659, -209.5703],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0123, device='cuda:0', dtype=torch.float64)
tensor([-212.9366, -204.6975, -199.9303, -199.9452, -209.5605],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0198, device='cuda:0', dtype=torch.float64)
tensor([-212.9383, -204.7269, -199.9542, -199.9702, -209.5465],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0107, device='cuda:0', dtype=torch.float64)
tensor([-212.9273, -204.7546, -199.9697, -199.9820, -209.5199],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0108, device='cuda:0', dtype=torch.float64)
tensor([-212.9076, -204.7706, -199.9693, -199.9676, -209.4873],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0103, device='cuda:0', dtype=torch.float64)
tensor([-212.8959, -204.7981, -199.9818, -199.9666, -209.4595],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0138, device='cuda:0', dtype=torch.float64)
tensor([-212.8815, -204.8195, -199.9704, -199.9443, -209.4289],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0135, device='cuda:0', dtype=torch.float64)
tensor([-212.8722, -204.8295, -199.9833, -199.9479, -209.4242],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0143, device='cuda:0', dtype=torch.float64)
tensor([-212.8511, -204.8145, -199.9831, -199.9310, -209.4211],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0117, device='cuda:0', dtype=torch.float64)
tensor([-212.8314, -204.8085, -199.9990, -199.9281, -209.4213],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0173, device='cuda:0', dtype=torch.float64)
tensor([-212.8314, -204.7876, -200.0053, -199.9308, -209.4357],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0132, device='cuda:0', dtype=torch.float64)
tensor([-212.8423, -204.7641, -200.0035, -199.9262, -209.4691],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0108, device='cuda:0', dtype=torch.float64)
tensor([-212.8576, -204.7288, -199.9951, -199.9206, -209.5017],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0099, device='cuda:0', dtype=torch.float64)
tensor([-212.8782, -204.7029, -199.9826, -199.9136, -209.5293],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0093, device='cuda:0', dtype=torch.float64)
tensor([-212.9133, -204.6547, -199.9531, -199.8944, -209.5775],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0130, device='cuda:0', dtype=torch.float64)
tensor([-212.9535, -204.6147, -199.9304, -199.8860, -209.6226],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0123, device='cuda:0', dtype=torch.float64)
tensor([-213.0084, -204.5504, -199.8888, -199.8623, -209.6910],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0092, device='cuda:0', dtype=torch.float64)
tensor([-213.0511, -204.5121, -199.8692, -199.8575, -209.7355],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0123, device='cuda:0', dtype=torch.float64)
tensor([-213.0840, -204.4903, -199.8676, -199.8668, -209.7703],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0146, device='cuda:0', dtype=torch.float64)
tensor([-213.1076, -204.4590, -199.8486, -199.8594, -209.7877],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0158, device='cuda:0', dtype=torch.float64)
tensor([-213.1109, -204.4354, -199.8266, -199.8452, -209.7683],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0138, device='cuda:0', dtype=torch.float64)
tensor([-213.1196, -204.4477, -199.8535, -199.8825, -209.7587],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0094, device='cuda:0', dtype=torch.float64)
tensor([-213.1238, -204.4719, -199.9110, -199.9464, -209.7456],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0124, device='cuda:0', dtype=torch.float64)
tensor([-213.1215, -204.5001, -199.9568, -199.9984, -209.7149],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0161, device='cuda:0', dtype=torch.float64)
tensor([-213.1271, -204.5226, -199.9931, -200.0362, -209.7018],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0169, device='cuda:0', dtype=torch.float64)
tensor([-213.1184, -204.5388, -200.0187, -200.0500, -209.6750],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0163, device='cuda:0', dtype=torch.float64)
tensor([-213.1130, -204.5520, -200.0463, -200.0628, -209.6569],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0113, device='cuda:0', dtype=torch.float64)
tensor([-213.0940, -204.5739, -200.0670, -200.0601, -209.6284],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0129, device='cuda:0', dtype=torch.float64)
tensor([-213.0904, -204.5787, -200.0711, -200.0509, -209.6139],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0107, device='cuda:0', dtype=torch.float64)
tensor([-213.0714, -204.5936, -200.0440, -200.0043, -209.5578],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0151, device='cuda:0', dtype=torch.float64)
tensor([-213.0661, -204.5957, -199.9926, -199.9413, -209.5098],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0112, device='cuda:0', dtype=torch.float64)
tensor([-213.0608, -204.6082, -199.9602, -199.8935, -209.4610],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0138, device='cuda:0', dtype=torch.float64)
tensor([-213.0598, -204.6264, -199.9486, -199.8698, -209.4233],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0090, device='cuda:0', dtype=torch.float64)
tensor([-213.0524, -204.6377, -199.9214, -199.8275, -209.3837],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0083, device='cuda:0', dtype=torch.float64)
tensor([-213.0733, -204.6412, -199.9012, -199.8107, -209.3788],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0144, device='cuda:0', dtype=torch.float64)
tensor([-213.1041, -204.6488, -199.8892, -199.8044, -209.3856],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0106, device='cuda:0', dtype=torch.float64)
tensor([-213.1378, -204.6607, -199.8795, -199.7970, -209.4021],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0122, device='cuda:0', dtype=torch.float64)
tensor([-213.1562, -204.6762, -199.8755, -199.7843, -209.4139],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0098, device='cuda:0', dtype=torch.float64)
tensor([-213.1577, -204.7006, -199.8654, -199.7617, -209.4033],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0123, device='cuda:0', dtype=torch.float64)
tensor([-213.1717, -204.7054, -199.8433, -199.7329, -209.4077],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0120, device='cuda:0', dtype=torch.float64)
tensor([-213.1860, -204.6966, -199.8067, -199.6988, -209.4102],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0154, device='cuda:0', dtype=torch.float64)
tensor([-213.2026, -204.6802, -199.7736, -199.6726, -209.4148],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0114, device='cuda:0', dtype=torch.float64)
tensor([-213.2210, -204.6542, -199.7330, -199.6377, -209.4307],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0119, device='cuda:0', dtype=torch.float64)
tensor([-213.2562, -204.6277, -199.7041, -199.6227, -209.4712],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0089, device='cuda:0', dtype=torch.float64)
tensor([-213.2900, -204.5979, -199.6864, -199.6163, -209.5239],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0147, device='cuda:0', dtype=torch.float64)
tensor([-213.3093, -204.5826, -199.6621, -199.5996, -209.5489],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0161, device='cuda:0', dtype=torch.float64)
tensor([-213.3354, -204.5742, -199.6578, -199.6024, -209.5837],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0134, device='cuda:0', dtype=torch.float64)
tensor([-213.3481, -204.5594, -199.6446, -199.5896, -209.6112],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0152, device='cuda:0', dtype=torch.float64)
tensor([-213.3661, -204.5412, -199.6264, -199.5752, -209.6526],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0106, device='cuda:0', dtype=torch.float64)
tensor([-213.3935, -204.5339, -199.6251, -199.5825, -209.7065],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0124, device='cuda:0', dtype=torch.float64)
tensor([-213.4264, -204.5164, -199.6079, -199.5838, -209.7593],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0124, device='cuda:0', dtype=torch.float64)
tensor([-213.4508, -204.5021, -199.5980, -199.5879, -209.7992],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0100, device='cuda:0', dtype=torch.float64)
tensor([-213.4549, -204.4923, -199.5864, -199.5799, -209.8127],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0139, device='cuda:0', dtype=torch.float64)
tensor([-213.4488, -204.5090, -199.6024, -199.5967, -209.8163],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0189, device='cuda:0', dtype=torch.float64)
tensor([-213.4705, -204.5261, -199.6412, -199.6510, -209.8517],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0107, device='cuda:0', dtype=torch.float64)
tensor([-213.4861, -204.5500, -199.6835, -199.7064, -209.8680],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0136, device='cuda:0', dtype=torch.float64)
tensor([-213.4951, -204.5462, -199.6818, -199.7063, -209.8829],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0128, device='cuda:0', dtype=torch.float64)
tensor([-213.4845, -204.5371, -199.6455, -199.6618, -209.8702],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0192, device='cuda:0', dtype=torch.float64)
tensor([-213.4800, -204.5229, -199.5809, -199.5955, -209.8470],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0121, device='cuda:0', dtype=torch.float64)
tensor([-213.4927, -204.5044, -199.5253, -199.5464, -209.8462],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0147, device='cuda:0', dtype=torch.float64)
tensor([-213.5062, -204.4863, -199.4408, -199.4718, -209.8417],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0123, device='cuda:0', dtype=torch.float64)
tensor([-213.5245, -204.4709, -199.3608, -199.4060, -209.8389],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0169, device='cuda:0', dtype=torch.float64)
tensor([-213.5396, -204.4571, -199.2943, -199.3592, -209.8314],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0172, device='cuda:0', dtype=torch.float64)
tensor([-213.5406, -204.4614, -199.2709, -199.3479, -209.8132],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0132, device='cuda:0', dtype=torch.float64)
tensor([-213.5570, -204.4550, -199.2355, -199.3327, -209.8147],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0155, device='cuda:0', dtype=torch.float64)
tensor([-213.5635, -204.4592, -199.2163, -199.3204, -209.8166],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0111, device='cuda:0', dtype=torch.float64)
tensor([-213.5695, -204.4739, -199.2104, -199.3135, -209.8212],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0141, device='cuda:0', dtype=torch.float64)
tensor([-213.5814, -204.4923, -199.2086, -199.3165, -209.8304],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0091, device='cuda:0', dtype=torch.float64)
tensor([-213.5757, -204.5195, -199.2160, -199.3283, -209.8130],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0143, device='cuda:0', dtype=torch.float64)
tensor([-213.5689, -204.5491, -199.2228, -199.3395, -209.7938],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0109, device='cuda:0', dtype=torch.float64)
tensor([-213.5770, -204.5727, -199.2215, -199.3525, -209.7893],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0134, device='cuda:0', dtype=torch.float64)
tensor([-213.5712, -204.6030, -199.2203, -199.3611, -209.7646],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0134, device='cuda:0', dtype=torch.float64)
tensor([-213.5651, -204.6334, -199.2228, -199.3781, -209.7392],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0110, device='cuda:0', dtype=torch.float64)
tensor([-213.5519, -204.6466, -199.2077, -199.3668, -209.7154],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0115, device='cuda:0', dtype=torch.float64)
tensor([-213.5392, -204.6775, -199.2271, -199.3953, -209.6887],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0143, device='cuda:0', dtype=torch.float64)
tensor([-213.5185, -204.6980, -199.2278, -199.3992, -209.6525],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0096, device='cuda:0', dtype=torch.float64)
tensor([-213.5084, -204.7092, -199.2407, -199.4220, -209.6377],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0111, device='cuda:0', dtype=torch.float64)
tensor([-213.4934, -204.7212, -199.2298, -199.4185, -209.6238],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0110, device='cuda:0', dtype=torch.float64)
tensor([-213.4769, -204.7366, -199.2369, -199.4310, -209.6189],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0116, device='cuda:0', dtype=torch.float64)
tensor([-213.4607, -204.7601, -199.2469, -199.4515, -209.6157],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0154, device='cuda:0', dtype=torch.float64)
tensor([-213.4480, -204.7758, -199.2445, -199.4551, -209.6200],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0121, device='cuda:0', dtype=torch.float64)
tensor([-213.4087, -204.7994, -199.2522, -199.4551, -209.6078],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0112, device='cuda:0', dtype=torch.float64)
tensor([-213.3828, -204.8287, -199.2694, -199.4732, -209.6046],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0092, device='cuda:0', dtype=torch.float64)
tensor([-213.3720, -204.8370, -199.2847, -199.4973, -209.6198],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0150, device='cuda:0', dtype=torch.float64)
tensor([-213.3853, -204.8480, -199.3336, -199.5665, -209.6639],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0130, device='cuda:0', dtype=torch.float64)
tensor([-213.3798, -204.8659, -199.3788, -199.6218, -209.6851],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0137, device='cuda:0', dtype=torch.float64)
tensor([-213.3551, -204.9063, -199.4147, -199.6524, -209.6763],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0143, device='cuda:0', dtype=torch.float64)
tensor([-213.3460, -204.9084, -199.4162, -199.6569, -209.6790],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0122, device='cuda:0', dtype=torch.float64)
tensor([-213.3608, -204.9078, -199.4212, -199.6735, -209.7178],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0166, device='cuda:0', dtype=torch.float64)
tensor([-213.3728, -204.8889, -199.3989, -199.6622, -209.7569],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0118, device='cuda:0', dtype=torch.float64)
tensor([-213.3877, -204.8562, -199.3828, -199.6499, -209.8240],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0140, device='cuda:0', dtype=torch.float64)
tensor([-213.3863, -204.8349, -199.3721, -199.6334, -209.8697],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0131, device='cuda:0', dtype=torch.float64)
tensor([-213.3830, -204.8354, -199.3719, -199.6270, -209.9027],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0127, device='cuda:0', dtype=torch.float64)
tensor([-213.3652, -204.8374, -199.3643, -199.6068, -209.9236],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0163, device='cuda:0', dtype=torch.float64)
tensor([-213.3539, -204.8259, -199.3462, -199.5843, -209.9445],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0182, device='cuda:0', dtype=torch.float64)
tensor([-213.3382, -204.8400, -199.3523, -199.5865, -209.9604],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0115, device='cuda:0', dtype=torch.float64)
tensor([-213.3212, -204.8421, -199.3487, -199.5763, -209.9689],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0088, device='cuda:0', dtype=torch.float64)
tensor([-213.3222, -204.8503, -199.3605, -199.5927, -209.9951],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0160, device='cuda:0', dtype=torch.float64)
tensor([-213.3620, -204.8371, -199.3622, -199.6204, -210.0431],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0109, device='cuda:0', dtype=torch.float64)
tensor([-213.3915, -204.8332, -199.3804, -199.6559, -210.0941],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0145, device='cuda:0', dtype=torch.float64)
tensor([-213.4172, -204.8258, -199.3775, -199.6673, -210.1357],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0147, device='cuda:0', dtype=torch.float64)
tensor([-213.4456, -204.8233, -199.3658, -199.6758, -210.1732],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0114, device='cuda:0', dtype=torch.float64)
tensor([-213.4739, -204.8172, -199.3559, -199.6871, -210.2071],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0153, device='cuda:0', dtype=torch.float64)
tensor([-213.5088, -204.8032, -199.3607, -199.7151, -210.2504],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0119, device='cuda:0', dtype=torch.float64)
tensor([-213.5390, -204.8017, -199.3626, -199.7426, -210.2796],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0105, device='cuda:0', dtype=torch.float64)
tensor([-213.5538, -204.8039, -199.3586, -199.7613, -210.2910],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0147, device='cuda:0', dtype=torch.float64)
tensor([-213.5652, -204.8012, -199.3359, -199.7588, -210.2915],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0096, device='cuda:0', dtype=torch.float64)
tensor([-213.5929, -204.7816, -199.2999, -199.7468, -210.3127],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0115, device='cuda:0', dtype=torch.float64)
tensor([-213.5989, -204.7655, -199.2738, -199.7346, -210.3200],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0114, device='cuda:0', dtype=torch.float64)
tensor([-213.6190, -204.7605, -199.2493, -199.7281, -210.3291],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0103, device='cuda:0', dtype=torch.float64)
tensor([-213.6213, -204.7575, -199.1953, -199.6802, -210.3105],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0139, device='cuda:0', dtype=torch.float64)
tensor([-213.6253, -204.7566, -199.1582, -199.6436, -210.3101],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0114, device='cuda:0', dtype=torch.float64)
tensor([-213.6108, -204.7619, -199.1133, -199.5937, -210.2793],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0089, device='cuda:0', dtype=torch.float64)
tensor([-213.5977, -204.7923, -199.1113, -199.5842, -210.2494],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0144, device='cuda:0', dtype=torch.float64)
tensor([-213.5854, -204.8517, -199.1502, -199.6093, -210.2268],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0117, device='cuda:0', dtype=torch.float64)
tensor([-213.5701, -204.9078, -199.1857, -199.6330, -210.1969],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0155, device='cuda:0', dtype=torch.float64)
tensor([-213.5546, -204.9676, -199.2210, -199.6546, -210.1697],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0118, device='cuda:0', dtype=torch.float64)
tensor([-213.5328, -205.0500, -199.2855, -199.6994, -210.1399],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0090, device='cuda:0', dtype=torch.float64)
tensor([-213.5030, -205.1332, -199.3507, -199.7426, -210.1066],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0144, device='cuda:0', dtype=torch.float64)
tensor([-213.4688, -205.2007, -199.3969, -199.7640, -210.0661],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0123, device='cuda:0', dtype=torch.float64)
tensor([-213.4259, -205.2320, -199.4086, -199.7479, -210.0114],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0141, device='cuda:0', dtype=torch.float64)
tensor([-213.3902, -205.2519, -199.4113, -199.7343, -209.9487],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0126, device='cuda:0', dtype=torch.float64)
tensor([-213.3402, -205.2742, -199.4169, -199.7162, -209.8808],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0176, device='cuda:0', dtype=torch.float64)
tensor([-213.2904, -205.2894, -199.4228, -199.6948, -209.8217],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0152, device='cuda:0', dtype=torch.float64)
tensor([-213.2504, -205.2889, -199.4124, -199.6558, -209.7736],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0097, device='cuda:0', dtype=torch.float64)
tensor([-213.2138, -205.2954, -199.4144, -199.6302, -209.7325],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0141, device='cuda:0', dtype=torch.float64)
tensor([-213.1493, -205.3264, -199.4291, -199.6088, -209.6502],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0133, device='cuda:0', dtype=torch.float64)
tensor([-213.1002, -205.3618, -199.4662, -199.6252, -209.5888],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0087, device='cuda:0', dtype=torch.float64)
tensor([-213.0481, -205.3997, -199.5010, -199.6401, -209.5200],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0116, device='cuda:0', dtype=torch.float64)
tensor([-212.9985, -205.4428, -199.5466, -199.6663, -209.4578],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0094, device='cuda:0', dtype=torch.float64)
tensor([-212.9553, -205.4771, -199.5939, -199.7003, -209.4160],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0142, device='cuda:0', dtype=torch.float64)
tensor([-212.9050, -205.5072, -199.6343, -199.7214, -209.3620],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0152, device='cuda:0', dtype=torch.float64)
tensor([-212.8722, -205.5168, -199.6429, -199.7160, -209.3342],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0106, device='cuda:0', dtype=torch.float64)
tensor([-212.8639, -205.5171, -199.6334, -199.7033, -209.3293],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0099, device='cuda:0', dtype=torch.float64)
tensor([-212.8765, -205.5217, -199.6488, -199.7271, -209.3494],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0132, device='cuda:0', dtype=torch.float64)
tensor([-212.8921, -205.5028, -199.6644, -199.7552, -209.3848],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0178, device='cuda:0', dtype=torch.float64)
tensor([-212.9017, -205.4978, -199.6880, -199.7891, -209.4149],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0117, device='cuda:0', dtype=torch.float64)
tensor([-212.9160, -205.4948, -199.7203, -199.8343, -209.4446],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0154, device='cuda:0', dtype=torch.float64)
tensor([-212.9306, -205.4804, -199.7297, -199.8550, -209.4841],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0114, device='cuda:0', dtype=torch.float64)
tensor([-212.9457, -205.4536, -199.7203, -199.8584, -209.5268],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0115, device='cuda:0', dtype=torch.float64)
tensor([-212.9697, -205.4330, -199.7312, -199.8819, -209.5924],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0160, device='cuda:0', dtype=torch.float64)
tensor([-213.0085, -205.3942, -199.7352, -199.9011, -209.6655],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0121, device='cuda:0', dtype=torch.float64)
tensor([-213.0377, -205.3613, -199.7350, -199.9081, -209.7175],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0113, device='cuda:0', dtype=torch.float64)
tensor([-213.0590, -205.3334, -199.7238, -199.9018, -209.7532],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0119, device='cuda:0', dtype=torch.float64)
tensor([-213.0888, -205.3178, -199.7231, -199.9106, -209.7915],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0117, device='cuda:0', dtype=torch.float64)
tensor([-213.0925, -205.3180, -199.7314, -199.9121, -209.7932],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0112, device='cuda:0', dtype=torch.float64)
tensor([-213.1063, -205.3250, -199.7585, -199.9402, -209.8042],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0119, device='cuda:0', dtype=torch.float64)
tensor([-213.1063, -205.3505, -199.7831, -199.9615, -209.7846],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0117, device='cuda:0', dtype=torch.float64)
tensor([-213.0959, -205.3760, -199.8266, -199.9951, -209.7632],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0171, device='cuda:0', dtype=torch.float64)
tensor([-213.0900, -205.3819, -199.8466, -200.0100, -209.7439],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0115, device='cuda:0', dtype=torch.float64)
tensor([-213.0532, -205.3821, -199.8351, -199.9788, -209.6821],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0107, device='cuda:0', dtype=torch.float64)
tensor([-213.0287, -205.3779, -199.8173, -199.9509, -209.6226],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0133, device='cuda:0', dtype=torch.float64)
tensor([-213.0158, -205.3696, -199.7919, -199.9163, -209.5829],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0148, device='cuda:0', dtype=torch.float64)
tensor([-213.0003, -205.3819, -199.7786, -199.8980, -209.5417],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0138, device='cuda:0', dtype=torch.float64)
tensor([-212.9868, -205.3736, -199.7295, -199.8439, -209.5005],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0130, device='cuda:0', dtype=torch.float64)
tensor([-212.9741, -205.3628, -199.6950, -199.8029, -209.4699],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0133, device='cuda:0', dtype=torch.float64)
tensor([-212.9649, -205.3401, -199.6344, -199.7377, -209.4401],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0109, device='cuda:0', dtype=torch.float64)
tensor([-212.9644, -205.2984, -199.5628, -199.6714, -209.4172],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0145, device='cuda:0', dtype=torch.float64)
tensor([-212.9701, -205.2338, -199.4890, -199.6022, -209.4016],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0101, device='cuda:0', dtype=torch.float64)
tensor([-212.9756, -205.1597, -199.3897, -199.5119, -209.3785],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0114, device='cuda:0', dtype=torch.float64)
tensor([-212.9703, -205.0803, -199.2915, -199.4153, -209.3429],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0121, device='cuda:0', dtype=torch.float64)
tensor([-212.9850, -204.9912, -199.1991, -199.3338, -209.3281],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0139, device='cuda:0', dtype=torch.float64)
tensor([-212.9893, -204.8997, -199.1191, -199.2596, -209.3118],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0142, device='cuda:0', dtype=torch.float64)
tensor([-212.9868, -204.8344, -199.0819, -199.2293, -209.2894],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0083, device='cuda:0', dtype=torch.float64)
tensor([-212.9911, -204.7635, -199.0428, -199.1980, -209.2748],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0128, device='cuda:0', dtype=torch.float64)
tensor([-212.9993, -204.7017, -199.0032, -199.1703, -209.2616],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0113, device='cuda:0', dtype=torch.float64)
tensor([-212.9936, -204.6600, -198.9773, -199.1487, -209.2316],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0151, device='cuda:0', dtype=torch.float64)
tensor([-212.9822, -204.6563, -198.9753, -199.1536, -209.1747],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0137, device='cuda:0', dtype=torch.float64)
tensor([-212.9892, -204.6622, -198.9955, -199.1924, -209.1351],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0151, device='cuda:0', dtype=torch.float64)
tensor([-212.9808, -204.6490, -198.9594, -199.1652, -209.0741],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0100, device='cuda:0', dtype=torch.float64)
tensor([-212.9738, -204.6444, -198.9357, -199.1403, -209.0289],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0107, device='cuda:0', dtype=torch.float64)
tensor([-212.9678, -204.6518, -198.9294, -199.1361, -208.9901],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0106, device='cuda:0', dtype=torch.float64)
tensor([-212.9576, -204.6590, -198.9291, -199.1363, -208.9534],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0120, device='cuda:0', dtype=torch.float64)
tensor([-212.9366, -204.6690, -198.9614, -199.1574, -208.9186],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0116, device='cuda:0', dtype=torch.float64)
tensor([-212.9305, -204.6812, -198.9869, -199.1757, -208.9023],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0113, device='cuda:0', dtype=torch.float64)
tensor([-212.9105, -204.7247, -199.0481, -199.2274, -208.8628],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0117, device='cuda:0', dtype=torch.float64)
tensor([-212.8945, -204.7923, -199.1450, -199.3157, -208.8403],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0117, device='cuda:0', dtype=torch.float64)
tensor([-212.8939, -204.8454, -199.2342, -199.3988, -208.8509],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0139, device='cuda:0', dtype=torch.float64)
tensor([-212.8955, -204.9186, -199.3494, -199.5056, -208.8752],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0105, device='cuda:0', dtype=torch.float64)
tensor([-212.9098, -204.9849, -199.4542, -199.6076, -208.9150],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0150, device='cuda:0', dtype=torch.float64)
tensor([-212.9318, -205.0216, -199.5416, -199.6927, -208.9667],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0177, device='cuda:0', dtype=torch.float64)
tensor([-212.9516, -205.0578, -199.6155, -199.7635, -209.0241],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0136, device='cuda:0', dtype=torch.float64)
tensor([-212.9603, -205.0841, -199.6800, -199.8208, -209.0650],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0091, device='cuda:0', dtype=torch.float64)
tensor([-212.9626, -205.0981, -199.7264, -199.8548, -209.0919],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0102, device='cuda:0', dtype=torch.float64)
tensor([-212.9572, -205.0867, -199.7436, -199.8551, -209.1040],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0129, device='cuda:0', dtype=torch.float64)
tensor([-212.9436, -205.0687, -199.7394, -199.8312, -209.1107],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0100, device='cuda:0', dtype=torch.float64)
tensor([-212.9327, -205.0512, -199.7283, -199.8045, -209.1064],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0169, device='cuda:0', dtype=torch.float64)
tensor([-212.8962, -205.0626, -199.7335, -199.7802, -209.0795],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0101, device='cuda:0', dtype=torch.float64)
tensor([-212.8693, -205.0737, -199.7356, -199.7598, -209.0508],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0145, device='cuda:0', dtype=torch.float64)
tensor([-212.8351, -205.1159, -199.7616, -199.7630, -209.0077],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0158, device='cuda:0', dtype=torch.float64)
tensor([-212.8000, -205.1580, -199.8026, -199.7778, -208.9716],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0121, device='cuda:0', dtype=torch.float64)
tensor([-212.7632, -205.2115, -199.8610, -199.8072, -208.9364],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0105, device='cuda:0', dtype=torch.float64)
tensor([-212.7380, -205.2367, -199.8905, -199.8230, -208.9147],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0151, device='cuda:0', dtype=torch.float64)
tensor([-212.7201, -205.2557, -199.9153, -199.8458, -208.8991],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0110, device='cuda:0', dtype=torch.float64)
tensor([-212.7094, -205.2612, -199.9405, -199.8643, -208.8976],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0123, device='cuda:0', dtype=torch.float64)
tensor([-212.7101, -205.2538, -199.9729, -199.8933, -208.9056],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0104, device='cuda:0', dtype=torch.float64)
tensor([-212.7032, -205.2597, -200.0081, -199.9227, -208.8990],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0104, device='cuda:0', dtype=torch.float64)
tensor([-212.7039, -205.2467, -200.0053, -199.9181, -208.8939],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0111, device='cuda:0', dtype=torch.float64)
tensor([-212.7208, -205.2239, -199.9913, -199.9062, -208.9151],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0119, device='cuda:0', dtype=torch.float64)
tensor([-212.7350, -205.2078, -199.9882, -199.9023, -208.9479],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0081, device='cuda:0', dtype=torch.float64)
tensor([-212.7558, -205.1769, -199.9779, -199.8923, -208.9942],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0127, device='cuda:0', dtype=torch.float64)
tensor([-212.7605, -205.1355, -199.9458, -199.8543, -209.0187],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0084, device='cuda:0', dtype=torch.float64)
tensor([-212.7831, -205.0903, -199.8932, -199.8059, -209.0591],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0103, device='cuda:0', dtype=torch.float64)
tensor([-212.8005, -205.0427, -199.8534, -199.7728, -209.1052],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0119, device='cuda:0', dtype=torch.float64)
tensor([-212.8174, -204.9953, -199.8171, -199.7393, -209.1389],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0185, device='cuda:0', dtype=torch.float64)
tensor([-212.8126, -204.9644, -199.7837, -199.6964, -209.1439],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0144, device='cuda:0', dtype=torch.float64)
tensor([-212.7778, -204.9257, -199.7302, -199.6167, -209.1083],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0113, device='cuda:0', dtype=torch.float64)
tensor([-212.7474, -204.9017, -199.6944, -199.5586, -209.0750],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0129, device='cuda:0', dtype=torch.float64)
tensor([-212.7212, -204.8846, -199.6657, -199.5130, -209.0500],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0126, device='cuda:0', dtype=torch.float64)
tensor([-212.6887, -204.8801, -199.6375, -199.4655, -209.0105],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0080, device='cuda:0', dtype=torch.float64)
tensor([-212.6527, -204.8969, -199.6371, -199.4444, -208.9693],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0111, device='cuda:0', dtype=torch.float64)
tensor([-212.6270, -204.9006, -199.6184, -199.4166, -208.9299],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0097, device='cuda:0', dtype=torch.float64)
tensor([-212.6337, -204.9090, -199.6183, -199.4264, -208.9159],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0096, device='cuda:0', dtype=torch.float64)
tensor([-212.6394, -204.9246, -199.6325, -199.4456, -208.9165],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0122, device='cuda:0', dtype=torch.float64)
tensor([-212.6409, -204.9433, -199.6091, -199.4317, -208.8886],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0112, device='cuda:0', dtype=torch.float64)
tensor([-212.6604, -204.9525, -199.5793, -199.4139, -208.8718],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0147, device='cuda:0', dtype=torch.float64)
tensor([-212.7017, -204.9472, -199.5293, -199.3920, -208.8746],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0093, device='cuda:0', dtype=torch.float64)
tensor([-212.7304, -204.9650, -199.4953, -199.3793, -208.8724],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0133, device='cuda:0', dtype=torch.float64)
tensor([-212.7674, -204.9816, -199.4572, -199.3615, -208.8836],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0110, device='cuda:0', dtype=torch.float64)
tensor([-212.8180, -204.9851, -199.4075, -199.3296, -208.9199],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0109, device='cuda:0', dtype=torch.float64)
tensor([-212.8632, -204.9802, -199.3439, -199.2826, -208.9506],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0114, device='cuda:0', dtype=torch.float64)
tensor([-212.9078, -204.9535, -199.2518, -199.2093, -208.9743],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0118, device='cuda:0', dtype=torch.float64)
tensor([-212.9680, -204.9249, -199.1715, -199.1568, -209.0216],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0146, device='cuda:0', dtype=torch.float64)
tensor([-213.0250, -204.9074, -199.1212, -199.1321, -209.0744],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0095, device='cuda:0', dtype=torch.float64)
tensor([-213.0796, -204.8944, -199.0738, -199.1091, -209.1210],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0099, device='cuda:0', dtype=torch.float64)
tensor([-213.1292, -204.8896, -199.0437, -199.1029, -209.1646],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0146, device='cuda:0', dtype=torch.float64)
tensor([-213.1488, -204.9066, -199.0396, -199.1104, -209.1751],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0132, device='cuda:0', dtype=torch.float64)
tensor([-213.1567, -204.9367, -199.0465, -199.1211, -209.1664],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0168, device='cuda:0', dtype=torch.float64)
tensor([-213.1565, -204.9591, -199.0668, -199.1431, -209.1516],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0124, device='cuda:0', dtype=torch.float64)
tensor([-213.1442, -204.9938, -199.0985, -199.1714, -209.1336],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0103, device='cuda:0', dtype=torch.float64)
tensor([-213.1096, -205.0095, -199.1006, -199.1588, -209.0915],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0110, device='cuda:0', dtype=torch.float64)
tensor([-213.0762, -205.0342, -199.1199, -199.1617, -209.0515],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0105, device='cuda:0', dtype=torch.float64)
tensor([-213.0651, -205.0282, -199.1186, -199.1542, -209.0288],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0073, device='cuda:0', dtype=torch.float64)
tensor([-213.0591, -205.0171, -199.1104, -199.1415, -209.0143],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0122, device='cuda:0', dtype=torch.float64)
tensor([-213.0767, -205.0078, -199.1112, -199.1509, -209.0175],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0172, device='cuda:0', dtype=torch.float64)
tensor([-213.0883, -204.9848, -199.0870, -199.1360, -209.0073],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0121, device='cuda:0', dtype=torch.float64)
tensor([-213.1079, -204.9814, -199.0924, -199.1516, -209.0199],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0107, device='cuda:0', dtype=torch.float64)
tensor([-213.1303, -204.9913, -199.1262, -199.1985, -209.0345],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0104, device='cuda:0', dtype=torch.float64)
tensor([-213.1528, -205.0030, -199.1686, -199.2563, -209.0392],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0104, device='cuda:0', dtype=torch.float64)
tensor([-213.1731, -205.0091, -199.1946, -199.2890, -209.0454],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0100, device='cuda:0', dtype=torch.float64)
tensor([-213.1908, -205.0196, -199.2360, -199.3338, -209.0621],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0108, device='cuda:0', dtype=torch.float64)
tensor([-213.2032, -205.0493, -199.2957, -199.3939, -209.0735],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0123, device='cuda:0', dtype=torch.float64)
tensor([-213.2230, -205.0782, -199.3502, -199.4493, -209.0979],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0133, device='cuda:0', dtype=torch.float64)
tensor([-213.2449, -205.0712, -199.3324, -199.4387, -209.1019],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0135, device='cuda:0', dtype=torch.float64)
tensor([-213.2696, -205.0486, -199.3019, -199.4220, -209.1043],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0120, device='cuda:0', dtype=torch.float64)
tensor([-213.2939, -205.0243, -199.2738, -199.4100, -209.1029],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0104, device='cuda:0', dtype=torch.float64)
tensor([-213.3060, -205.0080, -199.2285, -199.3773, -209.0797],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0120, device='cuda:0', dtype=torch.float64)
tensor([-213.2876, -205.0043, -199.1921, -199.3408, -209.0307],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0167, device='cuda:0', dtype=torch.float64)
tensor([-213.2735, -205.0679, -199.2161, -199.3641, -209.0120],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0151, device='cuda:0', dtype=torch.float64)
tensor([-213.2675, -205.1493, -199.2442, -199.3965, -208.9973],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0090, device='cuda:0', dtype=torch.float64)
tensor([-213.2731, -205.2476, -199.3084, -199.4726, -209.0025],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0087, device='cuda:0', dtype=torch.float64)
tensor([-213.2652, -205.3541, -199.3851, -199.5554, -208.9977],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0108, device='cuda:0', dtype=torch.float64)
tensor([-213.2678, -205.4664, -199.4699, -199.6496, -209.0177],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0120, device='cuda:0', dtype=torch.float64)
tensor([-213.2695, -205.5608, -199.5438, -199.7252, -209.0492],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0122, device='cuda:0', dtype=torch.float64)
tensor([-213.2647, -205.6275, -199.5972, -199.7737, -209.0834],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0088, device='cuda:0', dtype=torch.float64)
tensor([-213.2613, -205.6896, -199.6406, -199.8115, -209.1206],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0108, device='cuda:0', dtype=torch.float64)
tensor([-213.2327, -205.7437, -199.6683, -199.8212, -209.1263],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0123, device='cuda:0', dtype=torch.float64)
tensor([-213.2161, -205.7827, -199.6846, -199.8251, -209.1312],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0106, device='cuda:0', dtype=torch.float64)
tensor([-213.1947, -205.7834, -199.6917, -199.8133, -209.1401],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0108, device='cuda:0', dtype=torch.float64)
tensor([-213.1911, -205.7848, -199.6817, -199.7950, -209.1554],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0127, device='cuda:0', dtype=torch.float64)
tensor([-213.1737, -205.7787, -199.6563, -199.7566, -209.1572],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0103, device='cuda:0', dtype=torch.float64)
tensor([-213.1676, -205.7632, -199.6099, -199.7037, -209.1601],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0150, device='cuda:0', dtype=torch.float64)
tensor([-213.1500, -205.7349, -199.5374, -199.6230, -209.1498],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0109, device='cuda:0', dtype=torch.float64)
tensor([-213.1342, -205.6942, -199.4562, -199.5363, -209.1352],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0121, device='cuda:0', dtype=torch.float64)
tensor([-213.1094, -205.6116, -199.3034, -199.3732, -209.0905],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0126, device='cuda:0', dtype=torch.float64)
tensor([-213.0779, -205.5086, -199.1255, -199.1771, -209.0343],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0116, device='cuda:0', dtype=torch.float64)
tensor([-213.0738, -205.3976, -198.9569, -199.0098, -208.9991],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0115, device='cuda:0', dtype=torch.float64)
tensor([-213.0801, -205.2679, -198.7898, -198.8446, -208.9794],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0102, device='cuda:0', dtype=torch.float64)
tensor([-213.0967, -205.1477, -198.6406, -198.7009, -208.9590],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0093, device='cuda:0', dtype=torch.float64)
tensor([-213.1168, -205.0535, -198.5470, -198.6153, -208.9546],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0106, device='cuda:0', dtype=torch.float64)
tensor([-213.1510, -204.9724, -198.4675, -198.5533, -208.9650],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0133, device='cuda:0', dtype=torch.float64)
tensor([-213.1879, -204.8921, -198.3796, -198.4828, -208.9751],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0104, device='cuda:0', dtype=torch.float64)
tensor([-213.2188, -204.8156, -198.2921, -198.4107, -208.9825],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0123, device='cuda:0', dtype=torch.float64)
tensor([-213.2608, -204.7554, -198.1884, -198.3313, -208.9868],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0116, device='cuda:0', dtype=torch.float64)
tensor([-213.3111, -204.6995, -198.0969, -198.2720, -208.9911],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0141, device='cuda:0', dtype=torch.float64)
tensor([-213.3667, -204.6664, -198.0447, -198.2588, -209.0065],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0096, device='cuda:0', dtype=torch.float64)
tensor([-213.4053, -204.6397, -198.0096, -198.2536, -209.0169],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0101, device='cuda:0', dtype=torch.float64)
tensor([-213.4617, -204.6215, -197.9904, -198.2753, -209.0460],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0152, device='cuda:0', dtype=torch.float64)
tensor([-213.5184, -204.6130, -197.9905, -198.3109, -209.0689],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0114, device='cuda:0', dtype=torch.float64)
tensor([-213.5666, -204.6191, -197.9927, -198.3430, -209.0818],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0103, device='cuda:0', dtype=torch.float64)
tensor([-213.5878, -204.6309, -198.0102, -198.3810, -209.0680],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0103, device='cuda:0', dtype=torch.float64)
tensor([-213.5818, -204.6599, -198.0520, -198.4291, -209.0453],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0082, device='cuda:0', dtype=torch.float64)
tensor([-213.5731, -204.7087, -198.1392, -198.5211, -209.0346],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0128, device='cuda:0', dtype=torch.float64)
tensor([-213.5745, -204.7546, -198.2238, -198.6164, -209.0375],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0108, device='cuda:0', dtype=torch.float64)
tensor([-213.5614, -204.8275, -198.3231, -198.7173, -209.0338],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0162, device='cuda:0', dtype=torch.float64)
tensor([-213.5486, -204.9132, -198.4236, -198.8228, -209.0356],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0129, device='cuda:0', dtype=torch.float64)
tensor([-213.5403, -204.9912, -198.5247, -198.9349, -209.0356],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0158, device='cuda:0', dtype=torch.float64)
tensor([-213.5228, -205.0899, -198.6465, -199.0558, -209.0431],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0133, device='cuda:0', dtype=torch.float64)
tensor([-213.5142, -205.1925, -198.7763, -199.1887, -209.0617],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0121, device='cuda:0', dtype=torch.float64)
tensor([-213.4987, -205.3016, -198.9003, -199.3181, -209.0596],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0103, device='cuda:0', dtype=torch.float64)
tensor([-213.4806, -205.3859, -199.0025, -199.4257, -209.0578],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0097, device='cuda:0', dtype=torch.float64)
tensor([-213.4559, -205.4387, -199.0415, -199.4617, -209.0312],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0134, device='cuda:0', dtype=torch.float64)
tensor([-213.4522, -205.4602, -199.0604, -199.4856, -209.0221],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0136, device='cuda:0', dtype=torch.float64)
tensor([-213.4526, -205.4810, -199.0593, -199.4918, -208.9966],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0122, device='cuda:0', dtype=torch.float64)
tensor([-213.4247, -205.4658, -199.0127, -199.4361, -208.9430],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0098, device='cuda:0', dtype=torch.float64)
tensor([-213.3944, -205.4278, -198.9257, -199.3421, -208.8785],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0138, device='cuda:0', dtype=torch.float64)
tensor([-213.3245, -205.3540, -198.7998, -199.1928, -208.7690],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0097, device='cuda:0', dtype=torch.float64)
tensor([-213.2536, -205.2868, -198.6926, -199.0538, -208.6724],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0103, device='cuda:0', dtype=torch.float64)
tensor([-213.1788, -205.2295, -198.5987, -198.9268, -208.5748],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0152, device='cuda:0', dtype=torch.float64)
tensor([-213.1166, -205.1735, -198.5267, -198.8249, -208.5075],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0130, device='cuda:0', dtype=torch.float64)
tensor([-213.0740, -205.0973, -198.4355, -198.7122, -208.4607],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0107, device='cuda:0', dtype=torch.float64)
tensor([-213.0130, -205.0228, -198.3459, -198.5879, -208.3981],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0089, device='cuda:0', dtype=torch.float64)
tensor([-212.9718, -204.9580, -198.2671, -198.4843, -208.3534],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0155, device='cuda:0', dtype=torch.float64)
tensor([-212.9429, -204.8968, -198.2194, -198.4173, -208.3378],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0114, device='cuda:0', dtype=torch.float64)
tensor([-212.9417, -204.8673, -198.2132, -198.4057, -208.3666],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0132, device='cuda:0', dtype=torch.float64)
tensor([-212.9147, -204.8363, -198.2180, -198.3934, -208.3728],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0117, device='cuda:0', dtype=torch.float64)
tensor([-212.8861, -204.7966, -198.2261, -198.3836, -208.3716],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0109, device='cuda:0', dtype=torch.float64)
tensor([-212.8498, -204.7816, -198.2587, -198.3912, -208.3652],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0157, device='cuda:0', dtype=torch.float64)
tensor([-212.8062, -204.7869, -198.3058, -198.4113, -208.3554],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0121, device='cuda:0', dtype=torch.float64)
tensor([-212.7719, -204.7793, -198.3446, -198.4273, -208.3409],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0104, device='cuda:0', dtype=torch.float64)
tensor([-212.7581, -204.7658, -198.3669, -198.4365, -208.3402],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0126, device='cuda:0', dtype=torch.float64)
tensor([-212.7503, -204.7527, -198.3938, -198.4494, -208.3463],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0094, device='cuda:0', dtype=torch.float64)
tensor([-212.7580, -204.7352, -198.3862, -198.4372, -208.3540],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0125, device='cuda:0', dtype=torch.float64)
tensor([-212.7627, -204.7131, -198.3738, -198.4219, -208.3537],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0099, device='cuda:0', dtype=torch.float64)
tensor([-212.7487, -204.7113, -198.3869, -198.4233, -208.3420],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0118, device='cuda:0', dtype=torch.float64)
tensor([-212.7260, -204.7376, -198.4147, -198.4425, -208.3228],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0148, device='cuda:0', dtype=torch.float64)
tensor([-212.7301, -204.7644, -198.4404, -198.4826, -208.3414],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0100, device='cuda:0', dtype=torch.float64)
tensor([-212.7275, -204.7747, -198.4486, -198.4976, -208.3543],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0119, device='cuda:0', dtype=torch.float64)
tensor([-212.7299, -204.7753, -198.4643, -198.5235, -208.3804],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0085, device='cuda:0', dtype=torch.float64)
tensor([-212.7421, -204.7954, -198.4913, -198.5657, -208.4115],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0123, device='cuda:0', dtype=torch.float64)
tensor([-212.7645, -204.8140, -198.5316, -198.6289, -208.4609],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0105, device='cuda:0', dtype=torch.float64)
tensor([-212.7954, -204.8208, -198.5595, -198.6778, -208.5289],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0115, device='cuda:0', dtype=torch.float64)
tensor([-212.8018, -204.8613, -198.6146, -198.7447, -208.5747],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0109, device='cuda:0', dtype=torch.float64)
tensor([-212.7900, -204.9077, -198.6908, -198.8228, -208.6169],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0113, device='cuda:0', dtype=torch.float64)
tensor([-212.7651, -204.9904, -198.8037, -198.9306, -208.6608],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0150, device='cuda:0', dtype=torch.float64)
tensor([-212.7430, -205.0746, -198.9124, -199.0417, -208.6957],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0112, device='cuda:0', dtype=torch.float64)
tensor([-212.7090, -205.1339, -198.9893, -199.1204, -208.6954],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0087, device='cuda:0', dtype=torch.float64)
tensor([-212.6854, -205.1698, -199.0500, -199.1815, -208.7049],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0134, device='cuda:0', dtype=torch.float64)
tensor([-212.6553, -205.1929, -199.1073, -199.2359, -208.7064],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0090, device='cuda:0', dtype=torch.float64)
tensor([-212.6304, -205.2480, -199.1994, -199.3290, -208.7104],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0103, device='cuda:0', dtype=torch.float64)
tensor([-212.6248, -205.2638, -199.2244, -199.3646, -208.7137],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0120, device='cuda:0', dtype=torch.float64)
tensor([-212.6199, -205.2477, -199.2128, -199.3509, -208.7074],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0139, device='cuda:0', dtype=torch.float64)
tensor([-212.5972, -205.2371, -199.2015, -199.3278, -208.6726],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0216, device='cuda:0', dtype=torch.float64)
tensor([-212.5899, -205.2210, -199.1921, -199.3086, -208.6590],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0095, device='cuda:0', dtype=torch.float64)
tensor([-212.5999, -205.1568, -199.1229, -199.2357, -208.6439],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0108, device='cuda:0', dtype=torch.float64)
tensor([-212.6054, -205.1077, -199.0869, -199.1977, -208.6427],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0169, device='cuda:0', dtype=torch.float64)
tensor([-212.6209, -205.0420, -199.0429, -199.1512, -208.6521],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0113, device='cuda:0', dtype=torch.float64)
tensor([-212.6493, -204.9917, -199.0137, -199.1263, -208.6858],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0136, device='cuda:0', dtype=torch.float64)
tensor([-212.6604, -204.9261, -198.9488, -199.0596, -208.6875],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0105, device='cuda:0', dtype=torch.float64)
tensor([-212.6646, -204.8576, -198.8638, -198.9723, -208.6789],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0110, device='cuda:0', dtype=torch.float64)
tensor([-212.6732, -204.7670, -198.7797, -198.8860, -208.6698],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0113, device='cuda:0', dtype=torch.float64)
tensor([-212.6894, -204.6803, -198.6901, -198.7964, -208.6529],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0117, device='cuda:0', dtype=torch.float64)
tensor([-212.7152, -204.5863, -198.5860, -198.6977, -208.6451],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0116, device='cuda:0', dtype=torch.float64)
tensor([-212.7228, -204.5105, -198.5046, -198.6141, -208.6247],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0100, device='cuda:0', dtype=torch.float64)
tensor([-212.7195, -204.4348, -198.4231, -198.5196, -208.5877],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0122, device='cuda:0', dtype=torch.float64)
tensor([-212.7419, -204.3715, -198.3501, -198.4486, -208.5806],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0141, device='cuda:0', dtype=torch.float64)
tensor([-212.7488, -204.3356, -198.3187, -198.4194, -208.5653],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0174, device='cuda:0', dtype=torch.float64)
tensor([-212.7660, -204.3200, -198.3052, -198.4124, -208.5696],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0116, device='cuda:0', dtype=torch.float64)
tensor([-212.7714, -204.3351, -198.3114, -198.4209, -208.5704],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0136, device='cuda:0', dtype=torch.float64)
tensor([-212.7897, -204.3510, -198.3121, -198.4255, -208.5911],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0141, device='cuda:0', dtype=torch.float64)
tensor([-212.7870, -204.3627, -198.3270, -198.4276, -208.5837],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0109, device='cuda:0', dtype=torch.float64)
tensor([-212.7860, -204.3689, -198.3272, -198.4178, -208.5659],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0114, device='cuda:0', dtype=torch.float64)
tensor([-212.7630, -204.3848, -198.3314, -198.4057, -208.5346],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0119, device='cuda:0', dtype=torch.float64)
tensor([-212.7547, -204.3980, -198.3169, -198.3842, -208.5060],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0157, device='cuda:0', dtype=torch.float64)
tensor([-212.7369, -204.4158, -198.3058, -198.3691, -208.4765],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0118, device='cuda:0', dtype=torch.float64)
tensor([-212.7093, -204.4493, -198.2971, -198.3472, -208.4395],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0122, device='cuda:0', dtype=torch.float64)
tensor([-212.6969, -204.4714, -198.2866, -198.3336, -208.4100],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0148, device='cuda:0', dtype=torch.float64)
tensor([-212.6794, -204.4885, -198.2753, -198.3127, -208.3774],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0123, device='cuda:0', dtype=torch.float64)
tensor([-212.6589, -204.5227, -198.2647, -198.2883, -208.3549],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0095, device='cuda:0', dtype=torch.float64)
tensor([-212.6426, -204.5426, -198.2264, -198.2389, -208.3305],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0199, device='cuda:0', dtype=torch.float64)
tensor([-212.6522, -204.5363, -198.1724, -198.1859, -208.3353],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0127, device='cuda:0', dtype=torch.float64)
tensor([-212.6365, -204.5392, -198.1554, -198.1586, -208.3296],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0093, device='cuda:0', dtype=torch.float64)
tensor([-212.6153, -204.5476, -198.1280, -198.1242, -208.3061],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0182, device='cuda:0', dtype=torch.float64)
tensor([-212.6045, -204.5688, -198.1414, -198.1351, -208.3051],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0113, device='cuda:0', dtype=torch.float64)
tensor([-212.5615, -204.5833, -198.1424, -198.1171, -208.2570],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0086, device='cuda:0', dtype=torch.float64)
tensor([-212.5227, -204.6044, -198.1509, -198.1123, -208.2104],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0096, device='cuda:0', dtype=torch.float64)
tensor([-212.4931, -204.6369, -198.1597, -198.1169, -208.1769],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0180, device='cuda:0', dtype=torch.float64)
tensor([-212.4690, -204.6684, -198.1723, -198.1263, -208.1581],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0123, device='cuda:0', dtype=torch.float64)
tensor([-212.4684, -204.6928, -198.1388, -198.0999, -208.1490],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0123, device='cuda:0', dtype=torch.float64)
tensor([-212.4559, -204.7486, -198.1518, -198.1139, -208.1309],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0176, device='cuda:0', dtype=torch.float64)
tensor([-212.4363, -204.8023, -198.1636, -198.1232, -208.1063],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0117, device='cuda:0', dtype=torch.float64)
tensor([-212.4183, -204.8370, -198.1522, -198.0972, -208.0872],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0157, device='cuda:0', dtype=torch.float64)
tensor([-212.4022, -204.8779, -198.1395, -198.0719, -208.0720],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0128, device='cuda:0', dtype=torch.float64)
tensor([-212.4127, -204.8930, -198.0766, -198.0052, -208.0656],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0131, device='cuda:0', dtype=torch.float64)
tensor([-212.4530, -204.8997, -198.0130, -197.9586, -208.0802],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0148, device='cuda:0', dtype=torch.float64)
tensor([-212.4906, -204.9074, -197.9541, -197.9117, -208.0911],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0107, device='cuda:0', dtype=torch.float64)
tensor([-212.5228, -204.9188, -197.9126, -197.8762, -208.1021],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0104, device='cuda:0', dtype=torch.float64)
tensor([-212.5573, -204.9079, -197.8351, -197.8071, -208.1025],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0109, device='cuda:0', dtype=torch.float64)
tensor([-212.5734, -204.9131, -197.7911, -197.7627, -208.0868],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0114, device='cuda:0', dtype=torch.float64)
tensor([-212.5645, -204.9022, -197.7319, -197.6864, -208.0413],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0128, device='cuda:0', dtype=torch.float64)
tensor([-212.5849, -204.8933, -197.6705, -197.6321, -208.0253],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0150, device='cuda:0', dtype=torch.float64)
tensor([-212.6429, -204.8532, -197.5959, -197.5805, -208.0497],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0136, device='cuda:0', dtype=torch.float64)
tensor([-212.6838, -204.8237, -197.5462, -197.5512, -208.0532],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0141, device='cuda:0', dtype=torch.float64)
tensor([-212.7181, -204.8045, -197.5136, -197.5419, -208.0561],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0095, device='cuda:0', dtype=torch.float64)
tensor([-212.7519, -204.7621, -197.4742, -197.5247, -208.0493],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0088, device='cuda:0', dtype=torch.float64)
tensor([-212.7742, -204.7256, -197.4774, -197.5503, -208.0463],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0084, device='cuda:0', dtype=torch.float64)
tensor([-212.8297, -204.6660, -197.4595, -197.5657, -208.0680],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0114, device='cuda:0', dtype=torch.float64)
tensor([-212.8652, -204.6248, -197.4906, -197.6123, -208.0867],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0114, device='cuda:0', dtype=torch.float64)
tensor([-212.9245, -204.5742, -197.5225, -197.6780, -208.1269],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0121, device='cuda:0', dtype=torch.float64)
tensor([-212.9843, -204.5161, -197.5371, -197.7220, -208.1675],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0108, device='cuda:0', dtype=torch.float64)
tensor([-213.0571, -204.4426, -197.5403, -197.7514, -208.2275],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0132, device='cuda:0', dtype=torch.float64)
tensor([-213.1482, -204.3890, -197.5824, -197.8336, -208.2964],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0124, device='cuda:0', dtype=torch.float64)
tensor([-213.1925, -204.3628, -197.6541, -197.9287, -208.3280],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0095, device='cuda:0', dtype=torch.float64)
tensor([-213.2449, -204.3505, -197.7293, -198.0376, -208.3546],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0132, device='cuda:0', dtype=torch.float64)
tensor([-213.3053, -204.3539, -197.8222, -198.1650, -208.3935],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0143, device='cuda:0', dtype=torch.float64)
tensor([-213.3401, -204.3588, -197.8888, -198.2515, -208.3977],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0114, device='cuda:0', dtype=torch.float64)
tensor([-213.3683, -204.3728, -197.9423, -198.3208, -208.3953],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0161, device='cuda:0', dtype=torch.float64)
tensor([-213.3582, -204.4240, -198.0326, -198.4218, -208.3737],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0129, device='cuda:0', dtype=torch.float64)
tensor([-213.3557, -204.4727, -198.1031, -198.5088, -208.3501],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0107, device='cuda:0', dtype=torch.float64)
tensor([-213.3304, -204.5357, -198.1765, -198.5921, -208.3154],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0094, device='cuda:0', dtype=torch.float64)
tensor([-213.2970, -204.5965, -198.2540, -198.6771, -208.2773],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0115, device='cuda:0', dtype=torch.float64)
tensor([-213.2311, -204.6351, -198.3082, -198.7241, -208.1970],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0117, device='cuda:0', dtype=torch.float64)
tensor([-213.1439, -204.6598, -198.3658, -198.7567, -208.1094],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0122, device='cuda:0', dtype=torch.float64)
tensor([-213.0831, -204.6722, -198.4206, -198.7932, -208.0546],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0120, device='cuda:0', dtype=torch.float64)
tensor([-213.0413, -204.6688, -198.4388, -198.7997, -208.0076],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0100, device='cuda:0', dtype=torch.float64)
tensor([-212.9705, -204.6655, -198.4688, -198.8017, -207.9454],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0121, device='cuda:0', dtype=torch.float64)
tensor([-212.9008, -204.6657, -198.4845, -198.7853, -207.8780],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0105, device='cuda:0', dtype=torch.float64)
tensor([-212.8503, -204.6639, -198.4931, -198.7715, -207.8354],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0111, device='cuda:0', dtype=torch.float64)
tensor([-212.8258, -204.6377, -198.4801, -198.7411, -207.8242],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0160, device='cuda:0', dtype=torch.float64)
tensor([-212.7959, -204.5831, -198.4405, -198.6762, -207.8108],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0162, device='cuda:0', dtype=torch.float64)
tensor([-212.7694, -204.5304, -198.3778, -198.5929, -207.7988],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0102, device='cuda:0', dtype=torch.float64)
tensor([-212.7739, -204.4810, -198.3068, -198.5172, -207.8058],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0127, device='cuda:0', dtype=torch.float64)
tensor([-212.7609, -204.4177, -198.2114, -198.4041, -207.7960],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0102, device='cuda:0', dtype=torch.float64)
tensor([-212.7515, -204.3621, -198.1487, -198.3264, -207.7995],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0121, device='cuda:0', dtype=torch.float64)
tensor([-212.7439, -204.3308, -198.1026, -198.2716, -207.8109],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0118, device='cuda:0', dtype=torch.float64)
tensor([-212.7528, -204.3062, -198.0863, -198.2593, -207.8449],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0127, device='cuda:0', dtype=torch.float64)
tensor([-212.7522, -204.2552, -198.0421, -198.2111, -207.8555],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0097, device='cuda:0', dtype=torch.float64)
tensor([-212.7499, -204.2159, -197.9945, -198.1580, -207.8550],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0122, device='cuda:0', dtype=torch.float64)
tensor([-212.7497, -204.1691, -197.9151, -198.0807, -207.8390],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0137, device='cuda:0', dtype=torch.float64)
tensor([-212.7368, -204.1451, -197.8691, -198.0270, -207.8198],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0133, device='cuda:0', dtype=torch.float64)
tensor([-212.7146, -204.1598, -197.8914, -198.0503, -207.7946],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0134, device='cuda:0', dtype=torch.float64)
tensor([-212.6727, -204.1536, -197.8924, -198.0367, -207.7500],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0107, device='cuda:0', dtype=torch.float64)
tensor([-212.6348, -204.1611, -197.9206, -198.0567, -207.7085],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0120, device='cuda:0', dtype=torch.float64)
tensor([-212.6181, -204.1747, -197.9734, -198.1099, -207.6934],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0107, device='cuda:0', dtype=torch.float64)
tensor([-212.6090, -204.1892, -198.0241, -198.1664, -207.7065],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0123, device='cuda:0', dtype=torch.float64)
tensor([-212.5980, -204.2032, -198.0654, -198.2024, -207.7292],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0121, device='cuda:0', dtype=torch.float64)
tensor([-212.5929, -204.2179, -198.1122, -198.2476, -207.7505],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0116, device='cuda:0', dtype=torch.float64)
tensor([-212.5938, -204.2444, -198.1645, -198.3004, -207.7725],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0114, device='cuda:0', dtype=torch.float64)
tensor([-212.6005, -204.2406, -198.1904, -198.3292, -207.7846],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0111, device='cuda:0', dtype=torch.float64)
tensor([-212.6059, -204.2174, -198.1916, -198.3239, -207.7870],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0116, device='cuda:0', dtype=torch.float64)
tensor([-212.6278, -204.1826, -198.1701, -198.3032, -207.7874],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0098, device='cuda:0', dtype=torch.float64)
tensor([-212.6466, -204.1185, -198.1289, -198.2559, -207.7900],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0126, device='cuda:0', dtype=torch.float64)
tensor([-212.6644, -204.0583, -198.0605, -198.1784, -207.7942],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0135, device='cuda:0', dtype=torch.float64)
tensor([-212.6723, -203.9800, -197.9309, -198.0307, -207.7602],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0099, device='cuda:0', dtype=torch.float64)
tensor([-212.6472, -203.9296, -197.8505, -197.9128, -207.7234],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0113, device='cuda:0', dtype=torch.float64)
tensor([-212.6161, -203.9000, -197.7852, -197.8072, -207.6790],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0124, device='cuda:0', dtype=torch.float64)
tensor([-212.6089, -203.8791, -197.7379, -197.7377, -207.6511],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0107, device='cuda:0', dtype=torch.float64)
tensor([-212.6307, -203.8691, -197.6849, -197.6861, -207.6360],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0111, device='cuda:0', dtype=torch.float64)
tensor([-212.6629, -203.8728, -197.6245, -197.6266, -207.6282],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0124, device='cuda:0', dtype=torch.float64)
tensor([-212.7028, -203.8921, -197.5786, -197.5920, -207.6340],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0115, device='cuda:0', dtype=torch.float64)
tensor([-212.7292, -203.9150, -197.5341, -197.5574, -207.6359],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0162, device='cuda:0', dtype=torch.float64)
tensor([-212.7566, -203.9576, -197.5177, -197.5574, -207.6407],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0125, device='cuda:0', dtype=torch.float64)
tensor([-212.7514, -204.0258, -197.5430, -197.5895, -207.6264],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0128, device='cuda:0', dtype=torch.float64)
tensor([-212.7451, -204.0726, -197.5403, -197.5906, -207.6095],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0122, device='cuda:0', dtype=torch.float64)
tensor([-212.7476, -204.1376, -197.5533, -197.6087, -207.6130],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0141, device='cuda:0', dtype=torch.float64)
tensor([-212.7729, -204.1795, -197.5379, -197.6120, -207.6280],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0115, device='cuda:0', dtype=torch.float64)
tensor([-212.8097, -204.1976, -197.5056, -197.5969, -207.6464],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0126, device='cuda:0', dtype=torch.float64)
tensor([-212.8588, -204.2096, -197.4678, -197.5799, -207.6798],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0128, device='cuda:0', dtype=torch.float64)
tensor([-212.8916, -204.2441, -197.4682, -197.5939, -207.7184],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0148, device='cuda:0', dtype=torch.float64)
tensor([-212.9289, -204.2865, -197.4836, -197.6293, -207.7415],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0149, device='cuda:0', dtype=torch.float64)
tensor([-212.9130, -204.3086, -197.5033, -197.6468, -207.7080],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0097, device='cuda:0', dtype=torch.float64)
tensor([-212.8875, -204.3419, -197.5536, -197.6932, -207.6689],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0108, device='cuda:0', dtype=torch.float64)
tensor([-212.8542, -204.3787, -197.6030, -197.7274, -207.6456],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0111, device='cuda:0', dtype=torch.float64)
tensor([-212.8217, -204.4350, -197.6763, -197.7867, -207.6362],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0133, device='cuda:0', dtype=torch.float64)
tensor([-212.7709, -204.5003, -197.7797, -197.8659, -207.6175],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0146, device='cuda:0', dtype=torch.float64)
tensor([-212.7296, -204.5423, -197.8556, -197.9169, -207.5909],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0167, device='cuda:0', dtype=torch.float64)
tensor([-212.7091, -204.5914, -197.9371, -197.9820, -207.5826],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0178, device='cuda:0', dtype=torch.float64)
tensor([-212.7149, -204.6370, -198.0184, -198.0607, -207.6004],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0109, device='cuda:0', dtype=torch.float64)
tensor([-212.7045, -204.6770, -198.0972, -198.1248, -207.6096],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0125, device='cuda:0', dtype=torch.float64)
tensor([-212.6878, -204.6879, -198.1589, -198.1686, -207.6154],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0098, device='cuda:0', dtype=torch.float64)
tensor([-212.6471, -204.6784, -198.2170, -198.1933, -207.6020],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0128, device='cuda:0', dtype=torch.float64)
tensor([-212.6038, -204.6389, -198.2007, -198.1418, -207.5592],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0177, device='cuda:0', dtype=torch.float64)
tensor([-212.5719, -204.5828, -198.1147, -198.0232, -207.5107],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0141, device='cuda:0', dtype=torch.float64)
tensor([-212.5362, -204.5404, -198.1181, -198.0033, -207.4760],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0095, device='cuda:0', dtype=torch.float64)
tensor([-212.5079, -204.4786, -198.1041, -197.9669, -207.4473],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0102, device='cuda:0', dtype=torch.float64)
tensor([-212.4840, -204.4068, -198.0386, -197.8750, -207.4042],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0107, device='cuda:0', dtype=torch.float64)
tensor([-212.4725, -204.3406, -197.9698, -197.7856, -207.3813],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0135, device='cuda:0', dtype=torch.float64)
tensor([-212.4385, -204.2651, -197.9204, -197.6998, -207.3751],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0107, device='cuda:0', dtype=torch.float64)
tensor([-212.3928, -204.1728, -197.8640, -197.5978, -207.3464],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0119, device='cuda:0', dtype=torch.float64)
tensor([-212.3714, -204.0767, -197.7928, -197.4910, -207.3419],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0124, device='cuda:0', dtype=torch.float64)
tensor([-212.3859, -203.9668, -197.6710, -197.3515, -207.3491],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0118, device='cuda:0', dtype=torch.float64)
tensor([-212.4227, -203.8765, -197.5696, -197.2498, -207.3855],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0154, device='cuda:0', dtype=torch.float64)
tensor([-212.4198, -203.8058, -197.5003, -197.1622, -207.3962],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0139, device='cuda:0', dtype=torch.float64)
tensor([-212.4080, -203.7447, -197.4697, -197.1143, -207.4157],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0116, device='cuda:0', dtype=torch.float64)
tensor([-212.3981, -203.6842, -197.4384, -197.0642, -207.4484],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0124, device='cuda:0', dtype=torch.float64)
tensor([-212.4105, -203.6480, -197.4175, -197.0377, -207.5017],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0118, device='cuda:0', dtype=torch.float64)
tensor([-212.4298, -203.5919, -197.3444, -196.9564, -207.5489],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0094, device='cuda:0', dtype=torch.float64)
tensor([-212.4316, -203.5488, -197.3094, -196.9069, -207.5893],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0104, device='cuda:0', dtype=torch.float64)
tensor([-212.4147, -203.5046, -197.2571, -196.8315, -207.5971],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0157, device='cuda:0', dtype=torch.float64)
tensor([-212.4160, -203.4669, -197.1994, -196.7578, -207.6022],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0133, device='cuda:0', dtype=torch.float64)
tensor([-212.3929, -203.4511, -197.1572, -196.6861, -207.5907],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0152, device='cuda:0', dtype=torch.float64)
tensor([-212.3643, -203.4547, -197.1337, -196.6339, -207.5769],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0115, device='cuda:0', dtype=torch.float64)
tensor([-212.3037, -203.4686, -197.1522, -196.6147, -207.5497],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0113, device='cuda:0', dtype=torch.float64)
tensor([-212.2622, -203.4951, -197.1881, -196.6336, -207.5529],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0119, device='cuda:0', dtype=torch.float64)
tensor([-212.1991, -203.5695, -197.2559, -196.6871, -207.5415],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0101, device='cuda:0', dtype=torch.float64)
tensor([-212.1109, -203.6336, -197.3452, -196.7540, -207.5180],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0129, device='cuda:0', dtype=torch.float64)
tensor([-212.0477, -203.6971, -197.4039, -196.8002, -207.4938],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0113, device='cuda:0', dtype=torch.float64)
tensor([-211.9885, -203.7371, -197.4306, -196.8070, -207.4605],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0126, device='cuda:0', dtype=torch.float64)
tensor([-211.9569, -203.7701, -197.4523, -196.8176, -207.4498],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0105, device='cuda:0', dtype=torch.float64)
tensor([-211.9423, -203.8148, -197.4750, -196.8433, -207.4570],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0110, device='cuda:0', dtype=torch.float64)
tensor([-211.9513, -203.8644, -197.5194, -196.9123, -207.4808],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0145, device='cuda:0', dtype=torch.float64)
tensor([-211.9397, -203.8947, -197.5413, -196.9490, -207.4705],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0101, device='cuda:0', dtype=torch.float64)
tensor([-211.9331, -203.9185, -197.5393, -196.9559, -207.4665],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0188, device='cuda:0', dtype=torch.float64)
tensor([-211.9532, -203.9481, -197.5296, -196.9612, -207.4775],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0104, device='cuda:0', dtype=torch.float64)
tensor([-211.9772, -203.9615, -197.4935, -196.9339, -207.4744],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0103, device='cuda:0', dtype=torch.float64)
tensor([-212.0003, -203.9727, -197.4528, -196.8995, -207.4644],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0103, device='cuda:0', dtype=torch.float64)
tensor([-212.0591, -203.9689, -197.3963, -196.8627, -207.4788],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0130, device='cuda:0', dtype=torch.float64)
tensor([-212.1140, -203.9559, -197.3463, -196.8324, -207.4939],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0144, device='cuda:0', dtype=torch.float64)
tensor([-212.1638, -203.9787, -197.3617, -196.8706, -207.5255],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0117, device='cuda:0', dtype=torch.float64)
tensor([-212.2113, -203.9794, -197.3132, -196.8377, -207.5352],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0115, device='cuda:0', dtype=torch.float64)
tensor([-212.2423, -203.9548, -197.2725, -196.8038, -207.5388],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0156, device='cuda:0', dtype=torch.float64)
tensor([-212.2636, -203.9298, -197.2467, -196.7809, -207.5334],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0114, device='cuda:0', dtype=torch.float64)
tensor([-212.2746, -203.9100, -197.2460, -196.7825, -207.5295],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0129, device='cuda:0', dtype=torch.float64)
tensor([-212.2551, -203.8725, -197.2226, -196.7401, -207.4955],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0148, device='cuda:0', dtype=torch.float64)
tensor([-212.2458, -203.8491, -197.2208, -196.7298, -207.4686],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0141, device='cuda:0', dtype=torch.float64)
tensor([-212.2243, -203.8552, -197.2391, -196.7381, -207.4353],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0147, device='cuda:0', dtype=torch.float64)
tensor([-212.2002, -203.9028, -197.3194, -196.8128, -207.4336],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0138, device='cuda:0', dtype=torch.float64)
tensor([-212.1716, -203.9282, -197.3641, -196.8443, -207.4223],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0105, device='cuda:0', dtype=torch.float64)
tensor([-212.1694, -203.9586, -197.4199, -196.9043, -207.4278],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0110, device='cuda:0', dtype=torch.float64)
tensor([-212.1638, -203.9798, -197.4680, -196.9498, -207.4279],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0144, device='cuda:0', dtype=torch.float64)
tensor([-212.1483, -204.0090, -197.5308, -197.0005, -207.4342],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0116, device='cuda:0', dtype=torch.float64)
tensor([-212.1419, -204.0488, -197.6078, -197.0757, -207.4596],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0163, device='cuda:0', dtype=torch.float64)
tensor([-212.1576, -204.0941, -197.6810, -197.1632, -207.4900],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0131, device='cuda:0', dtype=torch.float64)
tensor([-212.1656, -204.1618, -197.7800, -197.2739, -207.5157],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0115, device='cuda:0', dtype=torch.float64)
tensor([-212.1852, -204.2256, -197.8390, -197.3442, -207.5320],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0140, device='cuda:0', dtype=torch.float64)
tensor([-212.2005, -204.2548, -197.8723, -197.3814, -207.5431],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0131, device='cuda:0', dtype=torch.float64)
tensor([-212.2190, -204.2812, -197.8901, -197.3989, -207.5492],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0154, device='cuda:0', dtype=torch.float64)
tensor([-212.2584, -204.2586, -197.7923, -197.3007, -207.5343],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0113, device='cuda:0', dtype=torch.float64)
tensor([-212.3090, -204.2208, -197.6828, -197.1996, -207.5292],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0197, device='cuda:0', dtype=torch.float64)
tensor([-212.3644, -204.1486, -197.5422, -197.0610, -207.5386],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0124, device='cuda:0', dtype=torch.float64)
tensor([-212.4019, -204.0782, -197.3896, -196.8963, -207.5254],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0127, device='cuda:0', dtype=torch.float64)
tensor([-212.4205, -203.9901, -197.2298, -196.7079, -207.5043],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0135, device='cuda:0', dtype=torch.float64)
tensor([-212.4037, -203.9657, -197.1459, -196.5930, -207.4564],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0135, device='cuda:0', dtype=torch.float64)
tensor([-212.3448, -203.9354, -197.1136, -196.5192, -207.3823],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0180, device='cuda:0', dtype=torch.float64)
tensor([-212.2810, -203.9053, -197.0999, -196.4661, -207.3066],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0128, device='cuda:0', dtype=torch.float64)
tensor([-212.2037, -203.8864, -197.0727, -196.3947, -207.1997],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0121, device='cuda:0', dtype=torch.float64)
tensor([-212.1335, -203.8311, -197.0460, -196.3178, -207.0955],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0128, device='cuda:0', dtype=torch.float64)
tensor([-212.0686, -203.7816, -196.9987, -196.2228, -206.9789],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0163, device='cuda:0', dtype=torch.float64)
tensor([-211.9762, -203.7257, -196.9378, -196.0880, -206.8431],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0120, device='cuda:0', dtype=torch.float64)
tensor([-211.8730, -203.6696, -196.9097, -195.9797, -206.7135],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0120, device='cuda:0', dtype=torch.float64)
tensor([-211.7939, -203.6262, -196.8989, -195.9132, -206.6201],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0112, device='cuda:0', dtype=torch.float64)
tensor([-211.7330, -203.5781, -196.9110, -195.8788, -206.5621],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0134, device='cuda:0', dtype=torch.float64)
tensor([-211.6953, -203.5340, -196.9121, -195.8449, -206.5261],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0147, device='cuda:0', dtype=torch.float64)
tensor([-211.6859, -203.5173, -196.9323, -195.8526, -206.5154],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0127, device='cuda:0', dtype=torch.float64)
tensor([-211.6908, -203.4824, -196.9148, -195.8247, -206.5039],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0131, device='cuda:0', dtype=torch.float64)
tensor([-211.7102, -203.4735, -196.9111, -195.8249, -206.4922],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0137, device='cuda:0', dtype=torch.float64)
tensor([-211.7457, -203.4374, -196.8441, -195.7539, -206.4998],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0113, device='cuda:0', dtype=torch.float64)
tensor([-211.7839, -203.4147, -196.7979, -195.7130, -206.5288],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0135, device='cuda:0', dtype=torch.float64)
tensor([-211.8094, -203.3723, -196.7538, -195.6662, -206.5496],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0179, device='cuda:0', dtype=torch.float64)
tensor([-211.8505, -203.3271, -196.6853, -195.5947, -206.5847],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0096, device='cuda:0', dtype=torch.float64)
tensor([-211.9278, -203.2704, -196.6037, -195.5235, -206.6580],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0149, device='cuda:0', dtype=torch.float64)
tensor([-212.0145, -203.2192, -196.5576, -195.4968, -206.7523],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0115, device='cuda:0', dtype=torch.float64)
tensor([-212.0867, -203.1652, -196.5181, -195.4698, -206.8288],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0119, device='cuda:0', dtype=torch.float64)
tensor([-212.1398, -203.1223, -196.5040, -195.4624, -206.8962],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0134, device='cuda:0', dtype=torch.float64)
tensor([-212.1486, -203.1349, -196.5570, -195.5140, -206.9402],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0137, device='cuda:0', dtype=torch.float64)
tensor([-212.1435, -203.1479, -196.6173, -195.5722, -206.9647],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0126, device='cuda:0', dtype=torch.float64)
tensor([-212.1261, -203.1653, -196.6778, -195.6333, -206.9675],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0111, device='cuda:0', dtype=torch.float64)
tensor([-212.1077, -203.1793, -196.7458, -195.7051, -206.9686],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0126, device='cuda:0', dtype=torch.float64)
tensor([-212.0928, -203.1716, -196.8240, -195.7915, -206.9877],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0129, device='cuda:0', dtype=torch.float64)
tensor([-212.0547, -203.1765, -196.9318, -195.9001, -206.9940],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0128, device='cuda:0', dtype=torch.float64)
tensor([-212.0126, -203.1906, -197.0514, -196.0236, -206.9929],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0123, device='cuda:0', dtype=torch.float64)
tensor([-211.9799, -203.1956, -197.1550, -196.1318, -206.9921],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0149, device='cuda:0', dtype=torch.float64)
tensor([-211.9570, -203.2034, -197.2877, -196.2817, -207.0105],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0113, device='cuda:0', dtype=torch.float64)
tensor([-211.9110, -203.1918, -197.4022, -196.3960, -207.0120],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0126, device='cuda:0', dtype=torch.float64)
tensor([-211.8618, -203.1567, -197.5010, -196.4827, -207.0056],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0122, device='cuda:0', dtype=torch.float64)
tensor([-211.7685, -203.1097, -197.5972, -196.5401, -206.9585],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0134, device='cuda:0', dtype=torch.float64)
tensor([-211.6672, -203.0549, -197.6906, -196.5913, -206.8977],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0122, device='cuda:0', dtype=torch.float64)
tensor([-211.5544, -202.9951, -197.7762, -196.6199, -206.8233],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0119, device='cuda:0', dtype=torch.float64)
tensor([-211.4654, -202.9422, -197.8262, -196.6227, -206.7601],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0131, device='cuda:0', dtype=torch.float64)
tensor([-211.3752, -202.8982, -197.8853, -196.6381, -206.6887],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0128, device='cuda:0', dtype=torch.float64)
tensor([-211.3153, -202.8425, -197.9119, -196.6235, -206.6385],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0123, device='cuda:0', dtype=torch.float64)
tensor([-211.2721, -202.8287, -197.9447, -196.6320, -206.6004],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0132, device='cuda:0', dtype=torch.float64)
tensor([-211.2285, -202.7759, -197.9114, -196.5546, -206.5354],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0114, device='cuda:0', dtype=torch.float64)
tensor([-211.2132, -202.7423, -197.8859, -196.5093, -206.5035],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0115, device='cuda:0', dtype=torch.float64)
tensor([-211.2405, -202.7202, -197.8135, -196.4361, -206.4905],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0133, device='cuda:0', dtype=torch.float64)
tensor([-211.2397, -202.7052, -197.7834, -196.3935, -206.4680],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0136, device='cuda:0', dtype=torch.float64)
tensor([-211.2397, -202.7188, -197.7558, -196.3661, -206.4502],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0157, device='cuda:0', dtype=torch.float64)
tensor([-211.2280, -202.7392, -197.7717, -196.3818, -206.4378],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0135, device='cuda:0', dtype=torch.float64)
tensor([-211.2244, -202.7543, -197.7648, -196.3811, -206.4275],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0113, device='cuda:0', dtype=torch.float64)
tensor([-211.2095, -202.7870, -197.7972, -196.4297, -206.4153],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0115, device='cuda:0', dtype=torch.float64)
tensor([-211.2184, -202.7955, -197.7496, -196.3875, -206.4134],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0132, device='cuda:0', dtype=torch.float64)
tensor([-211.2172, -202.8086, -197.7095, -196.3473, -206.4095],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0134, device='cuda:0', dtype=torch.float64)
tensor([-211.2334, -202.8366, -197.6772, -196.3251, -206.4267],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0117, device='cuda:0', dtype=torch.float64)
tensor([-211.2468, -202.8463, -197.6075, -196.2586, -206.4400],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0121, device='cuda:0', dtype=torch.float64)
tensor([-211.2664, -202.8522, -197.5593, -196.2156, -206.4581],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0166, device='cuda:0', dtype=torch.float64)
tensor([-211.3061, -202.8460, -197.5100, -196.1828, -206.4895],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0146, device='cuda:0', dtype=torch.float64)
tensor([-211.3481, -202.8191, -197.4459, -196.1275, -206.5149],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0194, device='cuda:0', dtype=torch.float64)
tensor([-211.3620, -202.7850, -197.3773, -196.0490, -206.5095],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0103, device='cuda:0', dtype=torch.float64)
tensor([-211.3445, -202.7520, -197.3260, -195.9670, -206.4836],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0130, device='cuda:0', dtype=torch.float64)
tensor([-211.3271, -202.7122, -197.2708, -195.8859, -206.4508],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0155, device='cuda:0', dtype=torch.float64)
tensor([-211.2656, -202.7167, -197.2620, -195.8464, -206.3861],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0143, device='cuda:0', dtype=torch.float64)
tensor([-211.2304, -202.7500, -197.2419, -195.8148, -206.3451],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0134, device='cuda:0', dtype=torch.float64)
tensor([-211.1713, -202.8121, -197.2649, -195.8252, -206.2982],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0121, device='cuda:0', dtype=torch.float64)
tensor([-211.0949, -202.8841, -197.2990, -195.8481, -206.2412],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0131, device='cuda:0', dtype=torch.float64)
tensor([-211.0291, -202.9538, -197.3243, -195.8671, -206.1815],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0148, device='cuda:0', dtype=torch.float64)
tensor([-210.9639, -203.0333, -197.3499, -195.8846, -206.1234],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0165, device='cuda:0', dtype=torch.float64)
tensor([-210.9573, -203.0983, -197.3348, -195.8792, -206.1289],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0116, device='cuda:0', dtype=torch.float64)
tensor([-210.9620, -203.1625, -197.3322, -195.8936, -206.1374],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0144, device='cuda:0', dtype=torch.float64)
tensor([-210.9984, -203.2242, -197.3382, -195.9360, -206.1679],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0129, device='cuda:0', dtype=torch.float64)
tensor([-211.0032, -203.2862, -197.3563, -195.9765, -206.1812],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0134, device='cuda:0', dtype=torch.float64)
tensor([-211.0098, -203.3369, -197.3378, -195.9725, -206.1927],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0124, device='cuda:0', dtype=torch.float64)
tensor([-211.0340, -203.3677, -197.2968, -195.9395, -206.2143],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0132, device='cuda:0', dtype=torch.float64)
tensor([-211.0686, -203.3955, -197.2532, -195.9080, -206.2317],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0129, device='cuda:0', dtype=torch.float64)
tensor([-211.0748, -203.4199, -197.2069, -195.8534, -206.2252],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0135, device='cuda:0', dtype=torch.float64)
tensor([-211.0779, -203.4125, -197.1411, -195.7709, -206.2254],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0164, device='cuda:0', dtype=torch.float64)
tensor([-211.0780, -203.3892, -197.0808, -195.6921, -206.2351],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0128, device='cuda:0', dtype=torch.float64)
tensor([-211.1405, -203.3401, -196.9473, -195.5525, -206.2886],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0125, device='cuda:0', dtype=torch.float64)
tensor([-211.1722, -203.3028, -196.8876, -195.4948, -206.3246],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0187, device='cuda:0', dtype=torch.float64)
tensor([-211.2539, -203.2767, -196.8265, -195.4595, -206.3974],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0119, device='cuda:0', dtype=torch.float64)
tensor([-211.3176, -203.2491, -196.8105, -195.4664, -206.4514],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0145, device='cuda:0', dtype=torch.float64)
tensor([-211.3487, -203.2218, -196.8529, -195.5261, -206.4941],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0140, device='cuda:0', dtype=torch.float64)
tensor([-211.3875, -203.2015, -196.8899, -195.5776, -206.5585],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0157, device='cuda:0', dtype=torch.float64)
tensor([-211.4611, -203.1821, -196.8709, -195.5809, -206.6285],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0130, device='cuda:0', dtype=torch.float64)
tensor([-211.5255, -203.1616, -196.8885, -195.6293, -206.6937],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0133, device='cuda:0', dtype=torch.float64)
tensor([-211.5594, -203.1289, -196.8916, -195.6458, -206.7244],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0107, device='cuda:0', dtype=torch.float64)
tensor([-211.5887, -203.0997, -196.8805, -195.6443, -206.7505],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0162, device='cuda:0', dtype=torch.float64)
tensor([-211.6240, -203.0555, -196.8318, -195.6024, -206.7735],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0137, device='cuda:0', dtype=torch.float64)
tensor([-211.6200, -203.0497, -196.8336, -195.6063, -206.7768],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0139, device='cuda:0', dtype=torch.float64)
tensor([-211.5964, -203.0214, -196.8160, -195.5748, -206.7619],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0165, device='cuda:0', dtype=torch.float64)
tensor([-211.5704, -203.0223, -196.8598, -195.6155, -206.7514],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0124, device='cuda:0', dtype=torch.float64)
tensor([-211.5639, -203.0004, -196.8571, -195.5947, -206.7402],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0129, device='cuda:0', dtype=torch.float64)
tensor([-211.5506, -202.9867, -196.8749, -195.5984, -206.7247],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0138, device='cuda:0', dtype=torch.float64)
tensor([-211.5710, -202.9579, -196.8479, -195.5548, -206.7248],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0141, device='cuda:0', dtype=torch.float64)
tensor([-211.5562, -202.9319, -196.8592, -195.5434, -206.7021],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0137, device='cuda:0', dtype=torch.float64)
tensor([-211.5325, -202.8863, -196.8802, -195.5378, -206.6883],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0169, device='cuda:0', dtype=torch.float64)
tensor([-211.5041, -202.8583, -196.9166, -195.5501, -206.6835],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0150, device='cuda:0', dtype=torch.float64)
tensor([-211.4948, -202.8225, -196.9702, -195.5952, -206.7044],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0178, device='cuda:0', dtype=torch.float64)
tensor([-211.4941, -202.7856, -196.9652, -195.5741, -206.7009],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0114, device='cuda:0', dtype=torch.float64)
tensor([-211.5534, -202.7449, -196.9279, -195.5493, -206.7391],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0142, device='cuda:0', dtype=torch.float64)
tensor([-211.6220, -202.7251, -196.8962, -195.5481, -206.7905],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0164, device='cuda:0', dtype=torch.float64)
tensor([-211.6968, -202.7099, -196.8922, -195.5823, -206.8513],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0137, device='cuda:0', dtype=torch.float64)
tensor([-211.6842, -202.7188, -196.9562, -195.6616, -206.8627],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0112, device='cuda:0', dtype=torch.float64)
tensor([-211.7142, -202.7357, -196.9789, -195.7186, -206.8778],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0141, device='cuda:0', dtype=torch.float64)
tensor([-211.7228, -202.7445, -197.0140, -195.7815, -206.8815],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0162, device='cuda:0', dtype=torch.float64)
tensor([-211.7116, -202.7560, -197.0864, -195.8752, -206.8817],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0138, device='cuda:0', dtype=torch.float64)
tensor([-211.6854, -202.7725, -197.1897, -195.9926, -206.8885],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0141, device='cuda:0', dtype=torch.float64)
tensor([-211.6742, -202.7562, -197.2567, -196.0658, -206.8955],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0182, device='cuda:0', dtype=torch.float64)
tensor([-211.6389, -202.7406, -197.3260, -196.1201, -206.8874],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0124, device='cuda:0', dtype=torch.float64)
tensor([-211.6119, -202.7184, -197.3624, -196.1376, -206.8819],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0143, device='cuda:0', dtype=torch.float64)
tensor([-211.6036, -202.6709, -197.3412, -196.0938, -206.8910],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0144, device='cuda:0', dtype=torch.float64)
tensor([-211.6280, -202.6503, -197.3450, -196.0924, -206.9284],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0204, device='cuda:0', dtype=torch.float64)
tensor([-211.6599, -202.6526, -197.3647, -196.1110, -206.9782],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0124, device='cuda:0', dtype=torch.float64)
tensor([-211.6764, -202.6453, -197.3735, -196.1168, -207.0063],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0129, device='cuda:0', dtype=torch.float64)
tensor([-211.7045, -202.6684, -197.3732, -196.1184, -207.0253],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0114, device='cuda:0', dtype=torch.float64)
tensor([-211.7210, -202.6906, -197.3882, -196.1322, -207.0390],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0135, device='cuda:0', dtype=torch.float64)
tensor([-211.7526, -202.7123, -197.3646, -196.1087, -207.0623],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0122, device='cuda:0', dtype=torch.float64)
tensor([-211.7970, -202.7419, -197.3603, -196.1226, -207.0876],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0146, device='cuda:0', dtype=torch.float64)
tensor([-211.8063, -202.7696, -197.3871, -196.1585, -207.0886],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0125, device='cuda:0', dtype=torch.float64)
tensor([-211.8090, -202.7993, -197.4278, -196.2124, -207.0878],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0164, device='cuda:0', dtype=torch.float64)
tensor([-211.7956, -202.8238, -197.4757, -196.2626, -207.0523],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0159, device='cuda:0', dtype=torch.float64)
tensor([-211.7474, -202.8122, -197.4547, -196.2118, -206.9857],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0125, device='cuda:0', dtype=torch.float64)
tensor([-211.7160, -202.7996, -197.4018, -196.1204, -206.9358],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0139, device='cuda:0', dtype=torch.float64)
tensor([-211.6790, -202.7924, -197.3443, -196.0202, -206.8750],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0143, device='cuda:0', dtype=torch.float64)
tensor([-211.5807, -202.7740, -197.3116, -195.9327, -206.7860],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0141, device='cuda:0', dtype=torch.float64)
tensor([-211.4680, -202.7636, -197.2429, -195.7931, -206.6795],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0133, device='cuda:0', dtype=torch.float64)
tensor([-211.3655, -202.7595, -197.1629, -195.6461, -206.5662],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0129, device='cuda:0', dtype=torch.float64)
tensor([-211.2773, -202.7372, -197.0444, -195.4582, -206.4550],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0181, device='cuda:0', dtype=torch.float64)
tensor([-211.2201, -202.7191, -196.9244, -195.2745, -206.3585],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0144, device='cuda:0', dtype=torch.float64)
tensor([-211.1759, -202.6735, -196.7810, -195.0655, -206.2668],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0129, device='cuda:0', dtype=torch.float64)
tensor([-211.1553, -202.6245, -196.6375, -194.8649, -206.1947],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0124, device='cuda:0', dtype=torch.float64)
tensor([-211.1783, -202.5532, -196.4378, -194.6051, -206.1651],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0131, device='cuda:0', dtype=torch.float64)
tensor([-211.2023, -202.4855, -196.2531, -194.3638, -206.1336],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0119, device='cuda:0', dtype=torch.float64)
tensor([-211.1927, -202.4351, -196.1343, -194.1893, -206.1152],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0126, device='cuda:0', dtype=torch.float64)
tensor([-211.1832, -202.3606, -196.0008, -194.0015, -206.0803],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0108, device='cuda:0', dtype=torch.float64)
tensor([-211.1753, -202.3242, -195.9512, -193.9307, -206.0693],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0120, device='cuda:0', dtype=torch.float64)
tensor([-211.1655, -202.2771, -195.9458, -193.9077, -206.0700],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0132, device='cuda:0', dtype=torch.float64)
tensor([-211.1361, -202.2441, -195.9713, -193.9179, -206.0678],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0147, device='cuda:0', dtype=torch.float64)
tensor([-211.1411, -202.1932, -195.9305, -193.8532, -206.0612],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0157, device='cuda:0', dtype=torch.float64)
tensor([-211.1660, -202.1265, -195.7971, -193.6752, -206.0540],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0116, device='cuda:0', dtype=torch.float64)
tensor([-211.1862, -202.0752, -195.6991, -193.5331, -206.0608],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0140, device='cuda:0', dtype=torch.float64)
tensor([-211.2116, -202.0440, -195.6171, -193.4179, -206.0830],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0120, device='cuda:0', dtype=torch.float64)
tensor([-211.2106, -202.0147, -195.5541, -193.3158, -206.0897],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0111, device='cuda:0', dtype=torch.float64)
tensor([-211.1847, -201.9788, -195.4959, -193.2053, -206.0607],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0178, device='cuda:0', dtype=torch.float64)
tensor([-211.1256, -201.9449, -195.4651, -193.1136, -206.0154],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0144, device='cuda:0', dtype=torch.float64)
tensor([-211.0384, -201.9491, -195.4795, -193.0756, -205.9576],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0183, device='cuda:0', dtype=torch.float64)
tensor([-210.9775, -201.9888, -195.5018, -193.0697, -205.9395],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0134, device='cuda:0', dtype=torch.float64)
tensor([-210.9418, -202.0304, -195.5210, -193.0780, -205.9362],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0149, device='cuda:0', dtype=torch.float64)
tensor([-210.8771, -202.0908, -195.5625, -193.1060, -205.9306],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0156, device='cuda:0', dtype=torch.float64)
tensor([-210.8509, -202.1583, -195.5845, -193.1231, -205.9348],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0138, device='cuda:0', dtype=torch.float64)
tensor([-210.8280, -202.2388, -195.6530, -193.2041, -205.9562],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0141, device='cuda:0', dtype=torch.float64)
tensor([-210.8175, -202.3302, -195.7478, -193.3274, -206.0037],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0149, device='cuda:0', dtype=torch.float64)
tensor([-210.7702, -202.4339, -195.8935, -193.5056, -206.0258],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0142, device='cuda:0', dtype=torch.float64)
tensor([-210.7773, -202.5478, -196.0316, -193.6950, -206.1007],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0117, device='cuda:0', dtype=torch.float64)
tensor([-210.7889, -202.6425, -196.1301, -193.8309, -206.1651],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0133, device='cuda:0', dtype=torch.float64)
tensor([-210.8584, -202.7214, -196.1715, -193.9144, -206.2422],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0155, device='cuda:0', dtype=torch.float64)
tensor([-210.9404, -202.7906, -196.1824, -193.9643, -206.3433],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0145, device='cuda:0', dtype=torch.float64)
tensor([-211.0320, -202.8429, -196.1296, -193.9336, -206.4415],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0116, device='cuda:0', dtype=torch.float64)
tensor([-211.1160, -202.8657, -196.0677, -193.8791, -206.5335],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0142, device='cuda:0', dtype=torch.float64)
tensor([-211.1363, -202.8676, -196.0534, -193.8529, -206.5853],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0120, device='cuda:0', dtype=torch.float64)
tensor([-211.1385, -202.8556, -196.0453, -193.8265, -206.6190],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0150, device='cuda:0', dtype=torch.float64)
tensor([-211.1503, -202.8368, -196.0264, -193.7903, -206.6462],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0130, device='cuda:0', dtype=torch.float64)
tensor([-211.1760, -202.7977, -195.9294, -193.6557, -206.6720],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0127, device='cuda:0', dtype=torch.float64)
tensor([-211.1847, -202.7697, -195.8407, -193.5301, -206.6761],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0168, device='cuda:0', dtype=torch.float64)
tensor([-211.2115, -202.7123, -195.7120, -193.3490, -206.6824],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0180, device='cuda:0', dtype=torch.float64)
tensor([-211.2908, -202.6634, -195.6225, -193.2431, -206.7401],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0133, device='cuda:0', dtype=torch.float64)
tensor([-211.3512, -202.6354, -195.5963, -193.2225, -206.7871],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0136, device='cuda:0', dtype=torch.float64)
tensor([-211.3756, -202.5889, -195.5649, -193.1671, -206.7984],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0143, device='cuda:0', dtype=torch.float64)
tensor([-211.4313, -202.5382, -195.4909, -193.0807, -206.8291],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0105, device='cuda:0', dtype=torch.float64)
tensor([-211.4855, -202.5117, -195.4235, -193.0066, -206.8535],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0120, device='cuda:0', dtype=torch.float64)
tensor([-211.5316, -202.4944, -195.3762, -192.9583, -206.8756],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0160, device='cuda:0', dtype=torch.float64)
tensor([-211.5843, -202.5034, -195.3354, -192.9297, -206.8865],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0133, device='cuda:0', dtype=torch.float64)
tensor([-211.6608, -202.4973, -195.2463, -192.8502, -206.9141],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0160, device='cuda:0', dtype=torch.float64)
tensor([-211.6968, -202.5061, -195.2128, -192.8240, -206.9119],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0173, device='cuda:0', dtype=torch.float64)
tensor([-211.6875, -202.5032, -195.2271, -192.8310, -206.8771],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0139, device='cuda:0', dtype=torch.float64)
tensor([-211.7091, -202.4894, -195.1628, -192.7477, -206.8553],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0130, device='cuda:0', dtype=torch.float64)
tensor([-211.7101, -202.5041, -195.1512, -192.7328, -206.8274],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0129, device='cuda:0', dtype=torch.float64)
tensor([-211.6958, -202.5217, -195.1149, -192.6800, -206.7773],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0139, device='cuda:0', dtype=torch.float64)
tensor([-211.6801, -202.5540, -195.1247, -192.6944, -206.7392],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0191, device='cuda:0', dtype=torch.float64)
tensor([-211.6652, -202.5898, -195.1573, -192.7374, -206.7049],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0128, device='cuda:0', dtype=torch.float64)
tensor([-211.5754, -202.6300, -195.2675, -192.8518, -206.6341],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0145, device='cuda:0', dtype=torch.float64)
tensor([-211.4859, -202.6694, -195.3185, -192.8877, -206.5501],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0138, device='cuda:0', dtype=torch.float64)
tensor([-211.3791, -202.7173, -195.4368, -193.0065, -206.4676],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0151, device='cuda:0', dtype=torch.float64)
tensor([-211.2686, -202.7867, -195.5773, -193.1533, -206.3791],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0151, device='cuda:0', dtype=torch.float64)
tensor([-211.1699, -202.8217, -195.6481, -193.2095, -206.2700],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0133, device='cuda:0', dtype=torch.float64)
tensor([-211.0925, -202.8249, -195.7048, -193.2538, -206.1762],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0134, device='cuda:0', dtype=torch.float64)
tensor([-211.0482, -202.8281, -195.7449, -193.2964, -206.1019],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0171, device='cuda:0', dtype=torch.float64)
tensor([-211.0222, -202.8230, -195.7830, -193.3466, -206.0455],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0130, device='cuda:0', dtype=torch.float64)
tensor([-211.0188, -202.8388, -195.8487, -193.4405, -206.0167],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0143, device='cuda:0', dtype=torch.float64)
tensor([-210.9804, -202.8285, -195.9404, -193.5363, -205.9794],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0144, device='cuda:0', dtype=torch.float64)
tensor([-210.9766, -202.7992, -195.9956, -193.5997, -205.9639],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0138, device='cuda:0', dtype=torch.float64)
tensor([-210.9773, -202.7506, -196.0566, -193.6572, -205.9643],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0161, device='cuda:0', dtype=torch.float64)
tensor([-210.9783, -202.7119, -196.0957, -193.6869, -205.9518],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0190, device='cuda:0', dtype=torch.float64)
tensor([-210.9785, -202.6429, -196.0924, -193.6589, -205.9292],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0137, device='cuda:0', dtype=torch.float64)
tensor([-211.0032, -202.5727, -196.0914, -193.6439, -205.9366],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0133, device='cuda:0', dtype=torch.float64)
tensor([-211.0446, -202.4866, -196.0753, -193.6198, -205.9608],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0151, device='cuda:0', dtype=torch.float64)
tensor([-211.0988, -202.3796, -195.9980, -193.5163, -205.9785],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0145, device='cuda:0', dtype=torch.float64)
tensor([-211.1167, -202.2718, -195.9670, -193.4595, -205.9737],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0146, device='cuda:0', dtype=torch.float64)
tensor([-211.1036, -202.1698, -195.9805, -193.4438, -205.9685],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0178, device='cuda:0', dtype=torch.float64)
tensor([-211.0972, -202.0894, -196.0329, -193.4875, -205.9822],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0162, device='cuda:0', dtype=torch.float64)
tensor([-211.1229, -201.9923, -196.0274, -193.4751, -206.0034],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0119, device='cuda:0', dtype=torch.float64)
tensor([-211.1860, -201.8948, -195.9874, -193.4369, -206.0401],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0150, device='cuda:0', dtype=torch.float64)
tensor([-211.2507, -201.7793, -195.8948, -193.3388, -206.0433],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0133, device='cuda:0', dtype=torch.float64)
tensor([-211.2697, -201.6916, -195.8509, -193.2947, -206.0173],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0147, device='cuda:0', dtype=torch.float64)
tensor([-211.3186, -201.6030, -195.7883, -193.2368, -206.0215],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0126, device='cuda:0', dtype=torch.float64)
tensor([-211.3571, -201.5094, -195.7110, -193.1558, -206.0076],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0124, device='cuda:0', dtype=torch.float64)
tensor([-211.3444, -201.4056, -195.6339, -193.0563, -205.9502],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0156, device='cuda:0', dtype=torch.float64)
tensor([-211.2937, -201.3120, -195.6066, -192.9993, -205.8973],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0120, device='cuda:0', dtype=torch.float64)
tensor([-211.2501, -201.2354, -195.5931, -192.9687, -205.8546],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0156, device='cuda:0', dtype=torch.float64)
tensor([-211.1900, -201.1551, -195.5781, -192.9228, -205.7905],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0169, device='cuda:0', dtype=torch.float64)
tensor([-211.1536, -201.0833, -195.5316, -192.8477, -205.7471],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0179, device='cuda:0', dtype=torch.float64)
tensor([-211.0659, -201.0044, -195.4890, -192.7602, -205.6663],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0185, device='cuda:0', dtype=torch.float64)
tensor([-211.0126, -200.9487, -195.4279, -192.6710, -205.6025],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0141, device='cuda:0', dtype=torch.float64)
tensor([-210.9951, -200.9001, -195.3211, -192.5276, -205.5556],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0188, device='cuda:0', dtype=torch.float64)
tensor([-211.0051, -200.8729, -195.2942, -192.5105, -205.5354],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0165, device='cuda:0', dtype=torch.float64)
tensor([-210.9681, -200.8210, -195.2424, -192.4162, -205.4670],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0120, device='cuda:0', dtype=torch.float64)
tensor([-210.9455, -200.8050, -195.2339, -192.3991, -205.4207],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0135, device='cuda:0', dtype=torch.float64)
tensor([-210.8870, -200.8052, -195.2705, -192.4301, -205.3510],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0157, device='cuda:0', dtype=torch.float64)
tensor([-210.7695, -200.8292, -195.3869, -192.5518, -205.2563],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0120, device='cuda:0', dtype=torch.float64)
tensor([-210.6586, -200.8450, -195.4809, -192.6423, -205.1422],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0148, device='cuda:0', dtype=torch.float64)
tensor([-210.5905, -200.8706, -195.5501, -192.7250, -205.0557],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0150, device='cuda:0', dtype=torch.float64)
tensor([-210.5188, -200.9087, -195.6564, -192.8609, -204.9680],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0143, device='cuda:0', dtype=torch.float64)
tensor([-210.4299, -200.9587, -195.8182, -193.0631, -204.8957],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0127, device='cuda:0', dtype=torch.float64)
tensor([-210.3175, -201.0258, -196.0023, -193.2894, -204.8210],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0138, device='cuda:0', dtype=torch.float64)
tensor([-210.2374, -201.0889, -196.1541, -193.4838, -204.7649],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0164, device='cuda:0', dtype=torch.float64)
tensor([-210.1500, -201.1375, -196.3253, -193.6839, -204.7071],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0138, device='cuda:0', dtype=torch.float64)
tensor([-210.0499, -201.2066, -196.5112, -193.9042, -204.6548],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0131, device='cuda:0', dtype=torch.float64)
tensor([-209.9219, -201.2656, -196.6934, -194.1084, -204.5895],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0134, device='cuda:0', dtype=torch.float64)
tensor([-209.7767, -201.3242, -196.8530, -194.2781, -204.5105],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0156, device='cuda:0', dtype=torch.float64)
tensor([-209.7304, -201.3687, -196.9180, -194.3647, -204.4868],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0141, device='cuda:0', dtype=torch.float64)
tensor([-209.6803, -201.3898, -196.9866, -194.4495, -204.4744],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0148, device='cuda:0', dtype=torch.float64)
tensor([-209.6706, -201.4094, -197.0116, -194.4880, -204.4968],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0159, device='cuda:0', dtype=torch.float64)
tensor([-209.6868, -201.4305, -196.9714, -194.4492, -204.5359],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0146, device='cuda:0', dtype=torch.float64)
tensor([-209.7109, -201.4446, -196.8928, -194.3671, -204.5833],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0157, device='cuda:0', dtype=torch.float64)
tensor([-209.7764, -201.4409, -196.7710, -194.2456, -204.6540],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0201, device='cuda:0', dtype=torch.float64)
tensor([-209.8494, -201.4569, -196.6602, -194.1360, -204.7454],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0146, device='cuda:0', dtype=torch.float64)
tensor([-209.9122, -201.4802, -196.5379, -194.0173, -204.8155],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0141, device='cuda:0', dtype=torch.float64)
tensor([-209.9918, -201.4898, -196.3996, -193.8864, -204.8921],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0139, device='cuda:0', dtype=torch.float64)
tensor([-210.0295, -201.4498, -196.2114, -193.6712, -204.9204],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0150, device='cuda:0', dtype=torch.float64)
tensor([-210.0627, -201.4028, -196.0149, -193.4354, -204.9528],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0171, device='cuda:0', dtype=torch.float64)
tensor([-210.1009, -201.3240, -195.7385, -193.1030, -204.9852],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0150, device='cuda:0', dtype=torch.float64)
tensor([-210.0837, -201.2326, -195.5371, -192.8415, -204.9951],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0127, device='cuda:0', dtype=torch.float64)
tensor([-210.0838, -201.1398, -195.3731, -192.6381, -205.0394],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0144, device='cuda:0', dtype=torch.float64)
tensor([-210.0627, -201.0625, -195.2308, -192.4542, -205.0718],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0169, device='cuda:0', dtype=torch.float64)
tensor([-210.0715, -200.9894, -195.0531, -192.2253, -205.1084],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0140, device='cuda:0', dtype=torch.float64)
tensor([-210.1151, -200.9424, -194.9013, -192.0548, -205.1660],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0128, device='cuda:0', dtype=torch.float64)
tensor([-210.1556, -200.9135, -194.7571, -191.8860, -205.2155],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0138, device='cuda:0', dtype=torch.float64)
tensor([-210.1833, -200.8559, -194.6094, -191.7035, -205.2588],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0174, device='cuda:0', dtype=torch.float64)
tensor([-210.1901, -200.8386, -194.5231, -191.6050, -205.2980],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0135, device='cuda:0', dtype=torch.float64)
tensor([-210.2000, -200.8286, -194.4619, -191.5361, -205.3446],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0161, device='cuda:0', dtype=torch.float64)
tensor([-210.1634, -200.8476, -194.5338, -191.6299, -205.3603],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0162, device='cuda:0', dtype=torch.float64)
tensor([-210.1124, -200.8823, -194.6282, -191.7463, -205.3668],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0157, device='cuda:0', dtype=torch.float64)
tensor([-210.0376, -200.9165, -194.7463, -191.8887, -205.3437],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0141, device='cuda:0', dtype=torch.float64)
tensor([-209.9250, -200.9651, -194.8886, -192.0452, -205.2977],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0148, device='cuda:0', dtype=torch.float64)
tensor([-209.8393, -201.0167, -195.0468, -192.2289, -205.2646],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0163, device='cuda:0', dtype=torch.float64)
tensor([-209.7749, -201.0727, -195.2397, -192.4659, -205.2651],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0137, device='cuda:0', dtype=torch.float64)
tensor([-209.7383, -201.1282, -195.3710, -192.6300, -205.2665],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0124, device='cuda:0', dtype=torch.float64)
tensor([-209.7364, -201.1678, -195.5107, -192.8244, -205.2992],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0197, device='cuda:0', dtype=torch.float64)
tensor([-209.7505, -201.1994, -195.5703, -192.9335, -205.3491],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0120, device='cuda:0', dtype=torch.float64)
tensor([-209.7636, -201.2419, -195.5992, -193.0064, -205.3902],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0143, device='cuda:0', dtype=torch.float64)
tensor([-209.8028, -201.2791, -195.5930, -193.0377, -205.4330],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0159, device='cuda:0', dtype=torch.float64)
tensor([-209.8643, -201.2971, -195.6102, -193.1082, -205.5013],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0158, device='cuda:0', dtype=torch.float64)
tensor([-209.9711, -201.3015, -195.5885, -193.1451, -205.6035],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0157, device='cuda:0', dtype=torch.float64)
tensor([-210.0554, -201.3508, -195.6637, -193.2982, -205.7025],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0156, device='cuda:0', dtype=torch.float64)
tensor([-210.1519, -201.4087, -195.7197, -193.4363, -205.7998],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0141, device='cuda:0', dtype=torch.float64)
tensor([-210.2708, -201.4795, -195.7638, -193.5721, -205.9079],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0143, device='cuda:0', dtype=torch.float64)
tensor([-210.3870, -201.5217, -195.7535, -193.6328, -206.0179],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0135, device='cuda:0', dtype=torch.float64)
tensor([-210.5083, -201.5461, -195.7257, -193.6777, -206.1134],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0239, device='cuda:0', dtype=torch.float64)
tensor([-210.5635, -201.5418, -195.6722, -193.6743, -206.1679],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0150, device='cuda:0', dtype=torch.float64)
tensor([-210.6067, -201.5108, -195.6062, -193.6502, -206.2159],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0176, device='cuda:0', dtype=torch.float64)
tensor([-210.6623, -201.4729, -195.4810, -193.5457, -206.2612],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0134, device='cuda:0', dtype=torch.float64)
tensor([-210.6744, -201.4207, -195.3211, -193.3756, -206.2701],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0130, device='cuda:0', dtype=torch.float64)
tensor([-210.7153, -201.3470, -195.1179, -193.1484, -206.2754],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0134, device='cuda:0', dtype=torch.float64)
tensor([-210.7149, -201.2796, -194.9118, -192.8971, -206.2438],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0152, device='cuda:0', dtype=torch.float64)
tensor([-210.6725, -201.2043, -194.7478, -192.6721, -206.2007],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0151, device='cuda:0', dtype=torch.float64)
tensor([-210.6252, -201.1186, -194.5796, -192.4272, -206.1572],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0159, device='cuda:0', dtype=torch.float64)
tensor([-210.5735, -201.0603, -194.4896, -192.2908, -206.1136],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0128, device='cuda:0', dtype=torch.float64)
tensor([-210.5406, -201.0031, -194.4029, -192.1635, -206.1034],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0138, device='cuda:0', dtype=torch.float64)
tensor([-210.5066, -200.9760, -194.3730, -192.1169, -206.0872],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0154, device='cuda:0', dtype=torch.float64)
tensor([-210.4901, -200.9455, -194.3135, -192.0482, -206.0724],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0167, device='cuda:0', dtype=torch.float64)
tensor([-210.4473, -200.9308, -194.3352, -192.0798, -206.0393],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0151, device='cuda:0', dtype=torch.float64)
tensor([-210.3383, -200.9016, -194.4046, -192.1443, -205.9682],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0159, device='cuda:0', dtype=torch.float64)
tensor([-210.2415, -200.8705, -194.4624, -192.1877, -205.9006],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0156, device='cuda:0', dtype=torch.float64)
tensor([-210.1324, -200.8414, -194.5017, -192.2075, -205.8479],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0142, device='cuda:0', dtype=torch.float64)
tensor([-210.0337, -200.8285, -194.5453, -192.2422, -205.8031],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0187, device='cuda:0', dtype=torch.float64)
tensor([-209.9305, -200.8061, -194.6175, -192.3093, -205.7657],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0161, device='cuda:0', dtype=torch.float64)
tensor([-209.7858, -200.7584, -194.7162, -192.3864, -205.7021],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0137, device='cuda:0', dtype=torch.float64)
tensor([-209.6464, -200.7102, -194.8028, -192.4386, -205.6303],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0145, device='cuda:0', dtype=torch.float64)
tensor([-209.5307, -200.6590, -194.8775, -192.4860, -205.5875],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0180, device='cuda:0', dtype=torch.float64)
tensor([-209.4549, -200.6309, -194.9843, -192.6065, -205.5732],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0140, device='cuda:0', dtype=torch.float64)
tensor([-209.4079, -200.6266, -195.0654, -192.7056, -205.5729],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0170, device='cuda:0', dtype=torch.float64)
tensor([-209.3868, -200.6050, -195.0824, -192.7203, -205.5772],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0178, device='cuda:0', dtype=torch.float64)
tensor([-209.4055, -200.6035, -195.1374, -192.8067, -205.6273],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0154, device='cuda:0', dtype=torch.float64)
tensor([-209.4381, -200.5899, -195.1434, -192.8395, -205.6909],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0125, device='cuda:0', dtype=torch.float64)
tensor([-209.4662, -200.5876, -195.1506, -192.8802, -205.7525],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0163, device='cuda:0', dtype=torch.float64)
tensor([-209.5034, -200.5803, -195.1425, -192.9008, -205.8140],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0146, device='cuda:0', dtype=torch.float64)
tensor([-209.5556, -200.6041, -195.1376, -192.9316, -205.8841],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0135, device='cuda:0', dtype=torch.float64)
tensor([-209.5469, -200.5828, -195.0729, -192.8493, -205.8957],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0153, device='cuda:0', dtype=torch.float64)
tensor([-209.5472, -200.5361, -194.9628, -192.6986, -205.8934],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0180, device='cuda:0', dtype=torch.float64)
tensor([-209.4947, -200.4914, -194.9060, -192.5934, -205.8580],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0154, device='cuda:0', dtype=torch.float64)
tensor([-209.3993, -200.4386, -194.8648, -192.4881, -205.8002],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0158, device='cuda:0', dtype=torch.float64)
tensor([-209.2753, -200.3944, -194.8675, -192.4281, -205.7239],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0160, device='cuda:0', dtype=torch.float64)
tensor([-209.1943, -200.3478, -194.8746, -192.3906, -205.6856],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0187, device='cuda:0', dtype=torch.float64)
tensor([-209.0619, -200.2919, -194.9445, -192.4041, -205.5829],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0136, device='cuda:0', dtype=torch.float64)
tensor([-208.9401, -200.2479, -195.0579, -192.4873, -205.4951],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0157, device='cuda:0', dtype=torch.float64)
tensor([-208.8462, -200.2054, -195.1600, -192.5657, -205.4145],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0173, device='cuda:0', dtype=torch.float64)
tensor([-208.7525, -200.1527, -195.1671, -192.5171, -205.3130],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0149, device='cuda:0', dtype=torch.float64)
tensor([-208.6449, -200.1131, -195.1850, -192.4871, -205.2503],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0151, device='cuda:0', dtype=torch.float64)
tensor([-208.5954, -200.0470, -195.1312, -192.3849, -205.2297],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0191, device='cuda:0', dtype=torch.float64)
tensor([-208.5642, -199.9759, -195.0714, -192.2900, -205.2131],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0190, device='cuda:0', dtype=torch.float64)
tensor([-208.5402, -199.8898, -194.9288, -192.0861, -205.1924],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0156, device='cuda:0', dtype=torch.float64)
tensor([-208.4975, -199.8273, -194.8216, -191.9258, -205.1700],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0158, device='cuda:0', dtype=torch.float64)
tensor([-208.4663, -199.7878, -194.7355, -191.8007, -205.1577],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0156, device='cuda:0', dtype=torch.float64)
tensor([-208.4055, -199.7578, -194.6336, -191.6443, -205.1212],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0175, device='cuda:0', dtype=torch.float64)
tensor([-208.3095, -199.7136, -194.5857, -191.5437, -205.0506],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0148, device='cuda:0', dtype=torch.float64)
tensor([-208.2301, -199.6879, -194.5826, -191.5322, -205.0086],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0160, device='cuda:0', dtype=torch.float64)
tensor([-208.1529, -199.6764, -194.6636, -191.6470, -204.9889],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0179, device='cuda:0', dtype=torch.float64)
tensor([-208.0830, -199.6893, -194.7214, -191.7238, -204.9754],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0140, device='cuda:0', dtype=torch.float64)
tensor([-207.9983, -199.7040, -194.7739, -191.7877, -204.9540],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0192, device='cuda:0', dtype=torch.float64)
tensor([-207.9199, -199.7107, -194.8088, -191.8214, -204.9428],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0143, device='cuda:0', dtype=torch.float64)
tensor([-207.8263, -199.7312, -194.9196, -191.9545, -204.9236],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0131, device='cuda:0', dtype=torch.float64)
tensor([-207.7560, -199.7317, -195.0038, -192.0651, -204.9174],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0188, device='cuda:0', dtype=torch.float64)
tensor([-207.7199, -199.7012, -194.9770, -192.0213, -204.9306],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0171, device='cuda:0', dtype=torch.float64)
tensor([-207.7249, -199.6701, -194.9563, -192.0000, -204.9627],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0172, device='cuda:0', dtype=torch.float64)
tensor([-207.7745, -199.6315, -194.9210, -191.9810, -205.0100],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0156, device='cuda:0', dtype=torch.float64)
tensor([-207.8506, -199.6163, -194.8361, -191.9195, -205.0633],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0149, device='cuda:0', dtype=torch.float64)
tensor([-207.9408, -199.6024, -194.7416, -191.8550, -205.1291],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0169, device='cuda:0', dtype=torch.float64)
tensor([-208.0482, -199.6150, -194.6615, -191.8169, -205.2025],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0152, device='cuda:0', dtype=torch.float64)
tensor([-208.1288, -199.6458, -194.5911, -191.7765, -205.2660],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0169, device='cuda:0', dtype=torch.float64)
tensor([-208.2418, -199.6898, -194.5442, -191.7794, -205.3429],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0177, device='cuda:0', dtype=torch.float64)
tensor([-208.3669, -199.7208, -194.4714, -191.7554, -205.4224],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0180, device='cuda:0', dtype=torch.float64)
tensor([-208.5011, -199.7496, -194.3638, -191.6734, -205.4972],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0154, device='cuda:0', dtype=torch.float64)
tensor([-208.6116, -199.7739, -194.3112, -191.6543, -205.5570],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0137, device='cuda:0', dtype=torch.float64)
tensor([-208.7242, -199.7850, -194.2277, -191.5913, -205.6079],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0173, device='cuda:0', dtype=torch.float64)
tensor([-208.7732, -199.7896, -194.2074, -191.5793, -205.6140],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0159, device='cuda:0', dtype=torch.float64)
tensor([-208.8189, -199.7874, -194.1549, -191.5107, -205.6206],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0170, device='cuda:0', dtype=torch.float64)
tensor([-208.8565, -199.8199, -194.1354, -191.4920, -205.6359],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0157, device='cuda:0', dtype=torch.float64)
tensor([-208.8690, -199.8663, -194.1616, -191.5301, -205.6415],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0189, device='cuda:0', dtype=torch.float64)
tensor([-208.9046, -199.8899, -194.0864, -191.4371, -205.6362],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0193, device='cuda:0', dtype=torch.float64)
tensor([-208.9558, -199.9197, -193.9818, -191.3112, -205.6376],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0152, device='cuda:0', dtype=torch.float64)
tensor([-209.0359, -199.9572, -193.8662, -191.2006, -205.6540],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0192, device='cuda:0', dtype=torch.float64)
tensor([-209.0779, -199.9980, -193.7577, -191.0855, -205.6438],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0165, device='cuda:0', dtype=torch.float64)
tensor([-209.0672, -199.9986, -193.6804, -190.9785, -205.6035],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0171, device='cuda:0', dtype=torch.float64)
tensor([-209.0376, -199.9955, -193.6665, -190.9523, -205.5523],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0162, device='cuda:0', dtype=torch.float64)
tensor([-208.9862, -199.9825, -193.6489, -190.9054, -205.4822],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0159, device='cuda:0', dtype=torch.float64)
tensor([-208.8559, -199.9731, -193.7495, -190.9769, -205.3561],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0127, device='cuda:0', dtype=torch.float64)
tensor([-208.7248, -199.9482, -193.8116, -190.9891, -205.2367],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0166, device='cuda:0', dtype=torch.float64)
tensor([-208.6360, -199.9374, -193.8983, -191.0516, -205.1427],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0152, device='cuda:0', dtype=torch.float64)
tensor([-208.5654, -199.9245, -193.9393, -191.0683, -205.0652],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0171, device='cuda:0', dtype=torch.float64)
tensor([-208.5534, -199.9265, -193.9461, -191.0690, -205.0470],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0154, device='cuda:0', dtype=torch.float64)
tensor([-208.5851, -199.9385, -193.9564, -191.0959, -205.0558],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0157, device='cuda:0', dtype=torch.float64)
tensor([-208.6151, -199.9418, -193.9682, -191.1212, -205.0599],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0181, device='cuda:0', dtype=torch.float64)
tensor([-208.6003, -199.9264, -193.9292, -191.0522, -205.0346],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0215, device='cuda:0', dtype=torch.float64)
tensor([-208.5942, -199.9103, -193.8805, -190.9712, -205.0114],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0158, device='cuda:0', dtype=torch.float64)
tensor([-208.5497, -199.9013, -193.8549, -190.9064, -204.9610],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0162, device='cuda:0', dtype=torch.float64)
tensor([-208.5552, -199.8891, -193.7937, -190.8148, -204.9488],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0155, device='cuda:0', dtype=torch.float64)
tensor([-208.5938, -199.8779, -193.6558, -190.6405, -204.9605],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0186, device='cuda:0', dtype=torch.float64)
tensor([-208.6531, -199.8781, -193.5281, -190.4937, -204.9874],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0165, device='cuda:0', dtype=torch.float64)
tensor([-208.6509, -199.8848, -193.4613, -190.4145, -204.9745],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0144, device='cuda:0', dtype=torch.float64)
tensor([-208.6805, -199.8807, -193.3518, -190.2857, -204.9826],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0170, device='cuda:0', dtype=torch.float64)
tensor([-208.7353, -199.8828, -193.1972, -190.1119, -205.0105],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0178, device='cuda:0', dtype=torch.float64)
tensor([-208.7899, -199.8808, -193.0827, -189.9872, -205.0475],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0156, device='cuda:0', dtype=torch.float64)
tensor([-208.8322, -199.8670, -192.9265, -189.8046, -205.0663],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0189, device='cuda:0', dtype=torch.float64)
tensor([-208.8220, -199.8637, -192.8158, -189.6628, -205.0508],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0150, device='cuda:0', dtype=torch.float64)
tensor([-208.8499, -199.8696, -192.7029, -189.5358, -205.0802],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0188, device='cuda:0', dtype=torch.float64)
tensor([-208.7967, -199.8725, -192.7291, -189.5745, -205.0831],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0161, device='cuda:0', dtype=torch.float64)
tensor([-208.7792, -199.8724, -192.7421, -189.6118, -205.1303],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0183, device='cuda:0', dtype=torch.float64)
tensor([-208.7487, -199.8844, -192.8214, -189.7400, -205.1751],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0153, device='cuda:0', dtype=torch.float64)
tensor([-208.7414, -199.8909, -192.8640, -189.8206, -205.2209],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0192, device='cuda:0', dtype=torch.float64)
tensor([-208.7444, -199.8948, -192.8842, -189.8743, -205.2595],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0145, device='cuda:0', dtype=torch.float64)
tensor([-208.7393, -199.9189, -192.9070, -189.9365, -205.2972],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0169, device='cuda:0', dtype=torch.float64)
tensor([-208.7051, -199.9228, -192.9445, -190.0025, -205.3067],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0156, device='cuda:0', dtype=torch.float64)
tensor([-208.7051, -199.9122, -192.9258, -190.0048, -205.3343],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0174, device='cuda:0', dtype=torch.float64)
tensor([-208.6274, -199.8689, -192.9277, -190.0040, -205.2986],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0168, device='cuda:0', dtype=torch.float64)
tensor([-208.5281, -199.8110, -192.9447, -190.0151, -205.2587],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0182, device='cuda:0', dtype=torch.float64)
tensor([-208.4713, -199.7655, -192.9867, -190.0855, -205.2391],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0179, device='cuda:0', dtype=torch.float64)
tensor([-208.3810, -199.7029, -193.0555, -190.1743, -205.1903],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0159, device='cuda:0', dtype=torch.float64)
tensor([-208.2800, -199.6210, -193.1500, -190.2809, -205.1295],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0142, device='cuda:0', dtype=torch.float64)
tensor([-208.1633, -199.5339, -193.2725, -190.4145, -205.0504],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0155, device='cuda:0', dtype=torch.float64)
tensor([-208.0545, -199.4544, -193.4032, -190.5605, -204.9832],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0159, device='cuda:0', dtype=torch.float64)
tensor([-207.9182, -199.3951, -193.5225, -190.6943, -204.9121],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0165, device='cuda:0', dtype=torch.float64)
tensor([-207.7986, -199.3618, -193.7295, -190.9569, -204.8594],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0142, device='cuda:0', dtype=torch.float64)
tensor([-207.6872, -199.3304, -193.9197, -191.2001, -204.8113],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0165, device='cuda:0', dtype=torch.float64)
tensor([-207.6239, -199.2862, -194.0915, -191.4328, -204.7919],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0172, device='cuda:0', dtype=torch.float64)
tensor([-207.5981, -199.2596, -194.2815, -191.6930, -204.8029],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0175, device='cuda:0', dtype=torch.float64)
tensor([-207.5671, -199.2449, -194.4470, -191.9246, -204.8149],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0156, device='cuda:0', dtype=torch.float64)
tensor([-207.5520, -199.2120, -194.5768, -192.1064, -204.8438],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0179, device='cuda:0', dtype=torch.float64)
tensor([-207.5702, -199.1911, -194.6463, -192.2153, -204.8867],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0171, device='cuda:0', dtype=torch.float64)
tensor([-207.5787, -199.1655, -194.6745, -192.2640, -204.9207],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0172, device='cuda:0', dtype=torch.float64)
tensor([-207.5391, -199.1481, -194.6949, -192.2780, -204.9149],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0161, device='cuda:0', dtype=torch.float64)
tensor([-207.4755, -199.1034, -194.6999, -192.2672, -204.9024],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0152, device='cuda:0', dtype=torch.float64)
tensor([-207.4204, -199.0579, -194.6698, -192.2103, -204.8877],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0139, device='cuda:0', dtype=torch.float64)
tensor([-207.4251, -199.0263, -194.5863, -192.1203, -204.9170],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0175, device='cuda:0', dtype=torch.float64)
tensor([-207.4219, -198.9676, -194.4845, -191.9907, -204.9286],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0178, device='cuda:0', dtype=torch.float64)
tensor([-207.4762, -198.9219, -194.3743, -191.8715, -204.9859],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0140, device='cuda:0', dtype=torch.float64)
tensor([-207.5278, -198.8697, -194.2576, -191.7393, -205.0536],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0188, device='cuda:0', dtype=torch.float64)
tensor([-207.6329, -198.8253, -194.1189, -191.6000, -205.1765],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0190, device='cuda:0', dtype=torch.float64)
tensor([-207.6696, -198.7530, -193.9849, -191.4385, -205.2507],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0181, device='cuda:0', dtype=torch.float64)
tensor([-207.6339, -198.6923, -193.9480, -191.3847, -205.2762],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0155, device='cuda:0', dtype=torch.float64)
tensor([-207.5906, -198.6391, -193.9169, -191.3277, -205.3053],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0176, device='cuda:0', dtype=torch.float64)
tensor([-207.5387, -198.5667, -193.8985, -191.2757, -205.3172],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0167, device='cuda:0', dtype=torch.float64)
tensor([-207.5320, -198.5013, -193.8289, -191.1806, -205.3523],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0171, device='cuda:0', dtype=torch.float64)
tensor([-207.5745, -198.4632, -193.7057, -191.0469, -205.4121],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0146, device='cuda:0', dtype=torch.float64)
tensor([-207.6247, -198.4269, -193.5686, -190.8991, -205.4825],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0198, device='cuda:0', dtype=torch.float64)
tensor([-207.6414, -198.4011, -193.5154, -190.8470, -205.5384],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0182, device='cuda:0', dtype=torch.float64)
tensor([-207.6343, -198.3968, -193.4497, -190.7855, -205.5710],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0164, device='cuda:0', dtype=torch.float64)
tensor([-207.6551, -198.4325, -193.4059, -190.7664, -205.6152],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0179, device='cuda:0', dtype=torch.float64)
tensor([-207.6693, -198.4959, -193.4106, -190.8101, -205.6522],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0173, device='cuda:0', dtype=torch.float64)
tensor([-207.6711, -198.5507, -193.4686, -190.9166, -205.6714],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0217, device='cuda:0', dtype=torch.float64)
tensor([-207.6256, -198.6285, -193.6171, -191.1286, -205.6534],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0162, device='cuda:0', dtype=torch.float64)
tensor([-207.5593, -198.6936, -193.7115, -191.2610, -205.6063],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0168, device='cuda:0', dtype=torch.float64)
tensor([-207.5114, -198.7598, -193.7442, -191.3269, -205.5671],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0152, device='cuda:0', dtype=torch.float64)
tensor([-207.4105, -198.8335, -193.8558, -191.4676, -205.4811],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0158, device='cuda:0', dtype=torch.float64)
tensor([-207.3728, -198.8850, -193.9028, -191.5384, -205.4307],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0189, device='cuda:0', dtype=torch.float64)
tensor([-207.3534, -198.9590, -194.0496, -191.7422, -205.3842],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0155, device='cuda:0', dtype=torch.float64)
tensor([-207.3817, -199.0412, -194.1487, -191.9095, -205.3689],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0195, device='cuda:0', dtype=torch.float64)
tensor([-207.4624, -199.1366, -194.2499, -192.0902, -205.3911],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0186, device='cuda:0', dtype=torch.float64)
tensor([-207.6116, -199.2319, -194.2539, -192.1629, -205.4483],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0173, device='cuda:0', dtype=torch.float64)
tensor([-207.7408, -199.3079, -194.2131, -192.1630, -205.4892],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0180, device='cuda:0', dtype=torch.float64)
tensor([-207.7919, -199.3786, -194.2026, -192.1846, -205.4964],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0155, device='cuda:0', dtype=torch.float64)
tensor([-207.8195, -199.4026, -194.1321, -192.1198, -205.4885],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0194, device='cuda:0', dtype=torch.float64)
tensor([-207.8719, -199.4112, -193.9915, -191.9785, -205.5100],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0228, device='cuda:0', dtype=torch.float64)
tensor([-207.9167, -199.3854, -193.7816, -191.7496, -205.5045],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0168, device='cuda:0', dtype=torch.float64)
tensor([-207.9661, -199.3562, -193.5750, -191.5353, -205.4994],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0193, device='cuda:0', dtype=torch.float64)
tensor([-208.0452, -199.3265, -193.3342, -191.2804, -205.5170],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0181, device='cuda:0', dtype=torch.float64)
tensor([-208.0465, -199.2863, -193.1300, -191.0463, -205.4893],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0181, device='cuda:0', dtype=torch.float64)
tensor([-208.0490, -199.2278, -192.8930, -190.7641, -205.4510],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0192, device='cuda:0', dtype=torch.float64)
tensor([-208.0930, -199.1663, -192.5711, -190.3873, -205.4415],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0165, device='cuda:0', dtype=torch.float64)
tensor([-208.1703, -199.1056, -192.2483, -190.0258, -205.4608],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0199, device='cuda:0', dtype=torch.float64)
tensor([-208.1567, -199.0453, -192.0238, -189.7426, -205.4101],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0181, device='cuda:0', dtype=torch.float64)
tensor([-208.1400, -198.9709, -191.7669, -189.3977, -205.3509],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0166, device='cuda:0', dtype=torch.float64)
tensor([-208.1537, -198.9036, -191.4949, -189.0321, -205.3240],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0191, device='cuda:0', dtype=torch.float64)
tensor([-208.1233, -198.7876, -191.3316, -188.7716, -205.2539],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0194, device='cuda:0', dtype=torch.float64)
tensor([-208.0906, -198.6687, -191.2321, -188.5948, -205.1940],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0193, device='cuda:0', dtype=torch.float64)
tensor([-207.9901, -198.5592, -191.2272, -188.5246, -205.0895],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0181, device='cuda:0', dtype=torch.float64)
tensor([-207.8736, -198.4197, -191.3265, -188.5768, -204.9662],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0158, device='cuda:0', dtype=torch.float64)
tensor([-207.7233, -198.3021, -191.4304, -188.6237, -204.8342],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0178, device='cuda:0', dtype=torch.float64)
tensor([-207.5305, -198.1813, -191.6100, -188.7547, -204.7017],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0194, device='cuda:0', dtype=torch.float64)
tensor([-207.3531, -198.0681, -191.7266, -188.8113, -204.5889],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0167, device='cuda:0', dtype=torch.float64)
tensor([-207.2204, -197.9683, -191.8369, -188.9060, -204.5254],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0169, device='cuda:0', dtype=torch.float64)
tensor([-207.0585, -197.8625, -192.0001, -189.0670, -204.4239],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0223, device='cuda:0', dtype=torch.float64)
tensor([-206.8631, -197.7646, -192.2393, -189.3238, -204.3002],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0188, device='cuda:0', dtype=torch.float64)
tensor([-206.6174, -197.6629, -192.4960, -189.5735, -204.1289],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0190, device='cuda:0', dtype=torch.float64)
tensor([-206.4043, -197.5923, -192.7439, -189.8268, -203.9852],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0172, device='cuda:0', dtype=torch.float64)
tensor([-206.2241, -197.5148, -192.9894, -190.0704, -203.8467],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0209, device='cuda:0', dtype=torch.float64)
tensor([-206.0710, -197.4579, -193.2117, -190.3064, -203.7221],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0183, device='cuda:0', dtype=torch.float64)
tensor([-205.9733, -197.4236, -193.3611, -190.4664, -203.6461],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0194, device='cuda:0', dtype=torch.float64)
tensor([-205.9068, -197.4126, -193.5490, -190.6810, -203.6063],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0219, device='cuda:0', dtype=torch.float64)
tensor([-205.8456, -197.3926, -193.7141, -190.8596, -203.5530],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0163, device='cuda:0', dtype=torch.float64)
tensor([-205.7570, -197.3868, -193.8677, -191.0282, -203.4731],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0176, device='cuda:0', dtype=torch.float64)
tensor([-205.6336, -197.3944, -193.9894, -191.1500, -203.3698],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0167, device='cuda:0', dtype=torch.float64)
tensor([-205.5150, -197.4012, -194.0999, -191.2437, -203.2651],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0162, device='cuda:0', dtype=torch.float64)
tensor([-205.4830, -197.4038, -194.1048, -191.2256, -203.2360],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0193, device='cuda:0', dtype=torch.float64)
tensor([-205.4756, -197.4063, -194.0821, -191.1818, -203.2381],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0189, device='cuda:0', dtype=torch.float64)
tensor([-205.4868, -197.4175, -194.0241, -191.1159, -203.2564],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0179, device='cuda:0', dtype=torch.float64)
tensor([-205.5319, -197.4408, -193.9306, -191.0288, -203.2919],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0195, device='cuda:0', dtype=torch.float64)
tensor([-205.6032, -197.4486, -193.7818, -190.8636, -203.3554],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0155, device='cuda:0', dtype=torch.float64)
tensor([-205.6886, -197.4640, -193.6141, -190.6736, -203.4328],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0192, device='cuda:0', dtype=torch.float64)
tensor([-205.7367, -197.4931, -193.3864, -190.3987, -203.4840],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0212, device='cuda:0', dtype=torch.float64)
tensor([-205.8283, -197.5518, -193.1829, -190.1927, -203.5483],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0198, device='cuda:0', dtype=torch.float64)
tensor([-205.9188, -197.5859, -192.9976, -190.0065, -203.6305],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0190, device='cuda:0', dtype=torch.float64)
tensor([-206.0549, -197.6249, -192.7662, -189.7921, -203.7509],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0180, device='cuda:0', dtype=torch.float64)
tensor([-206.1853, -197.6649, -192.5207, -189.5801, -203.8763],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0197, device='cuda:0', dtype=torch.float64)
tensor([-206.2874, -197.6910, -192.2824, -189.3648, -203.9640],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0170, device='cuda:0', dtype=torch.float64)
tensor([-206.3820, -197.7155, -192.0313, -189.1351, -204.0364],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0164, device='cuda:0', dtype=torch.float64)
tensor([-206.5396, -197.7274, -191.7408, -188.8745, -204.1492],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0192, device='cuda:0', dtype=torch.float64)
tensor([-206.6656, -197.7469, -191.5062, -188.6847, -204.2578],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0223, device='cuda:0', dtype=torch.float64)
tensor([-206.7283, -197.7690, -191.3120, -188.5255, -204.2975],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0170, device='cuda:0', dtype=torch.float64)
tensor([-206.7503, -197.7852, -191.1923, -188.4450, -204.2955],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0176, device='cuda:0', dtype=torch.float64)
tensor([-206.7590, -197.8104, -191.1535, -188.4692, -204.2653],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0176, device='cuda:0', dtype=torch.float64)
tensor([-206.8167, -197.8251, -191.0341, -188.4028, -204.2859],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0171, device='cuda:0', dtype=torch.float64)
tensor([-206.8679, -197.8339, -190.9951, -188.4406, -204.2939],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0287, device='cuda:0', dtype=torch.float64)
tensor([-206.9302, -197.8601, -190.9554, -188.4861, -204.3137],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0153, device='cuda:0', dtype=torch.float64)
tensor([-206.9249, -197.8587, -190.9486, -188.5496, -204.2828],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0188, device='cuda:0', dtype=torch.float64)
tensor([-206.9476, -197.8555, -190.9297, -188.5987, -204.2595],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0157, device='cuda:0', dtype=torch.float64)
tensor([-207.0686, -197.8724, -190.9071, -188.6841, -204.2989],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0172, device='cuda:0', dtype=torch.float64)
tensor([-207.2227, -197.9022, -190.8540, -188.7505, -204.3854],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0157, device='cuda:0', dtype=torch.float64)
tensor([-207.3227, -197.9288, -190.8443, -188.8443, -204.4358],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0204, device='cuda:0', dtype=torch.float64)
tensor([-207.3528, -197.9339, -190.8100, -188.8684, -204.4367],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0193, device='cuda:0', dtype=torch.float64)
tensor([-207.3507, -197.9595, -190.8502, -188.9752, -204.4144],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0184, device='cuda:0', dtype=torch.float64)
tensor([-207.2609, -197.9440, -190.8958, -189.0407, -204.3402],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0213, device='cuda:0', dtype=torch.float64)
tensor([-207.1141, -197.9132, -190.9521, -189.0930, -204.2279],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0179, device='cuda:0', dtype=torch.float64)
tensor([-207.0373, -197.8801, -190.8619, -188.9723, -204.1673],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0175, device='cuda:0', dtype=torch.float64)
tensor([-206.9925, -197.8543, -190.7685, -188.8489, -204.1285],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0175, device='cuda:0', dtype=torch.float64)
tensor([-206.9200, -197.8472, -190.7967, -188.8760, -204.0613],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0205, device='cuda:0', dtype=torch.float64)
tensor([-206.8423, -197.8115, -190.6905, -188.7257, -203.9979],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0181, device='cuda:0', dtype=torch.float64)
tensor([-206.7899, -197.7622, -190.5505, -188.5280, -203.9568],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0185, device='cuda:0', dtype=torch.float64)
tensor([-206.7032, -197.7125, -190.4892, -188.4074, -203.8886],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0188, device='cuda:0', dtype=torch.float64)
tensor([-206.5880, -197.7005, -190.4458, -188.3106, -203.8232],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0175, device='cuda:0', dtype=torch.float64)
tensor([-206.4018, -197.6735, -190.4453, -188.2330, -203.6808],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0213, device='cuda:0', dtype=torch.float64)
tensor([-206.2176, -197.6541, -190.5112, -188.2602, -203.5455],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0190, device='cuda:0', dtype=torch.float64)
tensor([-205.9886, -197.5916, -190.6134, -188.2903, -203.3679],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0174, device='cuda:0', dtype=torch.float64)
tensor([-205.8307, -197.5422, -190.6804, -188.3132, -203.2364],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0188, device='cuda:0', dtype=torch.float64)
tensor([-205.6767, -197.4923, -190.7827, -188.3834, -203.0949],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0194, device='cuda:0', dtype=torch.float64)
tensor([-205.5700, -197.4571, -190.8700, -188.4590, -202.9802],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0242, device='cuda:0', dtype=torch.float64)
tensor([-205.4812, -197.4303, -190.9101, -188.5139, -202.8900],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0203, device='cuda:0', dtype=torch.float64)
tensor([-205.4650, -197.3928, -190.9293, -188.5537, -202.8282],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0192, device='cuda:0', dtype=torch.float64)
tensor([-205.4852, -197.3428, -190.8518, -188.4745, -202.8072],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0189, device='cuda:0', dtype=torch.float64)
tensor([-205.5120, -197.2880, -190.7430, -188.3509, -202.7693],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0181, device='cuda:0', dtype=torch.float64)
tensor([-205.4885, -197.2251, -190.7349, -188.3316, -202.7148],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0218, device='cuda:0', dtype=torch.float64)
tensor([-205.5749, -197.1812, -190.6428, -188.2425, -202.7583],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0207, device='cuda:0', dtype=torch.float64)
tensor([-205.6284, -197.1111, -190.5527, -188.1492, -202.7693],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0188, device='cuda:0', dtype=torch.float64)
tensor([-205.6844, -197.0697, -190.4989, -188.1186, -202.8202],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0181, device='cuda:0', dtype=torch.float64)
tensor([-205.7030, -197.0469, -190.4980, -188.1421, -202.8369],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0189, device='cuda:0', dtype=torch.float64)
tensor([-205.7004, -197.0170, -190.4845, -188.1375, -202.8610],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0190, device='cuda:0', dtype=torch.float64)
tensor([-205.6904, -196.9988, -190.4598, -188.1131, -202.8894],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0198, device='cuda:0', dtype=torch.float64)
tensor([-205.6136, -196.9582, -190.5396, -188.1912, -202.8802],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0215, device='cuda:0', dtype=torch.float64)
tensor([-205.4878, -196.8991, -190.6417, -188.2668, -202.8217],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0186, device='cuda:0', dtype=torch.float64)
tensor([-205.3058, -196.8468, -190.7552, -188.3467, -202.7353],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0200, device='cuda:0', dtype=torch.float64)
tensor([-205.1013, -196.7837, -190.9496, -188.5145, -202.6397],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0194, device='cuda:0', dtype=torch.float64)
tensor([-205.0118, -196.7668, -191.1049, -188.6868, -202.6346],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0182, device='cuda:0', dtype=torch.float64)
tensor([-204.9734, -196.7771, -191.2310, -188.8420, -202.6676],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0176, device='cuda:0', dtype=torch.float64)
tensor([-205.0006, -196.7925, -191.3465, -189.0019, -202.7350],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0187, device='cuda:0', dtype=torch.float64)
tensor([-205.0670, -196.8227, -191.4473, -189.1587, -202.8515],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0207, device='cuda:0', dtype=torch.float64)
tensor([-205.1257, -196.8526, -191.4859, -189.2436, -202.9792],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0181, device='cuda:0', dtype=torch.float64)
tensor([-205.1674, -196.8663, -191.4813, -189.2689, -203.0990],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0196, device='cuda:0', dtype=torch.float64)
tensor([-205.1661, -196.8736, -191.4980, -189.3105, -203.1864],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0212, device='cuda:0', dtype=torch.float64)
tensor([-205.1532, -196.8633, -191.4976, -189.3261, -203.2689],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0203, device='cuda:0', dtype=torch.float64)
tensor([-205.2491, -196.8776, -191.3678, -189.2457, -203.4192],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0187, device='cuda:0', dtype=torch.float64)
tensor([-205.3724, -196.8973, -191.2332, -189.1778, -203.6009],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0211, device='cuda:0', dtype=torch.float64)
tensor([-205.5335, -196.9306, -191.0313, -189.0392, -203.8425],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0203, device='cuda:0', dtype=torch.float64)
tensor([-205.6871, -196.9258, -190.7786, -188.8340, -204.0618],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0203, device='cuda:0', dtype=torch.float64)
tensor([-205.8326, -196.9289, -190.5464, -188.6373, -204.2619],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0175, device='cuda:0', dtype=torch.float64)
tensor([-205.9111, -196.9126, -190.3347, -188.4248, -204.3956],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0193, device='cuda:0', dtype=torch.float64)
tensor([-206.0438, -196.9448, -190.0577, -188.1782, -204.5628],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0173, device='cuda:0', dtype=torch.float64)
tensor([-206.2526, -196.9827, -189.7097, -187.8717, -204.7893],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0203, device='cuda:0', dtype=torch.float64)
tensor([-206.3241, -197.0105, -189.4318, -187.5921, -204.9140],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0180, device='cuda:0', dtype=torch.float64)
tensor([-206.3723, -197.0409, -189.1764, -187.3292, -204.9943],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0173, device='cuda:0', dtype=torch.float64)
tensor([-206.3728, -197.0590, -188.9461, -187.0665, -205.0203],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0224, device='cuda:0', dtype=torch.float64)
tensor([-206.4150, -197.0772, -188.7389, -186.8315, -205.0503],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0203, device='cuda:0', dtype=torch.float64)
tensor([-206.4534, -197.1171, -188.5710, -186.6606, -205.0892],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0180, device='cuda:0', dtype=torch.float64)
tensor([-206.3907, -197.1150, -188.4881, -186.5287, -205.0499],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0183, device='cuda:0', dtype=torch.float64)
tensor([-206.2639, -197.0899, -188.4860, -186.4580, -204.9667],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0190, device='cuda:0', dtype=torch.float64)
tensor([-206.0189, -197.0559, -188.5642, -186.4483, -204.8078],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0191, device='cuda:0', dtype=torch.float64)
tensor([-205.8010, -197.0576, -188.7031, -186.5471, -204.6539],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0184, device='cuda:0', dtype=torch.float64)
tensor([-205.5114, -197.0316, -188.8820, -186.6510, -204.4594],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0186, device='cuda:0', dtype=torch.float64)
tensor([-205.2882, -197.0396, -189.0561, -186.8038, -204.3366],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0224, device='cuda:0', dtype=torch.float64)
tensor([-205.0146, -197.0212, -189.2922, -186.9852, -204.1443],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0199, device='cuda:0', dtype=torch.float64)
tensor([-204.8209, -197.0184, -189.4452, -187.1129, -204.0148],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0191, device='cuda:0', dtype=torch.float64)
tensor([-204.6127, -197.0273, -189.6185, -187.2634, -203.8702],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0210, device='cuda:0', dtype=torch.float64)
tensor([-204.4079, -197.0297, -189.7926, -187.4216, -203.7329],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0174, device='cuda:0', dtype=torch.float64)
tensor([-204.2438, -197.0422, -189.9153, -187.5494, -203.6337],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0174, device='cuda:0', dtype=torch.float64)
tensor([-204.0510, -197.0583, -189.9782, -187.5781, -203.4990],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0177, device='cuda:0', dtype=torch.float64)
tensor([-203.9884, -197.1080, -189.9495, -187.5543, -203.4632],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0183, device='cuda:0', dtype=torch.float64)
tensor([-203.9543, -197.1403, -189.9268, -187.5533, -203.4437],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0190, device='cuda:0', dtype=torch.float64)
tensor([-204.0353, -197.1694, -189.8199, -187.4975, -203.5353],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0207, device='cuda:0', dtype=torch.float64)
tensor([-204.0967, -197.1685, -189.7571, -187.4669, -203.6027],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0171, device='cuda:0', dtype=torch.float64)
tensor([-204.1734, -197.1694, -189.7248, -187.4887, -203.6766],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0195, device='cuda:0', dtype=torch.float64)
tensor([-204.2824, -197.1863, -189.6712, -187.5036, -203.7669],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0198, device='cuda:0', dtype=torch.float64)
tensor([-204.4067, -197.2031, -189.5750, -187.4675, -203.8845],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0219, device='cuda:0', dtype=torch.float64)
tensor([-204.6073, -197.2261, -189.4110, -187.3753, -204.0768],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0186, device='cuda:0', dtype=torch.float64)
tensor([-204.7836, -197.2340, -189.2467, -187.2645, -204.2465],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0187, device='cuda:0', dtype=torch.float64)
tensor([-204.9203, -197.1998, -189.0903, -187.1227, -204.3901],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0197, device='cuda:0', dtype=torch.float64)
tensor([-205.0218, -197.1805, -188.9729, -187.0217, -204.4845],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0205, device='cuda:0', dtype=torch.float64)
tensor([-204.9989, -197.1047, -188.9437, -186.9590, -204.4898],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0173, device='cuda:0', dtype=torch.float64)
tensor([-204.9688, -197.0235, -188.9362, -186.9252, -204.4687],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0160, device='cuda:0', dtype=torch.float64)
tensor([-204.9099, -196.9549, -188.9576, -186.9185, -204.4067],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0178, device='cuda:0', dtype=torch.float64)
tensor([-204.8958, -196.9007, -188.9511, -186.9030, -204.3739],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0187, device='cuda:0', dtype=torch.float64)
tensor([-204.8726, -196.8228, -188.9608, -186.8821, -204.3205],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0208, device='cuda:0', dtype=torch.float64)
tensor([-204.9062, -196.7832, -188.9097, -186.8638, -204.3426],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0221, device='cuda:0', dtype=torch.float64)
tensor([-204.9348, -196.7410, -188.8129, -186.7885, -204.3636],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0175, device='cuda:0', dtype=torch.float64)
tensor([-205.0039, -196.7149, -188.6956, -186.7059, -204.3920],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0222, device='cuda:0', dtype=torch.float64)
tensor([-205.0041, -196.6849, -188.6883, -186.7366, -204.3605],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0213, device='cuda:0', dtype=torch.float64)
tensor([-204.9420, -196.6240, -188.6921, -186.7336, -204.2550],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0210, device='cuda:0', dtype=torch.float64)
tensor([-204.8294, -196.5602, -188.7167, -186.7355, -204.1071],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0205, device='cuda:0', dtype=torch.float64)
tensor([-204.6221, -196.4812, -188.7881, -186.7782, -203.9165],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0179, device='cuda:0', dtype=torch.float64)
tensor([-204.4706, -196.4449, -188.8688, -186.8542, -203.7561],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0220, device='cuda:0', dtype=torch.float64)
tensor([-204.4117, -196.4270, -188.8920, -186.9025, -203.6802],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0174, device='cuda:0', dtype=torch.float64)
tensor([-204.2475, -196.3665, -188.9638, -186.9524, -203.4850],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0211, device='cuda:0', dtype=torch.float64)
tensor([-204.0247, -196.2810, -189.0459, -186.9733, -203.2441],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0183, device='cuda:0', dtype=torch.float64)
tensor([-203.8516, -196.2129, -189.1392, -187.0145, -203.0280],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0213, device='cuda:0', dtype=torch.float64)
tensor([-203.7156, -196.1521, -189.1784, -187.0346, -202.8569],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0272, device='cuda:0', dtype=torch.float64)
tensor([-203.5572, -196.1134, -189.2512, -187.0934, -202.6729],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0175, device='cuda:0', dtype=torch.float64)
tensor([-203.4554, -196.0843, -189.2306, -187.0630, -202.5413],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0199, device='cuda:0', dtype=torch.float64)
tensor([-203.4218, -196.0717, -189.1562, -186.9963, -202.4635],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0228, device='cuda:0', dtype=torch.float64)
tensor([-203.3776, -196.0874, -189.1175, -186.9796, -202.3600],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0217, device='cuda:0', dtype=torch.float64)
tensor([-203.4288, -196.1464, -189.0031, -186.8952, -202.3495],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0216, device='cuda:0', dtype=torch.float64)
tensor([-203.4704, -196.1996, -188.8880, -186.8087, -202.3409],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0216, device='cuda:0', dtype=torch.float64)
tensor([-203.5055, -196.2281, -188.7357, -186.6679, -202.3489],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0189, device='cuda:0', dtype=torch.float64)
tensor([-203.4973, -196.2375, -188.7003, -186.6528, -202.2999],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0193, device='cuda:0', dtype=torch.float64)
tensor([-203.4852, -196.2441, -188.5954, -186.5525, -202.2504],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0233, device='cuda:0', dtype=torch.float64)
tensor([-203.6022, -196.2921, -188.4488, -186.4512, -202.2783],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0193, device='cuda:0', dtype=torch.float64)
tensor([-203.7111, -196.3324, -188.3570, -186.4052, -202.3029],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0194, device='cuda:0', dtype=torch.float64)
tensor([-203.8319, -196.3847, -188.2478, -186.3596, -202.3458],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0202, device='cuda:0', dtype=torch.float64)
tensor([-203.9065, -196.4134, -188.1280, -186.2662, -202.3478],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0174, device='cuda:0', dtype=torch.float64)
tensor([-204.0048, -196.4690, -188.0384, -186.2467, -202.3554],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0214, device='cuda:0', dtype=torch.float64)
tensor([-204.0500, -196.5012, -187.9547, -186.2079, -202.3372],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0194, device='cuda:0', dtype=torch.float64)
tensor([-204.0175, -196.4910, -187.8862, -186.1458, -202.2602],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0215, device='cuda:0', dtype=torch.float64)
tensor([-204.0248, -196.4655, -187.7701, -186.0207, -202.2262],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0200, device='cuda:0', dtype=torch.float64)
tensor([-204.0010, -196.4477, -187.7159, -185.9569, -202.1790],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0239, device='cuda:0', dtype=torch.float64)
tensor([-203.9160, -196.4042, -187.6370, -185.8568, -202.0995],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0231, device='cuda:0', dtype=torch.float64)
tensor([-203.8194, -196.3490, -187.5334, -185.7016, -202.0054],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0197, device='cuda:0', dtype=torch.float64)
tensor([-203.6742, -196.2864, -187.5221, -185.6357, -201.8423],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0178, device='cuda:0', dtype=torch.float64)
tensor([-203.5130, -196.1926, -187.5799, -185.6333, -201.6459],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0188, device='cuda:0', dtype=torch.float64)
tensor([-203.4261, -196.1292, -187.6084, -185.6394, -201.5058],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0238, device='cuda:0', dtype=torch.float64)
tensor([-203.3132, -196.0366, -187.7948, -185.8104, -201.3200],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0214, device='cuda:0', dtype=torch.float64)
tensor([-203.2705, -195.9617, -187.8489, -185.8523, -201.2304],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0186, device='cuda:0', dtype=torch.float64)
tensor([-203.2000, -195.8720, -187.8879, -185.8675, -201.1283],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0228, device='cuda:0', dtype=torch.float64)
tensor([-203.1795, -195.7693, -187.8682, -185.8364, -201.0781],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0180, device='cuda:0', dtype=torch.float64)
tensor([-203.2076, -195.6968, -187.8193, -185.7901, -201.0846],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0231, device='cuda:0', dtype=torch.float64)
tensor([-203.1954, -195.6275, -187.8169, -185.7919, -201.0852],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0210, device='cuda:0', dtype=torch.float64)
tensor([-203.2065, -195.5761, -187.8725, -185.8770, -201.0736],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0187, device='cuda:0', dtype=torch.float64)
tensor([-203.2375, -195.5190, -187.9663, -186.0013, -201.0773],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0173, device='cuda:0', dtype=torch.float64)
tensor([-203.2394, -195.4515, -188.1096, -186.1721, -201.0713],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0225, device='cuda:0', dtype=torch.float64)
tensor([-203.2788, -195.3949, -188.1752, -186.2735, -201.1080],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0180, device='cuda:0', dtype=torch.float64)
tensor([-203.3306, -195.3333, -188.1943, -186.3223, -201.1650],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0195, device='cuda:0', dtype=torch.float64)
tensor([-203.4111, -195.2787, -188.1876, -186.3464, -201.2425],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0178, device='cuda:0', dtype=torch.float64)
tensor([-203.5144, -195.2862, -188.1554, -186.3620, -201.3301],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0219, device='cuda:0', dtype=torch.float64)
tensor([-203.6264, -195.2753, -188.0658, -186.3117, -201.4270],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0201, device='cuda:0', dtype=torch.float64)
tensor([-203.7025, -195.2292, -187.9886, -186.2655, -201.5096],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0188, device='cuda:0', dtype=torch.float64)
tensor([-203.7551, -195.1800, -187.9615, -186.2727, -201.5744],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0195, device='cuda:0', dtype=torch.float64)
tensor([-203.8235, -195.1761, -187.9485, -186.3179, -201.6405],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0211, device='cuda:0', dtype=torch.float64)
tensor([-203.9316, -195.1602, -187.8375, -186.2769, -201.7539],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0197, device='cuda:0', dtype=torch.float64)
tensor([-204.0498, -195.1585, -187.7182, -186.2261, -201.8560],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0244, device='cuda:0', dtype=torch.float64)
tensor([-204.1532, -195.1486, -187.6225, -186.1879, -201.9426],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0178, device='cuda:0', dtype=torch.float64)
tensor([-204.2144, -195.1231, -187.5466, -186.1474, -201.9870],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0217, device='cuda:0', dtype=torch.float64)
tensor([-204.2216, -195.0804, -187.5237, -186.1413, -201.9943],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0220, device='cuda:0', dtype=torch.float64)
tensor([-204.2488, -194.9994, -187.4375, -186.0566, -202.0165],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0252, device='cuda:0', dtype=torch.float64)
tensor([-204.3115, -194.9516, -187.4022, -186.0384, -202.0343],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0173, device='cuda:0', dtype=torch.float64)
tensor([-204.3771, -194.9195, -187.4196, -186.0854, -202.0528],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0220, device='cuda:0', dtype=torch.float64)
tensor([-204.3536, -194.8665, -187.3990, -186.0521, -202.0222],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0185, device='cuda:0', dtype=torch.float64)
tensor([-204.2848, -194.8327, -187.4372, -186.0984, -201.9677],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0213, device='cuda:0', dtype=torch.float64)
tensor([-204.1098, -194.7537, -187.5810, -186.2292, -201.8127],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0203, device='cuda:0', dtype=torch.float64)
tensor([-203.9819, -194.7067, -187.6916, -186.3539, -201.6946],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0218, device='cuda:0', dtype=torch.float64)
tensor([-203.8837, -194.6705, -187.7386, -186.4167, -201.5847],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0184, device='cuda:0', dtype=torch.float64)
tensor([-203.8018, -194.6661, -187.7831, -186.4923, -201.4953],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0202, device='cuda:0', dtype=torch.float64)
tensor([-203.7079, -194.6751, -187.8228, -186.5801, -201.3941],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0184, device='cuda:0', dtype=torch.float64)
tensor([-203.6330, -194.6814, -187.7924, -186.5888, -201.3308],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0206, device='cuda:0', dtype=torch.float64)
tensor([-203.6110, -194.6820, -187.7164, -186.5624, -201.3159],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0208, device='cuda:0', dtype=torch.float64)
tensor([-203.6740, -194.7229, -187.5072, -186.4394, -201.3824],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0210, device='cuda:0', dtype=torch.float64)
tensor([-203.7409, -194.7698, -187.3010, -186.3203, -201.4485],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0199, device='cuda:0', dtype=torch.float64)
tensor([-203.8077, -194.8346, -187.1210, -186.2412, -201.5179],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0205, device='cuda:0', dtype=torch.float64)
tensor([-203.8640, -194.8734, -186.9483, -186.1487, -201.5887],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0230, device='cuda:0', dtype=torch.float64)
tensor([-203.8348, -194.8801, -186.8717, -186.1122, -201.5835],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0225, device='cuda:0', dtype=torch.float64)
tensor([-203.9629, -194.9371, -186.7141, -186.0558, -201.6997],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0228, device='cuda:0', dtype=torch.float64)
tensor([-204.0824, -195.0128, -186.5064, -185.9644, -201.8087],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0188, device='cuda:0', dtype=torch.float64)
tensor([-204.1647, -195.0840, -186.2763, -185.8444, -201.9177],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0206, device='cuda:0', dtype=torch.float64)
tensor([-204.1896, -195.1362, -186.1405, -185.8222, -201.9851],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0198, device='cuda:0', dtype=torch.float64)
tensor([-204.1544, -195.1208, -186.1064, -185.8490, -201.9871],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0230, device='cuda:0', dtype=torch.float64)
tensor([-204.0248, -195.0481, -186.1595, -185.9142, -201.8889],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0185, device='cuda:0', dtype=torch.float64)
tensor([-203.8425, -194.9375, -186.2558, -185.9989, -201.7527],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0209, device='cuda:0', dtype=torch.float64)
tensor([-203.6223, -194.8004, -186.3357, -186.0382, -201.5850],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0222, device='cuda:0', dtype=torch.float64)
tensor([-203.3361, -194.6681, -186.4283, -186.0680, -201.3962],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0230, device='cuda:0', dtype=torch.float64)
tensor([-203.1424, -194.5590, -186.3793, -185.9671, -201.2937],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0236, device='cuda:0', dtype=torch.float64)
tensor([-203.0221, -194.4783, -186.2743, -185.8300, -201.2658],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0194, device='cuda:0', dtype=torch.float64)
tensor([-202.9246, -194.3895, -186.1243, -185.6465, -201.2511],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0205, device='cuda:0', dtype=torch.float64)
tensor([-202.7554, -194.3017, -185.9741, -185.4336, -201.1812],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0233, device='cuda:0', dtype=torch.float64)
tensor([-202.5494, -194.2255, -185.8887, -185.2819, -201.0779],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0215, device='cuda:0', dtype=torch.float64)
tensor([-202.4284, -194.2026, -185.8009, -185.1889, -201.0329],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0200, device='cuda:0', dtype=torch.float64)
tensor([-202.3522, -194.1533, -185.7326, -185.1248, -201.0100],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0231, device='cuda:0', dtype=torch.float64)
tensor([-202.3261, -194.1227, -185.7035, -185.1227, -201.0091],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0173, device='cuda:0', dtype=torch.float64)
tensor([-202.2434, -194.0590, -185.6791, -185.0788, -200.9755],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0198, device='cuda:0', dtype=torch.float64)
tensor([-202.1273, -193.9938, -185.7509, -185.1212, -200.8941],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0225, device='cuda:0', dtype=torch.float64)
tensor([-202.1626, -194.0042, -185.7718, -185.1754, -200.9206],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0219, device='cuda:0', dtype=torch.float64)
tensor([-202.1870, -194.0305, -185.7996, -185.2566, -200.9465],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0197, device='cuda:0', dtype=torch.float64)
tensor([-202.1736, -194.0305, -185.8430, -185.3316, -200.9432],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0252, device='cuda:0', dtype=torch.float64)
tensor([-202.3211, -194.1164, -185.8554, -185.4533, -201.0452],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0249, device='cuda:0', dtype=torch.float64)
tensor([-202.5468, -194.2442, -185.8372, -185.5790, -201.2079],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0227, device='cuda:0', dtype=torch.float64)
tensor([-202.7927, -194.3717, -185.7981, -185.7045, -201.3704],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0212, device='cuda:0', dtype=torch.float64)
tensor([-202.9692, -194.4601, -185.7204, -185.7563, -201.5048],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0206, device='cuda:0', dtype=torch.float64)
tensor([-203.1139, -194.5480, -185.6404, -185.8107, -201.6223],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0199, device='cuda:0', dtype=torch.float64)
tensor([-203.1838, -194.5584, -185.5175, -185.7481, -201.7118],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0213, device='cuda:0', dtype=torch.float64)
tensor([-203.2596, -194.5838, -185.3604, -185.6483, -201.8077],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0257, device='cuda:0', dtype=torch.float64)
tensor([-203.2958, -194.6101, -185.2221, -185.5431, -201.8672],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0216, device='cuda:0', dtype=torch.float64)
tensor([-203.3279, -194.6314, -185.0658, -185.4192, -201.9338],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0240, device='cuda:0', dtype=torch.float64)
tensor([-203.3355, -194.5992, -184.9093, -185.2727, -201.9646],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0204, device='cuda:0', dtype=torch.float64)
tensor([-203.3649, -194.5734, -184.7374, -185.1064, -202.0083],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0206, device='cuda:0', dtype=torch.float64)
tensor([-203.3408, -194.5169, -184.6276, -184.9785, -202.0072],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0252, device='cuda:0', dtype=torch.float64)
tensor([-203.2659, -194.4483, -184.5591, -184.8706, -201.9856],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0215, device='cuda:0', dtype=torch.float64)
tensor([-203.1911, -194.3884, -184.4378, -184.6840, -201.9768],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0229, device='cuda:0', dtype=torch.float64)
tensor([-203.0662, -194.3279, -184.3578, -184.5181, -201.9383],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0213, device='cuda:0', dtype=torch.float64)
tensor([-202.9380, -194.2583, -184.2658, -184.3495, -201.8680],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0219, device='cuda:0', dtype=torch.float64)
tensor([-202.8551, -194.1973, -184.2269, -184.2742, -201.8133],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0222, device='cuda:0', dtype=torch.float64)
tensor([-202.6960, -194.1017, -184.2929, -184.2547, -201.6754],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0228, device='cuda:0', dtype=torch.float64)
tensor([-202.5556, -194.0304, -184.3950, -184.2972, -201.5545],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0224, device='cuda:0', dtype=torch.float64)
tensor([-202.3414, -193.9436, -184.5481, -184.3824, -201.3894],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0197, device='cuda:0', dtype=torch.float64)
tensor([-202.1182, -193.8504, -184.7135, -184.4582, -201.1936],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0208, device='cuda:0', dtype=torch.float64)
tensor([-201.8235, -193.7273, -184.9197, -184.5575, -200.9345],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0254, device='cuda:0', dtype=torch.float64)
tensor([-201.5855, -193.6490, -185.1035, -184.6632, -200.7114],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0207, device='cuda:0', dtype=torch.float64)
tensor([-201.4611, -193.6122, -185.2199, -184.7760, -200.5761],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0223, device='cuda:0', dtype=torch.float64)
tensor([-201.3577, -193.5965, -185.2822, -184.8291, -200.4567],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0202, device='cuda:0', dtype=torch.float64)
tensor([-201.2781, -193.5683, -185.3209, -184.8651, -200.3856],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0249, device='cuda:0', dtype=torch.float64)
tensor([-201.3247, -193.5818, -185.2490, -184.8426, -200.4169],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0246, device='cuda:0', dtype=torch.float64)
tensor([-201.4197, -193.6139, -185.0903, -184.7590, -200.5246],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0230, device='cuda:0', dtype=torch.float64)
tensor([-201.4307, -193.6309, -184.9407, -184.6631, -200.5736],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0213, device='cuda:0', dtype=torch.float64)
tensor([-201.5151, -193.6927, -184.7571, -184.5779, -200.6808],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0221, device='cuda:0', dtype=torch.float64)
tensor([-201.5760, -193.7453, -184.6333, -184.5556, -200.7552],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0208, device='cuda:0', dtype=torch.float64)
tensor([-201.6208, -193.7776, -184.4678, -184.4694, -200.8360],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0210, device='cuda:0', dtype=torch.float64)
tensor([-201.6218, -193.8068, -184.3432, -184.4142, -200.8614],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0231, device='cuda:0', dtype=torch.float64)
tensor([-201.6653, -193.8234, -184.2525, -184.4048, -200.9116],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0229, device='cuda:0', dtype=torch.float64)
tensor([-201.7064, -193.8358, -184.1237, -184.3568, -200.9708],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0237, device='cuda:0', dtype=torch.float64)
tensor([-201.7809, -193.8709, -183.9215, -184.2695, -201.0785],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0224, device='cuda:0', dtype=torch.float64)
tensor([-201.7511, -193.8660, -183.7804, -184.2101, -201.0945],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0285, device='cuda:0', dtype=torch.float64)
tensor([-201.6976, -193.8426, -183.5639, -184.0506, -201.1048],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0200, device='cuda:0', dtype=torch.float64)
tensor([-201.7047, -193.8085, -183.3556, -183.9183, -201.1500],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0230, device='cuda:0', dtype=torch.float64)
tensor([-201.7423, -193.8047, -183.1756, -183.8336, -201.2091],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0237, device='cuda:0', dtype=torch.float64)
tensor([-201.8595, -193.8394, -182.9858, -183.7609, -201.3170],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0220, device='cuda:0', dtype=torch.float64)
tensor([-201.8066, -193.7909, -182.9245, -183.7285, -201.3005],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0229, device='cuda:0', dtype=torch.float64)
tensor([-201.7668, -193.7156, -182.8702, -183.6850, -201.2897],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0214, device='cuda:0', dtype=torch.float64)
tensor([-201.7338, -193.6293, -182.8712, -183.6970, -201.2817],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0233, device='cuda:0', dtype=torch.float64)
tensor([-201.8410, -193.6021, -182.8514, -183.7413, -201.3615],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0197, device='cuda:0', dtype=torch.float64)
tensor([-201.9314, -193.5536, -182.8887, -183.8265, -201.4132],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0231, device='cuda:0', dtype=torch.float64)
tensor([-202.0494, -193.5341, -182.9066, -183.9109, -201.4747],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0221, device='cuda:0', dtype=torch.float64)
tensor([-202.1457, -193.5296, -182.9685, -184.0524, -201.5353],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0217, device='cuda:0', dtype=torch.float64)
tensor([-202.1940, -193.5050, -183.0288, -184.1611, -201.5545],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0250, device='cuda:0', dtype=torch.float64)
tensor([-202.3308, -193.5366, -183.0146, -184.2420, -201.6441],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0217, device='cuda:0', dtype=torch.float64)
tensor([-202.4783, -193.5846, -183.0742, -184.4064, -201.7198],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0228, device='cuda:0', dtype=torch.float64)
tensor([-202.6047, -193.6308, -183.0805, -184.5150, -201.8128],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0225, device='cuda:0', dtype=torch.float64)
tensor([-202.6776, -193.6710, -182.9991, -184.4928, -201.8772],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0197, device='cuda:0', dtype=torch.float64)
tensor([-202.7779, -193.7336, -182.8417, -184.4139, -201.9949],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0245, device='cuda:0', dtype=torch.float64)
tensor([-202.7452, -193.7695, -182.7090, -184.3116, -202.0176],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0206, device='cuda:0', dtype=torch.float64)
tensor([-202.6628, -193.7619, -182.5786, -184.1865, -202.0123],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0246, device='cuda:0', dtype=torch.float64)
tensor([-202.4045, -193.6796, -182.5356, -184.0539, -201.8644],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0244, device='cuda:0', dtype=torch.float64)
tensor([-202.3170, -193.6668, -182.4177, -183.9264, -201.8533],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0238, device='cuda:0', dtype=torch.float64)
tensor([-202.1346, -193.6447, -182.3393, -183.7718, -201.7644],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0251, device='cuda:0', dtype=torch.float64)
tensor([-201.8755, -193.5460, -182.2802, -183.5857, -201.6230],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0256, device='cuda:0', dtype=torch.float64)
tensor([-201.5722, -193.4273, -182.2586, -183.4005, -201.4599],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0235, device='cuda:0', dtype=torch.float64)
tensor([-201.3074, -193.3419, -182.2568, -183.2485, -201.3285],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0235, device='cuda:0', dtype=torch.float64)
tensor([-200.9446, -193.2174, -182.3166, -183.1240, -201.1056],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0231, device='cuda:0', dtype=torch.float64)
tensor([-200.7364, -193.1774, -182.2691, -183.0021, -201.0031],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0246, device='cuda:0', dtype=torch.float64)
tensor([-200.6177, -193.1525, -182.2654, -182.9614, -200.9322],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0274, device='cuda:0', dtype=torch.float64)
tensor([-200.4508, -193.1058, -182.2859, -182.9327, -200.8099],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0222, device='cuda:0', dtype=torch.float64)
tensor([-200.2941, -193.0416, -182.2754, -182.8749, -200.6673],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0259, device='cuda:0', dtype=torch.float64)
tensor([-200.1493, -192.9860, -182.2163, -182.7708, -200.5812],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0253, device='cuda:0', dtype=torch.float64)
tensor([-200.0585, -192.9412, -182.1590, -182.6915, -200.5387],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0222, device='cuda:0', dtype=torch.float64)
tensor([-200.0567, -192.9455, -182.0549, -182.6072, -200.5594],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0224, device='cuda:0', dtype=torch.float64)
tensor([-200.0160, -192.9592, -181.9654, -182.5394, -200.5517],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0219, device='cuda:0', dtype=torch.float64)
tensor([-200.0205, -192.9886, -181.9457, -182.5618, -200.5726],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0225, device='cuda:0', dtype=torch.float64)
tensor([-200.0387, -193.0362, -181.9237, -182.6096, -200.6084],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0223, device='cuda:0', dtype=torch.float64)
tensor([-200.0453, -193.0776, -181.9687, -182.7244, -200.6170],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0259, device='cuda:0', dtype=torch.float64)
tensor([-199.9639, -193.0370, -182.0610, -182.8092, -200.5223],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0212, device='cuda:0', dtype=torch.float64)
tensor([-199.8751, -192.9640, -182.1997, -182.9345, -200.3757],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0255, device='cuda:0', dtype=torch.float64)
tensor([-199.7969, -192.9129, -182.3574, -183.0766, -200.2248],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0193, device='cuda:0', dtype=torch.float64)
tensor([-199.6421, -192.8184, -182.5100, -183.1739, -200.0071],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0238, device='cuda:0', dtype=torch.float64)
tensor([-199.4088, -192.6749, -182.6930, -183.2689, -199.7536],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0220, device='cuda:0', dtype=torch.float64)
tensor([-199.1416, -192.5139, -182.8558, -183.3338, -199.4710],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0239, device='cuda:0', dtype=torch.float64)
tensor([-198.8858, -192.3899, -183.0624, -183.4594, -199.1603],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0245, device='cuda:0', dtype=torch.float64)
tensor([-198.6048, -192.2556, -183.1962, -183.4927, -198.8229],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0267, device='cuda:0', dtype=torch.float64)
tensor([-198.3657, -192.1505, -183.3315, -183.5684, -198.5356],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0210, device='cuda:0', dtype=torch.float64)
tensor([-198.2160, -192.0850, -183.4876, -183.7305, -198.3211],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0232, device='cuda:0', dtype=torch.float64)
tensor([-198.1245, -192.0129, -183.6208, -183.9253, -198.1500],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0255, device='cuda:0', dtype=torch.float64)
tensor([-198.0482, -191.9491, -183.7342, -184.0887, -198.0030],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0223, device='cuda:0', dtype=torch.float64)
tensor([-198.0762, -191.9213, -183.8113, -184.2478, -197.9503],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0204, device='cuda:0', dtype=torch.float64)
tensor([-198.1007, -191.8761, -183.8507, -184.3744, -197.9247],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0223, device='cuda:0', dtype=torch.float64)
tensor([-198.1303, -191.8253, -183.8879, -184.4946, -197.9037],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0210, device='cuda:0', dtype=torch.float64)
tensor([-198.2087, -191.7856, -183.8868, -184.6054, -197.9367],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0219, device='cuda:0', dtype=torch.float64)
tensor([-198.2857, -191.7419, -183.8162, -184.6316, -197.9989],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0231, device='cuda:0', dtype=torch.float64)
tensor([-198.2889, -191.6740, -183.6692, -184.5571, -198.0206],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0214, device='cuda:0', dtype=torch.float64)
tensor([-198.2343, -191.5683, -183.4785, -184.4090, -198.0351],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0247, device='cuda:0', dtype=torch.float64)
tensor([-198.1565, -191.4391, -183.3493, -184.2699, -197.9766],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0236, device='cuda:0', dtype=torch.float64)
tensor([-198.1127, -191.3172, -183.2221, -184.1305, -197.9675],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0242, device='cuda:0', dtype=torch.float64)
tensor([-198.0935, -191.2239, -183.0175, -183.9204, -197.9933],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0251, device='cuda:0', dtype=torch.float64)
tensor([-198.0233, -191.1197, -182.8770, -183.7326, -197.9433],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0226, device='cuda:0', dtype=torch.float64)
tensor([-197.9372, -191.0295, -182.7413, -183.5430, -197.8844],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0236, device='cuda:0', dtype=torch.float64)
tensor([-197.9258, -190.9698, -182.5630, -183.3253, -197.8857],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0230, device='cuda:0', dtype=torch.float64)
tensor([-197.8510, -190.8798, -182.3895, -183.0851, -197.8568],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0291, device='cuda:0', dtype=torch.float64)
tensor([-197.7141, -190.7935, -182.2382, -182.8339, -197.7464],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0254, device='cuda:0', dtype=torch.float64)
tensor([-197.6436, -190.7252, -182.0774, -182.5822, -197.6814],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0273, device='cuda:0', dtype=torch.float64)
tensor([-197.6075, -190.6747, -181.8638, -182.2882, -197.6649],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0238, device='cuda:0', dtype=torch.float64)
tensor([-197.6466, -190.6922, -181.5649, -181.9805, -197.7351],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0211, device='cuda:0', dtype=torch.float64)
tensor([-197.6747, -190.7045, -181.2885, -181.6967, -197.7818],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0221, device='cuda:0', dtype=torch.float64)
tensor([-197.5708, -190.6693, -181.0725, -181.4307, -197.7259],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0213, device='cuda:0', dtype=torch.float64)
tensor([-197.4378, -190.6493, -180.8499, -181.1331, -197.6596],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0240, device='cuda:0', dtype=torch.float64)
tensor([-197.3420, -190.6444, -180.6837, -180.9071, -197.5939],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0237, device='cuda:0', dtype=torch.float64)
tensor([-197.2466, -190.6235, -180.4873, -180.6648, -197.5540],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0228, device='cuda:0', dtype=torch.float64)
tensor([-197.2766, -190.6329, -180.3244, -180.5150, -197.5906],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0229, device='cuda:0', dtype=torch.float64)
tensor([-197.3497, -190.6782, -180.1213, -180.3382, -197.6998],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0192, device='cuda:0', dtype=torch.float64)
tensor([-197.4625, -190.7325, -179.9074, -180.1764, -197.8457],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0197, device='cuda:0', dtype=torch.float64)
tensor([-197.5348, -190.7634, -179.7715, -180.0752, -197.9069],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0240, device='cuda:0', dtype=torch.float64)
tensor([-197.5884, -190.7789, -179.7109, -180.0589, -197.9240],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0248, device='cuda:0', dtype=torch.float64)
tensor([-197.7108, -190.8240, -179.6594, -180.1023, -197.9903],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0234, device='cuda:0', dtype=torch.float64)
tensor([-197.7998, -190.8683, -179.6794, -180.1821, -197.9934],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0262, device='cuda:0', dtype=torch.float64)
tensor([-197.9255, -190.9325, -179.6500, -180.2312, -198.0562],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0230, device='cuda:0', dtype=torch.float64)
tensor([-198.0310, -190.9948, -179.6657, -180.3084, -198.0955],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0261, device='cuda:0', dtype=torch.float64)
tensor([-198.1863, -191.0656, -179.6755, -180.3856, -198.1708],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0253, device='cuda:0', dtype=torch.float64)
tensor([-198.3583, -191.1621, -179.6641, -180.4645, -198.2610],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0261, device='cuda:0', dtype=torch.float64)
tensor([-198.5018, -191.2509, -179.6067, -180.4839, -198.3351],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0259, device='cuda:0', dtype=torch.float64)
tensor([-198.5686, -191.3073, -179.4787, -180.4064, -198.3982],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0245, device='cuda:0', dtype=torch.float64)
tensor([-198.6450, -191.3677, -179.3410, -180.2892, -198.4816],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0236, device='cuda:0', dtype=torch.float64)
tensor([-198.6405, -191.3842, -179.3054, -180.2404, -198.4948],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0252, device='cuda:0', dtype=torch.float64)
tensor([-198.6751, -191.4342, -179.2544, -180.1989, -198.5752],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0240, device='cuda:0', dtype=torch.float64)
tensor([-198.6580, -191.4121, -179.2504, -180.1532, -198.5872],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0245, device='cuda:0', dtype=torch.float64)
tensor([-198.7308, -191.4243, -179.1617, -180.0587, -198.6798],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0227, device='cuda:0', dtype=torch.float64)
tensor([-198.8057, -191.4183, -179.1001, -179.9859, -198.7205],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0248, device='cuda:0', dtype=torch.float64)
tensor([-198.7793, -191.3585, -179.0661, -179.8828, -198.6921],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0192, device='cuda:0', dtype=torch.float64)
tensor([-198.5485, -191.1884, -179.1387, -179.7699, -198.5016],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0238, device='cuda:0', dtype=torch.float64)
tensor([-198.2486, -190.9821, -179.2541, -179.6399, -198.2078],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0221, device='cuda:0', dtype=torch.float64)
tensor([-198.0650, -190.8581, -179.2543, -179.4716, -198.0207],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0260, device='cuda:0', dtype=torch.float64)
tensor([-197.8216, -190.6979, -179.3032, -179.3348, -197.8101],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0211, device='cuda:0', dtype=torch.float64)
tensor([-197.6360, -190.5816, -179.3414, -179.2195, -197.6252],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0232, device='cuda:0', dtype=torch.float64)
tensor([-197.4271, -190.4875, -179.3313, -179.0692, -197.4490],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0240, device='cuda:0', dtype=torch.float64)
tensor([-197.2606, -190.4108, -179.3281, -178.9600, -197.2901],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0255, device='cuda:0', dtype=torch.float64)
tensor([-197.2001, -190.3842, -179.2899, -178.9003, -197.1795],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0211, device='cuda:0', dtype=torch.float64)
tensor([-197.1131, -190.3261, -179.2987, -178.8800, -197.0365],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0287, device='cuda:0', dtype=torch.float64)
tensor([-197.0779, -190.2671, -179.3093, -178.8866, -196.9129],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0250, device='cuda:0', dtype=torch.float64)
tensor([-197.0830, -190.2160, -179.3943, -178.9790, -196.7983],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0237, device='cuda:0', dtype=torch.float64)
tensor([-197.0980, -190.2094, -179.3965, -179.0075, -196.7178],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0264, device='cuda:0', dtype=torch.float64)
tensor([-197.1344, -190.2431, -179.2908, -178.9599, -196.7228],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0235, device='cuda:0', dtype=torch.float64)
tensor([-197.1436, -190.2543, -179.1999, -178.8951, -196.7146],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0259, device='cuda:0', dtype=torch.float64)
tensor([-197.2357, -190.3019, -179.0903, -178.8747, -196.7787],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0262, device='cuda:0', dtype=torch.float64)
tensor([-197.3547, -190.3642, -178.9451, -178.8579, -196.8759],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0227, device='cuda:0', dtype=torch.float64)
tensor([-197.3925, -190.3720, -178.8585, -178.8458, -196.8743],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0267, device='cuda:0', dtype=torch.float64)
tensor([-197.4606, -190.3724, -178.7671, -178.8498, -196.9083],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0263, device='cuda:0', dtype=torch.float64)
tensor([-197.4433, -190.3421, -178.7252, -178.8765, -196.8424],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0224, device='cuda:0', dtype=torch.float64)
tensor([-197.4889, -190.3596, -178.7091, -178.9753, -196.7901],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0222, device='cuda:0', dtype=torch.float64)
tensor([-197.6339, -190.4246, -178.6751, -179.1075, -196.8164],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0259, device='cuda:0', dtype=torch.float64)
tensor([-197.7496, -190.4787, -178.6416, -179.2493, -196.8082],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0266, device='cuda:0', dtype=torch.float64)
tensor([-197.8164, -190.4887, -178.5833, -179.3289, -196.7490],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0259, device='cuda:0', dtype=torch.float64)
tensor([-197.7506, -190.4267, -178.5375, -179.3247, -196.5786],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0212, device='cuda:0', dtype=torch.float64)
tensor([-197.7045, -190.3836, -178.4373, -179.2793, -196.4621],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0202, device='cuda:0', dtype=torch.float64)
tensor([-197.5431, -190.2716, -178.3788, -179.1907, -196.2428],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0237, device='cuda:0', dtype=torch.float64)
tensor([-197.2491, -190.0966, -178.4195, -179.1303, -195.9330],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0241, device='cuda:0', dtype=torch.float64)
tensor([-196.8676, -189.8989, -178.4448, -179.0138, -195.5536],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0239, device='cuda:0', dtype=torch.float64)
tensor([-196.6160, -189.7657, -178.5466, -179.0497, -195.2405],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0275, device='cuda:0', dtype=torch.float64)
tensor([-196.4452, -189.6278, -178.5137, -178.9851, -195.0394],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0277, device='cuda:0', dtype=torch.float64)
tensor([-196.2275, -189.4359, -178.5061, -178.9162, -194.8384],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0224, device='cuda:0', dtype=torch.float64)
tensor([-196.0859, -189.2712, -178.4427, -178.8204, -194.7248],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0236, device='cuda:0', dtype=torch.float64)
tensor([-195.9957, -189.1237, -178.4313, -178.7946, -194.6364],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0209, device='cuda:0', dtype=torch.float64)
tensor([-196.0104, -189.0337, -178.4053, -178.7993, -194.6117],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0225, device='cuda:0', dtype=torch.float64)
tensor([-195.9536, -188.9228, -178.4069, -178.7898, -194.5344],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0248, device='cuda:0', dtype=torch.float64)
tensor([-196.0376, -188.9173, -178.3543, -178.7927, -194.5615],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0286, device='cuda:0', dtype=torch.float64)
tensor([-196.1042, -188.9004, -178.3075, -178.8101, -194.5677],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0249, device='cuda:0', dtype=torch.float64)
tensor([-196.1388, -188.8563, -178.1957, -178.7564, -194.5961],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0242, device='cuda:0', dtype=torch.float64)
tensor([-196.3442, -188.8750, -178.0471, -178.7424, -194.7591],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0260, device='cuda:0', dtype=torch.float64)
tensor([-196.5425, -188.8600, -177.8573, -178.6956, -194.9525],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0248, device='cuda:0', dtype=torch.float64)
tensor([-196.8137, -188.8761, -177.5919, -178.5975, -195.2442],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0243, device='cuda:0', dtype=torch.float64)
tensor([-196.9289, -188.8327, -177.3956, -178.4838, -195.3981],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0233, device='cuda:0', dtype=torch.float64)
tensor([-197.0203, -188.7505, -177.2199, -178.3544, -195.5311],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0248, device='cuda:0', dtype=torch.float64)
tensor([-197.1537, -188.6873, -177.0663, -178.2930, -195.6911],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0222, device='cuda:0', dtype=torch.float64)
tensor([-197.2995, -188.6528, -176.9577, -178.2863, -195.8415],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0255, device='cuda:0', dtype=torch.float64)
tensor([-197.2129, -188.5295, -176.9685, -178.2817, -195.8016],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0262, device='cuda:0', dtype=torch.float64)
tensor([-197.2554, -188.4129, -177.0436, -178.4039, -195.8076],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0265, device='cuda:0', dtype=torch.float64)
tensor([-197.2543, -188.3053, -176.9950, -178.3877, -195.8190],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0241, device='cuda:0', dtype=torch.float64)
tensor([-197.3217, -188.2511, -176.8480, -178.3209, -195.9032],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0269, device='cuda:0', dtype=torch.float64)
tensor([-197.4046, -188.2245, -176.6594, -178.2683, -196.0063],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0255, device='cuda:0', dtype=torch.float64)
tensor([-197.5663, -188.2552, -176.4524, -178.2396, -196.1516],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0256, device='cuda:0', dtype=torch.float64)
tensor([-197.5423, -188.2445, -176.3141, -178.1798, -196.1816],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0238, device='cuda:0', dtype=torch.float64)
tensor([-197.4312, -188.1879, -176.2320, -178.1258, -196.1349],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0238, device='cuda:0', dtype=torch.float64)
tensor([-197.4543, -188.2149, -176.0805, -178.0590, -196.2035],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0221, device='cuda:0', dtype=torch.float64)
tensor([-197.3942, -188.2046, -175.9494, -177.9537, -196.2475],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0245, device='cuda:0', dtype=torch.float64)
tensor([-197.3028, -188.1707, -175.7953, -177.8241, -196.2806],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0265, device='cuda:0', dtype=torch.float64)
tensor([-197.2106, -188.1514, -175.6770, -177.7490, -196.2857],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0283, device='cuda:0', dtype=torch.float64)
tensor([-197.1848, -188.1330, -175.6615, -177.8058, -196.3253],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0255, device='cuda:0', dtype=torch.float64)
tensor([-197.0955, -188.1212, -175.7051, -177.8633, -196.3045],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0263, device='cuda:0', dtype=torch.float64)
tensor([-196.9844, -188.0514, -175.7746, -177.9075, -196.2435],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0245, device='cuda:0', dtype=torch.float64)
tensor([-196.7114, -187.8928, -175.8894, -177.8915, -196.0338],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0258, device='cuda:0', dtype=torch.float64)
tensor([-196.4673, -187.7330, -176.0280, -177.9092, -195.8425],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0281, device='cuda:0', dtype=torch.float64)
tensor([-196.2200, -187.6063, -176.0877, -177.8810, -195.6404],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0277, device='cuda:0', dtype=torch.float64)
tensor([-195.9521, -187.4614, -176.1553, -177.8402, -195.4264],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0284, device='cuda:0', dtype=torch.float64)
tensor([-195.6244, -187.3126, -176.1868, -177.7336, -195.2118],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0277, device='cuda:0', dtype=torch.float64)
tensor([-195.3374, -187.1805, -176.2807, -177.6631, -194.9918],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0250, device='cuda:0', dtype=torch.float64)
tensor([-195.1155, -187.1099, -176.2797, -177.5636, -194.8463],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0250, device='cuda:0', dtype=torch.float64)
tensor([-195.0414, -187.0919, -176.2976, -177.5747, -194.8032],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0244, device='cuda:0', dtype=torch.float64)
tensor([-194.9221, -187.0623, -176.3615, -177.6142, -194.7127],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0269, device='cuda:0', dtype=torch.float64)
tensor([-194.9421, -187.0860, -176.3157, -177.6251, -194.7494],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0259, device='cuda:0', dtype=torch.float64)
tensor([-194.9472, -187.0831, -176.2395, -177.5915, -194.7805],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0267, device='cuda:0', dtype=torch.float64)
tensor([-195.1150, -187.1630, -176.1999, -177.6664, -194.8817],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0231, device='cuda:0', dtype=torch.float64)
tensor([-195.2084, -187.1928, -176.2402, -177.7665, -194.9038],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0235, device='cuda:0', dtype=torch.float64)
tensor([-195.2908, -187.2140, -176.3054, -177.8721, -194.9287],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0264, device='cuda:0', dtype=torch.float64)
tensor([-195.4495, -187.2696, -176.3597, -178.0021, -194.9911],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0233, device='cuda:0', dtype=torch.float64)
tensor([-195.6483, -187.3921, -176.3555, -178.1244, -195.1070],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0274, device='cuda:0', dtype=torch.float64)
tensor([-195.8986, -187.5463, -176.4028, -178.3210, -195.2250],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0254, device='cuda:0', dtype=torch.float64)
tensor([-196.0783, -187.6746, -176.3557, -178.4220, -195.3435],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0249, device='cuda:0', dtype=torch.float64)
tensor([-196.0334, -187.6970, -176.3251, -178.4199, -195.3135],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0240, device='cuda:0', dtype=torch.float64)
tensor([-196.0275, -187.7313, -176.3137, -178.4630, -195.3086],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0237, device='cuda:0', dtype=torch.float64)
tensor([-195.9905, -187.7417, -176.3293, -178.4802, -195.2854],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0220, device='cuda:0', dtype=torch.float64)
tensor([-195.9115, -187.7151, -176.3354, -178.4716, -195.2017],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0226, device='cuda:0', dtype=torch.float64)
tensor([-195.6614, -187.5835, -176.3671, -178.3798, -194.9693],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0271, device='cuda:0', dtype=torch.float64)
tensor([-195.3333, -187.4326, -176.3463, -178.1926, -194.7069],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0265, device='cuda:0', dtype=torch.float64)
tensor([-194.9600, -187.2509, -176.2440, -177.8960, -194.4232],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0230, device='cuda:0', dtype=torch.float64)
tensor([-194.6602, -187.1175, -176.0767, -177.5858, -194.2151],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0284, device='cuda:0', dtype=torch.float64)
tensor([-194.4940, -187.0552, -175.8303, -177.2696, -194.1406],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0266, device='cuda:0', dtype=torch.float64)
tensor([-194.1637, -186.8998, -175.6605, -176.9472, -193.9536],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0279, device='cuda:0', dtype=torch.float64)
tensor([-193.7599, -186.7288, -175.5285, -176.6357, -193.7199],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0256, device='cuda:0', dtype=torch.float64)
tensor([-193.3562, -186.5486, -175.4348, -176.3725, -193.4973],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0282, device='cuda:0', dtype=torch.float64)
tensor([-193.1154, -186.4333, -175.3378, -176.1838, -193.3868],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0257, device='cuda:0', dtype=torch.float64)
tensor([-193.0814, -186.3947, -175.1529, -176.0180, -193.4329],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0255, device='cuda:0', dtype=torch.float64)
tensor([-193.1285, -186.3678, -175.0299, -175.9383, -193.5226],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0251, device='cuda:0', dtype=torch.float64)
tensor([-193.1832, -186.3634, -174.9506, -175.9204, -193.6291],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0306, device='cuda:0', dtype=torch.float64)
tensor([-193.3720, -186.4186, -174.9149, -175.9815, -193.7752],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0271, device='cuda:0', dtype=torch.float64)
tensor([-193.4041, -186.4174, -174.9136, -175.9923, -193.7913],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0287, device='cuda:0', dtype=torch.float64)
tensor([-193.4980, -186.4288, -174.8787, -176.0248, -193.8272],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0233, device='cuda:0', dtype=torch.float64)
tensor([-193.5286, -186.4403, -174.8012, -176.0052, -193.8146],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0234, device='cuda:0', dtype=torch.float64)
tensor([-193.4477, -186.3775, -174.7652, -175.9591, -193.7140],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0263, device='cuda:0', dtype=torch.float64)
tensor([-193.3483, -186.3098, -174.8408, -176.0059, -193.5521],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0241, device='cuda:0', dtype=torch.float64)
tensor([-193.2878, -186.2845, -174.8475, -176.0328, -193.4747],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0233, device='cuda:0', dtype=torch.float64)
tensor([-193.2652, -186.2543, -174.8076, -176.0034, -193.4237],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0237, device='cuda:0', dtype=torch.float64)
tensor([-193.3334, -186.2885, -174.6701, -175.9325, -193.4962],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0302, device='cuda:0', dtype=torch.float64)
tensor([-193.4587, -186.3727, -174.3579, -175.7191, -193.6207],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0280, device='cuda:0', dtype=torch.float64)
tensor([-193.7308, -186.5149, -174.0220, -175.5583, -193.8639],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0239, device='cuda:0', dtype=torch.float64)
tensor([-194.0374, -186.6534, -173.7091, -175.4532, -194.1337],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0274, device='cuda:0', dtype=torch.float64)
tensor([-194.2706, -186.7578, -173.5293, -175.4539, -194.2853],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0272, device='cuda:0', dtype=torch.float64)
tensor([-194.5274, -186.8684, -173.3959, -175.5181, -194.4499],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0266, device='cuda:0', dtype=torch.float64)
tensor([-194.8129, -186.9885, -173.2679, -175.6060, -194.6434],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0284, device='cuda:0', dtype=torch.float64)
tensor([-195.2506, -187.1719, -173.0241, -175.6819, -194.9850],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0309, device='cuda:0', dtype=torch.float64)
tensor([-195.7202, -187.3682, -172.7308, -175.7418, -195.3929],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0284, device='cuda:0', dtype=torch.float64)
tensor([-196.1135, -187.5345, -172.4443, -175.7728, -195.7586],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0253, device='cuda:0', dtype=torch.float64)
tensor([-196.4997, -187.7053, -172.1515, -175.8007, -196.1266],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0317, device='cuda:0', dtype=torch.float64)
tensor([-197.0075, -187.9582, -171.7806, -175.7879, -196.6154],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0288, device='cuda:0', dtype=torch.float64)
tensor([-197.4536, -188.1561, -171.5243, -175.7997, -197.0146],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0217, device='cuda:0', dtype=torch.float64)
tensor([-197.7141, -188.2551, -171.3716, -175.8090, -197.2327],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0276, device='cuda:0', dtype=torch.float64)
tensor([-197.8179, -188.2283, -171.3104, -175.7768, -197.3122],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0255, device='cuda:0', dtype=torch.float64)
tensor([-197.9783, -188.2488, -171.1494, -175.7067, -197.4549],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0315, device='cuda:0', dtype=torch.float64)
tensor([-197.8817, -188.1867, -171.0184, -175.5510, -197.4362],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0276, device='cuda:0', dtype=torch.float64)
tensor([-197.5151, -188.0037, -170.9843, -175.3401, -197.2034],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0282, device='cuda:0', dtype=torch.float64)
tensor([-197.0806, -187.7957, -171.0000, -175.1135, -196.8524],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0298, device='cuda:0', dtype=torch.float64)
tensor([-196.5357, -187.5367, -171.0516, -174.8610, -196.4549],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0240, device='cuda:0', dtype=torch.float64)
tensor([-196.1121, -187.3462, -171.0838, -174.6750, -196.1513],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0286, device='cuda:0', dtype=torch.float64)
tensor([-195.7670, -187.1811, -171.1787, -174.6089, -195.8868],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0288, device='cuda:0', dtype=torch.float64)
tensor([-195.3840, -187.0466, -171.2555, -174.5167, -195.6003],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0310, device='cuda:0', dtype=torch.float64)
tensor([-195.1435, -186.9525, -171.3841, -174.5165, -195.4090],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0280, device='cuda:0', dtype=torch.float64)
tensor([-194.9365, -186.8667, -171.5069, -174.5518, -195.2009],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0298, device='cuda:0', dtype=torch.float64)
tensor([-194.7660, -186.7676, -171.6141, -174.5868, -194.9750],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0265, device='cuda:0', dtype=torch.float64)
tensor([-194.5926, -186.5962, -171.8117, -174.6704, -194.6980],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0277, device='cuda:0', dtype=torch.float64)
tensor([-194.3154, -186.3659, -172.0912, -174.8091, -194.3398],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0269, device='cuda:0', dtype=torch.float64)
tensor([-193.9914, -186.0981, -172.3835, -174.9424, -193.9263],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0265, device='cuda:0', dtype=torch.float64)
tensor([-193.7788, -185.8880, -172.6053, -175.0515, -193.6033],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0287, device='cuda:0', dtype=torch.float64)
tensor([-193.6232, -185.6949, -172.7912, -175.1694, -193.3148],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0213, device='cuda:0', dtype=torch.float64)
tensor([-193.3816, -185.4556, -172.9749, -175.2382, -192.9639],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0263, device='cuda:0', dtype=torch.float64)
tensor([-193.0046, -185.1552, -173.0846, -175.1898, -192.5661],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0282, device='cuda:0', dtype=torch.float64)
tensor([-192.6302, -184.8585, -173.1487, -175.1108, -192.2071],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0271, device='cuda:0', dtype=torch.float64)
tensor([-192.3141, -184.6035, -173.1062, -174.9898, -191.9541],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0284, device='cuda:0', dtype=torch.float64)
tensor([-192.0660, -184.3977, -173.0464, -174.8530, -191.7204],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0246, device='cuda:0', dtype=torch.float64)
tensor([-191.8891, -184.2573, -172.8497, -174.6368, -191.5600],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0266, device='cuda:0', dtype=torch.float64)
tensor([-191.7699, -184.1511, -172.5781, -174.3787, -191.4599],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0306, device='cuda:0', dtype=torch.float64)
tensor([-191.6902, -184.0977, -172.3417, -174.1937, -191.3646],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0264, device='cuda:0', dtype=torch.float64)
tensor([-191.4342, -183.9622, -172.1118, -173.9414, -191.1649],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0292, device='cuda:0', dtype=torch.float64)
tensor([-191.1940, -183.8433, -171.8017, -173.6397, -191.0269],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0259, device='cuda:0', dtype=torch.float64)
tensor([-190.9870, -183.7365, -171.5117, -173.3544, -190.9020],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0292, device='cuda:0', dtype=torch.float64)
tensor([-190.6292, -183.5734, -171.2611, -173.0424, -190.6882],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0272, device='cuda:0', dtype=torch.float64)
tensor([-190.2671, -183.3854, -171.0943, -172.7365, -190.4353],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0277, device='cuda:0', dtype=torch.float64)
tensor([-190.0841, -183.2990, -170.8272, -172.4643, -190.3111],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0251, device='cuda:0', dtype=torch.float64)
tensor([-190.0611, -183.3278, -170.4844, -172.2097, -190.3353],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0279, device='cuda:0', dtype=torch.float64)
tensor([-190.1873, -183.4152, -170.1518, -172.0397, -190.4200],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0238, device='cuda:0', dtype=torch.float64)
tensor([-190.2854, -183.4988, -169.8553, -171.8708, -190.5101],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0295, device='cuda:0', dtype=torch.float64)
tensor([-190.2191, -183.4941, -169.6325, -171.7073, -190.4458],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0339, device='cuda:0', dtype=torch.float64)
tensor([-190.3685, -183.5934, -169.3920, -171.6586, -190.5961],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0282, device='cuda:0', dtype=torch.float64)
tensor([-190.4550, -183.6564, -169.1888, -171.5991, -190.7164],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0307, device='cuda:0', dtype=torch.float64)
tensor([-190.3737, -183.6182, -169.1930, -171.6100, -190.6368],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0307, device='cuda:0', dtype=torch.float64)
tensor([-190.3314, -183.6101, -169.2243, -171.6525, -190.5928],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0259, device='cuda:0', dtype=torch.float64)
tensor([-190.2477, -183.5527, -169.2963, -171.6900, -190.5016],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0305, device='cuda:0', dtype=torch.float64)
tensor([-190.0715, -183.4256, -169.4798, -171.7618, -190.2760],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0277, device='cuda:0', dtype=torch.float64)
tensor([-189.8037, -183.2647, -169.6626, -171.8185, -190.0026],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0290, device='cuda:0', dtype=torch.float64)
tensor([-189.6274, -183.1901, -169.8215, -171.9132, -189.8198],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0300, device='cuda:0', dtype=torch.float64)
tensor([-189.4408, -183.1470, -169.9548, -172.0037, -189.6553],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0260, device='cuda:0', dtype=torch.float64)
tensor([-189.3292, -183.1272, -170.0803, -172.1167, -189.5310],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0287, device='cuda:0', dtype=torch.float64)
tensor([-189.1977, -183.0937, -170.1924, -172.1623, -189.3722],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0256, device='cuda:0', dtype=torch.float64)
tensor([-189.1006, -183.0571, -170.2726, -172.1872, -189.2405],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0308, device='cuda:0', dtype=torch.float64)
tensor([-188.9236, -182.9704, -170.4051, -172.2329, -189.0337],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0267, device='cuda:0', dtype=torch.float64)
tensor([-188.7091, -182.8639, -170.4577, -172.2065, -188.8502],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0308, device='cuda:0', dtype=torch.float64)
tensor([-188.5149, -182.8039, -170.4942, -172.1842, -188.6686],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0274, device='cuda:0', dtype=torch.float64)
tensor([-188.2782, -182.6953, -170.5054, -172.1312, -188.4578],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0239, device='cuda:0', dtype=torch.float64)
tensor([-188.0927, -182.6199, -170.5041, -172.0949, -188.3253],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0318, device='cuda:0', dtype=torch.float64)
tensor([-187.8089, -182.4949, -170.5438, -172.0703, -188.0660],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0274, device='cuda:0', dtype=torch.float64)
tensor([-187.4906, -182.3296, -170.6304, -172.0836, -187.7813],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0265, device='cuda:0', dtype=torch.float64)
tensor([-187.3333, -182.2442, -170.6535, -172.1007, -187.6329],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0263, device='cuda:0', dtype=torch.float64)
tensor([-187.2989, -182.2376, -170.6914, -172.1921, -187.5518],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0299, device='cuda:0', dtype=torch.float64)
tensor([-187.2590, -182.2188, -170.6395, -172.2165, -187.5300],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0288, device='cuda:0', dtype=torch.float64)
tensor([-187.2796, -182.2131, -170.4712, -172.1600, -187.5957],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0248, device='cuda:0', dtype=torch.float64)
tensor([-187.5453, -182.3488, -170.2081, -172.1498, -187.8773],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0267, device='cuda:0', dtype=torch.float64)
tensor([-187.7704, -182.4491, -169.8885, -172.0901, -188.1555],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0319, device='cuda:0', dtype=torch.float64)
tensor([-188.0769, -182.5761, -169.5573, -172.0480, -188.5397],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0267, device='cuda:0', dtype=torch.float64)
tensor([-188.4060, -182.7132, -169.2051, -172.0115, -188.9126],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0288, device='cuda:0', dtype=torch.float64)
tensor([-188.7172, -182.7997, -168.9681, -172.0824, -189.1907],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0312, device='cuda:0', dtype=torch.float64)
tensor([-188.9008, -182.8666, -168.7077, -172.0739, -189.3956],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0281, device='cuda:0', dtype=torch.float64)
tensor([-188.9462, -182.8282, -168.5131, -171.9976, -189.4475],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0300, device='cuda:0', dtype=torch.float64)
tensor([-188.8476, -182.7130, -168.4014, -171.9060, -189.3543],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0243, device='cuda:0', dtype=torch.float64)
tensor([-188.8770, -182.6498, -168.2795, -171.8722, -189.3248],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0287, device='cuda:0', dtype=torch.float64)
tensor([-189.0220, -182.6544, -168.0913, -171.8418, -189.3747],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0296, device='cuda:0', dtype=torch.float64)
tensor([-189.1635, -182.6683, -167.8885, -171.8082, -189.4527],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0268, device='cuda:0', dtype=torch.float64)
tensor([-189.2240, -182.6558, -167.7023, -171.7257, -189.4800],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0278, device='cuda:0', dtype=torch.float64)
tensor([-189.2424, -182.6106, -167.6242, -171.7103, -189.4615],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0292, device='cuda:0', dtype=torch.float64)
tensor([-189.2621, -182.5991, -167.4815, -171.6314, -189.4933],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0322, device='cuda:0', dtype=torch.float64)
tensor([-189.2388, -182.5392, -167.3936, -171.5692, -189.4618],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0276, device='cuda:0', dtype=torch.float64)
tensor([-189.3336, -182.5544, -167.2889, -171.5632, -189.5513],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0291, device='cuda:0', dtype=torch.float64)
tensor([-189.3372, -182.5316, -167.2325, -171.5773, -189.5639],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0261, device='cuda:0', dtype=torch.float64)
tensor([-189.3903, -182.5362, -167.1213, -171.5830, -189.6176],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0303, device='cuda:0', dtype=torch.float64)
tensor([-189.2600, -182.4342, -167.0670, -171.5341, -189.5003],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0275, device='cuda:0', dtype=torch.float64)
tensor([-188.9424, -182.2569, -167.0871, -171.4552, -189.2447],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0304, device='cuda:0', dtype=torch.float64)
tensor([-188.6503, -182.0858, -167.1710, -171.4734, -188.9320],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0326, device='cuda:0', dtype=torch.float64)
tensor([-188.2785, -181.8619, -167.2532, -171.4371, -188.5629],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0288, device='cuda:0', dtype=torch.float64)
tensor([-187.8683, -181.6260, -167.3765, -171.4050, -188.1208],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0305, device='cuda:0', dtype=torch.float64)
tensor([-187.4981, -181.4290, -167.4434, -171.3458, -187.6888],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0278, device='cuda:0', dtype=torch.float64)
tensor([-187.3011, -181.3185, -167.4252, -171.2804, -187.4476],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0271, device='cuda:0', dtype=torch.float64)
tensor([-186.9252, -181.1064, -167.4762, -171.1838, -187.1080],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0257, device='cuda:0', dtype=torch.float64)
tensor([-186.5694, -180.9090, -167.4848, -171.0549, -186.8403],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0312, device='cuda:0', dtype=torch.float64)
tensor([-186.4231, -180.7809, -167.5405, -171.0439, -186.6780],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0302, device='cuda:0', dtype=torch.float64)
tensor([-186.4253, -180.7312, -167.4869, -171.0393, -186.6917],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0290, device='cuda:0', dtype=torch.float64)
tensor([-186.4108, -180.6739, -167.4487, -171.0327, -186.6765],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0293, device='cuda:0', dtype=torch.float64)
tensor([-186.5567, -180.7025, -167.4119, -171.1073, -186.7131],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0278, device='cuda:0', dtype=torch.float64)
tensor([-186.6322, -180.7323, -167.3996, -171.1812, -186.6918],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0302, device='cuda:0', dtype=torch.float64)
tensor([-186.8479, -180.8322, -167.2732, -171.2321, -186.7870],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0279, device='cuda:0', dtype=torch.float64)
tensor([-186.9520, -180.8576, -167.1966, -171.2642, -186.8157],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0287, device='cuda:0', dtype=torch.float64)
tensor([-187.0421, -180.9010, -167.1008, -171.2619, -186.8596],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0337, device='cuda:0', dtype=torch.float64)
tensor([-186.9330, -180.8543, -167.0627, -171.1796, -186.7200],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0313, device='cuda:0', dtype=torch.float64)
tensor([-186.8952, -180.8426, -166.9884, -171.0928, -186.6574],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0291, device='cuda:0', dtype=torch.float64)
tensor([-187.0335, -180.9078, -166.8447, -171.0300, -186.7070],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0266, device='cuda:0', dtype=torch.float64)
tensor([-187.2658, -181.0261, -166.7022, -171.0269, -186.8396],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0256, device='cuda:0', dtype=torch.float64)
tensor([-187.3550, -181.0943, -166.5732, -170.9896, -186.8921],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0272, device='cuda:0', dtype=torch.float64)
tensor([-187.2087, -181.0333, -166.4709, -170.8634, -186.7722],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0288, device='cuda:0', dtype=torch.float64)
tensor([-187.1174, -181.0122, -166.3021, -170.7222, -186.7329],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0288, device='cuda:0', dtype=torch.float64)
tensor([-187.1015, -181.0314, -166.0850, -170.5580, -186.7314],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0302, device='cuda:0', dtype=torch.float64)
tensor([-187.1333, -181.0725, -165.7791, -170.3162, -186.7771],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0252, device='cuda:0', dtype=torch.float64)
tensor([-187.1232, -181.0799, -165.5269, -170.1064, -186.8066],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0305, device='cuda:0', dtype=torch.float64)
tensor([-187.2138, -181.1228, -165.2432, -169.9008, -186.9169],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0295, device='cuda:0', dtype=torch.float64)
tensor([-187.3829, -181.1966, -164.9081, -169.6936, -187.1515],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0315, device='cuda:0', dtype=torch.float64)
tensor([-187.6497, -181.3424, -164.5380, -169.5051, -187.4647],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0330, device='cuda:0', dtype=torch.float64)
tensor([-188.0081, -181.5362, -164.2121, -169.4002, -187.8312],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0304, device='cuda:0', dtype=torch.float64)
tensor([-188.1700, -181.6176, -163.9880, -169.2734, -188.0030],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0321, device='cuda:0', dtype=torch.float64)
tensor([-188.5032, -181.8113, -163.6927, -169.2082, -188.3215],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0315, device='cuda:0', dtype=torch.float64)
tensor([-188.7367, -181.9360, -163.4704, -169.1610, -188.5311],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0265, device='cuda:0', dtype=torch.float64)
tensor([-188.9867, -182.1010, -163.2179, -169.1153, -188.7734],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0281, device='cuda:0', dtype=torch.float64)
tensor([-189.1510, -182.2284, -162.9971, -169.0630, -188.9046],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0329, device='cuda:0', dtype=torch.float64)
tensor([-189.4209, -182.3838, -162.7349, -169.0334, -189.1276],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0294, device='cuda:0', dtype=torch.float64)
tensor([-189.6247, -182.4586, -162.5273, -168.9990, -189.2388],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0299, device='cuda:0', dtype=torch.float64)
tensor([-189.8032, -182.5316, -162.3865, -169.0198, -189.3235],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0306, device='cuda:0', dtype=torch.float64)
tensor([-190.1569, -182.6827, -162.2087, -169.1172, -189.5602],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0328, device='cuda:0', dtype=torch.float64)
tensor([-190.2664, -182.5987, -162.2143, -169.1970, -189.5204],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0289, device='cuda:0', dtype=torch.float64)
tensor([-190.3973, -182.5255, -162.2362, -169.2634, -189.5018],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0378, device='cuda:0', dtype=torch.float64)
tensor([-190.6555, -182.5735, -162.1689, -169.3842, -189.5347],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0271, device='cuda:0', dtype=torch.float64)
tensor([-190.6976, -182.5252, -162.1378, -169.4010, -189.4150],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0269, device='cuda:0', dtype=torch.float64)
tensor([-190.5118, -182.3898, -162.1140, -169.3124, -189.1591],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0280, device='cuda:0', dtype=torch.float64)
tensor([-190.2429, -182.1755, -162.1480, -169.1946, -188.8043],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0318, device='cuda:0', dtype=torch.float64)
tensor([-189.7228, -181.8202, -162.3155, -169.0513, -188.2187],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0332, device='cuda:0', dtype=torch.float64)
tensor([-189.0662, -181.3813, -162.5549, -168.8927, -187.4998],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0317, device='cuda:0', dtype=torch.float64)
tensor([-188.4898, -181.0183, -162.7620, -168.7463, -186.8863],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0333, device='cuda:0', dtype=torch.float64)
tensor([-187.8058, -180.6272, -162.9063, -168.5237, -186.2357],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0293, device='cuda:0', dtype=torch.float64)
tensor([-187.2433, -180.2979, -163.0027, -168.3199, -185.7240],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0302, device='cuda:0', dtype=torch.float64)
tensor([-186.7449, -180.0111, -163.0548, -168.0971, -185.2655],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0289, device='cuda:0', dtype=torch.float64)
tensor([-186.2600, -179.6989, -163.1219, -167.8898, -184.8398],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0259, device='cuda:0', dtype=torch.float64)
tensor([-185.6684, -179.3365, -163.1591, -167.5922, -184.3500],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0303, device='cuda:0', dtype=torch.float64)
tensor([-185.1249, -178.9901, -163.1523, -167.2985, -183.8849],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0290, device='cuda:0', dtype=torch.float64)
tensor([-184.5620, -178.6578, -163.0986, -166.9754, -183.4712],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0311, device='cuda:0', dtype=torch.float64)
tensor([-184.0947, -178.3429, -163.0520, -166.7161, -183.1086],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0289, device='cuda:0', dtype=torch.float64)
tensor([-183.9452, -178.2053, -162.8398, -166.5026, -182.9755],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0299, device='cuda:0', dtype=torch.float64)
tensor([-183.9274, -178.1658, -162.5928, -166.3850, -182.9723],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0323, device='cuda:0', dtype=torch.float64)
tensor([-183.9545, -178.1394, -162.3489, -166.2502, -182.9908],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0256, device='cuda:0', dtype=torch.float64)
tensor([-184.0735, -178.1866, -162.0709, -166.1435, -183.1640],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0299, device='cuda:0', dtype=torch.float64)
tensor([-184.2030, -178.2364, -161.8449, -166.0818, -183.3345],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0313, device='cuda:0', dtype=torch.float64)
tensor([-184.4318, -178.3776, -161.5480, -166.0271, -183.5957],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0272, device='cuda:0', dtype=torch.float64)
tensor([-184.6028, -178.4905, -161.3021, -165.9718, -183.7865],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0349, device='cuda:0', dtype=torch.float64)
tensor([-184.8488, -178.6670, -161.0579, -165.9675, -184.1005],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0306, device='cuda:0', dtype=torch.float64)
tensor([-185.1102, -178.7801, -160.9042, -166.0221, -184.3544],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0308, device='cuda:0', dtype=torch.float64)
tensor([-185.4419, -178.9489, -160.7247, -166.1230, -184.6711],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0287, device='cuda:0', dtype=torch.float64)
tensor([-185.8224, -179.1343, -160.5443, -166.2492, -185.0395],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0287, device='cuda:0', dtype=torch.float64)
tensor([-186.0725, -179.2542, -160.3913, -166.3321, -185.2867],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0275, device='cuda:0', dtype=torch.float64)
tensor([-186.2737, -179.3556, -160.2357, -166.3902, -185.5140],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0285, device='cuda:0', dtype=torch.float64)
tensor([-186.4323, -179.4243, -160.0987, -166.4284, -185.6809],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0324, device='cuda:0', dtype=torch.float64)
tensor([-186.6537, -179.5458, -159.9783, -166.5399, -185.8835],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0284, device='cuda:0', dtype=torch.float64)
tensor([-186.8408, -179.6496, -159.8681, -166.6430, -186.0686],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0319, device='cuda:0', dtype=torch.float64)
tensor([-187.0550, -179.7454, -159.8212, -166.7888, -186.2011],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0289, device='cuda:0', dtype=torch.float64)
tensor([-187.3600, -179.8819, -159.6955, -166.9079, -186.4365],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0282, device='cuda:0', dtype=torch.float64)
tensor([-187.7845, -180.0777, -159.5514, -167.0813, -186.7801],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0289, device='cuda:0', dtype=torch.float64)
tensor([-188.0660, -180.1742, -159.4420, -167.2113, -187.0198],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0311, device='cuda:0', dtype=torch.float64)
tensor([-188.2333, -180.2051, -159.3895, -167.3312, -187.1873],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0316, device='cuda:0', dtype=torch.float64)
tensor([-188.3103, -180.1737, -159.3317, -167.3830, -187.3301],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0300, device='cuda:0', dtype=torch.float64)
tensor([-188.4345, -180.1554, -159.2556, -167.4506, -187.4571],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0302, device='cuda:0', dtype=torch.float64)
tensor([-188.6368, -180.2007, -159.1368, -167.5337, -187.7000],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0310, device='cuda:0', dtype=torch.float64)
tensor([-188.6249, -180.1302, -159.0810, -167.5488, -187.7698],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0261, device='cuda:0', dtype=torch.float64)
tensor([-188.6756, -180.1202, -158.9581, -167.5480, -187.9216],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0316, device='cuda:0', dtype=torch.float64)
tensor([-188.5708, -179.9771, -158.8880, -167.5383, -187.9192],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0360, device='cuda:0', dtype=torch.float64)
tensor([-188.3300, -179.7584, -158.8573, -167.4560, -187.7617],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0337, device='cuda:0', dtype=torch.float64)
tensor([-188.1608, -179.5496, -158.8054, -167.3866, -187.6554],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0274, device='cuda:0', dtype=torch.float64)
tensor([-188.0220, -179.3878, -158.7639, -167.3225, -187.6064],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0303, device='cuda:0', dtype=torch.float64)
tensor([-187.8022, -179.1399, -158.8040, -167.2779, -187.4668],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0308, device='cuda:0', dtype=torch.float64)
tensor([-187.6164, -178.9449, -158.7846, -167.2132, -187.3172],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0292, device='cuda:0', dtype=torch.float64)
tensor([-187.2644, -178.6400, -158.8404, -167.0945, -187.0039],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0287, device='cuda:0', dtype=torch.float64)
tensor([-186.9382, -178.3714, -158.9470, -167.0092, -186.6771],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0303, device='cuda:0', dtype=torch.float64)
tensor([-186.4843, -178.0508, -159.0574, -166.8759, -186.2242],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0304, device='cuda:0', dtype=torch.float64)
tensor([-186.2016, -177.8408, -159.0989, -166.7681, -185.9488],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0361, device='cuda:0', dtype=torch.float64)
tensor([-186.1074, -177.7573, -158.9947, -166.6739, -185.8872],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0330, device='cuda:0', dtype=torch.float64)
tensor([-185.9731, -177.6787, -158.8645, -166.5482, -185.8415],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0315, device='cuda:0', dtype=torch.float64)
tensor([-185.8458, -177.5791, -158.7884, -166.4611, -185.7397],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0312, device='cuda:0', dtype=torch.float64)
tensor([-185.7572, -177.5062, -158.6968, -166.3734, -185.6816],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0326, device='cuda:0', dtype=torch.float64)
tensor([-185.9624, -177.5921, -158.4883, -166.3666, -185.8616],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0342, device='cuda:0', dtype=torch.float64)
tensor([-186.0950, -177.6550, -158.2745, -166.3291, -185.9452],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0280, device='cuda:0', dtype=torch.float64)
tensor([-186.3219, -177.7945, -158.0398, -166.3148, -186.1215],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0334, device='cuda:0', dtype=torch.float64)
tensor([-186.4310, -177.8462, -157.9037, -166.3239, -186.1592],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0279, device='cuda:0', dtype=torch.float64)
tensor([-186.3486, -177.7663, -157.8641, -166.2866, -186.0067],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0281, device='cuda:0', dtype=torch.float64)
tensor([-186.2776, -177.7386, -157.7784, -166.2274, -185.8746],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0283, device='cuda:0', dtype=torch.float64)
tensor([-186.2275, -177.6931, -157.7266, -166.2019, -185.7397],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0282, device='cuda:0', dtype=torch.float64)
tensor([-186.0658, -177.5674, -157.6832, -166.1254, -185.5262],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0298, device='cuda:0', dtype=torch.float64)
tensor([-185.8338, -177.3747, -157.6669, -166.0410, -185.2782],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0302, device='cuda:0', dtype=torch.float64)
tensor([-185.6526, -177.2001, -157.6773, -165.9834, -185.0281],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0287, device='cuda:0', dtype=torch.float64)
tensor([-185.5278, -177.0576, -157.6680, -165.9334, -184.8347],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0333, device='cuda:0', dtype=torch.float64)
tensor([-185.6874, -177.1202, -157.5137, -165.9779, -184.9525],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0304, device='cuda:0', dtype=torch.float64)
tensor([-185.8653, -177.1915, -157.3314, -165.9928, -185.0689],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0323, device='cuda:0', dtype=torch.float64)
tensor([-186.0726, -177.2627, -157.1620, -166.0357, -185.1668],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0307, device='cuda:0', dtype=torch.float64)
tensor([-186.1239, -177.2410, -157.1043, -166.0689, -185.1265],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0275, device='cuda:0', dtype=torch.float64)
tensor([-186.1501, -177.2277, -157.0470, -166.0792, -185.0656],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0336, device='cuda:0', dtype=torch.float64)
tensor([-186.3665, -177.3058, -157.0169, -166.2468, -185.1377],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0319, device='cuda:0', dtype=torch.float64)
tensor([-186.5548, -177.3474, -157.0595, -166.4325, -185.1225],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0316, device='cuda:0', dtype=torch.float64)
tensor([-186.7272, -177.4157, -157.0717, -166.5948, -185.1393],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0291, device='cuda:0', dtype=torch.float64)
tensor([-186.8183, -177.4302, -157.0707, -166.6791, -185.0800],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0304, device='cuda:0', dtype=torch.float64)
tensor([-187.1260, -177.5562, -156.9971, -166.8139, -185.2187],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0320, device='cuda:0', dtype=torch.float64)
tensor([-187.4004, -177.6748, -156.9500, -166.9456, -185.3409],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0358, device='cuda:0', dtype=torch.float64)
tensor([-187.9148, -177.9664, -156.7818, -167.1245, -185.6846],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0343, device='cuda:0', dtype=torch.float64)
tensor([-188.5496, -178.3807, -156.4628, -167.2880, -186.1803],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0312, device='cuda:0', dtype=torch.float64)
tensor([-189.0496, -178.7284, -156.1417, -167.3842, -186.6137],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0298, device='cuda:0', dtype=torch.float64)
tensor([-189.1241, -178.7671, -155.9524, -167.3465, -186.6960],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0329, device='cuda:0', dtype=torch.float64)
tensor([-189.1873, -178.8046, -155.7670, -167.3253, -186.7252],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0317, device='cuda:0', dtype=torch.float64)
tensor([-189.0901, -178.7448, -155.6241, -167.2725, -186.6155],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0381, device='cuda:0', dtype=torch.float64)
tensor([-188.7884, -178.5267, -155.4913, -167.1331, -186.3928],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0327, device='cuda:0', dtype=torch.float64)
tensor([-188.6175, -178.3696, -155.3474, -167.0654, -186.2390],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0305, device='cuda:0', dtype=torch.float64)
tensor([-188.5657, -178.2823, -155.1655, -167.0091, -186.1527],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0338, device='cuda:0', dtype=torch.float64)
tensor([-188.3960, -178.0701, -154.9942, -166.8819, -185.9700],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0343, device='cuda:0', dtype=torch.float64)
tensor([-188.1960, -177.8365, -154.8285, -166.7479, -185.7780],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0335, device='cuda:0', dtype=torch.float64)
tensor([-187.9177, -177.5757, -154.6976, -166.5952, -185.5346],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0297, device='cuda:0', dtype=torch.float64)
tensor([-187.6027, -177.3154, -154.5316, -166.3878, -185.2881],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0294, device='cuda:0', dtype=torch.float64)
tensor([-187.1343, -176.9871, -154.3916, -166.1089, -184.9289],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0324, device='cuda:0', dtype=torch.float64)
tensor([-186.7466, -176.6964, -154.2598, -165.8821, -184.6791],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0313, device='cuda:0', dtype=torch.float64)
tensor([-186.4438, -176.4465, -154.0638, -165.6406, -184.5296],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0331, device='cuda:0', dtype=torch.float64)
tensor([-186.0179, -176.1043, -154.0058, -165.4192, -184.1883],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0312, device='cuda:0', dtype=torch.float64)
tensor([-185.2910, -175.6092, -154.0132, -165.0732, -183.6153],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0271, device='cuda:0', dtype=torch.float64)
tensor([-184.4489, -175.0283, -154.0705, -164.6919, -182.9637],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0322, device='cuda:0', dtype=torch.float64)
tensor([-183.8005, -174.5830, -154.1076, -164.4094, -182.5153],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0314, device='cuda:0', dtype=torch.float64)
tensor([-183.2774, -174.2158, -154.0868, -164.1446, -182.1630],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0369, device='cuda:0', dtype=torch.float64)
tensor([-182.7987, -173.8825, -154.0703, -163.9407, -181.8245],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0362, device='cuda:0', dtype=torch.float64)
tensor([-182.1995, -173.4815, -154.1558, -163.7060, -181.3516],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0302, device='cuda:0', dtype=torch.float64)
tensor([-181.5709, -173.0556, -154.2553, -163.4503, -180.8209],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0313, device='cuda:0', dtype=torch.float64)
tensor([-180.9024, -172.6167, -154.3825, -163.1888, -180.2638],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0338, device='cuda:0', dtype=torch.float64)
tensor([-180.2856, -172.2171, -154.4593, -162.9339, -179.7823],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0316, device='cuda:0', dtype=torch.float64)
tensor([-179.9183, -171.9561, -154.4583, -162.7478, -179.4980],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0293, device='cuda:0', dtype=torch.float64)
tensor([-179.7632, -171.8186, -154.3413, -162.5975, -179.4257],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0336, device='cuda:0', dtype=torch.float64)
tensor([-179.6201, -171.6663, -154.2864, -162.4639, -179.3146],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0303, device='cuda:0', dtype=torch.float64)
tensor([-179.5718, -171.5781, -154.1914, -162.3699, -179.2824],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0362, device='cuda:0', dtype=torch.float64)
tensor([-179.3159, -171.3687, -154.1945, -162.2322, -179.0350],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0344, device='cuda:0', dtype=torch.float64)
tensor([-178.9816, -171.1413, -154.1686, -162.0389, -178.7791],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0338, device='cuda:0', dtype=torch.float64)
tensor([-178.8911, -171.0488, -154.0998, -161.9585, -178.6831],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0336, device='cuda:0', dtype=torch.float64)
tensor([-178.6741, -170.9207, -154.0041, -161.8093, -178.5085],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0341, device='cuda:0', dtype=torch.float64)
tensor([-178.5480, -170.8501, -153.8562, -161.6426, -178.4028],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0361, device='cuda:0', dtype=torch.float64)
tensor([-178.7315, -170.9319, -153.5876, -161.5753, -178.5568],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0316, device='cuda:0', dtype=torch.float64)
tensor([-178.9486, -171.0203, -153.3337, -161.5366, -178.7598],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0369, device='cuda:0', dtype=torch.float64)
tensor([-179.1909, -171.1455, -153.0980, -161.5174, -178.9946],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0325, device='cuda:0', dtype=torch.float64)
tensor([-179.3186, -171.1976, -152.9375, -161.4836, -179.1046],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0267, device='cuda:0', dtype=torch.float64)
tensor([-179.5942, -171.3523, -152.7422, -161.5171, -179.3034],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0287, device='cuda:0', dtype=torch.float64)
tensor([-180.0056, -171.5645, -152.5199, -161.5922, -179.6012],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0320, device='cuda:0', dtype=torch.float64)
tensor([-180.1811, -171.6500, -152.4062, -161.6149, -179.7006],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0304, device='cuda:0', dtype=torch.float64)
tensor([-180.3279, -171.7089, -152.3272, -161.6404, -179.7579],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0294, device='cuda:0', dtype=torch.float64)
tensor([-180.6159, -171.8457, -152.2113, -161.7378, -179.9192],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0306, device='cuda:0', dtype=torch.float64)
tensor([-180.9599, -172.0314, -152.0875, -161.8563, -180.0895],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0331, device='cuda:0', dtype=torch.float64)
tensor([-181.2619, -172.1950, -151.9282, -161.9381, -180.2317],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0262, device='cuda:0', dtype=torch.float64)
tensor([-181.6236, -172.4056, -151.7631, -162.0681, -180.3904],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0342, device='cuda:0', dtype=torch.float64)
tensor([-181.6844, -172.4438, -151.7100, -162.0980, -180.3299],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0333, device='cuda:0', dtype=torch.float64)
tensor([-181.8593, -172.5253, -151.6361, -162.1789, -180.3565],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0330, device='cuda:0', dtype=torch.float64)
tensor([-182.1149, -172.6542, -151.5132, -162.2772, -180.4582],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0331, device='cuda:0', dtype=torch.float64)
tensor([-182.0401, -172.5532, -151.4310, -162.2207, -180.3062],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0328, device='cuda:0', dtype=torch.float64)
tensor([-182.0247, -172.4662, -151.3304, -162.1946, -180.2203],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0358, device='cuda:0', dtype=torch.float64)
tensor([-181.9129, -172.3022, -151.2448, -162.1172, -180.1025],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0323, device='cuda:0', dtype=torch.float64)
tensor([-181.5638, -171.9885, -151.2362, -161.9283, -179.7959],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0326, device='cuda:0', dtype=torch.float64)
tensor([-181.3310, -171.7488, -151.1820, -161.7557, -179.5814],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0395, device='cuda:0', dtype=torch.float64)
tensor([-181.2078, -171.5597, -151.1262, -161.6861, -179.4141],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0325, device='cuda:0', dtype=torch.float64)
tensor([-180.8816, -171.2498, -151.1581, -161.5393, -179.0272],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0338, device='cuda:0', dtype=torch.float64)
tensor([-180.7293, -171.0330, -151.1407, -161.4587, -178.8094],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0348, device='cuda:0', dtype=torch.float64)
tensor([-180.8187, -170.9493, -151.0408, -161.4786, -178.8087],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0355, device='cuda:0', dtype=torch.float64)
tensor([-181.0225, -170.9315, -150.9280, -161.5433, -178.9174],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0360, device='cuda:0', dtype=torch.float64)
tensor([-181.1417, -170.8746, -150.8830, -161.5865, -178.9501],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0312, device='cuda:0', dtype=torch.float64)
tensor([-181.3797, -170.9030, -150.8280, -161.6785, -179.0666],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0303, device='cuda:0', dtype=torch.float64)
tensor([-181.4726, -170.8505, -150.8014, -161.7047, -179.0949],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0281, device='cuda:0', dtype=torch.float64)
tensor([-181.5035, -170.8006, -150.7877, -161.7257, -179.0882],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0337, device='cuda:0', dtype=torch.float64)
tensor([-181.4628, -170.6515, -150.7987, -161.7065, -179.0374],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0322, device='cuda:0', dtype=torch.float64)
tensor([-181.6220, -170.6307, -150.7707, -161.7825, -179.1295],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0286, device='cuda:0', dtype=torch.float64)
tensor([-181.7165, -170.5814, -150.7064, -161.7924, -179.1517],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0342, device='cuda:0', dtype=torch.float64)
tensor([-181.9260, -170.5676, -150.6231, -161.8610, -179.2448],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0322, device='cuda:0', dtype=torch.float64)
tensor([-182.4480, -170.7384, -150.4085, -161.9992, -179.5939],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0381, device='cuda:0', dtype=torch.float64)
tensor([-182.8637, -170.8384, -150.2803, -162.1145, -179.8732],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0320, device='cuda:0', dtype=torch.float64)
tensor([-183.1610, -170.8816, -150.1923, -162.1825, -180.0527],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0314, device='cuda:0', dtype=torch.float64)
tensor([-183.6380, -171.0033, -150.0929, -162.3375, -180.3573],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0347, device='cuda:0', dtype=torch.float64)
tensor([-183.8413, -170.9997, -150.0265, -162.3696, -180.4711],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0332, device='cuda:0', dtype=torch.float64)
tensor([-184.1733, -171.1185, -149.8959, -162.4409, -180.6914],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0355, device='cuda:0', dtype=torch.float64)
tensor([-184.5717, -171.2795, -149.6595, -162.4924, -180.9735],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0319, device='cuda:0', dtype=torch.float64)
tensor([-185.3176, -171.6384, -149.3820, -162.6823, -181.4581],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0384, device='cuda:0', dtype=torch.float64)
tensor([-185.5406, -171.6580, -149.2079, -162.6983, -181.4925],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0330, device='cuda:0', dtype=torch.float64)
tensor([-185.7864, -171.7168, -149.0142, -162.7283, -181.5214],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0360, device='cuda:0', dtype=torch.float64)
tensor([-185.9236, -171.7155, -148.7865, -162.6933, -181.5243],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0295, device='cuda:0', dtype=torch.float64)
tensor([-185.9068, -171.6383, -148.5756, -162.6061, -181.4238],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0309, device='cuda:0', dtype=torch.float64)
tensor([-185.5669, -171.4017, -148.4166, -162.3937, -181.0849],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0330, device='cuda:0', dtype=torch.float64)
tensor([-185.2341, -171.1408, -148.2824, -162.1713, -180.8037],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0393, device='cuda:0', dtype=torch.float64)
tensor([-184.9868, -170.9291, -148.1393, -161.9871, -180.5476],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0348, device='cuda:0', dtype=torch.float64)
tensor([-184.9504, -170.8252, -147.9944, -161.8946, -180.4087],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0351, device='cuda:0', dtype=torch.float64)
tensor([-185.0684, -170.7874, -147.8377, -161.8692, -180.3559],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0315, device='cuda:0', dtype=torch.float64)
tensor([-185.0645, -170.7146, -147.6744, -161.8110, -180.2118],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0353, device='cuda:0', dtype=torch.float64)
tensor([-184.8044, -170.4963, -147.5494, -161.6617, -179.8495],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0425, device='cuda:0', dtype=torch.float64)
tensor([-184.7020, -170.3597, -147.3653, -161.5518, -179.6239],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0315, device='cuda:0', dtype=torch.float64)
tensor([-184.4459, -170.1406, -147.1673, -161.3380, -179.2713],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0351, device='cuda:0', dtype=torch.float64)
tensor([-184.2462, -169.9538, -146.9732, -161.1527, -178.9403],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0329, device='cuda:0', dtype=torch.float64)
tensor([-183.8957, -169.6690, -146.7915, -160.8985, -178.4847],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0333, device='cuda:0', dtype=torch.float64)
tensor([-183.4895, -169.3609, -146.6307, -160.6294, -178.0204],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0354, device='cuda:0', dtype=torch.float64)
tensor([-183.4465, -169.2730, -146.4208, -160.5014, -177.8351],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0415, device='cuda:0', dtype=torch.float64)
tensor([-183.6947, -169.3462, -146.1439, -160.4742, -177.8473],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0333, device='cuda:0', dtype=torch.float64)
tensor([-183.7926, -169.3750, -145.8936, -160.3978, -177.7773],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0328, device='cuda:0', dtype=torch.float64)
tensor([-183.9097, -169.4013, -145.6530, -160.3276, -177.7306],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0348, device='cuda:0', dtype=torch.float64)
tensor([-183.7954, -169.2663, -145.4524, -160.1526, -177.4628],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0327, device='cuda:0', dtype=torch.float64)
tensor([-183.6449, -169.1530, -145.2785, -159.9930, -177.1993],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0327, device='cuda:0', dtype=torch.float64)
tensor([-183.6273, -169.0913, -145.0909, -159.9063, -177.0040],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0328, device='cuda:0', dtype=torch.float64)
tensor([-183.4235, -168.9066, -144.9383, -159.7510, -176.6896],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0344, device='cuda:0', dtype=torch.float64)
tensor([-183.0582, -168.6564, -144.8449, -159.5291, -176.2582],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0355, device='cuda:0', dtype=torch.float64)
tensor([-182.6941, -168.3709, -144.7315, -159.2961, -175.8368],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0336, device='cuda:0', dtype=torch.float64)
tensor([-182.4897, -168.2042, -144.5917, -159.1450, -175.5470],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0361, device='cuda:0', dtype=torch.float64)
tensor([-182.1850, -167.9988, -144.5036, -158.9644, -175.2066],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0316, device='cuda:0', dtype=torch.float64)
tensor([-182.0454, -167.8815, -144.3942, -158.8351, -174.9856],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0342, device='cuda:0', dtype=torch.float64)
tensor([-181.7164, -167.6900, -144.3690, -158.6795, -174.6135],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0307, device='cuda:0', dtype=torch.float64)
tensor([-181.3569, -167.4875, -144.3656, -158.5154, -174.2074],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0338, device='cuda:0', dtype=torch.float64)
tensor([-181.0747, -167.3339, -144.3884, -158.4297, -173.8728],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0321, device='cuda:0', dtype=torch.float64)
tensor([-180.4536, -166.9665, -144.4993, -158.1982, -173.2464],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0335, device='cuda:0', dtype=torch.float64)
tensor([-180.2508, -166.8518, -144.5215, -158.1436, -172.9631],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0344, device='cuda:0', dtype=torch.float64)
tensor([-180.1017, -166.7561, -144.5645, -158.1224, -172.7258],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0325, device='cuda:0', dtype=torch.float64)
tensor([-179.8571, -166.6017, -144.6302, -158.0464, -172.4662],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0344, device='cuda:0', dtype=torch.float64)
tensor([-179.6408, -166.4012, -144.6471, -157.9478, -172.2106],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0357, device='cuda:0', dtype=torch.float64)
tensor([-179.3757, -166.2299, -144.7041, -157.8754, -171.9748],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0381, device='cuda:0', dtype=torch.float64)
tensor([-179.1699, -166.0701, -144.7100, -157.7836, -171.7514],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0324, device='cuda:0', dtype=torch.float64)
tensor([-178.7053, -165.7722, -144.7141, -157.5495, -171.3696],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0324, device='cuda:0', dtype=torch.float64)
tensor([-178.5273, -165.6078, -144.6514, -157.4166, -171.2692],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0381, device='cuda:0', dtype=torch.float64)
tensor([-178.3784, -165.4919, -144.5569, -157.2733, -171.1949],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0327, device='cuda:0', dtype=torch.float64)
tensor([-178.4041, -165.5060, -144.4030, -157.2001, -171.2706],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0398, device='cuda:0', dtype=torch.float64)
tensor([-178.3007, -165.4180, -144.2083, -157.0229, -171.2508],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0371, device='cuda:0', dtype=torch.float64)
tensor([-178.2848, -165.3815, -144.0339, -156.9067, -171.2935],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0354, device='cuda:0', dtype=torch.float64)
tensor([-178.3295, -165.3795, -143.8725, -156.8260, -171.3513],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0342, device='cuda:0', dtype=torch.float64)
tensor([-178.6127, -165.5160, -143.6861, -156.8573, -171.5965],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0328, device='cuda:0', dtype=torch.float64)
tensor([-178.6856, -165.5085, -143.5545, -156.8312, -171.6802],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0326, device='cuda:0', dtype=torch.float64)
tensor([-178.9017, -165.6289, -143.4327, -156.8633, -171.8595],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0353, device='cuda:0', dtype=torch.float64)
tensor([-179.1813, -165.7830, -143.3064, -156.9142, -172.0955],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0382, device='cuda:0', dtype=torch.float64)
tensor([-179.5209, -165.9379, -143.1777, -156.9608, -172.3182],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0368, device='cuda:0', dtype=torch.float64)
tensor([-180.0105, -166.2708, -143.0595, -157.1524, -172.6835],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0343, device='cuda:0', dtype=torch.float64)
tensor([-180.6114, -166.6751, -142.8791, -157.3548, -173.1111],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0348, device='cuda:0', dtype=torch.float64)
tensor([-181.2130, -167.0648, -142.7068, -157.5503, -173.5530],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0402, device='cuda:0', dtype=torch.float64)
tensor([-181.7437, -167.4113, -142.5445, -157.6994, -173.9391],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0334, device='cuda:0', dtype=torch.float64)
tensor([-182.3121, -167.7791, -142.4001, -157.8661, -174.3490],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0367, device='cuda:0', dtype=torch.float64)
tensor([-183.0731, -168.2986, -142.2213, -158.1491, -174.8977],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0291, device='cuda:0', dtype=torch.float64)
tensor([-183.5425, -168.6011, -142.0780, -158.2939, -175.1801],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0358, device='cuda:0', dtype=torch.float64)
tensor([-183.6194, -168.6217, -141.9616, -158.2505, -175.1347],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0320, device='cuda:0', dtype=torch.float64)
tensor([-183.5778, -168.5380, -141.8430, -158.1488, -174.9493],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0296, device='cuda:0', dtype=torch.float64)
tensor([-183.5801, -168.5064, -141.7188, -158.1159, -174.8282],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0358, device='cuda:0', dtype=torch.float64)
tensor([-183.8501, -168.6338, -141.6059, -158.2272, -174.9070],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0323, device='cuda:0', dtype=torch.float64)
tensor([-184.0437, -168.7039, -141.5001, -158.3024, -174.8928],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0358, device='cuda:0', dtype=torch.float64)
tensor([-184.2931, -168.8410, -141.4003, -158.3930, -174.8994],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0347, device='cuda:0', dtype=torch.float64)
tensor([-184.8398, -169.1695, -141.3020, -158.6169, -175.1461],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0416, device='cuda:0', dtype=torch.float64)
tensor([-185.6370, -169.6401, -141.1183, -158.9304, -175.6316],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0340, device='cuda:0', dtype=torch.float64)
tensor([-186.4291, -170.0827, -140.9697, -159.2410, -176.1178],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0324, device='cuda:0', dtype=torch.float64)
tensor([-186.8913, -170.3198, -140.8975, -159.4659, -176.3784],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0313, device='cuda:0', dtype=torch.float64)
tensor([-187.4404, -170.6125, -140.7964, -159.7238, -176.6964],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0362, device='cuda:0', dtype=torch.float64)
tensor([-188.4495, -171.2573, -140.6697, -160.2197, -177.3864],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0370, device='cuda:0', dtype=torch.float64)
tensor([-189.2759, -171.7390, -140.4800, -160.5602, -177.9035],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0366, device='cuda:0', dtype=torch.float64)
tensor([-190.1945, -172.2603, -140.2663, -160.9491, -178.4820],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0371, device='cuda:0', dtype=torch.float64)
tensor([-190.9967, -172.6570, -140.0729, -161.2731, -178.9388],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0394, device='cuda:0', dtype=torch.float64)
tensor([-192.0493, -173.2017, -139.8435, -161.6690, -179.5832],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0357, device='cuda:0', dtype=torch.float64)
tensor([-192.7276, -173.4436, -139.6203, -161.8935, -179.9548],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0354, device='cuda:0', dtype=torch.float64)
tensor([-193.1807, -173.5869, -139.4332, -162.0287, -180.1445],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0346, device='cuda:0', dtype=torch.float64)
tensor([-193.3845, -173.5590, -139.2829, -162.0789, -180.1905],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0361, device='cuda:0', dtype=torch.float64)
tensor([-193.5683, -173.4958, -139.1296, -162.1009, -180.2148],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0348, device='cuda:0', dtype=torch.float64)
tensor([-193.2191, -173.1262, -139.0108, -161.9185, -179.8870],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0383, device='cuda:0', dtype=torch.float64)
tensor([-192.6261, -172.6212, -138.9040, -161.6002, -179.3692],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0391, device='cuda:0', dtype=torch.float64)
tensor([-191.6994, -171.8892, -138.8470, -161.1553, -178.6311],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0318, device='cuda:0', dtype=torch.float64)
tensor([-190.5272, -171.0248, -138.8062, -160.6109, -177.7100],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0362, device='cuda:0', dtype=torch.float64)
tensor([-189.5648, -170.3318, -138.7665, -160.1738, -176.9428],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0364, device='cuda:0', dtype=torch.float64)
tensor([-188.6911, -169.7024, -138.7259, -159.8205, -176.2437],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0319, device='cuda:0', dtype=torch.float64)
tensor([-187.9462, -169.1954, -138.7033, -159.5526, -175.6390],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0369, device='cuda:0', dtype=torch.float64)
tensor([-187.3415, -168.7526, -138.6570, -159.3176, -175.1356],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0352, device='cuda:0', dtype=torch.float64)
tensor([-186.9202, -168.4253, -138.5796, -159.1656, -174.7472],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0352, device='cuda:0', dtype=torch.float64)
tensor([-186.6412, -168.2437, -138.4846, -159.0772, -174.4816],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0394, device='cuda:0', dtype=torch.float64)
tensor([-186.7251, -168.2747, -138.3442, -159.1388, -174.4771],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0301, device='cuda:0', dtype=torch.float64)
tensor([-186.5045, -168.0468, -138.2063, -159.0349, -174.2383],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0358, device='cuda:0', dtype=torch.float64)
tensor([-186.2943, -167.7718, -138.0746, -158.9314, -174.0000],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0322, device='cuda:0', dtype=torch.float64)
tensor([-185.9814, -167.3987, -137.9369, -158.7850, -173.6963],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0406, device='cuda:0', dtype=torch.float64)
tensor([-185.7779, -167.0718, -137.8022, -158.6762, -173.4456],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0332, device='cuda:0', dtype=torch.float64)
tensor([-185.7348, -166.8223, -137.6595, -158.6113, -173.2460],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0351, device='cuda:0', dtype=torch.float64)
tensor([-185.8508, -166.7017, -137.5198, -158.6176, -173.1615],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0426, device='cuda:0', dtype=torch.float64)
tensor([-185.9541, -166.5721, -137.3578, -158.6014, -173.0402],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0326, device='cuda:0', dtype=torch.float64)
tensor([-186.0605, -166.4059, -137.2029, -158.5672, -172.9080],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0348, device='cuda:0', dtype=torch.float64)
tensor([-186.3337, -166.3738, -137.0523, -158.6086, -172.9168],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0320, device='cuda:0', dtype=torch.float64)
tensor([-186.9111, -166.5417, -136.8806, -158.7935, -173.1447],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0376, device='cuda:0', dtype=torch.float64)
tensor([-187.7838, -166.8701, -136.7060, -159.0772, -173.5628],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0380, device='cuda:0', dtype=torch.float64)
tensor([-188.4847, -167.1543, -136.5613, -159.3583, -173.9237],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0364, device='cuda:0', dtype=torch.float64)
tensor([-189.3519, -167.5744, -136.4127, -159.7195, -174.4246],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0332, device='cuda:0', dtype=torch.float64)
tensor([-190.4883, -168.2539, -136.2912, -160.2505, -175.1699],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0422, device='cuda:0', dtype=torch.float64)
tensor([-191.5042, -168.8476, -136.1688, -160.6864, -175.7990],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0342, device='cuda:0', dtype=torch.float64)
tensor([-192.5067, -169.5297, -136.0802, -161.1769, -176.4860],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0329, device='cuda:0', dtype=torch.float64)
tensor([-193.2340, -170.0083, -135.9609, -161.4745, -176.9072],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0404, device='cuda:0', dtype=torch.float64)
tensor([-193.7037, -170.3663, -135.8361, -161.6381, -177.1451],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0382, device='cuda:0', dtype=torch.float64)
tensor([-193.7012, -170.3473, -135.7078, -161.5660, -177.0122],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0366, device='cuda:0', dtype=torch.float64)
tensor([-193.7508, -170.3531, -135.5803, -161.4908, -176.9093],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0349, device='cuda:0', dtype=torch.float64)
tensor([-193.4449, -170.0767, -135.4349, -161.2545, -176.5588],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0340, device='cuda:0', dtype=torch.float64)
tensor([-193.1970, -169.8864, -135.2968, -161.0823, -176.2878],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0411, device='cuda:0', dtype=torch.float64)
tensor([-192.8293, -169.6493, -135.1580, -160.8989, -175.9827],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0321, device='cuda:0', dtype=torch.float64)
tensor([-192.4074, -169.3108, -135.0459, -160.6687, -175.6220],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0369, device='cuda:0', dtype=torch.float64)
tensor([-191.7439, -168.6899, -134.9249, -160.2291, -175.0241],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0388, device='cuda:0', dtype=torch.float64)
tensor([-191.4560, -168.2978, -134.7958, -159.9369, -174.6364],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0388, device='cuda:0', dtype=torch.float64)
tensor([-190.6142, -167.6549, -134.6813, -159.4505, -173.9165],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0380, device='cuda:0', dtype=torch.float64)
tensor([-189.9126, -167.1118, -134.5800, -159.0239, -173.2946],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0322, device='cuda:0', dtype=torch.float64)
tensor([-189.2706, -166.5895, -134.4834, -158.6055, -172.7035],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0398, device='cuda:0', dtype=torch.float64)
tensor([-188.7192, -166.1889, -134.3819, -158.2710, -172.2188],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0388, device='cuda:0', dtype=torch.float64)
tensor([-188.5405, -166.0439, -134.2838, -158.0956, -171.9783],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0378, device='cuda:0', dtype=torch.float64)
tensor([-188.7575, -166.0546, -134.1506, -158.0507, -171.9421],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0377, device='cuda:0', dtype=torch.float64)
tensor([-189.2710, -166.1631, -134.0071, -158.0587, -172.0244],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0422, device='cuda:0', dtype=torch.float64)
tensor([-189.7790, -166.1812, -133.8509, -158.0303, -172.0351],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0402, device='cuda:0', dtype=torch.float64)
tensor([-190.2565, -166.1851, -133.7230, -157.9519, -172.0079],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0369, device='cuda:0', dtype=torch.float64)
tensor([-190.2248, -165.8542, -133.5911, -157.5992, -171.5873],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0336, device='cuda:0', dtype=torch.float64)
tensor([-190.3378, -165.7292, -133.4773, -157.3383, -171.3314],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0334, device='cuda:0', dtype=torch.float64)
tensor([-190.2348, -165.4687, -133.3643, -156.9998, -170.9427],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0347, device='cuda:0', dtype=torch.float64)
tensor([-190.0659, -165.0602, -133.2731, -156.5499, -170.4258],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0398, device='cuda:0', dtype=torch.float64)
tensor([-190.0190, -164.7476, -133.1938, -156.1729, -170.0294],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0390, device='cuda:0', dtype=torch.float64)
tensor([-190.2722, -164.6750, -133.1177, -155.9996, -169.9086],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0414, device='cuda:0', dtype=torch.float64)
tensor([-190.2378, -164.5561, -133.0486, -155.8042, -169.7331],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0364, device='cuda:0', dtype=torch.float64)
tensor([-190.3640, -164.6703, -132.9286, -155.7659, -169.7276],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0361, device='cuda:0', dtype=torch.float64)
tensor([-190.8103, -165.0854, -132.7821, -155.9503, -170.0201],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0339, device='cuda:0', dtype=torch.float64)
tensor([-190.9240, -165.2992, -132.6187, -156.0166, -170.1015],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0385, device='cuda:0', dtype=torch.float64)
tensor([-190.6022, -165.2266, -132.4519, -155.8975, -169.9031],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0340, device='cuda:0', dtype=torch.float64)
tensor([-190.6238, -165.4519, -132.2929, -155.9694, -169.9925],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0362, device='cuda:0', dtype=torch.float64)
tensor([-190.4270, -165.4771, -132.1472, -155.8738, -169.8620],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0353, device='cuda:0', dtype=torch.float64)
tensor([-190.0792, -165.3696, -132.0150, -155.6308, -169.5547],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0372, device='cuda:0', dtype=torch.float64)
tensor([-189.8481, -165.2795, -131.8884, -155.3787, -169.2645],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0361, device='cuda:0', dtype=torch.float64)
tensor([-189.7054, -165.2308, -131.7363, -155.1761, -169.0185],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0372, device='cuda:0', dtype=torch.float64)
tensor([-189.5299, -165.2108, -131.5794, -154.9635, -168.7486],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0328, device='cuda:0', dtype=torch.float64)
tensor([-189.4206, -165.2254, -131.4221, -154.7859, -168.5092],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0323, device='cuda:0', dtype=torch.float64)
tensor([-189.1614, -165.2114, -131.2799, -154.6082, -168.2502],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0395, device='cuda:0', dtype=torch.float64)
tensor([-188.7788, -165.0957, -131.1387, -154.3443, -167.8925],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0365, device='cuda:0', dtype=torch.float64)
tensor([-188.2154, -164.7996, -131.0028, -153.9713, -167.3904],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0327, device='cuda:0', dtype=torch.float64)
tensor([-187.8784, -164.6836, -130.8741, -153.7476, -167.1011],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0366, device='cuda:0', dtype=torch.float64)
tensor([-187.3197, -164.4013, -130.7327, -153.4226, -166.6371],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0395, device='cuda:0', dtype=torch.float64)
tensor([-187.0324, -164.2396, -130.5953, -153.2192, -166.3590],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0345, device='cuda:0', dtype=torch.float64)
tensor([-186.7539, -164.0536, -130.4522, -153.0006, -166.0752],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0369, device='cuda:0', dtype=torch.float64)
tensor([-186.8627, -164.0365, -130.3301, -152.9229, -166.0193],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0314, device='cuda:0', dtype=torch.float64)
tensor([-186.9091, -163.9642, -130.2125, -152.7990, -165.8989],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0333, device='cuda:0', dtype=torch.float64)
tensor([-186.7930, -163.9152, -130.0899, -152.7213, -165.7842],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0356, device='cuda:0', dtype=torch.float64)
tensor([-187.3047, -164.2355, -129.9629, -152.9201, -166.0797],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0371, device='cuda:0', dtype=torch.float64)
tensor([-187.5339, -164.4302, -129.8566, -152.9935, -166.2158],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0399, device='cuda:0', dtype=torch.float64)
tensor([-187.8118, -164.5641, -129.7361, -152.9982, -166.3034],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0349, device='cuda:0', dtype=torch.float64)
tensor([-188.0353, -164.5972, -129.6140, -152.9467, -166.2996],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0345, device='cuda:0', dtype=torch.float64)
tensor([-188.4745, -164.6816, -129.4899, -152.9426, -166.3698],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0396, device='cuda:0', dtype=torch.float64)
tensor([-189.2383, -164.8332, -129.3903, -153.0220, -166.5913],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0388, device='cuda:0', dtype=torch.float64)
tensor([-189.5955, -164.7386, -129.2750, -152.9584, -166.5633],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0398, device='cuda:0', dtype=torch.float64)
tensor([-190.2732, -164.7042, -129.1648, -152.9537, -166.6401],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0419, device='cuda:0', dtype=torch.float64)
tensor([-191.4139, -164.8038, -129.0918, -153.0786, -166.9335],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0378, device='cuda:0', dtype=torch.float64)
tensor([-192.1380, -164.5724, -129.0521, -152.9382, -166.8980],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0301, device='cuda:0', dtype=torch.float64)
tensor([-192.7733, -164.2968, -129.0507, -152.7681, -166.8308],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0386, device='cuda:0', dtype=torch.float64)
tensor([-193.4206, -164.1014, -129.0563, -152.6271, -166.8101],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0368, device='cuda:0', dtype=torch.float64)
tensor([-193.9846, -163.9156, -129.0575, -152.5144, -166.7876],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0334, device='cuda:0', dtype=torch.float64)
tensor([-194.3758, -163.6519, -129.0734, -152.3401, -166.6860],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0389, device='cuda:0', dtype=torch.float64)
tensor([-194.4061, -163.3511, -129.0242, -152.1403, -166.4820],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0398, device='cuda:0', dtype=torch.float64)
tensor([-194.5846, -163.3031, -128.9586, -152.0812, -166.4790],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0357, device='cuda:0', dtype=torch.float64)
tensor([-195.3544, -163.5524, -128.9023, -152.3015, -166.8293],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0343, device='cuda:0', dtype=torch.float64)
tensor([-196.0176, -163.9465, -128.7849, -152.6245, -167.2411],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0377, device='cuda:0', dtype=torch.float64)
tensor([-196.6985, -164.5956, -128.5908, -153.0924, -167.7832],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0363, device='cuda:0', dtype=torch.float64)
tensor([-197.3389, -165.3943, -128.3374, -153.6593, -168.3898],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0387, device='cuda:0', dtype=torch.float64)
tensor([-198.3190, -166.4423, -128.1341, -154.3979, -169.2413],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0299, device='cuda:0', dtype=torch.float64)
tensor([-199.2793, -167.4441, -127.9826, -155.0707, -170.0556],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0387, device='cuda:0', dtype=torch.float64)
tensor([-200.6013, -168.6946, -127.8924, -155.9028, -171.1139],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0401, device='cuda:0', dtype=torch.float64)
tensor([-201.7620, -169.6618, -127.8530, -156.5228, -171.9857],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0341, device='cuda:0', dtype=torch.float64)
tensor([-203.1443, -170.7449, -127.8572, -157.2454, -173.0234],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0317, device='cuda:0', dtype=torch.float64)
tensor([-204.6893, -171.9309, -127.8975, -158.0335, -174.1634],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0362, device='cuda:0', dtype=torch.float64)
tensor([-206.4798, -173.3817, -127.9581, -158.9908, -175.5196],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0431, device='cuda:0', dtype=torch.float64)
tensor([-208.2518, -174.8353, -128.0442, -159.9541, -176.8927],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0398, device='cuda:0', dtype=torch.float64)
tensor([-209.3396, -175.6876, -128.0512, -160.4664, -177.6591],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0425, device='cuda:0', dtype=torch.float64)
tensor([-209.8939, -176.3448, -128.0096, -160.8754, -178.2161],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0367, device='cuda:0', dtype=torch.float64)
tensor([-210.2828, -176.8410, -127.9670, -161.2194, -178.6665],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0376, device='cuda:0', dtype=torch.float64)
tensor([-211.0100, -177.3806, -127.9622, -161.6462, -179.2541],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0318, device='cuda:0', dtype=torch.float64)
tensor([-211.9816, -178.0535, -128.0067, -162.1744, -180.0098],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0411, device='cuda:0', dtype=torch.float64)
tensor([-212.6441, -178.4550, -127.9984, -162.5453, -180.5004],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0404, device='cuda:0', dtype=torch.float64)
tensor([-212.8540, -178.4130, -127.9294, -162.5920, -180.5774],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0369, device='cuda:0', dtype=torch.float64)
tensor([-213.3318, -178.3765, -127.9070, -162.6226, -180.6934],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0349, device='cuda:0', dtype=torch.float64)
tensor([-213.7678, -178.2669, -127.9075, -162.5899, -180.7641],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0371, device='cuda:0', dtype=torch.float64)
tensor([-214.6199, -178.3785, -127.9663, -162.7333, -181.1129],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0398, device='cuda:0', dtype=torch.float64)
tensor([-215.7688, -178.4249, -128.1200, -162.8550, -181.5089],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0300, device='cuda:0', dtype=torch.float64)
tensor([-216.7878, -178.4584, -128.2802, -162.9478, -181.8590],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0331, device='cuda:0', dtype=torch.float64)
tensor([-217.3924, -178.1685, -128.3926, -162.7875, -181.8608],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0378, device='cuda:0', dtype=torch.float64)
tensor([-217.9546, -178.0736, -128.4632, -162.7220, -181.9547],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0389, device='cuda:0', dtype=torch.float64)
tensor([-218.6286, -178.3228, -128.4575, -162.8414, -182.2288],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0315, device='cuda:0', dtype=torch.float64)
tensor([-219.6742, -178.7193, -128.5185, -163.1010, -182.7233],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0373, device='cuda:0', dtype=torch.float64)
tensor([-220.0736, -178.6668, -128.5149, -163.0695, -182.7799],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0359, device='cuda:0', dtype=torch.float64)
tensor([-220.5715, -178.6167, -128.5384, -163.0608, -182.8828],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0423, device='cuda:0', dtype=torch.float64)
tensor([-221.1398, -178.3879, -128.5779, -162.9861, -182.8968],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0360, device='cuda:0', dtype=torch.float64)
tensor([-221.7332, -178.5290, -128.5520, -163.0667, -183.0790],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0374, device='cuda:0', dtype=torch.float64)
tensor([-222.3552, -178.9885, -128.4514, -163.3672, -183.4634],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0382, device='cuda:0', dtype=torch.float64)
tensor([-222.8886, -179.2899, -128.3914, -163.5331, -183.7285],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0381, device='cuda:0', dtype=torch.float64)
tensor([-222.5036, -179.1052, -128.1943, -163.3373, -183.4288],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0309, device='cuda:0', dtype=torch.float64)
tensor([-221.9817, -178.9518, -127.9499, -163.1371, -183.0891],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0396, device='cuda:0', dtype=torch.float64)
tensor([-221.2411, -178.5772, -127.6734, -162.8329, -182.5590],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0382, device='cuda:0', dtype=torch.float64)
tensor([-220.7949, -178.3639, -127.4352, -162.5932, -182.1491],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0366, device='cuda:0', dtype=torch.float64)
tensor([-220.4193, -177.8934, -127.2575, -162.2428, -181.6342],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0425, device='cuda:0', dtype=torch.float64)
tensor([-220.1640, -177.1713, -127.1588, -161.7798, -181.0390],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0370, device='cuda:0', dtype=torch.float64)
tensor([-220.1730, -176.7771, -127.0543, -161.5337, -180.7117],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0371, device='cuda:0', dtype=torch.float64)
tensor([-219.6953, -176.3881, -126.8348, -161.2117, -180.2193],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0323, device='cuda:0', dtype=torch.float64)
tensor([-219.7254, -176.3410, -126.6633, -161.1241, -180.0691],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0347, device='cuda:0', dtype=torch.float64)
tensor([-220.0679, -176.5242, -126.5406, -161.2468, -180.2080],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0337, device='cuda:0', dtype=torch.float64)
tensor([-220.3194, -176.6712, -126.3980, -161.3949, -180.3316],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0372, device='cuda:0', dtype=torch.float64)
tensor([-220.4043, -176.6229, -126.2785, -161.3736, -180.2726],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0306, device='cuda:0', dtype=torch.float64)
tensor([-220.4750, -176.5349, -126.1819, -161.3500, -180.2221],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0322, device='cuda:0', dtype=torch.float64)
tensor([-220.5758, -176.4193, -126.1164, -161.3118, -180.1562],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0346, device='cuda:0', dtype=torch.float64)
tensor([-220.4086, -176.2456, -125.9844, -161.1845, -179.9464],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0350, device='cuda:0', dtype=torch.float64)
tensor([-220.0356, -175.9634, -125.8196, -160.9714, -179.5990],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0341, device='cuda:0', dtype=torch.float64)
tensor([-220.2327, -176.0608, -125.7466, -160.9871, -179.6159],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0342, device='cuda:0', dtype=torch.float64)
tensor([-220.7474, -176.2859, -125.7349, -161.0933, -179.8020],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0326, device='cuda:0', dtype=torch.float64)
tensor([-221.8199, -176.8956, -125.7824, -161.5057, -180.4139],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0317, device='cuda:0', dtype=torch.float64)
tensor([-223.1691, -177.7866, -125.8704, -162.0860, -181.2822],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0335, device='cuda:0', dtype=torch.float64)
tensor([-224.7760, -178.5065, -126.0774, -162.5954, -182.1539],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0329, device='cuda:0', dtype=torch.float64)
tensor([-226.3218, -178.9634, -126.3045, -163.0172, -182.8908],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0306, device='cuda:0', dtype=torch.float64)
tensor([-227.4925, -179.2489, -126.4499, -163.3358, -183.4300],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0342, device='cuda:0', dtype=torch.float64)
tensor([-228.9938, -179.9743, -126.6208, -163.8790, -184.3002],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0371, device='cuda:0', dtype=torch.float64)
tensor([-230.2438, -180.4872, -126.7833, -164.2437, -184.9398],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0340, device='cuda:0', dtype=torch.float64)
tensor([-231.6125, -181.1905, -126.9264, -164.6998, -185.6995],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0343, device='cuda:0', dtype=torch.float64)
tensor([-232.5428, -181.9049, -126.9535, -165.0709, -186.2804],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0308, device='cuda:0', dtype=torch.float64)
tensor([-233.7771, -182.8721, -127.0410, -165.6187, -187.1454],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0344, device='cuda:0', dtype=torch.float64)
tensor([-235.1027, -183.7135, -127.1780, -166.1523, -188.0118],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0411, device='cuda:0', dtype=torch.float64)
tensor([-236.5642, -184.3254, -127.4158, -166.6254, -188.8730],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0371, device='cuda:0', dtype=torch.float64)
tensor([-237.8044, -184.7857, -127.5988, -166.9908, -189.5415],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0309, device='cuda:0', dtype=torch.float64)
tensor([-239.0723, -185.3632, -127.7757, -167.4085, -190.3039],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0312, device='cuda:0', dtype=torch.float64)
tensor([-240.3633, -185.8509, -127.9722, -167.7969, -191.0253],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0332, device='cuda:0', dtype=torch.float64)
tensor([-242.2612, -186.8641, -128.2939, -168.5035, -192.2803],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0378, device='cuda:0', dtype=torch.float64)
tensor([-243.6871, -187.5883, -128.5177, -169.0167, -193.1982],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0379, device='cuda:0', dtype=torch.float64)
tensor([-245.1015, -188.3251, -128.6913, -169.5313, -194.0924],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0325, device='cuda:0', dtype=torch.float64)
tensor([-245.9551, -188.9090, -128.7124, -169.9091, -194.6718],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0369, device='cuda:0', dtype=torch.float64)
tensor([-247.1417, -189.5692, -128.8872, -170.3470, -195.4721],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0352, device='cuda:0', dtype=torch.float64)
tensor([-248.0363, -190.1199, -129.0149, -170.6911, -196.1079],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0383, device='cuda:0', dtype=torch.float64)
tensor([-248.4504, -190.9149, -128.9210, -171.0729, -196.6401],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0358, device='cuda:0', dtype=torch.float64)
tensor([-248.6257, -191.9187, -128.6757, -171.5175, -197.1335],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0365, device='cuda:0', dtype=torch.float64)
tensor([-248.9718, -192.7810, -128.4809, -171.8850, -197.5903],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0364, device='cuda:0', dtype=torch.float64)
tensor([-249.2383, -193.7042, -128.2346, -172.3079, -198.0611],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0361, device='cuda:0', dtype=torch.float64)
tensor([-249.7655, -194.8068, -128.0722, -172.8204, -198.7315],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0355, device='cuda:0', dtype=torch.float64)
tensor([-250.3914, -195.8754, -127.9318, -173.3789, -199.4479],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0361, device='cuda:0', dtype=torch.float64)
tensor([-251.1496, -196.9890, -127.8653, -173.9637, -200.2753],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0347, device='cuda:0', dtype=torch.float64)
tensor([-251.7972, -198.1341, -127.8020, -174.5564, -201.1048],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0376, device='cuda:0', dtype=torch.float64)
tensor([-253.0489, -199.1748, -127.9143, -175.1623, -202.1018],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0376, device='cuda:0', dtype=torch.float64)
tensor([-253.9556, -199.6046, -127.9962, -175.4717, -202.6578],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0411, device='cuda:0', dtype=torch.float64)
tensor([-255.0958, -199.7137, -128.1742, -175.7311, -203.1634],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0346, device='cuda:0', dtype=torch.float64)
tensor([-256.0148, -199.6886, -128.3038, -175.9207, -203.5268],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0360, device='cuda:0', dtype=torch.float64)
tensor([-256.7871, -199.1292, -128.4835, -175.8484, -203.5708],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0320, device='cuda:0', dtype=torch.float64)
tensor([-257.7240, -198.6204, -128.7216, -175.7612, -203.6701],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0341, device='cuda:0', dtype=torch.float64)
tensor([-259.1422, -198.2752, -129.1045, -175.7933, -204.0505],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0356, device='cuda:0', dtype=torch.float64)
tensor([-260.7738, -198.3539, -129.4821, -176.0621, -204.7579],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0330, device='cuda:0', dtype=torch.float64)
tensor([-262.4394, -198.7337, -129.8277, -176.4914, -205.6529],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0336, device='cuda:0', dtype=torch.float64)
tensor([-263.7157, -198.9345, -130.1319, -176.8139, -206.3256],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0323, device='cuda:0', dtype=torch.float64)
tensor([-265.0415, -199.3717, -130.3503, -177.2647, -207.1153],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0357, device='cuda:0', dtype=torch.float64)
tensor([-266.4972, -199.8657, -130.5496, -177.7465, -207.9516],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0339, device='cuda:0', dtype=torch.float64)
tensor([-267.4855, -199.9941, -130.6754, -177.9585, -208.3846],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0333, device='cuda:0', dtype=torch.float64)
tensor([-268.2192, -200.0240, -130.7208, -178.0963, -208.6427],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0360, device='cuda:0', dtype=torch.float64)
tensor([-269.2506, -200.4213, -130.7293, -178.4834, -209.2023],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0324, device='cuda:0', dtype=torch.float64)
tensor([-270.8375, -201.0419, -130.9185, -179.0243, -210.1282],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0349, device='cuda:0', dtype=torch.float64)
tensor([-272.5026, -201.8210, -131.1643, -179.6046, -211.1705],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0348, device='cuda:0', dtype=torch.float64)
tensor([-274.0706, -202.3897, -131.4313, -180.1155, -212.1076],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0329, device='cuda:0', dtype=torch.float64)
tensor([-275.9756, -203.4974, -131.6619, -180.9607, -213.4712],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0393, device='cuda:0', dtype=torch.float64)
tensor([-277.3373, -204.2374, -131.7653, -181.5550, -214.3603],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0310, device='cuda:0', dtype=torch.float64)
tensor([-278.8992, -205.1924, -131.9310, -182.3007, -215.5031],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0364, device='cuda:0', dtype=torch.float64)
tensor([-280.3938, -206.5876, -131.9736, -183.2206, -216.8274],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0361, device='cuda:0', dtype=torch.float64)
tensor([-281.9001, -208.1972, -131.9960, -184.2524, -218.2883],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0342, device='cuda:0', dtype=torch.float64)
tensor([-283.6595, -209.6427, -132.1701, -185.2520, -219.8041],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0346, device='cuda:0', dtype=torch.float64)
tensor([-285.4967, -211.3705, -132.3585, -186.3293, -221.4597],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0361, device='cuda:0', dtype=torch.float64)
tensor([-286.8856, -212.9637, -132.4420, -187.2844, -222.8078],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0401, device='cuda:0', dtype=torch.float64)
tensor([-288.4934, -214.5711, -132.6079, -188.2724, -224.2763],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0354, device='cuda:0', dtype=torch.float64)
tensor([-289.5575, -215.6213, -132.6395, -188.9432, -225.2021],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0351, device='cuda:0', dtype=torch.float64)
tensor([-290.6743, -216.2301, -132.7959, -189.4702, -226.0134],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0352, device='cuda:0', dtype=torch.float64)
tensor([-291.6069, -216.6364, -132.9198, -189.8547, -226.6374],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0368, device='cuda:0', dtype=torch.float64)
tensor([-292.7576, -216.8455, -133.2157, -190.1760, -227.2987],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0365, device='cuda:0', dtype=torch.float64)
tensor([-294.3244, -217.5442, -133.6352, -190.6748, -228.3929],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0335, device='cuda:0', dtype=torch.float64)
tensor([-294.7343, -217.3671, -133.7959, -190.6908, -228.5540],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0297, device='cuda:0', dtype=torch.float64)
tensor([-295.3472, -217.6754, -133.9595, -190.9148, -229.0472],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0342, device='cuda:0', dtype=torch.float64)
tensor([-296.0665, -218.3876, -134.0949, -191.3115, -229.7850],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0324, device='cuda:0', dtype=torch.float64)
tensor([-296.9783, -219.5058, -134.1889, -191.8959, -230.7594],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0368, device='cuda:0', dtype=torch.float64)
tensor([-298.3990, -221.1944, -134.3268, -192.7405, -232.1756],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0368, device='cuda:0', dtype=torch.float64)
tensor([-299.5030, -222.8768, -134.3862, -193.5325, -233.4408],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0366, device='cuda:0', dtype=torch.float64)
tensor([-301.1960, -225.0452, -134.6020, -194.5389, -235.1812],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0376, device='cuda:0', dtype=torch.float64)
tensor([-302.7506, -227.6779, -134.6448, -195.6923, -236.9643],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0296, device='cuda:0', dtype=torch.float64)
tensor([-304.0556, -230.3367, -134.6227, -196.7921, -238.6191],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0328, device='cuda:0', dtype=torch.float64)
tensor([-304.7198, -232.8922, -134.3699, -197.7211, -239.8724],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0360, device='cuda:0', dtype=torch.float64)
tensor([-305.2152, -234.5332, -134.2719, -198.2075, -240.6697],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0309, device='cuda:0', dtype=torch.float64)
tensor([-305.7152, -235.9060, -134.1972, -198.5864, -241.3358],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0388, device='cuda:0', dtype=torch.float64)
tensor([-306.8792, -237.5283, -134.3124, -199.1671, -242.4397],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0319, device='cuda:0', dtype=torch.float64)
tensor([-307.8898, -238.8626, -134.4234, -199.6113, -243.4070],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0357, device='cuda:0', dtype=torch.float64)
tensor([-308.9415, -239.9899, -134.6081, -199.9507, -244.3016],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0340, device='cuda:0', dtype=torch.float64)
tensor([-309.8225, -240.3985, -134.8167, -200.0338, -244.8066],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0368, device='cuda:0', dtype=torch.float64)
tensor([-310.7403, -240.3151, -135.1344, -199.9278, -245.1197],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0344, device='cuda:0', dtype=torch.float64)
tensor([-311.6828, -240.0564, -135.4899, -199.7981, -245.4155],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0366, device='cuda:0', dtype=torch.float64)
tensor([-312.4840, -239.5896, -135.8122, -199.6011, -245.5657],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0326, device='cuda:0', dtype=torch.float64)
tensor([-313.4416, -239.5563, -136.0928, -199.6184, -245.9644],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0323, device='cuda:0', dtype=torch.float64)
tensor([-314.4430, -239.7977, -136.2894, -199.7439, -246.4617],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0372, device='cuda:0', dtype=torch.float64)
tensor([-315.3385, -239.7868, -136.4904, -199.7758, -246.7951],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0361, device='cuda:0', dtype=torch.float64)
tensor([-316.7920, -240.5798, -136.7187, -200.2071, -247.7178],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0332, device='cuda:0', dtype=torch.float64)
tensor([-318.0266, -241.0965, -136.9132, -200.5399, -248.4408],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0344, device='cuda:0', dtype=torch.float64)
tensor([-319.8152, -242.3895, -137.1564, -201.2343, -249.7222],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0376, device='cuda:0', dtype=torch.float64)
tensor([-321.7682, -243.8395, -137.3590, -202.0956, -251.2046],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0371, device='cuda:0', dtype=torch.float64)
tensor([-323.7446, -245.4277, -137.6053, -202.9554, -252.7513],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0371, device='cuda:0', dtype=torch.float64)
tensor([-325.9910, -247.0021, -137.9874, -203.8611, -254.4808],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0329, device='cuda:0', dtype=torch.float64)
tensor([-328.3949, -248.2213, -138.5451, -204.6049, -256.1679],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0331, device='cuda:0', dtype=torch.float64)
tensor([-330.9675, -249.6270, -139.1601, -205.4534, -258.0429],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0325, device='cuda:0', dtype=torch.float64)
tensor([-333.0314, -250.4871, -139.7713, -206.0800, -259.5584],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0287, device='cuda:0', dtype=torch.float64)
tensor([-335.3249, -251.2106, -140.5310, -206.7040, -261.1781],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0316, device='cuda:0', dtype=torch.float64)
tensor([-337.4295, -251.8867, -141.2053, -207.3132, -262.6793],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0319, device='cuda:0', dtype=torch.float64)
tensor([-339.9148, -252.8625, -141.9969, -208.1003, -264.5450],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0347, device='cuda:0', dtype=torch.float64)
tensor([-343.2292, -254.6391, -142.9512, -209.2753, -267.1350],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0324, device='cuda:0', dtype=torch.float64)
tensor([-346.0447, -256.0130, -143.8331, -210.2279, -269.2998],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0297, device='cuda:0', dtype=torch.float64)
tensor([-348.8693, -257.5910, -144.7095, -211.2454, -271.5248],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0311, device='cuda:0', dtype=torch.float64)
tensor([-352.1033, -260.4149, -145.4684, -212.6857, -274.3919],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0363, device='cuda:0', dtype=torch.float64)
tensor([-355.2595, -263.9473, -146.0101, -214.2943, -277.3870],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0350, device='cuda:0', dtype=torch.float64)
tensor([-358.2653, -266.6235, -146.7275, -215.6020, -280.0508],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0368, device='cuda:0', dtype=torch.float64)
tensor([-361.2139, -268.7905, -147.6412, -216.7105, -282.5264],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0360, device='cuda:0', dtype=torch.float64)
tensor([-364.0717, -270.9932, -148.4904, -217.8287, -284.9531],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0343, device='cuda:0', dtype=torch.float64)
tensor([-366.1128, -272.5816, -149.0369, -218.6685, -286.6604],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0334, device='cuda:0', dtype=torch.float64)
tensor([-368.4665, -274.3972, -149.6315, -219.6664, -288.6729],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0304, device='cuda:0', dtype=torch.float64)
tensor([-370.8556, -276.7937, -150.0900, -220.8884, -290.9058],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0356, device='cuda:0', dtype=torch.float64)
tensor([-372.5412, -278.6259, -150.3608, -221.8323, -292.5582],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0429, device='cuda:0', dtype=torch.float64)
tensor([-374.7740, -279.9908, -150.9981, -222.7665, -294.3909],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0316, device='cuda:0', dtype=torch.float64)
tensor([-376.7232, -281.6445, -151.4136, -223.7652, -296.1865],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0367, device='cuda:0', dtype=torch.float64)
tensor([-378.0469, -282.2099, -151.8262, -224.3492, -297.2627],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0368, device='cuda:0', dtype=torch.float64)
tensor([-378.7809, -282.0377, -152.2306, -224.5809, -297.7555],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0361, device='cuda:0', dtype=torch.float64)
tensor([-380.2524, -282.9682, -152.6574, -225.1902, -298.9834],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0348, device='cuda:0', dtype=torch.float64)
tensor([-382.5839, -284.7947, -153.2076, -226.2100, -301.0322],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0316, device='cuda:0', dtype=torch.float64)
tensor([-384.5064, -286.4315, -153.5686, -227.1155, -302.7181],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0329, device='cuda:0', dtype=torch.float64)
tensor([-386.4160, -287.6154, -154.0358, -227.9141, -304.2603],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0388, device='cuda:0', dtype=torch.float64)
tensor([-388.3269, -288.6705, -154.5103, -228.7388, -305.7946],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0407, device='cuda:0', dtype=torch.float64)
tensor([-390.2041, -289.4324, -154.9975, -229.5294, -307.2296],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0350, device='cuda:0', dtype=torch.float64)
tensor([-392.0957, -290.3388, -155.4071, -230.3821, -308.7140],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0324, device='cuda:0', dtype=torch.float64)
tensor([-394.5982, -292.4307, -155.7929, -231.6650, -310.9442],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0357, device='cuda:0', dtype=torch.float64)
tensor([-396.0405, -292.9217, -156.1590, -232.3234, -312.0462],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0350, device='cuda:0', dtype=torch.float64)
tensor([-397.3999, -293.3847, -156.5089, -232.9091, -313.0558],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0385, device='cuda:0', dtype=torch.float64)
tensor([-398.3999, -293.4283, -156.8508, -233.1999, -313.7432],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0370, device='cuda:0', dtype=torch.float64)
tensor([-399.7973, -294.3446, -157.1548, -233.8019, -314.9840],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0355, device='cuda:0', dtype=torch.float64)
tensor([-401.1684, -294.9693, -157.5208, -234.3340, -316.0943],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0279, device='cuda:0', dtype=torch.float64)
tensor([-401.8385, -295.2707, -157.6624, -234.6827, -316.7143],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0336, device='cuda:0', dtype=torch.float64)
tensor([-402.1492, -295.1614, -157.6801, -234.7876, -316.8879],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0360, device='cuda:0', dtype=torch.float64)
tensor([-401.8259, -294.6846, -157.5622, -234.7163, -316.5794],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0374, device='cuda:0', dtype=torch.float64)
tensor([-402.0548, -295.2335, -157.2769, -234.9939, -316.8083],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0318, device='cuda:0', dtype=torch.float64)
tensor([-402.4831, -295.5186, -157.1699, -235.2158, -317.0734],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0341, device='cuda:0', dtype=torch.float64)
tensor([-403.0121, -296.3419, -156.9190, -235.5679, -317.5172],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0402, device='cuda:0', dtype=torch.float64)
tensor([-404.2519, -297.3088, -157.0829, -236.1070, -318.5139],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0427, device='cuda:0', dtype=torch.float64)
tensor([-404.7205, -298.5789, -156.5749, -236.5594, -318.9859],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0359, device='cuda:0', dtype=torch.float64)
tensor([-405.2902, -299.5060, -156.2916, -236.9976, -319.5145],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0321, device='cuda:0', dtype=torch.float64)
tensor([-406.5113, -300.5462, -156.3752, -237.5946, -320.5409],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0333, device='cuda:0', dtype=torch.float64)
tensor([-408.0238, -302.1023, -156.5117, -238.3282, -321.9435],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0429, device='cuda:0', dtype=torch.float64)
tensor([-409.6212, -303.4419, -156.7697, -239.0277, -323.3274],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0337, device='cuda:0', dtype=torch.float64)
tensor([-411.4297, -305.0653, -156.9501, -239.8793, -324.9270],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0371, device='cuda:0', dtype=torch.float64)
tensor([-413.1477, -306.9693, -157.0881, -240.7761, -326.5851],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0345, device='cuda:0', dtype=torch.float64)
tensor([-415.5459, -309.3702, -157.3646, -241.9646, -328.8235],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0369, device='cuda:0', dtype=torch.float64)
tensor([-417.3941, -311.1334, -157.6577, -242.9138, -330.5969],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0303, device='cuda:0', dtype=torch.float64)
tensor([-419.2258, -312.8885, -157.9539, -243.8368, -332.3931],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0340, device='cuda:0', dtype=torch.float64)
tensor([-421.4840, -314.8063, -158.4477, -244.8823, -334.5268],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0360, device='cuda:0', dtype=torch.float64)
tensor([-423.5849, -316.8054, -158.8663, -245.9431, -336.6230],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0397, device='cuda:0', dtype=torch.float64)
tensor([-425.9619, -318.5487, -159.4604, -246.9653, -338.7569],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0357, device='cuda:0', dtype=torch.float64)
tensor([-428.7816, -320.6302, -160.1742, -248.2191, -341.3183],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0281, device='cuda:0', dtype=torch.float64)
tensor([-432.1230, -323.0837, -160.9809, -249.6465, -344.2806],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0409, device='cuda:0', dtype=torch.float64)
tensor([-436.3845, -327.3087, -161.7367, -251.7690, -348.4595],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0267, device='cuda:0', dtype=torch.float64)
tensor([-440.9916, -332.2583, -162.3667, -254.1398, -353.0253],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0358, device='cuda:0', dtype=torch.float64)
tensor([-445.5532, -337.0267, -162.9927, -256.5341, -357.5778],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0354, device='cuda:0', dtype=torch.float64)
tensor([-450.0536, -341.5600, -163.6181, -258.8893, -362.0008],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0330, device='cuda:0', dtype=torch.float64)
tensor([-454.0071, -345.1795, -164.2303, -260.8101, -365.6884],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0386, device='cuda:0', dtype=torch.float64)
tensor([-457.5412, -348.4756, -164.8290, -262.6474, -369.1074],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0364, device='cuda:0', dtype=torch.float64)
tensor([-460.5834, -351.0784, -165.4902, -264.2354, -372.0314],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0360, device='cuda:0', dtype=torch.float64)
tensor([-463.5215, -353.5011, -166.1889, -265.7702, -374.8261],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0394, device='cuda:0', dtype=torch.float64)
tensor([-466.0185, -355.3189, -166.7143, -267.1201, -377.0994],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0352, device='cuda:0', dtype=torch.float64)
tensor([-467.7792, -355.6388, -167.3889, -267.9946, -378.5592],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0337, device='cuda:0', dtype=torch.float64)
tensor([-469.4286, -356.1682, -167.9260, -268.7980, -379.9165],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0423, device='cuda:0', dtype=torch.float64)
tensor([-471.1186, -356.6995, -168.4184, -269.5855, -381.3101],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0307, device='cuda:0', dtype=torch.float64)
tensor([-472.5764, -356.9048, -168.8396, -270.1945, -382.3867],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0299, device='cuda:0', dtype=torch.float64)
tensor([-474.5926, -358.2861, -169.1544, -271.0830, -384.0783],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0281, device='cuda:0', dtype=torch.float64)
tensor([-476.8085, -359.5332, -169.5952, -271.9289, -385.7788],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0345, device='cuda:0', dtype=torch.float64)
tensor([-478.9631, -360.9273, -169.9928, -272.8130, -387.4793],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0295, device='cuda:0', dtype=torch.float64)
tensor([-481.0860, -362.3837, -170.2931, -273.6425, -389.1263],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0338, device='cuda:0', dtype=torch.float64)
tensor([-484.4746, -365.4304, -170.7904, -275.0536, -392.0656],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0340, device='cuda:0', dtype=torch.float64)
tensor([-487.7658, -368.5412, -171.2551, -276.4011, -394.9334],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0367, device='cuda:0', dtype=torch.float64)
tensor([-490.9848, -371.4735, -171.6544, -277.7824, -397.6894],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0313, device='cuda:0', dtype=torch.float64)
tensor([-494.6793, -374.9677, -172.2048, -279.3811, -400.9672],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0359, device='cuda:0', dtype=torch.float64)
tensor([-498.4426, -378.7143, -172.7031, -281.1120, -404.3495],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0405, device='cuda:0', dtype=torch.float64)
tensor([-501.5772, -381.1986, -173.2598, -282.4525, -407.0627],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0349, device='cuda:0', dtype=torch.float64)
tensor([-503.5852, -382.8938, -173.5504, -283.4096, -408.9181],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0368, device='cuda:0', dtype=torch.float64)
tensor([-506.6452, -385.4880, -174.1006, -284.6731, -411.6617],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0339, device='cuda:0', dtype=torch.float64)
tensor([-510.3205, -389.3104, -174.6041, -286.3083, -415.0229],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0314, device='cuda:0', dtype=torch.float64)
tensor([-514.3987, -393.7431, -175.1583, -288.2425, -418.8268],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0419, device='cuda:0', dtype=torch.float64)
tensor([-518.4977, -398.0830, -175.9451, -290.1912, -422.7536],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0403, device='cuda:0', dtype=torch.float64)
tensor([-521.2101, -400.1919, -176.7605, -291.4656, -425.3040],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0343, device='cuda:0', dtype=torch.float64)
tensor([-524.1477, -402.8453, -177.6150, -292.8419, -428.1081],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0338, device='cuda:0', dtype=torch.float64)
tensor([-526.2006, -404.2584, -178.3725, -293.8499, -430.0423],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0337, device='cuda:0', dtype=torch.float64)
tensor([-528.5634, -405.5355, -179.2998, -294.8967, -432.1803],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0369, device='cuda:0', dtype=torch.float64)
tensor([-530.5845, -406.3412, -180.1584, -295.8153, -433.9410],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0275, device='cuda:0', dtype=torch.float64)
tensor([-532.8699, -407.8435, -181.0010, -297.0134, -436.1054],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0421, device='cuda:0', dtype=torch.float64)
tensor([-535.6821, -409.6000, -181.9762, -298.2051, -438.5365],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0402, device='cuda:0', dtype=torch.float64)
tensor([-538.4729, -411.3423, -182.8973, -299.3226, -440.7995],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0285, device='cuda:0', dtype=torch.float64)
tensor([-541.4031, -413.3802, -183.6679, -300.4915, -443.1507],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0376, device='cuda:0', dtype=torch.float64)
tensor([-544.8636, -416.2387, -184.5183, -301.9278, -446.0879],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0358, device='cuda:0', dtype=torch.float64)
tensor([-548.2746, -418.7546, -185.5543, -303.3294, -448.9182],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0344, device='cuda:0', dtype=torch.float64)
tensor([-552.5858, -422.3607, -186.7598, -305.1030, -452.6414],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0353, device='cuda:0', dtype=torch.float64)
tensor([-557.6455, -427.1031, -187.9072, -307.3645, -457.0696],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0337, device='cuda:0', dtype=torch.float64)
tensor([-562.1951, -431.0203, -189.1228, -309.3767, -460.9671],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0328, device='cuda:0', dtype=torch.float64)
tensor([-566.5813, -435.2615, -190.0151, -311.4104, -464.7493],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0322, device='cuda:0', dtype=torch.float64)
tensor([-569.6456, -437.9144, -190.8493, -312.9274, -467.4060],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0298, device='cuda:0', dtype=torch.float64)
tensor([-573.2422, -441.4726, -191.5519, -314.7369, -470.5736],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0384, device='cuda:0', dtype=torch.float64)
tensor([-576.5733, -444.7151, -192.2642, -316.4668, -473.5594],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0355, device='cuda:0', dtype=torch.float64)
tensor([-578.0596, -445.6482, -192.6302, -317.2519, -474.6119],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0373, device='cuda:0', dtype=torch.float64)
tensor([-579.2460, -446.4376, -192.8624, -317.9273, -475.4028],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0402, device='cuda:0', dtype=torch.float64)
tensor([-581.0435, -447.9863, -193.1588, -318.9735, -476.7976],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0407, device='cuda:0', dtype=torch.float64)
tensor([-582.6628, -449.0366, -193.4612, -319.8687, -477.8836],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0296, device='cuda:0', dtype=torch.float64)
tensor([-584.8869, -450.6985, -193.9918, -320.9779, -479.5093],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0298, device='cuda:0', dtype=torch.float64)
tensor([-587.5769, -453.3244, -194.5374, -322.3215, -481.7419],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0310, device='cuda:0', dtype=torch.float64)
tensor([-590.4746, -455.8854, -195.2444, -323.6246, -484.0775],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0276, device='cuda:0', dtype=torch.float64)
tensor([-593.4728, -458.7089, -195.9941, -324.9940, -486.5476],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0416, device='cuda:0', dtype=torch.float64)
tensor([-596.9524, -462.5848, -196.4669, -326.7311, -489.5295],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0302, device='cuda:0', dtype=torch.float64)
tensor([-599.4326, -464.9706, -196.7669, -327.9684, -491.4302],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0326, device='cuda:0', dtype=torch.float64)
tensor([-601.3258, -466.8672, -196.8533, -329.0374, -492.9139],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0258, device='cuda:0', dtype=torch.float64)
tensor([-603.9202, -469.4328, -197.1536, -330.4308, -495.0217],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0340, device='cuda:0', dtype=torch.float64)
tensor([-607.8741, -473.7924, -197.7191, -332.4541, -498.4648],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0270, device='cuda:0', dtype=torch.float64)
tensor([-612.4498, -479.0494, -198.3229, -334.8245, -502.5964],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0334, device='cuda:0', dtype=torch.float64)
tensor([-618.3730, -485.9436, -199.0254, -337.9099, -507.9796],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0350, device='cuda:0', dtype=torch.float64)
tensor([-624.5651, -492.9908, -199.8088, -341.2418, -513.6825],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0297, device='cuda:0', dtype=torch.float64)
tensor([-629.6719, -498.5478, -200.4996, -344.0232, -518.4119],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0295, device='cuda:0', dtype=torch.float64)
tensor([-635.0039, -504.6084, -201.1901, -346.8876, -523.3770],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0360, device='cuda:0', dtype=torch.float64)
tensor([-641.2314, -511.2597, -202.1548, -349.8739, -528.8701],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0378, device='cuda:0', dtype=torch.float64)
tensor([-647.0469, -517.1962, -203.3044, -352.4752, -534.0350],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0303, device='cuda:0', dtype=torch.float64)
tensor([-651.9414, -521.9901, -204.4931, -354.6159, -538.4154],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0345, device='cuda:0', dtype=torch.float64)
tensor([-656.0199, -525.9133, -205.7030, -356.3125, -542.2291],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0335, device='cuda:0', dtype=torch.float64)
tensor([-660.6800, -530.6922, -207.0498, -358.2216, -546.6898],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0287, device='cuda:0', dtype=torch.float64)
tensor([-665.5237, -535.8007, -208.4184, -360.2899, -551.3996],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0349, device='cuda:0', dtype=torch.float64)
tensor([-669.9845, -540.3352, -209.7775, -362.2711, -555.7887],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0273, device='cuda:0', dtype=torch.float64)
tensor([-674.1991, -544.5444, -211.1133, -364.1357, -559.9185],
       device='cuda:0', dtype=torch.float64)
Saved results to /home/idrissm/projects/def-mh541-ab/idrissm/neighborVCA/runs/results/tsp/tsp64_/home/idrissm/projects/def-mh541-ab/idrissm/neighborVCA/scripts/VCA/tsp/configHVCA64.json_20250925_034210.csv
rnn.0.0.weight tensor(0.3170, device='cuda:0', dtype=torch.float64)
tensor([-1.6865, -2.6073, -2.8708, -3.3009, -3.1848], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(5.0354, device='cuda:0', dtype=torch.float64)
tensor([-14.4420, -45.6815, -20.3319, -43.9481, -45.2178], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(262.2607, device='cuda:0', dtype=torch.float64)
tensor([-11.2595, -10.9702,  -3.4619,  -7.1320,  -5.7480], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(162.0420, device='cuda:0', dtype=torch.float64)
tensor([ -9.3402, -23.5550, -18.2759, -12.7365, -11.0287], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(226.8343, device='cuda:0', dtype=torch.float64)
tensor([ -5.1013,  -7.9205, -12.8064,  -8.7364,  -6.8890], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(138.6168, device='cuda:0', dtype=torch.float64)
tensor([-2.2531, -4.4345, -3.0277, -6.9587, -3.6948], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(97.8872, device='cuda:0', dtype=torch.float64)
tensor([-2.4037, -4.9450, -3.0157, -4.2146, -3.8887], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(91.0915, device='cuda:0', dtype=torch.float64)
tensor([-2.4211, -5.1231, -3.0225, -3.8539, -4.4966], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(59.1886, device='cuda:0', dtype=torch.float64)
tensor([-2.4943, -4.3653, -2.9882, -3.5113, -4.8512], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(57.9273, device='cuda:0', dtype=torch.float64)
tensor([-2.4286, -4.9591, -2.9397, -5.2017, -4.9925], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(72.1514, device='cuda:0', dtype=torch.float64)
tensor([-2.1464, -4.5404, -2.8432, -5.4763, -5.1255], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(69.9044, device='cuda:0', dtype=torch.float64)
tensor([-1.8944, -3.4944, -2.7820, -3.8073, -4.6323], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(45.6273, device='cuda:0', dtype=torch.float64)
tensor([-1.7546, -3.2292, -2.8233, -3.9444, -4.0311], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(22.7692, device='cuda:0', dtype=torch.float64)
tensor([-1.7298, -3.6165, -2.9324, -4.2349, -3.6444], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(13.2802, device='cuda:0', dtype=torch.float64)
tensor([-1.8322, -3.8360, -3.0416, -4.4402, -3.5003], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(24.1544, device='cuda:0', dtype=torch.float64)
tensor([-2.0920, -3.5118, -3.1406, -4.4934, -3.4639], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(39.6192, device='cuda:0', dtype=torch.float64)
tensor([-1.9097, -3.1115, -3.2194, -4.2389, -3.3807], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(38.9415, device='cuda:0', dtype=torch.float64)
tensor([-1.6627, -2.8638, -3.2916, -3.8782, -3.2754], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(28.8497, device='cuda:0', dtype=torch.float64)
tensor([-1.5941, -2.7318, -3.4032, -3.6519, -3.1994], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(20.0237, device='cuda:0', dtype=torch.float64)
tensor([-1.6078, -2.7086, -3.3627, -3.4975, -3.1871], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(15.8385, device='cuda:0', dtype=torch.float64)
tensor([-1.6767, -2.7614, -3.2697, -3.3691, -3.2649], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(15.4041, device='cuda:0', dtype=torch.float64)
tensor([-1.7900, -2.8864, -3.3044, -3.2569, -3.4031], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(15.4359, device='cuda:0', dtype=torch.float64)
tensor([-1.9213, -3.0844, -3.4084, -3.1558, -3.5052], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(14.9588, device='cuda:0', dtype=torch.float64)
tensor([-2.0369, -3.2410, -3.4546, -3.0732, -3.5190], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(13.9139, device='cuda:0', dtype=torch.float64)
tensor([-2.1240, -3.2302, -3.3945, -3.0197, -3.4987], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(12.6348, device='cuda:0', dtype=torch.float64)
tensor([-2.1827, -3.1647, -3.2818, -2.9915, -3.4804], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(13.1657, device='cuda:0', dtype=torch.float64)
tensor([-2.2095, -3.1064, -3.1741, -2.9814, -3.4354], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(13.3974, device='cuda:0', dtype=torch.float64)
tensor([-2.1990, -3.0383, -3.0922, -2.9906, -3.3552], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(12.9393, device='cuda:0', dtype=torch.float64)
tensor([-2.1440, -2.9701, -3.0399, -3.0218, -3.2637], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(11.6203, device='cuda:0', dtype=torch.float64)
tensor([-2.0476, -2.9381, -3.0161, -3.0701, -3.1803], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(9.6718, device='cuda:0', dtype=torch.float64)
tensor([-1.9333, -2.9660, -3.0141, -3.1251, -3.1109], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(7.6254, device='cuda:0', dtype=torch.float64)
tensor([-1.8280, -3.0012, -3.0245, -3.1786, -3.0596], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(6.2626, device='cuda:0', dtype=torch.float64)
tensor([-1.7453, -2.9537, -3.0370, -3.2237, -3.0310], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(7.1040, device='cuda:0', dtype=torch.float64)
tensor([-1.6882, -2.8312, -3.0429, -3.2541, -3.0265], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(8.1643, device='cuda:0', dtype=torch.float64)
tensor([-1.6565, -2.7125, -3.0375, -3.2656, -3.0439], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(8.1240, device='cuda:0', dtype=torch.float64)
tensor([-1.6483, -2.6326, -3.0191, -3.2576, -3.0794], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(7.1996, device='cuda:0', dtype=torch.float64)
tensor([-1.6612, -2.5884, -2.9896, -3.2335, -3.1295], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(5.9523, device='cuda:0', dtype=torch.float64)
tensor([-1.6915, -2.5731, -2.9536, -3.1996, -3.1899], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(4.8100, device='cuda:0', dtype=torch.float64)
tensor([-1.7345, -2.5801, -2.9151, -3.1636, -3.2538], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(3.9411, device='cuda:0', dtype=torch.float64)
tensor([-1.7837, -2.6034, -2.8780, -3.1321, -3.3125], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(3.6622, device='cuda:0', dtype=torch.float64)
tensor([-1.8322, -2.6357, -2.8447, -3.1092, -3.3570], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(4.2902, device='cuda:0', dtype=torch.float64)
tensor([-1.8727, -2.6688, -2.8159, -3.0954, -3.3808], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(4.9027, device='cuda:0', dtype=torch.float64)
tensor([-1.9001, -2.6942, -2.7908, -3.0884, -3.3817], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(5.0499, device='cuda:0', dtype=torch.float64)
tensor([-1.9121, -2.7068, -2.7695, -3.0862, -3.3634], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(4.7272, device='cuda:0', dtype=torch.float64)
tensor([-1.9096, -2.7065, -2.7531, -3.0881, -3.3333], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(4.0983, device='cuda:0', dtype=torch.float64)
tensor([-1.8963, -2.6982, -2.7430, -3.0943, -3.2992], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(3.4097, device='cuda:0', dtype=torch.float64)
tensor([-1.8771, -2.6885, -2.7392, -3.1050, -3.2674], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.8790, device='cuda:0', dtype=torch.float64)
tensor([-1.8563, -2.6797, -2.7405, -3.1193, -3.2420], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.8708, device='cuda:0', dtype=torch.float64)
tensor([-1.8376, -2.6725, -2.7454, -3.1356, -3.2249], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.9068, device='cuda:0', dtype=torch.float64)
tensor([-1.8234, -2.6669, -2.7524, -3.1514, -3.2167], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.8636, device='cuda:0', dtype=torch.float64)
tensor([-1.8145, -2.6633, -2.7596, -3.1650, -3.2164], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.7652, device='cuda:0', dtype=torch.float64)
tensor([-1.8105, -2.6616, -2.7654, -3.1751, -3.2216], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.6064, device='cuda:0', dtype=torch.float64)
tensor([-1.8102, -2.6617, -2.7680, -3.1811, -3.2297], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.4435, device='cuda:0', dtype=torch.float64)
tensor([-1.8119, -2.6632, -2.7667, -3.1831, -3.2378], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.4075, device='cuda:0', dtype=torch.float64)
tensor([-1.8139, -2.6654, -2.7621, -3.1820, -3.2437], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.4427, device='cuda:0', dtype=torch.float64)
tensor([-1.8149, -2.6672, -2.7556, -3.1788, -3.2463], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.4285, device='cuda:0', dtype=torch.float64)
tensor([-1.8140, -2.6678, -2.7496, -3.1752, -3.2453], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.2656, device='cuda:0', dtype=torch.float64)
tensor([-1.8110, -2.6663, -2.7462, -3.1727, -3.2413], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0464, device='cuda:0', dtype=torch.float64)
tensor([-1.8059, -2.6624, -2.7468, -3.1728, -3.2357], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9019, device='cuda:0', dtype=torch.float64)
tensor([-1.7992, -2.6561, -2.7521, -3.1760, -3.2299], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9010, device='cuda:0', dtype=torch.float64)
tensor([-1.7915, -2.6477, -2.7614, -3.1820, -3.2255], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9331, device='cuda:0', dtype=torch.float64)
tensor([-1.7839, -2.6379, -2.7736, -3.1899, -3.2234], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8985, device='cuda:0', dtype=torch.float64)
tensor([-1.7772, -2.6278, -2.7873, -3.1987, -3.2239], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8069, device='cuda:0', dtype=torch.float64)
tensor([-1.7729, -2.6187, -2.8011, -3.2074, -3.2268], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7446, device='cuda:0', dtype=torch.float64)
tensor([-1.7715, -2.6115, -2.8135, -3.2151, -3.2312], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7125, device='cuda:0', dtype=torch.float64)
tensor([-1.7733, -2.6071, -2.8235, -3.2209, -3.2356], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6761, device='cuda:0', dtype=torch.float64)
tensor([-1.7779, -2.6056, -2.8300, -3.2242, -3.2389], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6223, device='cuda:0', dtype=torch.float64)
tensor([-1.7847, -2.6071, -2.8325, -3.2242, -3.2403], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4866, device='cuda:0', dtype=torch.float64)
tensor([-1.7931, -2.6111, -2.8309, -3.2205, -3.2398], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3380, device='cuda:0', dtype=torch.float64)
tensor([-1.8025, -2.6172, -2.8258, -3.2133, -3.2378], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2010, device='cuda:0', dtype=torch.float64)
tensor([-1.8124, -2.6246, -2.8181, -3.2031, -3.2351], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2089, device='cuda:0', dtype=torch.float64)
tensor([-1.8222, -2.6324, -2.8090, -3.1909, -3.2326], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2306, device='cuda:0', dtype=torch.float64)
tensor([-1.8314, -2.6397, -2.7998, -3.1780, -3.2309], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2581, device='cuda:0', dtype=torch.float64)
tensor([-1.8393, -2.6455, -2.7916, -3.1654, -3.2303], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2641, device='cuda:0', dtype=torch.float64)
tensor([-1.8453, -2.6493, -2.7855, -3.1540, -3.2307], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2072, device='cuda:0', dtype=torch.float64)
tensor([-1.8487, -2.6507, -2.7815, -3.1445, -3.2315], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0955, device='cuda:0', dtype=torch.float64)
tensor([-1.8491, -2.6496, -2.7798, -3.1376, -3.2319], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0014, device='cuda:0', dtype=torch.float64)
tensor([-1.8463, -2.6462, -2.7800, -3.1335, -3.2311], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0184, device='cuda:0', dtype=torch.float64)
tensor([-1.8406, -2.6410, -2.7816, -3.1320, -3.2285], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0352, device='cuda:0', dtype=torch.float64)
tensor([-1.8327, -2.6346, -2.7838, -3.1332, -3.2238], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0157, device='cuda:0', dtype=torch.float64)
tensor([-1.8234, -2.6277, -2.7863, -3.1364, -3.2173], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9762, device='cuda:0', dtype=torch.float64)
tensor([-1.8138, -2.6211, -2.7885, -3.1411, -3.2097], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9056, device='cuda:0', dtype=torch.float64)
tensor([-1.8052, -2.6154, -2.7905, -3.1468, -3.2021], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8271, device='cuda:0', dtype=torch.float64)
tensor([-1.7984, -2.6111, -2.7921, -3.1528, -3.1954], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8022, device='cuda:0', dtype=torch.float64)
tensor([-1.7941, -2.6084, -2.7932, -3.1582, -3.1906], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8472, device='cuda:0', dtype=torch.float64)
tensor([-1.7926, -2.6075, -2.7939, -3.1626, -3.1880], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8645, device='cuda:0', dtype=torch.float64)
tensor([-1.7938, -2.6083, -2.7941, -3.1656, -3.1879], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8523, device='cuda:0', dtype=torch.float64)
tensor([-1.7971, -2.6104, -2.7940, -3.1672, -3.1897], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8139, device='cuda:0', dtype=torch.float64)
tensor([-1.8021, -2.6137, -2.7933, -3.1670, -3.1926], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7450, device='cuda:0', dtype=torch.float64)
tensor([-1.8078, -2.6177, -2.7920, -3.1654, -3.1957], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6944, device='cuda:0', dtype=torch.float64)
tensor([-1.8138, -2.6223, -2.7904, -3.1629, -3.1986], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6877, device='cuda:0', dtype=torch.float64)
tensor([-1.8191, -2.6268, -2.7885, -3.1596, -3.2001], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6963, device='cuda:0', dtype=torch.float64)
tensor([-1.8233, -2.6312, -2.7863, -3.1560, -3.2002], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6996, device='cuda:0', dtype=torch.float64)
tensor([-1.8262, -2.6351, -2.7842, -3.1525, -3.1989], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6896, device='cuda:0', dtype=torch.float64)
tensor([-1.8279, -2.6384, -2.7822, -3.1496, -3.1968], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6872, device='cuda:0', dtype=torch.float64)
tensor([-1.8281, -2.6409, -2.7808, -3.1476, -3.1941], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6873, device='cuda:0', dtype=torch.float64)
tensor([-1.8272, -2.6426, -2.7801, -3.1467, -3.1913], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6808, device='cuda:0', dtype=torch.float64)
tensor([-1.8255, -2.6435, -2.7800, -3.1469, -3.1889], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6420, device='cuda:0', dtype=torch.float64)
tensor([-1.8230, -2.6438, -2.7806, -3.1479, -3.1865], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6049, device='cuda:0', dtype=torch.float64)
tensor([-1.8201, -2.6435, -2.7815, -3.1494, -3.1847], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5820, device='cuda:0', dtype=torch.float64)
tensor([-1.8171, -2.6429, -2.7827, -3.1512, -3.1830], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5975, device='cuda:0', dtype=torch.float64)
tensor([-1.8141, -2.6420, -2.7840, -3.1532, -3.1815], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5899, device='cuda:0', dtype=torch.float64)
tensor([-1.8113, -2.6412, -2.7851, -3.1548, -3.1802], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5977, device='cuda:0', dtype=torch.float64)
tensor([-1.8090, -2.6404, -2.7862, -3.1560, -3.1791], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5778, device='cuda:0', dtype=torch.float64)
tensor([-1.8076, -2.6400, -2.7869, -3.1567, -3.1782], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5562, device='cuda:0', dtype=torch.float64)
tensor([-1.8071, -2.6400, -2.7873, -3.1569, -3.1780], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5677, device='cuda:0', dtype=torch.float64)
tensor([-1.8078, -2.6405, -2.7873, -3.1567, -3.1784], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5665, device='cuda:0', dtype=torch.float64)
tensor([-1.8095, -2.6414, -2.7870, -3.1561, -3.1794], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5568, device='cuda:0', dtype=torch.float64)
tensor([-1.8119, -2.6424, -2.7868, -3.1557, -3.1810], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5553, device='cuda:0', dtype=torch.float64)
tensor([-1.8145, -2.6435, -2.7866, -3.1555, -3.1829], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5477, device='cuda:0', dtype=torch.float64)
tensor([-1.8173, -2.6445, -2.7867, -3.1552, -3.1846], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5375, device='cuda:0', dtype=torch.float64)
tensor([-1.8194, -2.6452, -2.7866, -3.1551, -3.1856], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5459, device='cuda:0', dtype=torch.float64)
tensor([-1.8209, -2.6455, -2.7866, -3.1554, -3.1859], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5464, device='cuda:0', dtype=torch.float64)
tensor([-1.8213, -2.6452, -2.7867, -3.1560, -3.1852], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5359, device='cuda:0', dtype=torch.float64)
tensor([-1.8209, -2.6445, -2.7868, -3.1566, -3.1839], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5273, device='cuda:0', dtype=torch.float64)
tensor([-1.8199, -2.6435, -2.7868, -3.1574, -3.1821], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4955, device='cuda:0', dtype=torch.float64)
tensor([-1.8188, -2.6425, -2.7869, -3.1580, -3.1800], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5014, device='cuda:0', dtype=torch.float64)
tensor([-1.8179, -2.6415, -2.7873, -3.1584, -3.1783], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4976, device='cuda:0', dtype=torch.float64)
tensor([-1.8173, -2.6407, -2.7875, -3.1585, -3.1769], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4893, device='cuda:0', dtype=torch.float64)
tensor([-1.8169, -2.6399, -2.7875, -3.1581, -3.1759], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5003, device='cuda:0', dtype=torch.float64)
tensor([-1.8170, -2.6394, -2.7873, -3.1575, -3.1753], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4849, device='cuda:0', dtype=torch.float64)
tensor([-1.8173, -2.6391, -2.7871, -3.1568, -3.1751], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4715, device='cuda:0', dtype=torch.float64)
tensor([-1.8175, -2.6390, -2.7868, -3.1561, -3.1751], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4748, device='cuda:0', dtype=torch.float64)
tensor([-1.8179, -2.6391, -2.7865, -3.1555, -3.1752], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4767, device='cuda:0', dtype=torch.float64)
tensor([-1.8181, -2.6391, -2.7861, -3.1551, -3.1752], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4685, device='cuda:0', dtype=torch.float64)
tensor([-1.8180, -2.6392, -2.7857, -3.1548, -3.1749], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4745, device='cuda:0', dtype=torch.float64)
tensor([-1.8182, -2.6392, -2.7852, -3.1544, -3.1747], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4634, device='cuda:0', dtype=torch.float64)
tensor([-1.8183, -2.6392, -2.7848, -3.1540, -3.1748], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4553, device='cuda:0', dtype=torch.float64)
tensor([-1.8185, -2.6393, -2.7845, -3.1535, -3.1751], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4518, device='cuda:0', dtype=torch.float64)
tensor([-1.8187, -2.6393, -2.7843, -3.1532, -3.1756], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4553, device='cuda:0', dtype=torch.float64)
tensor([-1.8189, -2.6391, -2.7843, -3.1532, -3.1762], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4412, device='cuda:0', dtype=torch.float64)
tensor([-1.8189, -2.6387, -2.7842, -3.1532, -3.1766], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4451, device='cuda:0', dtype=torch.float64)
tensor([-1.8189, -2.6384, -2.7841, -3.1531, -3.1769], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4533, device='cuda:0', dtype=torch.float64)
tensor([-1.8189, -2.6384, -2.7839, -3.1531, -3.1767], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4374, device='cuda:0', dtype=torch.float64)
tensor([-1.8191, -2.6384, -2.7835, -3.1527, -3.1764], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4424, device='cuda:0', dtype=torch.float64)
tensor([-1.8195, -2.6383, -2.7832, -3.1524, -3.1761], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4406, device='cuda:0', dtype=torch.float64)
tensor([-1.8198, -2.6380, -2.7829, -3.1524, -3.1759], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4508, device='cuda:0', dtype=torch.float64)
tensor([-1.8198, -2.6376, -2.7827, -3.1525, -3.1754], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4324, device='cuda:0', dtype=torch.float64)
tensor([-1.8195, -2.6370, -2.7826, -3.1526, -3.1748], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4458, device='cuda:0', dtype=torch.float64)
tensor([-1.8190, -2.6367, -2.7826, -3.1528, -3.1742], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4343, device='cuda:0', dtype=torch.float64)
tensor([-1.8185, -2.6365, -2.7826, -3.1527, -3.1736], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4350, device='cuda:0', dtype=torch.float64)
tensor([-1.8177, -2.6364, -2.7826, -3.1528, -3.1730], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4352, device='cuda:0', dtype=torch.float64)
tensor([-1.8170, -2.6363, -2.7825, -3.1529, -3.1729], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4443, device='cuda:0', dtype=torch.float64)
tensor([-1.8168, -2.6367, -2.7822, -3.1529, -3.1729], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4193, device='cuda:0', dtype=torch.float64)
tensor([-1.8170, -2.6373, -2.7818, -3.1523, -3.1733], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4160, device='cuda:0', dtype=torch.float64)
tensor([-1.8174, -2.6379, -2.7815, -3.1516, -3.1740], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4116, device='cuda:0', dtype=torch.float64)
tensor([-1.8180, -2.6385, -2.7813, -3.1508, -3.1746], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4187, device='cuda:0', dtype=torch.float64)
tensor([-1.8188, -2.6392, -2.7812, -3.1501, -3.1749], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4193, device='cuda:0', dtype=torch.float64)
tensor([-1.8195, -2.6398, -2.7812, -3.1494, -3.1750], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4112, device='cuda:0', dtype=torch.float64)
tensor([-1.8201, -2.6402, -2.7813, -3.1487, -3.1748], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4301, device='cuda:0', dtype=torch.float64)
tensor([-1.8206, -2.6406, -2.7814, -3.1481, -3.1750], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4109, device='cuda:0', dtype=torch.float64)
tensor([-1.8210, -2.6409, -2.7818, -3.1478, -3.1751], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4046, device='cuda:0', dtype=torch.float64)
tensor([-1.8213, -2.6410, -2.7822, -3.1478, -3.1750], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4163, device='cuda:0', dtype=torch.float64)
tensor([-1.8212, -2.6410, -2.7825, -3.1480, -3.1745], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3892, device='cuda:0', dtype=torch.float64)
tensor([-1.8209, -2.6406, -2.7826, -3.1488, -3.1742], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4115, device='cuda:0', dtype=torch.float64)
tensor([-1.8204, -2.6398, -2.7826, -3.1497, -3.1737], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4082, device='cuda:0', dtype=torch.float64)
tensor([-1.8195, -2.6390, -2.7827, -3.1506, -3.1731], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4064, device='cuda:0', dtype=torch.float64)
tensor([-1.8187, -2.6380, -2.7824, -3.1515, -3.1728], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4090, device='cuda:0', dtype=torch.float64)
tensor([-1.8179, -2.6372, -2.7820, -3.1523, -3.1726], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4209, device='cuda:0', dtype=torch.float64)
tensor([-1.8174, -2.6364, -2.7812, -3.1529, -3.1725], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4125, device='cuda:0', dtype=torch.float64)
tensor([-1.8175, -2.6362, -2.7803, -3.1530, -3.1725], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3968, device='cuda:0', dtype=torch.float64)
tensor([-1.8179, -2.6363, -2.7792, -3.1525, -3.1726], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4210, device='cuda:0', dtype=torch.float64)
tensor([-1.8184, -2.6366, -2.7784, -3.1519, -3.1727], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3869, device='cuda:0', dtype=torch.float64)
tensor([-1.8186, -2.6368, -2.7778, -3.1514, -3.1726], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3835, device='cuda:0', dtype=torch.float64)
tensor([-1.8184, -2.6372, -2.7777, -3.1511, -3.1727], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3957, device='cuda:0', dtype=torch.float64)
tensor([-1.8183, -2.6375, -2.7779, -3.1509, -3.1728], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4021, device='cuda:0', dtype=torch.float64)
tensor([-1.8184, -2.6376, -2.7781, -3.1506, -3.1727], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4049, device='cuda:0', dtype=torch.float64)
tensor([-1.8184, -2.6375, -2.7783, -3.1500, -3.1722], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3920, device='cuda:0', dtype=torch.float64)
tensor([-1.8184, -2.6372, -2.7786, -3.1494, -3.1712], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4053, device='cuda:0', dtype=torch.float64)
tensor([-1.8184, -2.6371, -2.7790, -3.1487, -3.1699], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4035, device='cuda:0', dtype=torch.float64)
tensor([-1.8187, -2.6373, -2.7795, -3.1480, -3.1692], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3866, device='cuda:0', dtype=torch.float64)
tensor([-1.8191, -2.6376, -2.7798, -3.1476, -3.1688], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3889, device='cuda:0', dtype=torch.float64)
tensor([-1.8201, -2.6374, -2.7802, -3.1473, -3.1686], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3986, device='cuda:0', dtype=torch.float64)
tensor([-1.8207, -2.6373, -2.7808, -3.1469, -3.1684], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4011, device='cuda:0', dtype=torch.float64)
tensor([-1.8210, -2.6369, -2.7813, -3.1468, -3.1684], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3724, device='cuda:0', dtype=torch.float64)
tensor([-1.8217, -2.6367, -2.7816, -3.1472, -3.1693], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3890, device='cuda:0', dtype=torch.float64)
tensor([-1.8219, -2.6366, -2.7815, -3.1481, -3.1694], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3799, device='cuda:0', dtype=torch.float64)
tensor([-1.8216, -2.6366, -2.7814, -3.1492, -3.1695], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3798, device='cuda:0', dtype=torch.float64)
tensor([-1.8211, -2.6365, -2.7814, -3.1504, -3.1693], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3675, device='cuda:0', dtype=torch.float64)
tensor([-1.8206, -2.6365, -2.7814, -3.1513, -3.1688], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3818, device='cuda:0', dtype=torch.float64)
tensor([-1.8197, -2.6371, -2.7813, -3.1519, -3.1678], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3807, device='cuda:0', dtype=torch.float64)
tensor([-1.8190, -2.6376, -2.7812, -3.1523, -3.1669], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3899, device='cuda:0', dtype=torch.float64)
tensor([-1.8188, -2.6378, -2.7810, -3.1524, -3.1666], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3915, device='cuda:0', dtype=torch.float64)
tensor([-1.8188, -2.6376, -2.7812, -3.1522, -3.1670], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3817, device='cuda:0', dtype=torch.float64)
tensor([-1.8185, -2.6371, -2.7815, -3.1521, -3.1675], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3783, device='cuda:0', dtype=torch.float64)
tensor([-1.8182, -2.6367, -2.7814, -3.1517, -3.1677], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3678, device='cuda:0', dtype=torch.float64)
tensor([-1.8178, -2.6360, -2.7812, -3.1516, -3.1678], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4038, device='cuda:0', dtype=torch.float64)
tensor([-1.8178, -2.6353, -2.7809, -3.1512, -3.1684], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3570, device='cuda:0', dtype=torch.float64)
tensor([-1.8178, -2.6348, -2.7805, -3.1509, -3.1687], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3978, device='cuda:0', dtype=torch.float64)
tensor([-1.8180, -2.6348, -2.7802, -3.1506, -3.1689], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3832, device='cuda:0', dtype=torch.float64)
tensor([-1.8185, -2.6349, -2.7797, -3.1498, -3.1688], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3747, device='cuda:0', dtype=torch.float64)
tensor([-1.8191, -2.6351, -2.7791, -3.1489, -3.1686], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3867, device='cuda:0', dtype=torch.float64)
tensor([-1.8200, -2.6355, -2.7784, -3.1481, -3.1683], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3974, device='cuda:0', dtype=torch.float64)
tensor([-1.8211, -2.6362, -2.7784, -3.1472, -3.1682], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3756, device='cuda:0', dtype=torch.float64)
tensor([-1.8223, -2.6370, -2.7786, -3.1466, -3.1689], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3729, device='cuda:0', dtype=torch.float64)
tensor([-1.8235, -2.6378, -2.7787, -3.1463, -3.1690], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3593, device='cuda:0', dtype=torch.float64)
tensor([-1.8239, -2.6386, -2.7787, -3.1464, -3.1686], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3972, device='cuda:0', dtype=torch.float64)
tensor([-1.8238, -2.6391, -2.7786, -3.1467, -3.1679], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3813, device='cuda:0', dtype=torch.float64)
tensor([-1.8235, -2.6393, -2.7784, -3.1475, -3.1672], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3737, device='cuda:0', dtype=torch.float64)
tensor([-1.8232, -2.6395, -2.7782, -3.1479, -3.1666], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3828, device='cuda:0', dtype=torch.float64)
tensor([-1.8228, -2.6396, -2.7781, -3.1482, -3.1664], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3657, device='cuda:0', dtype=torch.float64)
tensor([-1.8229, -2.6393, -2.7782, -3.1486, -3.1664], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3661, device='cuda:0', dtype=torch.float64)
tensor([-1.8229, -2.6389, -2.7783, -3.1482, -3.1667], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3845, device='cuda:0', dtype=torch.float64)
tensor([-1.8225, -2.6385, -2.7783, -3.1481, -3.1667], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3878, device='cuda:0', dtype=torch.float64)
tensor([-1.8216, -2.6377, -2.7788, -3.1482, -3.1666], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3746, device='cuda:0', dtype=torch.float64)
tensor([-1.8206, -2.6375, -2.7793, -3.1481, -3.1665], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3605, device='cuda:0', dtype=torch.float64)
tensor([-1.8202, -2.6374, -2.7794, -3.1477, -3.1661], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3658, device='cuda:0', dtype=torch.float64)
tensor([-1.8200, -2.6374, -2.7791, -3.1471, -3.1652], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3857, device='cuda:0', dtype=torch.float64)
tensor([-1.8196, -2.6380, -2.7781, -3.1465, -3.1639], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3709, device='cuda:0', dtype=torch.float64)
tensor([-1.8188, -2.6381, -2.7770, -3.1462, -3.1621], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4000, device='cuda:0', dtype=torch.float64)
tensor([-1.8179, -2.6378, -2.7760, -3.1465, -3.1609], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3678, device='cuda:0', dtype=torch.float64)
tensor([-1.8180, -2.6378, -2.7747, -3.1468, -3.1608], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3852, device='cuda:0', dtype=torch.float64)
tensor([-1.8185, -2.6377, -2.7738, -3.1469, -3.1612], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3856, device='cuda:0', dtype=torch.float64)
tensor([-1.8199, -2.6377, -2.7732, -3.1471, -3.1629], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3674, device='cuda:0', dtype=torch.float64)
tensor([-1.8217, -2.6375, -2.7725, -3.1473, -3.1647], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3699, device='cuda:0', dtype=torch.float64)
tensor([-1.8233, -2.6372, -2.7720, -3.1474, -3.1663], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3771, device='cuda:0', dtype=torch.float64)
tensor([-1.8247, -2.6367, -2.7718, -3.1473, -3.1670], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3985, device='cuda:0', dtype=torch.float64)
tensor([-1.8252, -2.6356, -2.7719, -3.1471, -3.1668], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3743, device='cuda:0', dtype=torch.float64)
tensor([-1.8249, -2.6344, -2.7724, -3.1466, -3.1657], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3818, device='cuda:0', dtype=torch.float64)
tensor([-1.8243, -2.6336, -2.7731, -3.1463, -3.1647], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3783, device='cuda:0', dtype=torch.float64)
tensor([-1.8239, -2.6331, -2.7737, -3.1459, -3.1644], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3820, device='cuda:0', dtype=torch.float64)
tensor([-1.8235, -2.6331, -2.7744, -3.1457, -3.1648], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3896, device='cuda:0', dtype=torch.float64)
tensor([-1.8236, -2.6339, -2.7748, -3.1453, -3.1658], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3675, device='cuda:0', dtype=torch.float64)
tensor([-1.8237, -2.6353, -2.7751, -3.1449, -3.1669], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3784, device='cuda:0', dtype=torch.float64)
tensor([-1.8234, -2.6361, -2.7752, -3.1447, -3.1677], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3589, device='cuda:0', dtype=torch.float64)
tensor([-1.8228, -2.6365, -2.7752, -3.1448, -3.1678], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3811, device='cuda:0', dtype=torch.float64)
tensor([-1.8227, -2.6373, -2.7750, -3.1446, -3.1677], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3655, device='cuda:0', dtype=torch.float64)
tensor([-1.8225, -2.6381, -2.7744, -3.1441, -3.1669], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3568, device='cuda:0', dtype=torch.float64)
tensor([-1.8220, -2.6384, -2.7741, -3.1438, -3.1662], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3685, device='cuda:0', dtype=torch.float64)
tensor([-1.8219, -2.6383, -2.7739, -3.1437, -3.1659], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3775, device='cuda:0', dtype=torch.float64)
tensor([-1.8213, -2.6377, -2.7741, -3.1443, -3.1652], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3656, device='cuda:0', dtype=torch.float64)
tensor([-1.8209, -2.6363, -2.7753, -3.1454, -3.1645], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3699, device='cuda:0', dtype=torch.float64)
tensor([-1.8203, -2.6344, -2.7765, -3.1465, -3.1636], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3484, device='cuda:0', dtype=torch.float64)
tensor([-1.8195, -2.6325, -2.7775, -3.1475, -3.1630], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3805, device='cuda:0', dtype=torch.float64)
tensor([-1.8187, -2.6312, -2.7782, -3.1483, -3.1625], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3703, device='cuda:0', dtype=torch.float64)
tensor([-1.8189, -2.6305, -2.7783, -3.1485, -3.1623], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3612, device='cuda:0', dtype=torch.float64)
tensor([-1.8196, -2.6305, -2.7782, -3.1484, -3.1625], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3883, device='cuda:0', dtype=torch.float64)
tensor([-1.8204, -2.6307, -2.7777, -3.1480, -3.1626], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3794, device='cuda:0', dtype=torch.float64)
tensor([-1.8212, -2.6312, -2.7767, -3.1476, -3.1618], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3802, device='cuda:0', dtype=torch.float64)
tensor([-1.8218, -2.6318, -2.7750, -3.1470, -3.1609], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4017, device='cuda:0', dtype=torch.float64)
tensor([-1.8225, -2.6329, -2.7740, -3.1459, -3.1606], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4412, device='cuda:0', dtype=torch.float64)
tensor([-1.8228, -2.6337, -2.7733, -3.1452, -3.1593], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3807, device='cuda:0', dtype=torch.float64)
tensor([-1.8235, -2.6348, -2.7735, -3.1448, -3.1590], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3559, device='cuda:0', dtype=torch.float64)
tensor([-1.8237, -2.6357, -2.7739, -3.1448, -3.1588], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3647, device='cuda:0', dtype=torch.float64)
tensor([-1.8236, -2.6364, -2.7742, -3.1449, -3.1586], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3531, device='cuda:0', dtype=torch.float64)
tensor([-1.8236, -2.6370, -2.7746, -3.1446, -3.1587], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3899, device='cuda:0', dtype=torch.float64)
tensor([-1.8243, -2.6378, -2.7749, -3.1440, -3.1594], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3903, device='cuda:0', dtype=torch.float64)
tensor([-1.8248, -2.6381, -2.7753, -3.1439, -3.1605], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3506, device='cuda:0', dtype=torch.float64)
tensor([-1.8247, -2.6376, -2.7759, -3.1437, -3.1616], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3340, device='cuda:0', dtype=torch.float64)
tensor([-1.8242, -2.6367, -2.7760, -3.1434, -3.1621], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3710, device='cuda:0', dtype=torch.float64)
tensor([-1.8233, -2.6354, -2.7760, -3.1436, -3.1615], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3753, device='cuda:0', dtype=torch.float64)
tensor([-1.8225, -2.6342, -2.7758, -3.1435, -3.1611], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4073, device='cuda:0', dtype=torch.float64)
tensor([-1.8223, -2.6333, -2.7752, -3.1430, -3.1611], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3678, device='cuda:0', dtype=torch.float64)
tensor([-1.8222, -2.6327, -2.7746, -3.1425, -3.1616], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3938, device='cuda:0', dtype=torch.float64)
tensor([-1.8227, -2.6330, -2.7737, -3.1414, -3.1629], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3769, device='cuda:0', dtype=torch.float64)
tensor([-1.8238, -2.6338, -2.7729, -3.1402, -3.1646], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3710, device='cuda:0', dtype=torch.float64)
tensor([-1.8243, -2.6344, -2.7731, -3.1398, -3.1654], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3930, device='cuda:0', dtype=torch.float64)
tensor([-1.8238, -2.6353, -2.7739, -3.1398, -3.1657], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3841, device='cuda:0', dtype=torch.float64)
tensor([-1.8227, -2.6361, -2.7743, -3.1399, -3.1646], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3871, device='cuda:0', dtype=torch.float64)
tensor([-1.8216, -2.6364, -2.7747, -3.1404, -3.1636], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4003, device='cuda:0', dtype=torch.float64)
tensor([-1.8201, -2.6364, -2.7746, -3.1411, -3.1620], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3898, device='cuda:0', dtype=torch.float64)
tensor([-1.8195, -2.6364, -2.7748, -3.1422, -3.1614], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3938, device='cuda:0', dtype=torch.float64)
tensor([-1.8195, -2.6366, -2.7751, -3.1437, -3.1619], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4011, device='cuda:0', dtype=torch.float64)
tensor([-1.8203, -2.6370, -2.7749, -3.1453, -3.1637], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3643, device='cuda:0', dtype=torch.float64)
tensor([-1.8213, -2.6363, -2.7750, -3.1467, -3.1656], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4069, device='cuda:0', dtype=torch.float64)
tensor([-1.8223, -2.6348, -2.7754, -3.1480, -3.1662], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4711, device='cuda:0', dtype=torch.float64)
tensor([-1.8224, -2.6333, -2.7750, -3.1479, -3.1646], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3793, device='cuda:0', dtype=torch.float64)
tensor([-1.8215, -2.6314, -2.7742, -3.1475, -3.1614], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3627, device='cuda:0', dtype=torch.float64)
tensor([-1.8208, -2.6296, -2.7729, -3.1466, -3.1587], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4134, device='cuda:0', dtype=torch.float64)
tensor([-1.8212, -2.6290, -2.7713, -3.1452, -3.1581], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4163, device='cuda:0', dtype=torch.float64)
tensor([-1.8224, -2.6299, -2.7697, -3.1441, -3.1587], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3994, device='cuda:0', dtype=torch.float64)
tensor([-1.8240, -2.6319, -2.7683, -3.1428, -3.1603], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3512, device='cuda:0', dtype=torch.float64)
tensor([-1.8256, -2.6343, -2.7675, -3.1414, -3.1625], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4597, device='cuda:0', dtype=torch.float64)
tensor([-1.8270, -2.6363, -2.7673, -3.1393, -3.1634], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4405, device='cuda:0', dtype=torch.float64)
tensor([-1.8272, -2.6377, -2.7679, -3.1381, -3.1628], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3962, device='cuda:0', dtype=torch.float64)
tensor([-1.8262, -2.6382, -2.7692, -3.1374, -3.1612], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3801, device='cuda:0', dtype=torch.float64)
tensor([-1.8246, -2.6381, -2.7723, -3.1374, -3.1604], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3680, device='cuda:0', dtype=torch.float64)
tensor([-1.8230, -2.6371, -2.7753, -3.1382, -3.1598], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3500, device='cuda:0', dtype=torch.float64)
tensor([-1.8215, -2.6361, -2.7774, -3.1391, -3.1597], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3891, device='cuda:0', dtype=torch.float64)
tensor([-1.8207, -2.6352, -2.7784, -3.1409, -3.1598], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4080, device='cuda:0', dtype=torch.float64)
tensor([-1.8208, -2.6348, -2.7785, -3.1428, -3.1601], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3912, device='cuda:0', dtype=torch.float64)
tensor([-1.8220, -2.6347, -2.7772, -3.1440, -3.1610], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3632, device='cuda:0', dtype=torch.float64)
tensor([-1.8244, -2.6349, -2.7748, -3.1440, -3.1618], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4036, device='cuda:0', dtype=torch.float64)
tensor([-1.8266, -2.6346, -2.7726, -3.1436, -3.1622], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3832, device='cuda:0', dtype=torch.float64)
tensor([-1.8285, -2.6336, -2.7707, -3.1426, -3.1620], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3884, device='cuda:0', dtype=torch.float64)
tensor([-1.8293, -2.6321, -2.7698, -3.1423, -3.1613], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4072, device='cuda:0', dtype=torch.float64)
tensor([-1.8288, -2.6318, -2.7693, -3.1425, -3.1601], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3531, device='cuda:0', dtype=torch.float64)
tensor([-1.8276, -2.6315, -2.7695, -3.1435, -3.1592], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3690, device='cuda:0', dtype=torch.float64)
tensor([-1.8260, -2.6319, -2.7696, -3.1450, -3.1587], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3652, device='cuda:0', dtype=torch.float64)
tensor([-1.8237, -2.6326, -2.7701, -3.1472, -3.1577], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3764, device='cuda:0', dtype=torch.float64)
tensor([-1.8218, -2.6342, -2.7705, -3.1483, -3.1569], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3723, device='cuda:0', dtype=torch.float64)
tensor([-1.8202, -2.6357, -2.7702, -3.1492, -3.1563], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4247, device='cuda:0', dtype=torch.float64)
tensor([-1.8193, -2.6365, -2.7701, -3.1496, -3.1557], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3467, device='cuda:0', dtype=torch.float64)
tensor([-1.8187, -2.6362, -2.7706, -3.1497, -3.1551], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3809, device='cuda:0', dtype=torch.float64)
tensor([-1.8188, -2.6358, -2.7712, -3.1488, -3.1551], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3739, device='cuda:0', dtype=torch.float64)
tensor([-1.8192, -2.6351, -2.7721, -3.1473, -3.1551], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3935, device='cuda:0', dtype=torch.float64)
tensor([-1.8202, -2.6340, -2.7726, -3.1457, -3.1555], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3724, device='cuda:0', dtype=torch.float64)
tensor([-1.8217, -2.6331, -2.7732, -3.1442, -3.1573], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4030, device='cuda:0', dtype=torch.float64)
tensor([-1.8236, -2.6328, -2.7740, -3.1430, -3.1590], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3609, device='cuda:0', dtype=torch.float64)
tensor([-1.8250, -2.6321, -2.7750, -3.1428, -3.1615], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3626, device='cuda:0', dtype=torch.float64)
tensor([-1.8258, -2.6310, -2.7766, -3.1429, -3.1634], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3739, device='cuda:0', dtype=torch.float64)
tensor([-1.8271, -2.6305, -2.7781, -3.1426, -3.1655], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4131, device='cuda:0', dtype=torch.float64)
tensor([-1.8277, -2.6309, -2.7790, -3.1419, -3.1668], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3822, device='cuda:0', dtype=torch.float64)
tensor([-1.8271, -2.6306, -2.7798, -3.1417, -3.1659], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3866, device='cuda:0', dtype=torch.float64)
tensor([-1.8259, -2.6303, -2.7797, -3.1418, -3.1633], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4453, device='cuda:0', dtype=torch.float64)
tensor([-1.8247, -2.6314, -2.7785, -3.1420, -3.1609], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3994, device='cuda:0', dtype=torch.float64)
tensor([-1.8235, -2.6329, -2.7767, -3.1418, -3.1585], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3766, device='cuda:0', dtype=torch.float64)
tensor([-1.8231, -2.6351, -2.7745, -3.1412, -3.1569], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3932, device='cuda:0', dtype=torch.float64)
tensor([-1.8231, -2.6376, -2.7719, -3.1403, -3.1558], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4048, device='cuda:0', dtype=torch.float64)
tensor([-1.8236, -2.6387, -2.7700, -3.1393, -3.1557], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4053, device='cuda:0', dtype=torch.float64)
tensor([-1.8246, -2.6384, -2.7686, -3.1387, -3.1557], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4540, device='cuda:0', dtype=torch.float64)
tensor([-1.8256, -2.6372, -2.7682, -3.1386, -3.1567], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3932, device='cuda:0', dtype=torch.float64)
tensor([-1.8269, -2.6359, -2.7680, -3.1379, -3.1579], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4232, device='cuda:0', dtype=torch.float64)
tensor([-1.8278, -2.6352, -2.7676, -3.1379, -3.1586], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4415, device='cuda:0', dtype=torch.float64)
tensor([-1.8284, -2.6347, -2.7681, -3.1383, -3.1596], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3969, device='cuda:0', dtype=torch.float64)
tensor([-1.8280, -2.6344, -2.7679, -3.1394, -3.1594], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3849, device='cuda:0', dtype=torch.float64)
tensor([-1.8277, -2.6344, -2.7678, -3.1406, -3.1594], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3895, device='cuda:0', dtype=torch.float64)
tensor([-1.8274, -2.6339, -2.7685, -3.1421, -3.1597], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4439, device='cuda:0', dtype=torch.float64)
tensor([-1.8272, -2.6339, -2.7702, -3.1441, -3.1610], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3616, device='cuda:0', dtype=torch.float64)
tensor([-1.8262, -2.6336, -2.7719, -3.1460, -3.1616], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3835, device='cuda:0', dtype=torch.float64)
tensor([-1.8241, -2.6333, -2.7732, -3.1474, -3.1602], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4166, device='cuda:0', dtype=torch.float64)
tensor([-1.8213, -2.6325, -2.7736, -3.1477, -3.1577], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3963, device='cuda:0', dtype=torch.float64)
tensor([-1.8197, -2.6325, -2.7729, -3.1470, -3.1554], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3727, device='cuda:0', dtype=torch.float64)
tensor([-1.8193, -2.6324, -2.7712, -3.1455, -3.1542], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4002, device='cuda:0', dtype=torch.float64)
tensor([-1.8201, -2.6336, -2.7690, -3.1430, -3.1549], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3811, device='cuda:0', dtype=torch.float64)
tensor([-1.8223, -2.6355, -2.7666, -3.1408, -3.1571], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4335, device='cuda:0', dtype=torch.float64)
tensor([-1.8245, -2.6367, -2.7646, -3.1397, -3.1599], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3868, device='cuda:0', dtype=torch.float64)
tensor([-1.8262, -2.6371, -2.7625, -3.1393, -3.1623], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4099, device='cuda:0', dtype=torch.float64)
tensor([-1.8269, -2.6366, -2.7616, -3.1387, -3.1636], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4026, device='cuda:0', dtype=torch.float64)
tensor([-1.8262, -2.6348, -2.7621, -3.1393, -3.1638], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3924, device='cuda:0', dtype=torch.float64)
tensor([-1.8246, -2.6329, -2.7636, -3.1405, -3.1641], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4199, device='cuda:0', dtype=torch.float64)
tensor([-1.8234, -2.6311, -2.7650, -3.1419, -3.1637], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4208, device='cuda:0', dtype=torch.float64)
tensor([-1.8229, -2.6306, -2.7658, -3.1434, -3.1640], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4483, device='cuda:0', dtype=torch.float64)
tensor([-1.8240, -2.6317, -2.7660, -3.1441, -3.1647], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4140, device='cuda:0', dtype=torch.float64)
tensor([-1.8255, -2.6334, -2.7650, -3.1434, -3.1642], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3957, device='cuda:0', dtype=torch.float64)
tensor([-1.8261, -2.6348, -2.7638, -3.1419, -3.1615], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3781, device='cuda:0', dtype=torch.float64)
tensor([-1.8266, -2.6358, -2.7632, -3.1399, -3.1586], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4315, device='cuda:0', dtype=torch.float64)
tensor([-1.8283, -2.6359, -2.7639, -3.1372, -3.1571], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4181, device='cuda:0', dtype=torch.float64)
tensor([-1.8295, -2.6357, -2.7659, -3.1360, -3.1561], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4228, device='cuda:0', dtype=torch.float64)
tensor([-1.8284, -2.6341, -2.7677, -3.1370, -3.1537], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3958, device='cuda:0', dtype=torch.float64)
tensor([-1.8261, -2.6314, -2.7693, -3.1396, -3.1517], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4314, device='cuda:0', dtype=torch.float64)
tensor([-1.8237, -2.6278, -2.7714, -3.1437, -3.1519], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4457, device='cuda:0', dtype=torch.float64)
tensor([-1.8213, -2.6253, -2.7727, -3.1476, -3.1538], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4774, device='cuda:0', dtype=torch.float64)
tensor([-1.8193, -2.6235, -2.7735, -3.1507, -3.1559], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3750, device='cuda:0', dtype=torch.float64)
tensor([-1.8185, -2.6227, -2.7731, -3.1525, -3.1576], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4837, device='cuda:0', dtype=torch.float64)
tensor([-1.8192, -2.6235, -2.7713, -3.1523, -3.1586], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4183, device='cuda:0', dtype=torch.float64)
tensor([-1.8210, -2.6248, -2.7695, -3.1511, -3.1583], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4793, device='cuda:0', dtype=torch.float64)
tensor([-1.8245, -2.6263, -2.7674, -3.1489, -3.1593], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4876, device='cuda:0', dtype=torch.float64)
tensor([-1.8299, -2.6281, -2.7667, -3.1463, -3.1622], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4487, device='cuda:0', dtype=torch.float64)
tensor([-1.8346, -2.6297, -2.7677, -3.1449, -3.1655], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4415, device='cuda:0', dtype=torch.float64)
tensor([-1.8381, -2.6322, -2.7695, -3.1440, -3.1682], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4325, device='cuda:0', dtype=torch.float64)
tensor([-1.8381, -2.6339, -2.7710, -3.1444, -3.1678], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4431, device='cuda:0', dtype=torch.float64)
tensor([-1.8353, -2.6343, -2.7719, -3.1459, -3.1643], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4983, device='cuda:0', dtype=torch.float64)
tensor([-1.8294, -2.6333, -2.7736, -3.1472, -3.1578], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4589, device='cuda:0', dtype=torch.float64)
tensor([-1.8229, -2.6319, -2.7738, -3.1478, -3.1507], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4708, device='cuda:0', dtype=torch.float64)
tensor([-1.8187, -2.6316, -2.7733, -3.1458, -3.1458], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4848, device='cuda:0', dtype=torch.float64)
tensor([-1.8165, -2.6313, -2.7720, -3.1417, -3.1426], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4852, device='cuda:0', dtype=torch.float64)
tensor([-1.8186, -2.6329, -2.7689, -3.1363, -3.1426], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4164, device='cuda:0', dtype=torch.float64)
tensor([-1.8231, -2.6352, -2.7651, -3.1306, -3.1445], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4424, device='cuda:0', dtype=torch.float64)
tensor([-1.8278, -2.6394, -2.7619, -3.1270, -3.1487], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4453, device='cuda:0', dtype=torch.float64)
tensor([-1.8322, -2.6431, -2.7604, -3.1255, -3.1540], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5131, device='cuda:0', dtype=torch.float64)
tensor([-1.8344, -2.6458, -2.7592, -3.1273, -3.1589], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4400, device='cuda:0', dtype=torch.float64)
tensor([-1.8335, -2.6462, -2.7591, -3.1321, -3.1609], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3974, device='cuda:0', dtype=torch.float64)
tensor([-1.8315, -2.6443, -2.7604, -3.1378, -3.1613], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3845, device='cuda:0', dtype=torch.float64)
tensor([-1.8290, -2.6412, -2.7622, -3.1436, -3.1603], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4856, device='cuda:0', dtype=torch.float64)
tensor([-1.8273, -2.6380, -2.7654, -3.1482, -3.1598], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4281, device='cuda:0', dtype=torch.float64)
tensor([-1.8255, -2.6343, -2.7685, -3.1520, -3.1587], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4519, device='cuda:0', dtype=torch.float64)
tensor([-1.8240, -2.6311, -2.7701, -3.1534, -3.1567], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4613, device='cuda:0', dtype=torch.float64)
tensor([-1.8243, -2.6285, -2.7715, -3.1533, -3.1559], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4198, device='cuda:0', dtype=torch.float64)
tensor([-1.8261, -2.6274, -2.7709, -3.1504, -3.1558], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3995, device='cuda:0', dtype=torch.float64)
tensor([-1.8270, -2.6268, -2.7712, -3.1473, -3.1557], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5003, device='cuda:0', dtype=torch.float64)
tensor([-1.8263, -2.6263, -2.7714, -3.1439, -3.1532], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4055, device='cuda:0', dtype=torch.float64)
tensor([-1.8258, -2.6275, -2.7714, -3.1398, -3.1511], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5241, device='cuda:0', dtype=torch.float64)
tensor([-1.8247, -2.6305, -2.7708, -3.1352, -3.1500], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4256, device='cuda:0', dtype=torch.float64)
tensor([-1.8236, -2.6333, -2.7700, -3.1318, -3.1497], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4515, device='cuda:0', dtype=torch.float64)
tensor([-1.8237, -2.6358, -2.7692, -3.1290, -3.1513], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5040, device='cuda:0', dtype=torch.float64)
tensor([-1.8242, -2.6390, -2.7689, -3.1287, -3.1544], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4246, device='cuda:0', dtype=torch.float64)
tensor([-1.8245, -2.6413, -2.7689, -3.1289, -3.1568], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4913, device='cuda:0', dtype=torch.float64)
tensor([-1.8233, -2.6409, -2.7687, -3.1317, -3.1564], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4617, device='cuda:0', dtype=torch.float64)
tensor([-1.8214, -2.6380, -2.7686, -3.1348, -3.1548], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5296, device='cuda:0', dtype=torch.float64)
tensor([-1.8199, -2.6341, -2.7700, -3.1368, -3.1540], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4620, device='cuda:0', dtype=torch.float64)
tensor([-1.8205, -2.6298, -2.7721, -3.1380, -3.1551], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5298, device='cuda:0', dtype=torch.float64)
tensor([-1.8238, -2.6261, -2.7723, -3.1378, -3.1574], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4517, device='cuda:0', dtype=torch.float64)
tensor([-1.8278, -2.6248, -2.7700, -3.1367, -3.1587], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4300, device='cuda:0', dtype=torch.float64)
tensor([-1.8320, -2.6257, -2.7666, -3.1346, -3.1585], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4925, device='cuda:0', dtype=torch.float64)
tensor([-1.8355, -2.6280, -2.7613, -3.1327, -3.1582], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4254, device='cuda:0', dtype=torch.float64)
tensor([-1.8383, -2.6294, -2.7575, -3.1312, -3.1591], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4335, device='cuda:0', dtype=torch.float64)
tensor([-1.8387, -2.6300, -2.7550, -3.1303, -3.1580], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4464, device='cuda:0', dtype=torch.float64)
tensor([-1.8353, -2.6298, -2.7534, -3.1317, -3.1551], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4183, device='cuda:0', dtype=torch.float64)
tensor([-1.8290, -2.6281, -2.7557, -3.1354, -3.1519], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4289, device='cuda:0', dtype=torch.float64)
tensor([-1.8227, -2.6266, -2.7588, -3.1386, -3.1492], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4016, device='cuda:0', dtype=torch.float64)
tensor([-1.8198, -2.6257, -2.7623, -3.1405, -3.1474], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4870, device='cuda:0', dtype=torch.float64)
tensor([-1.8205, -2.6259, -2.7651, -3.1417, -3.1477], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4555, device='cuda:0', dtype=torch.float64)
tensor([-1.8233, -2.6256, -2.7679, -3.1414, -3.1495], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4533, device='cuda:0', dtype=torch.float64)
tensor([-1.8269, -2.6265, -2.7698, -3.1418, -3.1523], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4265, device='cuda:0', dtype=torch.float64)
tensor([-1.8310, -2.6267, -2.7712, -3.1423, -3.1552], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4377, device='cuda:0', dtype=torch.float64)
tensor([-1.8344, -2.6267, -2.7719, -3.1418, -3.1565], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4824, device='cuda:0', dtype=torch.float64)
tensor([-1.8356, -2.6279, -2.7727, -3.1419, -3.1561], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4314, device='cuda:0', dtype=torch.float64)
tensor([-1.8353, -2.6291, -2.7723, -3.1410, -3.1541], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4783, device='cuda:0', dtype=torch.float64)
tensor([-1.8339, -2.6291, -2.7709, -3.1390, -3.1520], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4367, device='cuda:0', dtype=torch.float64)
tensor([-1.8326, -2.6287, -2.7688, -3.1365, -3.1505], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5848, device='cuda:0', dtype=torch.float64)
tensor([-1.8300, -2.6286, -2.7668, -3.1355, -3.1496], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4047, device='cuda:0', dtype=torch.float64)
tensor([-1.8269, -2.6297, -2.7633, -3.1346, -3.1489], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4318, device='cuda:0', dtype=torch.float64)
tensor([-1.8257, -2.6312, -2.7610, -3.1342, -3.1493], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5046, device='cuda:0', dtype=torch.float64)
tensor([-1.8259, -2.6341, -2.7583, -3.1330, -3.1509], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4671, device='cuda:0', dtype=torch.float64)
tensor([-1.8278, -2.6382, -2.7545, -3.1319, -3.1529], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4403, device='cuda:0', dtype=torch.float64)
tensor([-1.8294, -2.6412, -2.7531, -3.1314, -3.1554], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5272, device='cuda:0', dtype=torch.float64)
tensor([-1.8310, -2.6410, -2.7537, -3.1307, -3.1586], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4671, device='cuda:0', dtype=torch.float64)
tensor([-1.8312, -2.6396, -2.7566, -3.1311, -3.1593], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5083, device='cuda:0', dtype=torch.float64)
tensor([-1.8306, -2.6369, -2.7599, -3.1321, -3.1597], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4959, device='cuda:0', dtype=torch.float64)
tensor([-1.8280, -2.6333, -2.7633, -3.1350, -3.1589], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4288, device='cuda:0', dtype=torch.float64)
tensor([-1.8245, -2.6296, -2.7662, -3.1374, -3.1575], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4883, device='cuda:0', dtype=torch.float64)
tensor([-1.8217, -2.6271, -2.7671, -3.1386, -3.1574], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5502, device='cuda:0', dtype=torch.float64)
tensor([-1.8215, -2.6266, -2.7673, -3.1369, -3.1588], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5115, device='cuda:0', dtype=torch.float64)
tensor([-1.8234, -2.6287, -2.7661, -3.1342, -3.1600], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4830, device='cuda:0', dtype=torch.float64)
tensor([-1.8258, -2.6330, -2.7649, -3.1306, -3.1617], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5286, device='cuda:0', dtype=torch.float64)
tensor([-1.8264, -2.6371, -2.7645, -3.1277, -3.1625], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5555, device='cuda:0', dtype=torch.float64)
tensor([-1.8251, -2.6401, -2.7636, -3.1254, -3.1609], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5032, device='cuda:0', dtype=torch.float64)
tensor([-1.8247, -2.6420, -2.7621, -3.1237, -3.1591], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5097, device='cuda:0', dtype=torch.float64)
tensor([-1.8263, -2.6437, -2.7614, -3.1236, -3.1589], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5782, device='cuda:0', dtype=torch.float64)
tensor([-1.8285, -2.6456, -2.7591, -3.1238, -3.1587], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4847, device='cuda:0', dtype=torch.float64)
tensor([-1.8297, -2.6472, -2.7567, -3.1265, -3.1566], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4190, device='cuda:0', dtype=torch.float64)
tensor([-1.8289, -2.6453, -2.7546, -3.1313, -3.1523], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4746, device='cuda:0', dtype=torch.float64)
tensor([-1.8266, -2.6399, -2.7543, -3.1360, -3.1481], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4939, device='cuda:0', dtype=torch.float64)
tensor([-1.8241, -2.6310, -2.7557, -3.1403, -3.1453], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4764, device='cuda:0', dtype=torch.float64)
tensor([-1.8232, -2.6216, -2.7579, -3.1432, -3.1450], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4353, device='cuda:0', dtype=torch.float64)
tensor([-1.8249, -2.6147, -2.7599, -3.1446, -3.1469], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5320, device='cuda:0', dtype=torch.float64)
tensor([-1.8294, -2.6115, -2.7618, -3.1418, -3.1520], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5655, device='cuda:0', dtype=torch.float64)
tensor([-1.8357, -2.6131, -2.7639, -3.1360, -3.1581], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5343, device='cuda:0', dtype=torch.float64)
tensor([-1.8406, -2.6178, -2.7654, -3.1316, -3.1642], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4984, device='cuda:0', dtype=torch.float64)
tensor([-1.8421, -2.6229, -2.7668, -3.1287, -3.1681], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5430, device='cuda:0', dtype=torch.float64)
tensor([-1.8403, -2.6271, -2.7680, -3.1280, -3.1682], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5516, device='cuda:0', dtype=torch.float64)
tensor([-1.8348, -2.6286, -2.7703, -3.1286, -3.1656], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4493, device='cuda:0', dtype=torch.float64)
tensor([-1.8269, -2.6298, -2.7727, -3.1312, -3.1625], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3963, device='cuda:0', dtype=torch.float64)
tensor([-1.8213, -2.6309, -2.7738, -3.1331, -3.1601], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4693, device='cuda:0', dtype=torch.float64)
tensor([-1.8187, -2.6326, -2.7732, -3.1338, -3.1592], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4481, device='cuda:0', dtype=torch.float64)
tensor([-1.8182, -2.6332, -2.7704, -3.1333, -3.1581], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5135, device='cuda:0', dtype=torch.float64)
tensor([-1.8214, -2.6316, -2.7668, -3.1309, -3.1582], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4432, device='cuda:0', dtype=torch.float64)
tensor([-1.8261, -2.6301, -2.7624, -3.1289, -3.1588], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4879, device='cuda:0', dtype=torch.float64)
tensor([-1.8305, -2.6289, -2.7580, -3.1263, -3.1591], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4511, device='cuda:0', dtype=torch.float64)
tensor([-1.8333, -2.6262, -2.7558, -3.1253, -3.1583], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4816, device='cuda:0', dtype=torch.float64)
tensor([-1.8344, -2.6242, -2.7552, -3.1251, -3.1572], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5380, device='cuda:0', dtype=torch.float64)
tensor([-1.8309, -2.6219, -2.7563, -3.1275, -3.1513], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5840, device='cuda:0', dtype=torch.float64)
tensor([-1.8273, -2.6208, -2.7591, -3.1288, -3.1464], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5112, device='cuda:0', dtype=torch.float64)
tensor([-1.8234, -2.6205, -2.7616, -3.1297, -3.1412], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5158, device='cuda:0', dtype=torch.float64)
tensor([-1.8217, -2.6223, -2.7620, -3.1298, -3.1384], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4665, device='cuda:0', dtype=torch.float64)
tensor([-1.8230, -2.6252, -2.7617, -3.1293, -3.1392], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4857, device='cuda:0', dtype=torch.float64)
tensor([-1.8256, -2.6277, -2.7606, -3.1276, -3.1402], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6328, device='cuda:0', dtype=torch.float64)
tensor([-1.8289, -2.6296, -2.7599, -3.1267, -3.1398], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5065, device='cuda:0', dtype=torch.float64)
tensor([-1.8337, -2.6329, -2.7580, -3.1256, -3.1410], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4026, device='cuda:0', dtype=torch.float64)
tensor([-1.8362, -2.6353, -2.7572, -3.1252, -3.1430], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5166, device='cuda:0', dtype=torch.float64)
tensor([-1.8380, -2.6354, -2.7591, -3.1270, -3.1465], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5047, device='cuda:0', dtype=torch.float64)
tensor([-1.8373, -2.6346, -2.7612, -3.1306, -3.1502], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5779, device='cuda:0', dtype=torch.float64)
tensor([-1.8362, -2.6326, -2.7649, -3.1330, -3.1539], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5345, device='cuda:0', dtype=torch.float64)
tensor([-1.8348, -2.6302, -2.7675, -3.1344, -3.1570], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4887, device='cuda:0', dtype=torch.float64)
tensor([-1.8334, -2.6278, -2.7692, -3.1358, -3.1583], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4673, device='cuda:0', dtype=torch.float64)
tensor([-1.8318, -2.6269, -2.7688, -3.1359, -3.1570], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5295, device='cuda:0', dtype=torch.float64)
tensor([-1.8309, -2.6267, -2.7680, -3.1329, -3.1539], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5992, device='cuda:0', dtype=torch.float64)
tensor([-1.8320, -2.6284, -2.7658, -3.1295, -3.1506], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5964, device='cuda:0', dtype=torch.float64)
tensor([-1.8313, -2.6307, -2.7627, -3.1279, -3.1453], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5100, device='cuda:0', dtype=torch.float64)
tensor([-1.8331, -2.6341, -2.7602, -3.1268, -3.1428], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5321, device='cuda:0', dtype=torch.float64)
tensor([-1.8344, -2.6386, -2.7593, -3.1269, -3.1428], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5301, device='cuda:0', dtype=torch.float64)
tensor([-1.8341, -2.6423, -2.7590, -3.1285, -3.1432], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4615, device='cuda:0', dtype=torch.float64)
tensor([-1.8315, -2.6428, -2.7604, -3.1331, -3.1450], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4399, device='cuda:0', dtype=torch.float64)
tensor([-1.8265, -2.6406, -2.7627, -3.1384, -3.1455], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5328, device='cuda:0', dtype=torch.float64)
tensor([-1.8229, -2.6370, -2.7655, -3.1414, -3.1466], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4433, device='cuda:0', dtype=torch.float64)
tensor([-1.8217, -2.6344, -2.7674, -3.1419, -3.1471], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6238, device='cuda:0', dtype=torch.float64)
tensor([-1.8220, -2.6323, -2.7695, -3.1419, -3.1472], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5587, device='cuda:0', dtype=torch.float64)
tensor([-1.8248, -2.6297, -2.7714, -3.1417, -3.1497], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4795, device='cuda:0', dtype=torch.float64)
tensor([-1.8292, -2.6268, -2.7741, -3.1399, -3.1541], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4943, device='cuda:0', dtype=torch.float64)
tensor([-1.8340, -2.6247, -2.7753, -3.1370, -3.1590], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4543, device='cuda:0', dtype=torch.float64)
tensor([-1.8377, -2.6232, -2.7733, -3.1363, -3.1622], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5228, device='cuda:0', dtype=torch.float64)
tensor([-1.8379, -2.6215, -2.7693, -3.1359, -3.1608], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5293, device='cuda:0', dtype=torch.float64)
tensor([-1.8359, -2.6220, -2.7632, -3.1360, -3.1556], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5258, device='cuda:0', dtype=torch.float64)
tensor([-1.8321, -2.6230, -2.7578, -3.1341, -3.1490], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5898, device='cuda:0', dtype=torch.float64)
tensor([-1.8264, -2.6246, -2.7552, -3.1331, -3.1418], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6466, device='cuda:0', dtype=torch.float64)
tensor([-1.8258, -2.6290, -2.7540, -3.1326, -3.1414], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5772, device='cuda:0', dtype=torch.float64)
tensor([-1.8276, -2.6345, -2.7546, -3.1305, -3.1452], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5198, device='cuda:0', dtype=torch.float64)
tensor([-1.8280, -2.6378, -2.7553, -3.1307, -3.1489], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6007, device='cuda:0', dtype=torch.float64)
tensor([-1.8299, -2.6396, -2.7542, -3.1293, -3.1502], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5606, device='cuda:0', dtype=torch.float64)
tensor([-1.8322, -2.6415, -2.7540, -3.1288, -3.1496], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4337, device='cuda:0', dtype=torch.float64)
tensor([-1.8322, -2.6398, -2.7551, -3.1312, -3.1474], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5852, device='cuda:0', dtype=torch.float64)
tensor([-1.8320, -2.6376, -2.7582, -3.1327, -3.1477], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5169, device='cuda:0', dtype=torch.float64)
tensor([-1.8306, -2.6322, -2.7623, -3.1362, -3.1506], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4956, device='cuda:0', dtype=torch.float64)
tensor([-1.8280, -2.6273, -2.7666, -3.1403, -3.1520], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5439, device='cuda:0', dtype=torch.float64)
tensor([-1.8272, -2.6224, -2.7691, -3.1430, -3.1527], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5052, device='cuda:0', dtype=torch.float64)
tensor([-1.8265, -2.6194, -2.7699, -3.1442, -3.1525], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5161, device='cuda:0', dtype=torch.float64)
tensor([-1.8262, -2.6178, -2.7686, -3.1429, -3.1508], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4919, device='cuda:0', dtype=torch.float64)
tensor([-1.8268, -2.6193, -2.7658, -3.1412, -3.1503], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5924, device='cuda:0', dtype=torch.float64)
tensor([-1.8291, -2.6230, -2.7614, -3.1389, -3.1522], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5484, device='cuda:0', dtype=torch.float64)
tensor([-1.8312, -2.6270, -2.7570, -3.1363, -3.1547], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5722, device='cuda:0', dtype=torch.float64)
tensor([-1.8345, -2.6310, -2.7549, -3.1341, -3.1582], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5528, device='cuda:0', dtype=torch.float64)
tensor([-1.8365, -2.6340, -2.7545, -3.1333, -3.1627], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4870, device='cuda:0', dtype=torch.float64)
tensor([-1.8356, -2.6351, -2.7560, -3.1347, -3.1650], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5456, device='cuda:0', dtype=torch.float64)
tensor([-1.8337, -2.6335, -2.7580, -3.1368, -3.1634], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4407, device='cuda:0', dtype=torch.float64)
tensor([-1.8321, -2.6308, -2.7604, -3.1388, -3.1585], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5132, device='cuda:0', dtype=torch.float64)
tensor([-1.8309, -2.6265, -2.7642, -3.1421, -3.1551], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5169, device='cuda:0', dtype=torch.float64)
tensor([-1.8299, -2.6220, -2.7667, -3.1441, -3.1496], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4607, device='cuda:0', dtype=torch.float64)
tensor([-1.8282, -2.6174, -2.7689, -3.1442, -3.1440], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5237, device='cuda:0', dtype=torch.float64)
tensor([-1.8281, -2.6152, -2.7702, -3.1439, -3.1388], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5108, device='cuda:0', dtype=torch.float64)
tensor([-1.8290, -2.6152, -2.7702, -3.1411, -3.1353], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6111, device='cuda:0', dtype=torch.float64)
tensor([-1.8317, -2.6181, -2.7683, -3.1343, -3.1341], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6047, device='cuda:0', dtype=torch.float64)
tensor([-1.8350, -2.6229, -2.7653, -3.1265, -3.1353], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4849, device='cuda:0', dtype=torch.float64)
tensor([-1.8385, -2.6279, -2.7614, -3.1212, -3.1389], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5103, device='cuda:0', dtype=torch.float64)
tensor([-1.8407, -2.6333, -2.7583, -3.1175, -3.1415], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4875, device='cuda:0', dtype=torch.float64)
tensor([-1.8391, -2.6359, -2.7574, -3.1167, -3.1430], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6050, device='cuda:0', dtype=torch.float64)
tensor([-1.8361, -2.6367, -2.7574, -3.1187, -3.1428], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5646, device='cuda:0', dtype=torch.float64)
tensor([-1.8336, -2.6360, -2.7563, -3.1218, -3.1460], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5062, device='cuda:0', dtype=torch.float64)
tensor([-1.8310, -2.6361, -2.7547, -3.1247, -3.1478], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5589, device='cuda:0', dtype=torch.float64)
tensor([-1.8292, -2.6356, -2.7520, -3.1277, -3.1473], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6298, device='cuda:0', dtype=torch.float64)
tensor([-1.8274, -2.6333, -2.7512, -3.1314, -3.1460], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5962, device='cuda:0', dtype=torch.float64)
tensor([-1.8256, -2.6294, -2.7542, -3.1360, -3.1465], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5811, device='cuda:0', dtype=torch.float64)
tensor([-1.8253, -2.6258, -2.7577, -3.1369, -3.1468], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4921, device='cuda:0', dtype=torch.float64)
tensor([-1.8251, -2.6233, -2.7602, -3.1358, -3.1471], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5258, device='cuda:0', dtype=torch.float64)
tensor([-1.8268, -2.6227, -2.7615, -3.1342, -3.1474], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6078, device='cuda:0', dtype=torch.float64)
tensor([-1.8269, -2.6239, -2.7616, -3.1323, -3.1451], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5904, device='cuda:0', dtype=torch.float64)
tensor([-1.8265, -2.6273, -2.7602, -3.1290, -3.1423], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5854, device='cuda:0', dtype=torch.float64)
tensor([-1.8295, -2.6319, -2.7585, -3.1241, -3.1402], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5836, device='cuda:0', dtype=torch.float64)
tensor([-1.8334, -2.6373, -2.7564, -3.1196, -3.1400], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5678, device='cuda:0', dtype=torch.float64)
tensor([-1.8364, -2.6392, -2.7567, -3.1178, -3.1424], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8433, device='cuda:0', dtype=torch.float64)
tensor([-1.8355, -2.6400, -2.7573, -3.1195, -3.1456], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6409, device='cuda:0', dtype=torch.float64)
tensor([-1.8317, -2.6387, -2.7583, -3.1245, -3.1464], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7066, device='cuda:0', dtype=torch.float64)
tensor([-1.8265, -2.6372, -2.7602, -3.1303, -3.1455], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5715, device='cuda:0', dtype=torch.float64)
tensor([-1.8207, -2.6326, -2.7637, -3.1359, -3.1430], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6731, device='cuda:0', dtype=torch.float64)
tensor([-1.8168, -2.6279, -2.7649, -3.1402, -3.1403], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5878, device='cuda:0', dtype=torch.float64)
tensor([-1.8171, -2.6241, -2.7646, -3.1424, -3.1405], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5718, device='cuda:0', dtype=torch.float64)
tensor([-1.8244, -2.6213, -2.7642, -3.1389, -3.1437], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4879, device='cuda:0', dtype=torch.float64)
tensor([-1.8336, -2.6197, -2.7628, -3.1319, -3.1470], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5775, device='cuda:0', dtype=torch.float64)
tensor([-1.8422, -2.6197, -2.7601, -3.1231, -3.1497], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5205, device='cuda:0', dtype=torch.float64)
tensor([-1.8465, -2.6188, -2.7579, -3.1168, -3.1498], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5768, device='cuda:0', dtype=torch.float64)
tensor([-1.8459, -2.6202, -2.7556, -3.1129, -3.1463], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5597, device='cuda:0', dtype=torch.float64)
tensor([-1.8438, -2.6240, -2.7543, -3.1122, -3.1455], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6373, device='cuda:0', dtype=torch.float64)
tensor([-1.8403, -2.6289, -2.7563, -3.1143, -3.1484], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5505, device='cuda:0', dtype=torch.float64)
tensor([-1.8347, -2.6314, -2.7614, -3.1210, -3.1521], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6340, device='cuda:0', dtype=torch.float64)
tensor([-1.8299, -2.6314, -2.7667, -3.1301, -3.1549], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5799, device='cuda:0', dtype=torch.float64)
tensor([-1.8251, -2.6295, -2.7691, -3.1386, -3.1544], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6155, device='cuda:0', dtype=torch.float64)
tensor([-1.8201, -2.6264, -2.7680, -3.1446, -3.1513], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6952, device='cuda:0', dtype=torch.float64)
tensor([-1.8205, -2.6227, -2.7646, -3.1463, -3.1505], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6087, device='cuda:0', dtype=torch.float64)
tensor([-1.8244, -2.6192, -2.7615, -3.1465, -3.1511], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4918, device='cuda:0', dtype=torch.float64)
tensor([-1.8289, -2.6181, -2.7595, -3.1464, -3.1523], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5554, device='cuda:0', dtype=torch.float64)
tensor([-1.8308, -2.6183, -2.7594, -3.1475, -3.1532], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5834, device='cuda:0', dtype=torch.float64)
tensor([-1.8297, -2.6190, -2.7597, -3.1482, -3.1527], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5724, device='cuda:0', dtype=torch.float64)
tensor([-1.8277, -2.6218, -2.7588, -3.1488, -3.1488], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5810, device='cuda:0', dtype=torch.float64)
tensor([-1.8280, -2.6247, -2.7566, -3.1458, -3.1440], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5789, device='cuda:0', dtype=torch.float64)
tensor([-1.8299, -2.6277, -2.7535, -3.1402, -3.1401], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5956, device='cuda:0', dtype=torch.float64)
tensor([-1.8334, -2.6320, -2.7489, -3.1328, -3.1390], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6457, device='cuda:0', dtype=torch.float64)
tensor([-1.8360, -2.6336, -2.7444, -3.1273, -3.1363], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5403, device='cuda:0', dtype=torch.float64)
tensor([-1.8405, -2.6325, -2.7435, -3.1215, -3.1360], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6291, device='cuda:0', dtype=torch.float64)
tensor([-1.8435, -2.6299, -2.7456, -3.1176, -3.1395], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6321, device='cuda:0', dtype=torch.float64)
tensor([-1.8434, -2.6253, -2.7521, -3.1161, -3.1451], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5689, device='cuda:0', dtype=torch.float64)
tensor([-1.8407, -2.6215, -2.7599, -3.1163, -3.1478], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6808, device='cuda:0', dtype=torch.float64)
tensor([-1.8347, -2.6183, -2.7653, -3.1204, -3.1481], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6796, device='cuda:0', dtype=torch.float64)
tensor([-1.8279, -2.6178, -2.7658, -3.1238, -3.1439], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6200, device='cuda:0', dtype=torch.float64)
tensor([-1.8235, -2.6200, -2.7648, -3.1271, -3.1419], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5325, device='cuda:0', dtype=torch.float64)
tensor([-1.8230, -2.6249, -2.7638, -3.1276, -3.1434], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6903, device='cuda:0', dtype=torch.float64)
tensor([-1.8275, -2.6314, -2.7610, -3.1268, -3.1514], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5668, device='cuda:0', dtype=torch.float64)
tensor([-1.8360, -2.6362, -2.7578, -3.1225, -3.1607], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6012, device='cuda:0', dtype=torch.float64)
tensor([-1.8450, -2.6374, -2.7544, -3.1186, -3.1670], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6564, device='cuda:0', dtype=torch.float64)
tensor([-1.8496, -2.6340, -2.7513, -3.1200, -3.1684], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7907, device='cuda:0', dtype=torch.float64)
tensor([-1.8516, -2.6263, -2.7513, -3.1243, -3.1677], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6821, device='cuda:0', dtype=torch.float64)
tensor([-1.8474, -2.6208, -2.7513, -3.1293, -3.1619], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7092, device='cuda:0', dtype=torch.float64)
tensor([-1.8374, -2.6148, -2.7541, -3.1369, -3.1536], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6557, device='cuda:0', dtype=torch.float64)
tensor([-1.8270, -2.6124, -2.7566, -3.1432, -3.1456], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6970, device='cuda:0', dtype=torch.float64)
tensor([-1.8177, -2.6151, -2.7571, -3.1468, -3.1414], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5151, device='cuda:0', dtype=torch.float64)
tensor([-1.8118, -2.6221, -2.7565, -3.1465, -3.1403], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5719, device='cuda:0', dtype=torch.float64)
tensor([-1.8120, -2.6301, -2.7548, -3.1425, -3.1403], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6882, device='cuda:0', dtype=torch.float64)
tensor([-1.8172, -2.6369, -2.7531, -3.1358, -3.1439], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7777, device='cuda:0', dtype=torch.float64)
tensor([-1.8264, -2.6415, -2.7546, -3.1262, -3.1513], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6676, device='cuda:0', dtype=torch.float64)
tensor([-1.8337, -2.6422, -2.7581, -3.1183, -3.1553], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6749, device='cuda:0', dtype=torch.float64)
tensor([-1.8373, -2.6358, -2.7632, -3.1128, -3.1517], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6319, device='cuda:0', dtype=torch.float64)
tensor([-1.8375, -2.6248, -2.7695, -3.1116, -3.1468], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5802, device='cuda:0', dtype=torch.float64)
tensor([-1.8370, -2.6146, -2.7733, -3.1098, -3.1421], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6597, device='cuda:0', dtype=torch.float64)
tensor([-1.8358, -2.6082, -2.7753, -3.1119, -3.1419], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6258, device='cuda:0', dtype=torch.float64)
tensor([-1.8387, -2.6084, -2.7726, -3.1134, -3.1446], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7214, device='cuda:0', dtype=torch.float64)
tensor([-1.8434, -2.6123, -2.7673, -3.1146, -3.1500], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5713, device='cuda:0', dtype=torch.float64)
tensor([-1.8470, -2.6186, -2.7586, -3.1152, -3.1532], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5354, device='cuda:0', dtype=torch.float64)
tensor([-1.8461, -2.6245, -2.7504, -3.1175, -3.1535], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6463, device='cuda:0', dtype=torch.float64)
tensor([-1.8418, -2.6266, -2.7452, -3.1204, -3.1515], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8502, device='cuda:0', dtype=torch.float64)
tensor([-1.8368, -2.6274, -2.7439, -3.1234, -3.1519], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6137, device='cuda:0', dtype=torch.float64)
tensor([-1.8334, -2.6263, -2.7454, -3.1261, -3.1559], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6095, device='cuda:0', dtype=torch.float64)
tensor([-1.8320, -2.6243, -2.7466, -3.1258, -3.1597], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6381, device='cuda:0', dtype=torch.float64)
tensor([-1.8337, -2.6229, -2.7460, -3.1244, -3.1612], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6007, device='cuda:0', dtype=torch.float64)
tensor([-1.8353, -2.6200, -2.7449, -3.1207, -3.1589], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5931, device='cuda:0', dtype=torch.float64)
tensor([-1.8340, -2.6182, -2.7444, -3.1179, -3.1518], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5855, device='cuda:0', dtype=torch.float64)
tensor([-1.8324, -2.6189, -2.7454, -3.1173, -3.1460], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5555, device='cuda:0', dtype=torch.float64)
tensor([-1.8296, -2.6223, -2.7501, -3.1207, -3.1447], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7728, device='cuda:0', dtype=torch.float64)
tensor([-1.8309, -2.6269, -2.7589, -3.1269, -3.1476], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5091, device='cuda:0', dtype=torch.float64)
tensor([-1.8316, -2.6314, -2.7671, -3.1326, -3.1499], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6175, device='cuda:0', dtype=torch.float64)
tensor([-1.8302, -2.6350, -2.7728, -3.1405, -3.1479], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5308, device='cuda:0', dtype=torch.float64)
tensor([-1.8302, -2.6366, -2.7759, -3.1446, -3.1473], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6434, device='cuda:0', dtype=torch.float64)
tensor([-1.8324, -2.6369, -2.7767, -3.1443, -3.1480], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6609, device='cuda:0', dtype=torch.float64)
tensor([-1.8344, -2.6349, -2.7772, -3.1407, -3.1481], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6444, device='cuda:0', dtype=torch.float64)
tensor([-1.8385, -2.6345, -2.7736, -3.1326, -3.1501], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6174, device='cuda:0', dtype=torch.float64)
tensor([-1.8399, -2.6344, -2.7649, -3.1245, -3.1460], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6831, device='cuda:0', dtype=torch.float64)
tensor([-1.8387, -2.6341, -2.7560, -3.1167, -3.1406], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6736, device='cuda:0', dtype=torch.float64)
tensor([-1.8354, -2.6349, -2.7486, -3.1112, -3.1363], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6058, device='cuda:0', dtype=torch.float64)
tensor([-1.8336, -2.6345, -2.7462, -3.1090, -3.1352], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6587, device='cuda:0', dtype=torch.float64)
tensor([-1.8340, -2.6345, -2.7480, -3.1077, -3.1362], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6517, device='cuda:0', dtype=torch.float64)
tensor([-1.8340, -2.6337, -2.7534, -3.1093, -3.1374], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7098, device='cuda:0', dtype=torch.float64)
tensor([-1.8337, -2.6331, -2.7592, -3.1151, -3.1388], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7108, device='cuda:0', dtype=torch.float64)
tensor([-1.8344, -2.6319, -2.7672, -3.1219, -3.1426], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6509, device='cuda:0', dtype=torch.float64)
tensor([-1.8332, -2.6274, -2.7748, -3.1311, -3.1447], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6186, device='cuda:0', dtype=torch.float64)
tensor([-1.8318, -2.6217, -2.7814, -3.1394, -3.1482], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7810, device='cuda:0', dtype=torch.float64)
tensor([-1.8316, -2.6202, -2.7815, -3.1450, -3.1531], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6344, device='cuda:0', dtype=torch.float64)
tensor([-1.8315, -2.6183, -2.7781, -3.1454, -3.1556], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6520, device='cuda:0', dtype=torch.float64)
tensor([-1.8297, -2.6136, -2.7715, -3.1430, -3.1542], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6872, device='cuda:0', dtype=torch.float64)
tensor([-1.8294, -2.6126, -2.7616, -3.1364, -3.1499], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6712, device='cuda:0', dtype=torch.float64)
tensor([-1.8306, -2.6142, -2.7510, -3.1296, -3.1452], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6086, device='cuda:0', dtype=torch.float64)
tensor([-1.8323, -2.6191, -2.7418, -3.1227, -3.1425], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6331, device='cuda:0', dtype=torch.float64)
tensor([-1.8347, -2.6251, -2.7346, -3.1188, -3.1433], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7715, device='cuda:0', dtype=torch.float64)
tensor([-1.8373, -2.6298, -2.7323, -3.1180, -3.1459], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6540, device='cuda:0', dtype=torch.float64)
tensor([-1.8399, -2.6298, -2.7350, -3.1213, -3.1518], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6823, device='cuda:0', dtype=torch.float64)
tensor([-1.8405, -2.6273, -2.7413, -3.1275, -3.1574], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6861, device='cuda:0', dtype=torch.float64)
tensor([-1.8393, -2.6235, -2.7482, -3.1348, -3.1623], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6078, device='cuda:0', dtype=torch.float64)
tensor([-1.8372, -2.6192, -2.7568, -3.1408, -3.1690], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7417, device='cuda:0', dtype=torch.float64)
tensor([-1.8331, -2.6153, -2.7637, -3.1445, -3.1698], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6569, device='cuda:0', dtype=torch.float64)
tensor([-1.8305, -2.6149, -2.7660, -3.1435, -3.1677], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6929, device='cuda:0', dtype=torch.float64)
tensor([-1.8309, -2.6192, -2.7625, -3.1381, -3.1632], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6272, device='cuda:0', dtype=torch.float64)
tensor([-1.8324, -2.6262, -2.7582, -3.1330, -3.1553], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5914, device='cuda:0', dtype=torch.float64)
tensor([-1.8349, -2.6323, -2.7524, -3.1255, -3.1449], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5319, device='cuda:0', dtype=torch.float64)
tensor([-1.8375, -2.6356, -2.7482, -3.1205, -3.1373], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5546, device='cuda:0', dtype=torch.float64)
tensor([-1.8378, -2.6358, -2.7462, -3.1175, -3.1316], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6693, device='cuda:0', dtype=torch.float64)
tensor([-1.8387, -2.6344, -2.7475, -3.1160, -3.1302], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5315, device='cuda:0', dtype=torch.float64)
tensor([-1.8356, -2.6305, -2.7515, -3.1179, -3.1295], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7787, device='cuda:0', dtype=torch.float64)
tensor([-1.8316, -2.6242, -2.7555, -3.1223, -3.1283], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6944, device='cuda:0', dtype=torch.float64)
tensor([-1.8300, -2.6199, -2.7587, -3.1258, -3.1300], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6255, device='cuda:0', dtype=torch.float64)
tensor([-1.8283, -2.6175, -2.7618, -3.1289, -3.1325], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5844, device='cuda:0', dtype=torch.float64)
tensor([-1.8290, -2.6161, -2.7641, -3.1317, -3.1372], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6886, device='cuda:0', dtype=torch.float64)
tensor([-1.8322, -2.6171, -2.7631, -3.1324, -3.1436], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5802, device='cuda:0', dtype=torch.float64)
tensor([-1.8346, -2.6200, -2.7608, -3.1329, -3.1482], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6559, device='cuda:0', dtype=torch.float64)
tensor([-1.8379, -2.6232, -2.7567, -3.1347, -3.1537], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6848, device='cuda:0', dtype=torch.float64)
tensor([-1.8407, -2.6281, -2.7544, -3.1353, -3.1595], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5987, device='cuda:0', dtype=torch.float64)
tensor([-1.8393, -2.6301, -2.7547, -3.1359, -3.1606], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9625, device='cuda:0', dtype=torch.float64)
tensor([-1.8367, -2.6320, -2.7519, -3.1356, -3.1561], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7351, device='cuda:0', dtype=torch.float64)
tensor([-1.8330, -2.6343, -2.7515, -3.1349, -3.1525], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6694, device='cuda:0', dtype=torch.float64)
tensor([-1.8308, -2.6358, -2.7551, -3.1349, -3.1541], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7795, device='cuda:0', dtype=torch.float64)
tensor([-1.8319, -2.6368, -2.7589, -3.1330, -3.1593], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6781, device='cuda:0', dtype=torch.float64)
tensor([-1.8336, -2.6358, -2.7617, -3.1284, -3.1635], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6874, device='cuda:0', dtype=torch.float64)
tensor([-1.8350, -2.6337, -2.7652, -3.1232, -3.1651], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7431, device='cuda:0', dtype=torch.float64)
tensor([-1.8343, -2.6290, -2.7687, -3.1192, -3.1619], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5900, device='cuda:0', dtype=torch.float64)
tensor([-1.8326, -2.6233, -2.7685, -3.1150, -3.1545], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7698, device='cuda:0', dtype=torch.float64)
tensor([-1.8355, -2.6211, -2.7637, -3.1138, -3.1494], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7891, device='cuda:0', dtype=torch.float64)
tensor([-1.8402, -2.6236, -2.7589, -3.1136, -3.1466], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7041, device='cuda:0', dtype=torch.float64)
tensor([-1.8422, -2.6262, -2.7556, -3.1142, -3.1447], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6660, device='cuda:0', dtype=torch.float64)
tensor([-1.8366, -2.6257, -2.7544, -3.1181, -3.1393], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6999, device='cuda:0', dtype=torch.float64)
tensor([-1.8281, -2.6240, -2.7580, -3.1240, -3.1315], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7931, device='cuda:0', dtype=torch.float64)
tensor([-1.8206, -2.6208, -2.7608, -3.1307, -3.1217], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6285, device='cuda:0', dtype=torch.float64)
tensor([-1.8192, -2.6186, -2.7620, -3.1327, -3.1169], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5711, device='cuda:0', dtype=torch.float64)
tensor([-1.8233, -2.6195, -2.7622, -3.1309, -3.1185], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6599, device='cuda:0', dtype=torch.float64)
tensor([-1.8331, -2.6226, -2.7606, -3.1282, -3.1274], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6481, device='cuda:0', dtype=torch.float64)
tensor([-1.8433, -2.6259, -2.7576, -3.1239, -3.1375], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6652, device='cuda:0', dtype=torch.float64)
tensor([-1.8520, -2.6295, -2.7564, -3.1171, -3.1483], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5515, device='cuda:0', dtype=torch.float64)
tensor([-1.8571, -2.6330, -2.7550, -3.1124, -3.1551], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8660, device='cuda:0', dtype=torch.float64)
tensor([-1.8578, -2.6318, -2.7586, -3.1103, -3.1561], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6354, device='cuda:0', dtype=torch.float64)
tensor([-1.8541, -2.6275, -2.7599, -3.1093, -3.1501], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6768, device='cuda:0', dtype=torch.float64)
tensor([-1.8456, -2.6200, -2.7585, -3.1128, -3.1384], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7177, device='cuda:0', dtype=torch.float64)
tensor([-1.8353, -2.6138, -2.7538, -3.1151, -3.1253], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6347, device='cuda:0', dtype=torch.float64)
tensor([-1.8265, -2.6102, -2.7484, -3.1160, -3.1177], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6442, device='cuda:0', dtype=torch.float64)
tensor([-1.8261, -2.6110, -2.7443, -3.1157, -3.1212], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6246, device='cuda:0', dtype=torch.float64)
tensor([-1.8321, -2.6144, -2.7413, -3.1146, -3.1323], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7178, device='cuda:0', dtype=torch.float64)
tensor([-1.8398, -2.6178, -2.7375, -3.1111, -3.1432], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8636, device='cuda:0', dtype=torch.float64)
tensor([-1.8459, -2.6232, -2.7354, -3.1056, -3.1523], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7321, device='cuda:0', dtype=torch.float64)
tensor([-1.8477, -2.6239, -2.7395, -3.1034, -3.1576], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6928, device='cuda:0', dtype=torch.float64)
tensor([-1.8461, -2.6232, -2.7474, -3.1032, -3.1614], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7664, device='cuda:0', dtype=torch.float64)
tensor([-1.8480, -2.6260, -2.7530, -3.1025, -3.1676], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6311, device='cuda:0', dtype=torch.float64)
tensor([-1.8462, -2.6252, -2.7601, -3.1075, -3.1703], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7115, device='cuda:0', dtype=torch.float64)
tensor([-1.8379, -2.6220, -2.7625, -3.1135, -3.1603], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7687, device='cuda:0', dtype=torch.float64)
tensor([-1.8273, -2.6151, -2.7650, -3.1170, -3.1425], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5520, device='cuda:0', dtype=torch.float64)
tensor([-1.8210, -2.6122, -2.7650, -3.1177, -3.1309], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6476, device='cuda:0', dtype=torch.float64)
tensor([-1.8218, -2.6119, -2.7645, -3.1150, -3.1261], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6036, device='cuda:0', dtype=torch.float64)
tensor([-1.8242, -2.6153, -2.7623, -3.1104, -3.1247], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5409, device='cuda:0', dtype=torch.float64)
tensor([-1.8284, -2.6204, -2.7617, -3.1079, -3.1279], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6145, device='cuda:0', dtype=torch.float64)
tensor([-1.8324, -2.6257, -2.7581, -3.1090, -3.1301], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7193, device='cuda:0', dtype=torch.float64)
tensor([-1.8362, -2.6344, -2.7511, -3.1108, -3.1317], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6736, device='cuda:0', dtype=torch.float64)
tensor([-1.8395, -2.6430, -2.7436, -3.1167, -3.1348], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7137, device='cuda:0', dtype=torch.float64)
tensor([-1.8431, -2.6509, -2.7396, -3.1203, -3.1374], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7219, device='cuda:0', dtype=torch.float64)
tensor([-1.8442, -2.6525, -2.7393, -3.1304, -3.1437], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6260, device='cuda:0', dtype=torch.float64)
tensor([-1.8394, -2.6453, -2.7457, -3.1403, -3.1467], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7278, device='cuda:0', dtype=torch.float64)
tensor([-1.8322, -2.6306, -2.7556, -3.1478, -3.1492], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7862, device='cuda:0', dtype=torch.float64)
tensor([-1.8320, -2.6187, -2.7626, -3.1499, -3.1504], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6110, device='cuda:0', dtype=torch.float64)
tensor([-1.8332, -2.6114, -2.7628, -3.1494, -3.1452], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7545, device='cuda:0', dtype=torch.float64)
tensor([-1.8361, -2.6128, -2.7565, -3.1442, -3.1388], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7897, device='cuda:0', dtype=torch.float64)
tensor([-1.8416, -2.6186, -2.7498, -3.1323, -3.1374], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6766, device='cuda:0', dtype=torch.float64)
tensor([-1.8455, -2.6261, -2.7445, -3.1200, -3.1383], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6249, device='cuda:0', dtype=torch.float64)
tensor([-1.8485, -2.6329, -2.7409, -3.1111, -3.1412], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7868, device='cuda:0', dtype=torch.float64)
tensor([-1.8495, -2.6366, -2.7411, -3.1049, -3.1485], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9723, device='cuda:0', dtype=torch.float64)
tensor([-1.8517, -2.6414, -2.7419, -3.0995, -3.1564], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7388, device='cuda:0', dtype=torch.float64)
tensor([-1.8493, -2.6446, -2.7456, -3.0994, -3.1613], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7488, device='cuda:0', dtype=torch.float64)
tensor([-1.8464, -2.6425, -2.7493, -3.1018, -3.1641], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7333, device='cuda:0', dtype=torch.float64)
tensor([-1.8407, -2.6347, -2.7521, -3.1098, -3.1628], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8170, device='cuda:0', dtype=torch.float64)
tensor([-1.8320, -2.6281, -2.7538, -3.1175, -3.1578], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6919, device='cuda:0', dtype=torch.float64)
tensor([-1.8258, -2.6194, -2.7544, -3.1227, -3.1509], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8390, device='cuda:0', dtype=torch.float64)
tensor([-1.8248, -2.6084, -2.7564, -3.1254, -3.1451], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6852, device='cuda:0', dtype=torch.float64)
tensor([-1.8258, -2.6013, -2.7567, -3.1250, -3.1352], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9644, device='cuda:0', dtype=torch.float64)
tensor([-1.8328, -2.5995, -2.7556, -3.1232, -3.1300], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8140, device='cuda:0', dtype=torch.float64)
tensor([-1.8410, -2.6016, -2.7495, -3.1166, -3.1228], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7413, device='cuda:0', dtype=torch.float64)
tensor([-1.8511, -2.6092, -2.7422, -3.1087, -3.1220], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6169, device='cuda:0', dtype=torch.float64)
tensor([-1.8558, -2.6164, -2.7384, -3.1083, -3.1245], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6933, device='cuda:0', dtype=torch.float64)
tensor([-1.8533, -2.6223, -2.7412, -3.1118, -3.1316], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7225, device='cuda:0', dtype=torch.float64)
tensor([-1.8470, -2.6272, -2.7486, -3.1172, -3.1376], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7165, device='cuda:0', dtype=torch.float64)
tensor([-1.8335, -2.6272, -2.7554, -3.1248, -3.1422], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6876, device='cuda:0', dtype=torch.float64)
tensor([-1.8177, -2.6236, -2.7621, -3.1292, -3.1430], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5742, device='cuda:0', dtype=torch.float64)
tensor([-1.8056, -2.6192, -2.7622, -3.1308, -3.1404], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7133, device='cuda:0', dtype=torch.float64)
tensor([-1.8029, -2.6172, -2.7592, -3.1300, -3.1389], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8196, device='cuda:0', dtype=torch.float64)
tensor([-1.8102, -2.6192, -2.7558, -3.1287, -3.1444], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6624, device='cuda:0', dtype=torch.float64)
tensor([-1.8233, -2.6227, -2.7522, -3.1268, -3.1515], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7442, device='cuda:0', dtype=torch.float64)
tensor([-1.8378, -2.6276, -2.7487, -3.1218, -3.1551], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6791, device='cuda:0', dtype=torch.float64)
tensor([-1.8491, -2.6329, -2.7463, -3.1172, -3.1566], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7837, device='cuda:0', dtype=torch.float64)
tensor([-1.8518, -2.6328, -2.7460, -3.1157, -3.1533], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7125, device='cuda:0', dtype=torch.float64)
tensor([-1.8498, -2.6322, -2.7468, -3.1189, -3.1486], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6862, device='cuda:0', dtype=torch.float64)
tensor([-1.8441, -2.6309, -2.7458, -3.1238, -3.1421], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7419, device='cuda:0', dtype=torch.float64)
tensor([-1.8396, -2.6282, -2.7442, -3.1267, -3.1342], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6424, device='cuda:0', dtype=torch.float64)
tensor([-1.8370, -2.6267, -2.7384, -3.1285, -3.1243], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8063, device='cuda:0', dtype=torch.float64)
tensor([-1.8379, -2.6240, -2.7336, -3.1285, -3.1228], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6745, device='cuda:0', dtype=torch.float64)
tensor([-1.8431, -2.6247, -2.7309, -3.1224, -3.1254], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8366, device='cuda:0', dtype=torch.float64)
tensor([-1.8457, -2.6240, -2.7299, -3.1127, -3.1274], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7859, device='cuda:0', dtype=torch.float64)
tensor([-1.8441, -2.6203, -2.7351, -3.1047, -3.1302], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7520, device='cuda:0', dtype=torch.float64)
tensor([-1.8427, -2.6165, -2.7455, -3.0960, -3.1349], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7170, device='cuda:0', dtype=torch.float64)
tensor([-1.8382, -2.6160, -2.7545, -3.0903, -3.1324], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7574, device='cuda:0', dtype=torch.float64)
tensor([-1.8381, -2.6184, -2.7607, -3.0866, -3.1315], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6703, device='cuda:0', dtype=torch.float64)
tensor([-1.8406, -2.6225, -2.7583, -3.0838, -3.1298], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8097, device='cuda:0', dtype=torch.float64)
tensor([-1.8471, -2.6291, -2.7512, -3.0819, -3.1285], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5657, device='cuda:0', dtype=torch.float64)
tensor([-1.8496, -2.6310, -2.7455, -3.0833, -3.1239], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5951, device='cuda:0', dtype=torch.float64)
tensor([-1.8484, -2.6285, -2.7454, -3.0925, -3.1209], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6148, device='cuda:0', dtype=torch.float64)
tensor([-1.8440, -2.6194, -2.7510, -3.1043, -3.1187], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7543, device='cuda:0', dtype=torch.float64)
tensor([-1.8390, -2.6071, -2.7586, -3.1157, -3.1179], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9901, device='cuda:0', dtype=torch.float64)
tensor([-1.8319, -2.5934, -2.7636, -3.1297, -3.1149], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7034, device='cuda:0', dtype=torch.float64)
tensor([-1.8286, -2.5846, -2.7666, -3.1433, -3.1152], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0160, device='cuda:0', dtype=torch.float64)
tensor([-1.8332, -2.5860, -2.7706, -3.1490, -3.1275], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7196, device='cuda:0', dtype=torch.float64)
tensor([-1.8425, -2.5952, -2.7651, -3.1495, -3.1446], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7403, device='cuda:0', dtype=torch.float64)
tensor([-1.8494, -2.6122, -2.7561, -3.1460, -3.1584], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9147, device='cuda:0', dtype=torch.float64)
tensor([-1.8505, -2.6297, -2.7473, -3.1431, -3.1625], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7760, device='cuda:0', dtype=torch.float64)
tensor([-1.8459, -2.6421, -2.7405, -3.1427, -3.1607], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8481, device='cuda:0', dtype=torch.float64)
tensor([-1.8408, -2.6468, -2.7377, -3.1409, -3.1598], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7647, device='cuda:0', dtype=torch.float64)
tensor([-1.8356, -2.6440, -2.7384, -3.1406, -3.1584], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7729, device='cuda:0', dtype=torch.float64)
tensor([-1.8294, -2.6373, -2.7422, -3.1391, -3.1546], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7580, device='cuda:0', dtype=torch.float64)
tensor([-1.8237, -2.6271, -2.7456, -3.1378, -3.1472], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7641, device='cuda:0', dtype=torch.float64)
tensor([-1.8187, -2.6177, -2.7484, -3.1337, -3.1415], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7374, device='cuda:0', dtype=torch.float64)
tensor([-1.8201, -2.6151, -2.7444, -3.1255, -3.1383], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8060, device='cuda:0', dtype=torch.float64)
tensor([-1.8297, -2.6205, -2.7338, -3.1131, -3.1430], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8393, device='cuda:0', dtype=torch.float64)
tensor([-1.8430, -2.6250, -2.7266, -3.1053, -3.1517], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7461, device='cuda:0', dtype=torch.float64)
tensor([-1.8546, -2.6277, -2.7249, -3.0992, -3.1586], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6534, device='cuda:0', dtype=torch.float64)
tensor([-1.8588, -2.6286, -2.7261, -3.0970, -3.1630], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8539, device='cuda:0', dtype=torch.float64)
tensor([-1.8545, -2.6284, -2.7272, -3.0973, -3.1571], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8210, device='cuda:0', dtype=torch.float64)
tensor([-1.8424, -2.6240, -2.7335, -3.0984, -3.1440], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7284, device='cuda:0', dtype=torch.float64)
tensor([-1.8314, -2.6172, -2.7423, -3.1024, -3.1295], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7430, device='cuda:0', dtype=torch.float64)
tensor([-1.8297, -2.6140, -2.7526, -3.1059, -3.1257], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9671, device='cuda:0', dtype=torch.float64)
tensor([-1.8377, -2.6091, -2.7630, -3.1068, -3.1306], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8129, device='cuda:0', dtype=torch.float64)
tensor([-1.8507, -2.6081, -2.7690, -3.1085, -3.1411], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8502, device='cuda:0', dtype=torch.float64)
tensor([-1.8608, -2.6069, -2.7746, -3.1110, -3.1469], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8655, device='cuda:0', dtype=torch.float64)
tensor([-1.8635, -2.6097, -2.7806, -3.1119, -3.1488], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6701, device='cuda:0', dtype=torch.float64)
tensor([-1.8605, -2.6114, -2.7882, -3.1172, -3.1509], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9977, device='cuda:0', dtype=torch.float64)
tensor([-1.8586, -2.6190, -2.7943, -3.1236, -3.1593], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7626, device='cuda:0', dtype=torch.float64)
tensor([-1.8571, -2.6286, -2.7927, -3.1298, -3.1666], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7435, device='cuda:0', dtype=torch.float64)
tensor([-1.8517, -2.6371, -2.7824, -3.1359, -3.1671], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7122, device='cuda:0', dtype=torch.float64)
tensor([-1.8419, -2.6438, -2.7685, -3.1396, -3.1620], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8090, device='cuda:0', dtype=torch.float64)
tensor([-1.8319, -2.6469, -2.7576, -3.1387, -3.1537], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6963, device='cuda:0', dtype=torch.float64)
tensor([-1.8233, -2.6415, -2.7492, -3.1394, -3.1489], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7724, device='cuda:0', dtype=torch.float64)
tensor([-1.8210, -2.6312, -2.7404, -3.1397, -3.1494], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5877, device='cuda:0', dtype=torch.float64)
tensor([-1.8218, -2.6213, -2.7301, -3.1409, -3.1494], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6687, device='cuda:0', dtype=torch.float64)
tensor([-1.8233, -2.6125, -2.7224, -3.1399, -3.1476], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6894, device='cuda:0', dtype=torch.float64)
tensor([-1.8254, -2.6072, -2.7148, -3.1374, -3.1415], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6311, device='cuda:0', dtype=torch.float64)
tensor([-1.8279, -2.6062, -2.7082, -3.1346, -3.1330], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7454, device='cuda:0', dtype=torch.float64)
tensor([-1.8293, -2.6093, -2.7101, -3.1306, -3.1308], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7470, device='cuda:0', dtype=torch.float64)
tensor([-1.8292, -2.6149, -2.7170, -3.1256, -3.1310], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9277, device='cuda:0', dtype=torch.float64)
tensor([-1.8337, -2.6234, -2.7292, -3.1168, -3.1402], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7764, device='cuda:0', dtype=torch.float64)
tensor([-1.8395, -2.6313, -2.7397, -3.1037, -3.1449], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8191, device='cuda:0', dtype=torch.float64)
tensor([-1.8445, -2.6360, -2.7460, -3.0907, -3.1401], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7820, device='cuda:0', dtype=torch.float64)
tensor([-1.8509, -2.6386, -2.7525, -3.0796, -3.1409], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8844, device='cuda:0', dtype=torch.float64)
tensor([-1.8586, -2.6381, -2.7589, -3.0702, -3.1451], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8908, device='cuda:0', dtype=torch.float64)
tensor([-1.8652, -2.6319, -2.7643, -3.0664, -3.1521], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7545, device='cuda:0', dtype=torch.float64)
tensor([-1.8655, -2.6255, -2.7655, -3.0666, -3.1531], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8033, device='cuda:0', dtype=torch.float64)
tensor([-1.8547, -2.6142, -2.7672, -3.0724, -3.1460], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0257, device='cuda:0', dtype=torch.float64)
tensor([-1.8395, -2.6082, -2.7649, -3.0805, -3.1241], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8814, device='cuda:0', dtype=torch.float64)
tensor([-1.8238, -2.6030, -2.7625, -3.0894, -3.1017], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8575, device='cuda:0', dtype=torch.float64)
tensor([-1.8199, -2.6014, -2.7631, -3.0975, -3.0979], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1657, device='cuda:0', dtype=torch.float64)
tensor([-1.8296, -2.6046, -2.7613, -3.1033, -3.1113], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7015, device='cuda:0', dtype=torch.float64)
tensor([-1.8425, -2.6074, -2.7577, -3.1073, -3.1250], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8062, device='cuda:0', dtype=torch.float64)
tensor([-1.8500, -2.6106, -2.7530, -3.1090, -3.1310], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8958, device='cuda:0', dtype=torch.float64)
tensor([-1.8526, -2.6110, -2.7490, -3.1082, -3.1340], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7119, device='cuda:0', dtype=torch.float64)
tensor([-1.8485, -2.6098, -2.7467, -3.1104, -3.1316], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7847, device='cuda:0', dtype=torch.float64)
tensor([-1.8420, -2.6117, -2.7484, -3.1184, -3.1361], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9346, device='cuda:0', dtype=torch.float64)
tensor([-1.8410, -2.6235, -2.7498, -3.1250, -3.1465], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8828, device='cuda:0', dtype=torch.float64)
tensor([-1.8398, -2.6303, -2.7502, -3.1261, -3.1515], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9667, device='cuda:0', dtype=torch.float64)
tensor([-1.8364, -2.6358, -2.7466, -3.1225, -3.1495], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9080, device='cuda:0', dtype=torch.float64)
tensor([-1.8339, -2.6397, -2.7430, -3.1132, -3.1418], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7583, device='cuda:0', dtype=torch.float64)
tensor([-1.8389, -2.6426, -2.7319, -3.1025, -3.1420], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6416, device='cuda:0', dtype=torch.float64)
tensor([-1.8432, -2.6476, -2.7208, -3.0977, -3.1443], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7610, device='cuda:0', dtype=torch.float64)
tensor([-1.8459, -2.6490, -2.7154, -3.1023, -3.1524], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8088, device='cuda:0', dtype=torch.float64)
tensor([-1.8463, -2.6474, -2.7140, -3.1101, -3.1603], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9675, device='cuda:0', dtype=torch.float64)
tensor([-1.8398, -2.6423, -2.7192, -3.1265, -3.1596], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7079, device='cuda:0', dtype=torch.float64)
tensor([-1.8317, -2.6357, -2.7252, -3.1423, -3.1548], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6613, device='cuda:0', dtype=torch.float64)
tensor([-1.8269, -2.6264, -2.7354, -3.1524, -3.1500], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7132, device='cuda:0', dtype=torch.float64)
tensor([-1.8294, -2.6195, -2.7442, -3.1539, -3.1476], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8562, device='cuda:0', dtype=torch.float64)
tensor([-1.8364, -2.6129, -2.7502, -3.1467, -3.1474], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8767, device='cuda:0', dtype=torch.float64)
tensor([-1.8392, -2.6026, -2.7576, -3.1400, -3.1478], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8463, device='cuda:0', dtype=torch.float64)
tensor([-1.8396, -2.5920, -2.7633, -3.1338, -3.1440], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6948, device='cuda:0', dtype=torch.float64)
tensor([-1.8385, -2.5912, -2.7634, -3.1262, -3.1356], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6669, device='cuda:0', dtype=torch.float64)
tensor([-1.8335, -2.5964, -2.7648, -3.1218, -3.1264], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8051, device='cuda:0', dtype=torch.float64)
tensor([-1.8252, -2.6062, -2.7640, -3.1225, -3.1215], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8820, device='cuda:0', dtype=torch.float64)
tensor([-1.8222, -2.6166, -2.7604, -3.1248, -3.1143], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8045, device='cuda:0', dtype=torch.float64)
tensor([-1.8252, -2.6246, -2.7534, -3.1222, -3.1072], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9722, device='cuda:0', dtype=torch.float64)
tensor([-1.8390, -2.6303, -2.7444, -3.1161, -3.1061], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9516, device='cuda:0', dtype=torch.float64)
tensor([-1.8529, -2.6293, -2.7392, -3.1131, -3.1105], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7953, device='cuda:0', dtype=torch.float64)
tensor([-1.8624, -2.6249, -2.7354, -3.1080, -3.1146], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7941, device='cuda:0', dtype=torch.float64)
tensor([-1.8707, -2.6197, -2.7329, -3.1064, -3.1178], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8177, device='cuda:0', dtype=torch.float64)
tensor([-1.8744, -2.6145, -2.7346, -3.1053, -3.1243], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8427, device='cuda:0', dtype=torch.float64)
tensor([-1.8725, -2.6123, -2.7406, -3.1063, -3.1345], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7273, device='cuda:0', dtype=torch.float64)
tensor([-1.8667, -2.6120, -2.7480, -3.1052, -3.1421], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6997, device='cuda:0', dtype=torch.float64)
tensor([-1.8592, -2.6180, -2.7536, -3.0997, -3.1473], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8603, device='cuda:0', dtype=torch.float64)
tensor([-1.8484, -2.6247, -2.7570, -3.0933, -3.1462], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8153, device='cuda:0', dtype=torch.float64)
tensor([-1.8388, -2.6345, -2.7550, -3.0844, -3.1386], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6541, device='cuda:0', dtype=torch.float64)
tensor([-1.8346, -2.6417, -2.7506, -3.0768, -3.1313], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8701, device='cuda:0', dtype=torch.float64)
tensor([-1.8368, -2.6455, -2.7479, -3.0689, -3.1250], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8605, device='cuda:0', dtype=torch.float64)
tensor([-1.8422, -2.6466, -2.7499, -3.0678, -3.1311], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7042, device='cuda:0', dtype=torch.float64)
tensor([-1.8433, -2.6422, -2.7527, -3.0722, -3.1371], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8692, device='cuda:0', dtype=torch.float64)
tensor([-1.8349, -2.6352, -2.7565, -3.0821, -3.1361], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9634, device='cuda:0', dtype=torch.float64)
tensor([-1.8276, -2.6244, -2.7637, -3.0922, -3.1400], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9254, device='cuda:0', dtype=torch.float64)
tensor([-1.8214, -2.6101, -2.7722, -3.1008, -3.1495], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8808, device='cuda:0', dtype=torch.float64)
tensor([-1.8204, -2.5988, -2.7774, -3.1105, -3.1631], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7299, device='cuda:0', dtype=torch.float64)
tensor([-1.8257, -2.5912, -2.7767, -3.1173, -3.1719], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9510, device='cuda:0', dtype=torch.float64)
tensor([-1.8355, -2.5972, -2.7663, -3.1199, -3.1703], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8125, device='cuda:0', dtype=torch.float64)
tensor([-1.8473, -2.6069, -2.7548, -3.1208, -3.1668], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7153, device='cuda:0', dtype=torch.float64)
tensor([-1.8537, -2.6123, -2.7450, -3.1258, -3.1643], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8414, device='cuda:0', dtype=torch.float64)
tensor([-1.8532, -2.6186, -2.7431, -3.1307, -3.1637], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9741, device='cuda:0', dtype=torch.float64)
tensor([-1.8494, -2.6203, -2.7505, -3.1366, -3.1656], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9132, device='cuda:0', dtype=torch.float64)
tensor([-1.8418, -2.6143, -2.7566, -3.1425, -3.1611], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8662, device='cuda:0', dtype=torch.float64)
tensor([-1.8311, -2.6091, -2.7517, -3.1416, -3.1439], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8005, device='cuda:0', dtype=torch.float64)
tensor([-1.8250, -2.6077, -2.7408, -3.1349, -3.1247], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8910, device='cuda:0', dtype=torch.float64)
tensor([-1.8262, -2.6035, -2.7332, -3.1279, -3.1151], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8354, device='cuda:0', dtype=torch.float64)
tensor([-1.8308, -2.6056, -2.7305, -3.1221, -3.1141], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8595, device='cuda:0', dtype=torch.float64)
tensor([-1.8373, -2.6129, -2.7344, -3.1167, -3.1166], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7440, device='cuda:0', dtype=torch.float64)
tensor([-1.8455, -2.6209, -2.7384, -3.1090, -3.1196], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8963, device='cuda:0', dtype=torch.float64)
tensor([-1.8485, -2.6285, -2.7428, -3.1034, -3.1143], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8469, device='cuda:0', dtype=torch.float64)
tensor([-1.8481, -2.6305, -2.7435, -3.1037, -3.1132], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7116, device='cuda:0', dtype=torch.float64)
tensor([-1.8497, -2.6266, -2.7479, -3.1078, -3.1190], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9889, device='cuda:0', dtype=torch.float64)
tensor([-1.8506, -2.6152, -2.7591, -3.1152, -3.1315], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9187, device='cuda:0', dtype=torch.float64)
tensor([-1.8478, -2.6025, -2.7736, -3.1236, -3.1414], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8059, device='cuda:0', dtype=torch.float64)
tensor([-1.8458, -2.5948, -2.7801, -3.1236, -3.1453], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7744, device='cuda:0', dtype=torch.float64)
tensor([-1.8403, -2.5915, -2.7740, -3.1228, -3.1424], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9761, device='cuda:0', dtype=torch.float64)
tensor([-1.8392, -2.6025, -2.7555, -3.1146, -3.1342], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9740, device='cuda:0', dtype=torch.float64)
tensor([-1.8411, -2.6176, -2.7326, -3.1033, -3.1232], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8326, device='cuda:0', dtype=torch.float64)
tensor([-1.8467, -2.6318, -2.7146, -3.0956, -3.1190], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1143, device='cuda:0', dtype=torch.float64)
tensor([-1.8484, -2.6346, -2.7124, -3.0933, -3.1180], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8913, device='cuda:0', dtype=torch.float64)
tensor([-1.8473, -2.6308, -2.7199, -3.0926, -3.1189], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9973, device='cuda:0', dtype=torch.float64)
tensor([-1.8396, -2.6214, -2.7359, -3.0943, -3.1166], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0268, device='cuda:0', dtype=torch.float64)
tensor([-1.8298, -2.6126, -2.7465, -3.0926, -3.1096], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9761, device='cuda:0', dtype=torch.float64)
tensor([-1.8286, -2.6115, -2.7536, -3.0923, -3.1123], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0257, device='cuda:0', dtype=torch.float64)
tensor([-1.8360, -2.6167, -2.7623, -3.0916, -3.1327], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8740, device='cuda:0', dtype=torch.float64)
tensor([-1.8522, -2.6261, -2.7711, -3.0853, -3.1647], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9706, device='cuda:0', dtype=torch.float64)
tensor([-1.8682, -2.6374, -2.7697, -3.0769, -3.1864], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9228, device='cuda:0', dtype=torch.float64)
tensor([-1.8719, -2.6470, -2.7629, -3.0750, -3.1940], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6337, device='cuda:0', dtype=torch.float64)
tensor([-1.8619, -2.6461, -2.7582, -3.0843, -3.1853], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9009, device='cuda:0', dtype=torch.float64)
tensor([-1.8425, -2.6371, -2.7559, -3.1007, -3.1652], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9230, device='cuda:0', dtype=torch.float64)
tensor([-1.8273, -2.6285, -2.7556, -3.1189, -3.1488], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8631, device='cuda:0', dtype=torch.float64)
tensor([-1.8133, -2.6204, -2.7538, -3.1387, -3.1319], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8192, device='cuda:0', dtype=torch.float64)
tensor([-1.8079, -2.6146, -2.7517, -3.1492, -3.1146], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9069, device='cuda:0', dtype=torch.float64)
tensor([-1.8161, -2.6151, -2.7447, -3.1486, -3.1036], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6842, device='cuda:0', dtype=torch.float64)
tensor([-1.8305, -2.6174, -2.7376, -3.1430, -3.1030], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9492, device='cuda:0', dtype=torch.float64)
tensor([-1.8414, -2.6201, -2.7342, -3.1383, -3.1119], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8334, device='cuda:0', dtype=torch.float64)
tensor([-1.8512, -2.6199, -2.7391, -3.1353, -3.1325], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7454, device='cuda:0', dtype=torch.float64)
tensor([-1.8567, -2.6163, -2.7455, -3.1322, -3.1509], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7677, device='cuda:0', dtype=torch.float64)
tensor([-1.8557, -2.6092, -2.7475, -3.1298, -3.1578], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8622, device='cuda:0', dtype=torch.float64)
tensor([-1.8490, -2.6029, -2.7442, -3.1286, -3.1605], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7361, device='cuda:0', dtype=torch.float64)
tensor([-1.8447, -2.5998, -2.7363, -3.1213, -3.1548], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0522, device='cuda:0', dtype=torch.float64)
tensor([-1.8459, -2.6077, -2.7213, -3.1084, -3.1457], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9118, device='cuda:0', dtype=torch.float64)
tensor([-1.8538, -2.6166, -2.7107, -3.0957, -3.1427], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7231, device='cuda:0', dtype=torch.float64)
tensor([-1.8581, -2.6200, -2.7156, -3.0933, -3.1433], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8959, device='cuda:0', dtype=torch.float64)
tensor([-1.8559, -2.6242, -2.7228, -3.0991, -3.1367], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8323, device='cuda:0', dtype=torch.float64)
tensor([-1.8460, -2.6259, -2.7330, -3.1097, -3.1260], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9842, device='cuda:0', dtype=torch.float64)
tensor([-1.8342, -2.6238, -2.7484, -3.1192, -3.1066], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9052, device='cuda:0', dtype=torch.float64)
tensor([-1.8325, -2.6252, -2.7623, -3.1246, -3.1007], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7721, device='cuda:0', dtype=torch.float64)
tensor([-1.8409, -2.6280, -2.7685, -3.1230, -3.1035], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9676, device='cuda:0', dtype=torch.float64)
tensor([-1.8522, -2.6339, -2.7661, -3.1150, -3.1098], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9361, device='cuda:0', dtype=torch.float64)
tensor([-1.8644, -2.6427, -2.7564, -3.1098, -3.1260], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8143, device='cuda:0', dtype=torch.float64)
tensor([-1.8686, -2.6527, -2.7465, -3.1085, -3.1369], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9821, device='cuda:0', dtype=torch.float64)
tensor([-1.8583, -2.6516, -2.7414, -3.1160, -3.1429], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8796, device='cuda:0', dtype=torch.float64)
tensor([-1.8378, -2.6431, -2.7445, -3.1241, -3.1401], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9302, device='cuda:0', dtype=torch.float64)
tensor([-1.8192, -2.6346, -2.7546, -3.1290, -3.1324], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8844, device='cuda:0', dtype=torch.float64)
tensor([-1.8139, -2.6236, -2.7655, -3.1324, -3.1314], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9127, device='cuda:0', dtype=torch.float64)
tensor([-1.8173, -2.6133, -2.7739, -3.1316, -3.1296], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7722, device='cuda:0', dtype=torch.float64)
tensor([-1.8323, -2.6079, -2.7740, -3.1220, -3.1252], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0155, device='cuda:0', dtype=torch.float64)
tensor([-1.8518, -2.6079, -2.7665, -3.1098, -3.1169], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8258, device='cuda:0', dtype=torch.float64)
tensor([-1.8694, -2.6133, -2.7521, -3.0998, -3.1090], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1413, device='cuda:0', dtype=torch.float64)
tensor([-1.8820, -2.6220, -2.7378, -3.0976, -3.1129], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7662, device='cuda:0', dtype=torch.float64)
tensor([-1.8832, -2.6218, -2.7323, -3.1071, -3.1151], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0074, device='cuda:0', dtype=torch.float64)
tensor([-1.8680, -2.6173, -2.7295, -3.1268, -3.1134], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7802, device='cuda:0', dtype=torch.float64)
tensor([-1.8557, -2.6091, -2.7291, -3.1447, -3.1148], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0166, device='cuda:0', dtype=torch.float64)
tensor([-1.8464, -2.5990, -2.7255, -3.1514, -3.1182], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7758, device='cuda:0', dtype=torch.float64)
tensor([-1.8388, -2.5907, -2.7206, -3.1509, -3.1231], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9292, device='cuda:0', dtype=torch.float64)
tensor([-1.8338, -2.5830, -2.7149, -3.1433, -3.1264], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7579, device='cuda:0', dtype=torch.float64)
tensor([-1.8343, -2.5809, -2.7057, -3.1354, -3.1395], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7738, device='cuda:0', dtype=torch.float64)
tensor([-1.8352, -2.5835, -2.7018, -3.1262, -3.1507], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9353, device='cuda:0', dtype=torch.float64)
tensor([-1.8367, -2.5894, -2.7034, -3.1176, -3.1514], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6700, device='cuda:0', dtype=torch.float64)
tensor([-1.8364, -2.5992, -2.7076, -3.1109, -3.1480], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9717, device='cuda:0', dtype=torch.float64)
tensor([-1.8412, -2.6112, -2.7203, -3.1035, -3.1495], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9051, device='cuda:0', dtype=torch.float64)
tensor([-1.8435, -2.6177, -2.7368, -3.1004, -3.1481], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8478, device='cuda:0', dtype=torch.float64)
tensor([-1.8478, -2.6244, -2.7527, -3.0939, -3.1459], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9290, device='cuda:0', dtype=torch.float64)
tensor([-1.8550, -2.6317, -2.7581, -3.0797, -3.1367], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0237, device='cuda:0', dtype=torch.float64)
tensor([-1.8637, -2.6348, -2.7628, -3.0674, -3.1304], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9878, device='cuda:0', dtype=torch.float64)
tensor([-1.8659, -2.6298, -2.7741, -3.0607, -3.1294], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8212, device='cuda:0', dtype=torch.float64)
tensor([-1.8637, -2.6230, -2.7871, -3.0672, -3.1328], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7886, device='cuda:0', dtype=torch.float64)
tensor([-1.8580, -2.6191, -2.7957, -3.0824, -3.1379], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0681, device='cuda:0', dtype=torch.float64)
tensor([-1.8455, -2.6243, -2.7954, -3.0973, -3.1401], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0508, device='cuda:0', dtype=torch.float64)
tensor([-1.8353, -2.6387, -2.7859, -3.1035, -3.1307], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9594, device='cuda:0', dtype=torch.float64)
tensor([-1.8312, -2.6544, -2.7738, -3.1110, -3.1201], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8493, device='cuda:0', dtype=torch.float64)
tensor([-1.8354, -2.6652, -2.7583, -3.1194, -3.1135], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9528, device='cuda:0', dtype=torch.float64)
tensor([-1.8397, -2.6645, -2.7430, -3.1355, -3.1146], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7929, device='cuda:0', dtype=torch.float64)
tensor([-1.8425, -2.6559, -2.7298, -3.1436, -3.1182], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9767, device='cuda:0', dtype=torch.float64)
tensor([-1.8451, -2.6426, -2.7218, -3.1419, -3.1203], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0768, device='cuda:0', dtype=torch.float64)
tensor([-1.8470, -2.6276, -2.7184, -3.1360, -3.1234], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7115, device='cuda:0', dtype=torch.float64)
tensor([-1.8465, -2.6176, -2.7236, -3.1304, -3.1321], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7415, device='cuda:0', dtype=torch.float64)
tensor([-1.8516, -2.6155, -2.7376, -3.1218, -3.1513], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8518, device='cuda:0', dtype=torch.float64)
tensor([-1.8591, -2.6242, -2.7505, -3.1148, -3.1756], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7766, device='cuda:0', dtype=torch.float64)
tensor([-1.8675, -2.6359, -2.7552, -3.1045, -3.1896], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0154, device='cuda:0', dtype=torch.float64)
tensor([-1.8628, -2.6467, -2.7538, -3.0966, -3.1849], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8176, device='cuda:0', dtype=torch.float64)
tensor([-1.8511, -2.6514, -2.7504, -3.0874, -3.1695], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9790, device='cuda:0', dtype=torch.float64)
tensor([-1.8397, -2.6472, -2.7527, -3.0815, -3.1548], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2570, device='cuda:0', dtype=torch.float64)
tensor([-1.8291, -2.6319, -2.7590, -3.0843, -3.1490], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8890, device='cuda:0', dtype=torch.float64)
tensor([-1.8206, -2.6103, -2.7639, -3.0915, -3.1510], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1692, device='cuda:0', dtype=torch.float64)
tensor([-1.8198, -2.5975, -2.7645, -3.0962, -3.1517], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3137, device='cuda:0', dtype=torch.float64)
tensor([-1.8231, -2.5934, -2.7563, -3.1024, -3.1451], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0691, device='cuda:0', dtype=torch.float64)
tensor([-1.8263, -2.5949, -2.7432, -3.1054, -3.1315], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9893, device='cuda:0', dtype=torch.float64)
tensor([-1.8349, -2.5991, -2.7295, -3.1157, -3.1232], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3719, device='cuda:0', dtype=torch.float64)
tensor([-1.8514, -2.6097, -2.7286, -3.1258, -3.1347], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9454, device='cuda:0', dtype=torch.float64)
tensor([-1.8652, -2.6183, -2.7341, -3.1298, -3.1449], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2059, device='cuda:0', dtype=torch.float64)
tensor([-1.8645, -2.6224, -2.7424, -3.1259, -3.1381], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0170, device='cuda:0', dtype=torch.float64)
tensor([-1.8537, -2.6227, -2.7468, -3.1231, -3.1168], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9001, device='cuda:0', dtype=torch.float64)
tensor([-1.8456, -2.6267, -2.7477, -3.1236, -3.0927], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1940, device='cuda:0', dtype=torch.float64)
tensor([-1.8461, -2.6308, -2.7506, -3.1283, -3.0818], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0528, device='cuda:0', dtype=torch.float64)
tensor([-1.8573, -2.6363, -2.7541, -3.1304, -3.0887], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0141, device='cuda:0', dtype=torch.float64)
tensor([-1.8669, -2.6375, -2.7627, -3.1325, -3.0983], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1951, device='cuda:0', dtype=torch.float64)
tensor([-1.8629, -2.6314, -2.7684, -3.1308, -3.0960], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9517, device='cuda:0', dtype=torch.float64)
tensor([-1.8539, -2.6269, -2.7713, -3.1256, -3.0866], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8126, device='cuda:0', dtype=torch.float64)
tensor([-1.8525, -2.6294, -2.7649, -3.1129, -3.0837], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0690, device='cuda:0', dtype=torch.float64)
tensor([-1.8523, -2.6345, -2.7563, -3.1076, -3.0885], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0518, device='cuda:0', dtype=torch.float64)
tensor([-1.8580, -2.6434, -2.7467, -3.1019, -3.1082], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9979, device='cuda:0', dtype=torch.float64)
tensor([-1.8626, -2.6478, -2.7401, -3.1074, -3.1319], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0784, device='cuda:0', dtype=torch.float64)
tensor([-1.8639, -2.6459, -2.7300, -3.1077, -3.1447], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8703, device='cuda:0', dtype=torch.float64)
tensor([-1.8488, -2.6366, -2.7272, -3.1144, -3.1435], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8025, device='cuda:0', dtype=torch.float64)
tensor([-1.8286, -2.6230, -2.7270, -3.1184, -3.1311], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9089, device='cuda:0', dtype=torch.float64)
tensor([-1.8170, -2.6082, -2.7282, -3.1194, -3.1223], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9600, device='cuda:0', dtype=torch.float64)
tensor([-1.8168, -2.5969, -2.7283, -3.1121, -3.1210], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9119, device='cuda:0', dtype=torch.float64)
tensor([-1.8304, -2.5952, -2.7243, -3.0968, -3.1306], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9262, device='cuda:0', dtype=torch.float64)
tensor([-1.8433, -2.5999, -2.7179, -3.0845, -3.1388], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9767, device='cuda:0', dtype=torch.float64)
tensor([-1.8524, -2.6048, -2.7112, -3.0736, -3.1380], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8509, device='cuda:0', dtype=torch.float64)
tensor([-1.8556, -2.6077, -2.7099, -3.0708, -3.1340], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9623, device='cuda:0', dtype=torch.float64)
tensor([-1.8622, -2.6091, -2.7160, -3.0745, -3.1388], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9361, device='cuda:0', dtype=torch.float64)
tensor([-1.8642, -2.6087, -2.7288, -3.0843, -3.1522], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7026, device='cuda:0', dtype=torch.float64)
tensor([-1.8601, -2.6052, -2.7430, -3.0958, -3.1616], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9490, device='cuda:0', dtype=torch.float64)
tensor([-1.8427, -2.5967, -2.7543, -3.1065, -3.1496], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0198, device='cuda:0', dtype=torch.float64)
tensor([-1.8291, -2.5916, -2.7574, -3.1130, -3.1282], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1015, device='cuda:0', dtype=torch.float64)
tensor([-1.8290, -2.5892, -2.7544, -3.1150, -3.1110], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0969, device='cuda:0', dtype=torch.float64)
tensor([-1.8456, -2.5995, -2.7530, -3.1061, -3.1139], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7239, device='cuda:0', dtype=torch.float64)
tensor([-1.8647, -2.6117, -2.7518, -3.0945, -3.1259], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9301, device='cuda:0', dtype=torch.float64)
tensor([-1.8769, -2.6240, -2.7450, -3.0856, -3.1336], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0501, device='cuda:0', dtype=torch.float64)
tensor([-1.8732, -2.6312, -2.7404, -3.0823, -3.1344], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1517, device='cuda:0', dtype=torch.float64)
tensor([-1.8669, -2.6382, -2.7373, -3.0872, -3.1308], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0067, device='cuda:0', dtype=torch.float64)
tensor([-1.8644, -2.6500, -2.7376, -3.0981, -3.1395], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9173, device='cuda:0', dtype=torch.float64)
tensor([-1.8613, -2.6564, -2.7414, -3.1177, -3.1499], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0249, device='cuda:0', dtype=torch.float64)
tensor([-1.8499, -2.6545, -2.7475, -3.1382, -3.1532], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1570, device='cuda:0', dtype=torch.float64)
tensor([-1.8331, -2.6413, -2.7592, -3.1550, -3.1496], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1430, device='cuda:0', dtype=torch.float64)
tensor([-1.8154, -2.6215, -2.7658, -3.1664, -3.1300], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8847, device='cuda:0', dtype=torch.float64)
tensor([-1.8055, -2.6066, -2.7666, -3.1674, -3.1112], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9750, device='cuda:0', dtype=torch.float64)
tensor([-1.8118, -2.6040, -2.7613, -3.1532, -3.1063], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1543, device='cuda:0', dtype=torch.float64)
tensor([-1.8386, -2.6118, -2.7533, -3.1256, -3.1262], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9487, device='cuda:0', dtype=torch.float64)
tensor([-1.8735, -2.6263, -2.7396, -3.0921, -3.1521], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0103, device='cuda:0', dtype=torch.float64)
tensor([-1.8929, -2.6402, -2.7279, -3.0723, -3.1658], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1023, device='cuda:0', dtype=torch.float64)
tensor([-1.8908, -2.6463, -2.7285, -3.0681, -3.1600], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9490, device='cuda:0', dtype=torch.float64)
tensor([-1.8813, -2.6426, -2.7384, -3.0781, -3.1471], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2996, device='cuda:0', dtype=torch.float64)
tensor([-1.8589, -2.6378, -2.7480, -3.0942, -3.1263], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9851, device='cuda:0', dtype=torch.float64)
tensor([-1.8382, -2.6314, -2.7566, -3.1129, -3.1141], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0145, device='cuda:0', dtype=torch.float64)
tensor([-1.8271, -2.6170, -2.7648, -3.1320, -3.1115], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0841, device='cuda:0', dtype=torch.float64)
tensor([-1.8357, -2.6100, -2.7606, -3.1347, -3.1209], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1751, device='cuda:0', dtype=torch.float64)
tensor([-1.8513, -2.6205, -2.7446, -3.1216, -3.1257], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9867, device='cuda:0', dtype=torch.float64)
tensor([-1.8686, -2.6281, -2.7327, -3.1063, -3.1316], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8692, device='cuda:0', dtype=torch.float64)
tensor([-1.8789, -2.6305, -2.7271, -3.1000, -3.1380], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0196, device='cuda:0', dtype=torch.float64)
tensor([-1.8776, -2.6210, -2.7311, -3.0976, -3.1380], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0419, device='cuda:0', dtype=torch.float64)
tensor([-1.8667, -2.6141, -2.7441, -3.0966, -3.1335], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9294, device='cuda:0', dtype=torch.float64)
tensor([-1.8452, -2.6054, -2.7597, -3.0978, -3.1209], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0109, device='cuda:0', dtype=torch.float64)
tensor([-1.8220, -2.6003, -2.7729, -3.0990, -3.1067], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3650, device='cuda:0', dtype=torch.float64)
tensor([-1.8162, -2.6077, -2.7693, -3.0892, -3.0997], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1452, device='cuda:0', dtype=torch.float64)
tensor([-1.8270, -2.6182, -2.7600, -3.0750, -3.1074], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9151, device='cuda:0', dtype=torch.float64)
tensor([-1.8427, -2.6320, -2.7432, -3.0658, -3.1182], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2408, device='cuda:0', dtype=torch.float64)
tensor([-1.8473, -2.6323, -2.7391, -3.0678, -3.1235], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2347, device='cuda:0', dtype=torch.float64)
tensor([-1.8478, -2.6244, -2.7374, -3.0750, -3.1267], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8989, device='cuda:0', dtype=torch.float64)
tensor([-1.8513, -2.6103, -2.7397, -3.0861, -3.1298], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0783, device='cuda:0', dtype=torch.float64)
tensor([-1.8593, -2.6015, -2.7449, -3.0940, -3.1361], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8960, device='cuda:0', dtype=torch.float64)
tensor([-1.8682, -2.6019, -2.7416, -3.0971, -3.1373], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3016, device='cuda:0', dtype=torch.float64)
tensor([-1.8741, -2.6065, -2.7345, -3.0912, -3.1309], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9805, device='cuda:0', dtype=torch.float64)
tensor([-1.8789, -2.6175, -2.7267, -3.0862, -3.1247], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0612, device='cuda:0', dtype=torch.float64)
tensor([-1.8769, -2.6228, -2.7270, -3.0933, -3.1291], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9385, device='cuda:0', dtype=torch.float64)
tensor([-1.8634, -2.6244, -2.7385, -3.1102, -3.1449], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0049, device='cuda:0', dtype=torch.float64)
tensor([-1.8384, -2.6214, -2.7524, -3.1281, -3.1485], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2408, device='cuda:0', dtype=torch.float64)
tensor([-1.8157, -2.6144, -2.7616, -3.1301, -3.1399], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9110, device='cuda:0', dtype=torch.float64)
tensor([-1.8021, -2.6153, -2.7648, -3.1284, -3.1297], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8371, device='cuda:0', dtype=torch.float64)
tensor([-1.8081, -2.6207, -2.7662, -3.1233, -3.1279], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1677, device='cuda:0', dtype=torch.float64)
tensor([-1.8248, -2.6279, -2.7506, -3.1180, -3.1227], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0370, device='cuda:0', dtype=torch.float64)
tensor([-1.8505, -2.6368, -2.7381, -3.1154, -3.1271], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0660, device='cuda:0', dtype=torch.float64)
tensor([-1.8790, -2.6411, -2.7324, -3.1141, -3.1412], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1056, device='cuda:0', dtype=torch.float64)
tensor([-1.8919, -2.6326, -2.7374, -3.1189, -3.1525], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9346, device='cuda:0', dtype=torch.float64)
tensor([-1.8864, -2.6182, -2.7524, -3.1202, -3.1522], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0656, device='cuda:0', dtype=torch.float64)
tensor([-1.8664, -2.6072, -2.7636, -3.1149, -3.1403], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9989, device='cuda:0', dtype=torch.float64)
tensor([-1.8432, -2.6058, -2.7688, -3.1095, -3.1242], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0174, device='cuda:0', dtype=torch.float64)
tensor([-1.8314, -2.6130, -2.7714, -3.0998, -3.1173], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0904, device='cuda:0', dtype=torch.float64)
tensor([-1.8322, -2.6242, -2.7738, -3.0898, -3.1227], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9842, device='cuda:0', dtype=torch.float64)
tensor([-1.8417, -2.6368, -2.7734, -3.0844, -3.1342], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0666, device='cuda:0', dtype=torch.float64)
tensor([-1.8512, -2.6471, -2.7672, -3.0765, -3.1395], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1141, device='cuda:0', dtype=torch.float64)
tensor([-1.8518, -2.6485, -2.7567, -3.0766, -3.1364], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0201, device='cuda:0', dtype=torch.float64)
tensor([-1.8400, -2.6398, -2.7486, -3.0865, -3.1258], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3793, device='cuda:0', dtype=torch.float64)
tensor([-1.8289, -2.6280, -2.7479, -3.1101, -3.1321], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9370, device='cuda:0', dtype=torch.float64)
tensor([-1.8248, -2.6161, -2.7526, -3.1281, -3.1443], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0011, device='cuda:0', dtype=torch.float64)
tensor([-1.8308, -2.6099, -2.7504, -3.1309, -3.1603], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3114, device='cuda:0', dtype=torch.float64)
tensor([-1.8419, -2.6069, -2.7324, -3.1128, -3.1552], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9769, device='cuda:0', dtype=torch.float64)
tensor([-1.8562, -2.6079, -2.7027, -3.0943, -3.1357], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0656, device='cuda:0', dtype=torch.float64)
tensor([-1.8737, -2.6128, -2.6828, -3.0763, -3.1261], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1166, device='cuda:0', dtype=torch.float64)
tensor([-1.8841, -2.6171, -2.6819, -3.0751, -3.1311], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4741, device='cuda:0', dtype=torch.float64)
tensor([-1.8792, -2.6127, -2.6985, -3.0899, -3.1331], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0563, device='cuda:0', dtype=torch.float64)
tensor([-1.8559, -2.6019, -2.7212, -3.1189, -3.1213], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1391, device='cuda:0', dtype=torch.float64)
tensor([-1.8282, -2.5927, -2.7460, -3.1493, -3.1063], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1367, device='cuda:0', dtype=torch.float64)
tensor([-1.8139, -2.5939, -2.7624, -3.1595, -3.0972], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1577, device='cuda:0', dtype=torch.float64)
tensor([-1.8186, -2.6028, -2.7710, -3.1562, -3.1095], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1431, device='cuda:0', dtype=torch.float64)
tensor([-1.8430, -2.6114, -2.7726, -3.1412, -3.1385], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9502, device='cuda:0', dtype=torch.float64)
tensor([-1.8670, -2.6189, -2.7737, -3.1217, -3.1695], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1487, device='cuda:0', dtype=torch.float64)
tensor([-1.8780, -2.6246, -2.7691, -3.0933, -3.1718], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3532, device='cuda:0', dtype=torch.float64)
tensor([-1.8761, -2.6281, -2.7536, -3.0586, -3.1495], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0237, device='cuda:0', dtype=torch.float64)
tensor([-1.8675, -2.6349, -2.7387, -3.0402, -3.1272], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3985, device='cuda:0', dtype=torch.float64)
tensor([-1.8673, -2.6432, -2.7322, -3.0418, -3.1317], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0308, device='cuda:0', dtype=torch.float64)
tensor([-1.8616, -2.6361, -2.7405, -3.0622, -3.1431], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2069, device='cuda:0', dtype=torch.float64)
tensor([-1.8545, -2.6289, -2.7443, -3.0862, -3.1444], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2387, device='cuda:0', dtype=torch.float64)
tensor([-1.8391, -2.6171, -2.7413, -3.1056, -3.1256], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2905, device='cuda:0', dtype=torch.float64)
tensor([-1.8304, -2.6079, -2.7431, -3.1176, -3.1123], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3370, device='cuda:0', dtype=torch.float64)
tensor([-1.8294, -2.5992, -2.7540, -3.1252, -3.1086], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9782, device='cuda:0', dtype=torch.float64)
tensor([-1.8465, -2.5994, -2.7606, -3.1211, -3.1187], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0096, device='cuda:0', dtype=torch.float64)
tensor([-1.8697, -2.6122, -2.7547, -3.1054, -3.1267], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0328, device='cuda:0', dtype=torch.float64)
tensor([-1.8884, -2.6266, -2.7401, -3.0974, -3.1265], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8996, device='cuda:0', dtype=torch.float64)
tensor([-1.8944, -2.6405, -2.7227, -3.0906, -3.1143], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0228, device='cuda:0', dtype=torch.float64)
tensor([-1.8929, -2.6459, -2.7129, -3.0969, -3.1067], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2865, device='cuda:0', dtype=torch.float64)
tensor([-1.8902, -2.6443, -2.7159, -3.1113, -3.1059], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0407, device='cuda:0', dtype=torch.float64)
tensor([-1.8697, -2.6232, -2.7390, -3.1362, -3.1118], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9283, device='cuda:0', dtype=torch.float64)
tensor([-1.8393, -2.6009, -2.7636, -3.1616, -3.1151], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0330, device='cuda:0', dtype=torch.float64)
tensor([-1.8136, -2.5876, -2.7686, -3.1702, -3.1111], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1654, device='cuda:0', dtype=torch.float64)
tensor([-1.8094, -2.5870, -2.7564, -3.1511, -3.1126], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9764, device='cuda:0', dtype=torch.float64)
tensor([-1.8253, -2.5967, -2.7304, -3.1116, -3.1244], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0950, device='cuda:0', dtype=torch.float64)
tensor([-1.8517, -2.6122, -2.7059, -3.0730, -3.1452], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8216, device='cuda:0', dtype=torch.float64)
tensor([-1.8702, -2.6257, -2.6926, -3.0533, -3.1656], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0169, device='cuda:0', dtype=torch.float64)
tensor([-1.8766, -2.6348, -2.6928, -3.0453, -3.1797], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0474, device='cuda:0', dtype=torch.float64)
tensor([-1.8510, -2.6315, -2.7105, -3.0614, -3.1725], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7069, device='cuda:0', dtype=torch.float64)
tensor([-1.8157, -2.6279, -2.7286, -3.0865, -3.1495], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9254, device='cuda:0', dtype=torch.float64)
tensor([-1.7942, -2.6283, -2.7480, -3.1108, -3.1389], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2123, device='cuda:0', dtype=torch.float64)
tensor([-1.7922, -2.6349, -2.7666, -3.1279, -3.1375], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0291, device='cuda:0', dtype=torch.float64)
tensor([-1.8180, -2.6468, -2.7734, -3.1296, -3.1506], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9240, device='cuda:0', dtype=torch.float64)
tensor([-1.8505, -2.6535, -2.7733, -3.1239, -3.1622], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8747, device='cuda:0', dtype=torch.float64)
tensor([-1.8750, -2.6540, -2.7618, -3.1080, -3.1585], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8943, device='cuda:0', dtype=torch.float64)
tensor([-1.8795, -2.6403, -2.7517, -3.0972, -3.1366], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0445, device='cuda:0', dtype=torch.float64)
tensor([-1.8774, -2.6206, -2.7491, -3.0881, -3.1196], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0560, device='cuda:0', dtype=torch.float64)
tensor([-1.8672, -2.6044, -2.7553, -3.0929, -3.1162], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9966, device='cuda:0', dtype=torch.float64)
tensor([-1.8577, -2.5932, -2.7670, -3.1052, -3.1260], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0289, device='cuda:0', dtype=torch.float64)
tensor([-1.8471, -2.5928, -2.7657, -3.1137, -3.1256], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3320, device='cuda:0', dtype=torch.float64)
tensor([-1.8298, -2.5954, -2.7527, -3.1157, -3.1031], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2227, device='cuda:0', dtype=torch.float64)
tensor([-1.8190, -2.6055, -2.7347, -3.1102, -3.0850], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9971, device='cuda:0', dtype=torch.float64)
tensor([-1.8306, -2.6184, -2.7210, -3.0983, -3.0893], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2655, device='cuda:0', dtype=torch.float64)
tensor([-1.8447, -2.6299, -2.7101, -3.0864, -3.1005], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0319, device='cuda:0', dtype=torch.float64)
tensor([-1.8675, -2.6445, -2.7027, -3.0732, -3.1183], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1309, device='cuda:0', dtype=torch.float64)
tensor([-1.8913, -2.6531, -2.6978, -3.0582, -3.1355], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1365, device='cuda:0', dtype=torch.float64)
tensor([-1.8996, -2.6546, -2.6914, -3.0492, -3.1413], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9708, device='cuda:0', dtype=torch.float64)
tensor([-1.8856, -2.6455, -2.7031, -3.0560, -3.1376], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2172, device='cuda:0', dtype=torch.float64)
tensor([-1.8629, -2.6298, -2.7269, -3.0829, -3.1338], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1350, device='cuda:0', dtype=torch.float64)
tensor([-1.8391, -2.6072, -2.7506, -3.1148, -3.1322], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0741, device='cuda:0', dtype=torch.float64)
tensor([-1.8236, -2.5927, -2.7622, -3.1335, -3.1174], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1223, device='cuda:0', dtype=torch.float64)
tensor([-1.8300, -2.5943, -2.7627, -3.1279, -3.1101], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7866, device='cuda:0', dtype=torch.float64)
tensor([-1.8416, -2.5965, -2.7614, -3.1157, -3.1048], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9608, device='cuda:0', dtype=torch.float64)
tensor([-1.8640, -2.6095, -2.7528, -3.0960, -3.1103], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3219, device='cuda:0', dtype=torch.float64)
tensor([-1.8781, -2.6133, -2.7499, -3.0843, -3.1197], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9435, device='cuda:0', dtype=torch.float64)
tensor([-1.8699, -2.6107, -2.7538, -3.0868, -3.1254], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0631, device='cuda:0', dtype=torch.float64)
tensor([-1.8524, -2.6125, -2.7592, -3.0992, -3.1412], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9113, device='cuda:0', dtype=torch.float64)
tensor([-1.8426, -2.6257, -2.7588, -3.1112, -3.1625], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8937, device='cuda:0', dtype=torch.float64)
tensor([-1.8399, -2.6464, -2.7518, -3.1116, -3.1800], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9877, device='cuda:0', dtype=torch.float64)
tensor([-1.8361, -2.6607, -2.7422, -3.1018, -3.1803], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7765, device='cuda:0', dtype=torch.float64)
tensor([-1.8328, -2.6648, -2.7280, -3.0861, -3.1711], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1338, device='cuda:0', dtype=torch.float64)
tensor([-1.8296, -2.6589, -2.7205, -3.0742, -3.1568], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0312, device='cuda:0', dtype=torch.float64)
tensor([-1.8323, -2.6418, -2.7261, -3.0679, -3.1490], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4151, device='cuda:0', dtype=torch.float64)
tensor([-1.8452, -2.6299, -2.7360, -3.0690, -3.1425], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1706, device='cuda:0', dtype=torch.float64)
tensor([-1.8685, -2.6188, -2.7483, -3.0761, -3.1486], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1734, device='cuda:0', dtype=torch.float64)
tensor([-1.8862, -2.6189, -2.7483, -3.0916, -3.1392], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9412, device='cuda:0', dtype=torch.float64)
tensor([-1.8942, -2.6259, -2.7393, -3.1068, -3.1239], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1470, device='cuda:0', dtype=torch.float64)
tensor([-1.8917, -2.6312, -2.7408, -3.1241, -3.1096], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2455, device='cuda:0', dtype=torch.float64)
tensor([-1.8825, -2.6341, -2.7591, -3.1429, -3.1135], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9893, device='cuda:0', dtype=torch.float64)
tensor([-1.8716, -2.6271, -2.7833, -3.1625, -3.1267], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9206, device='cuda:0', dtype=torch.float64)
tensor([-1.8530, -2.6131, -2.8025, -3.1742, -3.1340], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3927, device='cuda:0', dtype=torch.float64)
tensor([-1.8377, -2.5977, -2.8010, -3.1719, -3.1289], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0709, device='cuda:0', dtype=torch.float64)
tensor([-1.8221, -2.5902, -2.7871, -3.1571, -3.1153], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9794, device='cuda:0', dtype=torch.float64)
tensor([-1.8217, -2.5889, -2.7677, -3.1289, -3.1065], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2187, device='cuda:0', dtype=torch.float64)
tensor([-1.8291, -2.5940, -2.7562, -3.1004, -3.1155], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9837, device='cuda:0', dtype=torch.float64)
tensor([-1.8396, -2.6071, -2.7519, -3.0723, -3.1336], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2463, device='cuda:0', dtype=torch.float64)
tensor([-1.8521, -2.6298, -2.7417, -3.0414, -3.1430], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6324, device='cuda:0', dtype=torch.float64)
tensor([-1.8622, -2.6461, -2.7350, -3.0144, -3.1483], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9306, device='cuda:0', dtype=torch.float64)
tensor([-1.8629, -2.6606, -2.7275, -3.0008, -3.1397], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2998, device='cuda:0', dtype=torch.float64)
tensor([-1.8697, -2.6649, -2.7240, -3.0090, -3.1299], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1680, device='cuda:0', dtype=torch.float64)
tensor([-1.8786, -2.6574, -2.7275, -3.0357, -3.1345], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2077, device='cuda:0', dtype=torch.float64)
tensor([-1.8873, -2.6434, -2.7351, -3.0756, -3.1531], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9971, device='cuda:0', dtype=torch.float64)
tensor([-1.8834, -2.6242, -2.7435, -3.1164, -3.1656], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3241, device='cuda:0', dtype=torch.float64)
tensor([-1.8606, -2.6031, -2.7537, -3.1528, -3.1649], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2475, device='cuda:0', dtype=torch.float64)
tensor([-1.8258, -2.5879, -2.7594, -3.1729, -3.1423], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2809, device='cuda:0', dtype=torch.float64)
tensor([-1.8028, -2.5895, -2.7653, -3.1769, -3.1338], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2190, device='cuda:0', dtype=torch.float64)
tensor([-1.8082, -2.6081, -2.7552, -3.1596, -3.1381], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0475, device='cuda:0', dtype=torch.float64)
tensor([-1.8360, -2.6363, -2.7382, -3.1292, -3.1508], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0512, device='cuda:0', dtype=torch.float64)
tensor([-1.8714, -2.6652, -2.7211, -3.0930, -3.1656], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1571, device='cuda:0', dtype=torch.float64)
tensor([-1.8908, -2.6768, -2.7153, -3.0753, -3.1707], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3243, device='cuda:0', dtype=torch.float64)
tensor([-1.8729, -2.6638, -2.7307, -3.0819, -3.1508], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9027, device='cuda:0', dtype=torch.float64)
tensor([-1.8362, -2.6388, -2.7545, -3.1110, -3.1256], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9576, device='cuda:0', dtype=torch.float64)
tensor([-1.8087, -2.6122, -2.7725, -3.1471, -3.1064], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0882, device='cuda:0', dtype=torch.float64)
tensor([-1.7955, -2.5931, -2.7792, -3.1739, -3.0972], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4064, device='cuda:0', dtype=torch.float64)
tensor([-1.8157, -2.5943, -2.7720, -3.1762, -3.1103], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8414, device='cuda:0', dtype=torch.float64)
tensor([-1.8405, -2.6028, -2.7555, -3.1581, -3.1133], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3338, device='cuda:0', dtype=torch.float64)
tensor([-1.8575, -2.6067, -2.7413, -3.1300, -3.1133], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0544, device='cuda:0', dtype=torch.float64)
tensor([-1.8782, -2.6216, -2.7270, -3.0971, -3.1198], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8417, device='cuda:0', dtype=torch.float64)
tensor([-1.8882, -2.6273, -2.7247, -3.0708, -3.1254], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2647, device='cuda:0', dtype=torch.float64)
tensor([-1.8981, -2.6331, -2.7292, -3.0594, -3.1328], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1331, device='cuda:0', dtype=torch.float64)
tensor([-1.8934, -2.6289, -2.7342, -3.0631, -3.1218], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8464, device='cuda:0', dtype=torch.float64)
tensor([-1.8800, -2.6210, -2.7453, -3.0810, -3.1094], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0004, device='cuda:0', dtype=torch.float64)
tensor([-1.8703, -2.6145, -2.7591, -3.0959, -3.0994], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0436, device='cuda:0', dtype=torch.float64)
tensor([-1.8752, -2.6212, -2.7683, -3.0949, -3.1035], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1817, device='cuda:0', dtype=torch.float64)
tensor([-1.8682, -2.6246, -2.7720, -3.0907, -3.0982], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8376, device='cuda:0', dtype=torch.float64)
tensor([-1.8587, -2.6296, -2.7777, -3.0930, -3.1012], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2212, device='cuda:0', dtype=torch.float64)
tensor([-1.8457, -2.6276, -2.7824, -3.1044, -3.1120], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8965, device='cuda:0', dtype=torch.float64)
tensor([-1.8292, -2.6239, -2.7856, -3.1096, -3.1224], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0200, device='cuda:0', dtype=torch.float64)
tensor([-1.8168, -2.6243, -2.7798, -3.1176, -3.1260], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2058, device='cuda:0', dtype=torch.float64)
tensor([-1.8127, -2.6260, -2.7638, -3.1171, -3.1271], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0153, device='cuda:0', dtype=torch.float64)
tensor([-1.8274, -2.6324, -2.7421, -3.1010, -3.1399], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0451, device='cuda:0', dtype=torch.float64)
tensor([-1.8458, -2.6375, -2.7328, -3.0890, -3.1618], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0382, device='cuda:0', dtype=torch.float64)
tensor([-1.8505, -2.6304, -2.7291, -3.0841, -3.1684], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3200, device='cuda:0', dtype=torch.float64)
tensor([-1.8363, -2.6143, -2.7409, -3.0935, -3.1581], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1719, device='cuda:0', dtype=torch.float64)
tensor([-1.8235, -2.6020, -2.7545, -3.0949, -3.1406], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8346, device='cuda:0', dtype=torch.float64)
tensor([-1.8207, -2.5914, -2.7634, -3.0959, -3.1297], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0008, device='cuda:0', dtype=torch.float64)
tensor([-1.8294, -2.5934, -2.7620, -3.0935, -3.1275], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2996, device='cuda:0', dtype=torch.float64)
tensor([-1.8493, -2.6051, -2.7439, -3.0951, -3.1206], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0704, device='cuda:0', dtype=torch.float64)
tensor([-1.8756, -2.6210, -2.7219, -3.0972, -3.1121], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2291, device='cuda:0', dtype=torch.float64)
tensor([-1.8894, -2.6365, -2.7079, -3.1099, -3.0895], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1375, device='cuda:0', dtype=torch.float64)
tensor([-1.8906, -2.6474, -2.7089, -3.1264, -3.0830], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1178, device='cuda:0', dtype=torch.float64)
tensor([-1.8789, -2.6508, -2.7213, -3.1492, -3.0857], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9906, device='cuda:0', dtype=torch.float64)
tensor([-1.8757, -2.6474, -2.7356, -3.1562, -3.1000], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1475, device='cuda:0', dtype=torch.float64)
tensor([-1.8766, -2.6428, -2.7430, -3.1479, -3.1112], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1662, device='cuda:0', dtype=torch.float64)
tensor([-1.8762, -2.6425, -2.7318, -3.1189, -3.1115], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1793, device='cuda:0', dtype=torch.float64)
tensor([-1.8921, -2.6461, -2.7203, -3.0865, -3.1208], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0919, device='cuda:0', dtype=torch.float64)
tensor([-1.9021, -2.6409, -2.7226, -3.0641, -3.1328], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1009, device='cuda:0', dtype=torch.float64)
tensor([-1.8902, -2.6240, -2.7425, -3.0599, -3.1438], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9216, device='cuda:0', dtype=torch.float64)
tensor([-1.8566, -2.6023, -2.7648, -3.0684, -3.1333], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8804, device='cuda:0', dtype=torch.float64)
tensor([-1.8212, -2.5868, -2.7831, -3.0798, -3.1215], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8346, device='cuda:0', dtype=torch.float64)
tensor([-1.8014, -2.5867, -2.7874, -3.0877, -3.1116], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9670, device='cuda:0', dtype=torch.float64)
tensor([-1.8046, -2.6056, -2.7823, -3.0896, -3.1218], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2781, device='cuda:0', dtype=torch.float64)
tensor([-1.8225, -2.6365, -2.7741, -3.0817, -3.1486], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0479, device='cuda:0', dtype=torch.float64)
tensor([-1.8436, -2.6549, -2.7653, -3.0743, -3.1701], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0499, device='cuda:0', dtype=torch.float64)
tensor([-1.8512, -2.6600, -2.7577, -3.0773, -3.1775], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2964, device='cuda:0', dtype=torch.float64)
tensor([-1.8409, -2.6444, -2.7605, -3.0913, -3.1755], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0524, device='cuda:0', dtype=torch.float64)
tensor([-1.8341, -2.6172, -2.7685, -3.1097, -3.1672], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0005, device='cuda:0', dtype=torch.float64)
tensor([-1.8381, -2.5992, -2.7686, -3.1221, -3.1557], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0907, device='cuda:0', dtype=torch.float64)
tensor([-1.8516, -2.5891, -2.7613, -3.1298, -3.1404], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2445, device='cuda:0', dtype=torch.float64)
tensor([-1.8773, -2.5965, -2.7485, -3.1221, -3.1381], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0926, device='cuda:0', dtype=torch.float64)
tensor([-1.9066, -2.6076, -2.7274, -3.1094, -3.1334], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0526, device='cuda:0', dtype=torch.float64)
tensor([-1.9225, -2.6144, -2.7183, -3.0958, -3.1269], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2228, device='cuda:0', dtype=torch.float64)
tensor([-1.9185, -2.6203, -2.7198, -3.0863, -3.1234], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1771, device='cuda:0', dtype=torch.float64)
tensor([-1.8938, -2.6151, -2.7310, -3.0904, -3.1030], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3074, device='cuda:0', dtype=torch.float64)
tensor([-1.8722, -2.6198, -2.7355, -3.0935, -3.0753], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7984, device='cuda:0', dtype=torch.float64)
tensor([-1.8540, -2.6292, -2.7360, -3.0968, -3.0541], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7947, device='cuda:0', dtype=torch.float64)
tensor([-1.8411, -2.6348, -2.7396, -3.1015, -3.0537], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1057, device='cuda:0', dtype=torch.float64)
tensor([-1.8287, -2.6380, -2.7493, -3.1099, -3.0646], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0200, device='cuda:0', dtype=torch.float64)
tensor([-1.8260, -2.6447, -2.7575, -3.1115, -3.0957], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2732, device='cuda:0', dtype=torch.float64)
tensor([-1.8333, -2.6452, -2.7600, -3.1143, -3.1208], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9475, device='cuda:0', dtype=torch.float64)
tensor([-1.8485, -2.6460, -2.7509, -3.1008, -3.1352], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0988, device='cuda:0', dtype=torch.float64)
tensor([-1.8722, -2.6466, -2.7417, -3.0773, -3.1522], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4969, device='cuda:0', dtype=torch.float64)
tensor([-1.8825, -2.6373, -2.7386, -3.0661, -3.1708], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2767, device='cuda:0', dtype=torch.float64)
tensor([-1.8850, -2.6290, -2.7319, -3.0714, -3.1899], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2637, device='cuda:0', dtype=torch.float64)
tensor([-1.8805, -2.6185, -2.7268, -3.0879, -3.1983], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1717, device='cuda:0', dtype=torch.float64)
tensor([-1.8526, -2.6085, -2.7292, -3.1189, -3.1775], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4340, device='cuda:0', dtype=torch.float64)
tensor([-1.8101, -2.6009, -2.7377, -3.1498, -3.1306], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2097, device='cuda:0', dtype=torch.float64)
tensor([-1.7943, -2.6071, -2.7371, -3.1663, -3.0994], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9302, device='cuda:0', dtype=torch.float64)
tensor([-1.8063, -2.6252, -2.7325, -3.1573, -3.0875], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2921, device='cuda:0', dtype=torch.float64)
tensor([-1.8452, -2.6506, -2.7247, -3.1222, -3.0876], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0572, device='cuda:0', dtype=torch.float64)
tensor([-1.8974, -2.6740, -2.7125, -3.0779, -3.0924], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1452, device='cuda:0', dtype=torch.float64)
tensor([-1.9381, -2.6896, -2.7067, -3.0472, -3.0973], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2426, device='cuda:0', dtype=torch.float64)
tensor([-1.9460, -2.6915, -2.7134, -3.0413, -3.0942], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2619, device='cuda:0', dtype=torch.float64)
tensor([-1.9220, -2.6634, -2.7335, -3.0765, -3.0885], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1094, device='cuda:0', dtype=torch.float64)
tensor([-1.8888, -2.6290, -2.7527, -3.1254, -3.0908], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9201, device='cuda:0', dtype=torch.float64)
tensor([-1.8495, -2.5893, -2.7679, -3.1677, -3.0942], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0667, device='cuda:0', dtype=torch.float64)
tensor([-1.8236, -2.5643, -2.7698, -3.1945, -3.0984], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1033, device='cuda:0', dtype=torch.float64)
tensor([-1.8204, -2.5699, -2.7589, -3.1817, -3.1147], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0563, device='cuda:0', dtype=torch.float64)
tensor([-1.8285, -2.5963, -2.7459, -3.1466, -3.1372], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0328, device='cuda:0', dtype=torch.float64)
tensor([-1.8444, -2.6255, -2.7279, -3.1070, -3.1510], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2300, device='cuda:0', dtype=torch.float64)
tensor([-1.8652, -2.6592, -2.7119, -3.0709, -3.1653], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0790, device='cuda:0', dtype=torch.float64)
tensor([-1.8756, -2.6817, -2.7003, -3.0463, -3.1671], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0604, device='cuda:0', dtype=torch.float64)
tensor([-1.8739, -2.6884, -2.7116, -3.0388, -3.1724], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2829, device='cuda:0', dtype=torch.float64)
tensor([-1.8538, -2.6713, -2.7463, -3.0557, -3.1645], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3043, device='cuda:0', dtype=torch.float64)
tensor([-1.8264, -2.6448, -2.7772, -3.0913, -3.1440], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0956, device='cuda:0', dtype=torch.float64)
tensor([-1.8109, -2.6384, -2.7915, -3.1168, -3.1274], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3735, device='cuda:0', dtype=torch.float64)
tensor([-1.8154, -2.6327, -2.8002, -3.1320, -3.1227], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3845, device='cuda:0', dtype=torch.float64)
tensor([-1.8533, -2.6421, -2.7937, -3.1351, -3.1522], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2569, device='cuda:0', dtype=torch.float64)
tensor([-1.8948, -2.6512, -2.7897, -3.1329, -3.1907], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2207, device='cuda:0', dtype=torch.float64)
tensor([-1.9129, -2.6474, -2.7761, -3.1271, -3.2023], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4262, device='cuda:0', dtype=torch.float64)
tensor([-1.8934, -2.6309, -2.7598, -3.1194, -3.1690], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1699, device='cuda:0', dtype=torch.float64)
tensor([-1.8587, -2.6115, -2.7418, -3.1091, -3.1148], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3460, device='cuda:0', dtype=torch.float64)
tensor([-1.8341, -2.6019, -2.7206, -3.0962, -3.0812], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1298, device='cuda:0', dtype=torch.float64)
tensor([-1.8222, -2.6006, -2.7043, -3.0847, -3.0677], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0219, device='cuda:0', dtype=torch.float64)
tensor([-1.8244, -2.6083, -2.6935, -3.0732, -3.0642], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0729, device='cuda:0', dtype=torch.float64)
tensor([-1.8295, -2.6210, -2.6927, -3.0597, -3.0648], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9365, device='cuda:0', dtype=torch.float64)
tensor([-1.8427, -2.6304, -2.7052, -3.0576, -3.0821], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0338, device='cuda:0', dtype=torch.float64)
tensor([-1.8564, -2.6325, -2.7249, -3.0616, -3.0995], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0648, device='cuda:0', dtype=torch.float64)
tensor([-1.8784, -2.6381, -2.7457, -3.0670, -3.1274], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1819, device='cuda:0', dtype=torch.float64)
tensor([-1.9053, -2.6496, -2.7565, -3.0759, -3.1503], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1402, device='cuda:0', dtype=torch.float64)
tensor([-1.8999, -2.6520, -2.7636, -3.0937, -3.1527], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9752, device='cuda:0', dtype=torch.float64)
tensor([-1.8822, -2.6517, -2.7712, -3.1067, -3.1440], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1944, device='cuda:0', dtype=torch.float64)
tensor([-1.8653, -2.6583, -2.7740, -3.1109, -3.1323], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3352, device='cuda:0', dtype=torch.float64)
tensor([-1.8516, -2.6636, -2.7763, -3.1185, -3.1277], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1746, device='cuda:0', dtype=torch.float64)
tensor([-1.8519, -2.6610, -2.7795, -3.1335, -3.1411], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2868, device='cuda:0', dtype=torch.float64)
tensor([-1.8553, -2.6516, -2.7821, -3.1460, -3.1674], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1471, device='cuda:0', dtype=torch.float64)
tensor([-1.8660, -2.6370, -2.7758, -3.1464, -3.1890], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9239, device='cuda:0', dtype=torch.float64)
tensor([-1.8646, -2.6216, -2.7690, -3.1484, -3.1985], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0440, device='cuda:0', dtype=torch.float64)
tensor([-1.8650, -2.6108, -2.7636, -3.1492, -3.2026], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3365, device='cuda:0', dtype=torch.float64)
tensor([-1.8588, -2.6069, -2.7628, -3.1478, -3.2017], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1476, device='cuda:0', dtype=torch.float64)
tensor([-1.8427, -2.6006, -2.7663, -3.1455, -3.2007], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6008, device='cuda:0', dtype=torch.float64)
tensor([-1.8264, -2.5994, -2.7595, -3.1415, -3.1845], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2086, device='cuda:0', dtype=torch.float64)
tensor([-1.8180, -2.6045, -2.7446, -3.1261, -3.1497], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1536, device='cuda:0', dtype=torch.float64)
tensor([-1.8266, -2.6124, -2.7220, -3.1032, -3.1178], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2708, device='cuda:0', dtype=torch.float64)
tensor([-1.8559, -2.6166, -2.7035, -3.0758, -3.1094], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2545, device='cuda:0', dtype=torch.float64)
tensor([-1.8833, -2.6123, -2.6909, -3.0586, -3.1118], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2010, device='cuda:0', dtype=torch.float64)
tensor([-1.8955, -2.6054, -2.7002, -3.0520, -3.1193], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3235, device='cuda:0', dtype=torch.float64)
tensor([-1.8957, -2.5932, -2.7106, -3.0557, -3.1237], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4818, device='cuda:0', dtype=torch.float64)
tensor([-1.8922, -2.5880, -2.7199, -3.0683, -3.1132], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9211, device='cuda:0', dtype=torch.float64)
tensor([-1.8828, -2.5901, -2.7293, -3.0921, -3.0989], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4517, device='cuda:0', dtype=torch.float64)
tensor([-1.8914, -2.5997, -2.7445, -3.1148, -3.1068], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2797, device='cuda:0', dtype=torch.float64)
tensor([-1.8903, -2.6171, -2.7585, -3.1265, -3.1197], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8365, device='cuda:0', dtype=torch.float64)
tensor([-1.8935, -2.6393, -2.7670, -3.1178, -3.1297], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1604, device='cuda:0', dtype=torch.float64)
tensor([-1.8939, -2.6631, -2.7568, -3.0847, -3.1267], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0809, device='cuda:0', dtype=torch.float64)
tensor([-1.8855, -2.6848, -2.7410, -3.0507, -3.1239], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0368, device='cuda:0', dtype=torch.float64)
tensor([-1.8811, -2.6985, -2.7268, -3.0266, -3.1287], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0280, device='cuda:0', dtype=torch.float64)
tensor([-1.8766, -2.6961, -2.7186, -3.0249, -3.1401], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2965, device='cuda:0', dtype=torch.float64)
tensor([-1.8816, -2.6832, -2.7166, -3.0363, -3.1509], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0860, device='cuda:0', dtype=torch.float64)
tensor([-1.8680, -2.6598, -2.7188, -3.0543, -3.1376], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4703, device='cuda:0', dtype=torch.float64)
tensor([-1.8356, -2.6275, -2.7188, -3.0687, -3.0882], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2803, device='cuda:0', dtype=torch.float64)
tensor([-1.8107, -2.5997, -2.7275, -3.0954, -3.0509], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0382, device='cuda:0', dtype=torch.float64)
tensor([-1.8055, -2.5789, -2.7464, -3.1249, -3.0500], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0770, device='cuda:0', dtype=torch.float64)
tensor([-1.8229, -2.5685, -2.7536, -3.1409, -3.0681], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0247, device='cuda:0', dtype=torch.float64)
tensor([-1.8578, -2.5788, -2.7567, -3.1448, -3.1128], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3889, device='cuda:0', dtype=torch.float64)
tensor([-1.8988, -2.6011, -2.7496, -3.1450, -3.1546], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2448, device='cuda:0', dtype=torch.float64)
tensor([-1.9105, -2.6210, -2.7405, -3.1460, -3.1757], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9718, device='cuda:0', dtype=torch.float64)
tensor([-1.8943, -2.6319, -2.7381, -3.1535, -3.1803], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4061, device='cuda:0', dtype=torch.float64)
tensor([-1.8736, -2.6400, -2.7442, -3.1651, -3.1908], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8231, device='cuda:0', dtype=torch.float64)
tensor([-1.8477, -2.6382, -2.7535, -3.1858, -3.1993], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2265, device='cuda:0', dtype=torch.float64)
tensor([-1.8313, -2.6348, -2.7584, -3.2025, -3.2016], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1761, device='cuda:0', dtype=torch.float64)
tensor([-1.8214, -2.6280, -2.7513, -3.1983, -3.1898], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4779, device='cuda:0', dtype=torch.float64)
tensor([-1.8200, -2.6112, -2.7523, -3.1728, -3.1727], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1103, device='cuda:0', dtype=torch.float64)
tensor([-1.8343, -2.5990, -2.7495, -3.1279, -3.1487], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4010, device='cuda:0', dtype=torch.float64)
tensor([-1.8578, -2.5954, -2.7465, -3.0827, -3.1332], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1562, device='cuda:0', dtype=torch.float64)
tensor([-1.8814, -2.5977, -2.7451, -3.0477, -3.1264], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2300, device='cuda:0', dtype=torch.float64)
tensor([-1.9004, -2.5965, -2.7367, -3.0281, -3.1246], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1460, device='cuda:0', dtype=torch.float64)
tensor([-1.8919, -2.5885, -2.7409, -3.0350, -3.1297], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2591, device='cuda:0', dtype=torch.float64)
tensor([-1.8704, -2.5891, -2.7499, -3.0546, -3.1322], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2505, device='cuda:0', dtype=torch.float64)
tensor([-1.8470, -2.6002, -2.7495, -3.0754, -3.1203], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0533, device='cuda:0', dtype=torch.float64)
tensor([-1.8322, -2.6248, -2.7463, -3.0762, -3.1069], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8078, device='cuda:0', dtype=torch.float64)
tensor([-1.8372, -2.6569, -2.7369, -3.0672, -3.0988], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1511, device='cuda:0', dtype=torch.float64)
tensor([-1.8577, -2.6917, -2.7176, -3.0549, -3.0968], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0214, device='cuda:0', dtype=torch.float64)
tensor([-1.8842, -2.7173, -2.6950, -3.0439, -3.0941], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3058, device='cuda:0', dtype=torch.float64)
tensor([-1.8971, -2.7235, -2.6804, -3.0534, -3.0947], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9681, device='cuda:0', dtype=torch.float64)
tensor([-1.8959, -2.7095, -2.6841, -3.0776, -3.0874], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2137, device='cuda:0', dtype=torch.float64)
tensor([-1.8769, -2.6688, -2.7177, -3.1086, -3.0836], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3753, device='cuda:0', dtype=torch.float64)
tensor([-1.8555, -2.6145, -2.7618, -3.1457, -3.0924], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4477, device='cuda:0', dtype=torch.float64)
tensor([-1.8469, -2.5679, -2.8069, -3.1809, -3.1188], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9420, device='cuda:0', dtype=torch.float64)
tensor([-1.8450, -2.5486, -2.8338, -3.1934, -3.1359], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5429, device='cuda:0', dtype=torch.float64)
tensor([-1.8730, -2.5622, -2.8259, -3.1715, -3.1574], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1242, device='cuda:0', dtype=torch.float64)
tensor([-1.8977, -2.5890, -2.8010, -3.1463, -3.1664], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2239, device='cuda:0', dtype=torch.float64)
tensor([-1.8968, -2.6132, -2.7720, -3.1336, -3.1640], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0779, device='cuda:0', dtype=torch.float64)
tensor([-1.8613, -2.6228, -2.7520, -3.1402, -3.1457], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4518, device='cuda:0', dtype=torch.float64)
tensor([-1.8207, -2.6299, -2.7389, -3.1529, -3.1236], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4324, device='cuda:0', dtype=torch.float64)
tensor([-1.7891, -2.6247, -2.7431, -3.1653, -3.1175], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2853, device='cuda:0', dtype=torch.float64)
tensor([-1.7897, -2.6187, -2.7379, -3.1571, -3.1157], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1927, device='cuda:0', dtype=torch.float64)
tensor([-1.8179, -2.6185, -2.7266, -3.1334, -3.1208], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0745, device='cuda:0', dtype=torch.float64)
tensor([-1.8610, -2.6223, -2.7158, -3.0958, -3.1344], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4344, device='cuda:0', dtype=torch.float64)
tensor([-1.9189, -2.6318, -2.7049, -3.0519, -3.1664], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0867, device='cuda:0', dtype=torch.float64)
tensor([-1.9501, -2.6295, -2.7044, -3.0245, -3.1805], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0729, device='cuda:0', dtype=torch.float64)
tensor([-1.9437, -2.6220, -2.7187, -3.0119, -3.1733], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2764, device='cuda:0', dtype=torch.float64)
tensor([-1.9042, -2.6123, -2.7421, -3.0234, -3.1552], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1871, device='cuda:0', dtype=torch.float64)
tensor([-1.8517, -2.6096, -2.7585, -3.0440, -3.1286], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8473, device='cuda:0', dtype=torch.float64)
tensor([-1.8140, -2.6201, -2.7679, -3.0676, -3.1129], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0228, device='cuda:0', dtype=torch.float64)
tensor([-1.8043, -2.6367, -2.7690, -3.0719, -3.1142], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2518, device='cuda:0', dtype=torch.float64)
tensor([-1.8114, -2.6498, -2.7788, -3.0631, -3.1232], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9908, device='cuda:0', dtype=torch.float64)
tensor([-1.8289, -2.6669, -2.7797, -3.0555, -3.1353], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3194, device='cuda:0', dtype=torch.float64)
tensor([-1.8540, -2.6775, -2.7729, -3.0453, -3.1403], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9716, device='cuda:0', dtype=torch.float64)
tensor([-1.8728, -2.6794, -2.7696, -3.0638, -3.1358], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1673, device='cuda:0', dtype=torch.float64)
tensor([-1.8874, -2.6712, -2.7565, -3.0952, -3.1216], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2579, device='cuda:0', dtype=torch.float64)
tensor([-1.8874, -2.6597, -2.7505, -3.1398, -3.1037], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1145, device='cuda:0', dtype=torch.float64)
tensor([-1.8667, -2.6333, -2.7661, -3.1968, -3.0923], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1017, device='cuda:0', dtype=torch.float64)
tensor([-1.8341, -2.5951, -2.7952, -3.2425, -3.0872], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2593, device='cuda:0', dtype=torch.float64)
tensor([-1.8129, -2.5655, -2.8101, -3.2513, -3.0855], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2347, device='cuda:0', dtype=torch.float64)
tensor([-1.8124, -2.5499, -2.8022, -3.2274, -3.0902], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5095, device='cuda:0', dtype=torch.float64)
tensor([-1.8347, -2.5448, -2.7741, -3.1712, -3.0910], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2889, device='cuda:0', dtype=torch.float64)
tensor([-1.8800, -2.5654, -2.7318, -3.1039, -3.1074], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3072, device='cuda:0', dtype=torch.float64)
tensor([-1.9157, -2.5932, -2.6966, -3.0511, -3.1314], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0941, device='cuda:0', dtype=torch.float64)
tensor([-1.9184, -2.6182, -2.6775, -3.0403, -3.1616], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2678, device='cuda:0', dtype=torch.float64)
tensor([-1.9032, -2.6445, -2.6751, -3.0436, -3.1818], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2174, device='cuda:0', dtype=torch.float64)
tensor([-1.8689, -2.6666, -2.6985, -3.0693, -3.1848], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0524, device='cuda:0', dtype=torch.float64)
tensor([-1.8275, -2.6856, -2.7276, -3.1080, -3.1688], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1614, device='cuda:0', dtype=torch.float64)
tensor([-1.8139, -2.7045, -2.7526, -3.1245, -3.1528], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1908, device='cuda:0', dtype=torch.float64)
tensor([-1.8342, -2.7172, -2.7636, -3.1244, -3.1510], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2878, device='cuda:0', dtype=torch.float64)
tensor([-1.8705, -2.7256, -2.7515, -3.1124, -3.1430], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2241, device='cuda:0', dtype=torch.float64)
tensor([-1.9033, -2.7304, -2.7426, -3.1021, -3.1304], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2040, device='cuda:0', dtype=torch.float64)
tensor([-1.9323, -2.7214, -2.7249, -3.0914, -3.1205], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1961, device='cuda:0', dtype=torch.float64)
tensor([-1.9495, -2.6985, -2.7258, -3.1032, -3.1304], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4241, device='cuda:0', dtype=torch.float64)
tensor([-1.9237, -2.6553, -2.7476, -3.1324, -3.1421], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3116, device='cuda:0', dtype=torch.float64)
tensor([-1.8867, -2.6228, -2.7638, -3.1511, -3.1307], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1845, device='cuda:0', dtype=torch.float64)
tensor([-1.8411, -2.6085, -2.7609, -3.1491, -3.1039], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3517, device='cuda:0', dtype=torch.float64)
tensor([-1.8118, -2.6144, -2.7467, -3.1328, -3.0874], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5808, device='cuda:0', dtype=torch.float64)
tensor([-1.7961, -2.6356, -2.7255, -3.1193, -3.0795], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3762, device='cuda:0', dtype=torch.float64)
tensor([-1.7962, -2.6544, -2.7104, -3.1225, -3.0827], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9589, device='cuda:0', dtype=torch.float64)
tensor([-1.8109, -2.6590, -2.7033, -3.1271, -3.0927], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4029, device='cuda:0', dtype=torch.float64)
tensor([-1.8346, -2.6454, -2.7053, -3.1220, -3.0995], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0527, device='cuda:0', dtype=torch.float64)
tensor([-1.8499, -2.6224, -2.7242, -3.1208, -3.1091], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4426, device='cuda:0', dtype=torch.float64)
tensor([-1.8911, -2.6032, -2.7499, -3.1193, -3.1381], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1435, device='cuda:0', dtype=torch.float64)
tensor([-1.9305, -2.5939, -2.7609, -3.1195, -3.1533], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2033, device='cuda:0', dtype=torch.float64)
tensor([-1.9395, -2.5936, -2.7532, -3.1111, -3.1405], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2073, device='cuda:0', dtype=torch.float64)
tensor([-1.9372, -2.5997, -2.7367, -3.1042, -3.1219], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1667, device='cuda:0', dtype=torch.float64)
tensor([-1.9128, -2.6068, -2.7343, -3.1056, -3.1115], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1712, device='cuda:0', dtype=torch.float64)
tensor([-1.8788, -2.6120, -2.7380, -3.1177, -3.1099], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3335, device='cuda:0', dtype=torch.float64)
tensor([-1.8430, -2.6197, -2.7445, -3.1287, -3.1176], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5480, device='cuda:0', dtype=torch.float64)
tensor([-1.8124, -2.6271, -2.7524, -3.1264, -3.1161], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3916, device='cuda:0', dtype=torch.float64)
tensor([-1.8080, -2.6459, -2.7526, -3.1076, -3.1314], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1420, device='cuda:0', dtype=torch.float64)
tensor([-1.8271, -2.6583, -2.7519, -3.0985, -3.1534], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2392, device='cuda:0', dtype=torch.float64)
tensor([-1.8485, -2.6575, -2.7603, -3.1046, -3.1653], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3144, device='cuda:0', dtype=torch.float64)
tensor([-1.8674, -2.6463, -2.7683, -3.1160, -3.1744], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2692, device='cuda:0', dtype=torch.float64)
tensor([-1.8782, -2.6241, -2.7718, -3.1228, -3.1635], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2652, device='cuda:0', dtype=torch.float64)
tensor([-1.8844, -2.6017, -2.7737, -3.1256, -3.1417], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0954, device='cuda:0', dtype=torch.float64)
tensor([-1.8890, -2.5903, -2.7681, -3.1195, -3.1164], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1449, device='cuda:0', dtype=torch.float64)
tensor([-1.8959, -2.5902, -2.7595, -3.0977, -3.0968], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2151, device='cuda:0', dtype=torch.float64)
tensor([-1.8997, -2.6134, -2.7495, -3.0673, -3.0846], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4007, device='cuda:0', dtype=torch.float64)
tensor([-1.9034, -2.6459, -2.7475, -3.0488, -3.0966], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1748, device='cuda:0', dtype=torch.float64)
tensor([-1.9012, -2.6770, -2.7324, -3.0374, -3.1078], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2490, device='cuda:0', dtype=torch.float64)
tensor([-1.8871, -2.6973, -2.7121, -3.0359, -3.1069], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5609, device='cuda:0', dtype=torch.float64)
tensor([-1.8629, -2.6888, -2.7126, -3.0487, -3.1118], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2032, device='cuda:0', dtype=torch.float64)
tensor([-1.8220, -2.6578, -2.7332, -3.0771, -3.1165], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2789, device='cuda:0', dtype=torch.float64)
tensor([-1.7951, -2.6209, -2.7727, -3.1067, -3.1256], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7293, device='cuda:0', dtype=torch.float64)
tensor([-1.7880, -2.5832, -2.8144, -3.1320, -3.1328], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5871, device='cuda:0', dtype=torch.float64)
tensor([-1.8187, -2.5659, -2.8185, -3.1274, -3.1256], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1882, device='cuda:0', dtype=torch.float64)
tensor([-1.8578, -2.5744, -2.7973, -3.1201, -3.1135], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3238, device='cuda:0', dtype=torch.float64)
tensor([-1.8906, -2.5934, -2.7735, -3.1214, -3.1019], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5574, device='cuda:0', dtype=torch.float64)
tensor([-1.9210, -2.6134, -2.7558, -3.1419, -3.1206], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2686, device='cuda:0', dtype=torch.float64)
tensor([-1.9281, -2.6365, -2.7368, -3.1648, -3.1457], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5296, device='cuda:0', dtype=torch.float64)
tensor([-1.9190, -2.6585, -2.7143, -3.1788, -3.1498], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8388, device='cuda:0', dtype=torch.float64)
tensor([-1.8987, -2.6754, -2.6968, -3.1803, -3.1372], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3474, device='cuda:0', dtype=torch.float64)
tensor([-1.8830, -2.6889, -2.6902, -3.1687, -3.1256], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1663, device='cuda:0', dtype=torch.float64)
tensor([-1.8704, -2.6962, -2.6954, -3.1463, -3.1256], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4214, device='cuda:0', dtype=torch.float64)
tensor([-1.8638, -2.6880, -2.7138, -3.1204, -3.1511], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9182, device='cuda:0', dtype=torch.float64)
tensor([-1.8635, -2.6736, -2.7311, -3.0895, -3.1650], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2887, device='cuda:0', dtype=torch.float64)
tensor([-1.8583, -2.6517, -2.7402, -3.0641, -3.1616], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3778, device='cuda:0', dtype=torch.float64)
tensor([-1.8539, -2.6304, -2.7436, -3.0571, -3.1491], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3715, device='cuda:0', dtype=torch.float64)
tensor([-1.8744, -2.6174, -2.7439, -3.0573, -3.1654], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2290, device='cuda:0', dtype=torch.float64)
tensor([-1.8863, -2.6050, -2.7602, -3.0787, -3.1816], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0391, device='cuda:0', dtype=torch.float64)
tensor([-1.8687, -2.5984, -2.7890, -3.1000, -3.1825], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3145, device='cuda:0', dtype=torch.float64)
tensor([-1.8410, -2.6067, -2.8044, -3.1023, -3.1631], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1307, device='cuda:0', dtype=torch.float64)
tensor([-1.8176, -2.6132, -2.8090, -3.0837, -3.1309], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3607, device='cuda:0', dtype=torch.float64)
tensor([-1.8282, -2.6332, -2.8015, -3.0422, -3.1159], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4211, device='cuda:0', dtype=torch.float64)
tensor([-1.8660, -2.6538, -2.7868, -3.0060, -3.1206], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3693, device='cuda:0', dtype=torch.float64)
tensor([-1.9081, -2.6671, -2.7742, -2.9868, -3.1443], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1995, device='cuda:0', dtype=torch.float64)
tensor([-1.9229, -2.6706, -2.7668, -2.9982, -3.1377], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1453, device='cuda:0', dtype=torch.float64)
tensor([-1.8937, -2.6462, -2.7786, -3.0379, -3.1105], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1683, device='cuda:0', dtype=torch.float64)
tensor([-1.8509, -2.6184, -2.7887, -3.0947, -3.0756], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1608, device='cuda:0', dtype=torch.float64)
tensor([-1.8300, -2.5904, -2.7874, -3.1427, -3.0526], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2445, device='cuda:0', dtype=torch.float64)
tensor([-1.8284, -2.5777, -2.7747, -3.1713, -3.0545], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3454, device='cuda:0', dtype=torch.float64)
tensor([-1.8506, -2.5717, -2.7563, -3.1791, -3.0807], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3287, device='cuda:0', dtype=torch.float64)
tensor([-1.8915, -2.5794, -2.7214, -3.1598, -3.1237], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5182, device='cuda:0', dtype=torch.float64)
tensor([-1.9320, -2.5957, -2.6731, -3.1194, -3.1527], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1455, device='cuda:0', dtype=torch.float64)
tensor([-1.9394, -2.6158, -2.6435, -3.0746, -3.1564], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4844, device='cuda:0', dtype=torch.float64)
tensor([-1.9285, -2.6334, -2.6368, -3.0544, -3.1575], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5418, device='cuda:0', dtype=torch.float64)
tensor([-1.8972, -2.6384, -2.6657, -3.0677, -3.1581], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3486, device='cuda:0', dtype=torch.float64)
tensor([-1.8484, -2.6231, -2.7128, -3.1015, -3.1483], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5534, device='cuda:0', dtype=torch.float64)
tensor([-1.7938, -2.6083, -2.7458, -3.1376, -3.1115], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2826, device='cuda:0', dtype=torch.float64)
tensor([-1.7771, -2.6058, -2.7650, -3.1618, -3.0996], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4902, device='cuda:0', dtype=torch.float64)
tensor([-1.8135, -2.6089, -2.7596, -3.1620, -3.1193], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3039, device='cuda:0', dtype=torch.float64)
tensor([-1.8837, -2.6259, -2.7434, -3.1405, -3.1620], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4196, device='cuda:0', dtype=torch.float64)
tensor([-1.9440, -2.6442, -2.7401, -3.1252, -3.2067], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2875, device='cuda:0', dtype=torch.float64)
tensor([-1.9663, -2.6591, -2.7469, -3.1196, -3.2218], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4295, device='cuda:0', dtype=torch.float64)
tensor([-1.9374, -2.6586, -2.7504, -3.1193, -3.1841], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3823, device='cuda:0', dtype=torch.float64)
tensor([-1.8784, -2.6372, -2.7628, -3.1565, -3.1445], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4709, device='cuda:0', dtype=torch.float64)
tensor([-1.8230, -2.6179, -2.7814, -3.1967, -3.1068], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8362, device='cuda:0', dtype=torch.float64)
tensor([-1.8104, -2.6114, -2.8006, -3.2101, -3.1004], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0583, device='cuda:0', dtype=torch.float64)
tensor([-1.8313, -2.6155, -2.8080, -3.1862, -3.1124], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3227, device='cuda:0', dtype=torch.float64)
tensor([-1.8587, -2.6161, -2.8092, -3.1440, -3.1244], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3254, device='cuda:0', dtype=torch.float64)
tensor([-1.8779, -2.6243, -2.7997, -3.0976, -3.1201], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4924, device='cuda:0', dtype=torch.float64)
tensor([-1.9042, -2.6288, -2.7804, -3.0527, -3.1396], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2938, device='cuda:0', dtype=torch.float64)
tensor([-1.9095, -2.6321, -2.7675, -3.0383, -3.1701], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3738, device='cuda:0', dtype=torch.float64)
tensor([-1.9056, -2.6507, -2.7582, -3.0443, -3.2028], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3708, device='cuda:0', dtype=torch.float64)
tensor([-1.8774, -2.6752, -2.7593, -3.0709, -3.2046], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3981, device='cuda:0', dtype=torch.float64)
tensor([-1.8575, -2.7031, -2.7596, -3.0954, -3.1936], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4910, device='cuda:0', dtype=torch.float64)
tensor([-1.8497, -2.7218, -2.7578, -3.1044, -3.1780], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8932, device='cuda:0', dtype=torch.float64)
tensor([-1.8709, -2.7307, -2.7488, -3.0978, -3.1672], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4304, device='cuda:0', dtype=torch.float64)
tensor([-1.8954, -2.7194, -2.7309, -3.0907, -3.1544], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3753, device='cuda:0', dtype=torch.float64)
tensor([-1.9058, -2.6885, -2.7268, -3.0997, -3.1406], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2835, device='cuda:0', dtype=torch.float64)
tensor([-1.8954, -2.6455, -2.7251, -3.1085, -3.1023], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1948, device='cuda:0', dtype=torch.float64)
tensor([-1.8598, -2.5908, -2.7239, -3.1115, -3.0436], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5208, device='cuda:0', dtype=torch.float64)
tensor([-1.8177, -2.5398, -2.7301, -3.1231, -2.9969], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2032, device='cuda:0', dtype=torch.float64)
tensor([-1.8025, -2.5229, -2.7396, -3.1202, -3.0029], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1818, device='cuda:0', dtype=torch.float64)
tensor([-1.8279, -2.5310, -2.7347, -3.0918, -3.0421], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3702, device='cuda:0', dtype=torch.float64)
tensor([-1.8870, -2.5567, -2.7298, -3.0566, -3.1137], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8352, device='cuda:0', dtype=torch.float64)
tensor([-1.9389, -2.6134, -2.7233, -3.0298, -3.1627], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1612, device='cuda:0', dtype=torch.float64)
tensor([-1.9615, -2.6538, -2.7324, -3.0448, -3.2069], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3980, device='cuda:0', dtype=torch.float64)
tensor([-1.9334, -2.6694, -2.7599, -3.0865, -3.2357], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7660, device='cuda:0', dtype=torch.float64)
tensor([-1.8638, -2.6567, -2.7988, -3.1352, -3.2269], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1538, device='cuda:0', dtype=torch.float64)
tensor([-1.8109, -2.6373, -2.8301, -3.1587, -3.2023], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3954, device='cuda:0', dtype=torch.float64)
tensor([-1.7901, -2.6228, -2.8411, -3.1438, -3.1801], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5181, device='cuda:0', dtype=torch.float64)
tensor([-1.8053, -2.6194, -2.8200, -3.1034, -3.1708], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2564, device='cuda:0', dtype=torch.float64)
tensor([-1.8635, -2.6279, -2.7670, -3.0457, -3.1712], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3236, device='cuda:0', dtype=torch.float64)
tensor([-1.9455, -2.6392, -2.7128, -3.0122, -3.1841], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4182, device='cuda:0', dtype=torch.float64)
tensor([-1.9802, -2.6460, -2.6890, -3.0301, -3.2045], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5199, device='cuda:0', dtype=torch.float64)
tensor([-1.9634, -2.6387, -2.7041, -3.0969, -3.2077], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3536, device='cuda:0', dtype=torch.float64)
tensor([-1.9058, -2.6225, -2.7496, -3.1766, -3.1867], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8002, device='cuda:0', dtype=torch.float64)
tensor([-1.8361, -2.6011, -2.7964, -3.2283, -3.1374], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3205, device='cuda:0', dtype=torch.float64)
tensor([-1.8007, -2.5840, -2.8227, -3.2285, -3.0926], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6934, device='cuda:0', dtype=torch.float64)
tensor([-1.8154, -2.5903, -2.8259, -3.1922, -3.0904], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4115, device='cuda:0', dtype=torch.float64)
tensor([-1.8748, -2.6229, -2.7916, -3.1244, -3.1083], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9547, device='cuda:0', dtype=torch.float64)
tensor([-1.9307, -2.6640, -2.7445, -3.0707, -3.1305], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5421, device='cuda:0', dtype=torch.float64)
tensor([-1.9493, -2.6912, -2.7031, -3.0532, -3.1269], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8072, device='cuda:0', dtype=torch.float64)
tensor([-1.9167, -2.7000, -2.6796, -3.0755, -3.1090], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3953, device='cuda:0', dtype=torch.float64)
tensor([-1.8567, -2.6809, -2.7008, -3.1326, -3.1075], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2162, device='cuda:0', dtype=torch.float64)
tensor([-1.8059, -2.6504, -2.7333, -3.1929, -3.1202], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2437, device='cuda:0', dtype=torch.float64)
tensor([-1.7883, -2.6275, -2.7441, -3.2318, -3.1327], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3605, device='cuda:0', dtype=torch.float64)
tensor([-1.8039, -2.6131, -2.7250, -3.2265, -3.1459], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3124, device='cuda:0', dtype=torch.float64)
tensor([-1.8549, -2.6198, -2.6877, -3.1758, -3.1686], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9795, device='cuda:0', dtype=torch.float64)
tensor([-1.8996, -2.6298, -2.6556, -3.1292, -3.1891], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4111, device='cuda:0', dtype=torch.float64)
tensor([-1.9192, -2.6381, -2.6419, -3.0960, -3.1893], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1330, device='cuda:0', dtype=torch.float64)
tensor([-1.9068, -2.6355, -2.6617, -3.0825, -3.1704], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3570, device='cuda:0', dtype=torch.float64)
tensor([-1.8717, -2.6251, -2.7060, -3.0901, -3.1537], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0556, device='cuda:0', dtype=torch.float64)
tensor([-1.8345, -2.6188, -2.7556, -3.0981, -3.1328], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6163, device='cuda:0', dtype=torch.float64)
tensor([-1.8210, -2.6231, -2.8007, -3.0867, -3.1180], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2761, device='cuda:0', dtype=torch.float64)
tensor([-1.8444, -2.6331, -2.8255, -3.0637, -3.0980], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2133, device='cuda:0', dtype=torch.float64)
tensor([-1.8846, -2.6464, -2.8372, -3.0357, -3.0840], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4029, device='cuda:0', dtype=torch.float64)
tensor([-1.9218, -2.6525, -2.8339, -3.0095, -3.0815], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4147, device='cuda:0', dtype=torch.float64)
tensor([-1.9403, -2.6502, -2.8297, -2.9928, -3.0973], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2118, device='cuda:0', dtype=torch.float64)
tensor([-1.9236, -2.6393, -2.8243, -2.9929, -3.0884], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5057, device='cuda:0', dtype=torch.float64)
tensor([-1.8927, -2.6184, -2.8120, -3.0112, -3.0715], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2419, device='cuda:0', dtype=torch.float64)
tensor([-1.8638, -2.5987, -2.7839, -3.0320, -3.0462], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2967, device='cuda:0', dtype=torch.float64)
tensor([-1.8569, -2.6034, -2.7484, -3.0438, -3.0514], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5348, device='cuda:0', dtype=torch.float64)
tensor([-1.8732, -2.5982, -2.7235, -3.0744, -3.0835], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4714, device='cuda:0', dtype=torch.float64)
tensor([-1.9027, -2.5949, -2.7169, -3.1025, -3.1435], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2079, device='cuda:0', dtype=torch.float64)
tensor([-1.9335, -2.5951, -2.7247, -3.1410, -3.2007], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6506, device='cuda:0', dtype=torch.float64)
tensor([-1.9279, -2.5793, -2.7519, -3.1871, -3.2343], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6349, device='cuda:0', dtype=torch.float64)
tensor([-1.8887, -2.5638, -2.7810, -3.2226, -3.2159], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5118, device='cuda:0', dtype=torch.float64)
tensor([-1.8438, -2.5613, -2.7912, -3.2393, -3.1758], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5903, device='cuda:0', dtype=torch.float64)
tensor([-1.8371, -2.5804, -2.7806, -3.2449, -3.1587], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7049, device='cuda:0', dtype=torch.float64)
tensor([-1.8609, -2.6100, -2.7527, -3.2495, -3.1711], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6118, device='cuda:0', dtype=torch.float64)
tensor([-1.8980, -2.6457, -2.7092, -3.2348, -3.1843], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6220, device='cuda:0', dtype=torch.float64)
tensor([-1.9059, -2.6733, -2.6787, -3.2169, -3.1760], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5461, device='cuda:0', dtype=torch.float64)
tensor([-1.8844, -2.6907, -2.6689, -3.1739, -3.1334], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8128, device='cuda:0', dtype=torch.float64)
tensor([-1.8399, -2.6867, -2.6898, -3.1355, -3.0776], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5385, device='cuda:0', dtype=torch.float64)
tensor([-1.8169, -2.6776, -2.7287, -3.1078, -3.0600], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5830, device='cuda:0', dtype=torch.float64)
tensor([-1.8362, -2.6669, -2.7528, -3.0791, -3.0952], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4391, device='cuda:0', dtype=torch.float64)
tensor([-1.8719, -2.6642, -2.7654, -3.0478, -3.1413], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4900, device='cuda:0', dtype=torch.float64)
tensor([-1.9049, -2.6603, -2.7526, -3.0223, -3.1571], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3306, device='cuda:0', dtype=torch.float64)
tensor([-1.9321, -2.6632, -2.7259, -3.0064, -3.1290], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3880, device='cuda:0', dtype=torch.float64)
tensor([-1.9529, -2.6673, -2.6971, -3.0096, -3.1107], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8338, device='cuda:0', dtype=torch.float64)
tensor([-1.9572, -2.6578, -2.7054, -3.0290, -3.1175], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3587, device='cuda:0', dtype=torch.float64)
tensor([-1.9217, -2.6356, -2.7418, -3.0663, -3.1350], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4887, device='cuda:0', dtype=torch.float64)
tensor([-1.8846, -2.6153, -2.7652, -3.0962, -3.1249], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3249, device='cuda:0', dtype=torch.float64)
tensor([-1.8423, -2.6073, -2.7744, -3.1051, -3.0948], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3783, device='cuda:0', dtype=torch.float64)
tensor([-1.8131, -2.6092, -2.7725, -3.1052, -3.0717], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6477, device='cuda:0', dtype=torch.float64)
tensor([-1.8319, -2.6207, -2.7582, -3.0801, -3.0920], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7341, device='cuda:0', dtype=torch.float64)
tensor([-1.8868, -2.6374, -2.7409, -3.0571, -3.1343], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2503, device='cuda:0', dtype=torch.float64)
tensor([-1.9367, -2.6562, -2.7368, -3.0570, -3.1821], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7840, device='cuda:0', dtype=torch.float64)
tensor([-1.9472, -2.6557, -2.7517, -3.0749, -3.1902], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5783, device='cuda:0', dtype=torch.float64)
tensor([-1.9325, -2.6334, -2.7754, -3.1131, -3.1662], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7365, device='cuda:0', dtype=torch.float64)
tensor([-1.9165, -2.6061, -2.7961, -3.1617, -3.1437], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7482, device='cuda:0', dtype=torch.float64)
tensor([-1.9062, -2.5800, -2.8163, -3.1937, -3.1512], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3721, device='cuda:0', dtype=torch.float64)
tensor([-1.9243, -2.5692, -2.8205, -3.1995, -3.1957], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5092, device='cuda:0', dtype=torch.float64)
tensor([-1.9272, -2.5657, -2.8133, -3.1862, -3.2238], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5159, device='cuda:0', dtype=torch.float64)
tensor([-1.9034, -2.5774, -2.7868, -3.1455, -3.2134], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0912, device='cuda:0', dtype=torch.float64)
tensor([-1.8713, -2.5968, -2.7585, -3.0984, -3.1821], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6880, device='cuda:0', dtype=torch.float64)
tensor([-1.8482, -2.6243, -2.7417, -3.0694, -3.1721], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6587, device='cuda:0', dtype=torch.float64)
tensor([-1.8205, -2.6440, -2.7425, -3.0690, -3.1986], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2465, device='cuda:0', dtype=torch.float64)
tensor([-1.8075, -2.6550, -2.7532, -3.0879, -3.2363], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3805, device='cuda:0', dtype=torch.float64)
tensor([-1.7969, -2.6673, -2.7507, -3.1015, -3.2324], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4435, device='cuda:0', dtype=torch.float64)
tensor([-1.8012, -2.6807, -2.7355, -3.0928, -3.1998], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4694, device='cuda:0', dtype=torch.float64)
tensor([-1.8248, -2.7023, -2.7097, -3.0798, -3.1599], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5758, device='cuda:0', dtype=torch.float64)
tensor([-1.8870, -2.7126, -2.6873, -3.0623, -3.1443], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7701, device='cuda:0', dtype=torch.float64)
tensor([-1.9450, -2.7075, -2.6905, -3.0693, -3.1517], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3923, device='cuda:0', dtype=torch.float64)
tensor([-1.9678, -2.6810, -2.7065, -3.0923, -3.1287], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7684, device='cuda:0', dtype=torch.float64)
tensor([-1.9458, -2.6314, -2.7175, -3.1208, -3.0632], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3678, device='cuda:0', dtype=torch.float64)
tensor([-1.8956, -2.5754, -2.7399, -3.1537, -2.9770], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3140, device='cuda:0', dtype=torch.float64)
tensor([-1.8552, -2.5478, -2.7729, -3.1857, -2.9313], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7949, device='cuda:0', dtype=torch.float64)
tensor([-1.8676, -2.5494, -2.8019, -3.1813, -2.9705], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2267, device='cuda:0', dtype=torch.float64)
tensor([-1.9049, -2.5635, -2.8231, -3.1596, -3.0417], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4699, device='cuda:0', dtype=torch.float64)
tensor([-1.9453, -2.6042, -2.8079, -3.1188, -3.1036], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6178, device='cuda:0', dtype=torch.float64)
tensor([-1.9609, -2.6586, -2.7668, -3.0787, -3.1204], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4691, device='cuda:0', dtype=torch.float64)
tensor([-1.9719, -2.7028, -2.7368, -3.0640, -3.1319], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7693, device='cuda:0', dtype=torch.float64)
tensor([-1.9622, -2.7092, -2.7279, -3.0664, -3.1596], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6109, device='cuda:0', dtype=torch.float64)
tensor([-1.9153, -2.6792, -2.7438, -3.1140, -3.2058], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5527, device='cuda:0', dtype=torch.float64)
tensor([-1.8573, -2.6372, -2.7703, -3.1830, -3.2407], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8681, device='cuda:0', dtype=torch.float64)
tensor([-1.8010, -2.6021, -2.7844, -3.2044, -3.2294], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0810, device='cuda:0', dtype=torch.float64)
tensor([-1.7780, -2.6171, -2.7486, -3.1744, -3.1892], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2798, device='cuda:0', dtype=torch.float64)
tensor([-1.7825, -2.6471, -2.7100, -3.1236, -3.1555], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4828, device='cuda:0', dtype=torch.float64)
tensor([-1.8149, -2.6777, -2.6817, -3.0778, -3.1578], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5989, device='cuda:0', dtype=torch.float64)
tensor([-1.8613, -2.7137, -2.6761, -3.0526, -3.1941], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2985, device='cuda:0', dtype=torch.float64)
tensor([-1.8977, -2.7348, -2.7079, -3.0521, -3.2300], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.2330, device='cuda:0', dtype=torch.float64)
tensor([-1.8971, -2.7261, -2.7424, -3.0531, -3.2031], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9580, device='cuda:0', dtype=torch.float64)
tensor([-1.8917, -2.7079, -2.7735, -3.0716, -3.1711], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7004, device='cuda:0', dtype=torch.float64)
tensor([-1.8938, -2.6782, -2.7983, -3.0957, -3.1519], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8305, device='cuda:0', dtype=torch.float64)
tensor([-1.9252, -2.6526, -2.8138, -3.1258, -3.1640], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2549, device='cuda:0', dtype=torch.float64)
tensor([-1.9535, -2.6234, -2.8209, -3.1594, -3.1741], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1604, device='cuda:0', dtype=torch.float64)
tensor([-1.9531, -2.5908, -2.8254, -3.1930, -3.1686], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6754, device='cuda:0', dtype=torch.float64)
tensor([-1.9408, -2.5757, -2.8174, -3.2102, -3.1503], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5006, device='cuda:0', dtype=torch.float64)
tensor([-1.9020, -2.5602, -2.8117, -3.2179, -3.1035], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6740, device='cuda:0', dtype=torch.float64)
tensor([-1.8519, -2.5513, -2.8123, -3.2159, -3.0723], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3410, device='cuda:0', dtype=torch.float64)
tensor([-1.8248, -2.5652, -2.8031, -3.2038, -3.0594], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3908, device='cuda:0', dtype=torch.float64)
tensor([-1.8422, -2.5941, -2.7646, -3.1591, -3.0634], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4437, device='cuda:0', dtype=torch.float64)
tensor([-1.8962, -2.6323, -2.7137, -3.0924, -3.1001], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5057, device='cuda:0', dtype=torch.float64)
tensor([-1.9527, -2.6632, -2.6718, -3.0465, -3.1536], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5415, device='cuda:0', dtype=torch.float64)
tensor([-1.9564, -2.6778, -2.6588, -3.0440, -3.1829], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3992, device='cuda:0', dtype=torch.float64)
tensor([-1.9154, -2.6684, -2.6738, -3.0676, -3.1945], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6463, device='cuda:0', dtype=torch.float64)
tensor([-1.8624, -2.6468, -2.7285, -3.1132, -3.2071], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4182, device='cuda:0', dtype=torch.float64)
tensor([-1.8148, -2.6282, -2.7777, -3.1491, -3.2115], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2927, device='cuda:0', dtype=torch.float64)
tensor([-1.7950, -2.6221, -2.8121, -3.1581, -3.2073], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8882, device='cuda:0', dtype=torch.float64)
tensor([-1.7924, -2.6268, -2.8163, -3.1426, -3.1995], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3039, device='cuda:0', dtype=torch.float64)
tensor([-1.8144, -2.6309, -2.7814, -3.1042, -3.1861], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8259, device='cuda:0', dtype=torch.float64)
tensor([-1.8674, -2.6246, -2.7355, -3.0456, -3.1813], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1560, device='cuda:0', dtype=torch.float64)
tensor([-1.9079, -2.6085, -2.7024, -3.0136, -3.1735], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3654, device='cuda:0', dtype=torch.float64)
tensor([-1.9310, -2.5969, -2.6941, -3.0182, -3.1649], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2305, device='cuda:0', dtype=torch.float64)
tensor([-1.9257, -2.5881, -2.7111, -3.0645, -3.1574], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3570, device='cuda:0', dtype=torch.float64)
tensor([-1.9105, -2.5877, -2.7253, -3.1105, -3.1387], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4493, device='cuda:0', dtype=torch.float64)
tensor([-1.9054, -2.6133, -2.7495, -3.1428, -3.1400], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4562, device='cuda:0', dtype=torch.float64)
tensor([-1.9114, -2.6646, -2.7668, -3.1642, -3.1706], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4518, device='cuda:0', dtype=torch.float64)
tensor([-1.9216, -2.7097, -2.7771, -3.1688, -3.2009], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7177, device='cuda:0', dtype=torch.float64)
tensor([-1.9449, -2.7478, -2.7891, -3.1671, -3.2386], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5287, device='cuda:0', dtype=torch.float64)
tensor([-1.9521, -2.7664, -2.7968, -3.1573, -3.2391], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2805, device='cuda:0', dtype=torch.float64)
tensor([-1.9132, -2.7370, -2.8249, -3.1652, -3.2136], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1595, device='cuda:0', dtype=torch.float64)
tensor([-1.8585, -2.6729, -2.8567, -3.1960, -3.1764], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6222, device='cuda:0', dtype=torch.float64)
tensor([-1.8084, -2.6030, -2.8794, -3.2220, -3.1333], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1208, device='cuda:0', dtype=torch.float64)
tensor([-1.7945, -2.5665, -2.8703, -3.2323, -3.1134], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0618, device='cuda:0', dtype=torch.float64)
tensor([-1.8225, -2.5637, -2.8378, -3.2074, -3.1001], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5403, device='cuda:0', dtype=torch.float64)
tensor([-1.8782, -2.5860, -2.7937, -3.1352, -3.1006], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2455, device='cuda:0', dtype=torch.float64)
tensor([-1.9433, -2.6255, -2.7537, -3.0561, -3.1150], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1931, device='cuda:0', dtype=torch.float64)
tensor([-1.9937, -2.6760, -2.7307, -3.0032, -3.1426], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2256, device='cuda:0', dtype=torch.float64)
tensor([-1.9813, -2.6947, -2.7306, -3.0011, -3.1460], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6660, device='cuda:0', dtype=torch.float64)
tensor([-1.9231, -2.6915, -2.7462, -3.0310, -3.1290], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4068, device='cuda:0', dtype=torch.float64)
tensor([-1.8474, -2.6667, -2.7716, -3.1011, -3.1086], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5289, device='cuda:0', dtype=torch.float64)
tensor([-1.8094, -2.6620, -2.7854, -3.1489, -3.1091], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4559, device='cuda:0', dtype=torch.float64)
tensor([-1.8342, -2.6612, -2.7776, -3.1466, -3.1314], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0621, device='cuda:0', dtype=torch.float64)
tensor([-1.9097, -2.6836, -2.7363, -3.0997, -3.1626], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8097, device='cuda:0', dtype=torch.float64)
tensor([-1.9953, -2.7023, -2.6912, -3.0649, -3.1823], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9472, device='cuda:0', dtype=torch.float64)
tensor([-2.0403, -2.6983, -2.6742, -3.0608, -3.1896], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5421, device='cuda:0', dtype=torch.float64)
tensor([-1.9983, -2.6552, -2.7067, -3.0999, -3.1655], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6368, device='cuda:0', dtype=torch.float64)
tensor([-1.9223, -2.5865, -2.7725, -3.1524, -3.1323], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2363, device='cuda:0', dtype=torch.float64)
tensor([-1.8301, -2.5312, -2.8425, -3.2104, -3.0885], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4355, device='cuda:0', dtype=torch.float64)
tensor([-1.7664, -2.5083, -2.8742, -3.2403, -3.0349], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8335, device='cuda:0', dtype=torch.float64)
tensor([-1.7600, -2.5319, -2.8605, -3.2310, -3.0127], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9728, device='cuda:0', dtype=torch.float64)
tensor([-1.8236, -2.5935, -2.8285, -3.1398, -3.0692], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3815, device='cuda:0', dtype=torch.float64)
tensor([-1.9105, -2.6643, -2.7881, -3.0492, -3.1500], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8505, device='cuda:0', dtype=torch.float64)
tensor([-1.9617, -2.7076, -2.7508, -2.9833, -3.1909], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6200, device='cuda:0', dtype=torch.float64)
tensor([-1.9570, -2.6982, -2.7390, -2.9745, -3.1937], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8562, device='cuda:0', dtype=torch.float64)
tensor([-1.8998, -2.6558, -2.7460, -3.0212, -3.1806], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3792, device='cuda:0', dtype=torch.float64)
tensor([-1.8422, -2.6162, -2.7610, -3.1026, -3.1880], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8533, device='cuda:0', dtype=torch.float64)
tensor([-1.8301, -2.5972, -2.7617, -3.1625, -3.2143], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5703, device='cuda:0', dtype=torch.float64)
tensor([-1.8462, -2.5889, -2.7443, -3.2000, -3.2175], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3451, device='cuda:0', dtype=torch.float64)
tensor([-1.8770, -2.6078, -2.7063, -3.1899, -3.1930], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2136, device='cuda:0', dtype=torch.float64)
tensor([-1.9171, -2.6289, -2.6767, -3.1690, -3.1732], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5434, device='cuda:0', dtype=torch.float64)
tensor([-1.9555, -2.6569, -2.6643, -3.1387, -3.1623], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6556, device='cuda:0', dtype=torch.float64)
tensor([-1.9712, -2.6843, -2.6800, -3.1243, -3.1725], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1295, device='cuda:0', dtype=torch.float64)
tensor([-1.9698, -2.7002, -2.7055, -3.1100, -3.1691], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3261, device='cuda:0', dtype=torch.float64)
tensor([-1.9472, -2.7046, -2.7246, -3.0911, -3.1414], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8529, device='cuda:0', dtype=torch.float64)
tensor([-1.9336, -2.7068, -2.7429, -3.0665, -3.1297], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3031, device='cuda:0', dtype=torch.float64)
tensor([-1.9016, -2.6972, -2.7783, -3.0547, -3.1236], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5403, device='cuda:0', dtype=torch.float64)
tensor([-1.8709, -2.6654, -2.8174, -3.0548, -3.1369], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4558, device='cuda:0', dtype=torch.float64)
tensor([-1.8413, -2.6351, -2.8597, -3.0657, -3.1518], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3333, device='cuda:0', dtype=torch.float64)
tensor([-1.8161, -2.6076, -2.8843, -3.0789, -3.1459], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5409, device='cuda:0', dtype=torch.float64)
tensor([-1.8112, -2.6031, -2.8666, -3.0681, -3.1354], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5893, device='cuda:0', dtype=torch.float64)
tensor([-1.8260, -2.6241, -2.8294, -3.0590, -3.1469], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2683, device='cuda:0', dtype=torch.float64)
tensor([-1.8652, -2.6531, -2.7823, -3.0472, -3.1740], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3847, device='cuda:0', dtype=torch.float64)
tensor([-1.8966, -2.6752, -2.7599, -3.0577, -3.2111], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2254, device='cuda:0', dtype=torch.float64)
tensor([-1.9051, -2.6879, -2.7379, -3.0910, -3.2196], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6113, device='cuda:0', dtype=torch.float64)
tensor([-1.8930, -2.6908, -2.7147, -3.1274, -3.1830], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5833, device='cuda:0', dtype=torch.float64)
tensor([-1.8625, -2.6548, -2.7072, -3.1580, -3.1274], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7792, device='cuda:0', dtype=torch.float64)
tensor([-1.8375, -2.6022, -2.7153, -3.1790, -3.1001], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5143, device='cuda:0', dtype=torch.float64)
tensor([-1.8389, -2.5494, -2.7258, -3.1866, -3.1018], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2626, device='cuda:0', dtype=torch.float64)
tensor([-1.8761, -2.5209, -2.7320, -3.1761, -3.1229], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4402, device='cuda:0', dtype=torch.float64)
tensor([-1.9442, -2.5386, -2.7197, -3.1316, -3.1497], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4270, device='cuda:0', dtype=torch.float64)
tensor([-1.9999, -2.5912, -2.6886, -3.0700, -3.1471], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5201, device='cuda:0', dtype=torch.float64)
tensor([-2.0122, -2.6364, -2.6838, -3.0555, -3.1502], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7754, device='cuda:0', dtype=torch.float64)
tensor([-1.9712, -2.6631, -2.7092, -3.0738, -3.1341], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5149, device='cuda:0', dtype=torch.float64)
tensor([-1.9098, -2.6787, -2.7615, -3.1083, -3.1233], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2949, device='cuda:0', dtype=torch.float64)
tensor([-1.8391, -2.6947, -2.8132, -3.1491, -3.0926], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3446, device='cuda:0', dtype=torch.float64)
tensor([-1.7806, -2.7061, -2.8430, -3.1726, -3.0453], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4339, device='cuda:0', dtype=torch.float64)
tensor([-1.7694, -2.7186, -2.8431, -3.1677, -2.9806], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3347, device='cuda:0', dtype=torch.float64)
tensor([-1.8308, -2.7340, -2.8138, -3.1281, -2.9783], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6061, device='cuda:0', dtype=torch.float64)
tensor([-1.9382, -2.7567, -2.7768, -3.0722, -3.0356], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5798, device='cuda:0', dtype=torch.float64)
tensor([-2.0031, -2.7531, -2.7488, -3.0422, -3.0878], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1590, device='cuda:0', dtype=torch.float64)
tensor([-2.0081, -2.7183, -2.7496, -3.0563, -3.1214], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1363, device='cuda:0', dtype=torch.float64)
tensor([-1.9562, -2.6619, -2.7750, -3.1048, -3.1246], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4198, device='cuda:0', dtype=torch.float64)
tensor([-1.8993, -2.6015, -2.8127, -3.1663, -3.1411], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4459, device='cuda:0', dtype=torch.float64)
tensor([-1.8496, -2.5724, -2.8386, -3.2093, -3.1588], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1362, device='cuda:0', dtype=torch.float64)
tensor([-1.8299, -2.5798, -2.8333, -3.2194, -3.1790], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3143, device='cuda:0', dtype=torch.float64)
tensor([-1.8640, -2.6071, -2.7906, -3.1847, -3.1977], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3916, device='cuda:0', dtype=torch.float64)
tensor([-1.9188, -2.6564, -2.7327, -3.1296, -3.2135], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3508, device='cuda:0', dtype=torch.float64)
tensor([-1.9751, -2.7039, -2.6785, -3.0950, -3.2423], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4103, device='cuda:0', dtype=torch.float64)
tensor([-1.9655, -2.7227, -2.6527, -3.0903, -3.2336], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4115, device='cuda:0', dtype=torch.float64)
tensor([-1.9049, -2.7073, -2.6768, -3.1229, -3.2124], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6067, device='cuda:0', dtype=torch.float64)
tensor([-1.8323, -2.6827, -2.7289, -3.1741, -3.1917], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3951, device='cuda:0', dtype=torch.float64)
tensor([-1.7724, -2.6480, -2.7848, -3.2034, -3.1726], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3078, device='cuda:0', dtype=torch.float64)
tensor([-1.7611, -2.6375, -2.8007, -3.1990, -3.1471], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3169, device='cuda:0', dtype=torch.float64)
tensor([-1.7969, -2.6453, -2.7845, -3.1685, -3.1307], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4353, device='cuda:0', dtype=torch.float64)
tensor([-1.8732, -2.6548, -2.7550, -3.1297, -3.1523], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5983, device='cuda:0', dtype=torch.float64)
tensor([-1.9452, -2.6499, -2.7219, -3.0860, -3.1785], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1473, device='cuda:0', dtype=torch.float64)
tensor([-1.9740, -2.6230, -2.7156, -3.0573, -3.1851], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7665, device='cuda:0', dtype=torch.float64)
tensor([-1.9564, -2.5949, -2.7339, -3.0586, -3.1742], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7299, device='cuda:0', dtype=torch.float64)
tensor([-1.9164, -2.5822, -2.7511, -3.0753, -3.1276], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4211, device='cuda:0', dtype=torch.float64)
tensor([-1.8871, -2.6140, -2.7550, -3.0910, -3.0780], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6499, device='cuda:0', dtype=torch.float64)
tensor([-1.8915, -2.6539, -2.7527, -3.0899, -3.0583], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6750, device='cuda:0', dtype=torch.float64)
tensor([-1.9189, -2.6986, -2.7403, -3.0826, -3.0777], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3894, device='cuda:0', dtype=torch.float64)
tensor([-1.9525, -2.7274, -2.7179, -3.0898, -3.1107], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6064, device='cuda:0', dtype=torch.float64)
tensor([-1.9548, -2.7274, -2.7117, -3.1220, -3.1277], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5767, device='cuda:0', dtype=torch.float64)
tensor([-1.9233, -2.6880, -2.7243, -3.1536, -3.1106], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3589, device='cuda:0', dtype=torch.float64)
tensor([-1.8834, -2.6466, -2.7507, -3.1907, -3.0896], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3034, device='cuda:0', dtype=torch.float64)
tensor([-1.8458, -2.6006, -2.7903, -3.2037, -3.0814], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3309, device='cuda:0', dtype=torch.float64)
tensor([-1.8384, -2.5661, -2.8252, -3.1957, -3.0982], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1781, device='cuda:0', dtype=torch.float64)
tensor([-1.8681, -2.5616, -2.8283, -3.1560, -3.1102], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5343, device='cuda:0', dtype=torch.float64)
tensor([-1.9159, -2.5915, -2.8126, -3.0956, -3.1164], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4268, device='cuda:0', dtype=torch.float64)
tensor([-1.9574, -2.6302, -2.7937, -3.0555, -3.1140], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6888, device='cuda:0', dtype=torch.float64)
tensor([-1.9837, -2.6690, -2.8032, -3.0426, -3.1160], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2741, device='cuda:0', dtype=torch.float64)
tensor([-1.9553, -2.6834, -2.8295, -3.0660, -3.1067], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5327, device='cuda:0', dtype=torch.float64)
tensor([-1.9172, -2.6912, -2.8562, -3.1056, -3.0896], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0892, device='cuda:0', dtype=torch.float64)
tensor([-1.8722, -2.6971, -2.8662, -3.1406, -3.0690], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3093, device='cuda:0', dtype=torch.float64)
tensor([-1.8362, -2.7020, -2.8673, -3.1609, -3.0699], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3154, device='cuda:0', dtype=torch.float64)
tensor([-1.8153, -2.7032, -2.8580, -3.1531, -3.0792], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3941, device='cuda:0', dtype=torch.float64)
tensor([-1.8167, -2.6989, -2.8223, -3.1168, -3.0899], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2244, device='cuda:0', dtype=torch.float64)
tensor([-1.8384, -2.6883, -2.7905, -3.0882, -3.1133], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0415, device='cuda:0', dtype=torch.float64)
tensor([-1.8757, -2.6864, -2.7464, -3.0634, -3.1401], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4050, device='cuda:0', dtype=torch.float64)
tensor([-1.9083, -2.6863, -2.7075, -3.0579, -3.1749], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4871, device='cuda:0', dtype=torch.float64)
tensor([-1.9275, -2.6685, -2.6894, -3.0809, -3.2186], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8567, device='cuda:0', dtype=torch.float64)
tensor([-1.9346, -2.6488, -2.6772, -3.1106, -3.2344], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5421, device='cuda:0', dtype=torch.float64)
tensor([-1.9406, -2.6326, -2.6627, -3.1318, -3.2314], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6200, device='cuda:0', dtype=torch.float64)
tensor([-1.9571, -2.6310, -2.6524, -3.1406, -3.2198], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5419, device='cuda:0', dtype=torch.float64)
tensor([-1.9911, -2.6555, -2.6386, -3.1338, -3.2052], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3163, device='cuda:0', dtype=torch.float64)
tensor([-1.9965, -2.6637, -2.6493, -3.1491, -3.1874], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5169, device='cuda:0', dtype=torch.float64)
tensor([-1.9720, -2.6555, -2.6864, -3.1802, -3.1702], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5759, device='cuda:0', dtype=torch.float64)
tensor([-1.9121, -2.6324, -2.7403, -3.2067, -3.1249], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4700, device='cuda:0', dtype=torch.float64)
tensor([-1.8576, -2.6187, -2.7905, -3.2189, -3.0824], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2209, device='cuda:0', dtype=torch.float64)
tensor([-1.8221, -2.6071, -2.8398, -3.2124, -3.0594], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1313, device='cuda:0', dtype=torch.float64)
tensor([-1.8125, -2.6014, -2.8712, -3.1814, -3.0506], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5437, device='cuda:0', dtype=torch.float64)
tensor([-1.8260, -2.6140, -2.8841, -3.1482, -3.0696], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8165, device='cuda:0', dtype=torch.float64)
tensor([-1.8625, -2.6349, -2.8854, -3.1099, -3.1376], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3997, device='cuda:0', dtype=torch.float64)
tensor([-1.8995, -2.6471, -2.8786, -3.0782, -3.1936], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4104, device='cuda:0', dtype=torch.float64)
tensor([-1.9082, -2.6441, -2.8681, -3.0746, -3.2333], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3837, device='cuda:0', dtype=torch.float64)
tensor([-1.8972, -2.6323, -2.8573, -3.0704, -3.2275], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5313, device='cuda:0', dtype=torch.float64)
tensor([-1.8895, -2.6200, -2.8265, -3.0715, -3.1992], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6751, device='cuda:0', dtype=torch.float64)
tensor([-1.8907, -2.6131, -2.7882, -3.0908, -3.1586], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6769, device='cuda:0', dtype=torch.float64)
tensor([-1.9061, -2.6267, -2.7409, -3.1090, -3.1287], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1942, device='cuda:0', dtype=torch.float64)
tensor([-1.9051, -2.6477, -2.7024, -3.1151, -3.1030], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3605, device='cuda:0', dtype=torch.float64)
tensor([-1.9021, -2.6629, -2.6820, -3.1228, -3.0804], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7906, device='cuda:0', dtype=torch.float64)
tensor([-1.8952, -2.6649, -2.6714, -3.1296, -3.0603], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8950, device='cuda:0', dtype=torch.float64)
tensor([-1.9010, -2.6625, -2.6718, -3.1309, -3.0793], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2765, device='cuda:0', dtype=torch.float64)
tensor([-1.9188, -2.6565, -2.6901, -3.1316, -3.1272], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5018, device='cuda:0', dtype=torch.float64)
tensor([-1.9628, -2.6695, -2.7196, -3.1241, -3.2135], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3505, device='cuda:0', dtype=torch.float64)
tensor([-1.9785, -2.6785, -2.7328, -3.1229, -3.2602], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8630, device='cuda:0', dtype=torch.float64)
tensor([-1.9660, -2.6962, -2.7271, -3.1179, -3.2548], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4676, device='cuda:0', dtype=torch.float64)
tensor([-1.9381, -2.7117, -2.7244, -3.1183, -3.2433], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3636, device='cuda:0', dtype=torch.float64)
tensor([-1.9064, -2.7228, -2.7410, -3.1354, -3.2314], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8383, device='cuda:0', dtype=torch.float64)
tensor([-1.8846, -2.7180, -2.7855, -3.1487, -3.2515], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7280, device='cuda:0', dtype=torch.float64)
tensor([-1.8721, -2.7096, -2.8108, -3.1307, -3.2395], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6295, device='cuda:0', dtype=torch.float64)
tensor([-1.8671, -2.6919, -2.8215, -3.0929, -3.2008], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2766, device='cuda:0', dtype=torch.float64)
tensor([-1.8688, -2.6659, -2.8104, -3.0599, -3.1496], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6693, device='cuda:0', dtype=torch.float64)
tensor([-1.8815, -2.6505, -2.8035, -3.0403, -3.1183], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4901, device='cuda:0', dtype=torch.float64)
tensor([-1.9063, -2.6309, -2.8080, -3.0346, -3.1180], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5170, device='cuda:0', dtype=torch.float64)
tensor([-1.9248, -2.6220, -2.8014, -3.0451, -3.1203], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4617, device='cuda:0', dtype=torch.float64)
tensor([-1.9539, -2.6130, -2.7773, -3.0616, -3.1103], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7102, device='cuda:0', dtype=torch.float64)
tensor([-1.9617, -2.6228, -2.7601, -3.0949, -3.1087], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3316, device='cuda:0', dtype=torch.float64)
tensor([-1.9339, -2.6156, -2.7589, -3.1233, -3.1039], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6486, device='cuda:0', dtype=torch.float64)
tensor([-1.9079, -2.6114, -2.7591, -3.1272, -3.1118], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5473, device='cuda:0', dtype=torch.float64)
tensor([-1.8755, -2.6083, -2.7800, -3.1309, -3.1363], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4219, device='cuda:0', dtype=torch.float64)
tensor([-1.8523, -2.6302, -2.7981, -3.1294, -3.1645], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8091, device='cuda:0', dtype=torch.float64)
tensor([-1.8460, -2.6665, -2.8030, -3.1295, -3.1858], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1985, device='cuda:0', dtype=torch.float64)
tensor([-1.8676, -2.7003, -2.7798, -3.1110, -3.1856], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2698, device='cuda:0', dtype=torch.float64)
tensor([-1.9053, -2.7441, -2.7502, -3.0765, -3.1895], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5958, device='cuda:0', dtype=torch.float64)
tensor([-1.9470, -2.7766, -2.7256, -3.0620, -3.1986], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4405, device='cuda:0', dtype=torch.float64)
tensor([-1.9634, -2.7765, -2.7180, -3.0720, -3.2026], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4592, device='cuda:0', dtype=torch.float64)
tensor([-1.9456, -2.7493, -2.7204, -3.0897, -3.1746], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2632, device='cuda:0', dtype=torch.float64)
tensor([-1.9219, -2.7038, -2.7347, -3.1203, -3.1406], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4136, device='cuda:0', dtype=torch.float64)
tensor([-1.9020, -2.6579, -2.7637, -3.1572, -3.1162], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2241, device='cuda:0', dtype=torch.float64)
tensor([-1.8832, -2.6199, -2.7986, -3.1945, -3.1085], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9763, device='cuda:0', dtype=torch.float64)
tensor([-1.8714, -2.5988, -2.8282, -3.2202, -3.1266], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8579, device='cuda:0', dtype=torch.float64)
tensor([-1.8599, -2.5892, -2.8419, -3.2130, -3.1461], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2894, device='cuda:0', dtype=torch.float64)
tensor([-1.8591, -2.6092, -2.8268, -3.1787, -3.1574], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2366, device='cuda:0', dtype=torch.float64)
tensor([-1.8762, -2.6348, -2.8159, -3.1567, -3.1856], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3977, device='cuda:0', dtype=torch.float64)
tensor([-1.8879, -2.6583, -2.8023, -3.1381, -3.2044], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3341, device='cuda:0', dtype=torch.float64)
tensor([-1.8948, -2.6749, -2.7902, -3.1177, -3.2063], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3966, device='cuda:0', dtype=torch.float64)
tensor([-1.8849, -2.6744, -2.7841, -3.1087, -3.1928], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3526, device='cuda:0', dtype=torch.float64)
tensor([-1.8911, -2.6751, -2.7831, -3.0938, -3.1878], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3912, device='cuda:0', dtype=torch.float64)
tensor([-1.8983, -2.6745, -2.7917, -3.0932, -3.1768], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3919, device='cuda:0', dtype=torch.float64)
tensor([-1.9173, -2.6843, -2.7879, -3.0944, -3.1565], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8238, device='cuda:0', dtype=torch.float64)
tensor([-1.9311, -2.6927, -2.7570, -3.0926, -3.1015], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3968, device='cuda:0', dtype=torch.float64)
tensor([-1.9586, -2.6918, -2.7245, -3.0870, -3.0677], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7651, device='cuda:0', dtype=torch.float64)
tensor([-1.9711, -2.6745, -2.7001, -3.0974, -3.0518], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4760, device='cuda:0', dtype=torch.float64)
tensor([-1.9704, -2.6575, -2.6683, -3.1262, -3.0434], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3213, device='cuda:0', dtype=torch.float64)
tensor([-1.9567, -2.6211, -2.6570, -3.1503, -3.0392], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8597, device='cuda:0', dtype=torch.float64)
tensor([-1.9432, -2.5838, -2.6631, -3.1486, -3.0459], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2151, device='cuda:0', dtype=torch.float64)
tensor([-1.9213, -2.5536, -2.6854, -3.1327, -3.0659], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3771, device='cuda:0', dtype=torch.float64)
tensor([-1.8927, -2.5393, -2.7196, -3.1179, -3.1117], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2989, device='cuda:0', dtype=torch.float64)
tensor([-1.8781, -2.5494, -2.7521, -3.1185, -3.1681], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6547, device='cuda:0', dtype=torch.float64)
tensor([-1.8726, -2.5810, -2.7930, -3.1318, -3.2303], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4727, device='cuda:0', dtype=torch.float64)
tensor([-1.8703, -2.6383, -2.8126, -3.1233, -3.2580], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7372, device='cuda:0', dtype=torch.float64)
tensor([-1.8621, -2.7052, -2.8284, -3.1150, -3.2595], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2926, device='cuda:0', dtype=torch.float64)
tensor([-1.8714, -2.7678, -2.8383, -3.0931, -3.2352], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4081, device='cuda:0', dtype=torch.float64)
tensor([-1.9063, -2.8065, -2.8421, -3.0629, -3.2074], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2280, device='cuda:0', dtype=torch.float64)
tensor([-1.9239, -2.8119, -2.8699, -3.0398, -3.1923], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4248, device='cuda:0', dtype=torch.float64)
tensor([-1.9565, -2.8008, -2.8833, -3.0239, -3.1961], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5229, device='cuda:0', dtype=torch.float64)
tensor([-1.9837, -2.7718, -2.8830, -3.0300, -3.1986], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3313, device='cuda:0', dtype=torch.float64)
tensor([-1.9910, -2.7272, -2.8896, -3.0501, -3.1906], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0978, device='cuda:0', dtype=torch.float64)
tensor([-1.9728, -2.6746, -2.9025, -3.0737, -3.1658], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4400, device='cuda:0', dtype=torch.float64)
tensor([-1.9375, -2.6143, -2.9076, -3.0971, -3.1346], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9226, device='cuda:0', dtype=torch.float64)
tensor([-1.8965, -2.5835, -2.9009, -3.0967, -3.0991], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9362, device='cuda:0', dtype=torch.float64)
tensor([-1.8822, -2.5927, -2.8559, -3.0743, -3.0863], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7119, device='cuda:0', dtype=torch.float64)
tensor([-1.9159, -2.6129, -2.7914, -3.0465, -3.1064], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4864, device='cuda:0', dtype=torch.float64)
tensor([-1.9597, -2.6394, -2.7384, -3.0260, -3.1582], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6231, device='cuda:0', dtype=torch.float64)
tensor([-1.9479, -2.6616, -2.7091, -3.0311, -3.1690], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8346, device='cuda:0', dtype=torch.float64)
tensor([-1.8865, -2.6835, -2.6945, -3.0687, -3.1252], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1887, device='cuda:0', dtype=torch.float64)
tensor([-1.8288, -2.6963, -2.7047, -3.1306, -3.0925], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6635, device='cuda:0', dtype=torch.float64)
tensor([-1.8014, -2.6965, -2.7263, -3.2082, -3.1031], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6728, device='cuda:0', dtype=torch.float64)
tensor([-1.7997, -2.6821, -2.7576, -3.2817, -3.1223], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6225, device='cuda:0', dtype=torch.float64)
tensor([-1.8421, -2.6897, -2.7717, -3.3171, -3.1510], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4438, device='cuda:0', dtype=torch.float64)
tensor([-1.9117, -2.6917, -2.7646, -3.3103, -3.1843], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6726, device='cuda:0', dtype=torch.float64)
tensor([-1.9967, -2.6939, -2.7325, -3.2778, -3.2057], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5181, device='cuda:0', dtype=torch.float64)
tensor([-2.0756, -2.6915, -2.7034, -3.2454, -3.2041], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2507, device='cuda:0', dtype=torch.float64)
tensor([-2.1037, -2.6740, -2.7037, -3.2495, -3.1926], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6740, device='cuda:0', dtype=torch.float64)
tensor([-2.0849, -2.6481, -2.7313, -3.2667, -3.1714], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3284, device='cuda:0', dtype=torch.float64)
tensor([-2.0202, -2.6274, -2.7728, -3.2810, -3.1209], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3951, device='cuda:0', dtype=torch.float64)
tensor([-1.9250, -2.6031, -2.8232, -3.2880, -3.0547], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6297, device='cuda:0', dtype=torch.float64)
tensor([-1.8293, -2.5810, -2.8735, -3.2629, -2.9893], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2952, device='cuda:0', dtype=torch.float64)
tensor([-1.7844, -2.5898, -2.8846, -3.2094, -2.9519], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9872, device='cuda:0', dtype=torch.float64)
tensor([-1.8122, -2.6108, -2.8615, -3.1234, -2.9701], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6977, device='cuda:0', dtype=torch.float64)
tensor([-1.8735, -2.6399, -2.8223, -3.0327, -3.0271], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6232, device='cuda:0', dtype=torch.float64)
tensor([-1.9334, -2.6588, -2.7889, -2.9605, -3.0943], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2590, device='cuda:0', dtype=torch.float64)
tensor([-1.9665, -2.6541, -2.7635, -2.9264, -3.1583], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2578, device='cuda:0', dtype=torch.float64)
tensor([-1.9650, -2.6370, -2.7528, -2.9510, -3.2291], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3619, device='cuda:0', dtype=torch.float64)
tensor([-1.9486, -2.6267, -2.7501, -3.0116, -3.2784], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5034, device='cuda:0', dtype=torch.float64)
tensor([-1.9164, -2.6305, -2.7509, -3.0775, -3.3048], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5644, device='cuda:0', dtype=torch.float64)
tensor([-1.8840, -2.6547, -2.7519, -3.1564, -3.3139], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6771, device='cuda:0', dtype=torch.float64)
tensor([-1.9021, -2.6888, -2.7447, -3.2072, -3.3240], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3640, device='cuda:0', dtype=torch.float64)
tensor([-1.9185, -2.7131, -2.7372, -3.2471, -3.3211], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4673, device='cuda:0', dtype=torch.float64)
tensor([-1.9247, -2.7392, -2.7336, -3.2551, -3.2998], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2490, device='cuda:0', dtype=torch.float64)
tensor([-1.9128, -2.7472, -2.7229, -3.2116, -3.2466], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4969, device='cuda:0', dtype=torch.float64)
tensor([-1.8798, -2.7461, -2.7243, -3.1388, -3.1587], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5385, device='cuda:0', dtype=torch.float64)
tensor([-1.8689, -2.7472, -2.7477, -3.0884, -3.0857], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5450, device='cuda:0', dtype=torch.float64)
tensor([-1.8776, -2.7401, -2.7699, -3.0659, -3.0288], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6392, device='cuda:0', dtype=torch.float64)
tensor([-1.8868, -2.7189, -2.7848, -3.0733, -3.0172], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4308, device='cuda:0', dtype=torch.float64)
tensor([-1.8999, -2.6890, -2.8005, -3.0982, -3.0234], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3109, device='cuda:0', dtype=torch.float64)
tensor([-1.9229, -2.6615, -2.8304, -3.1412, -3.0718], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9035, device='cuda:0', dtype=torch.float64)
tensor([-1.9502, -2.6591, -2.8526, -3.1889, -3.1214], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3520, device='cuda:0', dtype=torch.float64)
tensor([-1.9623, -2.6750, -2.8625, -3.2258, -3.1495], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6741, device='cuda:0', dtype=torch.float64)
tensor([-1.9719, -2.6920, -2.8509, -3.2341, -3.1601], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7600, device='cuda:0', dtype=torch.float64)
tensor([-1.9769, -2.7133, -2.8342, -3.2351, -3.1823], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5326, device='cuda:0', dtype=torch.float64)
tensor([-1.9760, -2.7180, -2.8263, -3.2289, -3.1921], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3879, device='cuda:0', dtype=torch.float64)
tensor([-1.9587, -2.7035, -2.8225, -3.2165, -3.1940], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9283, device='cuda:0', dtype=torch.float64)
tensor([-1.9193, -2.6790, -2.8147, -3.2242, -3.1843], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6819, device='cuda:0', dtype=torch.float64)
tensor([-1.8872, -2.6551, -2.8121, -3.2211, -3.1758], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5816, device='cuda:0', dtype=torch.float64)
tensor([-1.8778, -2.6366, -2.7958, -3.1971, -3.1624], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6132, device='cuda:0', dtype=torch.float64)
tensor([-1.8979, -2.6411, -2.7682, -3.1326, -3.1628], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2500, device='cuda:0', dtype=torch.float64)
tensor([-1.9284, -2.6388, -2.7549, -3.0854, -3.1819], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4090, device='cuda:0', dtype=torch.float64)
tensor([-1.9578, -2.6491, -2.7449, -3.0483, -3.2007], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5424, device='cuda:0', dtype=torch.float64)
tensor([-1.9605, -2.6554, -2.7515, -3.0366, -3.2092], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4318, device='cuda:0', dtype=torch.float64)
tensor([-1.9334, -2.6477, -2.7687, -3.0655, -3.2124], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4222, device='cuda:0', dtype=torch.float64)
tensor([-1.8956, -2.6485, -2.7856, -3.1124, -3.2039], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2712, device='cuda:0', dtype=torch.float64)
tensor([-1.8740, -2.6640, -2.7828, -3.1437, -3.1860], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6830, device='cuda:0', dtype=torch.float64)
tensor([-1.8836, -2.6778, -2.7668, -3.1404, -3.1601], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3424, device='cuda:0', dtype=torch.float64)
tensor([-1.9138, -2.6827, -2.7542, -3.1416, -3.1471], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6804, device='cuda:0', dtype=torch.float64)
tensor([-1.9558, -2.6747, -2.7562, -3.1307, -3.1440], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3889, device='cuda:0', dtype=torch.float64)
tensor([-2.0049, -2.6777, -2.7485, -3.1212, -3.1583], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4558, device='cuda:0', dtype=torch.float64)
tensor([-2.0260, -2.6694, -2.7480, -3.1365, -3.1775], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7044, device='cuda:0', dtype=torch.float64)
tensor([-2.0119, -2.6448, -2.7504, -3.1512, -3.1734], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1179, device='cuda:0', dtype=torch.float64)
tensor([-1.9753, -2.6199, -2.7493, -3.1598, -3.1570], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2960, device='cuda:0', dtype=torch.float64)
tensor([-1.9338, -2.6112, -2.7413, -3.1506, -3.1378], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5286, device='cuda:0', dtype=torch.float64)
tensor([-1.9121, -2.6232, -2.7310, -3.1537, -3.1282], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6157, device='cuda:0', dtype=torch.float64)
tensor([-1.8960, -2.6524, -2.7338, -3.1321, -3.1359], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4754, device='cuda:0', dtype=torch.float64)
tensor([-1.8838, -2.6655, -2.7745, -3.0970, -3.1655], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1586, device='cuda:0', dtype=torch.float64)
tensor([-1.8842, -2.6780, -2.8178, -3.0962, -3.2015], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8779, device='cuda:0', dtype=torch.float64)
tensor([-1.9027, -2.7115, -2.8345, -3.0915, -3.2022], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5135, device='cuda:0', dtype=torch.float64)
tensor([-1.9186, -2.7413, -2.8446, -3.1215, -3.2118], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5354, device='cuda:0', dtype=torch.float64)
tensor([-1.9120, -2.7637, -2.8963, -3.1572, -3.2230], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8076, device='cuda:0', dtype=torch.float64)
tensor([-1.8999, -2.7572, -2.9048, -3.1758, -3.2205], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6094, device='cuda:0', dtype=torch.float64)
tensor([-1.8717, -2.7126, -2.8642, -3.1722, -3.2036], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3453, device='cuda:0', dtype=torch.float64)
tensor([-1.8501, -2.6873, -2.8391, -3.1644, -3.1793], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2259, device='cuda:0', dtype=torch.float64)
tensor([-1.8539, -2.6762, -2.8052, -3.1293, -3.1533], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1597, device='cuda:0', dtype=torch.float64)
tensor([-1.8857, -2.6727, -2.7619, -3.0740, -3.1412], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3078, device='cuda:0', dtype=torch.float64)
tensor([-1.9283, -2.6761, -2.7308, -3.0169, -3.1265], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6444, device='cuda:0', dtype=torch.float64)
tensor([-1.9480, -2.6704, -2.7114, -3.0000, -3.1323], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6380, device='cuda:0', dtype=torch.float64)
tensor([-1.9496, -2.6637, -2.7063, -3.0170, -3.1426], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6378, device='cuda:0', dtype=torch.float64)
tensor([-1.9366, -2.6634, -2.7001, -3.0679, -3.1426], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5459, device='cuda:0', dtype=torch.float64)
tensor([-1.9042, -2.6489, -2.7375, -3.1524, -3.1432], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4712, device='cuda:0', dtype=torch.float64)
tensor([-1.8847, -2.6267, -2.7738, -3.2456, -3.1278], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4367, device='cuda:0', dtype=torch.float64)
tensor([-1.8903, -2.6162, -2.8101, -3.3105, -3.0961], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7289, device='cuda:0', dtype=torch.float64)
tensor([-1.9309, -2.6378, -2.8295, -3.3409, -3.0853], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1745, device='cuda:0', dtype=torch.float64)
tensor([-1.9751, -2.6675, -2.8377, -3.3602, -3.0881], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5323, device='cuda:0', dtype=torch.float64)
tensor([-2.0388, -2.7121, -2.8275, -3.3620, -3.1261], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8124, device='cuda:0', dtype=torch.float64)
tensor([-2.0811, -2.7356, -2.7896, -3.3475, -3.1518], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7689, device='cuda:0', dtype=torch.float64)
tensor([-2.0725, -2.7398, -2.7341, -3.3106, -3.1369], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2418, device='cuda:0', dtype=torch.float64)
tensor([-2.0291, -2.7404, -2.6851, -3.2450, -3.1142], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5077, device='cuda:0', dtype=torch.float64)
tensor([-1.9663, -2.7324, -2.6619, -3.1986, -3.0993], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.2800, device='cuda:0', dtype=torch.float64)
tensor([-1.9149, -2.7100, -2.6587, -3.1753, -3.1144], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4474, device='cuda:0', dtype=torch.float64)
tensor([-1.9068, -2.6959, -2.6629, -3.1532, -3.1616], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7373, device='cuda:0', dtype=torch.float64)
tensor([-1.9281, -2.7084, -2.6781, -3.1260, -3.2145], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7777, device='cuda:0', dtype=torch.float64)
tensor([-1.9398, -2.6971, -2.7201, -3.0879, -3.2718], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8705, device='cuda:0', dtype=torch.float64)
tensor([-1.9332, -2.6803, -2.7670, -3.0525, -3.2736], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7294, device='cuda:0', dtype=torch.float64)
tensor([-1.9081, -2.6679, -2.8090, -3.0400, -3.2381], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6178, device='cuda:0', dtype=torch.float64)
tensor([-1.8968, -2.6488, -2.8516, -3.0697, -3.1975], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0152, device='cuda:0', dtype=torch.float64)
tensor([-1.8912, -2.6291, -2.8805, -3.1162, -3.1513], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8879, device='cuda:0', dtype=torch.float64)
tensor([-1.8948, -2.6056, -2.8855, -3.1542, -3.1196], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1853, device='cuda:0', dtype=torch.float64)
tensor([-1.9202, -2.6119, -2.8818, -3.1527, -3.1191], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4734, device='cuda:0', dtype=torch.float64)
tensor([-1.9609, -2.6354, -2.8482, -3.1336, -3.1359], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8232, device='cuda:0', dtype=torch.float64)
tensor([-2.0020, -2.6704, -2.7927, -3.1110, -3.1634], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4079, device='cuda:0', dtype=torch.float64)
tensor([-2.0210, -2.6982, -2.7537, -3.1331, -3.1744], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6277, device='cuda:0', dtype=torch.float64)
tensor([-1.9944, -2.7073, -2.7510, -3.1945, -3.1998], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9195, device='cuda:0', dtype=torch.float64)
tensor([-1.9684, -2.7098, -2.7665, -3.2787, -3.2303], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5450, device='cuda:0', dtype=torch.float64)
tensor([-1.9135, -2.6799, -2.7943, -3.3297, -3.2360], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1779, device='cuda:0', dtype=torch.float64)
tensor([-1.8632, -2.6587, -2.8265, -3.3297, -3.2243], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8059, device='cuda:0', dtype=torch.float64)
tensor([-1.8228, -2.6431, -2.8358, -3.2742, -3.1792], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1135, device='cuda:0', dtype=torch.float64)
tensor([-1.8194, -2.6360, -2.8031, -3.1947, -3.1204], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6126, device='cuda:0', dtype=torch.float64)
tensor([-1.8486, -2.6571, -2.7718, -3.1100, -3.0877], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7845, device='cuda:0', dtype=torch.float64)
tensor([-1.9105, -2.6799, -2.7597, -3.0298, -3.0860], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5858, device='cuda:0', dtype=torch.float64)
tensor([-1.9598, -2.6716, -2.7771, -2.9847, -3.1074], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7032, device='cuda:0', dtype=torch.float64)
tensor([-1.9818, -2.6382, -2.7687, -2.9723, -3.1087], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4342, device='cuda:0', dtype=torch.float64)
tensor([-1.9689, -2.6154, -2.7966, -2.9863, -3.0970], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4483, device='cuda:0', dtype=torch.float64)
tensor([-1.9632, -2.6170, -2.8485, -3.0019, -3.1055], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5954, device='cuda:0', dtype=torch.float64)
tensor([-1.9608, -2.6291, -2.9066, -3.0357, -3.1354], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3272, device='cuda:0', dtype=torch.float64)
tensor([-1.9585, -2.6599, -2.9252, -3.0734, -3.1591], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5024, device='cuda:0', dtype=torch.float64)
tensor([-1.9492, -2.6894, -2.9193, -3.1107, -3.1510], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2240, device='cuda:0', dtype=torch.float64)
tensor([-1.9235, -2.7098, -2.9118, -3.1370, -3.1474], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8189, device='cuda:0', dtype=torch.float64)
tensor([-1.9134, -2.7360, -2.8782, -3.1387, -3.1396], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5798, device='cuda:0', dtype=torch.float64)
tensor([-1.9134, -2.7444, -2.8336, -3.1109, -3.1280], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5876, device='cuda:0', dtype=torch.float64)
tensor([-1.9177, -2.7491, -2.7898, -3.0750, -3.1287], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4521, device='cuda:0', dtype=torch.float64)
tensor([-1.9180, -2.7388, -2.7630, -3.0629, -3.1358], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6919, device='cuda:0', dtype=torch.float64)
tensor([-1.9101, -2.7073, -2.7704, -3.0653, -3.1276], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6865, device='cuda:0', dtype=torch.float64)
tensor([-1.9093, -2.7023, -2.7841, -3.0659, -3.1138], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6537, device='cuda:0', dtype=torch.float64)
tensor([-1.9185, -2.7206, -2.7959, -3.0665, -3.0985], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7324, device='cuda:0', dtype=torch.float64)
tensor([-1.9559, -2.7532, -2.7967, -3.0647, -3.1164], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3545, device='cuda:0', dtype=torch.float64)
tensor([-2.0031, -2.8077, -2.7809, -3.0725, -3.1364], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7046, device='cuda:0', dtype=torch.float64)
tensor([-2.0520, -2.8590, -2.7713, -3.1042, -3.1592], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1167, device='cuda:0', dtype=torch.float64)
tensor([-2.0547, -2.8763, -2.7788, -3.1682, -3.1885], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5538, device='cuda:0', dtype=torch.float64)
tensor([-2.0118, -2.8440, -2.7992, -3.2495, -3.2065], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5444, device='cuda:0', dtype=torch.float64)
tensor([-1.9516, -2.7790, -2.8339, -3.3166, -3.2230], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2854, device='cuda:0', dtype=torch.float64)
tensor([-1.9022, -2.7019, -2.8745, -3.3615, -3.2533], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6799, device='cuda:0', dtype=torch.float64)
tensor([-1.8787, -2.6571, -2.9005, -3.3760, -3.2829], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8962, device='cuda:0', dtype=torch.float64)
tensor([-1.8811, -2.6348, -2.8901, -3.3429, -3.3025], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8142, device='cuda:0', dtype=torch.float64)
tensor([-1.8859, -2.6250, -2.8335, -3.2891, -3.2808], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5379, device='cuda:0', dtype=torch.float64)
tensor([-1.8979, -2.6406, -2.7770, -3.2356, -3.2613], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5560, device='cuda:0', dtype=torch.float64)
tensor([-1.9156, -2.6404, -2.7134, -3.1856, -3.2562], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3533, device='cuda:0', dtype=torch.float64)
tensor([-1.9402, -2.6385, -2.6533, -3.1399, -3.2449], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4916, device='cuda:0', dtype=torch.float64)
tensor([-1.9377, -2.6202, -2.6269, -3.1102, -3.2088], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5871, device='cuda:0', dtype=torch.float64)
tensor([-1.9148, -2.5922, -2.6336, -3.1034, -3.1414], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6899, device='cuda:0', dtype=torch.float64)
tensor([-1.8851, -2.5551, -2.6747, -3.1154, -3.0917], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5129, device='cuda:0', dtype=torch.float64)
tensor([-1.8897, -2.5383, -2.7346, -3.1063, -3.0941], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6484, device='cuda:0', dtype=torch.float64)
tensor([-1.9224, -2.5515, -2.7908, -3.0953, -3.1230], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5523, device='cuda:0', dtype=torch.float64)
tensor([-1.9649, -2.5931, -2.8227, -3.0572, -3.1529], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6947, device='cuda:0', dtype=torch.float64)
tensor([-2.0032, -2.6485, -2.8285, -3.0037, -3.1552], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4716, device='cuda:0', dtype=torch.float64)
tensor([-2.0554, -2.7132, -2.8329, -2.9665, -3.1743], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5602, device='cuda:0', dtype=torch.float64)
tensor([-2.0658, -2.7582, -2.8611, -2.9808, -3.2001], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4147, device='cuda:0', dtype=torch.float64)
tensor([-2.0101, -2.7816, -2.9019, -3.0514, -3.2025], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7120, device='cuda:0', dtype=torch.float64)
tensor([-1.9355, -2.7728, -2.9424, -3.1389, -3.2023], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6424, device='cuda:0', dtype=torch.float64)
tensor([-1.8643, -2.7509, -2.9508, -3.2087, -3.1736], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3725, device='cuda:0', dtype=torch.float64)
tensor([-1.8217, -2.7362, -2.9375, -3.2455, -3.1408], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5189, device='cuda:0', dtype=torch.float64)
tensor([-1.8299, -2.7351, -2.9137, -3.2391, -3.1549], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3123, device='cuda:0', dtype=torch.float64)
tensor([-1.8719, -2.7266, -2.8790, -3.2067, -3.1783], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3675, device='cuda:0', dtype=torch.float64)
tensor([-1.9225, -2.7105, -2.8306, -3.1669, -3.1914], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4280, device='cuda:0', dtype=torch.float64)
tensor([-1.9521, -2.7032, -2.7883, -3.1317, -3.1876], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7694, device='cuda:0', dtype=torch.float64)
tensor([-1.9403, -2.7002, -2.7516, -3.1272, -3.1625], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6915, device='cuda:0', dtype=torch.float64)
tensor([-1.9445, -2.7153, -2.7293, -3.1325, -3.1517], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5426, device='cuda:0', dtype=torch.float64)
tensor([-1.9410, -2.7432, -2.7398, -3.1483, -3.1751], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3392, device='cuda:0', dtype=torch.float64)
tensor([-1.9401, -2.7518, -2.7724, -3.1760, -3.2194], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6864, device='cuda:0', dtype=torch.float64)
tensor([-1.9438, -2.7756, -2.7948, -3.1937, -3.2800], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3338, device='cuda:0', dtype=torch.float64)
tensor([-1.9320, -2.7668, -2.8132, -3.1874, -3.3009], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6052, device='cuda:0', dtype=torch.float64)
tensor([-1.9251, -2.7536, -2.8155, -3.1541, -3.3101], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5123, device='cuda:0', dtype=torch.float64)
tensor([-1.9304, -2.7229, -2.8010, -3.1175, -3.3020], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8176, device='cuda:0', dtype=torch.float64)
tensor([-1.9521, -2.6887, -2.7758, -3.0897, -3.2839], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5969, device='cuda:0', dtype=torch.float64)
tensor([-1.9774, -2.6527, -2.7675, -3.0942, -3.2888], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4132, device='cuda:0', dtype=torch.float64)
tensor([-2.0045, -2.6409, -2.7649, -3.0983, -3.2735], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9120, device='cuda:0', dtype=torch.float64)
tensor([-2.0269, -2.6414, -2.7388, -3.1118, -3.2413], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4608, device='cuda:0', dtype=torch.float64)
tensor([-2.0197, -2.6184, -2.7391, -3.1291, -3.1986], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4136, device='cuda:0', dtype=torch.float64)
tensor([-2.0146, -2.6150, -2.7515, -3.1387, -3.1623], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7410, device='cuda:0', dtype=torch.float64)
tensor([-1.9935, -2.6249, -2.7800, -3.1768, -3.1556], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3607, device='cuda:0', dtype=torch.float64)
tensor([-1.9582, -2.6417, -2.8067, -3.2059, -3.1498], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7538, device='cuda:0', dtype=torch.float64)
tensor([-1.9286, -2.6686, -2.8191, -3.2069, -3.1206], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9402, device='cuda:0', dtype=torch.float64)
tensor([-1.9437, -2.7126, -2.8210, -3.2013, -3.1307], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6448, device='cuda:0', dtype=torch.float64)
tensor([-1.9687, -2.7532, -2.8181, -3.1795, -3.1483], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7563, device='cuda:0', dtype=torch.float64)
tensor([-1.9714, -2.7654, -2.8085, -3.1351, -3.1522], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6187, device='cuda:0', dtype=torch.float64)
tensor([-1.9388, -2.7454, -2.8328, -3.1233, -3.1787], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8302, device='cuda:0', dtype=torch.float64)
tensor([-1.9227, -2.7134, -2.8887, -3.1428, -3.2013], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8396, device='cuda:0', dtype=torch.float64)
tensor([-1.9390, -2.7024, -2.9109, -3.1586, -3.2266], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4621, device='cuda:0', dtype=torch.float64)
tensor([-1.9580, -2.6919, -2.9150, -3.1771, -3.2495], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.3092, device='cuda:0', dtype=torch.float64)
tensor([-1.9588, -2.6720, -2.8938, -3.2155, -3.2441], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7683, device='cuda:0', dtype=torch.float64)
tensor([-1.9494, -2.6572, -2.8612, -3.2209, -3.2261], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5535, device='cuda:0', dtype=torch.float64)
tensor([-1.9490, -2.6571, -2.8148, -3.1849, -3.2082], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8047, device='cuda:0', dtype=torch.float64)
tensor([-1.9800, -2.6973, -2.7700, -3.1313, -3.2226], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5289, device='cuda:0', dtype=torch.float64)
tensor([-2.0105, -2.7320, -2.7323, -3.0975, -3.2190], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5408, device='cuda:0', dtype=torch.float64)
tensor([-2.0203, -2.7479, -2.7156, -3.0895, -3.1893], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6617, device='cuda:0', dtype=torch.float64)
tensor([-2.0051, -2.7461, -2.7237, -3.1136, -3.1498], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6634, device='cuda:0', dtype=torch.float64)
tensor([-1.9576, -2.7412, -2.7420, -3.1566, -3.1359], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6124, device='cuda:0', dtype=torch.float64)
tensor([-1.9511, -2.7488, -2.7480, -3.1702, -3.1380], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5508, device='cuda:0', dtype=torch.float64)
tensor([-1.9512, -2.7619, -2.7502, -3.1752, -3.1484], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9763, device='cuda:0', dtype=torch.float64)
tensor([-1.9794, -2.7835, -2.7616, -3.1532, -3.1790], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5982, device='cuda:0', dtype=torch.float64)
tensor([-2.0262, -2.7899, -2.7884, -3.1017, -3.2087], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5864, device='cuda:0', dtype=torch.float64)
tensor([-2.0753, -2.7701, -2.8458, -3.0656, -3.2494], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2721, device='cuda:0', dtype=torch.float64)
tensor([-2.0877, -2.7223, -2.9142, -3.0678, -3.2638], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8098, device='cuda:0', dtype=torch.float64)
tensor([-2.0425, -2.6347, -2.9899, -3.1202, -3.2400], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4110, device='cuda:0', dtype=torch.float64)
tensor([-1.9629, -2.5534, -3.0219, -3.1787, -3.1809], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7338, device='cuda:0', dtype=torch.float64)
tensor([-1.8887, -2.5154, -3.0051, -3.2175, -3.1222], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6168, device='cuda:0', dtype=torch.float64)
tensor([-1.8440, -2.5146, -2.9522, -3.2562, -3.0837], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6993, device='cuda:0', dtype=torch.float64)
tensor([-1.8692, -2.5585, -2.8722, -3.2676, -3.0896], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6620, device='cuda:0', dtype=torch.float64)
tensor([-1.9293, -2.6190, -2.8062, -3.2868, -3.1284], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6235, device='cuda:0', dtype=torch.float64)
tensor([-1.9618, -2.6763, -2.7611, -3.3125, -3.1765], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.2888, device='cuda:0', dtype=torch.float64)
tensor([-1.9423, -2.7247, -2.7539, -3.3071, -3.1868], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7423, device='cuda:0', dtype=torch.float64)
tensor([-1.9522, -2.7427, -2.7775, -3.2834, -3.2171], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5070, device='cuda:0', dtype=torch.float64)
tensor([-1.9307, -2.7401, -2.7887, -3.2672, -3.2176], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8889, device='cuda:0', dtype=torch.float64)
tensor([-1.8997, -2.7314, -2.8064, -3.2771, -3.2274], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0609, device='cuda:0', dtype=torch.float64)
tensor([-1.8874, -2.7522, -2.8006, -3.2961, -3.2549], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1076, device='cuda:0', dtype=torch.float64)
tensor([-1.8893, -2.7737, -2.8008, -3.2964, -3.2567], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3534, device='cuda:0', dtype=torch.float64)
tensor([-1.8887, -2.7966, -2.7785, -3.2789, -3.2411], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8850, device='cuda:0', dtype=torch.float64)
tensor([-1.9096, -2.8307, -2.7459, -3.2702, -3.2123], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.3766, device='cuda:0', dtype=torch.float64)
tensor([-1.9498, -2.8179, -2.7589, -3.1669, -3.2236], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7462, device='cuda:0', dtype=torch.float64)
tensor([-2.0110, -2.8023, -2.7904, -3.1094, -3.2647], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6175, device='cuda:0', dtype=torch.float64)
tensor([-2.0587, -2.7991, -2.8188, -3.0637, -3.2700], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7901, device='cuda:0', dtype=torch.float64)
tensor([-2.0898, -2.8492, -2.8422, -2.9920, -3.2405], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1078, device='cuda:0', dtype=torch.float64)
tensor([-2.0731, -2.7522, -2.8414, -2.8687, -3.1590], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6484, device='cuda:0', dtype=torch.float64)
tensor([-2.0098, -2.6906, -2.8572, -2.8366, -3.0861], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9223, device='cuda:0', dtype=torch.float64)
tensor([-1.9645, -2.6751, -2.8855, -2.8939, -3.0828], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6631, device='cuda:0', dtype=torch.float64)
tensor([-1.9461, -2.6672, -2.9085, -2.9881, -3.1335], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6845, device='cuda:0', dtype=torch.float64)
tensor([-1.9402, -2.6640, -2.9311, -3.0736, -3.1738], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6623, device='cuda:0', dtype=torch.float64)
tensor([-1.9493, -2.6727, -2.9361, -3.1434, -3.1889], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8317, device='cuda:0', dtype=torch.float64)
tensor([-1.9705, -2.6970, -2.9253, -3.1950, -3.1889], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5296, device='cuda:0', dtype=torch.float64)
tensor([-1.9661, -2.7358, -2.9046, -3.2413, -3.1976], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8577, device='cuda:0', dtype=torch.float64)
tensor([-1.9692, -2.7705, -2.8817, -3.2731, -3.2414], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1798, device='cuda:0', dtype=torch.float64)
tensor([-1.9930, -2.7883, -2.8663, -3.2756, -3.3044], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8642, device='cuda:0', dtype=torch.float64)
tensor([-2.0049, -2.7898, -2.8253, -3.2441, -3.3425], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8806, device='cuda:0', dtype=torch.float64)
tensor([-1.9894, -2.7861, -2.7652, -3.2132, -3.3185], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8176, device='cuda:0', dtype=torch.float64)
tensor([-1.9708, -2.7777, -2.7051, -3.1903, -3.2825], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6546, device='cuda:0', dtype=torch.float64)
tensor([-1.9671, -2.7762, -2.6789, -3.1713, -3.2521], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.2813, device='cuda:0', dtype=torch.float64)
tensor([-1.9675, -2.7718, -2.7008, -3.1444, -3.2264], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7432, device='cuda:0', dtype=torch.float64)
tensor([-1.9748, -2.7499, -2.7570, -3.1419, -3.2385], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6576, device='cuda:0', dtype=torch.float64)
tensor([-1.9633, -2.6923, -2.8481, -3.1674, -3.2637], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5790, device='cuda:0', dtype=torch.float64)
tensor([-1.9711, -2.6555, -2.9146, -3.2233, -3.2893], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8316, device='cuda:0', dtype=torch.float64)
tensor([-1.9710, -2.6442, -2.9299, -3.2623, -3.2293], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7427, device='cuda:0', dtype=torch.float64)
tensor([-1.9818, -2.6436, -2.9287, -3.2814, -3.1929], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2789, device='cuda:0', dtype=torch.float64)
tensor([-1.9846, -2.6561, -2.9233, -3.3053, -3.1795], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7310, device='cuda:0', dtype=torch.float64)
tensor([-1.9892, -2.6338, -2.9270, -3.3242, -3.1930], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8779, device='cuda:0', dtype=torch.float64)
tensor([-1.9742, -2.5979, -2.9270, -3.3081, -3.1870], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0525, device='cuda:0', dtype=torch.float64)
tensor([-1.9368, -2.5955, -2.8890, -3.2256, -3.1519], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8577, device='cuda:0', dtype=torch.float64)
tensor([-1.9053, -2.6006, -2.8668, -3.1410, -3.1387], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6237, device='cuda:0', dtype=torch.float64)
tensor([-1.9068, -2.6416, -2.8295, -3.0332, -3.1216], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5708, device='cuda:0', dtype=torch.float64)
tensor([-1.9269, -2.6920, -2.8019, -2.9622, -3.1240], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4631, device='cuda:0', dtype=torch.float64)
tensor([-1.9508, -2.7396, -2.7930, -2.9481, -3.1540], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3007, device='cuda:0', dtype=torch.float64)
tensor([-1.9594, -2.7543, -2.8092, -2.9849, -3.1870], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5045, device='cuda:0', dtype=torch.float64)
tensor([-1.9415, -2.7611, -2.8487, -3.0681, -3.2081], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6481, device='cuda:0', dtype=torch.float64)
tensor([-1.9263, -2.7867, -2.8881, -3.1886, -3.2473], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4766, device='cuda:0', dtype=torch.float64)
tensor([-1.9158, -2.8135, -2.9149, -3.2913, -3.2450], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7415, device='cuda:0', dtype=torch.float64)
tensor([-1.9142, -2.8301, -2.9596, -3.3854, -3.2448], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7950, device='cuda:0', dtype=torch.float64)
tensor([-1.9348, -2.8334, -2.9730, -3.4440, -3.2376], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8704, device='cuda:0', dtype=torch.float64)
tensor([-2.0141, -2.8475, -2.9254, -3.4431, -3.2191], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8670, device='cuda:0', dtype=torch.float64)
tensor([-2.1015, -2.8606, -2.8760, -3.4267, -3.2501], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4755, device='cuda:0', dtype=torch.float64)
tensor([-2.1583, -2.8480, -2.8251, -3.3874, -3.2650], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0012, device='cuda:0', dtype=torch.float64)
tensor([-2.1639, -2.8209, -2.8011, -3.3200, -3.2719], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8201, device='cuda:0', dtype=torch.float64)
tensor([-2.1259, -2.7833, -2.7843, -3.2182, -3.2335], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9309, device='cuda:0', dtype=torch.float64)
tensor([-2.0130, -2.7203, -2.7920, -3.1205, -3.1436], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5110, device='cuda:0', dtype=torch.float64)
tensor([-1.8925, -2.6620, -2.8410, -3.0907, -3.0701], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7410, device='cuda:0', dtype=torch.float64)
tensor([-1.8391, -2.6347, -2.8925, -3.0757, -3.0690], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6969, device='cuda:0', dtype=torch.float64)
tensor([-1.8375, -2.6339, -2.8999, -3.0738, -3.1315], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7680, device='cuda:0', dtype=torch.float64)
tensor([-1.9097, -2.6624, -2.8985, -3.0631, -3.2308], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4454, device='cuda:0', dtype=torch.float64)
tensor([-1.9879, -2.7105, -2.9103, -3.0589, -3.3139], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6883, device='cuda:0', dtype=torch.float64)
tensor([-2.0284, -2.7397, -2.9007, -3.0832, -3.3335], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9520, device='cuda:0', dtype=torch.float64)
tensor([-2.0231, -2.7525, -2.8561, -3.1081, -3.2848], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4488, device='cuda:0', dtype=torch.float64)
tensor([-1.9960, -2.7397, -2.8441, -3.1591, -3.2195], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9524, device='cuda:0', dtype=torch.float64)
tensor([-1.9634, -2.7072, -2.8521, -3.2330, -3.1657], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8925, device='cuda:0', dtype=torch.float64)
tensor([-1.9006, -2.6655, -2.8540, -3.3243, -3.1574], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6575, device='cuda:0', dtype=torch.float64)
tensor([-1.8672, -2.6138, -2.8633, -3.3790, -3.1524], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1397, device='cuda:0', dtype=torch.float64)
tensor([-1.8679, -2.6137, -2.8619, -3.4009, -3.1389], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9480, device='cuda:0', dtype=torch.float64)
tensor([-1.9379, -2.6477, -2.8192, -3.3185, -3.1137], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.2770, device='cuda:0', dtype=torch.float64)
tensor([-2.0426, -2.6984, -2.7779, -3.2109, -3.1385], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7600, device='cuda:0', dtype=torch.float64)
tensor([-2.1750, -2.7539, -2.7419, -3.0719, -3.1712], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8083, device='cuda:0', dtype=torch.float64)
tensor([-2.2884, -2.8145, -2.7359, -2.9531, -3.2398], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9767, device='cuda:0', dtype=torch.float64)
tensor([-2.3272, -2.8560, -2.7717, -2.9301, -3.3413], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7679, device='cuda:0', dtype=torch.float64)
tensor([-2.2436, -2.8284, -2.8453, -2.9906, -3.4057], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7646, device='cuda:0', dtype=torch.float64)
tensor([-2.0944, -2.7550, -2.9182, -3.1171, -3.4066], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8639, device='cuda:0', dtype=torch.float64)
tensor([-1.9256, -2.6893, -2.9952, -3.2449, -3.3545], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5049, device='cuda:0', dtype=torch.float64)
tensor([-1.7804, -2.6422, -3.0532, -3.3899, -3.2679], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9156, device='cuda:0', dtype=torch.float64)
tensor([-1.7329, -2.6348, -3.0566, -3.4085, -3.2186], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5842, device='cuda:0', dtype=torch.float64)
tensor([-1.7664, -2.6375, -3.0241, -3.2794, -3.2134], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5905, device='cuda:0', dtype=torch.float64)
tensor([-1.8797, -2.6797, -2.9467, -3.1498, -3.2539], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6112, device='cuda:0', dtype=torch.float64)
tensor([-2.0373, -2.7365, -2.8610, -3.0671, -3.3169], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0649, device='cuda:0', dtype=torch.float64)
tensor([-2.1734, -2.8024, -2.7826, -3.0369, -3.3407], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7889, device='cuda:0', dtype=torch.float64)
tensor([-2.2467, -2.8614, -2.7313, -3.0655, -3.3524], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4393, device='cuda:0', dtype=torch.float64)
tensor([-2.2270, -2.8877, -2.7212, -3.1180, -3.3281], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7078, device='cuda:0', dtype=torch.float64)
tensor([-2.0977, -2.8294, -2.7476, -3.2173, -3.2618], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7179, device='cuda:0', dtype=torch.float64)
tensor([-1.9472, -2.7267, -2.8023, -3.3314, -3.1880], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6647, device='cuda:0', dtype=torch.float64)
tensor([-1.8445, -2.6724, -2.8703, -3.4521, -3.1825], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5333, device='cuda:0', dtype=torch.float64)
tensor([-1.8122, -2.6600, -2.9110, -3.4986, -3.1880], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8479, device='cuda:0', dtype=torch.float64)
tensor([-1.8344, -2.6800, -2.8766, -3.4286, -3.1657], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9268, device='cuda:0', dtype=torch.float64)
tensor([-1.9133, -2.7360, -2.7302, -3.2984, -3.1675], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7462, device='cuda:0', dtype=torch.float64)
tensor([-2.0229, -2.7894, -2.6359, -3.1973, -3.2151], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9366, device='cuda:0', dtype=torch.float64)
tensor([-2.1116, -2.8112, -2.5993, -3.1395, -3.2904], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6168, device='cuda:0', dtype=torch.float64)
tensor([-2.1741, -2.8067, -2.6219, -3.1254, -3.3681], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1218, device='cuda:0', dtype=torch.float64)
tensor([-2.1600, -2.7616, -2.6813, -3.1038, -3.3613], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4126, device='cuda:0', dtype=torch.float64)
tensor([-2.0911, -2.7121, -2.7512, -3.1018, -3.3130], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.2156, device='cuda:0', dtype=torch.float64)
tensor([-2.0056, -2.6812, -2.8293, -3.1527, -3.2731], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8790, device='cuda:0', dtype=torch.float64)
tensor([-1.9509, -2.6704, -2.8934, -3.2084, -3.2296], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7735, device='cuda:0', dtype=torch.float64)
tensor([-1.9240, -2.6520, -2.9214, -3.2012, -3.1789], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4219, device='cuda:0', dtype=torch.float64)
tensor([-1.9592, -2.6687, -2.9009, -3.1757, -3.1180], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5150, device='cuda:0', dtype=torch.float64)
tensor([-2.0322, -2.7236, -2.8620, -3.1467, -3.0828], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4225, device='cuda:0', dtype=torch.float64)
tensor([-2.0859, -2.7862, -2.8571, -3.1554, -3.0921], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6309, device='cuda:0', dtype=torch.float64)
tensor([-2.1299, -2.8289, -2.8663, -3.1516, -3.1333], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5953, device='cuda:0', dtype=torch.float64)
tensor([-2.1461, -2.8302, -2.8918, -3.1489, -3.1973], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6427, device='cuda:0', dtype=torch.float64)
tensor([-2.1086, -2.7959, -2.9473, -3.2111, -3.2563], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9163, device='cuda:0', dtype=torch.float64)
tensor([-2.0477, -2.7595, -3.0282, -3.3119, -3.3135], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9152, device='cuda:0', dtype=torch.float64)
tensor([-2.0090, -2.7612, -3.0717, -3.4015, -3.3728], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8775, device='cuda:0', dtype=torch.float64)
tensor([-1.9734, -2.7775, -3.0476, -3.4610, -3.3958], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5736, device='cuda:0', dtype=torch.float64)
tensor([-1.9618, -2.7814, -2.9911, -3.4619, -3.4136], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8287, device='cuda:0', dtype=torch.float64)
tensor([-1.9706, -2.7753, -2.9327, -3.4006, -3.4113], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3570, device='cuda:0', dtype=torch.float64)
tensor([-1.9719, -2.7753, -2.8864, -3.3142, -3.3958], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0046, device='cuda:0', dtype=torch.float64)
tensor([-2.0030, -2.7887, -2.8616, -3.2015, -3.3633], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8332, device='cuda:0', dtype=torch.float64)
tensor([-2.0504, -2.7985, -2.8346, -3.1023, -3.3177], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6408, device='cuda:0', dtype=torch.float64)
tensor([-2.0474, -2.7874, -2.8410, -3.0352, -3.2576], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4060, device='cuda:0', dtype=torch.float64)
tensor([-1.9966, -2.7540, -2.8575, -3.0264, -3.1720], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8479, device='cuda:0', dtype=torch.float64)
tensor([-1.9069, -2.6968, -2.9025, -3.0977, -3.1245], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7852, device='cuda:0', dtype=torch.float64)
tensor([-1.8597, -2.6538, -2.9417, -3.1848, -3.1123], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9120, device='cuda:0', dtype=torch.float64)
tensor([-1.8572, -2.6358, -2.9569, -3.2467, -3.1095], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2693, device='cuda:0', dtype=torch.float64)
tensor([-1.8914, -2.6480, -2.9407, -3.2758, -3.1137], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9131, device='cuda:0', dtype=torch.float64)
tensor([-1.9574, -2.6808, -2.8975, -3.2648, -3.1218], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3644, device='cuda:0', dtype=torch.float64)
tensor([-2.0601, -2.7467, -2.8443, -3.2139, -3.1623], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5981, device='cuda:0', dtype=torch.float64)
tensor([-2.1557, -2.8099, -2.8049, -3.1432, -3.2224], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5599, device='cuda:0', dtype=torch.float64)
tensor([-2.2198, -2.8495, -2.7872, -3.0709, -3.2763], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5977, device='cuda:0', dtype=torch.float64)
tensor([-2.2190, -2.8448, -2.7850, -3.0374, -3.3003], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3977, device='cuda:0', dtype=torch.float64)
tensor([-2.1549, -2.8140, -2.7982, -3.0352, -3.2782], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6254, device='cuda:0', dtype=torch.float64)
tensor([-2.0473, -2.7509, -2.8393, -3.0719, -3.2273], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9767, device='cuda:0', dtype=torch.float64)
tensor([-1.9465, -2.7048, -2.8645, -3.1172, -3.1937], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5491, device='cuda:0', dtype=torch.float64)
tensor([-1.8844, -2.6685, -2.8916, -3.1784, -3.1854], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3626, device='cuda:0', dtype=torch.float64)
tensor([-1.8830, -2.6742, -2.9007, -3.2023, -3.2066], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4922, device='cuda:0', dtype=torch.float64)
tensor([-1.9359, -2.6929, -2.8922, -3.2249, -3.2648], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3892, device='cuda:0', dtype=torch.float64)
tensor([-2.0119, -2.7012, -2.8757, -3.2441, -3.3240], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7675, device='cuda:0', dtype=torch.float64)
tensor([-2.0991, -2.6936, -2.8714, -3.2538, -3.3475], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5599, device='cuda:0', dtype=torch.float64)
tensor([-2.1428, -2.6975, -2.8622, -3.2324, -3.3448], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4254, device='cuda:0', dtype=torch.float64)
tensor([-2.1381, -2.6977, -2.8684, -3.2253, -3.3151], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4888, device='cuda:0', dtype=torch.float64)
tensor([-2.1176, -2.7106, -2.8884, -3.2374, -3.2697], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9118, device='cuda:0', dtype=torch.float64)
tensor([-2.1473, -2.7419, -2.8983, -3.2432, -3.2295], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7070, device='cuda:0', dtype=torch.float64)
tensor([-2.1670, -2.7728, -2.8859, -3.2314, -3.1687], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.4294, device='cuda:0', dtype=torch.float64)
tensor([-2.1689, -2.8347, -2.8774, -3.1933, -3.0802], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7123, device='cuda:0', dtype=torch.float64)
tensor([-2.1358, -2.9085, -2.8861, -3.1925, -3.0567], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7682, device='cuda:0', dtype=torch.float64)
tensor([-2.0244, -2.7799, -2.9181, -3.2256, -3.0441], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4343, device='cuda:0', dtype=torch.float64)
tensor([-1.9224, -2.7069, -2.9550, -3.2823, -3.0520], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6893, device='cuda:0', dtype=torch.float64)
tensor([-1.8883, -2.6806, -2.9797, -3.3066, -3.0958], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7792, device='cuda:0', dtype=torch.float64)
tensor([-1.9203, -2.6969, -2.9872, -3.2941, -3.1795], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4451, device='cuda:0', dtype=torch.float64)
tensor([-1.9758, -2.7464, -2.9712, -3.2852, -3.2832], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5751, device='cuda:0', dtype=torch.float64)
tensor([-2.0367, -2.8354, -2.9326, -3.2537, -3.3608], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4388, device='cuda:0', dtype=torch.float64)
tensor([-2.0742, -2.9174, -2.8892, -3.2439, -3.4203], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8015, device='cuda:0', dtype=torch.float64)
tensor([-2.1017, -2.9673, -2.8262, -3.2380, -3.4533], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7791, device='cuda:0', dtype=torch.float64)
tensor([-2.0604, -2.9689, -2.7872, -3.2628, -3.4310], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9992, device='cuda:0', dtype=torch.float64)
tensor([-1.9801, -2.9268, -2.7564, -3.2482, -3.3744], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4180, device='cuda:0', dtype=torch.float64)
tensor([-1.8729, -2.8613, -2.7665, -3.2215, -3.2879], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6802, device='cuda:0', dtype=torch.float64)
tensor([-1.8133, -2.7947, -2.7879, -3.2283, -3.2395], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7792, device='cuda:0', dtype=torch.float64)
tensor([-1.8359, -2.7561, -2.7967, -3.2462, -3.2379], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8268, device='cuda:0', dtype=torch.float64)
tensor([-1.8886, -2.7384, -2.8055, -3.2552, -3.2527], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4946, device='cuda:0', dtype=torch.float64)
tensor([-2.0079, -2.7244, -2.8089, -3.2536, -3.2854], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9796, device='cuda:0', dtype=torch.float64)
tensor([-2.1625, -2.7357, -2.8095, -3.2601, -3.3203], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4897, device='cuda:0', dtype=torch.float64)
tensor([-2.1917, -2.7489, -2.8311, -3.3029, -3.3605], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0007, device='cuda:0', dtype=torch.float64)
tensor([-2.1350, -2.7264, -2.8841, -3.3510, -3.4040], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1966, device='cuda:0', dtype=torch.float64)
tensor([-2.1036, -2.7058, -2.9317, -3.3917, -3.4301], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3438, device='cuda:0', dtype=torch.float64)
tensor([-2.0853, -2.7041, -2.9473, -3.3941, -3.4154], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7105, device='cuda:0', dtype=torch.float64)
tensor([-2.0825, -2.7463, -2.9102, -3.3147, -3.3514], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8193, device='cuda:0', dtype=torch.float64)
tensor([-2.0818, -2.8278, -2.8490, -3.2206, -3.2763], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0862, device='cuda:0', dtype=torch.float64)
tensor([-2.0988, -2.8966, -2.8009, -3.1161, -3.2123], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7829, device='cuda:0', dtype=torch.float64)
tensor([-2.1095, -2.9385, -2.7641, -3.0066, -3.1532], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7090, device='cuda:0', dtype=torch.float64)
tensor([-2.1139, -2.9408, -2.7656, -2.9283, -3.1309], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5421, device='cuda:0', dtype=torch.float64)
tensor([-2.0831, -2.9096, -2.8009, -2.8900, -3.1191], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6087, device='cuda:0', dtype=torch.float64)
tensor([-2.0433, -2.8622, -2.8479, -2.9023, -3.1113], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.2382, device='cuda:0', dtype=torch.float64)
tensor([-2.0357, -2.8447, -2.8751, -2.9326, -3.1144], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5408, device='cuda:0', dtype=torch.float64)
tensor([-2.0247, -2.8151, -2.8740, -2.9937, -3.0974], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3206, device='cuda:0', dtype=torch.float64)
tensor([-1.9888, -2.7795, -2.8785, -3.1136, -3.0793], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6733, device='cuda:0', dtype=torch.float64)
tensor([-1.9954, -2.7318, -2.9062, -3.2241, -3.1232], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8402, device='cuda:0', dtype=torch.float64)
tensor([-2.0310, -2.6954, -2.9183, -3.3073, -3.1474], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5856, device='cuda:0', dtype=torch.float64)
tensor([-2.0725, -2.6693, -2.9151, -3.3509, -3.1646], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5696, device='cuda:0', dtype=torch.float64)
tensor([-2.0746, -2.6593, -2.9290, -3.3997, -3.1687], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1935, device='cuda:0', dtype=torch.float64)
tensor([-2.0732, -2.6912, -2.9095, -3.4279, -3.1652], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6018, device='cuda:0', dtype=torch.float64)
tensor([-2.0929, -2.7495, -2.8839, -3.4241, -3.1775], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4905, device='cuda:0', dtype=torch.float64)
tensor([-2.1107, -2.8368, -2.8726, -3.4359, -3.2199], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8522, device='cuda:0', dtype=torch.float64)
tensor([-2.1158, -2.8968, -2.8511, -3.4447, -3.2732], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4167, device='cuda:0', dtype=torch.float64)
tensor([-2.1014, -2.9109, -2.8520, -3.3966, -3.3170], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5013, device='cuda:0', dtype=torch.float64)
tensor([-2.0424, -2.9009, -2.8899, -3.3229, -3.3363], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5694, device='cuda:0', dtype=torch.float64)
tensor([-2.0088, -2.8964, -2.9243, -3.2145, -3.3482], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2238, device='cuda:0', dtype=torch.float64)
tensor([-1.9428, -2.8532, -2.9776, -3.1169, -3.3509], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7767, device='cuda:0', dtype=torch.float64)
tensor([-1.8783, -2.7966, -3.0259, -3.0721, -3.3617], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8576, device='cuda:0', dtype=torch.float64)
tensor([-1.8483, -2.7421, -3.0736, -3.0750, -3.3915], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6645, device='cuda:0', dtype=torch.float64)
tensor([-1.8214, -2.7050, -3.0597, -3.1100, -3.4057], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9000, device='cuda:0', dtype=torch.float64)
tensor([-1.8390, -2.6897, -2.9700, -3.1201, -3.3784], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5300, device='cuda:0', dtype=torch.float64)
tensor([-1.8772, -2.6543, -2.8865, -3.1414, -3.3593], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5509, device='cuda:0', dtype=torch.float64)
tensor([-1.9487, -2.6392, -2.8184, -3.1663, -3.3509], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6227, device='cuda:0', dtype=torch.float64)
tensor([-2.0201, -2.6611, -2.7692, -3.2003, -3.3516], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5317, device='cuda:0', dtype=torch.float64)
tensor([-2.0966, -2.7019, -2.7349, -3.2580, -3.3620], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3435, device='cuda:0', dtype=torch.float64)
tensor([-2.1528, -2.7437, -2.7368, -3.3348, -3.3692], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5900, device='cuda:0', dtype=torch.float64)
tensor([-2.1790, -2.7818, -2.7633, -3.3875, -3.3709], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6081, device='cuda:0', dtype=torch.float64)
tensor([-2.1561, -2.8024, -2.8049, -3.3931, -3.3521], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7885, device='cuda:0', dtype=torch.float64)
tensor([-2.1565, -2.7759, -2.8356, -3.3690, -3.3334], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6297, device='cuda:0', dtype=torch.float64)
tensor([-2.1355, -2.7553, -2.8834, -3.3434, -3.3014], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8577, device='cuda:0', dtype=torch.float64)
tensor([-2.0790, -2.7435, -2.9326, -3.3380, -3.2446], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8597, device='cuda:0', dtype=torch.float64)
tensor([-2.0222, -2.7420, -2.9761, -3.3293, -3.1836], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8546, device='cuda:0', dtype=torch.float64)
tensor([-1.9963, -2.7396, -3.0136, -3.3101, -3.1549], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7236, device='cuda:0', dtype=torch.float64)
tensor([-2.0159, -2.7687, -3.0320, -3.2715, -3.1495], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4336, device='cuda:0', dtype=torch.float64)
tensor([-2.0531, -2.8086, -3.0438, -3.2333, -3.1567], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9574, device='cuda:0', dtype=torch.float64)
tensor([-2.0913, -2.8465, -3.0395, -3.2060, -3.1563], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4895, device='cuda:0', dtype=torch.float64)
tensor([-2.1255, -2.8718, -3.0211, -3.1960, -3.1508], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6611, device='cuda:0', dtype=torch.float64)
tensor([-2.1276, -2.8888, -3.0072, -3.1907, -3.1457], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4875, device='cuda:0', dtype=torch.float64)
tensor([-2.0969, -2.8915, -2.9925, -3.1936, -3.1431], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7192, device='cuda:0', dtype=torch.float64)
tensor([-2.0629, -2.8755, -2.9600, -3.1984, -3.1343], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7303, device='cuda:0', dtype=torch.float64)
tensor([-1.9902, -2.8318, -2.9337, -3.2207, -3.1405], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7602, device='cuda:0', dtype=torch.float64)
tensor([-1.9478, -2.7805, -2.9169, -3.2450, -3.1682], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4327, device='cuda:0', dtype=torch.float64)
tensor([-1.9564, -2.7781, -2.8847, -3.2596, -3.2114], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5220, device='cuda:0', dtype=torch.float64)
tensor([-1.9647, -2.9044, -2.8406, -3.2614, -3.2194], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7547, device='cuda:0', dtype=torch.float64)
tensor([-2.0207, -3.0907, -2.7926, -3.2322, -3.2338], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7641, device='cuda:0', dtype=torch.float64)
tensor([-2.0928, -2.9078, -2.7543, -3.1971, -3.2644], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.3266, device='cuda:0', dtype=torch.float64)
tensor([-2.1418, -2.8580, -2.7207, -3.1852, -3.3013], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9869, device='cuda:0', dtype=torch.float64)
tensor([-2.1708, -2.8295, -2.7175, -3.1975, -3.3660], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5085, device='cuda:0', dtype=torch.float64)
tensor([-2.1470, -2.7956, -2.7577, -3.2095, -3.3923], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8793, device='cuda:0', dtype=torch.float64)
tensor([-2.0596, -2.7345, -2.8053, -3.1873, -3.3675], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6786, device='cuda:0', dtype=torch.float64)
tensor([-1.9461, -2.6761, -2.8477, -3.1702, -3.3054], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7418, device='cuda:0', dtype=torch.float64)
tensor([-1.8447, -2.6332, -2.9060, -3.2074, -3.2702], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8480, device='cuda:0', dtype=torch.float64)
tensor([-1.8152, -2.6391, -2.9367, -3.2207, -3.2819], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8637, device='cuda:0', dtype=torch.float64)
tensor([-1.8626, -2.6791, -2.9401, -3.2249, -3.3226], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0305, device='cuda:0', dtype=torch.float64)
tensor([-1.9571, -2.7254, -2.9365, -3.2390, -3.3820], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9335, device='cuda:0', dtype=torch.float64)
tensor([-2.0782, -2.7864, -2.9341, -3.2548, -3.4257], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9551, device='cuda:0', dtype=torch.float64)
tensor([-2.1631, -2.8462, -2.9590, -3.2482, -3.4263], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7877, device='cuda:0', dtype=torch.float64)
tensor([-2.2141, -2.9092, -2.9732, -3.2017, -3.3958], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7418, device='cuda:0', dtype=torch.float64)
tensor([-2.1809, -2.9300, -2.9305, -3.1701, -3.3345], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5586, device='cuda:0', dtype=torch.float64)
tensor([-2.1124, -2.9025, -2.9301, -3.1758, -3.2872], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9183, device='cuda:0', dtype=torch.float64)
tensor([-2.0539, -2.8485, -2.9581, -3.2115, -3.2721], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8253, device='cuda:0', dtype=torch.float64)
tensor([-2.0535, -2.7971, -2.9719, -3.2521, -3.2587], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8131, device='cuda:0', dtype=torch.float64)
tensor([-2.1028, -2.7872, -2.9647, -3.3351, -3.2742], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0197, device='cuda:0', dtype=torch.float64)
tensor([-2.1867, -2.7805, -2.9436, -3.4204, -3.2687], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0237, device='cuda:0', dtype=torch.float64)
tensor([-2.2701, -2.7943, -2.9061, -3.4362, -3.2754], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5977, device='cuda:0', dtype=torch.float64)
tensor([-2.2954, -2.7883, -2.8890, -3.4317, -3.2642], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3977, device='cuda:0', dtype=torch.float64)
tensor([-2.2663, -2.7663, -2.8988, -3.3719, -3.2287], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7831, device='cuda:0', dtype=torch.float64)
tensor([-2.2076, -2.7183, -2.9282, -3.3579, -3.1989], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3698, device='cuda:0', dtype=torch.float64)
tensor([-2.1117, -2.6671, -2.9721, -3.3565, -3.1701], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6345, device='cuda:0', dtype=torch.float64)
tensor([-1.9979, -2.6426, -3.0115, -3.3489, -3.1493], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5792, device='cuda:0', dtype=torch.float64)
tensor([-1.9169, -2.6423, -3.0608, -3.3380, -3.1372], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5799, device='cuda:0', dtype=torch.float64)
tensor([-1.8864, -2.6639, -3.0822, -3.3132, -3.1467], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7536, device='cuda:0', dtype=torch.float64)
tensor([-1.9170, -2.7152, -3.0624, -3.2596, -3.1543], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6049, device='cuda:0', dtype=torch.float64)
tensor([-1.9840, -2.7851, -3.0180, -3.1615, -3.1769], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8419, device='cuda:0', dtype=torch.float64)
tensor([-2.0689, -2.8696, -2.9716, -3.0987, -3.2467], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8207, device='cuda:0', dtype=torch.float64)
tensor([-2.1497, -2.9300, -2.9206, -3.1067, -3.3272], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5046, device='cuda:0', dtype=torch.float64)
tensor([-2.2102, -2.9534, -2.8852, -3.2017, -3.3836], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8271, device='cuda:0', dtype=torch.float64)
tensor([-2.1951, -2.9312, -2.8471, -3.3224, -3.3636], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7448, device='cuda:0', dtype=torch.float64)
tensor([-2.1313, -2.8866, -2.8183, -3.4341, -3.2952], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7119, device='cuda:0', dtype=torch.float64)
tensor([-2.0351, -2.8296, -2.8138, -3.5462, -3.2023], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5120, device='cuda:0', dtype=torch.float64)
tensor([-2.0023, -2.8039, -2.8111, -3.5999, -3.1522], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6738, device='cuda:0', dtype=torch.float64)
tensor([-2.0012, -2.7792, -2.8198, -3.5700, -3.1270], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1441, device='cuda:0', dtype=torch.float64)
tensor([-2.0853, -2.7613, -2.8376, -3.4875, -3.1566], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6541, device='cuda:0', dtype=torch.float64)
tensor([-2.1704, -2.7634, -2.8626, -3.4234, -3.1792], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6379, device='cuda:0', dtype=torch.float64)
tensor([-2.2169, -2.7933, -2.8848, -3.3404, -3.1915], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6156, device='cuda:0', dtype=torch.float64)
tensor([-2.2785, -2.8516, -2.8900, -3.2594, -3.2148], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9819, device='cuda:0', dtype=torch.float64)
tensor([-2.3378, -2.9340, -2.8868, -3.1722, -3.2189], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5150, device='cuda:0', dtype=torch.float64)
tensor([-2.3490, -2.9796, -2.8872, -3.1604, -3.2225], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0432, device='cuda:0', dtype=torch.float64)
tensor([-2.2868, -2.9909, -2.8920, -3.2488, -3.2417], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8391, device='cuda:0', dtype=torch.float64)
tensor([-2.1716, -2.9534, -2.9114, -3.2605, -3.2484], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4154, device='cuda:0', dtype=torch.float64)
tensor([-2.0715, -2.9171, -2.9337, -3.2658, -3.2739], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7592, device='cuda:0', dtype=torch.float64)
tensor([-1.9972, -2.8908, -2.9559, -3.2176, -3.3022], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.4246, device='cuda:0', dtype=torch.float64)
tensor([-1.9694, -2.9005, -2.9560, -3.1358, -3.3238], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8047, device='cuda:0', dtype=torch.float64)
tensor([-1.9561, -2.9128, -2.9533, -3.1017, -3.3214], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3966, device='cuda:0', dtype=torch.float64)
tensor([-2.0063, -2.9305, -2.9533, -3.0683, -3.3641], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9362, device='cuda:0', dtype=torch.float64)
tensor([-2.0692, -2.9203, -2.9572, -3.0803, -3.4284], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5129, device='cuda:0', dtype=torch.float64)
tensor([-2.1142, -2.8604, -2.9748, -3.1390, -3.4992], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7669, device='cuda:0', dtype=torch.float64)
tensor([-2.1380, -2.7943, -2.9913, -3.2411, -3.5328], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5670, device='cuda:0', dtype=torch.float64)
tensor([-2.1183, -2.7377, -3.0049, -3.3811, -3.5294], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9309, device='cuda:0', dtype=torch.float64)
tensor([-2.0725, -2.6742, -2.9983, -3.5326, -3.4796], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.6304, device='cuda:0', dtype=torch.float64)
tensor([-2.0289, -2.6494, -2.9591, -3.6039, -3.4028], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8857, device='cuda:0', dtype=torch.float64)
tensor([-2.0422, -2.6833, -2.8946, -3.6583, -3.3447], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8532, device='cuda:0', dtype=torch.float64)
tensor([-2.0736, -2.7283, -2.8331, -3.6339, -3.3112], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1662, device='cuda:0', dtype=torch.float64)
tensor([-2.1289, -2.7963, -2.7725, -3.5667, -3.3246], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.3000, device='cuda:0', dtype=torch.float64)
tensor([-2.2182, -2.9141, -2.7324, -3.4710, -3.3807], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8241, device='cuda:0', dtype=torch.float64)
tensor([-2.2372, -2.9975, -2.7237, -3.3407, -3.3970], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6095, device='cuda:0', dtype=torch.float64)
tensor([-2.1854, -3.0016, -2.7559, -3.2099, -3.3772], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6064, device='cuda:0', dtype=torch.float64)
tensor([-2.1171, -2.9741, -2.8222, -3.1468, -3.3771], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9466, device='cuda:0', dtype=torch.float64)
tensor([-2.0585, -2.9246, -2.9165, -3.1510, -3.4525], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7347, device='cuda:0', dtype=torch.float64)
tensor([-2.0280, -2.8630, -2.9944, -3.1743, -3.4009], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6894, device='cuda:0', dtype=torch.float64)
tensor([-2.0452, -2.8255, -3.0166, -3.1961, -3.2797], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9157, device='cuda:0', dtype=torch.float64)
tensor([-2.1353, -2.7610, -3.0174, -3.1879, -3.2908], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9583, device='cuda:0', dtype=torch.float64)
tensor([-2.2701, -2.7420, -2.9969, -3.1506, -3.3519], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6097, device='cuda:0', dtype=torch.float64)
tensor([-2.3800, -2.7378, -2.9962, -3.1092, -3.4026], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6683, device='cuda:0', dtype=torch.float64)
tensor([-2.4482, -2.7525, -2.9928, -3.0760, -3.4237], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0481, device='cuda:0', dtype=torch.float64)
tensor([-2.3949, -2.7327, -3.0170, -3.1205, -3.4011], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2453, device='cuda:0', dtype=torch.float64)
tensor([-2.2558, -2.6998, -3.0422, -3.2042, -3.3480], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7885, device='cuda:0', dtype=torch.float64)
tensor([-2.0818, -2.6637, -3.0780, -3.3295, -3.2970], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1139, device='cuda:0', dtype=torch.float64)
tensor([-1.9386, -2.6617, -3.1136, -3.4653, -3.3039], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.2288, device='cuda:0', dtype=torch.float64)
tensor([-1.8614, -2.7143, -3.1496, -3.5140, -3.2439], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9337, device='cuda:0', dtype=torch.float64)
tensor([-1.8663, -2.8317, -3.1538, -3.4472, -3.2137], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6156, device='cuda:0', dtype=torch.float64)
tensor([-1.9454, -2.8989, -3.1346, -3.3562, -3.2599], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0264, device='cuda:0', dtype=torch.float64)
tensor([-2.0571, -2.9919, -3.1217, -3.3312, -3.3453], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5786, device='cuda:0', dtype=torch.float64)
tensor([-2.1472, -3.0729, -3.1077, -3.3325, -3.3958], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0930, device='cuda:0', dtype=torch.float64)
tensor([-2.2077, -3.1140, -3.0820, -3.3287, -3.4246], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4982, device='cuda:0', dtype=torch.float64)
tensor([-2.2485, -3.1389, -3.0291, -3.3410, -3.4299], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6942, device='cuda:0', dtype=torch.float64)
tensor([-2.2588, -3.1346, -2.9699, -3.3953, -3.4388], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7062, device='cuda:0', dtype=torch.float64)
tensor([-2.2239, -3.0698, -2.9360, -3.4900, -3.4191], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6273, device='cuda:0', dtype=torch.float64)
tensor([-2.1551, -2.9778, -2.9304, -3.5873, -3.3949], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6120, device='cuda:0', dtype=torch.float64)
tensor([-2.1072, -2.9064, -2.9144, -3.6414, -3.3695], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0236, device='cuda:0', dtype=torch.float64)
tensor([-2.0813, -2.8945, -2.8888, -3.6263, -3.3775], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5296, device='cuda:0', dtype=torch.float64)
tensor([-2.1034, -2.9084, -2.8825, -3.5676, -3.4061], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.2509, device='cuda:0', dtype=torch.float64)
tensor([-2.1582, -2.7857, -2.9050, -3.4880, -3.4354], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8452, device='cuda:0', dtype=torch.float64)
tensor([-2.2279, -2.7598, -2.9542, -3.4197, -3.5078], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6983, device='cuda:0', dtype=torch.float64)
tensor([-2.2650, -2.7672, -2.9979, -3.3755, -3.5838], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4521, device='cuda:0', dtype=torch.float64)
tensor([-2.2654, -2.8012, -3.0311, -3.3400, -3.6257], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0307, device='cuda:0', dtype=torch.float64)
tensor([-2.2777, -2.8541, -3.0404, -3.3048, -3.6291], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6483, device='cuda:0', dtype=torch.float64)
tensor([-2.2571, -2.8939, -3.0240, -3.2800, -3.5567], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7588, device='cuda:0', dtype=torch.float64)
tensor([-2.2292, -2.9210, -3.0038, -3.2514, -3.4986], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9213, device='cuda:0', dtype=torch.float64)
tensor([-2.2162, -2.9476, -2.9651, -3.2174, -3.4468], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7938, device='cuda:0', dtype=torch.float64)
tensor([-2.2240, -2.9836, -2.9198, -3.1991, -3.3856], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9125, device='cuda:0', dtype=torch.float64)
tensor([-2.2133, -3.0014, -2.9092, -3.1883, -3.3560], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.2039, device='cuda:0', dtype=torch.float64)
tensor([-2.2076, -3.0004, -2.9188, -3.1820, -3.3587], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8634, device='cuda:0', dtype=torch.float64)
tensor([-2.1741, -2.9511, -2.9597, -3.1976, -3.3312], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8626, device='cuda:0', dtype=torch.float64)
tensor([-2.1235, -2.8879, -3.1778, -3.2175, -3.2910], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0876, device='cuda:0', dtype=torch.float64)
tensor([-2.0499, -2.8335, -3.3983, -3.4131, -3.2537], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.2640, device='cuda:0', dtype=torch.float64)
tensor([-2.0343, -2.7837, -3.1475, -4.0199, -3.2553], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.7517, device='cuda:0', dtype=torch.float64)
tensor([-2.0080, -2.7676, -3.0971, -3.2452, -3.2504], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8777, device='cuda:0', dtype=torch.float64)
tensor([-1.9732, -2.7289, -3.1481, -3.2533, -3.2773], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6407, device='cuda:0', dtype=torch.float64)
tensor([-1.9521, -2.6922, -3.2158, -3.3066, -3.3616], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6954, device='cuda:0', dtype=torch.float64)
tensor([-1.9838, -2.6933, -3.2748, -3.3562, -3.5643], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9153, device='cuda:0', dtype=torch.float64)
tensor([-2.0431, -2.7722, -3.2697, -3.3705, -3.5686], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9295, device='cuda:0', dtype=torch.float64)
tensor([-2.0745, -2.8209, -3.2206, -3.3806, -3.5150], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7430, device='cuda:0', dtype=torch.float64)
tensor([-2.1290, -2.9014, -3.1541, -3.3725, -3.5209], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6505, device='cuda:0', dtype=torch.float64)
tensor([-2.1866, -3.0113, -3.1057, -3.3578, -3.5231], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9678, device='cuda:0', dtype=torch.float64)
tensor([-2.2504, -3.0983, -3.0473, -3.2732, -3.5009], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4615, device='cuda:0', dtype=torch.float64)
tensor([-2.2927, -3.1290, -2.9998, -3.2196, -3.4347], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0961, device='cuda:0', dtype=torch.float64)
tensor([-2.2556, -3.1379, -2.9589, -3.2089, -3.3284], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6630, device='cuda:0', dtype=torch.float64)
tensor([-2.2439, -3.1438, -2.9379, -3.2392, -3.2569], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8129, device='cuda:0', dtype=torch.float64)
tensor([-2.1983, -3.1294, -2.9448, -3.3087, -3.1715], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1419, device='cuda:0', dtype=torch.float64)
tensor([-2.1794, -3.0825, -2.9250, -3.3517, -3.0541], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8243, device='cuda:0', dtype=torch.float64)
tensor([-2.1796, -3.0442, -2.9019, -3.3818, -3.0166], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8370, device='cuda:0', dtype=torch.float64)
tensor([-2.1879, -3.0036, -2.9068, -3.4221, -3.0513], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.5351, device='cuda:0', dtype=torch.float64)
tensor([-2.2175, -3.0259, -3.1225, -3.4623, -3.1150], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0667, device='cuda:0', dtype=torch.float64)
tensor([-2.2742, -3.3552, -2.9804, -3.4551, -3.2367], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.4010, device='cuda:0', dtype=torch.float64)
tensor([-2.3477, -2.9901, -2.8983, -3.4903, -3.4112], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0442, device='cuda:0', dtype=torch.float64)
tensor([-2.4277, -2.9814, -2.9220, -3.5469, -3.5813], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1161, device='cuda:0', dtype=torch.float64)
tensor([-2.4511, -2.9676, -2.9377, -3.5113, -3.6685], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0186, device='cuda:0', dtype=torch.float64)
tensor([-2.4484, -2.9311, -2.9116, -3.4105, -3.6743], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9374, device='cuda:0', dtype=torch.float64)
tensor([-2.4195, -2.8729, -2.8639, -3.2965, -3.5824], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6509, device='cuda:0', dtype=torch.float64)
tensor([-2.4407, -2.8314, -2.8419, -3.2567, -3.5101], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0913, device='cuda:0', dtype=torch.float64)
tensor([-2.4413, -2.8082, -2.8458, -3.2772, -3.4586], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0017, device='cuda:0', dtype=torch.float64)
tensor([-2.4793, -2.8033, -2.8938, -3.3269, -3.4342], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0284, device='cuda:0', dtype=torch.float64)
tensor([-2.4228, -2.7797, -2.9762, -3.4147, -3.4089], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0537, device='cuda:0', dtype=torch.float64)
tensor([-2.2720, -2.7652, -3.0483, -3.4574, -3.3885], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5364, device='cuda:0', dtype=torch.float64)
tensor([-2.1201, -2.7627, -3.1216, -3.4865, -3.3859], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5139, device='cuda:0', dtype=torch.float64)
tensor([-2.0613, -2.7980, -3.1720, -3.5506, -3.4031], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4748, device='cuda:0', dtype=torch.float64)
tensor([-2.0381, -2.8359, -3.1844, -3.5203, -3.4054], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7231, device='cuda:0', dtype=torch.float64)
tensor([-2.0332, -2.8994, -3.1514, -3.4230, -3.4204], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8450, device='cuda:0', dtype=torch.float64)
tensor([-2.0627, -2.9664, -3.1166, -3.3037, -3.4390], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9857, device='cuda:0', dtype=torch.float64)
tensor([-2.1556, -3.0441, -3.0888, -3.2657, -3.5143], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7165, device='cuda:0', dtype=torch.float64)
tensor([-2.2391, -3.1490, -3.0979, -3.3548, -3.5945], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6844, device='cuda:0', dtype=torch.float64)
tensor([-2.2931, -3.2398, -3.1043, -3.5081, -3.6398], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5523, device='cuda:0', dtype=torch.float64)
tensor([-2.2670, -3.2453, -3.1125, -3.5998, -3.6061], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4505, device='cuda:0', dtype=torch.float64)
tensor([-2.1872, -3.1918, -3.1182, -3.6332, -3.5344], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4051, device='cuda:0', dtype=torch.float64)
tensor([-2.0977, -3.0489, -3.1171, -3.6228, -3.4362], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7458, device='cuda:0', dtype=torch.float64)
tensor([-1.9939, -2.9049, -3.1329, -3.5886, -3.3214], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0604, device='cuda:0', dtype=torch.float64)
tensor([-1.9581, -2.7969, -3.1241, -3.5707, -3.2787], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0387, device='cuda:0', dtype=torch.float64)
tensor([-1.9990, -2.7122, -3.1215, -3.5354, -3.2776], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9897, device='cuda:0', dtype=torch.float64)
tensor([-2.0806, -2.7012, -3.1239, -3.4397, -3.3115], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7257, device='cuda:0', dtype=torch.float64)
tensor([-2.1937, -2.7077, -3.1158, -3.3533, -3.3475], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0429, device='cuda:0', dtype=torch.float64)
tensor([-2.2563, -2.6928, -3.0894, -3.2690, -3.3656], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0111, device='cuda:0', dtype=torch.float64)
tensor([-2.3237, -2.6991, -3.0659, -3.2092, -3.3648], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5245, device='cuda:0', dtype=torch.float64)
tensor([-2.4159, -2.7495, -3.0197, -3.1766, -3.3940], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8590, device='cuda:0', dtype=torch.float64)
tensor([-2.4597, -2.7900, -3.0096, -3.2096, -3.4741], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.3418, device='cuda:0', dtype=torch.float64)
tensor([-2.4325, -2.8332, -3.0021, -3.2768, -3.5784], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8203, device='cuda:0', dtype=torch.float64)
tensor([-2.3704, -2.8565, -3.0209, -3.3413, -3.6173], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1317, device='cuda:0', dtype=torch.float64)
tensor([-2.2965, -2.8729, -3.0486, -3.5051, -3.6250], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8182, device='cuda:0', dtype=torch.float64)
tensor([-2.1587, -2.8686, -3.0650, -3.5717, -3.5559], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9538, device='cuda:0', dtype=torch.float64)
tensor([-2.0181, -2.8130, -3.0574, -3.5771, -3.4572], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9043, device='cuda:0', dtype=torch.float64)
tensor([-1.9343, -2.8235, -3.0375, -3.6126, -3.4695], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5675, device='cuda:0', dtype=torch.float64)
tensor([-1.9296, -2.8607, -3.0062, -3.6546, -3.4356], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0344, device='cuda:0', dtype=torch.float64)
tensor([-2.0021, -2.8820, -2.9744, -3.5267, -3.3712], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9472, device='cuda:0', dtype=torch.float64)
tensor([-2.1070, -2.9144, -2.9612, -3.3671, -3.3398], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6425, device='cuda:0', dtype=torch.float64)
tensor([-2.2791, -2.9711, -2.9761, -3.3367, -3.3933], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4686, device='cuda:0', dtype=torch.float64)
tensor([-2.4639, -3.0339, -3.0049, -3.3984, -3.4797], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3542, device='cuda:0', dtype=torch.float64)
tensor([-2.6043, -3.0585, -3.0299, -3.4508, -3.5285], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7349, device='cuda:0', dtype=torch.float64)
tensor([-2.6257, -3.0386, -3.0538, -3.4945, -3.4977], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9853, device='cuda:0', dtype=torch.float64)
tensor([-2.5878, -3.0155, -3.1116, -3.5653, -3.4220], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0047, device='cuda:0', dtype=torch.float64)
tensor([-2.5166, -2.9928, -3.1646, -3.5942, -3.3446], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7449, device='cuda:0', dtype=torch.float64)
tensor([-2.4749, -2.9897, -3.1763, -3.5444, -3.2888], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7749, device='cuda:0', dtype=torch.float64)
tensor([-2.4477, -2.9935, -3.1498, -3.4728, -3.2607], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8806, device='cuda:0', dtype=torch.float64)
tensor([-2.3968, -2.9760, -3.1136, -3.4383, -3.2405], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.3504, device='cuda:0', dtype=torch.float64)
tensor([-2.3035, -2.9431, -3.0943, -3.4778, -3.2724], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6913, device='cuda:0', dtype=torch.float64)
tensor([-2.2239, -2.9086, -3.0965, -3.5161, -3.3080], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1537, device='cuda:0', dtype=torch.float64)
tensor([-2.1864, -2.9039, -3.0705, -3.5684, -3.3353], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1764, device='cuda:0', dtype=torch.float64)
tensor([-2.1787, -2.9115, -3.0200, -3.5124, -3.3622], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9004, device='cuda:0', dtype=torch.float64)
tensor([-2.1403, -2.9118, -2.9627, -3.3659, -3.3770], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8164, device='cuda:0', dtype=torch.float64)
tensor([-2.1210, -2.9532, -2.9231, -3.2744, -3.4136], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7517, device='cuda:0', dtype=torch.float64)
tensor([-2.1453, -3.0163, -2.9041, -3.2431, -3.5362], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7915, device='cuda:0', dtype=torch.float64)
tensor([-2.2437, -3.0847, -2.9153, -3.2701, -3.7116], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0234, device='cuda:0', dtype=torch.float64)
tensor([-2.3625, -3.1340, -2.9233, -3.2076, -3.7597], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.2530, device='cuda:0', dtype=torch.float64)
tensor([-2.4460, -3.1655, -2.9711, -3.2225, -3.8020], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9833, device='cuda:0', dtype=torch.float64)
tensor([-2.5311, -3.1788, -3.0345, -3.4059, -3.9337], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7511, device='cuda:0', dtype=torch.float64)
tensor([-2.5326, -3.1630, -3.1067, -3.6676, -4.0066], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9811, device='cuda:0', dtype=torch.float64)
tensor([-2.3911, -3.0805, -3.1530, -3.8220, -3.9233], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8583, device='cuda:0', dtype=torch.float64)
tensor([-2.2258, -2.9750, -3.1776, -3.9059, -3.8276], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7972, device='cuda:0', dtype=torch.float64)
tensor([-2.1098, -2.8908, -3.1920, -3.9737, -3.7552], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9128, device='cuda:0', dtype=torch.float64)
tensor([-2.0735, -2.9193, -3.1693, -3.9823, -3.7331], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3982, device='cuda:0', dtype=torch.float64)
tensor([-2.1165, -3.1040, -3.1373, -3.9390, -3.8001], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9887, device='cuda:0', dtype=torch.float64)
tensor([-2.1988, -2.9876, -3.0982, -3.8682, -3.8648], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1264, device='cuda:0', dtype=torch.float64)
tensor([-2.3411, -2.8703, -3.0813, -3.6644, -3.8348], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7380, device='cuda:0', dtype=torch.float64)
tensor([-2.4430, -2.9065, -3.0858, -3.5431, -3.8474], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9895, device='cuda:0', dtype=torch.float64)
tensor([-2.5189, -2.9590, -3.0822, -3.4777, -3.8812], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7969, device='cuda:0', dtype=torch.float64)
tensor([-2.5234, -2.9778, -3.0869, -3.4603, -3.8535], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7555, device='cuda:0', dtype=torch.float64)
tensor([-2.5138, -2.9987, -3.0957, -3.4389, -3.7923], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1256, device='cuda:0', dtype=torch.float64)
tensor([-2.4465, -3.0220, -3.0891, -3.4514, -3.6564], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9400, device='cuda:0', dtype=torch.float64)
tensor([-2.3944, -3.0124, -3.0997, -3.4784, -3.5144], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6246, device='cuda:0', dtype=torch.float64)
tensor([-2.3781, -3.0096, -3.1059, -3.5267, -3.3873], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6066, device='cuda:0', dtype=torch.float64)
tensor([-2.3762, -3.0049, -3.1385, -3.5921, -3.3089], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8737, device='cuda:0', dtype=torch.float64)
tensor([-2.3019, -2.9650, -3.1831, -3.6562, -3.2472], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7457, device='cuda:0', dtype=torch.float64)
tensor([-2.2512, -2.9368, -3.2206, -3.6667, -3.2366], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4893, device='cuda:0', dtype=torch.float64)
tensor([-2.2290, -2.9455, -3.2489, -3.6515, -3.2539], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6026, device='cuda:0', dtype=torch.float64)
tensor([-2.2249, -2.9959, -3.2788, -3.6287, -3.3291], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5693, device='cuda:0', dtype=torch.float64)
tensor([-2.2644, -3.0492, -3.2851, -3.5719, -3.4267], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8554, device='cuda:0', dtype=torch.float64)
tensor([-2.3104, -3.1460, -3.2558, -3.4632, -3.5247], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9434, device='cuda:0', dtype=torch.float64)
tensor([-2.3703, -3.1599, -3.2580, -3.3455, -3.6002], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7926, device='cuda:0', dtype=torch.float64)
tensor([-2.4289, -3.1987, -3.2514, -3.2682, -3.6318], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9330, device='cuda:0', dtype=torch.float64)
tensor([-2.4550, -3.2385, -3.2685, -3.2531, -3.6598], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6117, device='cuda:0', dtype=torch.float64)
tensor([-2.4785, -3.2942, -3.2725, -3.3101, -3.6940], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9499, device='cuda:0', dtype=torch.float64)
tensor([-2.5312, -3.3414, -3.2450, -3.2832, -3.7124], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.4023, device='cuda:0', dtype=torch.float64)
tensor([-2.5044, -3.3000, -3.2283, -3.2048, -3.6359], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8709, device='cuda:0', dtype=torch.float64)
tensor([-2.4423, -3.2239, -3.2312, -3.2355, -3.5188], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6347, device='cuda:0', dtype=torch.float64)
tensor([-2.3664, -3.1519, -3.2332, -3.3424, -3.4328], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7784, device='cuda:0', dtype=torch.float64)
tensor([-2.3349, -3.1659, -3.2271, -3.2532, -3.3920], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5892, device='cuda:0', dtype=torch.float64)
tensor([-2.2957, -3.1930, -3.2216, -3.2605, -3.3961], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9914, device='cuda:0', dtype=torch.float64)
tensor([-2.2764, -3.2194, -3.1971, -3.3336, -3.4129], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8104, device='cuda:0', dtype=torch.float64)
tensor([-2.3005, -3.2943, -3.1517, -3.4153, -3.4511], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.3118, device='cuda:0', dtype=torch.float64)
tensor([-2.3604, -3.3799, -3.0956, -3.4874, -3.5301], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9487, device='cuda:0', dtype=torch.float64)
tensor([-2.4207, -3.3308, -3.0510, -3.5684, -3.5962], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6446, device='cuda:0', dtype=torch.float64)
tensor([-2.4416, -3.2672, -3.0450, -3.6183, -3.6247], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8984, device='cuda:0', dtype=torch.float64)
tensor([-2.4536, -3.2087, -3.0303, -3.6236, -3.6791], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8493, device='cuda:0', dtype=torch.float64)
tensor([-2.4595, -3.1983, -3.0199, -3.6561, -3.6800], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8189, device='cuda:0', dtype=torch.float64)
tensor([-2.4324, -3.1945, -3.0246, -3.6902, -3.6537], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7305, device='cuda:0', dtype=torch.float64)
tensor([-2.3576, -3.1655, -3.0433, -3.7342, -3.5912], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6895, device='cuda:0', dtype=torch.float64)
tensor([-2.2892, -3.1445, -3.0636, -3.7675, -3.5472], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8061, device='cuda:0', dtype=torch.float64)
tensor([-2.2605, -3.1231, -3.0846, -3.7639, -3.5752], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5005, device='cuda:0', dtype=torch.float64)
tensor([-2.2464, -3.1118, -3.1173, -3.7098, -3.6305], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7331, device='cuda:0', dtype=torch.float64)
tensor([-2.2713, -3.1231, -3.1206, -3.6613, -3.6848], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8506, device='cuda:0', dtype=torch.float64)
tensor([-2.2836, -3.1278, -3.1562, -3.6241, -3.7128], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8705, device='cuda:0', dtype=torch.float64)
tensor([-2.3017, -3.1404, -3.1801, -3.6083, -3.6985], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6850, device='cuda:0', dtype=torch.float64)
tensor([-2.3439, -3.1604, -3.1842, -3.6029, -3.6400], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7580, device='cuda:0', dtype=torch.float64)
tensor([-2.4292, -3.1543, -3.1957, -3.6408, -3.5478], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3270, device='cuda:0', dtype=torch.float64)
tensor([-2.5319, -3.1138, -3.2244, -3.6949, -3.4313], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9484, device='cuda:0', dtype=torch.float64)
tensor([-2.6746, -3.0518, -3.2777, -3.7562, -3.3522], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0104, device='cuda:0', dtype=torch.float64)
tensor([-2.8544, -3.0239, -3.3341, -3.7826, -3.3134], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9328, device='cuda:0', dtype=torch.float64)
tensor([-2.8792, -2.9931, -3.4020, -3.8219, -3.3158], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.2842, device='cuda:0', dtype=torch.float64)
tensor([-2.6884, -2.9535, -3.4586, -3.8274, -3.3436], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4421, device='cuda:0', dtype=torch.float64)
tensor([-2.5074, -2.9366, -3.5119, -3.8511, -3.3773], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8706, device='cuda:0', dtype=torch.float64)
tensor([-2.3971, -2.8993, -3.5154, -3.8183, -3.3635], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1783, device='cuda:0', dtype=torch.float64)
tensor([-2.3577, -2.9003, -3.5124, -3.8218, -3.3806], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0776, device='cuda:0', dtype=torch.float64)
tensor([-2.3663, -2.9687, -3.4529, -3.7717, -3.3775], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6308, device='cuda:0', dtype=torch.float64)
tensor([-2.4334, -3.0962, -3.3476, -3.7102, -3.3778], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.2071, device='cuda:0', dtype=torch.float64)
tensor([-2.4625, -3.2690, -3.2257, -3.6481, -3.4312], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7886, device='cuda:0', dtype=torch.float64)
tensor([-2.4972, -3.4364, -3.1333, -3.5663, -3.5112], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6000, device='cuda:0', dtype=torch.float64)
tensor([-2.5854, -3.5359, -3.0699, -3.5020, -3.6167], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4971, device='cuda:0', dtype=torch.float64)
tensor([-2.6514, -3.6144, -3.0168, -3.5034, -3.7527], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9208, device='cuda:0', dtype=torch.float64)
tensor([-2.6609, -3.5929, -2.9975, -3.4880, -3.8419], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8231, device='cuda:0', dtype=torch.float64)
tensor([-2.6107, -3.5559, -3.0209, -3.5762, -3.8486], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7609, device='cuda:0', dtype=torch.float64)
tensor([-2.4308, -3.4829, -3.0641, -3.6253, -3.7775], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9968, device='cuda:0', dtype=torch.float64)
tensor([-2.2541, -3.3514, -3.1629, -3.5953, -3.7056], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4090, device='cuda:0', dtype=torch.float64)
tensor([-2.0908, -3.2347, -3.2758, -3.6223, -3.6505], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7716, device='cuda:0', dtype=torch.float64)
tensor([-2.0382, -3.1686, -3.3622, -3.6792, -3.6337], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7161, device='cuda:0', dtype=torch.float64)
tensor([-2.0727, -3.1412, -3.4187, -3.7467, -3.6642], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5428, device='cuda:0', dtype=torch.float64)
tensor([-2.1268, -3.1319, -3.4455, -3.7816, -3.7352], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9732, device='cuda:0', dtype=torch.float64)
tensor([-2.2536, -3.1313, -3.4339, -3.8395, -3.8632], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7325, device='cuda:0', dtype=torch.float64)
tensor([-2.4401, -3.1652, -3.4367, -3.9218, -3.9989], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6032, device='cuda:0', dtype=torch.float64)
tensor([-2.5979, -3.2438, -3.4416, -3.9329, -4.1206], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6383, device='cuda:0', dtype=torch.float64)
tensor([-2.7130, -3.2998, -3.4559, -3.9119, -4.2300], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6882, device='cuda:0', dtype=torch.float64)
tensor([-2.7647, -3.2340, -3.4573, -3.8463, -4.3020], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5584, device='cuda:0', dtype=torch.float64)
tensor([-2.7393, -3.1419, -3.4647, -3.7603, -4.3060], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0571, device='cuda:0', dtype=torch.float64)
tensor([-2.6373, -3.0516, -3.4144, -3.6596, -4.1925], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6657, device='cuda:0', dtype=torch.float64)
tensor([-2.5240, -2.9739, -3.3695, -3.5650, -4.0690], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4823, device='cuda:0', dtype=torch.float64)
tensor([-2.3928, -2.8975, -3.3456, -3.4849, -3.9300], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5277, device='cuda:0', dtype=torch.float64)
tensor([-2.2903, -2.8620, -3.3231, -3.4152, -3.7728], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5457, device='cuda:0', dtype=torch.float64)
tensor([-2.2441, -2.8604, -3.3111, -3.3967, -3.6101], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8487, device='cuda:0', dtype=torch.float64)
tensor([-2.2521, -2.8706, -3.3110, -3.3814, -3.4882], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4025, device='cuda:0', dtype=torch.float64)
tensor([-2.3153, -2.9158, -3.2931, -3.3617, -3.4122], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6152, device='cuda:0', dtype=torch.float64)
tensor([-2.4071, -2.9925, -3.2686, -3.3272, -3.3479], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5802, device='cuda:0', dtype=torch.float64)
tensor([-2.5399, -3.0802, -3.2326, -3.2721, -3.3141], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1437, device='cuda:0', dtype=torch.float64)
tensor([-2.6401, -3.2028, -3.2044, -3.2898, -3.2966], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8276, device='cuda:0', dtype=torch.float64)
tensor([-2.6877, -3.3522, -3.2003, -3.7282, -3.3425], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8908, device='cuda:0', dtype=torch.float64)
tensor([-2.7543, -3.3900, -3.2078, -3.5657, -3.3960], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0314, device='cuda:0', dtype=torch.float64)
tensor([-2.7874, -3.4234, -3.2414, -3.3559, -3.4537], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7149, device='cuda:0', dtype=torch.float64)
tensor([-2.8230, -3.4941, -3.2837, -3.3079, -3.5733], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7019, device='cuda:0', dtype=torch.float64)
tensor([-2.8508, -3.5849, -3.3275, -3.3376, -3.7263], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8707, device='cuda:0', dtype=torch.float64)
tensor([-2.8450, -3.6870, -3.3399, -3.3688, -3.8396], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9953, device='cuda:0', dtype=torch.float64)
tensor([-2.8150, -3.7990, -3.3337, -3.3962, -3.8745], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8935, device='cuda:0', dtype=torch.float64)
tensor([-2.7896, -3.8040, -3.3075, -3.4311, -3.8000], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7415, device='cuda:0', dtype=torch.float64)
tensor([-2.7402, -3.6538, -3.2900, -3.4821, -3.7186], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9583, device='cuda:0', dtype=torch.float64)
tensor([-2.7174, -3.4794, -3.2848, -3.5478, -3.6875], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9893, device='cuda:0', dtype=torch.float64)
tensor([-2.7118, -3.4207, -3.3311, -3.6643, -3.6828], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1262, device='cuda:0', dtype=torch.float64)
tensor([-2.7151, -3.3612, -3.3884, -3.8517, -3.8040], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8180, device='cuda:0', dtype=torch.float64)
tensor([-2.6810, -3.3133, -3.4463, -4.0188, -4.1816], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6759, device='cuda:0', dtype=torch.float64)
tensor([-2.6004, -3.2204, -3.5060, -4.1565, -3.8756], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6794, device='cuda:0', dtype=torch.float64)
tensor([-2.5539, -3.1495, -3.4952, -4.2036, -3.7351], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7657, device='cuda:0', dtype=torch.float64)
tensor([-2.5004, -3.1069, -3.5035, -4.1716, -3.6800], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7220, device='cuda:0', dtype=torch.float64)
tensor([-2.4444, -3.0971, -3.5328, -4.0926, -3.6337], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6418, device='cuda:0', dtype=torch.float64)
tensor([-2.3964, -3.2692, -3.5618, -4.0588, -3.6226], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7357, device='cuda:0', dtype=torch.float64)
tensor([-2.3875, -3.2116, -3.5932, -4.0474, -3.6492], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4753, device='cuda:0', dtype=torch.float64)
tensor([-2.4419, -3.1365, -3.5989, -3.9718, -3.7076], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8532, device='cuda:0', dtype=torch.float64)
tensor([-2.4908, -3.1169, -3.5837, -3.8678, -3.7535], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5787, device='cuda:0', dtype=torch.float64)
tensor([-2.5491, -3.1585, -3.5553, -3.7343, -3.7978], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9314, device='cuda:0', dtype=torch.float64)
tensor([-2.6440, -3.2162, -3.5501, -3.6152, -3.8709], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4373, device='cuda:0', dtype=torch.float64)
tensor([-2.7510, -3.2985, -3.5601, -3.5125, -3.9835], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8469, device='cuda:0', dtype=torch.float64)
tensor([-2.7621, -3.3577, -3.5205, -3.4708, -4.1202], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8244, device='cuda:0', dtype=torch.float64)
tensor([-2.8403, -3.4465, -3.4807, -3.4582, -4.2748], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8424, device='cuda:0', dtype=torch.float64)
tensor([-2.8835, -3.5631, -3.4384, -3.4703, -4.3457], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9877, device='cuda:0', dtype=torch.float64)
tensor([-2.9064, -3.6519, -3.3596, -3.4713, -4.2779], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9185, device='cuda:0', dtype=torch.float64)
tensor([-2.8824, -3.6516, -3.2991, -3.5043, -4.1614], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6205, device='cuda:0', dtype=torch.float64)
tensor([-2.8740, -3.6169, -3.2653, -3.6313, -4.0740], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5271, device='cuda:0', dtype=torch.float64)
tensor([-2.8239, -3.6001, -3.2552, -3.8768, -3.9880], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7692, device='cuda:0', dtype=torch.float64)
tensor([-2.7368, -3.5362, -3.2938, -4.0061, -3.9383], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8721, device='cuda:0', dtype=torch.float64)
tensor([-2.6255, -3.4215, -3.3778, -3.9725, -3.9021], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5777, device='cuda:0', dtype=torch.float64)
tensor([-2.5638, -3.3426, -3.5132, -3.9801, -3.9227], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8744, device='cuda:0', dtype=torch.float64)
tensor([-2.4894, -3.2370, -3.6587, -3.9973, -3.8910], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9456, device='cuda:0', dtype=torch.float64)
tensor([-2.4968, -3.2007, -3.8119, -4.0593, -3.8969], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9787, device='cuda:0', dtype=torch.float64)
tensor([-2.5240, -3.2113, -3.9010, -4.1126, -3.9287], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8906, device='cuda:0', dtype=torch.float64)
tensor([-2.5617, -3.2454, -3.9314, -4.1507, -3.9886], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8674, device='cuda:0', dtype=torch.float64)
tensor([-2.5971, -3.2698, -3.9343, -4.0848, -3.9984], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9162, device='cuda:0', dtype=torch.float64)
tensor([-2.6858, -3.2879, -3.8685, -3.9988, -3.9839], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0478, device='cuda:0', dtype=torch.float64)
tensor([-2.8235, -3.3279, -3.7840, -3.9077, -3.9589], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8754, device='cuda:0', dtype=torch.float64)
tensor([-2.8102, -3.3813, -3.7202, -3.8546, -4.0006], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0058, device='cuda:0', dtype=torch.float64)
tensor([-2.8286, -3.4777, -3.6731, -3.8180, -4.0552], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6904, device='cuda:0', dtype=torch.float64)
tensor([-2.8870, -3.6625, -3.6383, -3.8170, -4.1743], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7202, device='cuda:0', dtype=torch.float64)
tensor([-2.9919, -3.7716, -3.6054, -3.9375, -4.3749], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0068, device='cuda:0', dtype=torch.float64)
tensor([-3.0901, -3.8413, -3.6008, -4.1407, -4.4971], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6426, device='cuda:0', dtype=torch.float64)
tensor([-3.1654, -3.8949, -3.6201, -4.4946, -4.6010], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6108, device='cuda:0', dtype=torch.float64)
tensor([-3.1895, -3.9470, -3.6517, -4.9345, -4.6848], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5419, device='cuda:0', dtype=torch.float64)
tensor([-3.1275, -3.9251, -3.6787, -4.9413, -4.6653], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5441, device='cuda:0', dtype=torch.float64)
tensor([-3.0222, -3.8629, -3.7195, -4.6422, -4.5407], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5383, device='cuda:0', dtype=torch.float64)
tensor([-2.8750, -3.7880, -3.7238, -4.2792, -4.3846], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5171, device='cuda:0', dtype=torch.float64)
tensor([-2.7035, -3.7633, -3.7573, -4.0111, -4.2113], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7861, device='cuda:0', dtype=torch.float64)
tensor([-2.5576, -3.7534, -3.7898, -3.9228, -4.0920], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6896, device='cuda:0', dtype=torch.float64)
tensor([-2.4676, -3.8314, -3.8169, -3.7935, -3.9678], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4882, device='cuda:0', dtype=torch.float64)
tensor([-2.3982, -3.9187, -3.8475, -3.7268, -3.8249], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3667, device='cuda:0', dtype=torch.float64)
tensor([-2.4431, -3.9379, -3.8562, -3.7063, -3.7315], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8644, device='cuda:0', dtype=torch.float64)
tensor([-2.5483, -3.9097, -3.8518, -3.7772, -3.6597], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5720, device='cuda:0', dtype=torch.float64)
tensor([-2.6184, -3.8761, -3.8197, -3.7496, -3.6590], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1189, device='cuda:0', dtype=torch.float64)
tensor([-2.6040, -3.8205, -3.7962, -3.5583, -3.6780], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3594, device='cuda:0', dtype=torch.float64)
tensor([-2.6698, -3.7721, -3.7877, -3.4594, -3.7617], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6963, device='cuda:0', dtype=torch.float64)
tensor([-2.7612, -3.6886, -3.7769, -3.4691, -3.8571], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9268, device='cuda:0', dtype=torch.float64)
tensor([-2.8684, -3.6496, -3.7476, -3.5056, -3.9725], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0137, device='cuda:0', dtype=torch.float64)
tensor([-2.9478, -3.6089, -3.6821, -3.5351, -4.0552], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5946, device='cuda:0', dtype=torch.float64)
tensor([-2.9681, -3.5509, -3.5908, -3.5755, -4.0411], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7690, device='cuda:0', dtype=torch.float64)
tensor([-2.9528, -3.4744, -3.5130, -3.5664, -3.9872], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9544, device='cuda:0', dtype=torch.float64)
tensor([-2.9102, -3.3845, -3.4832, -3.5715, -3.9737], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8498, device='cuda:0', dtype=torch.float64)
tensor([-2.8680, -3.3142, -3.5066, -3.6117, -4.0039], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5672, device='cuda:0', dtype=torch.float64)
tensor([-2.8234, -3.2652, -3.5223, -3.6911, -4.0427], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5831, device='cuda:0', dtype=torch.float64)
tensor([-2.8083, -3.2415, -3.5481, -3.7813, -4.1073], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.3414, device='cuda:0', dtype=torch.float64)
tensor([-2.7828, -3.2653, -3.6243, -3.9001, -4.2070], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5919, device='cuda:0', dtype=torch.float64)
tensor([-2.8288, -3.3634, -3.6451, -3.9930, -4.3309], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6293, device='cuda:0', dtype=torch.float64)
tensor([-2.8744, -3.4236, -3.6705, -4.1520, -4.3619], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6804, device='cuda:0', dtype=torch.float64)
tensor([-3.1225, -3.4888, -3.7333, -4.4076, -4.3463], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0920, device='cuda:0', dtype=torch.float64)
tensor([-3.4650, -3.5512, -3.7928, -4.6917, -4.2474], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0055, device='cuda:0', dtype=torch.float64)
tensor([-2.9127, -3.6069, -3.7717, -4.8926, -4.1836], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5495, device='cuda:0', dtype=torch.float64)
tensor([-2.7698, -3.5911, -3.7378, -4.7896, -4.0947], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7111, device='cuda:0', dtype=torch.float64)
tensor([-2.7543, -3.5792, -3.6335, -4.6400, -3.9985], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5815, device='cuda:0', dtype=torch.float64)
tensor([-2.7386, -3.5593, -3.4988, -4.5554, -3.8864], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6510, device='cuda:0', dtype=torch.float64)
tensor([-2.7340, -3.5047, -3.4266, -4.5496, -3.8294], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8344, device='cuda:0', dtype=torch.float64)
tensor([-2.7623, -3.4859, -3.3967, -4.6786, -3.8274], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6777, device='cuda:0', dtype=torch.float64)
tensor([-2.8143, -3.4750, -3.3809, -4.8008, -3.8433], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8943, device='cuda:0', dtype=torch.float64)
tensor([-2.8860, -3.4700, -3.4238, -4.9361, -3.8935], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6065, device='cuda:0', dtype=torch.float64)
tensor([-2.9641, -3.4920, -3.3826, -4.9608, -3.9071], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6876, device='cuda:0', dtype=torch.float64)
tensor([-3.0497, -3.5351, -3.3993, -5.0527, -3.9467], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6437, device='cuda:0', dtype=torch.float64)
tensor([-3.1156, -3.6188, -3.4460, -5.1404, -3.9840], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7856, device='cuda:0', dtype=torch.float64)
tensor([-3.1086, -3.5829, -3.4973, -4.9241, -4.0026], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2981, device='cuda:0', dtype=torch.float64)
tensor([-3.1356, -3.5119, -3.5507, -4.7572, -4.0076], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1867, device='cuda:0', dtype=torch.float64)
tensor([-3.1555, -3.5076, -3.6046, -4.6118, -4.0123], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1958, device='cuda:0', dtype=torch.float64)
tensor([-3.2102, -3.5733, -3.6601, -4.4447, -3.9982], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7834, device='cuda:0', dtype=torch.float64)
tensor([-3.2297, -3.6243, -3.7565, -4.3423, -3.9769], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7309, device='cuda:0', dtype=torch.float64)
tensor([-3.3081, -3.7494, -3.9064, -4.2043, -3.9288], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7948, device='cuda:0', dtype=torch.float64)
tensor([-3.4219, -3.9466, -4.7214, -4.0682, -3.8891], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8210, device='cuda:0', dtype=torch.float64)
tensor([-3.4579, -4.2621, -6.3059, -4.0774, -3.9274], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0094, device='cuda:0', dtype=torch.float64)
tensor([-3.3642, -4.3497, -5.1668, -4.1181, -3.9558], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7609, device='cuda:0', dtype=torch.float64)
tensor([-3.3094, -4.3847, -3.9789, -4.0236, -4.0390], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7848, device='cuda:0', dtype=torch.float64)
tensor([-3.2721, -4.2401, -3.8977, -3.9464, -4.3108], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9034, device='cuda:0', dtype=torch.float64)
tensor([-3.2014, -4.0594, -3.9065, -3.9142, -4.6836], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6591, device='cuda:0', dtype=torch.float64)
tensor([-3.1907, -3.9214, -3.9154, -3.9029, -4.9309], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2610, device='cuda:0', dtype=torch.float64)
tensor([-3.1617, -3.7975, -3.9355, -3.8913, -5.0765], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7781, device='cuda:0', dtype=torch.float64)
tensor([-3.1688, -3.7602, -3.9690, -3.8867, -5.2777], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6054, device='cuda:0', dtype=torch.float64)
tensor([-3.1626, -3.7685, -4.0244, -3.8740, -5.3029], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9158, device='cuda:0', dtype=torch.float64)
tensor([-3.1584, -3.7652, -4.0778, -3.8434, -5.2007], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7082, device='cuda:0', dtype=torch.float64)
tensor([-3.1988, -3.7743, -4.1333, -3.8351, -4.9786], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5102, device='cuda:0', dtype=torch.float64)
tensor([-3.2686, -3.7834, -4.2099, -3.8727, -4.7652], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8607, device='cuda:0', dtype=torch.float64)
tensor([-3.3286, -3.7779, -4.2855, -3.9795, -4.7672], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6272, device='cuda:0', dtype=torch.float64)
tensor([-3.4443, -3.8061, -4.3375, -4.1718, -5.0117], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3507, device='cuda:0', dtype=torch.float64)
tensor([-3.4310, -3.8021, -4.3581, -4.4020, -5.3705], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7817, device='cuda:0', dtype=torch.float64)
tensor([-3.4367, -3.7588, -4.3511, -4.6856, -5.8489], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8187, device='cuda:0', dtype=torch.float64)
tensor([-3.4088, -3.6574, -4.2989, -4.7503, -5.4983], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5110, device='cuda:0', dtype=torch.float64)
tensor([-3.4695, -3.6125, -4.2307, -4.7700, -5.0864], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5757, device='cuda:0', dtype=torch.float64)
tensor([-3.7158, -3.6111, -4.1795, -4.7474, -4.8444], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6890, device='cuda:0', dtype=torch.float64)
tensor([-4.0440, -3.6581, -4.3539, -4.8642, -4.8494], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4429, device='cuda:0', dtype=torch.float64)
tensor([-4.2532, -3.7465, -5.1125, -4.9634, -4.8315], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8467, device='cuda:0', dtype=torch.float64)
tensor([-4.2000, -3.7941, -5.2089, -4.8440, -4.7633], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7392, device='cuda:0', dtype=torch.float64)
tensor([-3.8447, -3.8461, -4.5246, -4.6590, -4.7282], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7332, device='cuda:0', dtype=torch.float64)
tensor([-3.5211, -3.9563, -4.1529, -4.5074, -4.5834], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4277, device='cuda:0', dtype=torch.float64)
tensor([-3.3352, -4.0584, -4.1347, -4.4693, -4.5004], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4971, device='cuda:0', dtype=torch.float64)
tensor([-3.2909, -4.0596, -4.1971, -4.4408, -4.4331], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6383, device='cuda:0', dtype=torch.float64)
tensor([-3.3778, -4.0655, -4.2870, -4.5146, -4.4228], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7041, device='cuda:0', dtype=torch.float64)
tensor([-3.4844, -4.0408, -4.4236, -4.8401, -4.4450], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7607, device='cuda:0', dtype=torch.float64)
tensor([-3.5675, -4.0629, -4.6196, -5.2750, -4.4423], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5166, device='cuda:0', dtype=torch.float64)
tensor([-3.5271, -4.3509, -4.7930, -5.6046, -4.5335], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8103, device='cuda:0', dtype=torch.float64)
tensor([-3.5075, -4.2034, -4.7973, -5.1188, -4.5751], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5894, device='cuda:0', dtype=torch.float64)
tensor([-3.4768, -4.0470, -4.6194, -4.7641, -4.6194], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4809, device='cuda:0', dtype=torch.float64)
tensor([-3.4196, -4.0476, -4.3082, -4.5767, -4.6799], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3004, device='cuda:0', dtype=torch.float64)
tensor([-3.3673, -4.1478, -4.0772, -4.4998, -4.7596], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8258, device='cuda:0', dtype=torch.float64)
tensor([-3.3806, -4.4369, -3.9436, -4.5346, -4.9000], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2865, device='cuda:0', dtype=torch.float64)
tensor([-3.4325, -4.7707, -3.8913, -4.7334, -5.1804], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6349, device='cuda:0', dtype=torch.float64)
tensor([-3.4908, -4.9578, -3.9418, -4.7588, -5.2080], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1245, device='cuda:0', dtype=torch.float64)
tensor([-3.5470, -5.1068, -4.2479, -4.7543, -5.7261], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7069, device='cuda:0', dtype=torch.float64)
tensor([-3.6894, -5.1854, -5.6910, -4.9341, -6.5788], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8739, device='cuda:0', dtype=torch.float64)
tensor([-3.7429, -5.1189, -6.1440, -4.9050, -6.5720], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8349, device='cuda:0', dtype=torch.float64)
tensor([-3.7013, -4.9620, -5.0719, -4.8825, -5.8791], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5698, device='cuda:0', dtype=torch.float64)
tensor([-3.6960, -4.9505, -4.7281, -4.8533, -5.1620], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5408, device='cuda:0', dtype=torch.float64)
tensor([-3.6677, -5.1910, -4.8109, -5.0588, -4.8395], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4159, device='cuda:0', dtype=torch.float64)
tensor([-3.6641, -5.8633, -5.0434, -5.2434, -4.8940], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7036, device='cuda:0', dtype=torch.float64)
tensor([-3.6520, -5.6144, -5.1575, -5.1621, -5.1895], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4509, device='cuda:0', dtype=torch.float64)
tensor([-3.6746, -5.0320, -5.2886, -5.0081, -5.3665], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7583, device='cuda:0', dtype=torch.float64)
tensor([-3.6553, -4.5487, -5.5200, -4.6944, -5.0397], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2499, device='cuda:0', dtype=torch.float64)
tensor([-3.6391, -4.4113, -5.7774, -4.5179, -4.7375], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3924, device='cuda:0', dtype=torch.float64)
tensor([-3.6710, -4.4635, -5.8668, -4.4805, -4.5607], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4886, device='cuda:0', dtype=torch.float64)
tensor([-3.6105, -4.4886, -5.6572, -4.5744, -4.4058], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6310, device='cuda:0', dtype=torch.float64)
tensor([-3.5089, -4.4552, -5.3988, -4.7049, -4.3562], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3290, device='cuda:0', dtype=torch.float64)
tensor([-3.4115, -4.3854, -5.2191, -4.8577, -4.3724], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0378, device='cuda:0', dtype=torch.float64)
tensor([-3.3898, -4.4105, -5.0893, -5.1849, -4.4452], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5514, device='cuda:0', dtype=torch.float64)
tensor([-3.4014, -4.9795, -5.1071, -5.6926, -4.7954], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5745, device='cuda:0', dtype=torch.float64)
tensor([-3.4376, -5.6756, -5.0942, -6.0647, -5.3120], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0635, device='cuda:0', dtype=torch.float64)
tensor([-3.4736, -5.1091, -4.8845, -6.0049, -5.1932], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8406, device='cuda:0', dtype=torch.float64)
tensor([-3.5531, -4.7522, -4.8531, -6.0360, -4.9655], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5276, device='cuda:0', dtype=torch.float64)
tensor([-3.6858, -5.2233, -5.2528, -6.1512, -4.9351], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6564, device='cuda:0', dtype=torch.float64)
tensor([-3.7687, -5.4263, -5.6356, -6.1936, -5.0376], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8832, device='cuda:0', dtype=torch.float64)
tensor([-3.8673, -5.4228, -6.1736, -6.2960, -5.2671], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4068, device='cuda:0', dtype=torch.float64)
tensor([-3.9127, -5.3343, -6.5858, -6.2875, -5.3111], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7985, device='cuda:0', dtype=torch.float64)
tensor([-3.9753, -5.0821, -6.3712, -6.1042, -5.1154], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6003, device='cuda:0', dtype=torch.float64)
tensor([-4.0895, -4.8390, -5.6001, -5.8469, -4.9035], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5607, device='cuda:0', dtype=torch.float64)
tensor([-4.3084, -4.7823, -5.0988, -5.6116, -4.7454], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9060, device='cuda:0', dtype=torch.float64)
tensor([-4.6055, -4.8151, -4.6974, -5.4342, -4.6298], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7339, device='cuda:0', dtype=torch.float64)
tensor([-4.8006, -5.1749, -4.6454, -5.7118, -4.5834], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3368, device='cuda:0', dtype=torch.float64)
tensor([-4.7442, -5.7165, -4.7697, -6.0745, -4.6472], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5746, device='cuda:0', dtype=torch.float64)
tensor([-4.6424, -6.6439, -4.9712, -6.6176, -4.7396], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1962, device='cuda:0', dtype=torch.float64)
tensor([-5.2062, -9.5758, -5.0716, -7.9671, -4.8114], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7546, device='cuda:0', dtype=torch.float64)
tensor([ -5.2002, -11.0016,  -5.1409,  -8.6051,  -4.9418], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5836, device='cuda:0', dtype=torch.float64)
tensor([ -5.3113, -11.3545,  -5.2447,  -9.0677,  -5.0993], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5340, device='cuda:0', dtype=torch.float64)
tensor([ -4.9845, -10.8976,  -5.3388,  -8.6420,  -5.2148], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4766, device='cuda:0', dtype=torch.float64)
tensor([ -4.6111, -10.1467,  -5.4208,  -8.0459,  -5.3477], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2891, device='cuda:0', dtype=torch.float64)
tensor([-4.3686, -9.1241, -5.4778, -7.5374, -5.5322], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5475, device='cuda:0', dtype=torch.float64)
tensor([-4.3109, -8.3659, -5.5684, -7.1084, -5.6981], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7819, device='cuda:0', dtype=torch.float64)
tensor([-4.2735, -7.3713, -5.5976, -6.6689, -5.8230], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9645, device='cuda:0', dtype=torch.float64)
tensor([-4.4390, -6.3985, -5.5479, -6.7204, -5.9883], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6065, device='cuda:0', dtype=torch.float64)
tensor([-4.6485, -5.8981, -5.5755, -6.8727, -6.0102], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7659, device='cuda:0', dtype=torch.float64)
tensor([-4.9812, -5.6171, -5.6161, -7.3537, -6.2632], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4933, device='cuda:0', dtype=torch.float64)
tensor([-5.2173, -5.3921, -5.5875, -7.5092, -6.7540], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8647, device='cuda:0', dtype=torch.float64)
tensor([-5.7090, -5.1983, -5.6181, -7.6601, -7.8845], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4386, device='cuda:0', dtype=torch.float64)
tensor([-6.0660, -4.9911, -5.6797, -7.7203, -8.7186], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.3294, device='cuda:0', dtype=torch.float64)
tensor([-6.3660, -4.8332, -5.6160, -7.3141, -8.5993], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4436, device='cuda:0', dtype=torch.float64)
tensor([-6.7066, -4.8099, -5.6354, -7.1232, -9.1043], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7579, device='cuda:0', dtype=torch.float64)
tensor([ -7.1596,  -4.9300,  -5.7570,  -7.6280, -11.0195], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9846, device='cuda:0', dtype=torch.float64)
tensor([ -7.3905,  -5.1403,  -6.1312,  -8.1811, -13.0264], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4696, device='cuda:0', dtype=torch.float64)
tensor([ -7.4552,  -5.6152,  -6.6693,  -8.8859, -15.5755], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5232, device='cuda:0', dtype=torch.float64)
tensor([ -7.4737,  -6.2921,  -7.4318,  -9.8842, -18.2949], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9668, device='cuda:0', dtype=torch.float64)
tensor([ -7.3701,  -7.2477,  -8.3801, -11.5543, -21.1454], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3547, device='cuda:0', dtype=torch.float64)
tensor([ -7.3230,  -8.4755,  -9.1895, -13.0839, -24.1098], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6315, device='cuda:0', dtype=torch.float64)
tensor([ -7.4082,  -9.4926,  -9.2901, -14.6285, -26.2319], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5922, device='cuda:0', dtype=torch.float64)
tensor([ -7.3832, -11.1098,  -9.2465, -16.3062, -28.6168], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8077, device='cuda:0', dtype=torch.float64)
tensor([ -7.1503, -13.3355,  -9.5923, -17.8192, -31.9978], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3997, device='cuda:0', dtype=torch.float64)
tensor([ -6.9717, -16.0487, -10.3317, -19.1539, -35.6960], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7285, device='cuda:0', dtype=torch.float64)
tensor([ -6.8542, -17.6490, -10.8558, -20.0523, -37.9793], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7284, device='cuda:0', dtype=torch.float64)
tensor([ -6.9170, -20.0140, -11.7556, -20.4975, -40.2216], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7710, device='cuda:0', dtype=torch.float64)
tensor([ -7.0790, -22.1429, -12.8238, -20.7892, -42.1953], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3572, device='cuda:0', dtype=torch.float64)
tensor([ -7.4090, -23.8323, -13.9235, -21.3861, -43.9601], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6986, device='cuda:0', dtype=torch.float64)
tensor([ -7.9284, -25.3041, -14.9046, -21.7666, -44.3198], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9636, device='cuda:0', dtype=torch.float64)
tensor([ -8.6895, -26.0962, -16.3416, -21.7556, -45.4248], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6289, device='cuda:0', dtype=torch.float64)
tensor([ -9.1690, -27.2466, -18.0228, -21.8081, -46.2052], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6254, device='cuda:0', dtype=torch.float64)
tensor([ -9.4428, -29.4825, -20.2592, -21.6522, -47.4598], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6941, device='cuda:0', dtype=torch.float64)
tensor([ -9.7335, -32.6802, -22.7792, -21.4505, -49.1260], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6178, device='cuda:0', dtype=torch.float64)
tensor([-10.4377, -36.4704, -26.2066, -21.3168, -51.5667], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7674, device='cuda:0', dtype=torch.float64)
tensor([-11.3829, -39.7772, -28.2591, -20.7582, -52.1041], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7559, device='cuda:0', dtype=torch.float64)
tensor([-11.9112, -42.5059, -29.4604, -20.4004, -52.6640], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5870, device='cuda:0', dtype=torch.float64)
tensor([-12.9361, -44.8977, -30.6852, -20.2029, -53.4886], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9531, device='cuda:0', dtype=torch.float64)
tensor([-13.3385, -47.1470, -32.9073, -20.9902, -54.7407], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6447, device='cuda:0', dtype=torch.float64)
tensor([-14.1936, -48.9036, -35.6341, -21.7897, -56.0339], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6378, device='cuda:0', dtype=torch.float64)
tensor([-15.5299, -50.7538, -39.1426, -22.8781, -56.7684], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3283, device='cuda:0', dtype=torch.float64)
tensor([-16.7107, -51.8620, -42.2453, -23.9214, -57.9774], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4105, device='cuda:0', dtype=torch.float64)
tensor([-17.8008, -52.7009, -45.3554, -25.3740, -58.9842], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2699, device='cuda:0', dtype=torch.float64)
tensor([-19.0633, -53.6177, -48.5707, -26.8173, -60.4617], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6498, device='cuda:0', dtype=torch.float64)
tensor([-20.3652, -54.9708, -51.3532, -27.8917, -62.0740], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5086, device='cuda:0', dtype=torch.float64)
tensor([-21.5000, -56.1751, -52.6528, -28.0790, -63.5430], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4590, device='cuda:0', dtype=torch.float64)
tensor([-22.5288, -57.2485, -54.6017, -28.4136, -65.9713], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7546, device='cuda:0', dtype=torch.float64)
tensor([-23.1756, -58.8121, -56.2611, -28.5967, -67.8363], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5072, device='cuda:0', dtype=torch.float64)
tensor([-23.4328, -59.7518, -57.9648, -29.5795, -70.0582], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5016, device='cuda:0', dtype=torch.float64)
tensor([-23.9306, -60.5224, -60.5823, -30.6340, -72.5359], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5191, device='cuda:0', dtype=torch.float64)
tensor([-24.5412, -61.0318, -62.8860, -31.4668, -73.2871], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5708, device='cuda:0', dtype=torch.float64)
tensor([-25.6137, -61.2157, -63.9743, -31.9760, -73.9253], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6934, device='cuda:0', dtype=torch.float64)
tensor([-27.0156, -61.0458, -64.9925, -32.8641, -74.4223], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5351, device='cuda:0', dtype=torch.float64)
tensor([-28.3922, -60.4788, -66.4807, -34.5041, -74.5455], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3916, device='cuda:0', dtype=torch.float64)
tensor([-29.4967, -59.6325, -68.2042, -36.3928, -74.4775], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7868, device='cuda:0', dtype=torch.float64)
tensor([-31.1941, -57.9524, -71.3533, -38.9939, -74.3888], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5045, device='cuda:0', dtype=torch.float64)
tensor([-33.5589, -56.3004, -75.1978, -40.8023, -73.6520], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6036, device='cuda:0', dtype=torch.float64)
tensor([-35.1629, -55.1908, -76.8946, -42.4056, -72.7455], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4943, device='cuda:0', dtype=torch.float64)
tensor([-35.5132, -54.0280, -77.4602, -44.1261, -71.8698], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7331, device='cuda:0', dtype=torch.float64)
tensor([-35.2597, -53.8632, -79.1838, -46.6272, -71.5139], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4699, device='cuda:0', dtype=torch.float64)
tensor([-35.3222, -53.3300, -81.7911, -48.4889, -70.4876], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5630, device='cuda:0', dtype=torch.float64)
tensor([-34.1291, -52.0933, -82.8032, -50.7171, -69.9603], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3698, device='cuda:0', dtype=torch.float64)
tensor([-33.6124, -51.2029, -84.0471, -52.9603, -70.1000], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5717, device='cuda:0', dtype=torch.float64)
tensor([-33.7916, -51.2207, -86.0801, -53.8622, -69.3457], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4229, device='cuda:0', dtype=torch.float64)
tensor([-34.3704, -52.1961, -88.3199, -54.3872, -67.6936], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7088, device='cuda:0', dtype=torch.float64)
tensor([-35.9111, -53.6419, -91.9862, -55.0899, -65.9597], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3893, device='cuda:0', dtype=torch.float64)
tensor([-37.0623, -54.3272, -93.8022, -54.6904, -63.9501], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4083, device='cuda:0', dtype=torch.float64)
tensor([-38.1003, -54.6212, -94.1763, -54.1018, -61.8021], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4030, device='cuda:0', dtype=torch.float64)
tensor([-40.0999, -54.8472, -94.8897, -52.6466, -60.2037], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8829, device='cuda:0', dtype=torch.float64)
tensor([-41.1555, -54.1349, -96.4750, -52.1650, -60.3858], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4681, device='cuda:0', dtype=torch.float64)
tensor([-41.9197, -53.6061, -99.0224, -51.6996, -61.5988], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2025, device='cuda:0', dtype=torch.float64)
tensor([ -42.5160,  -53.1613, -100.9761,  -51.2591,  -63.4131],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.6503, device='cuda:0', dtype=torch.float64)
tensor([ -42.2939,  -52.4066, -102.1924,  -49.9765,  -63.7305],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.3288, device='cuda:0', dtype=torch.float64)
tensor([ -41.6228,  -51.9187, -102.1658,  -49.2099,  -63.7550],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.6111, device='cuda:0', dtype=torch.float64)
tensor([ -39.5168,  -50.7887, -101.1094,  -48.2423,  -63.7119],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.4239, device='cuda:0', dtype=torch.float64)
tensor([ -38.1404,  -49.5837, -100.6584,  -47.4872,  -63.5813],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.3179, device='cuda:0', dtype=torch.float64)
tensor([-37.6648, -48.4354, -99.7299, -46.0919, -63.3300], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4396, device='cuda:0', dtype=torch.float64)
tensor([-36.9959, -47.3529, -97.6779, -44.5062, -63.1320], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1445, device='cuda:0', dtype=torch.float64)
tensor([-36.3398, -45.7939, -96.3542, -43.9100, -62.7822], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5964, device='cuda:0', dtype=torch.float64)
tensor([-36.0149, -44.7795, -95.7038, -43.8722, -62.4903], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5584, device='cuda:0', dtype=torch.float64)
tensor([-35.2392, -44.2399, -93.9057, -44.2211, -61.1049], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4734, device='cuda:0', dtype=torch.float64)
tensor([-35.5590, -43.9744, -93.3819, -43.9280, -59.1804], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7163, device='cuda:0', dtype=torch.float64)
tensor([-36.3685, -44.7344, -94.2481, -43.2934, -58.9731], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0171, device='cuda:0', dtype=torch.float64)
tensor([-36.6724, -46.2839, -96.5560, -43.8605, -59.6992], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4011, device='cuda:0', dtype=torch.float64)
tensor([-35.9292, -48.5537, -99.2655, -45.1377, -60.6891], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9127, device='cuda:0', dtype=torch.float64)
tensor([ -36.5945,  -52.4265, -101.7378,  -45.3680,  -61.8407],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(2.0021, device='cuda:0', dtype=torch.float64)
tensor([ -37.3850,  -56.7762, -105.3094,  -46.0412,  -63.4140],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.6599, device='cuda:0', dtype=torch.float64)
tensor([ -38.4705,  -62.2374, -109.6731,  -47.3509,  -65.2687],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.5832, device='cuda:0', dtype=torch.float64)
tensor([ -39.6606,  -67.0360, -113.7494,  -49.1850,  -67.6683],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.4554, device='cuda:0', dtype=torch.float64)
tensor([ -41.2791,  -71.9616, -116.5033,  -50.2579,  -69.6577],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.7156, device='cuda:0', dtype=torch.float64)
tensor([ -42.7113,  -76.2105, -119.6234,  -51.3587,  -72.2226],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.6621, device='cuda:0', dtype=torch.float64)
tensor([ -43.0517,  -78.7902, -121.1998,  -52.5300,  -74.0805],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.4954, device='cuda:0', dtype=torch.float64)
tensor([ -45.9262,  -83.9705, -123.6195,  -53.1078,  -76.7852],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.4974, device='cuda:0', dtype=torch.float64)
tensor([ -47.5033,  -87.8238, -125.1910,  -54.2980,  -79.2605],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.5477, device='cuda:0', dtype=torch.float64)
tensor([ -49.0760,  -90.5835, -127.1566,  -56.1105,  -81.5491],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.6544, device='cuda:0', dtype=torch.float64)
tensor([ -48.7553,  -89.1676, -126.0888,  -57.6619,  -81.5927],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.4352, device='cuda:0', dtype=torch.float64)
tensor([ -48.0376,  -88.1564, -124.7654,  -58.7752,  -81.2309],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.5192, device='cuda:0', dtype=torch.float64)
tensor([ -46.8808,  -84.6556, -121.7067,  -60.1218,  -79.3905],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.3179, device='cuda:0', dtype=torch.float64)
tensor([ -45.7526,  -80.3334, -119.0379,  -62.1048,  -77.4346],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.6939, device='cuda:0', dtype=torch.float64)
tensor([ -44.1450,  -76.6653, -117.6795,  -64.7940,  -75.3654],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.7019, device='cuda:0', dtype=torch.float64)
tensor([ -43.5177,  -74.3764, -116.1306,  -66.4197,  -73.4903],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.3991, device='cuda:0', dtype=torch.float64)
tensor([ -44.1748,  -74.0636, -115.5188,  -67.2445,  -71.9209],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.6196, device='cuda:0', dtype=torch.float64)
tensor([ -44.9830,  -73.0500, -113.6385,  -68.5395,  -70.1385],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.8594, device='cuda:0', dtype=torch.float64)
tensor([ -45.9167,  -70.7711, -110.9303,  -70.9294,  -69.0650],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.8072, device='cuda:0', dtype=torch.float64)
tensor([ -47.5424,  -69.4117, -108.9623,  -73.6802,  -69.5958],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.7408, device='cuda:0', dtype=torch.float64)
tensor([ -49.3396,  -69.8527, -108.4601,  -75.9912,  -70.2360],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.6523, device='cuda:0', dtype=torch.float64)
tensor([ -51.5965,  -70.2208, -109.8527,  -79.4106,  -71.6385],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(2.0015, device='cuda:0', dtype=torch.float64)
tensor([ -53.6468,  -71.7846, -110.1628,  -81.3346,  -71.9741],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.6498, device='cuda:0', dtype=torch.float64)
tensor([ -54.9663,  -74.7286, -111.0193,  -83.5738,  -72.7635],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.4853, device='cuda:0', dtype=torch.float64)
tensor([ -55.0653,  -76.6947, -111.6882,  -85.6879,  -73.2823],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.5601, device='cuda:0', dtype=torch.float64)
tensor([ -55.6170,  -76.9716, -112.6629,  -87.5863,  -72.6449],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.6020, device='cuda:0', dtype=torch.float64)
tensor([ -56.1781,  -78.3933, -113.8933,  -90.1315,  -72.7667],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(2.0559, device='cuda:0', dtype=torch.float64)
tensor([ -57.5137,  -81.3466, -115.5874,  -93.0180,  -74.1301],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.7486, device='cuda:0', dtype=torch.float64)
tensor([ -59.4743,  -85.2639, -116.8872,  -95.4197,  -75.7667],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.7333, device='cuda:0', dtype=torch.float64)
tensor([ -62.7979,  -87.5425, -118.7540,  -99.0750,  -77.6186],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.8035, device='cuda:0', dtype=torch.float64)
tensor([ -69.7293,  -91.0809, -121.7010, -104.0730,  -80.9266],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.3203, device='cuda:0', dtype=torch.float64)
tensor([ -76.4906,  -96.3520, -124.7080, -108.7785,  -85.1720],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.7350, device='cuda:0', dtype=torch.float64)
tensor([ -83.8034, -104.6138, -127.2422, -113.6917,  -90.9234],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.4873, device='cuda:0', dtype=torch.float64)
tensor([ -89.2153, -114.2320, -128.9806, -117.2329,  -96.3791],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.6193, device='cuda:0', dtype=torch.float64)
tensor([ -96.0533, -124.3260, -130.6972, -122.1226, -102.8760],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.4037, device='cuda:0', dtype=torch.float64)
tensor([-101.8377, -132.9645, -132.9491, -125.9130, -108.4053],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.8379, device='cuda:0', dtype=torch.float64)
tensor([-107.3230, -137.3205, -135.1570, -130.5884, -112.0942],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.3602, device='cuda:0', dtype=torch.float64)
tensor([-113.5235, -141.9609, -137.9583, -135.2897, -116.3115],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.6909, device='cuda:0', dtype=torch.float64)
tensor([-120.3918, -145.7881, -141.4375, -138.8977, -119.7807],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.7158, device='cuda:0', dtype=torch.float64)
tensor([-128.1012, -148.7659, -144.6529, -142.8163, -123.4372],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.3819, device='cuda:0', dtype=torch.float64)
tensor([-132.6503, -149.4633, -146.7494, -144.3168, -125.9423],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.5852, device='cuda:0', dtype=torch.float64)
tensor([-135.3998, -150.4253, -146.9495, -145.2411, -127.5149],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.6297, device='cuda:0', dtype=torch.float64)
tensor([-139.8884, -151.3568, -147.7959, -146.2625, -128.7099],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.4947, device='cuda:0', dtype=torch.float64)
tensor([-143.1965, -151.1045, -147.2754, -147.2281, -129.0422],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.8811, device='cuda:0', dtype=torch.float64)
tensor([-143.8299, -149.7529, -144.9688, -146.3760, -128.8913],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.4647, device='cuda:0', dtype=torch.float64)
tensor([-144.4247, -147.7633, -142.8983, -144.4585, -127.6961],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.6150, device='cuda:0', dtype=torch.float64)
tensor([-144.5457, -145.2571, -140.9953, -142.4592, -127.0644],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.9187, device='cuda:0', dtype=torch.float64)
tensor([-145.5281, -142.0755, -139.6354, -141.2391, -126.9047],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.7948, device='cuda:0', dtype=torch.float64)
tensor([-149.1070, -137.1179, -139.3065, -140.7896, -126.5576],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.8660, device='cuda:0', dtype=torch.float64)
tensor([-150.4272, -132.3551, -137.7458, -138.6054, -126.1413],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.3883, device='cuda:0', dtype=torch.float64)
tensor([-151.2732, -128.8967, -136.3690, -136.7938, -126.4483],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.5106, device='cuda:0', dtype=torch.float64)
tensor([-151.9792, -125.3972, -134.6942, -134.0337, -125.5918],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(2.2153, device='cuda:0', dtype=torch.float64)
tensor([-153.2072, -121.9052, -133.0860, -130.4668, -126.5023],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(2.0544, device='cuda:0', dtype=torch.float64)
tensor([-155.9828, -117.6110, -132.2138, -128.9862, -126.5275],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.7645, device='cuda:0', dtype=torch.float64)
tensor([-157.0381, -114.3216, -131.5802, -127.2087, -126.7160],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.6525, device='cuda:0', dtype=torch.float64)
tensor([-158.9911, -113.5062, -132.1202, -125.6139, -127.7418],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.6171, device='cuda:0', dtype=torch.float64)
tensor([-163.3954, -112.2336, -134.1017, -125.8989, -128.0737],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.8267, device='cuda:0', dtype=torch.float64)
tensor([-166.4185, -112.8785, -135.6174, -125.9274, -129.5746],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.6818, device='cuda:0', dtype=torch.float64)
tensor([-169.9354, -114.0165, -138.3099, -125.6877, -131.8256],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.6085, device='cuda:0', dtype=torch.float64)
tensor([-172.2602, -116.2448, -139.6362, -125.1519, -136.2290],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.4237, device='cuda:0', dtype=torch.float64)
tensor([-175.3196, -117.4643, -140.7189, -124.6548, -139.0571],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.7669, device='cuda:0', dtype=torch.float64)
tensor([-177.5365, -117.5276, -140.5867, -124.8816, -140.5499],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.8693, device='cuda:0', dtype=torch.float64)
tensor([-180.7200, -117.4964, -140.7151, -124.9766, -140.1418],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.4900, device='cuda:0', dtype=torch.float64)
tensor([-182.9595, -119.0808, -140.9624, -125.9005, -140.4485],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.5995, device='cuda:0', dtype=torch.float64)
tensor([-184.4623, -119.2119, -141.6379, -126.1110, -140.8983],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.5324, device='cuda:0', dtype=torch.float64)
tensor([-185.0841, -117.5067, -142.3843, -126.2188, -140.7416],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.9523, device='cuda:0', dtype=torch.float64)
tensor([-186.3882, -117.2909, -142.3853, -127.1280, -142.2650],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.6448, device='cuda:0', dtype=torch.float64)
tensor([-188.7555, -114.9256, -142.1555, -127.8476, -143.2752],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.4098, device='cuda:0', dtype=torch.float64)
tensor([-192.6260, -111.9373, -143.3584, -128.3167, -143.8420],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(2.2768, device='cuda:0', dtype=torch.float64)
tensor([-192.4163, -107.5979, -142.5403, -125.8652, -144.0541],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.6000, device='cuda:0', dtype=torch.float64)
tensor([-192.2722, -104.3303, -141.9487, -124.7148, -144.3639],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.5066, device='cuda:0', dtype=torch.float64)
tensor([-189.6570, -101.8280, -140.4087, -122.2524, -144.8929],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.6151, device='cuda:0', dtype=torch.float64)
tensor([-183.1365,  -99.7020, -138.5574, -118.8321, -145.8510],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.8054, device='cuda:0', dtype=torch.float64)
tensor([-175.4599,  -96.7508, -136.8190, -116.6614, -146.4274],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.3332, device='cuda:0', dtype=torch.float64)
tensor([-168.4112,  -94.3523, -135.8673, -114.5419, -145.8576],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.6075, device='cuda:0', dtype=torch.float64)
tensor([-161.4676,  -93.3466, -135.1545, -112.4444, -145.0586],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.5694, device='cuda:0', dtype=torch.float64)
tensor([-158.1189,  -91.9968, -134.6107, -111.1014, -143.7425],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.5049, device='cuda:0', dtype=torch.float64)
tensor([-153.4798,  -91.7249, -133.7480, -108.9227, -143.3468],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.3643, device='cuda:0', dtype=torch.float64)
tensor([-147.3100,  -91.9650, -132.2545, -106.6945, -142.8934],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.6464, device='cuda:0', dtype=torch.float64)
tensor([-140.0632,  -94.2871, -131.5848, -105.3864, -143.8044],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.5672, device='cuda:0', dtype=torch.float64)
tensor([-132.8356,  -96.6289, -130.9796, -103.2809, -144.6983],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.3213, device='cuda:0', dtype=torch.float64)
tensor([-128.3425,  -98.0916, -131.4514, -101.9646, -145.2538],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.7958, device='cuda:0', dtype=torch.float64)
tensor([-126.1080, -100.4826, -131.7783, -102.7068, -145.7082],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.9972, device='cuda:0', dtype=torch.float64)
tensor([-126.6635, -101.2733, -131.7689, -103.0418, -142.8223],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.5502, device='cuda:0', dtype=torch.float64)
tensor([-126.6553, -102.9175, -130.9725, -103.1772, -141.2259],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.6326, device='cuda:0', dtype=torch.float64)
tensor([-123.6663, -106.1665, -129.7821, -102.7403, -141.2388],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.7344, device='cuda:0', dtype=torch.float64)
tensor([-124.0386, -108.4900, -128.3015, -104.8360, -140.8994],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.5854, device='cuda:0', dtype=torch.float64)
tensor([-125.1094, -110.4944, -126.8003, -107.4860, -140.9966],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.1885, device='cuda:0', dtype=torch.float64)
tensor([-126.4825, -112.4960, -125.7148, -110.0204, -141.9276],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(2.1418, device='cuda:0', dtype=torch.float64)
tensor([-131.8880, -114.4058, -124.4112, -115.1879, -141.8695],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.5506, device='cuda:0', dtype=torch.float64)
tensor([-136.5491, -116.5336, -123.0520, -120.1676, -141.6519],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.6329, device='cuda:0', dtype=torch.float64)
tensor([-142.3994, -118.2982, -122.9390, -125.4964, -141.4687],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.3120, device='cuda:0', dtype=torch.float64)
tensor([-147.8686, -120.6327, -123.0266, -131.4877, -141.9780],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.6945, device='cuda:0', dtype=torch.float64)
tensor([-151.6624, -123.4662, -122.4105, -136.0390, -142.1159],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.1273, device='cuda:0', dtype=torch.float64)
tensor([-156.0759, -126.6171, -122.1704, -141.0871, -142.8920],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.3963, device='cuda:0', dtype=torch.float64)
tensor([-158.8580, -128.9019, -122.7267, -145.3580, -143.2425],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.8116, device='cuda:0', dtype=torch.float64)
tensor([-161.9892, -130.8023, -123.6755, -149.8660, -144.4053],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.4389, device='cuda:0', dtype=torch.float64)
tensor([-163.6755, -133.4546, -124.4424, -152.8140, -145.4106],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.3971, device='cuda:0', dtype=torch.float64)
tensor([-163.8081, -136.7123, -125.0787, -155.5565, -146.6546],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.5201, device='cuda:0', dtype=torch.float64)
tensor([-163.6307, -140.3688, -126.3451, -158.7181, -148.7736],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.4565, device='cuda:0', dtype=torch.float64)
tensor([-166.4428, -143.3879, -127.6146, -162.6927, -151.8507],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.7493, device='cuda:0', dtype=torch.float64)
tensor([-167.9942, -145.4658, -128.6730, -165.2180, -153.7570],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.5153, device='cuda:0', dtype=torch.float64)
tensor([-166.8284, -147.7539, -129.6623, -165.6861, -155.1629],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.3674, device='cuda:0', dtype=torch.float64)
tensor([-165.8911, -150.5752, -130.6516, -165.9755, -156.1308],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.5533, device='cuda:0', dtype=torch.float64)
tensor([-164.7175, -154.0793, -131.6977, -166.7495, -157.4701],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(2.0193, device='cuda:0', dtype=torch.float64)
tensor([-164.9687, -159.1976, -134.3370, -170.3800, -161.2564],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.7737, device='cuda:0', dtype=torch.float64)
tensor([-164.9180, -163.1958, -137.2030, -173.6377, -164.7210],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.4776, device='cuda:0', dtype=torch.float64)
tensor([-165.9935, -167.1563, -139.9995, -177.7249, -167.8054],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.8192, device='cuda:0', dtype=torch.float64)
tensor([-167.5961, -169.9322, -142.9054, -180.5354, -169.4721],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.5538, device='cuda:0', dtype=torch.float64)
tensor([-170.6799, -171.0472, -144.9488, -183.0895, -170.0733],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.6551, device='cuda:0', dtype=torch.float64)
tensor([-174.1911, -173.0182, -147.8913, -184.7010, -171.0898],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.7896, device='cuda:0', dtype=torch.float64)
tensor([-181.2841, -173.2719, -150.8071, -186.9550, -171.7324],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.5622, device='cuda:0', dtype=torch.float64)
tensor([-187.5338, -174.0970, -153.5744, -189.7825, -172.6457],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.7674, device='cuda:0', dtype=torch.float64)
tensor([-194.6913, -175.9464, -156.1863, -192.9932, -175.2708],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.6386, device='cuda:0', dtype=torch.float64)
tensor([-202.4853, -179.7716, -159.5330, -198.5173, -178.3572],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.4560, device='cuda:0', dtype=torch.float64)
tensor([-211.8650, -182.2790, -162.5340, -204.1874, -180.2279],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.7284, device='cuda:0', dtype=torch.float64)
tensor([-222.8188, -184.9217, -165.1044, -209.9942, -182.6911],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.8447, device='cuda:0', dtype=torch.float64)
tensor([-230.7560, -186.6969, -167.2650, -213.7124, -183.7943],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.7436, device='cuda:0', dtype=torch.float64)
tensor([-235.4603, -188.8948, -169.4855, -217.1945, -186.2396],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.6878, device='cuda:0', dtype=torch.float64)
tensor([-236.6866, -190.7131, -170.9945, -219.5575, -188.9280],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.6527, device='cuda:0', dtype=torch.float64)
tensor([-234.9114, -192.2079, -171.5602, -221.0040, -191.6367],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.6401, device='cuda:0', dtype=torch.float64)
tensor([-228.3849, -193.6421, -170.1533, -220.6763, -192.5605],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.5155, device='cuda:0', dtype=torch.float64)
tensor([-220.9028, -195.3001, -168.0721, -220.7595, -193.0006],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.4682, device='cuda:0', dtype=torch.float64)
tensor([-215.5846, -196.1349, -165.7321, -222.4390, -194.0743],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.7740, device='cuda:0', dtype=torch.float64)
tensor([-211.3247, -195.8138, -162.7604, -223.2695, -194.4850],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.8214, device='cuda:0', dtype=torch.float64)
tensor([-212.7964, -192.3840, -159.2559, -224.7337, -192.5767],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.6582, device='cuda:0', dtype=torch.float64)
tensor([-217.3573, -187.7752, -156.6465, -225.8312, -190.1479],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.7366, device='cuda:0', dtype=torch.float64)
tensor([-219.3153, -183.3219, -153.7559, -225.1802, -187.2068],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.5662, device='cuda:0', dtype=torch.float64)
tensor([-220.5296, -176.7777, -150.2369, -221.7856, -183.0547],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.7342, device='cuda:0', dtype=torch.float64)
tensor([-224.3595, -169.8119, -147.4399, -217.4027, -178.5237],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.5088, device='cuda:0', dtype=torch.float64)
tensor([-226.5394, -165.5689, -145.2526, -214.2780, -174.9267],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.8528, device='cuda:0', dtype=torch.float64)
tensor([-229.2435, -161.3973, -143.9487, -212.1917, -171.6531],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.3169, device='cuda:0', dtype=torch.float64)
tensor([-233.1242, -158.2265, -143.4905, -211.3902, -169.0062],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.5693, device='cuda:0', dtype=torch.float64)
tensor([-234.2741, -155.4542, -142.8320, -210.6017, -165.9231],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.8724, device='cuda:0', dtype=torch.float64)
tensor([-229.5811, -154.2015, -140.2836, -208.8468, -162.4941],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.5038, device='cuda:0', dtype=torch.float64)
tensor([-224.3149, -153.8838, -137.3485, -208.3228, -160.4049],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.7303, device='cuda:0', dtype=torch.float64)
tensor([-219.7552, -154.4116, -135.8703, -209.3386, -158.3891],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.7102, device='cuda:0', dtype=torch.float64)
tensor([-217.5574, -154.3894, -136.1637, -208.7784, -156.5476],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.3092, device='cuda:0', dtype=torch.float64)
tensor([-215.4133, -155.0537, -136.9387, -208.0902, -154.7085],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.6406, device='cuda:0', dtype=torch.float64)
tensor([-211.4720, -157.4689, -136.7180, -206.7695, -152.5516],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.4348, device='cuda:0', dtype=torch.float64)
tensor([-207.7764, -160.4217, -135.1593, -205.7584, -149.9091],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.5518, device='cuda:0', dtype=torch.float64)
tensor([-205.4003, -164.1106, -133.6411, -205.1360, -147.7712],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.6364, device='cuda:0', dtype=torch.float64)
tensor([-202.6264, -167.3389, -132.4249, -203.1674, -145.3852],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.7422, device='cuda:0', dtype=torch.float64)
tensor([-197.4930, -168.6021, -130.2932, -198.7868, -142.3165],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.6495, device='cuda:0', dtype=torch.float64)
tensor([-194.6049, -167.8065, -128.5782, -194.0639, -139.8790],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.6758, device='cuda:0', dtype=torch.float64)
tensor([-191.9401, -167.3441, -126.7872, -190.9059, -138.9032],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.3803, device='cuda:0', dtype=torch.float64)
tensor([-188.3122, -166.1763, -124.8907, -187.6520, -138.2232],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(2.0970, device='cuda:0', dtype=torch.float64)
tensor([-184.8902, -165.9054, -122.8786, -186.2049, -139.9608],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.1576, device='cuda:0', dtype=torch.float64)
tensor([-180.7859, -166.2354, -121.0470, -185.2156, -141.9637],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.6690, device='cuda:0', dtype=torch.float64)
tensor([-177.0972, -164.7557, -118.9787, -183.2045, -143.5777],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.4817, device='cuda:0', dtype=torch.float64)
tensor([-173.9898, -163.9280, -117.8552, -181.9179, -145.6506],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.5101, device='cuda:0', dtype=torch.float64)
tensor([-170.5850, -164.8441, -116.9637, -181.4703, -148.5268],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.5464, device='cuda:0', dtype=torch.float64)
tensor([-167.0709, -164.9309, -116.9100, -179.9504, -149.9999],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.5790, device='cuda:0', dtype=torch.float64)
tensor([-163.9332, -164.6395, -116.1695, -178.5885, -151.6868],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.3658, device='cuda:0', dtype=torch.float64)
tensor([-163.1817, -163.7587, -115.5810, -178.0536, -153.5267],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.4734, device='cuda:0', dtype=torch.float64)
tensor([-162.8245, -163.1224, -115.5979, -178.2644, -156.3991],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.4815, device='cuda:0', dtype=torch.float64)
tensor([-164.8679, -161.9352, -117.0034, -179.6539, -159.4053],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.4580, device='cuda:0', dtype=torch.float64)
tensor([-166.9373, -159.2691, -117.9833, -180.2768, -161.4834],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.4078, device='cuda:0', dtype=torch.float64)
tensor([-168.6609, -156.0254, -118.5344, -179.7338, -162.2123],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.4073, device='cuda:0', dtype=torch.float64)
tensor([-170.1296, -152.9766, -118.6852, -178.6283, -162.1708],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.5699, device='cuda:0', dtype=torch.float64)
tensor([-170.2028, -150.3762, -117.9589, -177.6990, -162.6023],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.5783, device='cuda:0', dtype=torch.float64)
tensor([-171.6835, -147.3576, -117.8364, -176.6931, -161.8002],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.5004, device='cuda:0', dtype=torch.float64)
tensor([-172.6077, -145.8042, -117.5617, -176.3228, -162.0805],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.2817, device='cuda:0', dtype=torch.float64)
tensor([-170.4018, -144.8582, -115.7688, -175.2508, -161.5885],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.5830, device='cuda:0', dtype=torch.float64)
tensor([-168.7028, -143.4466, -114.1098, -174.3040, -160.8799],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.5262, device='cuda:0', dtype=torch.float64)
tensor([-168.2258, -144.3521, -112.9313, -175.4176, -161.5277],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.5264, device='cuda:0', dtype=torch.float64)
tensor([-166.5158, -145.5775, -111.7286, -176.4873, -161.2252],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.6943, device='cuda:0', dtype=torch.float64)
tensor([-166.8452, -147.4953, -110.3757, -178.6678, -162.3703],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.2741, device='cuda:0', dtype=torch.float64)
tensor([-167.8277, -147.9475, -108.7916, -179.9534, -162.8546],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.6499, device='cuda:0', dtype=torch.float64)
tensor([-169.8309, -148.3589, -106.9815, -182.7415, -163.9091],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.5480, device='cuda:0', dtype=torch.float64)
tensor([-171.9259, -147.4602, -105.7931, -182.9953, -163.4870],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.6753, device='cuda:0', dtype=torch.float64)
tensor([-175.4150, -144.7663, -104.3922, -183.4323, -162.6676],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.5290, device='cuda:0', dtype=torch.float64)
tensor([-179.0642, -142.5567, -103.4889, -184.2950, -162.2315],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.8401, device='cuda:0', dtype=torch.float64)
tensor([-183.0772, -140.5888, -102.5267, -185.7443, -161.7140],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.4803, device='cuda:0', dtype=torch.float64)
tensor([-186.2210, -139.3702, -101.6909, -186.5532, -160.9983],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.4505, device='cuda:0', dtype=torch.float64)
tensor([-189.2567, -137.6890, -100.8787, -186.2693, -159.9421],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.7631, device='cuda:0', dtype=torch.float64)
tensor([-190.2835, -136.3961,  -99.2314, -185.4318, -157.6956],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.6996, device='cuda:0', dtype=torch.float64)
tensor([-190.6679, -134.3750,  -97.2145, -181.7474, -154.1071],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.4869, device='cuda:0', dtype=torch.float64)
tensor([-189.1629, -133.1307,  -95.2241, -178.2990, -151.1149],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.9693, device='cuda:0', dtype=torch.float64)
tensor([-186.0200, -130.9659,  -92.5414, -174.3876, -148.8377],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(2.0081, device='cuda:0', dtype=torch.float64)
tensor([-180.8271, -132.9360,  -90.9077, -172.1340, -148.0234],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.9417, device='cuda:0', dtype=torch.float64)
tensor([-177.0438, -134.4140,  -89.6104, -170.8376, -148.1838],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.5310, device='cuda:0', dtype=torch.float64)
tensor([-175.6001, -135.1504,  -88.9863, -169.8319, -148.5915],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.8190, device='cuda:0', dtype=torch.float64)
tensor([-174.5830, -135.4023,  -88.6928, -168.4856, -148.3265],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.6234, device='cuda:0', dtype=torch.float64)
tensor([-173.8517, -135.4931,  -88.4500, -166.8240, -147.9454],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.5977, device='cuda:0', dtype=torch.float64)
tensor([-172.0133, -136.4333,  -88.0676, -164.9502, -147.1107],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.5561, device='cuda:0', dtype=torch.float64)
tensor([-172.2458, -136.2974,  -88.4388, -163.7928, -146.9423],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.7352, device='cuda:0', dtype=torch.float64)
tensor([-171.4411, -136.8382,  -88.1923, -161.2427, -145.8316],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.6587, device='cuda:0', dtype=torch.float64)
tensor([-171.6933, -137.3793,  -88.6767, -159.7310, -145.2942],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.9076, device='cuda:0', dtype=torch.float64)
tensor([-171.4755, -136.8901,  -89.0452, -156.5235, -144.2088],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.7526, device='cuda:0', dtype=torch.float64)
tensor([-171.4486, -136.5620,  -88.9745, -153.1477, -143.1371],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.4893, device='cuda:0', dtype=torch.float64)
tensor([-170.2095, -136.1399,  -88.6481, -150.0572, -142.0263],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.3344, device='cuda:0', dtype=torch.float64)
tensor([-171.1847, -134.6835,  -89.1632, -147.8106, -141.7379],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.2670, device='cuda:0', dtype=torch.float64)
tensor([-172.3432, -132.5492,  -89.3511, -145.5668, -141.2129],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.5669, device='cuda:0', dtype=torch.float64)
tensor([-173.0336, -130.8322,  -89.4675, -143.6818, -140.6743],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.8024, device='cuda:0', dtype=torch.float64)
tensor([-174.8305, -128.8338,  -90.0528, -141.7073, -140.2883],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.6579, device='cuda:0', dtype=torch.float64)
tensor([-174.9823, -128.1528,  -90.0867, -140.9663, -141.0644],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.8258, device='cuda:0', dtype=torch.float64)
tensor([-176.6062, -127.9510,  -90.4920, -141.3817, -141.9807],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.5795, device='cuda:0', dtype=torch.float64)
tensor([-177.6973, -128.2089,  -90.8324, -141.1852, -143.0050],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.5724, device='cuda:0', dtype=torch.float64)
tensor([-180.0896, -127.1873,  -91.4993, -141.0789, -143.7656],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.6588, device='cuda:0', dtype=torch.float64)
tensor([-181.2392, -127.4052,  -91.4023, -141.4262, -143.7100],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.6081, device='cuda:0', dtype=torch.float64)
tensor([-181.9074, -127.0817,  -90.8494, -142.3588, -144.2312],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.3817, device='cuda:0', dtype=torch.float64)
tensor([-183.3412, -127.1942,  -90.4195, -144.4057, -145.8840],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.8893, device='cuda:0', dtype=torch.float64)
tensor([-184.2618, -127.2277,  -90.1727, -144.9713, -147.1600],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.7135, device='cuda:0', dtype=torch.float64)
tensor([-184.5047, -128.1533,  -90.2048, -145.1656, -148.4186],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.6458, device='cuda:0', dtype=torch.float64)
tensor([-182.2298, -129.2693,  -89.7502, -144.2255, -149.5957],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.5292, device='cuda:0', dtype=torch.float64)
tensor([-178.8066, -130.6444,  -88.8866, -143.1109, -150.7289],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(2.0481, device='cuda:0', dtype=torch.float64)
tensor([-176.5791, -131.4568,  -87.7050, -142.3716, -151.2870],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.2570, device='cuda:0', dtype=torch.float64)
tensor([-175.5912, -131.6709,  -87.3425, -141.6820, -151.6199],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.8447, device='cuda:0', dtype=torch.float64)
tensor([-175.4071, -131.8121,  -87.2901, -141.5628, -151.4479],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.9451, device='cuda:0', dtype=torch.float64)
tensor([-175.0263, -132.2828,  -87.4735, -141.7041, -151.6414],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.4092, device='cuda:0', dtype=torch.float64)
tensor([-176.4403, -132.1897,  -87.9339, -141.4002, -151.5899],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.6225, device='cuda:0', dtype=torch.float64)
tensor([-178.1001, -131.6829,  -88.7953, -140.5254, -150.8261],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.5012, device='cuda:0', dtype=torch.float64)
tensor([-180.8088, -131.4503,  -90.0497, -140.2167, -151.0112],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.6309, device='cuda:0', dtype=torch.float64)
tensor([-183.8353, -132.1611,  -91.1241, -139.8797, -151.5265],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.2828, device='cuda:0', dtype=torch.float64)
tensor([-186.2505, -134.0038,  -92.2930, -139.9398, -152.1625],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.7473, device='cuda:0', dtype=torch.float64)
tensor([-185.6373, -137.5499,  -93.0399, -139.8667, -152.6193],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.4665, device='cuda:0', dtype=torch.float64)
tensor([-185.9034, -140.0716,  -93.7570, -139.3407, -152.6082],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.9137, device='cuda:0', dtype=torch.float64)
tensor([-185.4821, -142.6692,  -94.2643, -138.9762, -153.8579],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.8655, device='cuda:0', dtype=torch.float64)
tensor([-186.3258, -145.5643,  -94.9432, -138.3196, -156.2619],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.8255, device='cuda:0', dtype=torch.float64)
tensor([-186.4829, -148.0149,  -95.0930, -139.0623, -159.7512],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.5525, device='cuda:0', dtype=torch.float64)
tensor([-184.1058, -152.5606,  -94.7027, -137.9490, -163.3282],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.5978, device='cuda:0', dtype=torch.float64)
tensor([-182.3745, -157.6975,  -94.8685, -137.3007, -166.3432],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.6128, device='cuda:0', dtype=torch.float64)
tensor([-181.1473, -162.3542,  -95.4434, -136.2773, -168.7561],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.7109, device='cuda:0', dtype=torch.float64)
tensor([-178.6990, -166.1336,  -96.2700, -134.7862, -169.9730],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.8703, device='cuda:0', dtype=torch.float64)
tensor([-176.2372, -172.3821,  -97.6589, -134.3493, -172.3837],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.6130, device='cuda:0', dtype=torch.float64)
tensor([-173.9258, -176.7366,  -99.0147, -133.6267, -174.0486],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.2223, device='cuda:0', dtype=torch.float64)
tensor([-171.3612, -181.5076, -100.2442, -133.3020, -175.1992],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.4516, device='cuda:0', dtype=torch.float64)
tensor([-170.5460, -183.6505, -101.4022, -133.4280, -175.1455],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.6619, device='cuda:0', dtype=torch.float64)
tensor([-169.8806, -185.4178, -102.8416, -133.7824, -175.2273],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.5692, device='cuda:0', dtype=torch.float64)
tensor([-168.8917, -186.6285, -103.6505, -134.3697, -174.8461],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.5982, device='cuda:0', dtype=torch.float64)
tensor([-167.8097, -187.6486, -104.7807, -135.4905, -174.8725],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.8224, device='cuda:0', dtype=torch.float64)
tensor([-165.8963, -189.4243, -106.8290, -136.6174, -175.6179],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.8011, device='cuda:0', dtype=torch.float64)
tensor([-166.7215, -189.2359, -110.1072, -139.1134, -176.6323],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.9266, device='cuda:0', dtype=torch.float64)
tensor([-168.3582, -188.1360, -114.1743, -142.4760, -177.0659],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.7119, device='cuda:0', dtype=torch.float64)
tensor([-171.6103, -186.3492, -117.9089, -145.5899, -177.1291],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.5675, device='cuda:0', dtype=torch.float64)
tensor([-174.2585, -187.2434, -121.4395, -149.1287, -178.9732],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.7471, device='cuda:0', dtype=torch.float64)
tensor([-177.5890, -186.8485, -125.1883, -152.1422, -179.9757],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.7523, device='cuda:0', dtype=torch.float64)
tensor([-178.8549, -186.8320, -127.6565, -154.1385, -180.3685],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.7165, device='cuda:0', dtype=torch.float64)
tensor([-179.9913, -185.9784, -130.1031, -156.1473, -180.8461],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.5794, device='cuda:0', dtype=torch.float64)
tensor([-179.4690, -186.5367, -131.6922, -156.8782, -180.1526],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.4908, device='cuda:0', dtype=torch.float64)
tensor([-180.1476, -186.7996, -133.9604, -158.3008, -178.8562],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.5622, device='cuda:0', dtype=torch.float64)
tensor([-180.5604, -185.4284, -134.4711, -160.5099, -178.1771],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.3016, device='cuda:0', dtype=torch.float64)
tensor([-181.3308, -183.0781, -134.7407, -162.8763, -177.3620],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.8654, device='cuda:0', dtype=torch.float64)
tensor([-182.4247, -179.5416, -134.5944, -165.1892, -175.7166],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.6209, device='cuda:0', dtype=torch.float64)
tensor([-181.9092, -176.0752, -133.6729, -166.0558, -173.6577],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.4829, device='cuda:0', dtype=torch.float64)
tensor([-182.3746, -172.4261, -133.2792, -166.9590, -170.7740],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.4590, device='cuda:0', dtype=torch.float64)
tensor([-183.6497, -169.5570, -133.4654, -167.1739, -168.2183],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.5336, device='cuda:0', dtype=torch.float64)
tensor([-185.1411, -166.3347, -133.6955, -167.2132, -165.5929],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.4305, device='cuda:0', dtype=torch.float64)
tensor([-186.5831, -164.9032, -134.3750, -166.6775, -164.3271],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.3860, device='cuda:0', dtype=torch.float64)
tensor([-187.5504, -163.8716, -134.6896, -165.6746, -163.1859],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.7024, device='cuda:0', dtype=torch.float64)
tensor([-188.2448, -162.5816, -134.5836, -164.7643, -161.9561],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.7739, device='cuda:0', dtype=torch.float64)
tensor([-188.2000, -162.0403, -134.5703, -163.3510, -160.9697],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.8491, device='cuda:0', dtype=torch.float64)
tensor([-187.4982, -161.3933, -134.0110, -161.8672, -160.0244],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.6991, device='cuda:0', dtype=torch.float64)
tensor([-186.3001, -160.4520, -132.9162, -160.2118, -159.1912],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.4996, device='cuda:0', dtype=torch.float64)
tensor([-186.1000, -160.6431, -132.7585, -158.9557, -160.2687],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.5792, device='cuda:0', dtype=torch.float64)
tensor([-186.6343, -160.1335, -132.2925, -158.2666, -161.3866],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.5319, device='cuda:0', dtype=torch.float64)
tensor([-185.3949, -159.8812, -130.6162, -157.3097, -162.6720],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.4780, device='cuda:0', dtype=torch.float64)
tensor([-184.1882, -160.6242, -129.3203, -155.5650, -163.9964],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.7818, device='cuda:0', dtype=torch.float64)
tensor([-182.5030, -160.5956, -127.0413, -153.4679, -164.2970],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.7344, device='cuda:0', dtype=torch.float64)
tensor([-181.1092, -163.9160, -125.7142, -151.6827, -165.8319],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.5948, device='cuda:0', dtype=torch.float64)
tensor([-180.5414, -167.9383, -125.4985, -150.6468, -168.3431],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.4964, device='cuda:0', dtype=torch.float64)
tensor([-180.0940, -172.2337, -125.0859, -149.7379, -170.8450],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.5385, device='cuda:0', dtype=torch.float64)
tensor([-180.7025, -174.7438, -124.6949, -150.2032, -172.3247],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.7428, device='cuda:0', dtype=torch.float64)
tensor([-182.0353, -177.7638, -125.3720, -150.3939, -173.6797],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.5140, device='cuda:0', dtype=torch.float64)
tensor([-183.1114, -180.6723, -126.7666, -151.1418, -175.2607],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.5051, device='cuda:0', dtype=torch.float64)
tensor([-183.6255, -183.0575, -127.1274, -151.7129, -176.1422],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.7107, device='cuda:0', dtype=torch.float64)
tensor([-184.4040, -185.2869, -128.6932, -153.1687, -177.9367],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(2.0557, device='cuda:0', dtype=torch.float64)
tensor([-184.9597, -187.7904, -131.1936, -154.5292, -181.4793],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.6666, device='cuda:0', dtype=torch.float64)
tensor([-184.9784, -191.2142, -134.0896, -155.3756, -185.3545],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.3979, device='cuda:0', dtype=torch.float64)
tensor([-185.4978, -193.4158, -137.2129, -156.1290, -188.3229],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.6082, device='cuda:0', dtype=torch.float64)
tensor([-186.5924, -196.0177, -139.7460, -156.6211, -191.3571],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.2470, device='cuda:0', dtype=torch.float64)
tensor([-188.0901, -198.7690, -142.6413, -157.1917, -194.5124],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.4978, device='cuda:0', dtype=torch.float64)
tensor([-188.5264, -200.5575, -145.0231, -156.7910, -196.0128],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.4615, device='cuda:0', dtype=torch.float64)
tensor([-188.2793, -203.3022, -146.8641, -155.9423, -197.5491],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.5116, device='cuda:0', dtype=torch.float64)
tensor([-188.5096, -207.3874, -149.1073, -155.9353, -200.2533],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.4131, device='cuda:0', dtype=torch.float64)
tensor([-188.4373, -211.6394, -151.0379, -155.4212, -201.9076],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.5876, device='cuda:0', dtype=torch.float64)
tensor([-188.5730, -215.3664, -153.6269, -154.5865, -203.4530],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.5518, device='cuda:0', dtype=torch.float64)
tensor([-188.2095, -217.9193, -155.6391, -153.5149, -204.5153],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.4910, device='cuda:0', dtype=torch.float64)
tensor([-188.1543, -219.3012, -157.5482, -152.1890, -204.6032],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.7022, device='cuda:0', dtype=torch.float64)
tensor([-188.1626, -219.5359, -158.1725, -151.1402, -202.3619],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.5071, device='cuda:0', dtype=torch.float64)
tensor([-189.5066, -219.8562, -160.5580, -150.9377, -200.2454],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.1761, device='cuda:0', dtype=torch.float64)
tensor([-190.5120, -219.9981, -162.7545, -150.2732, -197.6960],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.2754, device='cuda:0', dtype=torch.float64)
tensor([-192.9918, -219.7758, -164.4966, -149.3660, -194.6555],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.3521, device='cuda:0', dtype=torch.float64)
tensor([-195.3041, -218.4031, -165.0054, -148.7591, -192.2842],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.2294, device='cuda:0', dtype=torch.float64)
tensor([-197.0578, -217.5044, -165.2618, -147.2887, -189.6986],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.6590, device='cuda:0', dtype=torch.float64)
tensor([-197.8021, -215.9505, -166.5142, -145.2324, -186.5775],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.3918, device='cuda:0', dtype=torch.float64)
tensor([-198.7293, -214.5618, -167.4766, -143.3528, -183.7584],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.4925, device='cuda:0', dtype=torch.float64)
tensor([-200.3413, -213.5547, -168.5907, -141.4234, -181.0839],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.5910, device='cuda:0', dtype=torch.float64)
tensor([-201.9027, -211.9259, -169.8504, -138.8086, -178.3050],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.5804, device='cuda:0', dtype=torch.float64)
tensor([-203.4739, -212.5544, -173.4037, -136.8747, -177.4027],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.4705, device='cuda:0', dtype=torch.float64)
tensor([-205.3569, -211.3383, -176.2196, -135.1959, -176.0352],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.3775, device='cuda:0', dtype=torch.float64)
tensor([-207.0408, -209.9584, -178.9607, -133.9427, -174.4846],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.5447, device='cuda:0', dtype=torch.float64)
tensor([-209.5831, -208.6104, -181.4877, -133.3553, -173.9686],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.7079, device='cuda:0', dtype=torch.float64)
tensor([-212.1464, -206.5860, -184.1129, -132.9496, -173.3863],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.3842, device='cuda:0', dtype=torch.float64)
tensor([-215.3946, -204.6766, -186.9615, -133.3108, -173.8047],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.3210, device='cuda:0', dtype=torch.float64)
tensor([-217.7094, -202.5710, -189.8209, -133.6068, -174.4820],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.6623, device='cuda:0', dtype=torch.float64)
tensor([-219.5708, -200.7499, -192.2168, -133.3001, -174.5276],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.6236, device='cuda:0', dtype=torch.float64)
tensor([-220.6379, -199.5294, -194.8565, -133.3385, -175.5029],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.6661, device='cuda:0', dtype=torch.float64)
tensor([-221.9540, -198.1148, -196.7876, -133.6423, -176.3670],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.4646, device='cuda:0', dtype=torch.float64)
tensor([-222.4173, -197.0905, -199.5836, -133.5810, -177.5386],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.6936, device='cuda:0', dtype=torch.float64)
tensor([-223.3461, -196.2295, -203.4005, -133.9567, -179.3566],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.3466, device='cuda:0', dtype=torch.float64)
tensor([-225.6771, -195.1917, -206.6164, -134.8295, -181.3786],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.5566, device='cuda:0', dtype=torch.float64)
tensor([-227.3311, -194.1242, -208.7030, -134.7850, -182.8218],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.3674, device='cuda:0', dtype=torch.float64)
tensor([-229.5651, -193.2365, -212.0731, -134.8482, -183.9980],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.7324, device='cuda:0', dtype=torch.float64)
tensor([-232.0509, -193.5126, -215.2229, -134.9463, -186.3044],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.4920, device='cuda:0', dtype=torch.float64)
tensor([-234.1062, -194.3293, -220.1307, -135.4189, -189.4749],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.5565, device='cuda:0', dtype=torch.float64)
tensor([-235.5345, -194.8888, -224.9493, -135.6734, -193.1625],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.4195, device='cuda:0', dtype=torch.float64)
tensor([-238.1985, -197.1415, -230.2847, -136.8115, -197.6655],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.2998, device='cuda:0', dtype=torch.float64)
tensor([-240.6548, -200.1841, -235.4352, -137.6768, -203.0271],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.7327, device='cuda:0', dtype=torch.float64)
tensor([-243.3831, -204.0835, -241.3525, -139.4089, -210.5898],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.3280, device='cuda:0', dtype=torch.float64)
tensor([-246.3308, -207.2398, -248.0894, -141.3316, -217.2929],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.5072, device='cuda:0', dtype=torch.float64)
tensor([-249.3688, -210.1097, -255.5325, -143.2558, -223.4013],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.5338, device='cuda:0', dtype=torch.float64)
tensor([-251.4359, -212.7840, -263.2797, -145.4419, -229.7081],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.2684, device='cuda:0', dtype=torch.float64)
tensor([-253.0572, -215.8334, -270.8677, -147.8884, -236.7893],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.3928, device='cuda:0', dtype=torch.float64)
tensor([-253.8969, -217.8104, -276.5139, -149.5618, -242.0938],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.3071, device='cuda:0', dtype=torch.float64)
tensor([-254.6461, -220.2040, -281.6545, -151.1986, -248.1081],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.2981, device='cuda:0', dtype=torch.float64)
tensor([-254.5830, -221.7664, -285.0783, -152.5350, -252.9267],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.5485, device='cuda:0', dtype=torch.float64)
tensor([-255.6970, -224.0274, -289.4316, -154.2484, -258.9851],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.4823, device='cuda:0', dtype=torch.float64)
tensor([-257.2586, -227.1329, -294.0353, -156.7206, -266.4807],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.3114, device='cuda:0', dtype=torch.float64)
tensor([-258.3700, -230.2145, -297.2169, -158.6689, -273.3294],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.5074, device='cuda:0', dtype=torch.float64)
tensor([-259.5665, -233.3616, -300.9734, -160.2333, -278.9884],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.5241, device='cuda:0', dtype=torch.float64)
tensor([-258.6711, -234.1141, -300.5191, -159.5781, -280.1860],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.4660, device='cuda:0', dtype=torch.float64)
tensor([-257.4997, -233.6890, -300.5220, -158.2764, -279.3591],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.3579, device='cuda:0', dtype=torch.float64)
tensor([-256.1472, -232.5320, -297.7846, -156.4375, -277.3235],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.4996, device='cuda:0', dtype=torch.float64)
tensor([-254.9478, -230.9500, -295.6250, -154.9859, -275.2927],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.3637, device='cuda:0', dtype=torch.float64)
tensor([-254.3651, -229.8481, -296.1043, -154.7084, -274.8415],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.4837, device='cuda:0', dtype=torch.float64)
tensor([-252.8453, -229.2237, -295.4931, -154.3594, -276.1983],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.4551, device='cuda:0', dtype=torch.float64)
tensor([-251.6565, -228.6248, -296.3174, -154.2405, -277.6673],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.4234, device='cuda:0', dtype=torch.float64)
tensor([-250.8490, -226.8414, -296.8458, -154.1187, -277.5258],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.2320, device='cuda:0', dtype=torch.float64)
tensor([-249.5987, -225.3161, -297.6099, -154.1264, -277.3119],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.1796, device='cuda:0', dtype=torch.float64)
tensor([-248.4206, -223.6471, -297.9062, -153.9688, -276.6167],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.2598, device='cuda:0', dtype=torch.float64)
tensor([-247.8029, -222.1432, -298.4373, -153.8885, -275.0898],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.3353, device='cuda:0', dtype=torch.float64)
tensor([-247.2207, -219.7328, -296.9081, -153.5123, -271.2150],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.3935, device='cuda:0', dtype=torch.float64)
tensor([-246.6664, -216.4995, -295.7805, -153.2833, -267.3406],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.1841, device='cuda:0', dtype=torch.float64)
tensor([-246.4327, -213.9233, -295.5137, -153.4361, -264.5427],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.4351, device='cuda:0', dtype=torch.float64)
tensor([-247.5843, -211.6481, -296.6950, -153.6372, -262.6508],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.2096, device='cuda:0', dtype=torch.float64)
tensor([-249.5223, -208.5076, -298.1787, -154.2470, -260.5452],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.3255, device='cuda:0', dtype=torch.float64)
tensor([-250.7591, -206.2808, -297.9685, -154.1078, -259.7054],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.2731, device='cuda:0', dtype=torch.float64)
tensor([-252.0619, -204.2883, -299.5308, -154.3684, -258.5183],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.4487, device='cuda:0', dtype=torch.float64)
tensor([-254.0430, -202.0581, -303.3802, -156.0358, -258.7030],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.3747, device='cuda:0', dtype=torch.float64)
tensor([-255.0991, -200.3622, -306.8720, -157.9668, -259.8342],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.3555, device='cuda:0', dtype=torch.float64)
tensor([-257.0241, -200.1444, -311.1228, -159.7716, -262.2875],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.2014, device='cuda:0', dtype=torch.float64)
tensor([-259.9025, -200.2926, -314.8240, -162.0673, -265.4288],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.2445, device='cuda:0', dtype=torch.float64)
tensor([-263.1246, -200.1013, -318.1223, -164.3351, -267.2733],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.3096, device='cuda:0', dtype=torch.float64)
tensor([-266.4433, -200.2711, -321.1174, -166.5354, -270.5386],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.7351, device='cuda:0', dtype=torch.float64)
tensor([-270.2982, -201.8650, -325.9454, -168.1184, -274.3538],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.1109, device='cuda:0', dtype=torch.float64)
tensor([-274.5124, -203.8013, -331.3031, -169.8057, -278.1754],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.3502, device='cuda:0', dtype=torch.float64)
tensor([-278.3309, -206.7965, -336.9995, -171.2053, -283.0531],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.4785, device='cuda:0', dtype=torch.float64)
tensor([-280.6622, -209.3156, -339.8664, -171.5506, -285.8132],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0297, device='cuda:0', dtype=torch.float64)
tensor([-283.8603, -211.5899, -341.4126, -172.5447, -288.4488],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.1654, device='cuda:0', dtype=torch.float64)
tensor([-287.3956, -214.5171, -342.0018, -173.1692, -291.7045],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.1395, device='cuda:0', dtype=torch.float64)
tensor([-291.3176, -218.1576, -344.2937, -174.3352, -295.9136],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.1436, device='cuda:0', dtype=torch.float64)
tensor([-296.4694, -222.2820, -347.4067, -176.1192, -301.3859],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.2211, device='cuda:0', dtype=torch.float64)
tensor([-301.6601, -226.1398, -350.5159, -177.7976, -306.8776],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.2495, device='cuda:0', dtype=torch.float64)
tensor([-306.8997, -230.9991, -355.8573, -179.8414, -312.9133],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.2285, device='cuda:0', dtype=torch.float64)
tensor([-312.7887, -235.2939, -360.6832, -182.2746, -317.9939],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.1939, device='cuda:0', dtype=torch.float64)
tensor([-319.0893, -239.5382, -365.1428, -185.0629, -321.9283],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9644, device='cuda:0', dtype=torch.float64)
tensor([-325.0312, -244.2558, -369.2847, -188.1763, -325.2700],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0787, device='cuda:0', dtype=torch.float64)
tensor([-331.5635, -249.8210, -373.3110, -191.2529, -329.2009],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0373, device='cuda:0', dtype=torch.float64)
tensor([-337.6610, -256.5945, -377.1020, -192.5668, -334.2384],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.2188, device='cuda:0', dtype=torch.float64)
tensor([-343.8040, -261.7223, -378.9011, -194.0224, -339.0942],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0559, device='cuda:0', dtype=torch.float64)
tensor([-349.2706, -266.1865, -380.8807, -194.9967, -343.4770],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0325, device='cuda:0', dtype=torch.float64)
tensor([-354.6195, -268.8296, -380.4316, -195.8083, -346.1723],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0213, device='cuda:0', dtype=torch.float64)
tensor([-360.0544, -272.1426, -380.2489, -196.3738, -348.8658],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0987, device='cuda:0', dtype=torch.float64)
tensor([-365.5990, -276.1861, -382.4511, -197.7280, -351.9117],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0611, device='cuda:0', dtype=torch.float64)
tensor([-370.4976, -280.3833, -384.2222, -198.5419, -355.1054],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8199, device='cuda:0', dtype=torch.float64)
tensor([-375.4745, -284.5649, -385.1490, -199.0933, -357.8193],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9462, device='cuda:0', dtype=torch.float64)
tensor([-381.2641, -287.7865, -384.6306, -199.7259, -360.0243],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7925, device='cuda:0', dtype=torch.float64)
tensor([-386.2481, -290.3614, -382.7784, -199.4262, -361.8275],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9089, device='cuda:0', dtype=torch.float64)
tensor([-392.0470, -292.7910, -380.4182, -199.7678, -363.1582],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8224, device='cuda:0', dtype=torch.float64)
tensor([-396.9852, -295.5412, -378.1646, -200.1555, -365.3258],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7351, device='cuda:0', dtype=torch.float64)
tensor([-401.7745, -298.6546, -376.0979, -199.9017, -367.7370],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8065, device='cuda:0', dtype=torch.float64)
tensor([-406.4092, -302.7782, -375.2171, -198.7108, -370.5121],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6786, device='cuda:0', dtype=torch.float64)
tensor([-411.9865, -306.5316, -374.6958, -198.2524, -373.0530],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6081, device='cuda:0', dtype=torch.float64)
tensor([-417.2739, -308.3862, -372.0104, -197.9470, -374.4420],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6684, device='cuda:0', dtype=torch.float64)
tensor([-423.3817, -309.5969, -368.9007, -197.4626, -375.1312],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5752, device='cuda:0', dtype=torch.float64)
tensor([-429.6367, -310.0599, -367.6851, -196.6823, -374.5964],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6033, device='cuda:0', dtype=torch.float64)
tensor([-436.6798, -309.3808, -365.4782, -196.6855, -373.8218],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4592, device='cuda:0', dtype=torch.float64)
tensor([-442.6190, -308.1621, -362.9211, -196.9049, -372.4121],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5603, device='cuda:0', dtype=torch.float64)
tensor([-444.4540, -307.1624, -360.7532, -195.4269, -369.5077],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5730, device='cuda:0', dtype=torch.float64)
tensor([-446.4422, -304.1122, -352.5353, -194.7441, -366.4474],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4748, device='cuda:0', dtype=torch.float64)
tensor([-446.7083, -300.9948, -345.0172, -194.0189, -362.2035],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4408, device='cuda:0', dtype=torch.float64)
tensor([-448.3155, -298.6415, -338.7479, -193.7238, -359.7563],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4975, device='cuda:0', dtype=torch.float64)
tensor([-447.9902, -294.7784, -330.7870, -193.2800, -355.6393],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5337, device='cuda:0', dtype=torch.float64)
tensor([-445.5028, -290.2726, -323.1539, -192.7836, -350.8399],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4688, device='cuda:0', dtype=torch.float64)
tensor([-440.2545, -286.2670, -318.3215, -191.4566, -346.0940],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4778, device='cuda:0', dtype=torch.float64)
tensor([-432.8921, -281.3787, -314.5145, -190.8816, -340.2883],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5054, device='cuda:0', dtype=torch.float64)
tensor([-426.5029, -277.3189, -311.1667, -190.4894, -335.5779],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4494, device='cuda:0', dtype=torch.float64)
tensor([-419.1778, -273.1013, -309.3352, -190.4235, -329.7943],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5497, device='cuda:0', dtype=torch.float64)
tensor([-412.9877, -268.6881, -307.1983, -191.2671, -324.9157],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3766, device='cuda:0', dtype=torch.float64)
tensor([-408.6601, -265.5950, -305.3347, -192.0057, -321.9396],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3730, device='cuda:0', dtype=torch.float64)
tensor([-404.9442, -263.1396, -303.7534, -192.4109, -319.0028],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3234, device='cuda:0', dtype=torch.float64)
tensor([-401.8699, -260.5937, -302.1456, -193.5204, -316.2193],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3718, device='cuda:0', dtype=torch.float64)
tensor([-399.2196, -258.5312, -299.2916, -194.3777, -314.3754],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3473, device='cuda:0', dtype=torch.float64)
tensor([-396.9282, -256.6211, -294.9580, -194.4870, -313.8985],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2598, device='cuda:0', dtype=torch.float64)
tensor([-394.5566, -255.5821, -290.5769, -193.4993, -313.9046],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2712, device='cuda:0', dtype=torch.float64)
tensor([-390.8273, -254.3556, -286.9370, -192.4770, -313.0534],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2988, device='cuda:0', dtype=torch.float64)
tensor([-386.9672, -253.5527, -283.4671, -191.2629, -312.5916],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2920, device='cuda:0', dtype=torch.float64)
tensor([-382.8968, -253.2337, -281.3664, -189.8327, -312.1342],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2720, device='cuda:0', dtype=torch.float64)
tensor([-379.1694, -253.2314, -278.9707, -188.4961, -311.7362],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2819, device='cuda:0', dtype=torch.float64)
tensor([-376.8800, -253.9118, -276.5597, -187.1089, -312.5903],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3177, device='cuda:0', dtype=torch.float64)
tensor([-374.1827, -254.4834, -274.3683, -186.2511, -313.1930],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2364, device='cuda:0', dtype=torch.float64)
tensor([-370.3055, -254.6560, -272.8248, -185.4113, -312.6159],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2473, device='cuda:0', dtype=torch.float64)
tensor([-365.2276, -254.1962, -270.6063, -184.5501, -310.8934],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2673, device='cuda:0', dtype=torch.float64)
tensor([-359.9147, -253.5114, -267.9475, -183.8861, -309.3913],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2449, device='cuda:0', dtype=torch.float64)
tensor([-354.8514, -252.5543, -265.3792, -183.6336, -307.8500],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2320, device='cuda:0', dtype=torch.float64)
tensor([-350.1477, -251.5918, -262.3588, -183.3898, -306.1376],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2578, device='cuda:0', dtype=torch.float64)
tensor([-346.2915, -250.2527, -259.8520, -184.0034, -304.1383],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2493, device='cuda:0', dtype=torch.float64)
tensor([-343.2964, -249.7179, -257.4231, -184.7671, -303.4470],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2326, device='cuda:0', dtype=torch.float64)
tensor([-339.2804, -248.9278, -255.1782, -185.1409, -301.8877],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2919, device='cuda:0', dtype=torch.float64)
tensor([-334.3619, -247.3669, -251.2824, -185.3801, -299.5617],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2235, device='cuda:0', dtype=torch.float64)
tensor([-329.1187, -245.4846, -247.4724, -185.5831, -296.8575],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2325, device='cuda:0', dtype=torch.float64)
tensor([-323.7437, -243.5748, -244.1772, -185.8070, -293.6423],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2256, device='cuda:0', dtype=torch.float64)
tensor([-319.2858, -242.1407, -241.0810, -186.0547, -291.3712],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2486, device='cuda:0', dtype=torch.float64)
tensor([-316.0466, -241.2564, -237.8442, -186.5854, -290.3184],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2159, device='cuda:0', dtype=torch.float64)
tensor([-312.9258, -240.4583, -234.7291, -186.9542, -289.3313],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2084, device='cuda:0', dtype=torch.float64)
tensor([-309.3960, -239.3131, -232.2343, -187.0742, -287.8949],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2435, device='cuda:0', dtype=torch.float64)
tensor([-305.7796, -237.7870, -230.5467, -187.5643, -286.1380],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2066, device='cuda:0', dtype=torch.float64)
tensor([-302.3993, -236.3105, -229.0299, -187.9913, -284.7003],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2415, device='cuda:0', dtype=torch.float64)
tensor([-299.7392, -235.0428, -227.3921, -188.9505, -284.0753],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1501, device='cuda:0', dtype=torch.float64)
tensor([-296.7633, -233.5984, -226.2998, -189.6964, -282.9702],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2084, device='cuda:0', dtype=torch.float64)
tensor([-293.7110, -232.2236, -225.9829, -190.4537, -281.6484],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1896, device='cuda:0', dtype=torch.float64)
tensor([-290.7151, -230.9024, -226.0753, -191.2379, -280.3760],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1802, device='cuda:0', dtype=torch.float64)
tensor([-288.4197, -230.0886, -225.6742, -191.8625, -279.5609],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1876, device='cuda:0', dtype=torch.float64)
tensor([-285.1935, -228.6579, -225.7948, -192.3963, -277.8873],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1774, device='cuda:0', dtype=torch.float64)
tensor([-281.8464, -226.9483, -226.5973, -193.3777, -275.9961],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1819, device='cuda:0', dtype=torch.float64)
tensor([-278.7141, -225.3630, -227.4228, -194.5818, -274.2303],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1597, device='cuda:0', dtype=torch.float64)
tensor([-276.3143, -224.1847, -228.1464, -195.5163, -273.0900],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1709, device='cuda:0', dtype=torch.float64)
tensor([-274.6669, -223.4098, -228.1539, -196.1925, -272.4688],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1930, device='cuda:0', dtype=torch.float64)
tensor([-273.0445, -222.6307, -227.8643, -196.8488, -271.9434],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1474, device='cuda:0', dtype=torch.float64)
tensor([-271.6162, -221.8956, -227.5788, -197.4700, -271.4289],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1362, device='cuda:0', dtype=torch.float64)
tensor([-270.1001, -221.0967, -227.3245, -197.8416, -270.6227],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1957, device='cuda:0', dtype=torch.float64)
tensor([-269.1942, -220.6059, -226.9478, -198.2315, -270.1022],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1520, device='cuda:0', dtype=torch.float64)
tensor([-267.9238, -219.9136, -226.3232, -198.3357, -269.1496],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1635, device='cuda:0', dtype=torch.float64)
tensor([-266.3443, -218.9694, -224.9168, -197.9649, -267.6580],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1310, device='cuda:0', dtype=torch.float64)
tensor([-265.2523, -218.3445, -223.0299, -197.4994, -266.6067],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1394, device='cuda:0', dtype=torch.float64)
tensor([-264.5748, -217.9801, -221.0543, -197.1776, -265.7532],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1227, device='cuda:0', dtype=torch.float64)
tensor([-264.2900, -217.8675, -218.6708, -196.6393, -265.0652],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1272, device='cuda:0', dtype=torch.float64)
tensor([-263.9698, -217.6627, -216.3509, -196.1441, -264.2163],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1382, device='cuda:0', dtype=torch.float64)
tensor([-263.0945, -217.0817, -214.3006, -195.7123, -263.0655],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1673, device='cuda:0', dtype=torch.float64)
tensor([-260.9171, -215.7236, -212.6634, -195.5539, -260.8002],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1451, device='cuda:0', dtype=torch.float64)
tensor([-258.9373, -214.4808, -211.1817, -195.6137, -258.8055],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1069, device='cuda:0', dtype=torch.float64)
tensor([-257.0565, -213.3988, -210.0385, -195.9211, -257.0007],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1465, device='cuda:0', dtype=torch.float64)
tensor([-255.7807, -212.6707, -208.4432, -196.1231, -255.7269],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1263, device='cuda:0', dtype=torch.float64)
tensor([-254.5601, -212.1380, -207.4323, -196.6980, -254.6572],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1553, device='cuda:0', dtype=torch.float64)
tensor([-253.6410, -211.7561, -206.2452, -197.1495, -253.7907],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1272, device='cuda:0', dtype=torch.float64)
tensor([-252.7806, -211.5210, -205.5586, -197.8833, -253.3059],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1297, device='cuda:0', dtype=torch.float64)
tensor([-251.5740, -211.1850, -205.6845, -198.8416, -252.8388],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1296, device='cuda:0', dtype=torch.float64)
tensor([-250.6715, -211.0663, -205.6526, -199.6306, -252.5836],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1443, device='cuda:0', dtype=torch.float64)
tensor([-249.7782, -210.9412, -205.1962, -199.6731, -252.1292],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1217, device='cuda:0', dtype=torch.float64)
tensor([-248.9615, -210.8760, -204.4416, -199.5767, -251.6999],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1259, device='cuda:0', dtype=torch.float64)
tensor([-247.7156, -210.5818, -203.8856, -199.3704, -250.9286],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1165, device='cuda:0', dtype=torch.float64)
tensor([-246.0551, -209.9936, -203.3938, -198.8120, -249.5889],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1305, device='cuda:0', dtype=torch.float64)
tensor([-244.2367, -209.2904, -202.6726, -197.8249, -248.1973],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1201, device='cuda:0', dtype=torch.float64)
tensor([-241.5249, -208.1189, -202.5970, -197.0451, -246.0937],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1194, device='cuda:0', dtype=torch.float64)
tensor([-238.7578, -206.9433, -202.6897, -196.5135, -243.7924],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1379, device='cuda:0', dtype=torch.float64)
tensor([-236.4092, -206.1728, -202.9989, -196.2882, -241.9762],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1024, device='cuda:0', dtype=torch.float64)
tensor([-234.0510, -205.4639, -203.8084, -196.7593, -240.1484],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1087, device='cuda:0', dtype=torch.float64)
tensor([-232.3069, -205.1282, -204.3498, -197.2552, -238.8109],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0935, device='cuda:0', dtype=torch.float64)
tensor([-231.3242, -205.2351, -204.4219, -197.7375, -238.1788],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0996, device='cuda:0', dtype=torch.float64)
tensor([-230.7826, -205.5568, -203.9728, -197.9579, -237.8286],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1133, device='cuda:0', dtype=torch.float64)
tensor([-230.1330, -205.8734, -204.1471, -198.8601, -237.4132],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1246, device='cuda:0', dtype=torch.float64)
tensor([-229.8499, -206.2538, -203.9395, -199.6130, -237.5062],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1040, device='cuda:0', dtype=torch.float64)
tensor([-229.8803, -206.6447, -203.2690, -200.1579, -237.7853],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1163, device='cuda:0', dtype=torch.float64)
tensor([-230.4465, -207.2106, -201.9097, -200.2612, -238.4631],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0987, device='cuda:0', dtype=torch.float64)
tensor([-231.3877, -207.8984, -200.2362, -199.9988, -239.2146],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1014, device='cuda:0', dtype=torch.float64)
tensor([-232.6947, -208.7389, -198.3562, -199.6109, -240.1063],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1002, device='cuda:0', dtype=torch.float64)
tensor([-233.5631, -209.2851, -197.0858, -199.8770, -240.4493],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1136, device='cuda:0', dtype=torch.float64)
tensor([-234.2797, -209.7159, -196.1198, -200.4024, -240.6274],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1005, device='cuda:0', dtype=torch.float64)
tensor([-235.4588, -210.3627, -194.4658, -200.2292, -241.0231],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0823, device='cuda:0', dtype=torch.float64)
tensor([-236.2613, -210.7852, -193.3509, -200.4611, -241.1012],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0741, device='cuda:0', dtype=torch.float64)
tensor([-236.5658, -210.9632, -192.4784, -200.4584, -240.8382],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0902, device='cuda:0', dtype=torch.float64)
tensor([-236.6905, -211.0046, -191.4910, -200.1701, -240.4059],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0978, device='cuda:0', dtype=torch.float64)
tensor([-235.6792, -210.4764, -190.8697, -199.6160, -239.0409],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0907, device='cuda:0', dtype=torch.float64)
tensor([-234.1626, -209.6656, -190.5899, -199.1414, -237.2662],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0836, device='cuda:0', dtype=torch.float64)
tensor([-232.5417, -208.9094, -190.7264, -199.0921, -235.6217],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0794, device='cuda:0', dtype=torch.float64)
tensor([-230.9726, -208.3361, -191.3057, -199.4295, -234.1253],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0767, device='cuda:0', dtype=torch.float64)
tensor([-229.6045, -207.8670, -191.7179, -199.6379, -232.8135],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0874, device='cuda:0', dtype=torch.float64)
tensor([-228.3305, -207.5283, -192.3349, -200.0419, -231.6850],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0805, device='cuda:0', dtype=torch.float64)
tensor([-227.2364, -207.2429, -192.7623, -200.2720, -230.7903],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0845, device='cuda:0', dtype=torch.float64)
tensor([-225.7459, -206.8063, -193.3836, -200.4447, -229.6220],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0827, device='cuda:0', dtype=torch.float64)
tensor([-224.6686, -206.4935, -194.0293, -200.9165, -229.0299],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0914, device='cuda:0', dtype=torch.float64)
tensor([-224.1923, -206.3120, -194.1786, -201.0718, -228.8816],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0795, device='cuda:0', dtype=torch.float64)
tensor([-223.8289, -206.0937, -194.0454, -200.9546, -228.8268],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1011, device='cuda:0', dtype=torch.float64)
tensor([-223.6203, -205.9240, -193.9691, -201.2155, -228.8730],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0929, device='cuda:0', dtype=torch.float64)
tensor([-223.5025, -205.7105, -193.5145, -201.1933, -228.7943],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0662, device='cuda:0', dtype=torch.float64)
tensor([-223.3926, -205.5006, -192.9959, -200.9073, -228.8703],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0754, device='cuda:0', dtype=torch.float64)
tensor([-223.5365, -205.3992, -192.3992, -200.6577, -229.0609],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0650, device='cuda:0', dtype=torch.float64)
tensor([-223.9026, -205.2892, -191.4934, -200.0849, -229.2168],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0795, device='cuda:0', dtype=torch.float64)
tensor([-224.3765, -205.3262, -190.8324, -199.8270, -229.5546],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0837, device='cuda:0', dtype=torch.float64)
tensor([-224.8426, -205.4133, -190.1418, -199.5187, -229.7194],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0655, device='cuda:0', dtype=torch.float64)
tensor([-225.3284, -205.5573, -189.6001, -199.4317, -229.8971],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0728, device='cuda:0', dtype=torch.float64)
tensor([-225.6149, -205.7162, -189.3909, -199.6866, -230.0283],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0841, device='cuda:0', dtype=torch.float64)
tensor([-225.7804, -205.9928, -189.4854, -200.1950, -230.1598],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0741, device='cuda:0', dtype=torch.float64)
tensor([-225.3524, -206.2833, -190.6603, -201.7147, -230.2375],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0706, device='cuda:0', dtype=torch.float64)
tensor([-225.0745, -206.6614, -192.0734, -203.3477, -230.4506],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0655, device='cuda:0', dtype=torch.float64)
tensor([-224.5624, -206.9218, -193.6127, -204.8428, -230.3993],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0626, device='cuda:0', dtype=torch.float64)
tensor([-224.0669, -207.0767, -194.6795, -205.7639, -230.1377],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0647, device='cuda:0', dtype=torch.float64)
tensor([-223.5731, -207.0600, -194.9498, -205.7283, -229.6892],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0593, device='cuda:0', dtype=torch.float64)
tensor([-222.8639, -206.8379, -194.7938, -205.0925, -229.0144],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0690, device='cuda:0', dtype=torch.float64)
tensor([-222.3416, -206.5358, -194.0551, -203.7979, -228.2935],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0601, device='cuda:0', dtype=torch.float64)
tensor([-221.6840, -206.2133, -193.4725, -202.4875, -227.5016],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0640, device='cuda:0', dtype=torch.float64)
tensor([-220.9847, -205.9967, -193.4053, -201.9600, -226.7457],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0589, device='cuda:0', dtype=torch.float64)
tensor([-220.4757, -205.8616, -193.2444, -201.4700, -226.1126],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0494, device='cuda:0', dtype=torch.float64)
tensor([-219.8229, -205.7543, -193.3625, -201.3978, -225.4449],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0639, device='cuda:0', dtype=torch.float64)
tensor([-219.3285, -205.7169, -193.4652, -201.4015, -224.9340],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0821, device='cuda:0', dtype=torch.float64)
tensor([-219.0615, -205.7919, -193.4631, -201.4363, -224.6281],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0585, device='cuda:0', dtype=torch.float64)
tensor([-218.9860, -205.8865, -193.2334, -201.2784, -224.4258],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0614, device='cuda:0', dtype=torch.float64)
tensor([-219.0847, -205.9298, -192.7137, -200.8519, -224.2490],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0726, device='cuda:0', dtype=torch.float64)
tensor([-219.5351, -205.9186, -191.6755, -199.8798, -224.1592],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0532, device='cuda:0', dtype=torch.float64)
tensor([-220.0841, -205.8464, -190.4818, -198.6851, -223.9911],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0578, device='cuda:0', dtype=torch.float64)
tensor([-220.6062, -205.8692, -189.6725, -198.0602, -223.9140],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0523, device='cuda:0', dtype=torch.float64)
tensor([-221.0068, -206.0233, -189.3412, -198.0140, -224.0040],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0522, device='cuda:0', dtype=torch.float64)
tensor([-221.1356, -206.1205, -189.2896, -198.1199, -223.9859],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0552, device='cuda:0', dtype=torch.float64)
tensor([-220.9970, -206.1826, -189.5744, -198.5238, -223.8973],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0645, device='cuda:0', dtype=torch.float64)
tensor([-220.7029, -206.1581, -189.9245, -198.9392, -223.6824],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0688, device='cuda:0', dtype=torch.float64)
tensor([-220.6090, -206.1796, -190.1650, -199.4063, -223.6486],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0539, device='cuda:0', dtype=torch.float64)
tensor([-220.3200, -206.2101, -190.6067, -200.0032, -223.4606],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0544, device='cuda:0', dtype=torch.float64)
tensor([-220.0833, -206.3224, -191.1279, -200.6790, -223.4220],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0601, device='cuda:0', dtype=torch.float64)
tensor([-219.8825, -206.4643, -191.6403, -201.3006, -223.4377],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0466, device='cuda:0', dtype=torch.float64)
tensor([-219.8360, -206.5085, -191.7070, -201.3035, -223.3839],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0618, device='cuda:0', dtype=torch.float64)
tensor([-219.9489, -206.5037, -191.5222, -201.0396, -223.3688],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0681, device='cuda:0', dtype=torch.float64)
tensor([-220.0428, -206.5136, -191.3419, -200.7770, -223.3503],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0543, device='cuda:0', dtype=torch.float64)
tensor([-220.3242, -206.6305, -191.1680, -200.6654, -223.4205],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0572, device='cuda:0', dtype=torch.float64)
tensor([-220.3444, -206.7688, -191.3066, -200.8231, -223.3675],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0479, device='cuda:0', dtype=torch.float64)
tensor([-220.2699, -207.0129, -191.8421, -201.4163, -223.4088],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0540, device='cuda:0', dtype=torch.float64)
tensor([-220.2761, -207.1893, -192.1594, -201.7758, -223.3528],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0521, device='cuda:0', dtype=torch.float64)
tensor([-220.3967, -207.2992, -192.1965, -201.8603, -223.3300],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0537, device='cuda:0', dtype=torch.float64)
tensor([-220.4824, -207.3458, -192.0660, -201.6246, -223.1804],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0523, device='cuda:0', dtype=torch.float64)
tensor([-220.5404, -207.3981, -191.9719, -201.3917, -222.9812],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0531, device='cuda:0', dtype=torch.float64)
tensor([-220.4757, -207.2441, -191.5653, -200.6567, -222.5107],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0526, device='cuda:0', dtype=torch.float64)
tensor([-220.5587, -207.0279, -190.8428, -199.5210, -222.0205],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0580, device='cuda:0', dtype=torch.float64)
tensor([-220.7256, -206.8744, -190.1833, -198.5119, -221.6207],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0463, device='cuda:0', dtype=torch.float64)
tensor([-220.7197, -206.7723, -189.8605, -197.8598, -221.2530],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0595, device='cuda:0', dtype=torch.float64)
tensor([-220.6874, -206.7302, -189.7398, -197.5519, -221.0352],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0584, device='cuda:0', dtype=torch.float64)
tensor([-220.4469, -206.8007, -190.0647, -197.7898, -220.9142],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0494, device='cuda:0', dtype=torch.float64)
tensor([-220.0820, -206.9601, -190.7078, -198.4087, -220.8467],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0551, device='cuda:0', dtype=torch.float64)
tensor([-219.5443, -207.2311, -191.6889, -199.4219, -220.7383],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0573, device='cuda:0', dtype=torch.float64)
tensor([-219.1655, -207.4785, -192.4849, -200.3046, -220.6956],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0467, device='cuda:0', dtype=torch.float64)
tensor([-218.8793, -207.6027, -193.0477, -200.8762, -220.6340],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0411, device='cuda:0', dtype=torch.float64)
tensor([-218.7942, -207.6347, -193.2419, -201.1112, -220.5482],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0607, device='cuda:0', dtype=torch.float64)
tensor([-218.7457, -207.5653, -193.1806, -200.9641, -220.4146],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0431, device='cuda:0', dtype=torch.float64)
tensor([-218.8037, -207.4168, -192.8918, -200.5470, -220.2809],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0453, device='cuda:0', dtype=torch.float64)
tensor([-218.6056, -207.4248, -193.1001, -200.6650, -220.1197],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0538, device='cuda:0', dtype=torch.float64)
tensor([-218.6607, -207.2741, -192.7942, -200.1706, -219.9675],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0480, device='cuda:0', dtype=torch.float64)
tensor([-218.7373, -207.0998, -192.4185, -199.5799, -219.8182],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0532, device='cuda:0', dtype=torch.float64)
tensor([-218.7951, -206.9110, -192.0726, -199.0223, -219.6928],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0517, device='cuda:0', dtype=torch.float64)
tensor([-218.6981, -206.8114, -192.0226, -198.8562, -219.5369],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0437, device='cuda:0', dtype=torch.float64)
tensor([-218.3961, -206.8268, -192.3437, -199.1755, -219.3660],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0509, device='cuda:0', dtype=torch.float64)
tensor([-218.1846, -206.8457, -192.6300, -199.5061, -219.2783],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0590, device='cuda:0', dtype=torch.float64)
tensor([-217.9341, -207.0104, -193.1902, -200.2245, -219.2654],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0503, device='cuda:0', dtype=torch.float64)
tensor([-217.8125, -206.9713, -193.3284, -200.4149, -219.1760],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0417, device='cuda:0', dtype=torch.float64)
tensor([-217.8387, -206.9652, -193.3296, -200.5418, -219.1657],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0553, device='cuda:0', dtype=torch.float64)
tensor([-218.0627, -206.9084, -193.0380, -200.3683, -219.2034],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0416, device='cuda:0', dtype=torch.float64)
tensor([-218.2651, -206.8745, -192.7778, -200.2218, -219.2286],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0491, device='cuda:0', dtype=torch.float64)
tensor([-218.4969, -206.8711, -192.5448, -200.1659, -219.3055],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0513, device='cuda:0', dtype=torch.float64)
tensor([-218.7062, -206.8244, -192.2164, -199.9200, -219.3355],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0458, device='cuda:0', dtype=torch.float64)
tensor([-219.0325, -206.7041, -191.6494, -199.4675, -219.3565],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0406, device='cuda:0', dtype=torch.float64)
tensor([-219.1946, -206.6410, -191.3692, -199.2698, -219.3618],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0425, device='cuda:0', dtype=torch.float64)
tensor([-219.2314, -206.6929, -191.3741, -199.3902, -219.3975],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0531, device='cuda:0', dtype=torch.float64)
tensor([-219.1775, -206.8311, -191.6318, -199.7606, -219.4599],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0423, device='cuda:0', dtype=torch.float64)
tensor([-219.0657, -207.0405, -192.0909, -200.3389, -219.5804],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0410, device='cuda:0', dtype=torch.float64)
tensor([-218.9420, -207.2326, -192.4866, -200.7668, -219.6011],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0483, device='cuda:0', dtype=torch.float64)
tensor([-218.8190, -207.4800, -192.8842, -201.2013, -219.5713],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0350, device='cuda:0', dtype=torch.float64)
tensor([-218.6752, -207.6610, -193.1936, -201.5073, -219.5013],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0531, device='cuda:0', dtype=torch.float64)
tensor([-218.5743, -207.7867, -193.4271, -201.7227, -219.4664],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0454, device='cuda:0', dtype=torch.float64)
tensor([-218.7073, -207.7853, -193.1143, -201.3872, -219.3522],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0439, device='cuda:0', dtype=torch.float64)
tensor([-218.7311, -207.8210, -192.9262, -201.1509, -219.1298],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0497, device='cuda:0', dtype=torch.float64)
tensor([-218.8460, -207.8591, -192.7725, -200.9939, -219.0607],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0469, device='cuda:0', dtype=torch.float64)
tensor([-218.9255, -207.9249, -192.7650, -200.9442, -219.0696],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0380, device='cuda:0', dtype=torch.float64)
tensor([-219.0325, -208.0037, -192.7890, -200.9508, -219.1490],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0408, device='cuda:0', dtype=torch.float64)
tensor([-219.0918, -208.0471, -192.7586, -200.8283, -219.1852],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0383, device='cuda:0', dtype=torch.float64)
tensor([-219.1987, -208.0316, -192.6277, -200.5998, -219.2580],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0410, device='cuda:0', dtype=torch.float64)
tensor([-219.2680, -207.9351, -192.3946, -200.2512, -219.1944],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0370, device='cuda:0', dtype=torch.float64)
tensor([-219.3693, -207.8713, -192.2165, -200.0139, -219.1738],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0356, device='cuda:0', dtype=torch.float64)
tensor([-219.4909, -207.8206, -192.0508, -199.8245, -219.1926],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0368, device='cuda:0', dtype=torch.float64)
tensor([-219.6948, -207.8062, -191.8364, -199.6054, -219.2548],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0389, device='cuda:0', dtype=torch.float64)
tensor([-219.6416, -207.8902, -192.0481, -199.7811, -219.2856],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0432, device='cuda:0', dtype=torch.float64)
tensor([-219.5214, -207.9745, -192.3642, -200.0633, -219.2843],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0355, device='cuda:0', dtype=torch.float64)
tensor([-219.2817, -207.9862, -192.6836, -200.2722, -219.1199],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0415, device='cuda:0', dtype=torch.float64)
tensor([-219.0119, -208.0423, -193.1058, -200.5803, -218.9959],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0353, device='cuda:0', dtype=torch.float64)
tensor([-218.6497, -208.1129, -193.6415, -201.0094, -218.8275],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0393, device='cuda:0', dtype=torch.float64)
tensor([-218.5048, -208.1540, -193.9296, -201.3064, -218.7428],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0444, device='cuda:0', dtype=torch.float64)
tensor([-218.2830, -208.1712, -194.1891, -201.5767, -218.5459],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0524, device='cuda:0', dtype=torch.float64)
tensor([-218.2640, -208.1573, -194.1967, -201.6718, -218.4576],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0405, device='cuda:0', dtype=torch.float64)
tensor([-218.3167, -208.1077, -194.0446, -201.6224, -218.3839],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0401, device='cuda:0', dtype=torch.float64)
tensor([-218.4113, -207.9868, -193.6819, -201.3460, -218.2568],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0450, device='cuda:0', dtype=torch.float64)
tensor([-218.6606, -207.8262, -193.0672, -200.8116, -218.1914],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0367, device='cuda:0', dtype=torch.float64)
tensor([-218.8427, -207.7089, -192.6022, -200.3759, -218.1484],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0464, device='cuda:0', dtype=torch.float64)
tensor([-218.9713, -207.6366, -192.2844, -200.0855, -218.1253],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0339, device='cuda:0', dtype=torch.float64)
tensor([-219.1532, -207.5344, -191.8939, -199.7275, -218.1010],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0407, device='cuda:0', dtype=torch.float64)
tensor([-219.3706, -207.5781, -191.6804, -199.6204, -218.2148],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0438, device='cuda:0', dtype=torch.float64)
tensor([-219.4595, -207.6170, -191.6485, -199.6694, -218.3103],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0334, device='cuda:0', dtype=torch.float64)
tensor([-219.4267, -207.6965, -191.8215, -199.8834, -218.4086],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0446, device='cuda:0', dtype=torch.float64)
tensor([-219.2793, -207.7398, -192.0757, -200.1223, -218.4497],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0396, device='cuda:0', dtype=torch.float64)
tensor([-218.9997, -207.9822, -192.7412, -200.8088, -218.5795],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0351, device='cuda:0', dtype=torch.float64)
tensor([-218.6883, -208.1822, -193.3691, -201.3956, -218.6533],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0400, device='cuda:0', dtype=torch.float64)
tensor([-218.4793, -208.4319, -193.9859, -201.9699, -218.8234],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0412, device='cuda:0', dtype=torch.float64)
tensor([-218.4407, -208.3972, -194.0177, -201.8620, -218.8871],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0415, device='cuda:0', dtype=torch.float64)
tensor([-218.3229, -208.3876, -194.1717, -201.9042, -218.9075],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0360, device='cuda:0', dtype=torch.float64)
tensor([-218.4964, -208.3121, -193.9840, -201.6539, -219.0350],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0333, device='cuda:0', dtype=torch.float64)
tensor([-218.5072, -208.1887, -193.8625, -201.3665, -219.0242],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0426, device='cuda:0', dtype=torch.float64)
tensor([-218.4494, -208.0340, -193.7678, -201.0912, -218.9207],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0457, device='cuda:0', dtype=torch.float64)
tensor([-218.4504, -207.7669, -193.4430, -200.5909, -218.7456],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0343, device='cuda:0', dtype=torch.float64)
tensor([-218.5112, -207.4647, -193.0089, -199.9761, -218.5498],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0421, device='cuda:0', dtype=torch.float64)
tensor([-218.4940, -207.3143, -192.9083, -199.7108, -218.4807],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0341, device='cuda:0', dtype=torch.float64)
tensor([-218.3688, -207.1399, -192.8308, -199.4264, -218.2991],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0439, device='cuda:0', dtype=torch.float64)
tensor([-218.1676, -207.0636, -192.9292, -199.3388, -218.1253],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0531, device='cuda:0', dtype=torch.float64)
tensor([-218.0345, -207.0518, -193.0781, -199.3886, -218.0524],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0355, device='cuda:0', dtype=torch.float64)
tensor([-217.7825, -207.1844, -193.5248, -199.7248, -218.0343],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0397, device='cuda:0', dtype=torch.float64)
tensor([-217.4208, -207.4105, -194.1850, -200.2375, -218.0355],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0422, device='cuda:0', dtype=torch.float64)
tensor([-216.9903, -207.5903, -194.8438, -200.7210, -217.9210],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0399, device='cuda:0', dtype=torch.float64)
tensor([-216.6409, -207.8416, -195.5017, -201.2631, -217.8751],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0366, device='cuda:0', dtype=torch.float64)
tensor([-216.5383, -207.9354, -195.7543, -201.5008, -217.8588],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0432, device='cuda:0', dtype=torch.float64)
tensor([-216.4767, -208.0656, -196.0514, -201.8293, -217.9187],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0397, device='cuda:0', dtype=torch.float64)
tensor([-216.5176, -208.2425, -196.3765, -202.2281, -218.0863],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0406, device='cuda:0', dtype=torch.float64)
tensor([-216.4959, -208.4593, -196.7883, -202.7121, -218.2284],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0294, device='cuda:0', dtype=torch.float64)
tensor([-216.6210, -208.5327, -196.8679, -202.8904, -218.3793],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0447, device='cuda:0', dtype=torch.float64)
tensor([-216.7052, -208.3282, -196.5391, -202.6514, -218.2853],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0329, device='cuda:0', dtype=torch.float64)
tensor([-216.7122, -208.1811, -196.3478, -202.5361, -218.1642],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0427, device='cuda:0', dtype=torch.float64)
tensor([-216.7397, -207.8723, -195.9038, -202.1389, -217.9354],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0276, device='cuda:0', dtype=torch.float64)
tensor([-216.8111, -207.5588, -195.4201, -201.7426, -217.6919],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0370, device='cuda:0', dtype=torch.float64)
tensor([-216.9553, -207.1941, -194.8173, -201.2367, -217.4499],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0322, device='cuda:0', dtype=torch.float64)
tensor([-217.1381, -206.9967, -194.4064, -200.9475, -217.3429],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0417, device='cuda:0', dtype=torch.float64)
tensor([-217.3041, -206.8516, -194.1133, -200.7618, -217.2861],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0369, device='cuda:0', dtype=torch.float64)
tensor([-217.3578, -206.8787, -194.1918, -200.9442, -217.3385],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0365, device='cuda:0', dtype=torch.float64)
tensor([-217.3402, -206.9067, -194.3351, -201.1356, -217.3485],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0370, device='cuda:0', dtype=torch.float64)
tensor([-217.2561, -206.9121, -194.4965, -201.2950, -217.3131],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0273, device='cuda:0', dtype=torch.float64)
tensor([-217.0458, -206.8993, -194.7274, -201.4806, -217.1809],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0353, device='cuda:0', dtype=torch.float64)
tensor([-216.8041, -206.8743, -194.9130, -201.5746, -217.0069],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0367, device='cuda:0', dtype=torch.float64)
tensor([-216.6199, -206.8541, -194.9786, -201.5166, -216.8267],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0434, device='cuda:0', dtype=torch.float64)
tensor([-216.5310, -206.8411, -194.9748, -201.4036, -216.7081],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0241, device='cuda:0', dtype=torch.float64)
tensor([-216.4980, -206.8844, -195.0064, -201.3476, -216.6744],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0319, device='cuda:0', dtype=torch.float64)
tensor([-216.3965, -206.9285, -195.1172, -201.3536, -216.6113],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0425, device='cuda:0', dtype=torch.float64)
tensor([-216.2653, -207.0938, -195.4508, -201.6071, -216.6270],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0263, device='cuda:0', dtype=torch.float64)
tensor([-216.1243, -207.2551, -195.7874, -201.8689, -216.6366],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0368, device='cuda:0', dtype=torch.float64)
tensor([-216.0744, -207.4239, -196.0237, -202.0817, -216.6654],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0277, device='cuda:0', dtype=torch.float64)
tensor([-215.9669, -207.5544, -196.2890, -202.2600, -216.6605],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0405, device='cuda:0', dtype=torch.float64)
tensor([-215.8837, -207.6571, -196.4476, -202.3472, -216.6170],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0352, device='cuda:0', dtype=torch.float64)
tensor([-215.7857, -207.7620, -196.6186, -202.4286, -216.5694],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0419, device='cuda:0', dtype=torch.float64)
tensor([-215.6911, -207.8826, -196.8180, -202.5662, -216.5276],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0339, device='cuda:0', dtype=torch.float64)
tensor([-215.6532, -208.0643, -197.0700, -202.7941, -216.5869],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0308, device='cuda:0', dtype=torch.float64)
tensor([-215.6167, -208.3304, -197.4536, -203.1634, -216.7005],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0497, device='cuda:0', dtype=torch.float64)
tensor([-215.6778, -208.3154, -197.3568, -203.0650, -216.6538],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0312, device='cuda:0', dtype=torch.float64)
tensor([-215.7027, -208.2167, -197.1699, -202.8494, -216.5246],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0315, device='cuda:0', dtype=torch.float64)
tensor([-215.7620, -207.9973, -196.7818, -202.4030, -216.3409],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0338, device='cuda:0', dtype=torch.float64)
tensor([-215.8611, -207.7924, -196.3807, -201.9666, -216.2131],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0325, device='cuda:0', dtype=torch.float64)
tensor([-215.9427, -207.5561, -195.9496, -201.4828, -216.0602],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0366, device='cuda:0', dtype=torch.float64)
tensor([-215.9900, -207.3089, -195.5507, -201.0128, -215.8644],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0193, device='cuda:0', dtype=torch.float64)
tensor([-216.0769, -206.9898, -195.0356, -200.4211, -215.6241],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0301, device='cuda:0', dtype=torch.float64)
tensor([-216.2023, -206.6900, -194.5275, -199.8675, -215.4410],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0378, device='cuda:0', dtype=torch.float64)
tensor([-216.2351, -206.5858, -194.3331, -199.6699, -215.3521],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0347, device='cuda:0', dtype=torch.float64)
tensor([-216.3186, -206.5790, -194.2618, -199.6415, -215.4060],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0369, device='cuda:0', dtype=torch.float64)
tensor([-216.4138, -206.6208, -194.2337, -199.7015, -215.5010],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0325, device='cuda:0', dtype=torch.float64)
tensor([-216.4306, -206.7321, -194.3381, -199.8765, -215.5976],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0291, device='cuda:0', dtype=torch.float64)
tensor([-216.4122, -207.0227, -194.6675, -200.2932, -215.7750],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0393, device='cuda:0', dtype=torch.float64)
tensor([-216.3073, -207.2310, -194.9992, -200.6367, -215.8485],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0367, device='cuda:0', dtype=torch.float64)
tensor([-216.2383, -207.4986, -195.3947, -201.0511, -216.0134],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0386, device='cuda:0', dtype=torch.float64)
tensor([-216.2047, -207.6133, -195.6051, -201.2408, -216.0980],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0378, device='cuda:0', dtype=torch.float64)
tensor([-216.1829, -207.6344, -195.6645, -201.2651, -216.1070],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0498, device='cuda:0', dtype=torch.float64)
tensor([-216.1260, -207.6371, -195.7511, -201.2642, -216.0937],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0258, device='cuda:0', dtype=torch.float64)
tensor([-216.0384, -207.5858, -195.8043, -201.2128, -216.0099],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0307, device='cuda:0', dtype=torch.float64)
tensor([-215.8493, -207.4761, -195.8729, -201.1444, -215.8205],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0293, device='cuda:0', dtype=torch.float64)
tensor([-215.6418, -207.3497, -195.9451, -201.0560, -215.6317],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0332, device='cuda:0', dtype=torch.float64)
tensor([-215.4482, -207.2312, -196.0239, -200.9871, -215.4771],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0439, device='cuda:0', dtype=torch.float64)
tensor([-215.3975, -207.0813, -195.9199, -200.7777, -215.3688],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0286, device='cuda:0', dtype=torch.float64)
tensor([-215.2700, -206.9122, -195.8395, -200.5512, -215.1997],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0260, device='cuda:0', dtype=torch.float64)
tensor([-215.1631, -206.7749, -195.8173, -200.3796, -215.0986],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0296, device='cuda:0', dtype=torch.float64)
tensor([-215.0842, -206.7237, -195.8915, -200.3479, -215.0837],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0242, device='cuda:0', dtype=torch.float64)
tensor([-215.0002, -206.6126, -195.8817, -200.2521, -214.9982],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0265, device='cuda:0', dtype=torch.float64)
tensor([-214.9283, -206.5869, -195.9489, -200.2469, -214.9661],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0367, device='cuda:0', dtype=torch.float64)
tensor([-214.8216, -206.7063, -196.1971, -200.4313, -215.0001],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0316, device='cuda:0', dtype=torch.float64)
tensor([-214.7618, -206.9338, -196.5416, -200.7551, -215.1496],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0345, device='cuda:0', dtype=torch.float64)
tensor([-214.7221, -207.2069, -196.9167, -201.1296, -215.3300],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0281, device='cuda:0', dtype=torch.float64)
tensor([-214.7798, -207.3962, -197.0924, -201.3563, -215.4892],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0227, device='cuda:0', dtype=torch.float64)
tensor([-214.8345, -207.5890, -197.3180, -201.6153, -215.6786],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0376, device='cuda:0', dtype=torch.float64)
tensor([-214.9775, -207.6992, -197.3731, -201.7349, -215.8867],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0286, device='cuda:0', dtype=torch.float64)
tensor([-215.1771, -207.7364, -197.2761, -201.7234, -216.0760],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0302, device='cuda:0', dtype=torch.float64)
tensor([-215.4215, -207.7543, -197.1267, -201.6577, -216.2742],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0348, device='cuda:0', dtype=torch.float64)
tensor([-215.6268, -207.8828, -197.1653, -201.7674, -216.5347],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0378, device='cuda:0', dtype=torch.float64)
tensor([-215.9234, -207.9574, -197.0272, -201.7509, -216.7881],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0327, device='cuda:0', dtype=torch.float64)
tensor([-216.1307, -207.9611, -196.8638, -201.6961, -216.9145],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0412, device='cuda:0', dtype=torch.float64)
tensor([-216.3630, -208.0268, -196.7566, -201.7184, -217.1018],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0309, device='cuda:0', dtype=torch.float64)
tensor([-216.5652, -208.0182, -196.5664, -201.6401, -217.2254],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0397, device='cuda:0', dtype=torch.float64)
tensor([-216.7366, -208.0620, -196.5024, -201.6661, -217.3907],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0294, device='cuda:0', dtype=torch.float64)
tensor([-216.7784, -208.0261, -196.4644, -201.6829, -217.4125],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0260, device='cuda:0', dtype=torch.float64)
tensor([-216.6958, -208.0713, -196.6422, -201.8368, -217.4196],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0213, device='cuda:0', dtype=torch.float64)
tensor([-216.6362, -208.0315, -196.6441, -201.7907, -217.3512],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0271, device='cuda:0', dtype=torch.float64)
tensor([-216.5843, -208.0041, -196.6228, -201.7049, -217.2809],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0235, device='cuda:0', dtype=torch.float64)
tensor([-216.5468, -207.9382, -196.5182, -201.5480, -217.1722],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0295, device='cuda:0', dtype=torch.float64)
tensor([-216.4904, -207.7830, -196.3266, -201.2999, -216.9895],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0283, device='cuda:0', dtype=torch.float64)
tensor([-216.4715, -207.6673, -196.1257, -201.0735, -216.8281],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0350, device='cuda:0', dtype=torch.float64)
tensor([-216.3506, -207.4863, -195.9511, -200.8092, -216.5782],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0321, device='cuda:0', dtype=torch.float64)
tensor([-216.2199, -207.3949, -195.8336, -200.6030, -216.3454],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0336, device='cuda:0', dtype=torch.float64)
tensor([-216.0446, -207.4107, -195.8895, -200.5533, -216.1852],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0298, device='cuda:0', dtype=torch.float64)
tensor([-215.8417, -207.5011, -196.0643, -200.6036, -216.0536],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0593, device='cuda:0', dtype=torch.float64)
tensor([-215.6260, -207.7337, -196.4609, -200.8639, -216.0458],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0309, device='cuda:0', dtype=torch.float64)
tensor([-215.3996, -207.9491, -196.8314, -201.0653, -216.0055],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0234, device='cuda:0', dtype=torch.float64)
tensor([-215.2135, -208.0794, -197.0760, -201.1533, -215.9402],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0194, device='cuda:0', dtype=torch.float64)
tensor([-215.0363, -208.2909, -197.4384, -201.3711, -215.9433],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0247, device='cuda:0', dtype=torch.float64)
tensor([-214.9176, -208.3695, -197.5800, -201.3711, -215.8888],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0377, device='cuda:0', dtype=torch.float64)
tensor([-214.7342, -208.5548, -197.9407, -201.5614, -215.8652],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0410, device='cuda:0', dtype=torch.float64)
tensor([-214.6060, -208.7735, -198.3252, -201.8179, -215.8944],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0190, device='cuda:0', dtype=torch.float64)
tensor([-214.5404, -208.8956, -198.5318, -201.9329, -215.8976],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0270, device='cuda:0', dtype=torch.float64)
tensor([-214.4727, -208.8238, -198.5115, -201.8306, -215.7889],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0262, device='cuda:0', dtype=torch.float64)
tensor([-214.4548, -208.6905, -198.3719, -201.6114, -215.6776],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0247, device='cuda:0', dtype=torch.float64)
tensor([-214.4926, -208.4818, -198.0660, -201.2858, -215.5189],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0244, device='cuda:0', dtype=torch.float64)
tensor([-214.5881, -208.3918, -197.8773, -201.1089, -215.4769],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0231, device='cuda:0', dtype=torch.float64)
tensor([-214.6915, -208.3257, -197.7403, -200.9841, -215.4689],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0420, device='cuda:0', dtype=torch.float64)
tensor([-214.7840, -208.3218, -197.6587, -200.9190, -215.4878],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0310, device='cuda:0', dtype=torch.float64)
tensor([-214.8911, -208.3608, -197.6827, -200.9854, -215.5832],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0333, device='cuda:0', dtype=torch.float64)
tensor([-215.0754, -208.3991, -197.6030, -200.9991, -215.6951],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0362, device='cuda:0', dtype=torch.float64)
tensor([-215.3263, -208.3999, -197.4050, -200.9266, -215.8038],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0332, device='cuda:0', dtype=torch.float64)
tensor([-215.5503, -208.4846, -197.3616, -200.9976, -215.9709],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0271, device='cuda:0', dtype=torch.float64)
tensor([-215.7233, -208.6329, -197.4613, -201.1859, -216.1536],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0304, device='cuda:0', dtype=torch.float64)
tensor([-215.8781, -208.7138, -197.5005, -201.3188, -216.2810],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0245, device='cuda:0', dtype=torch.float64)
tensor([-215.9953, -208.8536, -197.6504, -201.5463, -216.4467],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0266, device='cuda:0', dtype=torch.float64)
tensor([-216.1147, -208.9159, -197.6654, -201.6486, -216.5304],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0340, device='cuda:0', dtype=torch.float64)
tensor([-216.2347, -208.8568, -197.5230, -201.6103, -216.5203],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0269, device='cuda:0', dtype=torch.float64)
tensor([-216.2841, -208.8869, -197.5476, -201.6748, -216.5455],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0208, device='cuda:0', dtype=torch.float64)
tensor([-216.3447, -208.7918, -197.3838, -201.5391, -216.4886],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0225, device='cuda:0', dtype=torch.float64)
tensor([-216.4586, -208.6084, -197.0694, -201.2434, -216.4166],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0252, device='cuda:0', dtype=torch.float64)
tensor([-216.5006, -208.4719, -196.8501, -200.9813, -216.3136],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0274, device='cuda:0', dtype=torch.float64)
tensor([-216.5562, -208.3389, -196.6241, -200.7183, -216.2149],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0335, device='cuda:0', dtype=torch.float64)
tensor([-216.4867, -208.4047, -196.7480, -200.7327, -216.1924],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0275, device='cuda:0', dtype=torch.float64)
tensor([-216.3877, -208.4937, -196.9243, -200.7863, -216.1609],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0208, device='cuda:0', dtype=torch.float64)
tensor([-216.2617, -208.5929, -197.1557, -200.8765, -216.1285],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0345, device='cuda:0', dtype=torch.float64)
tensor([-216.1665, -208.7283, -197.4149, -201.0296, -216.1461],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0294, device='cuda:0', dtype=torch.float64)
tensor([-215.9893, -208.8643, -197.7418, -201.2132, -216.1050],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0305, device='cuda:0', dtype=torch.float64)
tensor([-215.7720, -208.9778, -198.1034, -201.3810, -216.0469],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0292, device='cuda:0', dtype=torch.float64)
tensor([-215.5575, -209.0522, -198.3968, -201.4808, -215.9564],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0211, device='cuda:0', dtype=torch.float64)
tensor([-215.3390, -209.1170, -198.6670, -201.5445, -215.8372],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0244, device='cuda:0', dtype=torch.float64)
tensor([-215.2091, -209.1410, -198.7768, -201.4829, -215.7393],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0276, device='cuda:0', dtype=torch.float64)
tensor([-215.1260, -209.2626, -198.9757, -201.5271, -215.7413],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0243, device='cuda:0', dtype=torch.float64)
tensor([-215.0242, -209.2796, -199.0341, -201.4397, -215.6361],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0287, device='cuda:0', dtype=torch.float64)
tensor([-214.9651, -209.1654, -198.8879, -201.1936, -215.4536],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0278, device='cuda:0', dtype=torch.float64)
tensor([-214.8917, -208.9488, -198.6498, -200.8753, -215.2033],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0284, device='cuda:0', dtype=torch.float64)
tensor([-214.8350, -208.7887, -198.4829, -200.6232, -215.0042],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0271, device='cuda:0', dtype=torch.float64)
tensor([-214.7680, -208.6017, -198.2992, -200.3454, -214.7886],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0241, device='cuda:0', dtype=torch.float64)
tensor([-214.7489, -208.3332, -197.9976, -199.9857, -214.5448],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0203, device='cuda:0', dtype=torch.float64)
tensor([-214.7671, -208.1256, -197.7781, -199.7473, -214.3907],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0211, device='cuda:0', dtype=torch.float64)
tensor([-214.7910, -208.0010, -197.6702, -199.6192, -214.3129],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0309, device='cuda:0', dtype=torch.float64)
tensor([-214.7914, -208.0305, -197.7290, -199.6487, -214.3147],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0247, device='cuda:0', dtype=torch.float64)
tensor([-214.8167, -208.0814, -197.7824, -199.6816, -214.3453],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0362, device='cuda:0', dtype=torch.float64)
tensor([-214.8527, -208.2633, -198.0112, -199.9108, -214.5156],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0322, device='cuda:0', dtype=torch.float64)
tensor([-214.8758, -208.4581, -198.3018, -200.1988, -214.7110],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0228, device='cuda:0', dtype=torch.float64)
tensor([-214.9051, -208.6369, -198.5614, -200.4604, -214.8837],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0225, device='cuda:0', dtype=torch.float64)
tensor([-214.9529, -208.7860, -198.7490, -200.6604, -215.0416],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0266, device='cuda:0', dtype=torch.float64)
tensor([-215.0040, -208.9587, -198.9462, -200.8530, -215.2022],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0204, device='cuda:0', dtype=torch.float64)
tensor([-215.0731, -209.0962, -199.1019, -201.0176, -215.3564],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0199, device='cuda:0', dtype=torch.float64)
tensor([-215.2127, -209.2524, -199.2055, -201.1602, -215.5820],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0259, device='cuda:0', dtype=torch.float64)
tensor([-215.3487, -209.4339, -199.3309, -201.3183, -215.8143],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0220, device='cuda:0', dtype=torch.float64)
tensor([-215.5043, -209.5497, -199.3325, -201.3933, -215.9934],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0199, device='cuda:0', dtype=torch.float64)
tensor([-215.6500, -209.5566, -199.1879, -201.3284, -216.0761],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0236, device='cuda:0', dtype=torch.float64)
tensor([-215.7766, -209.5711, -199.0614, -201.2716, -216.1525],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0209, device='cuda:0', dtype=torch.float64)
tensor([-215.8826, -209.6242, -199.0344, -201.2868, -216.2536],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0290, device='cuda:0', dtype=torch.float64)
tensor([-215.9770, -209.5706, -198.8748, -201.1710, -216.2663],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0212, device='cuda:0', dtype=torch.float64)
tensor([-216.0223, -209.5090, -198.7619, -201.1099, -216.2267],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0226, device='cuda:0', dtype=torch.float64)
tensor([-216.0150, -209.5430, -198.8522, -201.2175, -216.2425],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0219, device='cuda:0', dtype=torch.float64)
tensor([-215.9902, -209.5074, -198.8658, -201.2422, -216.1982],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0239, device='cuda:0', dtype=torch.float64)
tensor([-215.9927, -209.4128, -198.7782, -201.1811, -216.1350],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0291, device='cuda:0', dtype=torch.float64)
tensor([-215.9665, -209.3835, -198.8137, -201.2193, -216.1246],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0202, device='cuda:0', dtype=torch.float64)
tensor([-215.9826, -209.3063, -198.7194, -201.1506, -216.0754],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0215, device='cuda:0', dtype=torch.float64)
tensor([-215.9367, -209.2125, -198.6761, -201.0930, -215.9719],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0182, device='cuda:0', dtype=torch.float64)
tensor([-215.9015, -209.0756, -198.5568, -200.9657, -215.8448],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0253, device='cuda:0', dtype=torch.float64)
tensor([-215.8349, -208.9446, -198.4501, -200.8361, -215.6911],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0324, device='cuda:0', dtype=torch.float64)
tensor([-215.7276, -208.9516, -198.5699, -200.8951, -215.6242],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0309, device='cuda:0', dtype=torch.float64)
tensor([-215.6020, -209.0369, -198.7968, -201.0357, -215.6034],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0307, device='cuda:0', dtype=torch.float64)
tensor([-215.5137, -209.1085, -198.9552, -201.1125, -215.5808],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0316, device='cuda:0', dtype=torch.float64)
tensor([-215.4274, -209.1306, -199.0585, -201.1296, -215.5317],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0216, device='cuda:0', dtype=torch.float64)
tensor([-215.3763, -209.2534, -199.2680, -201.2767, -215.5870],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0232, device='cuda:0', dtype=torch.float64)
tensor([-215.3350, -209.3859, -199.5129, -201.4616, -215.6825],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0304, device='cuda:0', dtype=torch.float64)
tensor([-215.2727, -209.5358, -199.8228, -201.6864, -215.7907],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0230, device='cuda:0', dtype=torch.float64)
tensor([-215.2456, -209.6702, -200.0700, -201.8492, -215.9071],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0320, device='cuda:0', dtype=torch.float64)
tensor([-215.2521, -209.7570, -200.1953, -201.9317, -215.9965],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0240, device='cuda:0', dtype=torch.float64)
tensor([-215.2824, -209.7675, -200.2032, -201.9186, -216.0451],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0247, device='cuda:0', dtype=torch.float64)
tensor([-215.3449, -209.7218, -200.0455, -201.7587, -216.0323],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0273, device='cuda:0', dtype=torch.float64)
tensor([-215.4272, -209.7036, -199.8873, -201.6027, -216.0511],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0206, device='cuda:0', dtype=torch.float64)
tensor([-215.5422, -209.6209, -199.6162, -201.3560, -216.0329],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0178, device='cuda:0', dtype=torch.float64)
tensor([-215.6406, -209.5307, -199.3485, -201.1159, -216.0023],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0230, device='cuda:0', dtype=torch.float64)
tensor([-215.7446, -209.4218, -199.0829, -200.8748, -215.9723],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0186, device='cuda:0', dtype=torch.float64)
tensor([-215.7898, -209.3554, -198.9439, -200.7265, -215.9449],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0239, device='cuda:0', dtype=torch.float64)
tensor([-215.8559, -209.3199, -198.8319, -200.6389, -215.9595],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0154, device='cuda:0', dtype=torch.float64)
tensor([-215.8717, -209.2800, -198.7371, -200.5442, -215.9344],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0266, device='cuda:0', dtype=torch.float64)
tensor([-215.8712, -209.2820, -198.7248, -200.5328, -215.9225],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0169, device='cuda:0', dtype=torch.float64)
tensor([-215.8794, -209.2743, -198.6652, -200.4797, -215.8988],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0211, device='cuda:0', dtype=torch.float64)
tensor([-215.8825, -209.3845, -198.7747, -200.5821, -215.9611],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0180, device='cuda:0', dtype=torch.float64)
tensor([-215.8908, -209.4622, -198.8531, -200.6425, -216.0090],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0255, device='cuda:0', dtype=torch.float64)
tensor([-215.9043, -209.5777, -198.9878, -200.7849, -216.0983],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0182, device='cuda:0', dtype=torch.float64)
tensor([-215.9135, -209.7408, -199.1856, -200.9703, -216.2202],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0171, device='cuda:0', dtype=torch.float64)
tensor([-215.9500, -209.9394, -199.4060, -201.1926, -216.3723],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0307, device='cuda:0', dtype=torch.float64)
tensor([-215.9733, -210.1352, -199.6452, -201.4252, -216.5214],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0167, device='cuda:0', dtype=torch.float64)
tensor([-216.0104, -210.3044, -199.8327, -201.6189, -216.6568],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0242, device='cuda:0', dtype=torch.float64)
tensor([-216.0463, -210.4338, -199.9895, -201.7985, -216.7702],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0315, device='cuda:0', dtype=torch.float64)
tensor([-216.0572, -210.4013, -199.9136, -201.7670, -216.7260],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0251, device='cuda:0', dtype=torch.float64)
tensor([-216.0346, -210.3547, -199.8761, -201.7527, -216.6525],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0250, device='cuda:0', dtype=torch.float64)
tensor([-215.9917, -210.2165, -199.7456, -201.6523, -216.4987],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0226, device='cuda:0', dtype=torch.float64)
tensor([-215.9736, -209.9660, -199.4030, -201.3566, -216.2579],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0238, device='cuda:0', dtype=torch.float64)
tensor([-215.9107, -209.8254, -199.2723, -201.2490, -216.0848],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0247, device='cuda:0', dtype=torch.float64)
tensor([-215.8220, -209.6909, -199.1513, -201.1166, -215.9012],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0225, device='cuda:0', dtype=torch.float64)
tensor([-215.7755, -209.5469, -199.0174, -200.9878, -215.7451],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0195, device='cuda:0', dtype=torch.float64)
tensor([-215.7362, -209.4547, -198.9539, -200.9300, -215.6334],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0239, device='cuda:0', dtype=torch.float64)
tensor([-215.7422, -209.3319, -198.7907, -200.7827, -215.5138],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0196, device='cuda:0', dtype=torch.float64)
tensor([-215.7624, -209.2746, -198.6941, -200.6948, -215.4550],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0154, device='cuda:0', dtype=torch.float64)
tensor([-215.7739, -209.2743, -198.6760, -200.6765, -215.4343],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0220, device='cuda:0', dtype=torch.float64)
tensor([-215.7504, -209.3876, -198.8346, -200.8189, -215.4733],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0199, device='cuda:0', dtype=torch.float64)
tensor([-215.7471, -209.4508, -198.8790, -200.8424, -215.4668],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0235, device='cuda:0', dtype=torch.float64)
tensor([-215.7032, -209.5390, -199.0109, -200.9252, -215.4768],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0274, device='cuda:0', dtype=torch.float64)
tensor([-215.6497, -209.6335, -199.1601, -201.0014, -215.4823],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0214, device='cuda:0', dtype=torch.float64)
tensor([-215.6145, -209.6973, -199.2760, -201.0715, -215.4925],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0221, device='cuda:0', dtype=torch.float64)
tensor([-215.5458, -209.8305, -199.4977, -201.2008, -215.5188],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0186, device='cuda:0', dtype=torch.float64)
tensor([-215.4752, -210.0101, -199.7953, -201.3970, -215.5900],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0201, device='cuda:0', dtype=torch.float64)
tensor([-215.3844, -210.1629, -200.0653, -201.5554, -215.6139],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0257, device='cuda:0', dtype=torch.float64)
tensor([-215.2981, -210.3140, -200.3383, -201.7319, -215.6427],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0163, device='cuda:0', dtype=torch.float64)
tensor([-215.2423, -210.3854, -200.4621, -201.7778, -215.6198],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0199, device='cuda:0', dtype=torch.float64)
tensor([-215.1962, -210.4683, -200.6364, -201.8874, -215.6309],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0148, device='cuda:0', dtype=torch.float64)
tensor([-215.1716, -210.5648, -200.7990, -201.9877, -215.6700],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0197, device='cuda:0', dtype=torch.float64)
tensor([-215.1584, -210.6164, -200.8786, -202.0116, -215.6718],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0204, device='cuda:0', dtype=torch.float64)
tensor([-215.1635, -210.5979, -200.8511, -201.9233, -215.6403],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0238, device='cuda:0', dtype=torch.float64)
tensor([-215.2051, -210.5427, -200.7424, -201.7993, -215.6003],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0162, device='cuda:0', dtype=torch.float64)
tensor([-215.2590, -210.4223, -200.5193, -201.5734, -215.5188],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0174, device='cuda:0', dtype=torch.float64)
tensor([-215.3375, -210.3145, -200.3099, -201.3688, -215.4735],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0157, device='cuda:0', dtype=torch.float64)
tensor([-215.4339, -210.2003, -200.0719, -201.1505, -215.4437],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0193, device='cuda:0', dtype=torch.float64)
tensor([-215.5101, -210.1045, -199.8912, -200.9882, -215.4159],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0203, device='cuda:0', dtype=torch.float64)
tensor([-215.5591, -209.9043, -199.6139, -200.7483, -215.2964],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0184, device='cuda:0', dtype=torch.float64)
tensor([-215.6243, -209.7232, -199.3343, -200.5061, -215.1848],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0204, device='cuda:0', dtype=torch.float64)
tensor([-215.6911, -209.5774, -199.0724, -200.2854, -215.0813],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0194, device='cuda:0', dtype=torch.float64)
tensor([-215.6991, -209.4887, -198.9486, -200.1684, -214.9804],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0193, device='cuda:0', dtype=torch.float64)
tensor([-215.6798, -209.4580, -198.9528, -200.1413, -214.9252],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0161, device='cuda:0', dtype=torch.float64)
tensor([-215.6632, -209.4521, -198.9834, -200.1409, -214.8989],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0248, device='cuda:0', dtype=torch.float64)
tensor([-215.6405, -209.5661, -199.1709, -200.2823, -214.9635],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0157, device='cuda:0', dtype=torch.float64)
tensor([-215.5418, -209.8312, -199.6434, -200.6728, -215.1090],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0210, device='cuda:0', dtype=torch.float64)
tensor([-215.4546, -210.1201, -200.1413, -201.0850, -215.2738],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0236, device='cuda:0', dtype=torch.float64)
tensor([-215.4116, -210.3690, -200.5399, -201.4240, -215.4313],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0200, device='cuda:0', dtype=torch.float64)
tensor([-215.4316, -210.5438, -200.7664, -201.6395, -215.5651],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0232, device='cuda:0', dtype=torch.float64)
tensor([-215.4587, -210.7198, -200.9871, -201.8335, -215.7017],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0234, device='cuda:0', dtype=torch.float64)
tensor([-215.4491, -210.9096, -201.2667, -202.0399, -215.8311],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0226, device='cuda:0', dtype=torch.float64)
tensor([-215.4857, -211.0396, -201.4220, -202.1776, -215.9428],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0194, device='cuda:0', dtype=torch.float64)
tensor([-215.5546, -211.0534, -201.3686, -202.1598, -215.9755],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0202, device='cuda:0', dtype=torch.float64)
tensor([-215.6480, -211.0184, -201.2169, -202.0524, -215.9896],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0206, device='cuda:0', dtype=torch.float64)
tensor([-215.7767, -210.8976, -200.8743, -201.8043, -215.9522],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0233, device='cuda:0', dtype=torch.float64)
tensor([-215.8613, -210.7378, -200.5320, -201.5419, -215.8601],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0157, device='cuda:0', dtype=torch.float64)
tensor([-215.9363, -210.5584, -200.1520, -201.2201, -215.7335],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0134, device='cuda:0', dtype=torch.float64)
tensor([-216.0136, -210.3543, -199.7446, -200.8701, -215.5875],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0288, device='cuda:0', dtype=torch.float64)
tensor([-216.0742, -210.1930, -199.4340, -200.5923, -215.4747],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0286, device='cuda:0', dtype=torch.float64)
tensor([-216.1570, -209.9565, -198.9907, -200.2200, -215.3053],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0161, device='cuda:0', dtype=torch.float64)
tensor([-216.1996, -209.8065, -198.6980, -199.9617, -215.1708],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0165, device='cuda:0', dtype=torch.float64)
tensor([-216.2232, -209.7744, -198.6011, -199.8680, -215.1334],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0196, device='cuda:0', dtype=torch.float64)
tensor([-216.2797, -209.7962, -198.5441, -199.8086, -215.1655],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0191, device='cuda:0', dtype=torch.float64)
tensor([-216.2678, -209.8504, -198.5908, -199.8058, -215.1935],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0257, device='cuda:0', dtype=torch.float64)
tensor([-216.2536, -209.9462, -198.7048, -199.8592, -215.2480],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0128, device='cuda:0', dtype=torch.float64)
tensor([-216.2315, -210.0205, -198.8374, -199.9392, -215.2974],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0197, device='cuda:0', dtype=torch.float64)
tensor([-216.2307, -210.1150, -198.9926, -200.0446, -215.3932],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0187, device='cuda:0', dtype=torch.float64)
tensor([-216.2440, -210.1847, -199.0954, -200.1147, -215.4805],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0147, device='cuda:0', dtype=torch.float64)
tensor([-216.2305, -210.2782, -199.2677, -200.2537, -215.5827],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0191, device='cuda:0', dtype=torch.float64)
tensor([-216.2100, -210.3681, -199.4576, -200.4208, -215.6830],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0199, device='cuda:0', dtype=torch.float64)
tensor([-216.1963, -210.4798, -199.6496, -200.5912, -215.7982],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0144, device='cuda:0', dtype=torch.float64)
tensor([-216.1673, -210.5595, -199.7943, -200.7193, -215.8607],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0170, device='cuda:0', dtype=torch.float64)
tensor([-216.1725, -210.6505, -199.9140, -200.8541, -215.9493],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0240, device='cuda:0', dtype=torch.float64)
tensor([-216.2044, -210.6757, -199.9300, -200.9215, -216.0019],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0165, device='cuda:0', dtype=torch.float64)
tensor([-216.2579, -210.7152, -199.9615, -201.0015, -216.0852],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0171, device='cuda:0', dtype=torch.float64)
tensor([-216.3535, -210.6831, -199.8513, -200.9754, -216.1426],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0193, device='cuda:0', dtype=torch.float64)
tensor([-216.4230, -210.6681, -199.7943, -200.9738, -216.1931],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0231, device='cuda:0', dtype=torch.float64)
tensor([-216.4897, -210.5703, -199.6310, -200.8747, -216.1763],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0158, device='cuda:0', dtype=torch.float64)
tensor([-216.5049, -210.4979, -199.5751, -200.8542, -216.1554],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0243, device='cuda:0', dtype=torch.float64)
tensor([-216.5295, -210.4062, -199.4850, -200.8093, -216.1274],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0229, device='cuda:0', dtype=torch.float64)
tensor([-216.5351, -210.3229, -199.4290, -200.7818, -216.1001],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0180, device='cuda:0', dtype=torch.float64)
tensor([-216.5155, -210.3315, -199.5133, -200.8493, -216.1296],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0200, device='cuda:0', dtype=torch.float64)
tensor([-216.4906, -210.4288, -199.7240, -201.0216, -216.2302],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0208, device='cuda:0', dtype=torch.float64)
tensor([-216.4686, -210.5517, -199.9450, -201.2021, -216.3313],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0184, device='cuda:0', dtype=torch.float64)
tensor([-216.4309, -210.6554, -200.1548, -201.3728, -216.3981],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0165, device='cuda:0', dtype=torch.float64)
tensor([-216.3710, -210.6801, -200.2336, -201.4161, -216.3677],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0145, device='cuda:0', dtype=torch.float64)
tensor([-216.3337, -210.7526, -200.3863, -201.5277, -216.4112],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0204, device='cuda:0', dtype=torch.float64)
tensor([-216.2974, -210.8018, -200.5094, -201.6252, -216.4316],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0249, device='cuda:0', dtype=torch.float64)
tensor([-216.2583, -210.8348, -200.5990, -201.6692, -216.4314],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0150, device='cuda:0', dtype=torch.float64)
tensor([-216.2058, -210.8222, -200.6118, -201.6368, -216.3746],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0212, device='cuda:0', dtype=torch.float64)
tensor([-216.1369, -210.8022, -200.6380, -201.6095, -216.2934],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0151, device='cuda:0', dtype=torch.float64)
tensor([-216.0950, -210.7361, -200.5713, -201.5162, -216.1908],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0156, device='cuda:0', dtype=torch.float64)
tensor([-216.0650, -210.6631, -200.4638, -201.3930, -216.0748],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0178, device='cuda:0', dtype=torch.float64)
tensor([-216.0140, -210.6095, -200.3878, -201.2817, -215.9530],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0131, device='cuda:0', dtype=torch.float64)
tensor([-216.0054, -210.4914, -200.1801, -201.0722, -215.8094],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0264, device='cuda:0', dtype=torch.float64)
tensor([-216.0936, -210.2650, -199.6962, -200.6897, -215.6201],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0223, device='cuda:0', dtype=torch.float64)
tensor([-216.1733, -210.1127, -199.3525, -200.4124, -215.4935],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0181, device='cuda:0', dtype=torch.float64)
tensor([-216.2111, -209.9221, -199.0182, -200.1222, -215.3229],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0170, device='cuda:0', dtype=torch.float64)
tensor([-216.2419, -209.8379, -198.8497, -199.9684, -215.2504],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0163, device='cuda:0', dtype=torch.float64)
tensor([-216.2666, -209.7937, -198.7731, -199.9141, -215.2286],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0212, device='cuda:0', dtype=torch.float64)
tensor([-216.2319, -209.7788, -198.7760, -199.8890, -215.1881],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0145, device='cuda:0', dtype=torch.float64)
tensor([-216.1704, -209.8872, -198.9998, -200.0735, -215.2457],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0217, device='cuda:0', dtype=torch.float64)
tensor([-216.0644, -210.0206, -199.3024, -200.2966, -215.2851],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0160, device='cuda:0', dtype=torch.float64)
tensor([-215.9547, -210.1790, -199.6501, -200.5508, -215.3420],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0218, device='cuda:0', dtype=torch.float64)
tensor([-215.8325, -210.4193, -200.1512, -200.9275, -215.4677],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0120, device='cuda:0', dtype=torch.float64)
tensor([-215.7176, -210.6493, -200.6252, -201.2699, -215.5838],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0152, device='cuda:0', dtype=torch.float64)
tensor([-215.6162, -210.8852, -201.1104, -201.6503, -215.7070],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0231, device='cuda:0', dtype=torch.float64)
tensor([-215.5633, -211.1086, -201.5468, -202.0060, -215.8497],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0455, device='cuda:0', dtype=torch.float64)
tensor([-215.5631, -211.2816, -201.8535, -202.2725, -215.9849],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0219, device='cuda:0', dtype=torch.float64)
tensor([-215.6303, -211.2935, -201.8156, -202.2748, -216.0229],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0205, device='cuda:0', dtype=torch.float64)
tensor([-215.7403, -211.3243, -201.7695, -202.2824, -216.1131],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0150, device='cuda:0', dtype=torch.float64)
tensor([-215.9097, -211.3034, -201.5724, -202.1819, -216.1970],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0237, device='cuda:0', dtype=torch.float64)
tensor([-216.1413, -211.1974, -201.1959, -201.9591, -216.2523],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0195, device='cuda:0', dtype=torch.float64)
tensor([-216.3645, -211.0656, -200.7925, -201.7082, -216.2737],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0210, device='cuda:0', dtype=torch.float64)
tensor([-216.6326, -210.9293, -200.3091, -201.4221, -216.2982],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0185, device='cuda:0', dtype=torch.float64)
tensor([-216.8805, -210.8649, -199.9644, -201.2460, -216.3705],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0137, device='cuda:0', dtype=torch.float64)
tensor([-217.1065, -210.8576, -199.7505, -201.1686, -216.4811],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0185, device='cuda:0', dtype=torch.float64)
tensor([-217.3491, -210.8261, -199.4616, -201.0233, -216.5686],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0147, device='cuda:0', dtype=torch.float64)
tensor([-217.5641, -210.8329, -199.2736, -200.9492, -216.6783],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0230, device='cuda:0', dtype=torch.float64)
tensor([-217.7570, -210.8250, -199.0697, -200.8528, -216.7563],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0143, device='cuda:0', dtype=torch.float64)
tensor([-217.8585, -210.8570, -198.9864, -200.8152, -216.8007],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0163, device='cuda:0', dtype=torch.float64)
tensor([-217.9141, -210.8702, -198.9420, -200.7803, -216.8204],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0144, device='cuda:0', dtype=torch.float64)
tensor([-217.8820, -210.8966, -199.0152, -200.8067, -216.8058],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0218, device='cuda:0', dtype=torch.float64)
tensor([-217.8138, -210.9187, -199.0947, -200.8205, -216.7613],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0137, device='cuda:0', dtype=torch.float64)
tensor([-217.7265, -210.9313, -199.1689, -200.8286, -216.6915],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0182, device='cuda:0', dtype=torch.float64)
tensor([-217.5697, -211.0440, -199.4614, -200.9810, -216.6713],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0163, device='cuda:0', dtype=torch.float64)
tensor([-217.4336, -211.1249, -199.6853, -201.0789, -216.6365],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0151, device='cuda:0', dtype=torch.float64)
tensor([-217.2741, -211.2063, -199.9414, -201.1902, -216.5913],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0160, device='cuda:0', dtype=torch.float64)
tensor([-217.1160, -211.2511, -200.1585, -201.2762, -216.5259],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0132, device='cuda:0', dtype=torch.float64)
tensor([-216.9827, -211.3327, -200.4311, -201.4335, -216.5131],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0163, device='cuda:0', dtype=torch.float64)
tensor([-216.7934, -211.4070, -200.7348, -201.5788, -216.4539],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0120, device='cuda:0', dtype=torch.float64)
tensor([-216.6151, -211.3706, -200.8701, -201.5823, -216.3129],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0118, device='cuda:0', dtype=torch.float64)
tensor([-216.4451, -211.2922, -200.9182, -201.5344, -216.1362],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0177, device='cuda:0', dtype=torch.float64)
tensor([-216.3010, -211.2330, -201.0034, -201.5266, -216.0081],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0176, device='cuda:0', dtype=torch.float64)
tensor([-216.1580, -211.1905, -201.1109, -201.5378, -215.8881],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0167, device='cuda:0', dtype=torch.float64)
tensor([-215.9940, -211.1739, -201.2660, -201.5835, -215.7722],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0148, device='cuda:0', dtype=torch.float64)
tensor([-215.8670, -211.1619, -201.3733, -201.6036, -215.6814],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0147, device='cuda:0', dtype=torch.float64)
tensor([-215.7858, -211.1473, -201.4489, -201.6306, -215.6302],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0117, device='cuda:0', dtype=torch.float64)
tensor([-215.7222, -211.1180, -201.4823, -201.6251, -215.5765],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0160, device='cuda:0', dtype=torch.float64)
tensor([-215.6741, -211.1103, -201.5082, -201.6292, -215.5407],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0200, device='cuda:0', dtype=torch.float64)
tensor([-215.6563, -211.1169, -201.5122, -201.6255, -215.5272],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0117, device='cuda:0', dtype=torch.float64)
tensor([-215.6814, -211.1004, -201.4369, -201.5741, -215.5249],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0216, device='cuda:0', dtype=torch.float64)
tensor([-215.7479, -211.0601, -201.2634, -201.4446, -215.5189],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0119, device='cuda:0', dtype=torch.float64)
tensor([-215.8303, -210.9880, -201.0269, -201.2608, -215.4960],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0121, device='cuda:0', dtype=torch.float64)
tensor([-215.9174, -210.9097, -200.7425, -201.0409, -215.4509],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0152, device='cuda:0', dtype=torch.float64)
tensor([-216.0016, -210.8179, -200.4374, -200.7953, -215.3870],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0233, device='cuda:0', dtype=torch.float64)
tensor([-216.0713, -210.8404, -200.3419, -200.7274, -215.4170],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0111, device='cuda:0', dtype=torch.float64)
tensor([-216.1389, -210.8645, -200.2515, -200.6585, -215.4458],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0155, device='cuda:0', dtype=torch.float64)
tensor([-216.2164, -210.9241, -200.2038, -200.6295, -215.5154],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0131, device='cuda:0', dtype=torch.float64)
tensor([-216.3264, -210.9231, -200.0300, -200.5257, -215.5556],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0155, device='cuda:0', dtype=torch.float64)
tensor([-216.4271, -210.9864, -199.9837, -200.5393, -215.6484],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0136, device='cuda:0', dtype=torch.float64)
tensor([-216.5280, -211.0144, -199.8642, -200.4863, -215.6960],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0154, device='cuda:0', dtype=torch.float64)
tensor([-216.6328, -211.0157, -199.7013, -200.3815, -215.7237],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0142, device='cuda:0', dtype=torch.float64)
tensor([-216.7277, -211.0311, -199.5910, -200.3452, -215.7622],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0198, device='cuda:0', dtype=torch.float64)
tensor([-216.8100, -211.0854, -199.5821, -200.3936, -215.8378],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0150, device='cuda:0', dtype=torch.float64)
tensor([-216.8617, -211.1262, -199.5565, -200.4045, -215.8770],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0237, device='cuda:0', dtype=torch.float64)
tensor([-216.8749, -211.1944, -199.6152, -200.4592, -215.9175],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0176, device='cuda:0', dtype=torch.float64)
tensor([-216.8661, -211.2465, -199.6808, -200.5174, -215.9329],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0201, device='cuda:0', dtype=torch.float64)
tensor([-216.7962, -211.3421, -199.8563, -200.6386, -215.9379],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0136, device='cuda:0', dtype=torch.float64)
tensor([-216.7338, -211.4727, -200.0751, -200.7864, -215.9679],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0120, device='cuda:0', dtype=torch.float64)
tensor([-216.6713, -211.5659, -200.2448, -200.9018, -215.9650],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0144, device='cuda:0', dtype=torch.float64)
tensor([-216.5987, -211.7075, -200.4981, -201.0815, -215.9928],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0141, device='cuda:0', dtype=torch.float64)
tensor([-216.5179, -211.8538, -200.7469, -201.2587, -216.0074],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0225, device='cuda:0', dtype=torch.float64)
tensor([-216.4048, -212.0223, -201.0675, -201.4661, -216.0268],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0110, device='cuda:0', dtype=torch.float64)
tensor([-216.3272, -212.1472, -201.2973, -201.6198, -216.0393],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0117, device='cuda:0', dtype=torch.float64)
tensor([-216.2918, -212.2885, -201.5092, -201.7924, -216.0735],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0148, device='cuda:0', dtype=torch.float64)
tensor([-216.2813, -212.3771, -201.6298, -201.9184, -216.0819],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0146, device='cuda:0', dtype=torch.float64)
tensor([-216.2757, -212.3702, -201.5862, -201.9096, -216.0206],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0150, device='cuda:0', dtype=torch.float64)
tensor([-216.2530, -212.3127, -201.4887, -201.8355, -215.9244],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0104, device='cuda:0', dtype=torch.float64)
tensor([-216.2675, -212.1715, -201.2276, -201.6313, -215.7943],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0143, device='cuda:0', dtype=torch.float64)
tensor([-216.2837, -212.0056, -200.9205, -201.3835, -215.6395],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0209, device='cuda:0', dtype=torch.float64)
tensor([-216.2848, -211.8282, -200.6227, -201.1361, -215.4668],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0153, device='cuda:0', dtype=torch.float64)
tensor([-216.2865, -211.6496, -200.3403, -200.9025, -215.3023],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0121, device='cuda:0', dtype=torch.float64)
tensor([-216.3141, -211.5091, -200.0937, -200.7112, -215.1875],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0116, device='cuda:0', dtype=torch.float64)
tensor([-216.4093, -211.3486, -199.7865, -200.5105, -215.1129],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0136, device='cuda:0', dtype=torch.float64)
tensor([-216.4902, -211.1925, -199.5259, -200.3394, -215.0390],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0217, device='cuda:0', dtype=torch.float64)
tensor([-216.5606, -211.1054, -199.3932, -200.2705, -215.0209],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0154, device='cuda:0', dtype=torch.float64)
tensor([-216.5929, -211.0365, -199.3304, -200.2364, -214.9920],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0150, device='cuda:0', dtype=torch.float64)
tensor([-216.5963, -211.0203, -199.4144, -200.3255, -215.0133],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0138, device='cuda:0', dtype=torch.float64)
tensor([-216.6276, -211.0188, -199.4854, -200.4046, -215.0588],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0123, device='cuda:0', dtype=torch.float64)
tensor([-216.6511, -211.0293, -199.5683, -200.4875, -215.1074],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0172, device='cuda:0', dtype=torch.float64)
tensor([-216.6530, -211.0539, -199.7151, -200.6108, -215.1720],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0144, device='cuda:0', dtype=torch.float64)
tensor([-216.6296, -211.0575, -199.8360, -200.7051, -215.1856],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0145, device='cuda:0', dtype=torch.float64)
tensor([-216.5945, -211.0635, -199.9799, -200.8044, -215.2034],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0195, device='cuda:0', dtype=torch.float64)
tensor([-216.5691, -211.0448, -200.0704, -200.8623, -215.2105],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0137, device='cuda:0', dtype=torch.float64)
tensor([-216.5301, -211.0482, -200.1916, -200.9541, -215.2251],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0152, device='cuda:0', dtype=torch.float64)
tensor([-216.5037, -211.0257, -200.2546, -201.0099, -215.2260],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0141, device='cuda:0', dtype=torch.float64)
tensor([-216.5163, -210.9645, -200.2031, -200.9876, -215.2063],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0206, device='cuda:0', dtype=torch.float64)
tensor([-216.5244, -210.9056, -200.1515, -200.9592, -215.1721],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0153, device='cuda:0', dtype=torch.float64)
tensor([-216.5017, -210.8895, -200.1889, -200.9715, -215.1531],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0107, device='cuda:0', dtype=torch.float64)
tensor([-216.4803, -210.9193, -200.3051, -201.0494, -215.1749],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0161, device='cuda:0', dtype=torch.float64)
tensor([-216.4569, -210.9894, -200.5036, -201.2017, -215.2295],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0118, device='cuda:0', dtype=torch.float64)
tensor([-216.4088, -211.0392, -200.6868, -201.3398, -215.2534],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0161, device='cuda:0', dtype=torch.float64)
tensor([-216.4051, -211.0452, -200.7192, -201.3842, -215.2461],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0163, device='cuda:0', dtype=torch.float64)
tensor([-216.4169, -211.0106, -200.6604, -201.3550, -215.2089],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0170, device='cuda:0', dtype=torch.float64)
tensor([-216.4892, -210.9641, -200.4851, -201.2631, -215.1779],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0183, device='cuda:0', dtype=torch.float64)
tensor([-216.5938, -210.9142, -200.3030, -201.1784, -215.1712],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0178, device='cuda:0', dtype=torch.float64)
tensor([-216.6924, -210.8786, -200.1066, -201.0774, -215.1551],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0124, device='cuda:0', dtype=torch.float64)
tensor([-216.7897, -210.8475, -199.9176, -200.9962, -215.1361],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0134, device='cuda:0', dtype=torch.float64)
tensor([-216.8658, -210.8246, -199.7785, -200.9618, -215.1161],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0123, device='cuda:0', dtype=torch.float64)
tensor([-216.9053, -210.8147, -199.7152, -200.9653, -215.1025],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0150, device='cuda:0', dtype=torch.float64)
tensor([-216.9246, -210.8349, -199.7204, -201.0142, -215.1071],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0111, device='cuda:0', dtype=torch.float64)
tensor([-216.9319, -210.8218, -199.6773, -201.0060, -215.0684],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0136, device='cuda:0', dtype=torch.float64)
tensor([-216.9089, -210.8195, -199.6861, -201.0306, -215.0304],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0198, device='cuda:0', dtype=torch.float64)
tensor([-216.8897, -210.8385, -199.7484, -201.0864, -215.0227],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0111, device='cuda:0', dtype=torch.float64)
tensor([-216.8756, -210.8795, -199.8400, -201.1527, -215.0396],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0190, device='cuda:0', dtype=torch.float64)
tensor([-216.8845, -210.9457, -199.9526, -201.2500, -215.0952],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0095, device='cuda:0', dtype=torch.float64)
tensor([-216.8608, -210.9968, -200.0861, -201.3492, -215.1339],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0152, device='cuda:0', dtype=torch.float64)
tensor([-216.8195, -211.1217, -200.3678, -201.5495, -215.2191],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0171, device='cuda:0', dtype=torch.float64)
tensor([-216.7962, -211.1484, -200.4412, -201.5769, -215.2208],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0171, device='cuda:0', dtype=torch.float64)
tensor([-216.8275, -211.1528, -200.4303, -201.5657, -215.2359],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0138, device='cuda:0', dtype=torch.float64)
tensor([-216.8664, -211.1754, -200.4493, -201.5881, -215.2726],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0156, device='cuda:0', dtype=torch.float64)
tensor([-216.8669, -211.2148, -200.4997, -201.6051, -215.2856],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0109, device='cuda:0', dtype=torch.float64)
tensor([-216.8770, -211.2641, -200.5408, -201.6086, -215.3054],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0152, device='cuda:0', dtype=torch.float64)
tensor([-216.9138, -211.2772, -200.5036, -201.5788, -215.3009],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0100, device='cuda:0', dtype=torch.float64)
tensor([-216.8955, -211.3070, -200.5500, -201.5861, -215.2862],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0113, device='cuda:0', dtype=torch.float64)
tensor([-216.9166, -211.3169, -200.5307, -201.5544, -215.2845],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0180, device='cuda:0', dtype=torch.float64)
tensor([-216.9206, -211.3310, -200.5481, -201.5492, -215.2758],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0128, device='cuda:0', dtype=torch.float64)
tensor([-216.9253, -211.3226, -200.5041, -201.4792, -215.2375],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0106, device='cuda:0', dtype=torch.float64)
tensor([-216.8714, -211.3223, -200.5188, -201.4281, -215.1700],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0103, device='cuda:0', dtype=torch.float64)
tensor([-216.8137, -211.3357, -200.5596, -201.3975, -215.1153],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0100, device='cuda:0', dtype=torch.float64)
tensor([-216.7648, -211.3009, -200.5364, -201.3195, -215.0368],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0171, device='cuda:0', dtype=torch.float64)
tensor([-216.7199, -211.2876, -200.5483, -201.2914, -214.9836],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0155, device='cuda:0', dtype=torch.float64)
tensor([-216.6812, -211.3112, -200.6232, -201.3381, -214.9691],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0158, device='cuda:0', dtype=torch.float64)
tensor([-216.6583, -211.3170, -200.6491, -201.3535, -214.9494],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0123, device='cuda:0', dtype=torch.float64)
tensor([-216.6508, -211.3204, -200.6400, -201.3456, -214.9254],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0132, device='cuda:0', dtype=torch.float64)
tensor([-216.6364, -211.3134, -200.6110, -201.3121, -214.8819],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0136, device='cuda:0', dtype=torch.float64)
tensor([-216.6514, -211.3198, -200.5899, -201.3032, -214.8740],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0119, device='cuda:0', dtype=torch.float64)
tensor([-216.7139, -211.2356, -200.3449, -201.1258, -214.8064],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0192, device='cuda:0', dtype=torch.float64)
tensor([-216.7921, -211.1955, -200.1802, -201.0307, -214.7916],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0123, device='cuda:0', dtype=torch.float64)
tensor([-216.8560, -211.1658, -200.0548, -200.9599, -214.7848],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0099, device='cuda:0', dtype=torch.float64)
tensor([-216.9080, -211.1341, -199.9315, -200.8818, -214.7653],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0111, device='cuda:0', dtype=torch.float64)
tensor([-216.9863, -211.1192, -199.8250, -200.8391, -214.7802],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0142, device='cuda:0', dtype=torch.float64)
tensor([-217.0215, -211.1040, -199.7680, -200.8252, -214.7798],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0123, device='cuda:0', dtype=torch.float64)
tensor([-217.0398, -211.1192, -199.7901, -200.8782, -214.8049],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0139, device='cuda:0', dtype=torch.float64)
tensor([-217.0515, -211.1528, -199.8492, -200.9595, -214.8431],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0138, device='cuda:0', dtype=torch.float64)
tensor([-217.0368, -211.1176, -199.8108, -200.9429, -214.8119],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0128, device='cuda:0', dtype=torch.float64)
tensor([-217.0082, -211.1218, -199.8474, -200.9901, -214.8096],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0196, device='cuda:0', dtype=torch.float64)
tensor([-216.9674, -211.1438, -199.9685, -201.1061, -214.8368],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0101, device='cuda:0', dtype=torch.float64)
tensor([-216.9324, -211.1910, -200.1259, -201.2490, -214.8868],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0085, device='cuda:0', dtype=torch.float64)
tensor([-216.8739, -211.2641, -200.3609, -201.4431, -214.9524],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0160, device='cuda:0', dtype=torch.float64)
tensor([-216.8387, -211.3393, -200.5731, -201.6266, -215.0292],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0106, device='cuda:0', dtype=torch.float64)
tensor([-216.8062, -211.3914, -200.7659, -201.7985, -215.0935],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0171, device='cuda:0', dtype=torch.float64)
tensor([-216.7837, -211.4576, -200.9763, -201.9886, -215.1765],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0119, device='cuda:0', dtype=torch.float64)
tensor([-216.7692, -211.4663, -201.0471, -202.0540, -215.2016],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0142, device='cuda:0', dtype=torch.float64)
tensor([-216.6723, -211.4465, -201.1205, -202.0685, -215.1476],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0119, device='cuda:0', dtype=torch.float64)
tensor([-216.5456, -211.4102, -201.1670, -202.0567, -215.0452],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0122, device='cuda:0', dtype=torch.float64)
tensor([-216.4197, -211.3842, -201.2032, -202.0375, -214.9397],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0133, device='cuda:0', dtype=torch.float64)
tensor([-216.3491, -211.3337, -201.1316, -201.9306, -214.8387],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0084, device='cuda:0', dtype=torch.float64)
tensor([-216.2971, -211.2825, -201.0279, -201.8120, -214.7405],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0099, device='cuda:0', dtype=torch.float64)
tensor([-216.2752, -211.2665, -200.9470, -201.7168, -214.6913],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0185, device='cuda:0', dtype=torch.float64)
tensor([-216.2756, -211.2424, -200.8208, -201.6046, -214.6364],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0112, device='cuda:0', dtype=torch.float64)
tensor([-216.2748, -211.2257, -200.7115, -201.4912, -214.5778],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0131, device='cuda:0', dtype=torch.float64)
tensor([-216.2799, -211.1918, -200.5564, -201.3377, -214.5072],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0187, device='cuda:0', dtype=torch.float64)
tensor([-216.2909, -211.1963, -200.4306, -201.2038, -214.4472],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0087, device='cuda:0', dtype=torch.float64)
tensor([-216.3027, -211.2166, -200.3585, -201.1222, -214.4165],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0116, device='cuda:0', dtype=torch.float64)
tensor([-216.3003, -211.2548, -200.3295, -201.0747, -214.3936],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0102, device='cuda:0', dtype=torch.float64)
tensor([-216.3145, -211.2922, -200.3273, -201.0716, -214.3973],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0174, device='cuda:0', dtype=torch.float64)
tensor([-216.3431, -211.3468, -200.3680, -201.1226, -214.4391],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0148, device='cuda:0', dtype=torch.float64)
tensor([-216.3549, -211.3971, -200.4088, -201.1822, -214.4607],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0112, device='cuda:0', dtype=torch.float64)
tensor([-216.3388, -211.4386, -200.4441, -201.2066, -214.4533],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0143, device='cuda:0', dtype=torch.float64)
tensor([-216.3205, -211.4860, -200.5014, -201.2430, -214.4592],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0117, device='cuda:0', dtype=torch.float64)
tensor([-216.3117, -211.5325, -200.5413, -201.2588, -214.4757],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0098, device='cuda:0', dtype=torch.float64)
tensor([-216.3106, -211.5577, -200.5267, -201.2367, -214.4700],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0138, device='cuda:0', dtype=torch.float64)
tensor([-216.3233, -211.5737, -200.4578, -201.1548, -214.4500],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0132, device='cuda:0', dtype=torch.float64)
tensor([-216.3275, -211.6066, -200.4314, -201.1183, -214.4411],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0097, device='cuda:0', dtype=torch.float64)
tensor([-216.3770, -211.5994, -200.2952, -201.0143, -214.4148],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0128, device='cuda:0', dtype=torch.float64)
tensor([-216.4468, -211.6239, -200.2144, -200.9738, -214.4290],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0132, device='cuda:0', dtype=torch.float64)
tensor([-216.5103, -211.6916, -200.2190, -201.0002, -214.4748],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0072, device='cuda:0', dtype=torch.float64)
tensor([-216.5718, -211.7390, -200.2193, -201.0268, -214.5180],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0136, device='cuda:0', dtype=torch.float64)
tensor([-216.6357, -211.7973, -200.2192, -201.0447, -214.5717],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0122, device='cuda:0', dtype=torch.float64)
tensor([-216.7103, -211.8309, -200.1549, -201.0143, -214.6107],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0096, device='cuda:0', dtype=torch.float64)
tensor([-216.7703, -211.8387, -200.0345, -200.9360, -214.6076],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0084, device='cuda:0', dtype=torch.float64)
tensor([-216.8623, -211.8193, -199.8613, -200.8308, -214.6069],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0105, device='cuda:0', dtype=torch.float64)
tensor([-216.9373, -211.7991, -199.6977, -200.7242, -214.5984],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0135, device='cuda:0', dtype=torch.float64)
tensor([-216.9995, -211.7766, -199.5609, -200.6388, -214.5968],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0085, device='cuda:0', dtype=torch.float64)
tensor([-217.0325, -211.7790, -199.5627, -200.6689, -214.6394],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0090, device='cuda:0', dtype=torch.float64)
tensor([-217.0343, -211.7905, -199.6401, -200.7523, -214.6875],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0101, device='cuda:0', dtype=torch.float64)
tensor([-217.0173, -211.8219, -199.7471, -200.8548, -214.7414],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0090, device='cuda:0', dtype=torch.float64)
tensor([-216.9636, -211.8809, -199.9365, -201.0117, -214.8027],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0103, device='cuda:0', dtype=torch.float64)
tensor([-216.9378, -211.9644, -200.1185, -201.1743, -214.8865],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0185, device='cuda:0', dtype=torch.float64)
tensor([-216.8611, -212.0334, -200.2812, -201.2838, -214.9062],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0098, device='cuda:0', dtype=torch.float64)
tensor([-216.7892, -212.1050, -200.4558, -201.4035, -214.9254],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0125, device='cuda:0', dtype=torch.float64)
tensor([-216.7059, -212.1915, -200.6774, -201.5534, -214.9472],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0153, device='cuda:0', dtype=torch.float64)
tensor([-216.6486, -212.2782, -200.9050, -201.7250, -214.9951],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0120, device='cuda:0', dtype=torch.float64)
tensor([-216.5738, -212.3651, -201.1729, -201.9226, -215.0424],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0120, device='cuda:0', dtype=torch.float64)
tensor([-216.5370, -212.3950, -201.2950, -201.9975, -215.0595],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0114, device='cuda:0', dtype=torch.float64)
tensor([-216.4969, -212.3952, -201.3542, -202.0245, -215.0431],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0107, device='cuda:0', dtype=torch.float64)
tensor([-216.4484, -212.3814, -201.4154, -202.0511, -215.0158],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0125, device='cuda:0', dtype=torch.float64)
tensor([-216.4029, -212.3268, -201.3809, -201.9714, -214.9445],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0164, device='cuda:0', dtype=torch.float64)
tensor([-216.4028, -212.2427, -201.2210, -201.8085, -214.8542],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0100, device='cuda:0', dtype=torch.float64)
tensor([-216.4077, -212.1241, -201.0059, -201.6202, -214.7438],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0127, device='cuda:0', dtype=torch.float64)
tensor([-216.4241, -211.9668, -200.6847, -201.3515, -214.5912],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0115, device='cuda:0', dtype=torch.float64)
tensor([-216.4603, -211.8121, -200.3350, -201.0481, -214.4433],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0137, device='cuda:0', dtype=torch.float64)
tensor([-216.4843, -211.6843, -200.0566, -200.7995, -214.3182],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0090, device='cuda:0', dtype=torch.float64)
tensor([-216.4994, -211.5815, -199.8505, -200.6127, -214.2244],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0102, device='cuda:0', dtype=torch.float64)
tensor([-216.4865, -211.5579, -199.8133, -200.5542, -214.1947],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0116, device='cuda:0', dtype=torch.float64)
tensor([-216.5233, -211.5221, -199.7140, -200.4612, -214.1806],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0092, device='cuda:0', dtype=torch.float64)
tensor([-216.5487, -211.4826, -199.6231, -200.3783, -214.1558],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0119, device='cuda:0', dtype=torch.float64)
tensor([-216.5756, -211.4479, -199.5597, -200.3324, -214.1397],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0117, device='cuda:0', dtype=torch.float64)
tensor([-216.5597, -211.4482, -199.6183, -200.3650, -214.1340],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0109, device='cuda:0', dtype=torch.float64)
tensor([-216.5199, -211.4776, -199.7674, -200.4522, -214.1532],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0107, device='cuda:0', dtype=torch.float64)
tensor([-216.5267, -211.5291, -199.9121, -200.5595, -214.2165],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0116, device='cuda:0', dtype=torch.float64)
tensor([-216.4361, -211.5882, -200.1461, -200.7094, -214.2287],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0108, device='cuda:0', dtype=torch.float64)
tensor([-216.3287, -211.6588, -200.4040, -200.8609, -214.2410],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0153, device='cuda:0', dtype=torch.float64)
tensor([-216.2049, -211.7640, -200.7390, -201.0815, -214.2781],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0126, device='cuda:0', dtype=torch.float64)
tensor([-216.0931, -211.8450, -201.0196, -201.2544, -214.2938],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0132, device='cuda:0', dtype=torch.float64)
tensor([-216.0056, -211.9070, -201.2184, -201.3581, -214.2912],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0109, device='cuda:0', dtype=torch.float64)
tensor([-215.9724, -211.9316, -201.3051, -201.4219, -214.2758],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0073, device='cuda:0', dtype=torch.float64)
tensor([-215.9854, -211.9387, -201.3321, -201.4725, -214.2771],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0124, device='cuda:0', dtype=torch.float64)
tensor([-215.9993, -211.9454, -201.3371, -201.5028, -214.2641],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0174, device='cuda:0', dtype=torch.float64)
tensor([-216.0407, -211.9602, -201.3273, -201.5102, -214.2730],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0114, device='cuda:0', dtype=torch.float64)
tensor([-216.0753, -211.9370, -201.2299, -201.4315, -214.2339],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0173, device='cuda:0', dtype=torch.float64)
tensor([-216.1031, -211.9496, -201.1957, -201.4015, -214.2214],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0110, device='cuda:0', dtype=torch.float64)
tensor([-216.1130, -211.9769, -201.2221, -201.4186, -214.2249],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0083, device='cuda:0', dtype=torch.float64)
tensor([-216.1076, -212.0045, -201.2632, -201.4589, -214.2192],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0102, device='cuda:0', dtype=torch.float64)
tensor([-216.1177, -211.9840, -201.1935, -201.4038, -214.1783],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0082, device='cuda:0', dtype=torch.float64)
tensor([-216.1555, -211.9499, -201.0723, -201.3201, -214.1413],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0092, device='cuda:0', dtype=torch.float64)
tensor([-216.2062, -211.8743, -200.8829, -201.1773, -214.0861],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0138, device='cuda:0', dtype=torch.float64)
tensor([-216.2812, -211.8434, -200.7424, -201.0807, -214.0821],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0097, device='cuda:0', dtype=torch.float64)
tensor([-216.3610, -211.8068, -200.5813, -200.9813, -214.0741],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0101, device='cuda:0', dtype=torch.float64)
tensor([-216.4642, -211.7790, -200.3872, -200.8579, -214.0721],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0098, device='cuda:0', dtype=torch.float64)
tensor([-216.5206, -211.7787, -200.2893, -200.7866, -214.0743],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0100, device='cuda:0', dtype=torch.float64)
tensor([-216.5438, -211.7907, -200.2273, -200.7329, -214.0631],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0147, device='cuda:0', dtype=torch.float64)
tensor([-216.5771, -211.7722, -200.1084, -200.6512, -214.0344],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0116, device='cuda:0', dtype=torch.float64)
tensor([-216.6038, -211.7479, -199.9953, -200.5796, -214.0007],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0116, device='cuda:0', dtype=torch.float64)
tensor([-216.6344, -211.7271, -199.8844, -200.5122, -213.9703],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0122, device='cuda:0', dtype=torch.float64)
tensor([-216.6244, -211.7433, -199.9322, -200.5909, -213.9772],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0147, device='cuda:0', dtype=torch.float64)
tensor([-216.5950, -211.8128, -200.1111, -200.7859, -214.0339],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0116, device='cuda:0', dtype=torch.float64)
tensor([-216.5741, -211.9252, -200.3533, -201.0286, -214.1340],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0108, device='cuda:0', dtype=torch.float64)
tensor([-216.5274, -212.0550, -200.6482, -201.2860, -214.2357],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0109, device='cuda:0', dtype=torch.float64)
tensor([-216.5023, -212.1942, -200.9316, -201.5436, -214.3507],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0114, device='cuda:0', dtype=torch.float64)
tensor([-216.4669, -212.3185, -201.1980, -201.7864, -214.4484],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0144, device='cuda:0', dtype=torch.float64)
tensor([-216.4186, -212.4319, -201.4479, -201.9939, -214.5223],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0098, device='cuda:0', dtype=torch.float64)
tensor([-216.3813, -212.5286, -201.6557, -202.1614, -214.5844],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0153, device='cuda:0', dtype=torch.float64)
tensor([-216.3842, -212.5623, -201.7000, -202.1959, -214.6068],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0096, device='cuda:0', dtype=torch.float64)
tensor([-216.4016, -212.5495, -201.6447, -202.1480, -214.6013],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0136, device='cuda:0', dtype=torch.float64)
tensor([-216.4286, -212.5127, -201.5406, -202.0605, -214.5851],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0082, device='cuda:0', dtype=torch.float64)
tensor([-216.4331, -212.4521, -201.4133, -201.9321, -214.5426],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0087, device='cuda:0', dtype=torch.float64)
tensor([-216.4897, -212.3498, -201.1473, -201.7028, -214.4880],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0162, device='cuda:0', dtype=torch.float64)
tensor([-216.5605, -212.2015, -200.7499, -201.3704, -214.3824],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0158, device='cuda:0', dtype=torch.float64)
tensor([-216.6048, -212.0991, -200.4740, -201.1355, -214.3017],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0096, device='cuda:0', dtype=torch.float64)
tensor([-216.6527, -211.9762, -200.1879, -200.9058, -214.2133],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0116, device='cuda:0', dtype=torch.float64)
tensor([-216.7153, -211.8727, -199.9178, -200.7002, -214.1406],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0135, device='cuda:0', dtype=torch.float64)
tensor([-216.7441, -211.7975, -199.7451, -200.5694, -214.0811],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0116, device='cuda:0', dtype=torch.float64)
tensor([-216.7083, -211.7656, -199.7010, -200.5110, -214.0164],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0117, device='cuda:0', dtype=torch.float64)
tensor([-216.6630, -211.7645, -199.7094, -200.4865, -213.9755],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0088, device='cuda:0', dtype=torch.float64)
tensor([-216.6402, -211.7824, -199.7433, -200.4997, -213.9685],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0140, device='cuda:0', dtype=torch.float64)
tensor([-216.5649, -211.8638, -199.9114, -200.5939, -213.9806],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0086, device='cuda:0', dtype=torch.float64)
tensor([-216.4880, -211.9476, -200.0697, -200.6805, -213.9875],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0103, device='cuda:0', dtype=torch.float64)
tensor([-216.4367, -212.0612, -200.2579, -200.8025, -214.0268],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0071, device='cuda:0', dtype=torch.float64)
tensor([-216.3993, -212.1674, -200.4365, -200.9211, -214.0760],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0131, device='cuda:0', dtype=torch.float64)
tensor([-216.3570, -212.2891, -200.6506, -201.0752, -214.1433],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0111, device='cuda:0', dtype=torch.float64)
tensor([-216.3675, -212.3805, -200.7600, -201.1501, -214.2138],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0131, device='cuda:0', dtype=torch.float64)
tensor([-216.3914, -212.4650, -200.8673, -201.2308, -214.3024],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0177, device='cuda:0', dtype=torch.float64)
tensor([-216.4165, -212.5555, -200.9962, -201.3441, -214.4033],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0110, device='cuda:0', dtype=torch.float64)
tensor([-216.4488, -212.6213, -201.0789, -201.4239, -214.4941],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0110, device='cuda:0', dtype=torch.float64)
tensor([-216.4944, -212.6701, -201.1044, -201.4596, -214.5659],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0072, device='cuda:0', dtype=torch.float64)
tensor([-216.5647, -212.6960, -201.0911, -201.4937, -214.6408],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0140, device='cuda:0', dtype=torch.float64)
tensor([-216.6925, -212.6945, -200.9879, -201.4747, -214.7350],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0131, device='cuda:0', dtype=torch.float64)
tensor([-216.7919, -212.6915, -200.9018, -201.4719, -214.8117],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0119, device='cuda:0', dtype=torch.float64)
tensor([-216.9049, -212.6958, -200.8436, -201.5027, -214.9201],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0145, device='cuda:0', dtype=torch.float64)
tensor([-216.9929, -212.6825, -200.7601, -201.4944, -214.9882],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0085, device='cuda:0', dtype=torch.float64)
tensor([-217.0580, -212.6653, -200.6685, -201.4656, -215.0342],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0115, device='cuda:0', dtype=torch.float64)
tensor([-217.1462, -212.6020, -200.4670, -201.3436, -215.0457],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0123, device='cuda:0', dtype=torch.float64)
tensor([-217.2112, -212.5463, -200.2997, -201.2227, -215.0505],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0121, device='cuda:0', dtype=torch.float64)
tensor([-217.2374, -212.4897, -200.1673, -201.1227, -215.0355],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0122, device='cuda:0', dtype=torch.float64)
tensor([-217.1992, -212.4399, -200.1129, -201.0612, -214.9975],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0091, device='cuda:0', dtype=torch.float64)
tensor([-217.1671, -212.3764, -200.0015, -200.9549, -214.9329],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0080, device='cuda:0', dtype=torch.float64)
tensor([-217.0991, -212.3366, -199.9628, -200.8839, -214.8703],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0073, device='cuda:0', dtype=torch.float64)
tensor([-216.9987, -212.3369, -199.9948, -200.8446, -214.8077],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0084, device='cuda:0', dtype=torch.float64)
tensor([-216.8824, -212.3597, -200.1072, -200.8702, -214.7669],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0072, device='cuda:0', dtype=torch.float64)
tensor([-216.7308, -212.3803, -200.2471, -200.8910, -214.7063],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0170, device='cuda:0', dtype=torch.float64)
tensor([-216.5686, -212.4262, -200.4189, -200.9333, -214.6444],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0084, device='cuda:0', dtype=torch.float64)
tensor([-216.4272, -212.4509, -200.5256, -200.9345, -214.5680],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0114, device='cuda:0', dtype=torch.float64)
tensor([-216.2751, -212.4991, -200.7112, -201.0010, -214.5133],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0147, device='cuda:0', dtype=torch.float64)
tensor([-216.1032, -212.5532, -200.9266, -201.0820, -214.4502],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0135, device='cuda:0', dtype=torch.float64)
tensor([-215.9642, -212.5934, -201.0952, -201.1536, -214.3949],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0109, device='cuda:0', dtype=torch.float64)
tensor([-215.8433, -212.6111, -201.2319, -201.1895, -214.3448],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0062, device='cuda:0', dtype=torch.float64)
tensor([-215.7689, -212.6219, -201.3242, -201.2207, -214.3126],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0118, device='cuda:0', dtype=torch.float64)
tensor([-215.7217, -212.6316, -201.4102, -201.2662, -214.2966],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0097, device='cuda:0', dtype=torch.float64)
tensor([-215.6510, -212.6537, -201.5405, -201.3502, -214.2807],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0079, device='cuda:0', dtype=torch.float64)
tensor([-215.6481, -212.6371, -201.5647, -201.3757, -214.2859],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0138, device='cuda:0', dtype=torch.float64)
tensor([-215.6988, -212.5887, -201.4682, -201.3057, -214.2844],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0089, device='cuda:0', dtype=torch.float64)
tensor([-215.7758, -212.5492, -201.3605, -201.2364, -214.2997],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0093, device='cuda:0', dtype=torch.float64)
tensor([-215.8676, -212.5040, -201.2584, -201.1977, -214.3288],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0126, device='cuda:0', dtype=torch.float64)
tensor([-216.0143, -212.4199, -201.0455, -201.0926, -214.3587],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0108, device='cuda:0', dtype=torch.float64)
tensor([-216.1367, -212.3660, -200.9121, -201.0352, -214.4007],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0128, device='cuda:0', dtype=torch.float64)
tensor([-216.2311, -212.2944, -200.7532, -200.9441, -214.4056],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0144, device='cuda:0', dtype=torch.float64)
tensor([-216.3565, -212.2233, -200.5969, -200.8783, -214.4437],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0081, device='cuda:0', dtype=torch.float64)
tensor([-216.4620, -212.1597, -200.4584, -200.8171, -214.4753],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0098, device='cuda:0', dtype=torch.float64)
tensor([-216.5114, -212.1292, -200.4069, -200.8067, -214.5045],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0116, device='cuda:0', dtype=torch.float64)
tensor([-216.5444, -212.1094, -200.3828, -200.8081, -214.5246],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0101, device='cuda:0', dtype=torch.float64)
tensor([-216.5593, -212.1124, -200.4217, -200.8605, -214.5557],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0169, device='cuda:0', dtype=torch.float64)
tensor([-216.5866, -212.1208, -200.4348, -200.8993, -214.5796],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0077, device='cuda:0', dtype=torch.float64)
tensor([-216.5952, -212.1169, -200.4400, -200.9274, -214.5753],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0098, device='cuda:0', dtype=torch.float64)
tensor([-216.5719, -212.1101, -200.4642, -200.9512, -214.5473],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0098, device='cuda:0', dtype=torch.float64)
tensor([-216.5039, -212.1031, -200.5079, -200.9664, -214.4877],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0102, device='cuda:0', dtype=torch.float64)
tensor([-216.4143, -212.1060, -200.5972, -201.0140, -214.4261],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0084, device='cuda:0', dtype=torch.float64)
tensor([-216.3237, -212.1241, -200.7116, -201.0945, -214.3768],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0082, device='cuda:0', dtype=torch.float64)
tensor([-216.2063, -212.1655, -200.9090, -201.2472, -214.3408],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0081, device='cuda:0', dtype=torch.float64)
tensor([-216.1254, -212.1966, -201.0229, -201.3358, -214.2969],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0092, device='cuda:0', dtype=torch.float64)
tensor([-216.0477, -212.2175, -201.1146, -201.4061, -214.2493],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0090, device='cuda:0', dtype=torch.float64)
tensor([-216.0197, -212.2073, -201.0948, -201.4073, -214.1975],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0124, device='cuda:0', dtype=torch.float64)
tensor([-215.9699, -212.2245, -201.1459, -201.4632, -214.1653],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0072, device='cuda:0', dtype=torch.float64)
tensor([-215.9365, -212.2442, -201.2085, -201.5277, -214.1554],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0119, device='cuda:0', dtype=torch.float64)
tensor([-215.9246, -212.2611, -201.2465, -201.5781, -214.1564],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0075, device='cuda:0', dtype=torch.float64)
tensor([-215.9354, -212.2599, -201.2249, -201.5759, -214.1492],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0113, device='cuda:0', dtype=torch.float64)
tensor([-215.9211, -212.2655, -201.2214, -201.5819, -214.1269],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0109, device='cuda:0', dtype=torch.float64)
tensor([-215.8920, -212.2990, -201.2772, -201.6258, -214.1248],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0122, device='cuda:0', dtype=torch.float64)
tensor([-215.8916, -212.3218, -201.2841, -201.6465, -214.1284],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0104, device='cuda:0', dtype=torch.float64)
tensor([-215.8945, -212.3434, -201.3105, -201.6819, -214.1477],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0128, device='cuda:0', dtype=torch.float64)
tensor([-215.8863, -212.3593, -201.3462, -201.7147, -214.1686],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0076, device='cuda:0', dtype=torch.float64)
tensor([-215.8554, -212.3908, -201.4230, -201.7551, -214.1948],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0111, device='cuda:0', dtype=torch.float64)
tensor([-215.8558, -212.3931, -201.3992, -201.7272, -214.1934],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0090, device='cuda:0', dtype=torch.float64)
tensor([-215.8641, -212.3930, -201.3710, -201.7017, -214.1982],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0074, device='cuda:0', dtype=torch.float64)
tensor([-215.9004, -212.3824, -201.3134, -201.6585, -214.2149],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0083, device='cuda:0', dtype=torch.float64)
tensor([-215.9400, -212.3705, -201.2558, -201.6314, -214.2359],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0107, device='cuda:0', dtype=torch.float64)
tensor([-215.9818, -212.3482, -201.1832, -201.5964, -214.2478],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0090, device='cuda:0', dtype=torch.float64)
tensor([-215.9933, -212.3014, -201.0967, -201.5246, -214.2237],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0287, device='cuda:0', dtype=torch.float64)
tensor([-215.9765, -212.2745, -201.0663, -201.4742, -214.2008],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0129, device='cuda:0', dtype=torch.float64)
tensor([-215.9924, -212.3047, -201.1196, -201.5081, -214.2480],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0092, device='cuda:0', dtype=torch.float64)
tensor([-216.0222, -212.3391, -201.1448, -201.5335, -214.2900],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0086, device='cuda:0', dtype=torch.float64)
tensor([-216.0497, -212.3407, -201.1158, -201.5208, -214.3016],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0074, device='cuda:0', dtype=torch.float64)
tensor([-216.0672, -212.3867, -201.1749, -201.5889, -214.3419],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0129, device='cuda:0', dtype=torch.float64)
tensor([-216.0654, -212.4226, -201.2198, -201.6282, -214.3624],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0076, device='cuda:0', dtype=torch.float64)
tensor([-216.0475, -212.4599, -201.2603, -201.6553, -214.3658],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0163, device='cuda:0', dtype=torch.float64)
tensor([-216.0309, -212.5245, -201.3415, -201.6920, -214.3874],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0175, device='cuda:0', dtype=torch.float64)
tensor([-216.0410, -212.5954, -201.3945, -201.7084, -214.4226],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0069, device='cuda:0', dtype=torch.float64)
tensor([-216.0306, -212.6548, -201.4089, -201.6768, -214.4284],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0080, device='cuda:0', dtype=torch.float64)
tensor([-216.0531, -212.7051, -201.3561, -201.6008, -214.4308],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0110, device='cuda:0', dtype=torch.float64)
tensor([-216.0949, -212.7353, -201.2724, -201.5052, -214.4399],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0102, device='cuda:0', dtype=torch.float64)
tensor([-216.1503, -212.7534, -201.1359, -201.3705, -214.4349],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0120, device='cuda:0', dtype=torch.float64)
tensor([-216.1989, -212.7654, -200.9896, -201.2294, -214.4158],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0124, device='cuda:0', dtype=torch.float64)
tensor([-216.2522, -212.7766, -200.8399, -201.0712, -214.4026],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0101, device='cuda:0', dtype=torch.float64)
tensor([-216.3118, -212.7965, -200.7411, -200.9814, -214.4188],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0093, device='cuda:0', dtype=torch.float64)
tensor([-216.3522, -212.8235, -200.7548, -201.0088, -214.4652],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0068, device='cuda:0', dtype=torch.float64)
tensor([-216.3976, -212.8463, -200.7783, -201.0506, -214.5213],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0097, device='cuda:0', dtype=torch.float64)
tensor([-216.4522, -212.8541, -200.7493, -201.0384, -214.5551],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0103, device='cuda:0', dtype=torch.float64)
tensor([-216.5043, -212.8839, -200.7843, -201.0881, -214.6157],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0123, device='cuda:0', dtype=torch.float64)
tensor([-216.5262, -212.8993, -200.8314, -201.1445, -214.6496],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0096, device='cuda:0', dtype=torch.float64)
tensor([-216.5418, -212.9296, -200.9064, -201.2179, -214.6873],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0092, device='cuda:0', dtype=torch.float64)
tensor([-216.5031, -212.9542, -201.0184, -201.3062, -214.6905],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0080, device='cuda:0', dtype=torch.float64)
tensor([-216.4391, -212.9773, -201.1471, -201.3988, -214.6776],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0081, device='cuda:0', dtype=torch.float64)
tensor([-216.3921, -212.9860, -201.2479, -201.4771, -214.6635],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0145, device='cuda:0', dtype=torch.float64)
tensor([-216.3766, -212.9291, -201.1703, -201.4089, -214.5882],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0111, device='cuda:0', dtype=torch.float64)
tensor([-216.4148, -212.8507, -200.9812, -201.2687, -214.5123],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0068, device='cuda:0', dtype=torch.float64)
tensor([-216.4697, -212.7736, -200.7809, -201.1213, -214.4481],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0090, device='cuda:0', dtype=torch.float64)
tensor([-216.5406, -212.6875, -200.5836, -200.9994, -214.3974],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0093, device='cuda:0', dtype=torch.float64)
tensor([-216.5845, -212.5953, -200.4256, -200.8999, -214.3398],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0125, device='cuda:0', dtype=torch.float64)
tensor([-216.6336, -212.5076, -200.2576, -200.7609, -214.2784],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0109, device='cuda:0', dtype=torch.float64)
tensor([-216.6472, -212.4407, -200.1365, -200.6435, -214.2043],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0100, device='cuda:0', dtype=torch.float64)
tensor([-216.6081, -212.3881, -200.1100, -200.6051, -214.1284],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0097, device='cuda:0', dtype=torch.float64)
tensor([-216.5831, -212.3408, -200.1025, -200.5960, -214.0814],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0073, device='cuda:0', dtype=torch.float64)
tensor([-216.5491, -212.3115, -200.1434, -200.6375, -214.0549],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0114, device='cuda:0', dtype=torch.float64)
tensor([-216.4540, -212.3112, -200.2984, -200.7713, -214.0321],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0081, device='cuda:0', dtype=torch.float64)
tensor([-216.3931, -212.2915, -200.3542, -200.8198, -213.9901],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0124, device='cuda:0', dtype=torch.float64)
tensor([-216.3544, -212.2964, -200.4269, -200.8953, -213.9756],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0097, device='cuda:0', dtype=torch.float64)
tensor([-216.3120, -212.3035, -200.4916, -200.9510, -213.9534],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0062, device='cuda:0', dtype=torch.float64)
tensor([-216.2755, -212.2995, -200.5348, -200.9843, -213.9244],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0112, device='cuda:0', dtype=torch.float64)
tensor([-216.2000, -212.3284, -200.6930, -201.0963, -213.9157],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0089, device='cuda:0', dtype=torch.float64)
tensor([-216.1267, -212.3829, -200.8888, -201.2503, -213.9261],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0085, device='cuda:0', dtype=torch.float64)
tensor([-216.0246, -212.4816, -201.1938, -201.4957, -213.9634],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0084, device='cuda:0', dtype=torch.float64)
tensor([-215.9362, -212.5860, -201.4930, -201.7302, -214.0170],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0090, device='cuda:0', dtype=torch.float64)
tensor([-215.8713, -212.7004, -201.7825, -201.9648, -214.0902],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0082, device='cuda:0', dtype=torch.float64)
tensor([-215.8187, -212.7551, -201.9332, -202.0658, -214.1046],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0076, device='cuda:0', dtype=torch.float64)
tensor([-215.8056, -212.8182, -202.0463, -202.1357, -214.1436],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0082, device='cuda:0', dtype=torch.float64)
tensor([-215.8043, -212.8829, -202.1088, -202.1481, -214.1782],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0081, device='cuda:0', dtype=torch.float64)
tensor([-215.8351, -212.9389, -202.1484, -202.1629, -214.2309],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0090, device='cuda:0', dtype=torch.float64)
tensor([-215.8543, -212.9751, -202.1563, -202.1332, -214.2535],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0101, device='cuda:0', dtype=torch.float64)
tensor([-215.8956, -212.9703, -202.0547, -202.0193, -214.2373],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0115, device='cuda:0', dtype=torch.float64)
tensor([-215.9148, -212.9443, -201.9631, -201.9082, -214.1985],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0057, device='cuda:0', dtype=torch.float64)
tensor([-215.9671, -212.8751, -201.7720, -201.7299, -214.1468],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0089, device='cuda:0', dtype=torch.float64)
tensor([-216.0092, -212.8127, -201.6014, -201.5721, -214.0962],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0115, device='cuda:0', dtype=torch.float64)
tensor([-216.0416, -212.7965, -201.5371, -201.5036, -214.0841],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0088, device='cuda:0', dtype=torch.float64)
tensor([-216.0643, -212.7902, -201.5020, -201.4562, -214.0761],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0074, device='cuda:0', dtype=torch.float64)
tensor([-216.0972, -212.7914, -201.4506, -201.3995, -214.0711],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0093, device='cuda:0', dtype=torch.float64)
tensor([-216.1054, -212.8324, -201.4981, -201.4235, -214.0952],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0090, device='cuda:0', dtype=torch.float64)
tensor([-216.1332, -212.8831, -201.5587, -201.4689, -214.1482],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0073, device='cuda:0', dtype=torch.float64)
tensor([-216.1736, -212.9297, -201.5973, -201.4989, -214.2082],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0082, device='cuda:0', dtype=torch.float64)
tensor([-216.2358, -212.9568, -201.6042, -201.5034, -214.2719],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0098, device='cuda:0', dtype=torch.float64)
tensor([-216.3138, -212.9495, -201.5378, -201.4600, -214.3162],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0101, device='cuda:0', dtype=torch.float64)
tensor([-216.4052, -212.9115, -201.3915, -201.3495, -214.3350],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0088, device='cuda:0', dtype=torch.float64)
tensor([-216.4883, -212.8647, -201.2526, -201.2474, -214.3555],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0094, device='cuda:0', dtype=torch.float64)
tensor([-216.5498, -212.8164, -201.1275, -201.1423, -214.3488],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0076, device='cuda:0', dtype=torch.float64)
tensor([-216.6061, -212.7825, -201.0283, -201.0554, -214.3456],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0084, device='cuda:0', dtype=torch.float64)
tensor([-216.6200, -212.7548, -200.9970, -201.0185, -214.3301],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0064, device='cuda:0', dtype=torch.float64)
tensor([-216.6549, -212.6945, -200.8900, -200.9230, -214.2955],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0068, device='cuda:0', dtype=torch.float64)
tensor([-216.6622, -212.6287, -200.7858, -200.8199, -214.2430],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0064, device='cuda:0', dtype=torch.float64)
tensor([-216.6909, -212.5713, -200.6704, -200.7140, -214.2074],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0076, device='cuda:0', dtype=torch.float64)
tensor([-216.6756, -212.5196, -200.6206, -200.6655, -214.1657],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0088, device='cuda:0', dtype=torch.float64)
tensor([-216.6926, -212.4869, -200.5921, -200.6497, -214.1701],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0100, device='cuda:0', dtype=torch.float64)
tensor([-216.6843, -212.4557, -200.5727, -200.6215, -214.1581],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0079, device='cuda:0', dtype=torch.float64)
tensor([-216.6570, -212.4454, -200.6084, -200.6429, -214.1626],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0094, device='cuda:0', dtype=torch.float64)
tensor([-216.6025, -212.4244, -200.6271, -200.6442, -214.1284],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0109, device='cuda:0', dtype=torch.float64)
tensor([-216.5698, -212.4216, -200.6325, -200.6542, -214.1027],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0089, device='cuda:0', dtype=torch.float64)
tensor([-216.5809, -212.3996, -200.5645, -200.6105, -214.0809],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0148, device='cuda:0', dtype=torch.float64)
tensor([-216.5943, -212.3984, -200.5110, -200.5794, -214.0771],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0087, device='cuda:0', dtype=torch.float64)
tensor([-216.6019, -212.4193, -200.5268, -200.6125, -214.1052],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0117, device='cuda:0', dtype=torch.float64)
tensor([-216.5460, -212.4561, -200.6589, -200.7468, -214.1234],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0108, device='cuda:0', dtype=torch.float64)
tensor([-216.5079, -212.5007, -200.7732, -200.8716, -214.1483],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0101, device='cuda:0', dtype=torch.float64)
tensor([-216.4684, -212.5575, -200.9612, -201.0685, -214.2103],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0076, device='cuda:0', dtype=torch.float64)
tensor([-216.4120, -212.6163, -201.1448, -201.2524, -214.2565],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0119, device='cuda:0', dtype=torch.float64)
tensor([-216.3228, -212.6808, -201.3726, -201.4596, -214.2917],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0084, device='cuda:0', dtype=torch.float64)
tensor([-216.2398, -212.7172, -201.5287, -201.6057, -214.2926],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0078, device='cuda:0', dtype=torch.float64)
tensor([-216.1381, -212.7627, -201.7246, -201.7658, -214.2949],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0089, device='cuda:0', dtype=torch.float64)
tensor([-216.0694, -212.7863, -201.8513, -201.8755, -214.2914],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0086, device='cuda:0', dtype=torch.float64)
tensor([-216.0715, -212.8053, -201.8785, -201.9105, -214.3084],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0121, device='cuda:0', dtype=torch.float64)
tensor([-216.0581, -212.8342, -201.9023, -201.9113, -214.3082],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0073, device='cuda:0', dtype=torch.float64)
tensor([-215.9926, -212.8898, -202.0240, -201.9789, -214.3110],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0096, device='cuda:0', dtype=torch.float64)
tensor([-215.9376, -212.9257, -202.1125, -202.0238, -214.2981],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0111, device='cuda:0', dtype=torch.float64)
tensor([-215.8835, -212.9746, -202.2141, -202.0836, -214.2913],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0069, device='cuda:0', dtype=torch.float64)
tensor([-215.8642, -212.9881, -202.2114, -202.0680, -214.2675],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0139, device='cuda:0', dtype=torch.float64)
tensor([-215.8336, -212.9723, -202.1621, -202.0061, -214.2079],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0081, device='cuda:0', dtype=torch.float64)
tensor([-215.8409, -212.9646, -202.0728, -201.9136, -214.1645],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0063, device='cuda:0', dtype=torch.float64)
tensor([-215.8249, -212.9484, -202.0106, -201.8339, -214.1115],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0083, device='cuda:0', dtype=torch.float64)
tensor([-215.8534, -212.9198, -201.9033, -201.7452, -214.0840],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0071, device='cuda:0', dtype=torch.float64)
tensor([-215.8947, -212.8789, -201.7915, -201.6508, -214.0685],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0081, device='cuda:0', dtype=torch.float64)
tensor([-215.9620, -212.8100, -201.5998, -201.4933, -214.0314],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0085, device='cuda:0', dtype=torch.float64)
tensor([-216.0540, -212.7158, -201.3005, -201.2328, -213.9603],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0089, device='cuda:0', dtype=torch.float64)
tensor([-216.1662, -212.6324, -201.0272, -201.0192, -213.9175],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0079, device='cuda:0', dtype=torch.float64)
tensor([-216.2737, -212.5697, -200.7928, -200.8198, -213.8927],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0093, device='cuda:0', dtype=torch.float64)
tensor([-216.3605, -212.5044, -200.5308, -200.5795, -213.8322],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0101, device='cuda:0', dtype=torch.float64)
tensor([-216.4525, -212.4451, -200.2498, -200.3159, -213.7575],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0102, device='cuda:0', dtype=torch.float64)
tensor([-216.5261, -212.3869, -199.9747, -200.0563, -213.6702],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0076, device='cuda:0', dtype=torch.float64)
tensor([-216.6304, -212.3474, -199.7142, -199.8294, -213.6263],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0116, device='cuda:0', dtype=torch.float64)
tensor([-216.7563, -212.3474, -199.5135, -199.6683, -213.6434],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0096, device='cuda:0', dtype=torch.float64)
tensor([-216.8231, -212.3600, -199.4055, -199.5658, -213.6506],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0160, device='cuda:0', dtype=torch.float64)
tensor([-216.8306, -212.3792, -199.4503, -199.6235, -213.6791],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0077, device='cuda:0', dtype=torch.float64)
tensor([-216.7584, -212.3967, -199.6148, -199.7779, -213.6945],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0103, device='cuda:0', dtype=torch.float64)
tensor([-216.6913, -212.4402, -199.8439, -199.9957, -213.7485],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0091, device='cuda:0', dtype=torch.float64)
tensor([-216.5719, -212.5344, -200.2198, -200.3181, -213.8295],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0092, device='cuda:0', dtype=torch.float64)
tensor([-216.4096, -212.6218, -200.5933, -200.6146, -213.8664],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0090, device='cuda:0', dtype=torch.float64)
tensor([-216.2311, -212.7234, -200.9481, -200.8698, -213.8729],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0112, device='cuda:0', dtype=torch.float64)
tensor([-216.0702, -212.8297, -201.3180, -201.1509, -213.9100],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0116, device='cuda:0', dtype=torch.float64)
tensor([-215.9652, -212.9089, -201.5751, -201.3631, -213.9333],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0078, device='cuda:0', dtype=torch.float64)
tensor([-215.8793, -212.9866, -201.8077, -201.5578, -213.9617],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0106, device='cuda:0', dtype=torch.float64)
tensor([-215.8327, -213.0442, -201.9169, -201.6458, -213.9754],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0069, device='cuda:0', dtype=torch.float64)
tensor([-215.8036, -213.0767, -201.9850, -201.7095, -213.9800],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0084, device='cuda:0', dtype=torch.float64)
tensor([-215.7964, -213.0657, -201.9352, -201.6696, -213.9464],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0127, device='cuda:0', dtype=torch.float64)
tensor([-215.8015, -212.9779, -201.7383, -201.4873, -213.8616],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0107, device='cuda:0', dtype=torch.float64)
tensor([-215.8568, -212.8667, -201.4726, -201.2748, -213.7893],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0080, device='cuda:0', dtype=torch.float64)
tensor([-215.9260, -212.7600, -201.2435, -201.0993, -213.7509],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0169, device='cuda:0', dtype=torch.float64)
tensor([-215.9487, -212.7061, -201.1363, -201.0081, -213.7260],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0100, device='cuda:0', dtype=torch.float64)
tensor([-215.9798, -212.6648, -201.0162, -200.8886, -213.7120],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0080, device='cuda:0', dtype=torch.float64)
tensor([-215.9671, -212.6010, -200.9028, -200.7708, -213.6485],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0107, device='cuda:0', dtype=torch.float64)
tensor([-215.9635, -212.5210, -200.7974, -200.6656, -213.6033],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0063, device='cuda:0', dtype=torch.float64)
tensor([-215.9323, -212.4468, -200.7000, -200.5534, -213.5320],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0069, device='cuda:0', dtype=torch.float64)
tensor([-215.9161, -212.3846, -200.6135, -200.4548, -213.4799],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0089, device='cuda:0', dtype=torch.float64)
tensor([-215.8956, -212.3354, -200.6061, -200.4594, -213.4529],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0105, device='cuda:0', dtype=torch.float64)
tensor([-215.9099, -212.2804, -200.5592, -200.4592, -213.4329],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0081, device='cuda:0', dtype=torch.float64)
tensor([-215.9108, -212.2681, -200.5816, -200.5150, -213.4452],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0070, device='cuda:0', dtype=torch.float64)
tensor([-215.8951, -212.2616, -200.6355, -200.5994, -213.4548],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0093, device='cuda:0', dtype=torch.float64)
tensor([-215.8878, -212.2802, -200.7246, -200.7122, -213.4843],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0061, device='cuda:0', dtype=torch.float64)
tensor([-215.8698, -212.3184, -200.8536, -200.8616, -213.5213],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0086, device='cuda:0', dtype=torch.float64)
tensor([-215.8738, -212.3080, -200.8871, -200.9432, -213.5313],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0155, device='cuda:0', dtype=torch.float64)
tensor([-215.8751, -212.2990, -200.9364, -201.0401, -213.5386],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0131, device='cuda:0', dtype=torch.float64)
tensor([-215.8810, -212.3041, -201.0314, -201.1827, -213.5811],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0085, device='cuda:0', dtype=torch.float64)
tensor([-215.8713, -212.3246, -201.1162, -201.2984, -213.6061],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0102, device='cuda:0', dtype=torch.float64)
tensor([-215.8700, -212.3389, -201.1670, -201.3899, -213.6256],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0078, device='cuda:0', dtype=torch.float64)
tensor([-215.9175, -212.3188, -201.0932, -201.3817, -213.6239],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0093, device='cuda:0', dtype=torch.float64)
tensor([-215.9421, -212.3230, -201.0737, -201.4004, -213.6299],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0089, device='cuda:0', dtype=torch.float64)
tensor([-215.9829, -212.3152, -201.0205, -201.3862, -213.6349],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0075, device='cuda:0', dtype=torch.float64)
tensor([-216.0102, -212.3282, -200.9972, -201.3911, -213.6543],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0076, device='cuda:0', dtype=torch.float64)
tensor([-216.0234, -212.3235, -200.9350, -201.3604, -213.6342],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0082, device='cuda:0', dtype=torch.float64)
tensor([-216.0179, -212.3304, -200.9336, -201.3646, -213.6305],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0091, device='cuda:0', dtype=torch.float64)
tensor([-216.0138, -212.3717, -200.9832, -201.4077, -213.6518],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0082, device='cuda:0', dtype=torch.float64)
tensor([-216.0203, -212.4325, -201.0691, -201.4851, -213.7064],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0089, device='cuda:0', dtype=torch.float64)
tensor([-216.0648, -212.4626, -201.0717, -201.5079, -213.7520],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0093, device='cuda:0', dtype=torch.float64)
tensor([-216.1053, -212.4956, -201.0394, -201.4935, -213.7812],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0082, device='cuda:0', dtype=torch.float64)
tensor([-216.1192, -212.5447, -201.0858, -201.5441, -213.8239],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0086, device='cuda:0', dtype=torch.float64)
tensor([-216.1568, -212.6054, -201.1403, -201.6000, -213.9001],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0090, device='cuda:0', dtype=torch.float64)
tensor([-216.1646, -212.6449, -201.1864, -201.6383, -213.9437],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0078, device='cuda:0', dtype=torch.float64)
tensor([-216.2347, -212.6371, -201.0614, -201.5463, -213.9538],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0080, device='cuda:0', dtype=torch.float64)
tensor([-216.3190, -212.6214, -200.8839, -201.4033, -213.9503],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0132, device='cuda:0', dtype=torch.float64)
tensor([-216.4285, -212.5884, -200.6501, -201.2312, -213.9404],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0103, device='cuda:0', dtype=torch.float64)
tensor([-216.4871, -212.5669, -200.4825, -201.0956, -213.9102],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0085, device='cuda:0', dtype=torch.float64)
tensor([-216.5492, -212.5383, -200.3057, -200.9487, -213.8721],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0110, device='cuda:0', dtype=torch.float64)
tensor([-216.6105, -212.5258, -200.1766, -200.8401, -213.8592],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0096, device='cuda:0', dtype=torch.float64)
tensor([-216.5989, -212.5074, -200.1215, -200.7734, -213.8110],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0100, device='cuda:0', dtype=torch.float64)
tensor([-216.5696, -212.5050, -200.0864, -200.7178, -213.7578],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0089, device='cuda:0', dtype=torch.float64)
tensor([-216.5013, -212.5510, -200.1853, -200.7565, -213.7420],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0103, device='cuda:0', dtype=torch.float64)
tensor([-216.4432, -212.5880, -200.2633, -200.7999, -213.7250],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0076, device='cuda:0', dtype=torch.float64)
tensor([-216.3441, -212.5947, -200.3364, -200.8179, -213.6721],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0134, device='cuda:0', dtype=torch.float64)
tensor([-216.2131, -212.6097, -200.4405, -200.8533, -213.6058],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0079, device='cuda:0', dtype=torch.float64)
tensor([-216.0706, -212.6364, -200.6046, -200.9398, -213.5649],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0074, device='cuda:0', dtype=torch.float64)
tensor([-215.9605, -212.6457, -200.6904, -200.9618, -213.5105],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0100, device='cuda:0', dtype=torch.float64)
tensor([-215.8727, -212.6498, -200.7613, -200.9739, -213.4640],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0073, device='cuda:0', dtype=torch.float64)
tensor([-215.7909, -212.6366, -200.7694, -200.9312, -213.3841],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0144, device='cuda:0', dtype=torch.float64)
tensor([-215.7257, -212.6266, -200.7754, -200.8900, -213.3141],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0063, device='cuda:0', dtype=torch.float64)
tensor([-215.7113, -212.6213, -200.7388, -200.8208, -213.2791],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0134, device='cuda:0', dtype=torch.float64)
tensor([-215.6886, -212.6353, -200.7338, -200.7797, -213.2498],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0092, device='cuda:0', dtype=torch.float64)
tensor([-215.6745, -212.6589, -200.7548, -200.7764, -213.2494],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0101, device='cuda:0', dtype=torch.float64)
tensor([-215.6598, -212.6996, -200.8270, -200.8322, -213.2743],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0100, device='cuda:0', dtype=torch.float64)
tensor([-215.6181, -212.7331, -200.9395, -200.9345, -213.2922],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0082, device='cuda:0', dtype=torch.float64)
tensor([-215.5758, -212.7576, -201.0257, -201.0157, -213.2996],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0114, device='cuda:0', dtype=torch.float64)
tensor([-215.5446, -212.7385, -201.0351, -201.0409, -213.2722],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0095, device='cuda:0', dtype=torch.float64)
tensor([-215.5175, -212.7189, -201.0703, -201.1084, -213.2702],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0123, device='cuda:0', dtype=torch.float64)
tensor([-215.5014, -212.7106, -201.1029, -201.1824, -213.2752],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0107, device='cuda:0', dtype=torch.float64)
tensor([-215.4403, -212.7192, -201.2154, -201.3142, -213.2819],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0099, device='cuda:0', dtype=torch.float64)
tensor([-215.3945, -212.7537, -201.3468, -201.4731, -213.3128],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0112, device='cuda:0', dtype=torch.float64)
tensor([-215.3800, -212.7708, -201.4334, -201.6040, -213.3548],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0095, device='cuda:0', dtype=torch.float64)
tensor([-215.3965, -212.8033, -201.5179, -201.7458, -213.4246],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0065, device='cuda:0', dtype=torch.float64)
tensor([-215.4226, -212.8106, -201.5328, -201.8323, -213.4629],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0096, device='cuda:0', dtype=torch.float64)
tensor([-215.4642, -212.8106, -201.4813, -201.8648, -213.4813],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0120, device='cuda:0', dtype=torch.float64)
tensor([-215.4800, -212.8390, -201.4810, -201.9028, -213.5028],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0100, device='cuda:0', dtype=torch.float64)
tensor([-215.4668, -212.8820, -201.5048, -201.9379, -213.5102],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0068, device='cuda:0', dtype=torch.float64)
tensor([-215.4855, -212.9058, -201.4803, -201.9278, -213.5236],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0059, device='cuda:0', dtype=torch.float64)
tensor([-215.5242, -212.9306, -201.4324, -201.8885, -213.5447],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0091, device='cuda:0', dtype=torch.float64)
tensor([-215.5934, -212.9544, -201.3446, -201.8120, -213.5782],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0099, device='cuda:0', dtype=torch.float64)
tensor([-215.6713, -212.9634, -201.2070, -201.6777, -213.5912],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0117, device='cuda:0', dtype=torch.float64)
tensor([-215.7234, -212.9786, -201.1081, -201.5619, -213.6014],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0086, device='cuda:0', dtype=torch.float64)
tensor([-215.7465, -212.9831, -201.0085, -201.4415, -213.5911],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0098, device='cuda:0', dtype=torch.float64)
tensor([-215.7956, -212.9760, -200.8790, -201.3042, -213.5862],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0099, device='cuda:0', dtype=torch.float64)
tensor([-215.8681, -212.9586, -200.7041, -201.1261, -213.5819],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0094, device='cuda:0', dtype=torch.float64)
tensor([-215.9505, -212.9641, -200.5959, -201.0145, -213.6178],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0070, device='cuda:0', dtype=torch.float64)
tensor([-216.0182, -212.9693, -200.5201, -200.9325, -213.6592],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0083, device='cuda:0', dtype=torch.float64)
tensor([-216.0802, -212.9595, -200.4106, -200.8239, -213.6765],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0093, device='cuda:0', dtype=torch.float64)
tensor([-216.1331, -212.9527, -200.2797, -200.6944, -213.6719],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0129, device='cuda:0', dtype=torch.float64)
tensor([-216.1803, -212.9611, -200.1756, -200.5870, -213.6820],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0084, device='cuda:0', dtype=torch.float64)
tensor([-216.1454, -212.9700, -200.1801, -200.5530, -213.6687],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0100, device='cuda:0', dtype=torch.float64)
tensor([-216.0716, -212.9843, -200.2251, -200.5422, -213.6388],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0081, device='cuda:0', dtype=torch.float64)
tensor([-216.0237, -213.0140, -200.3259, -200.6144, -213.6564],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0069, device='cuda:0', dtype=torch.float64)
tensor([-215.9658, -213.0438, -200.4529, -200.7135, -213.6746],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0091, device='cuda:0', dtype=torch.float64)
tensor([-215.8773, -213.0711, -200.5897, -200.8186, -213.6685],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0083, device='cuda:0', dtype=torch.float64)
tensor([-215.7714, -213.0930, -200.7476, -200.9516, -213.6513],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0097, device='cuda:0', dtype=torch.float64)
tensor([-215.6863, -213.1271, -200.9387, -201.1331, -213.6688],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0079, device='cuda:0', dtype=torch.float64)
tensor([-215.6060, -213.1888, -201.1710, -201.3478, -213.7116],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0082, device='cuda:0', dtype=torch.float64)
tensor([-215.5318, -213.2351, -201.3804, -201.5461, -213.7500],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0081, device='cuda:0', dtype=torch.float64)
tensor([-215.4519, -213.2597, -201.5529, -201.7151, -213.7692],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0079, device='cuda:0', dtype=torch.float64)
tensor([-215.3753, -213.2971, -201.7053, -201.8472, -213.7772],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0069, device='cuda:0', dtype=torch.float64)
tensor([-215.2704, -213.3636, -201.9445, -202.0489, -213.7989],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0092, device='cuda:0', dtype=torch.float64)
tensor([-215.1550, -213.4142, -202.1041, -202.1456, -213.7712],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0084, device='cuda:0', dtype=torch.float64)
tensor([-215.0831, -213.4231, -202.1274, -202.1480, -213.7131],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0071, device='cuda:0', dtype=torch.float64)
tensor([-215.0518, -213.4042, -202.0850, -202.1236, -213.6586],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0081, device='cuda:0', dtype=torch.float64)
tensor([-215.0187, -213.3642, -201.9985, -202.0551, -213.5763],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0116, device='cuda:0', dtype=torch.float64)
tensor([-214.9916, -213.3227, -201.8976, -201.9598, -213.4994],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0083, device='cuda:0', dtype=torch.float64)
tensor([-214.9594, -213.2485, -201.7760, -201.8493, -213.4076],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0065, device='cuda:0', dtype=torch.float64)
tensor([-214.9535, -213.1775, -201.6358, -201.7362, -213.3298],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0081, device='cuda:0', dtype=torch.float64)
tensor([-214.9590, -213.1048, -201.4284, -201.5614, -213.2239],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0083, device='cuda:0', dtype=torch.float64)
tensor([-214.9989, -213.0211, -201.1502, -201.3195, -213.1106],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0083, device='cuda:0', dtype=torch.float64)
tensor([-215.0602, -212.9476, -200.8711, -201.0893, -213.0177],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0101, device='cuda:0', dtype=torch.float64)
tensor([-215.1568, -212.8738, -200.5712, -200.8364, -212.9491],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0068, device='cuda:0', dtype=torch.float64)
tensor([-215.2836, -212.8009, -200.2742, -200.6176, -212.9049],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0086, device='cuda:0', dtype=torch.float64)
tensor([-215.3689, -212.7728, -200.1344, -200.5258, -212.9079],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0083, device='cuda:0', dtype=torch.float64)
tensor([-215.4194, -212.7812, -200.1210, -200.5411, -212.9460],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0078, device='cuda:0', dtype=torch.float64)
tensor([-215.4684, -212.7719, -200.0522, -200.5098, -212.9529],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0112, device='cuda:0', dtype=torch.float64)
tensor([-215.5053, -212.7695, -200.0257, -200.5152, -212.9756],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0076, device='cuda:0', dtype=torch.float64)
tensor([-215.4769, -212.7657, -200.0319, -200.5184, -212.9534],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0094, device='cuda:0', dtype=torch.float64)
tensor([-215.4651, -212.8047, -200.1245, -200.5997, -212.9915],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0073, device='cuda:0', dtype=torch.float64)
tensor([-215.4679, -212.8510, -200.2718, -200.7386, -213.0733],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0079, device='cuda:0', dtype=torch.float64)
tensor([-215.4819, -212.9012, -200.4012, -200.8702, -213.1584],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0078, device='cuda:0', dtype=torch.float64)
tensor([-215.4809, -212.9420, -200.5027, -200.9791, -213.2125],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0080, device='cuda:0', dtype=torch.float64)
tensor([-215.4613, -212.9815, -200.6219, -201.0858, -213.2647],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0083, device='cuda:0', dtype=torch.float64)
tensor([-215.4084, -213.0657, -200.8676, -201.2978, -213.3409],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0083, device='cuda:0', dtype=torch.float64)
tensor([-215.3460, -213.1408, -201.1011, -201.4888, -213.4048],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0098, device='cuda:0', dtype=torch.float64)
tensor([-215.2934, -213.2275, -201.3355, -201.6832, -213.4690],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0086, device='cuda:0', dtype=torch.float64)
tensor([-215.2429, -213.2594, -201.4540, -201.7677, -213.4862],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0058, device='cuda:0', dtype=torch.float64)
tensor([-215.2252, -213.2800, -201.5160, -201.8126, -213.4979],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0081, device='cuda:0', dtype=torch.float64)
tensor([-215.2295, -213.2931, -201.5443, -201.8268, -213.5106],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0090, device='cuda:0', dtype=torch.float64)
tensor([-215.2331, -213.2692, -201.5065, -201.7836, -213.4905],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0085, device='cuda:0', dtype=torch.float64)
tensor([-215.2750, -213.2314, -201.4190, -201.7327, -213.4797],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0094, device='cuda:0', dtype=torch.float64)
tensor([-215.2889, -213.1770, -201.3328, -201.6671, -213.4414],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0094, device='cuda:0', dtype=torch.float64)
tensor([-215.3468, -213.1326, -201.2066, -201.5751, -213.4249],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0077, device='cuda:0', dtype=torch.float64)
tensor([-215.4673, -213.0692, -200.9797, -201.3919, -213.4231],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0097, device='cuda:0', dtype=torch.float64)
tensor([-215.5656, -213.0478, -200.8479, -201.2786, -213.4458],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0078, device='cuda:0', dtype=torch.float64)
tensor([-215.6386, -213.0263, -200.7376, -201.1777, -213.4515],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0068, device='cuda:0', dtype=torch.float64)
tensor([-215.7153, -212.9918, -200.5816, -201.0496, -213.4409],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0102, device='cuda:0', dtype=torch.float64)
tensor([-215.8222, -212.9459, -200.3952, -200.9250, -213.4401],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0091, device='cuda:0', dtype=torch.float64)
tensor([-215.9418, -212.9322, -200.2387, -200.8131, -213.4758],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0072, device='cuda:0', dtype=torch.float64)
tensor([-216.0105, -212.9346, -200.1664, -200.7702, -213.5108],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0109, device='cuda:0', dtype=torch.float64)
tensor([-216.0432, -212.9280, -200.1474, -200.7612, -213.5313],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0093, device='cuda:0', dtype=torch.float64)
tensor([-216.0522, -212.9719, -200.2640, -200.8630, -213.5971],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0068, device='cuda:0', dtype=torch.float64)
tensor([-216.0702, -213.0059, -200.3310, -200.9062, -213.6499],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0095, device='cuda:0', dtype=torch.float64)
tensor([-216.0743, -213.0738, -200.4356, -200.9531, -213.7210],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0131, device='cuda:0', dtype=torch.float64)
tensor([-215.9618, -213.1525, -200.6771, -201.1027, -213.7491],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0063, device='cuda:0', dtype=torch.float64)
tensor([-215.8536, -213.2257, -200.9024, -201.2466, -213.7704],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0103, device='cuda:0', dtype=torch.float64)
tensor([-215.7662, -213.2823, -201.0821, -201.3680, -213.7841],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0064, device='cuda:0', dtype=torch.float64)
tensor([-215.7230, -213.3339, -201.2077, -201.4634, -213.8095],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0070, device='cuda:0', dtype=torch.float64)
tensor([-215.6815, -213.3613, -201.2450, -201.4779, -213.7940],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0089, device='cuda:0', dtype=torch.float64)
tensor([-215.6667, -213.3610, -201.2262, -201.4573, -213.7740],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0089, device='cuda:0', dtype=torch.float64)
tensor([-215.6287, -213.3370, -201.1871, -201.4170, -213.7157],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0067, device='cuda:0', dtype=torch.float64)
tensor([-215.6043, -213.3296, -201.1152, -201.3318, -213.6608],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0100, device='cuda:0', dtype=torch.float64)
tensor([-215.6567, -213.3236, -200.9593, -201.1861, -213.6366],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0078, device='cuda:0', dtype=torch.float64)
tensor([-215.6997, -213.2972, -200.7666, -201.0159, -213.5875],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0101, device='cuda:0', dtype=torch.float64)
tensor([-215.6829, -213.2669, -200.6607, -200.9130, -213.5294],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0066, device='cuda:0', dtype=torch.float64)
tensor([-215.6581, -213.2677, -200.6569, -200.8938, -213.5200],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0059, device='cuda:0', dtype=torch.float64)
tensor([-215.6186, -213.2675, -200.7094, -200.9271, -213.5177],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0077, device='cuda:0', dtype=torch.float64)
tensor([-215.6063, -213.2654, -200.7235, -200.9237, -213.5162],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0059, device='cuda:0', dtype=torch.float64)
tensor([-215.5854, -213.2624, -200.7436, -200.9199, -213.5122],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0074, device='cuda:0', dtype=torch.float64)
tensor([-215.5420, -213.2738, -200.8439, -200.9805, -213.5257],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0082, device='cuda:0', dtype=torch.float64)
tensor([-215.4914, -213.2610, -200.9122, -201.0304, -213.5107],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0075, device='cuda:0', dtype=torch.float64)
tensor([-215.5002, -213.2441, -200.9352, -201.0669, -213.5263],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0066, device='cuda:0', dtype=torch.float64)
tensor([-215.4967, -213.2082, -200.8934, -201.0393, -213.4986],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0124, device='cuda:0', dtype=torch.float64)
tensor([-215.4341, -213.1807, -200.9351, -201.0672, -213.4621],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0081, device='cuda:0', dtype=torch.float64)
tensor([-215.4228, -213.1503, -200.9375, -201.0825, -213.4489],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0069, device='cuda:0', dtype=torch.float64)
tensor([-215.4200, -213.1088, -200.9134, -201.0718, -213.4302],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0086, device='cuda:0', dtype=torch.float64)
tensor([-215.4169, -213.0535, -200.8517, -201.0083, -213.3968],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0056, device='cuda:0', dtype=torch.float64)
tensor([-215.4014, -213.0211, -200.8438, -200.9971, -213.3726],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0077, device='cuda:0', dtype=torch.float64)
tensor([-215.3916, -212.9998, -200.8570, -200.9957, -213.3587],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0076, device='cuda:0', dtype=torch.float64)
tensor([-215.4059, -212.9724, -200.8634, -201.0172, -213.3615],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0069, device='cuda:0', dtype=torch.float64)
tensor([-215.4207, -212.9350, -200.8330, -201.0105, -213.3439],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0079, device='cuda:0', dtype=torch.float64)
tensor([-215.4093, -212.9142, -200.8679, -201.0512, -213.3395],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0077, device='cuda:0', dtype=torch.float64)
tensor([-215.3805, -212.8986, -200.9051, -201.0764, -213.3190],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0074, device='cuda:0', dtype=torch.float64)
tensor([-215.3688, -212.8710, -200.8896, -201.0620, -213.2879],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0083, device='cuda:0', dtype=torch.float64)
tensor([-215.3626, -212.8416, -200.8836, -201.0576, -213.2687],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0059, device='cuda:0', dtype=torch.float64)
tensor([-215.3400, -212.8200, -200.9049, -201.0789, -213.2445],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0112, device='cuda:0', dtype=torch.float64)
tensor([-215.3859, -212.7937, -200.8282, -201.0266, -213.2316],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0103, device='cuda:0', dtype=torch.float64)
tensor([-215.4155, -212.8075, -200.8197, -201.0091, -213.2425],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0107, device='cuda:0', dtype=torch.float64)
tensor([-215.4628, -212.8033, -200.7655, -200.9606, -213.2457],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0111, device='cuda:0', dtype=torch.float64)
tensor([-215.5411, -212.8103, -200.6687, -200.8824, -213.2573],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0077, device='cuda:0', dtype=torch.float64)
tensor([-215.4858, -212.8042, -200.7181, -200.9031, -213.2163],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0267, device='cuda:0', dtype=torch.float64)
tensor([-215.4646, -212.7784, -200.6638, -200.8258, -213.1575],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0088, device='cuda:0', dtype=torch.float64)
tensor([-215.4428, -212.7716, -200.6451, -200.7801, -213.1184],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0063, device='cuda:0', dtype=torch.float64)
tensor([-215.4166, -212.7731, -200.6679, -200.7896, -213.0951],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0090, device='cuda:0', dtype=torch.float64)
tensor([-215.3733, -212.7883, -200.6948, -200.7917, -213.0573],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0067, device='cuda:0', dtype=torch.float64)
tensor([-215.3091, -212.8041, -200.7204, -200.7932, -213.0008],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0080, device='cuda:0', dtype=torch.float64)
tensor([-215.2387, -212.8333, -200.7840, -200.8178, -212.9668],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0099, device='cuda:0', dtype=torch.float64)
tensor([-215.1595, -212.8786, -200.9119, -200.8920, -212.9587],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0074, device='cuda:0', dtype=torch.float64)
tensor([-215.0609, -212.9249, -201.0823, -200.9967, -212.9451],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0075, device='cuda:0', dtype=torch.float64)
tensor([-214.9931, -212.9464, -201.2147, -201.0880, -212.9405],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0090, device='cuda:0', dtype=torch.float64)
tensor([-214.9407, -212.9539, -201.2860, -201.1273, -212.9166],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0072, device='cuda:0', dtype=torch.float64)
tensor([-214.8737, -212.9848, -201.4086, -201.2052, -212.9076],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0095, device='cuda:0', dtype=torch.float64)
tensor([-214.8115, -213.0099, -201.4994, -201.2467, -212.8960],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0086, device='cuda:0', dtype=torch.float64)
tensor([-214.7680, -213.0271, -201.5404, -201.2501, -212.8807],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0085, device='cuda:0', dtype=torch.float64)
tensor([-214.7308, -213.0444, -201.5762, -201.2467, -212.8755],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0087, device='cuda:0', dtype=torch.float64)
tensor([-214.7436, -213.0357, -201.4927, -201.1629, -212.8517],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0069, device='cuda:0', dtype=torch.float64)
tensor([-214.8219, -213.0166, -201.3431, -201.0494, -212.8567],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0078, device='cuda:0', dtype=torch.float64)
tensor([-214.9016, -213.0089, -201.2035, -200.9568, -212.8705],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0064, device='cuda:0', dtype=torch.float64)
tensor([-214.9965, -213.0117, -201.0516, -200.8553, -212.8963],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0126, device='cuda:0', dtype=torch.float64)
tensor([-215.1090, -213.0039, -200.8606, -200.7230, -212.9192],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0058, device='cuda:0', dtype=torch.float64)
tensor([-215.2420, -213.0243, -200.7269, -200.6597, -212.9917],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0066, device='cuda:0', dtype=torch.float64)
tensor([-215.3397, -213.0372, -200.6323, -200.6190, -213.0474],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0097, device='cuda:0', dtype=torch.float64)
tensor([-215.4066, -213.0412, -200.5255, -200.5686, -213.0676],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0061, device='cuda:0', dtype=torch.float64)
tensor([-215.4372, -213.0455, -200.5114, -200.6032, -213.0888],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0064, device='cuda:0', dtype=torch.float64)
tensor([-215.5220, -213.0555, -200.4471, -200.6044, -213.1393],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0065, device='cuda:0', dtype=torch.float64)
tensor([-215.5920, -213.0640, -200.4079, -200.6295, -213.1861],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0096, device='cuda:0', dtype=torch.float64)
tensor([-215.6555, -213.0586, -200.3361, -200.6161, -213.2119],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0081, device='cuda:0', dtype=torch.float64)
tensor([-215.7289, -213.0352, -200.2059, -200.5510, -213.2184],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0085, device='cuda:0', dtype=torch.float64)
tensor([-215.7360, -213.0181, -200.1538, -200.5282, -213.2113],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0084, device='cuda:0', dtype=torch.float64)
tensor([-215.7320, -212.9967, -200.1006, -200.4954, -213.1874],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0077, device='cuda:0', dtype=torch.float64)
tensor([-215.6736, -212.9899, -200.1309, -200.5251, -213.1595],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0086, device='cuda:0', dtype=torch.float64)
tensor([-215.6134, -213.0139, -200.2453, -200.6485, -213.1685],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0088, device='cuda:0', dtype=torch.float64)
tensor([-215.5727, -213.0390, -200.3682, -200.7917, -213.1897],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0088, device='cuda:0', dtype=torch.float64)
tensor([-215.5399, -213.0677, -200.4813, -200.9181, -213.2147],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0064, device='cuda:0', dtype=torch.float64)
tensor([-215.4868, -213.0966, -200.5970, -201.0228, -213.2246],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0083, device='cuda:0', dtype=torch.float64)
tensor([-215.4270, -213.1403, -200.7680, -201.1760, -213.2538],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0088, device='cuda:0', dtype=torch.float64)
tensor([-215.3918, -213.1855, -200.9430, -201.3450, -213.3058],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0090, device='cuda:0', dtype=torch.float64)
tensor([-215.3694, -213.2067, -201.0404, -201.4321, -213.3293],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0068, device='cuda:0', dtype=torch.float64)
tensor([-215.3584, -213.2255, -201.1029, -201.4785, -213.3488],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0079, device='cuda:0', dtype=torch.float64)
tensor([-215.3820, -213.2087, -201.0398, -201.4178, -213.3407],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0074, device='cuda:0', dtype=torch.float64)
tensor([-215.4035, -213.1821, -200.9659, -201.3546, -213.3206],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0094, device='cuda:0', dtype=torch.float64)
tensor([-215.4105, -213.1175, -200.8394, -201.2214, -213.2700],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0057, device='cuda:0', dtype=torch.float64)
tensor([-215.4011, -213.0410, -200.7260, -201.1092, -213.2134],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0071, device='cuda:0', dtype=torch.float64)
tensor([-215.4316, -212.9637, -200.5568, -200.9698, -213.1615],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0080, device='cuda:0', dtype=torch.float64)
tensor([-215.5184, -212.8722, -200.3170, -200.7804, -213.1248],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0053, device='cuda:0', dtype=torch.float64)
tensor([-215.5586, -212.7896, -200.1268, -200.6064, -213.0699],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0079, device='cuda:0', dtype=torch.float64)
tensor([-215.5629, -212.7280, -200.0260, -200.5108, -213.0334],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0102, device='cuda:0', dtype=torch.float64)
tensor([-215.5460, -212.7046, -200.0196, -200.5035, -213.0244],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0090, device='cuda:0', dtype=torch.float64)
tensor([-215.5120, -212.6649, -200.0297, -200.5124, -212.9995],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0118, device='cuda:0', dtype=torch.float64)
tensor([-215.4582, -212.6193, -200.0599, -200.5429, -212.9636],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0089, device='cuda:0', dtype=torch.float64)
tensor([-215.3848, -212.5628, -200.0700, -200.5456, -212.9073],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0095, device='cuda:0', dtype=torch.float64)
tensor([-215.2835, -212.4969, -200.0727, -200.5447, -212.8125],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0091, device='cuda:0', dtype=torch.float64)
tensor([-215.1480, -212.4558, -200.1533, -200.5970, -212.7236],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0074, device='cuda:0', dtype=torch.float64)
tensor([-215.0435, -212.4290, -200.2393, -200.6506, -212.6731],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0089, device='cuda:0', dtype=torch.float64)
tensor([-214.9704, -212.4165, -200.2899, -200.6716, -212.6411],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0160, device='cuda:0', dtype=torch.float64)
tensor([-214.8554, -212.4067, -200.3775, -200.7108, -212.5899],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0108, device='cuda:0', dtype=torch.float64)
tensor([-214.7475, -212.4185, -200.5083, -200.7894, -212.5795],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0055, device='cuda:0', dtype=torch.float64)
tensor([-214.6647, -212.4375, -200.6310, -200.8832, -212.5779],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0100, device='cuda:0', dtype=torch.float64)
tensor([-214.6122, -212.4408, -200.7316, -200.9687, -212.5879],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0065, device='cuda:0', dtype=torch.float64)
tensor([-214.5842, -212.4490, -200.8129, -201.0470, -212.6092],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0096, device='cuda:0', dtype=torch.float64)
tensor([-214.5615, -212.4512, -200.9186, -201.1593, -212.6429],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0113, device='cuda:0', dtype=torch.float64)
tensor([-214.5350, -212.4525, -201.0561, -201.2958, -212.6895],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0081, device='cuda:0', dtype=torch.float64)
tensor([-214.5329, -212.4382, -201.0660, -201.3152, -212.6972],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0106, device='cuda:0', dtype=torch.float64)
tensor([-214.5075, -212.4433, -201.1219, -201.3700, -212.7092],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0070, device='cuda:0', dtype=torch.float64)
tensor([-214.5145, -212.4348, -201.0749, -201.3363, -212.6995],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0094, device='cuda:0', dtype=torch.float64)
tensor([-214.5392, -212.4190, -201.0136, -201.2993, -212.7032],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0071, device='cuda:0', dtype=torch.float64)
tensor([-214.6281, -212.4072, -200.9004, -201.2332, -212.7399],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0055, device='cuda:0', dtype=torch.float64)
tensor([-214.7252, -212.3986, -200.7818, -201.1615, -212.7786],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0074, device='cuda:0', dtype=torch.float64)
tensor([-214.8073, -212.3853, -200.6546, -201.0650, -212.8002],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0068, device='cuda:0', dtype=torch.float64)
tensor([-214.9038, -212.3989, -200.5931, -201.0444, -212.8705],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0066, device='cuda:0', dtype=torch.float64)
tensor([-215.0160, -212.3939, -200.4573, -200.9475, -212.9207],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0095, device='cuda:0', dtype=torch.float64)
tensor([-215.1357, -212.3982, -200.3392, -200.8751, -212.9879],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0081, device='cuda:0', dtype=torch.float64)
tensor([-215.1420, -212.4150, -200.3888, -200.9427, -213.0329],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0077, device='cuda:0', dtype=torch.float64)
tensor([-215.1346, -212.4178, -200.3968, -200.9376, -213.0432],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0066, device='cuda:0', dtype=torch.float64)
tensor([-215.1194, -212.4242, -200.4413, -200.9668, -213.0617],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0087, device='cuda:0', dtype=torch.float64)
tensor([-215.0539, -212.4494, -200.6251, -201.1209, -213.1094],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0079, device='cuda:0', dtype=torch.float64)
tensor([-215.0123, -212.4805, -200.7614, -201.2291, -213.1533],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0072, device='cuda:0', dtype=torch.float64)
tensor([-214.9648, -212.5337, -200.9307, -201.3648, -213.2154],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0081, device='cuda:0', dtype=torch.float64)
tensor([-214.9871, -212.5551, -200.9319, -201.3677, -213.2540],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0072, device='cuda:0', dtype=torch.float64)
tensor([-215.0443, -212.5639, -200.8353, -201.2864, -213.2732],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0075, device='cuda:0', dtype=torch.float64)
tensor([-215.1472, -212.5449, -200.6271, -201.1244, -213.2771],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0084, device='cuda:0', dtype=torch.float64)
tensor([-215.2177, -212.5472, -200.5159, -201.0384, -213.2941],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0086, device='cuda:0', dtype=torch.float64)
tensor([-215.2768, -212.5628, -200.4603, -200.9894, -213.3227],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0071, device='cuda:0', dtype=torch.float64)
tensor([-215.3097, -212.5734, -200.3938, -200.9120, -213.3236],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0086, device='cuda:0', dtype=torch.float64)
tensor([-215.3334, -212.5863, -200.3643, -200.8732, -213.3334],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0060, device='cuda:0', dtype=torch.float64)
tensor([-215.3252, -212.6062, -200.4061, -200.8918, -213.3533],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0053, device='cuda:0', dtype=torch.float64)
tensor([-215.3386, -212.6120, -200.3782, -200.8609, -213.3476],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0086, device='cuda:0', dtype=torch.float64)
tensor([-215.3632, -212.5998, -200.2330, -200.7175, -213.2911],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0057, device='cuda:0', dtype=torch.float64)
tensor([-215.3072, -212.6014, -200.2141, -200.6668, -213.2188],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0075, device='cuda:0', dtype=torch.float64)
tensor([-215.1560, -212.6123, -200.3750, -200.7628, -213.1431],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0064, device='cuda:0', dtype=torch.float64)
tensor([-215.0450, -212.6245, -200.4840, -200.8268, -213.0810],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0068, device='cuda:0', dtype=torch.float64)
tensor([-214.9837, -212.6337, -200.5253, -200.8406, -213.0316],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0110, device='cuda:0', dtype=torch.float64)
tensor([-214.9125, -212.6363, -200.5451, -200.8242, -212.9648],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0083, device='cuda:0', dtype=torch.float64)
tensor([-214.8251, -212.6139, -200.5184, -200.7703, -212.8582],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0092, device='cuda:0', dtype=torch.float64)
tensor([-214.7703, -212.6000, -200.5100, -200.7392, -212.7919],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0119, device='cuda:0', dtype=torch.float64)
tensor([-214.7154, -212.5990, -200.5642, -200.7642, -212.7574],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0064, device='cuda:0', dtype=torch.float64)
tensor([-214.6314, -212.5896, -200.6592, -200.8294, -212.7097],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0073, device='cuda:0', dtype=torch.float64)
tensor([-214.5494, -212.5956, -200.7762, -200.9150, -212.6752],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0082, device='cuda:0', dtype=torch.float64)
tensor([-214.4864, -212.6108, -200.8861, -200.9968, -212.6611],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0089, device='cuda:0', dtype=torch.float64)
tensor([-214.3952, -212.6219, -201.0268, -201.0951, -212.6421],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0085, device='cuda:0', dtype=torch.float64)
tensor([-214.2630, -212.6256, -201.1938, -201.2079, -212.5933],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0070, device='cuda:0', dtype=torch.float64)
tensor([-214.1212, -212.6250, -201.3634, -201.3066, -212.5386],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0069, device='cuda:0', dtype=torch.float64)
tensor([-214.0011, -212.5965, -201.4502, -201.3404, -212.4693],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0077, device='cuda:0', dtype=torch.float64)
tensor([-213.9134, -212.5481, -201.4391, -201.2900, -212.3880],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0074, device='cuda:0', dtype=torch.float64)
tensor([-213.8916, -212.4884, -201.3233, -201.1840, -212.3144],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0068, device='cuda:0', dtype=torch.float64)
tensor([-213.8721, -212.4354, -201.2597, -201.1227, -212.2737],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0090, device='cuda:0', dtype=torch.float64)
tensor([-213.9088, -212.3816, -201.1685, -201.0823, -212.2747],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0081, device='cuda:0', dtype=torch.float64)
tensor([-213.9526, -212.3250, -201.0648, -201.0294, -212.2803],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0090, device='cuda:0', dtype=torch.float64)
tensor([-214.0043, -212.2760, -200.9580, -200.9830, -212.2877],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0090, device='cuda:0', dtype=torch.float64)
tensor([-214.0834, -212.2245, -200.8517, -200.9464, -212.3254],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0085, device='cuda:0', dtype=torch.float64)
tensor([-214.1771, -212.1851, -200.7634, -200.9306, -212.3816],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0102, device='cuda:0', dtype=torch.float64)
tensor([-214.3309, -212.1430, -200.5629, -200.8254, -212.4436],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0092, device='cuda:0', dtype=torch.float64)
tensor([-214.5411, -212.0915, -200.2765, -200.6743, -212.5101],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0081, device='cuda:0', dtype=torch.float64)
tensor([-214.7328, -212.0372, -199.9929, -200.5124, -212.5498],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0072, device='cuda:0', dtype=torch.float64)
tensor([-214.8776, -211.9978, -199.7657, -200.3793, -212.5778],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0074, device='cuda:0', dtype=torch.float64)
tensor([-214.9863, -211.9642, -199.6140, -200.3001, -212.6079],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0092, device='cuda:0', dtype=torch.float64)
tensor([-215.0428, -211.9400, -199.5427, -200.2775, -212.6203],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0079, device='cuda:0', dtype=torch.float64)
tensor([-215.0861, -211.9253, -199.5408, -200.3211, -212.6523],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0077, device='cuda:0', dtype=torch.float64)
tensor([-215.1388, -211.9410, -199.6195, -200.4547, -212.7368],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0062, device='cuda:0', dtype=torch.float64)
tensor([-215.1560, -211.9651, -199.7771, -200.6578, -212.8273],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0109, device='cuda:0', dtype=torch.float64)
tensor([-215.1147, -212.0003, -199.9750, -200.8638, -212.8844],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0062, device='cuda:0', dtype=torch.float64)
tensor([-215.0805, -212.0458, -200.1488, -201.0406, -212.9419],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0071, device='cuda:0', dtype=torch.float64)
tensor([-214.9770, -212.1201, -200.4617, -201.3155, -212.9961],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0080, device='cuda:0', dtype=torch.float64)
tensor([-214.8822, -212.1774, -200.7361, -201.5586, -213.0375],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0090, device='cuda:0', dtype=torch.float64)
tensor([-214.7711, -212.2109, -200.9573, -201.7287, -213.0379],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0067, device='cuda:0', dtype=torch.float64)
tensor([-214.6983, -212.2302, -201.0618, -201.8076, -213.0230],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0061, device='cuda:0', dtype=torch.float64)
tensor([-214.6420, -212.2509, -201.1296, -201.8421, -213.0103],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0059, device='cuda:0', dtype=torch.float64)
tensor([-214.6104, -212.2527, -201.0944, -201.7883, -212.9717],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0085, device='cuda:0', dtype=torch.float64)
tensor([-214.5174, -212.2467, -201.1369, -201.7879, -212.9131],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0075, device='cuda:0', dtype=torch.float64)
tensor([-214.4308, -212.2360, -201.1766, -201.7789, -212.8577],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0083, device='cuda:0', dtype=torch.float64)
tensor([-214.3493, -212.2290, -201.2319, -201.7848, -212.8104],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0090, device='cuda:0', dtype=torch.float64)
tensor([-214.3452, -212.2248, -201.2107, -201.7415, -212.8057],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0062, device='cuda:0', dtype=torch.float64)
tensor([-214.3190, -212.2008, -201.1613, -201.6578, -212.7611],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0056, device='cuda:0', dtype=torch.float64)
tensor([-214.2760, -212.1972, -201.1362, -201.5900, -212.7065],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0082, device='cuda:0', dtype=torch.float64)
tensor([-214.2241, -212.1952, -201.1321, -201.5465, -212.6558],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0063, device='cuda:0', dtype=torch.float64)
tensor([-214.1882, -212.1807, -201.0641, -201.4477, -212.5947],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0104, device='cuda:0', dtype=torch.float64)
tensor([-214.1768, -212.1771, -200.9897, -201.3596, -212.5524],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0079, device='cuda:0', dtype=torch.float64)
tensor([-214.1954, -212.1680, -200.8846, -201.2609, -212.5239],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0122, device='cuda:0', dtype=torch.float64)
tensor([-214.2291, -212.1465, -200.7411, -201.1356, -212.4853],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0145, device='cuda:0', dtype=torch.float64)
tensor([-214.2881, -212.1322, -200.5738, -201.0102, -212.4610],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0077, device='cuda:0', dtype=torch.float64)
tensor([-214.3379, -212.1362, -200.4776, -200.9376, -212.4648],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0069, device='cuda:0', dtype=torch.float64)
tensor([-214.3799, -212.1499, -200.4361, -200.9276, -212.4823],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0081, device='cuda:0', dtype=torch.float64)
tensor([-214.3688, -212.1866, -200.4656, -200.9445, -212.4774],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0085, device='cuda:0', dtype=torch.float64)
tensor([-214.3842, -212.2101, -200.4426, -200.9320, -212.4662],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0080, device='cuda:0', dtype=torch.float64)
tensor([-214.4313, -212.2496, -200.4165, -200.9315, -212.4857],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0085, device='cuda:0', dtype=torch.float64)
tensor([-214.4780, -212.2966, -200.3559, -200.8866, -212.4892],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0068, device='cuda:0', dtype=torch.float64)
tensor([-214.4785, -212.3329, -200.3553, -200.8743, -212.4702],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0088, device='cuda:0', dtype=torch.float64)
tensor([-214.4568, -212.3819, -200.4494, -200.9638, -212.4727],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0060, device='cuda:0', dtype=torch.float64)
tensor([-214.4886, -212.4351, -200.5403, -201.0876, -212.5195],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0071, device='cuda:0', dtype=torch.float64)
tensor([-214.5206, -212.4870, -200.6115, -201.1973, -212.5593],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0060, device='cuda:0', dtype=torch.float64)
tensor([-214.5692, -212.5246, -200.5936, -201.2195, -212.5826],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0048, device='cuda:0', dtype=torch.float64)
tensor([-214.6430, -212.5605, -200.5497, -201.2257, -212.6188],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0086, device='cuda:0', dtype=torch.float64)
tensor([-214.6845, -212.5967, -200.4879, -201.1820, -212.6232],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0074, device='cuda:0', dtype=torch.float64)
tensor([-214.7149, -212.6214, -200.3861, -201.0916, -212.5989],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0074, device='cuda:0', dtype=torch.float64)
tensor([-214.8092, -212.6229, -200.2126, -200.9678, -212.6019],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0071, device='cuda:0', dtype=torch.float64)
tensor([-214.8810, -212.6293, -200.0790, -200.8708, -212.5947],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0093, device='cuda:0', dtype=torch.float64)
tensor([-214.9036, -212.6144, -199.9776, -200.7696, -212.5592],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0064, device='cuda:0', dtype=torch.float64)
tensor([-214.8827, -212.5911, -199.8950, -200.6619, -212.4891],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0108, device='cuda:0', dtype=torch.float64)
tensor([-214.8646, -212.5505, -199.8251, -200.5712, -212.4235],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0063, device='cuda:0', dtype=torch.float64)
tensor([-214.7998, -212.5083, -199.8222, -200.5253, -212.3472],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0090, device='cuda:0', dtype=torch.float64)
tensor([-214.7547, -212.4642, -199.7975, -200.4821, -212.2726],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0086, device='cuda:0', dtype=torch.float64)
tensor([-214.6866, -212.4148, -199.8108, -200.4618, -212.1999],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0086, device='cuda:0', dtype=torch.float64)
tensor([-214.5678, -212.3800, -199.8805, -200.4715, -212.1059],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0072, device='cuda:0', dtype=torch.float64)
tensor([-214.5177, -212.3403, -199.8309, -200.3793, -212.0233],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0071, device='cuda:0', dtype=torch.float64)
tensor([-214.4446, -212.3010, -199.7854, -200.2718, -211.9188],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0095, device='cuda:0', dtype=torch.float64)
tensor([-214.4496, -212.2686, -199.6963, -200.1753, -211.8690],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0097, device='cuda:0', dtype=torch.float64)
tensor([-214.4618, -212.2509, -199.6641, -200.1486, -211.8600],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0120, device='cuda:0', dtype=torch.float64)
tensor([-214.4656, -212.2425, -199.6981, -200.1886, -211.8702],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0083, device='cuda:0', dtype=torch.float64)
tensor([-214.4749, -212.2318, -199.7559, -200.2559, -211.9058],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0074, device='cuda:0', dtype=torch.float64)
tensor([-214.5287, -212.2128, -199.7437, -200.2824, -211.9463],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0101, device='cuda:0', dtype=torch.float64)
tensor([-214.5485, -212.2072, -199.7684, -200.3260, -211.9713],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0077, device='cuda:0', dtype=torch.float64)
tensor([-214.5913, -212.1977, -199.7899, -200.3648, -212.0183],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0076, device='cuda:0', dtype=torch.float64)
tensor([-214.6337, -212.2048, -199.8914, -200.5026, -212.1046],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0057, device='cuda:0', dtype=torch.float64)
tensor([-214.6769, -212.2317, -200.0406, -200.6836, -212.2125],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0083, device='cuda:0', dtype=torch.float64)
tensor([-214.7533, -212.2437, -200.1299, -200.8256, -212.3206],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0074, device='cuda:0', dtype=torch.float64)
tensor([-214.7645, -212.2570, -200.2541, -200.9585, -212.3743],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0102, device='cuda:0', dtype=torch.float64)
tensor([-214.7460, -212.2779, -200.4222, -201.1050, -212.4273],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0078, device='cuda:0', dtype=torch.float64)
tensor([-214.7437, -212.2795, -200.4675, -201.1397, -212.4343],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0093, device='cuda:0', dtype=torch.float64)
tensor([-214.7578, -212.2820, -200.4692, -201.1266, -212.4460],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0070, device='cuda:0', dtype=torch.float64)
tensor([-214.7712, -212.2849, -200.4561, -201.0878, -212.4547],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0094, device='cuda:0', dtype=torch.float64)
tensor([-214.7830, -212.2755, -200.4340, -201.0444, -212.4576],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0081, device='cuda:0', dtype=torch.float64)
tensor([-214.7857, -212.2535, -200.4127, -200.9883, -212.4551],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0062, device='cuda:0', dtype=torch.float64)
tensor([-214.7827, -212.2403, -200.4252, -200.9610, -212.4640],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0069, device='cuda:0', dtype=torch.float64)
tensor([-214.8081, -212.2064, -200.3683, -200.8957, -212.4627],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0069, device='cuda:0', dtype=torch.float64)
tensor([-214.8169, -212.1615, -200.3137, -200.8156, -212.4474],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0062, device='cuda:0', dtype=torch.float64)
tensor([-214.8275, -212.1273, -200.2691, -200.7423, -212.4424],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0066, device='cuda:0', dtype=torch.float64)
tensor([-214.9002, -212.0762, -200.0967, -200.5803, -212.4406],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0087, device='cuda:0', dtype=torch.float64)
tensor([-214.9345, -212.0249, -199.9651, -200.4455, -212.4163],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0059, device='cuda:0', dtype=torch.float64)
tensor([-214.9907, -211.9765, -199.8171, -200.2999, -212.4045],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0097, device='cuda:0', dtype=torch.float64)
tensor([-214.9712, -211.9402, -199.8399, -200.3079, -212.4019],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0111, device='cuda:0', dtype=torch.float64)
tensor([-214.9279, -211.8877, -199.8062, -200.2307, -212.3488],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0102, device='cuda:0', dtype=torch.float64)
tensor([-214.8973, -211.8606, -199.8307, -200.2275, -212.3374],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0104, device='cuda:0', dtype=torch.float64)
tensor([-214.7762, -211.8255, -199.9303, -200.2792, -212.2767],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0068, device='cuda:0', dtype=torch.float64)
tensor([-214.6596, -211.7842, -200.0212, -200.3191, -212.2081],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0079, device='cuda:0', dtype=torch.float64)
tensor([-214.5677, -211.7551, -200.1025, -200.3591, -212.1629],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0114, device='cuda:0', dtype=torch.float64)
tensor([-214.4775, -211.7511, -200.2280, -200.4369, -212.1400],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0067, device='cuda:0', dtype=torch.float64)
tensor([-214.3773, -211.7440, -200.4047, -200.5620, -212.1225],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0071, device='cuda:0', dtype=torch.float64)
tensor([-214.2370, -211.7553, -200.6630, -200.7395, -212.1027],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0070, device='cuda:0', dtype=torch.float64)
tensor([-214.1013, -211.7707, -200.8998, -200.8925, -212.0779],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0093, device='cuda:0', dtype=torch.float64)
tensor([-214.0214, -211.7591, -200.9932, -200.9297, -212.0361],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0076, device='cuda:0', dtype=torch.float64)
tensor([-213.9302, -211.7600, -201.0864, -200.9617, -211.9771],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0079, device='cuda:0', dtype=torch.float64)
tensor([-213.8704, -211.7643, -201.1544, -200.9974, -211.9307],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0088, device='cuda:0', dtype=torch.float64)
tensor([-213.8563, -211.7649, -201.1625, -201.0009, -211.9011],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0072, device='cuda:0', dtype=torch.float64)
tensor([-213.8443, -211.7634, -201.1513, -200.9921, -211.8738],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0053, device='cuda:0', dtype=torch.float64)
tensor([-213.8450, -211.7593, -201.1025, -200.9633, -211.8375],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0088, device='cuda:0', dtype=torch.float64)
tensor([-213.8645, -211.7625, -201.0190, -200.9179, -211.7981],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0074, device='cuda:0', dtype=torch.float64)
tensor([-213.9314, -211.7517, -200.8490, -200.8045, -211.7687],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0097, device='cuda:0', dtype=torch.float64)
tensor([-213.9586, -211.7500, -200.6883, -200.6821, -211.7100],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0090, device='cuda:0', dtype=torch.float64)
tensor([-214.0036, -211.7381, -200.5628, -200.6123, -211.6959],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0083, device='cuda:0', dtype=torch.float64)
tensor([-214.0267, -211.7386, -200.5149, -200.6140, -211.6982],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0084, device='cuda:0', dtype=torch.float64)
tensor([-214.0446, -211.7406, -200.4575, -200.5961, -211.6973],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0071, device='cuda:0', dtype=torch.float64)
tensor([-214.0252, -211.7342, -200.4029, -200.5609, -211.6661],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0069, device='cuda:0', dtype=torch.float64)
tensor([-214.0036, -211.7148, -200.3275, -200.5145, -211.6198],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0076, device='cuda:0', dtype=torch.float64)
tensor([-214.0269, -211.7183, -200.2749, -200.5123, -211.6304],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0047, device='cuda:0', dtype=torch.float64)
tensor([-214.0668, -211.7332, -200.2548, -200.5565, -211.6673],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0086, device='cuda:0', dtype=torch.float64)
tensor([-214.0922, -211.7598, -200.2950, -200.6350, -211.7173],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0057, device='cuda:0', dtype=torch.float64)
tensor([-214.1320, -211.7802, -200.3301, -200.7142, -211.7767],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0081, device='cuda:0', dtype=torch.float64)
tensor([-214.1708, -211.8003, -200.3587, -200.7900, -211.8343],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0106, device='cuda:0', dtype=torch.float64)
tensor([-214.1910, -211.7827, -200.3291, -200.8028, -211.8376],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0069, device='cuda:0', dtype=torch.float64)
tensor([-214.1951, -211.7683, -200.3218, -200.8173, -211.8354],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0081, device='cuda:0', dtype=torch.float64)
tensor([-214.2143, -211.7719, -200.3367, -200.8393, -211.8585],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0075, device='cuda:0', dtype=torch.float64)
tensor([-214.2268, -211.7774, -200.3474, -200.8489, -211.8756],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0079, device='cuda:0', dtype=torch.float64)
tensor([-214.2382, -211.7808, -200.3540, -200.8452, -211.8948],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0080, device='cuda:0', dtype=torch.float64)
tensor([-214.2580, -211.7706, -200.3192, -200.8067, -211.8964],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0091, device='cuda:0', dtype=torch.float64)
tensor([-214.3284, -211.7676, -200.2426, -200.7391, -211.9284],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0061, device='cuda:0', dtype=torch.float64)
tensor([-214.4024, -211.7762, -200.1894, -200.7061, -211.9749],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0081, device='cuda:0', dtype=torch.float64)
tensor([-214.4006, -211.7896, -200.2497, -200.7520, -211.9957],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0056, device='cuda:0', dtype=torch.float64)
tensor([-214.3584, -211.7853, -200.3457, -200.8223, -211.9890],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0084, device='cuda:0', dtype=torch.float64)
tensor([-214.3397, -211.7479, -200.3245, -200.7880, -211.9602],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0065, device='cuda:0', dtype=torch.float64)
tensor([-214.3864, -211.7142, -200.2272, -200.7109, -211.9622],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0124, device='cuda:0', dtype=torch.float64)
tensor([-214.4247, -211.7063, -200.2022, -200.7000, -211.9913],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0074, device='cuda:0', dtype=torch.float64)
tensor([-214.4814, -211.6868, -200.1670, -200.6894, -212.0356],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0111, device='cuda:0', dtype=torch.float64)
tensor([-214.5105, -211.6547, -200.1474, -200.6830, -212.0573],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0087, device='cuda:0', dtype=torch.float64)
tensor([-214.6040, -211.6308, -200.0659, -200.6425, -212.1122],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0091, device='cuda:0', dtype=torch.float64)
tensor([-214.6363, -211.6106, -200.0421, -200.6263, -212.1374],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0087, device='cuda:0', dtype=torch.float64)
tensor([-214.6474, -211.6157, -200.0909, -200.6779, -212.1840],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0061, device='cuda:0', dtype=torch.float64)
tensor([-214.6339, -211.6268, -200.1688, -200.7510, -212.2137],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0099, device='cuda:0', dtype=torch.float64)
tensor([-214.6659, -211.6355, -200.2085, -200.8066, -212.2696],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0086, device='cuda:0', dtype=torch.float64)
tensor([-214.7178, -211.6630, -200.2291, -200.8505, -212.3366],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0076, device='cuda:0', dtype=torch.float64)
tensor([-214.7168, -211.6905, -200.2907, -200.9111, -212.3720],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0064, device='cuda:0', dtype=torch.float64)
tensor([-214.6718, -211.7066, -200.4007, -201.0042, -212.3771],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0098, device='cuda:0', dtype=torch.float64)
tensor([-214.5677, -211.7069, -200.5395, -201.0965, -212.3344],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0055, device='cuda:0', dtype=torch.float64)
tensor([-214.4533, -211.7227, -200.6748, -201.1645, -212.2904],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0063, device='cuda:0', dtype=torch.float64)
tensor([-214.3331, -211.7270, -200.7927, -201.2072, -212.2329],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0077, device='cuda:0', dtype=torch.float64)
tensor([-214.2133, -211.7315, -200.8996, -201.2460, -212.1720],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0062, device='cuda:0', dtype=torch.float64)
tensor([-214.1250, -211.7015, -200.9133, -201.2131, -212.0973],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0084, device='cuda:0', dtype=torch.float64)
tensor([-214.0315, -211.6863, -200.9880, -201.2463, -212.0521],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0071, device='cuda:0', dtype=torch.float64)
tensor([-213.9613, -211.6693, -200.9902, -201.2187, -211.9948],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0061, device='cuda:0', dtype=torch.float64)
tensor([-213.8559, -211.6413, -200.9872, -201.1673, -211.8981],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0066, device='cuda:0', dtype=torch.float64)
tensor([-213.7124, -211.6189, -201.0658, -201.1702, -211.8090],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0062, device='cuda:0', dtype=torch.float64)
tensor([-213.6138, -211.6088, -201.0995, -201.1519, -211.7393],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0062, device='cuda:0', dtype=torch.float64)
tensor([-213.5957, -211.5859, -201.0209, -201.0612, -211.6965],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0076, device='cuda:0', dtype=torch.float64)
tensor([-213.5856, -211.5666, -200.9323, -200.9693, -211.6561],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0112, device='cuda:0', dtype=torch.float64)
tensor([-213.6415, -211.5751, -200.8658, -200.9316, -211.6806],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0059, device='cuda:0', dtype=torch.float64)
tensor([-213.7084, -211.5975, -200.8127, -200.9053, -211.7249],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0076, device='cuda:0', dtype=torch.float64)
tensor([-213.7751, -211.5951, -200.7578, -200.8987, -211.7630],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0067, device='cuda:0', dtype=torch.float64)
tensor([-213.8598, -211.5883, -200.6118, -200.8047, -211.7771],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0064, device='cuda:0', dtype=torch.float64)
tensor([-213.9696, -211.5951, -200.4389, -200.6746, -211.8077],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0062, device='cuda:0', dtype=torch.float64)
tensor([-214.0509, -211.6261, -200.3642, -200.6400, -211.8551],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0083, device='cuda:0', dtype=torch.float64)
tensor([-214.1322, -211.6388, -200.2490, -200.5676, -211.8718],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0065, device='cuda:0', dtype=torch.float64)
tensor([-214.1862, -211.6565, -200.2000, -200.5623, -211.8893],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0061, device='cuda:0', dtype=torch.float64)
tensor([-214.2328, -211.6586, -200.1652, -200.5827, -211.9036],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0121, device='cuda:0', dtype=torch.float64)
tensor([-214.2730, -211.6634, -200.1182, -200.5796, -211.9148],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0079, device='cuda:0', dtype=torch.float64)
tensor([-214.2610, -211.6693, -200.1738, -200.6448, -211.9231],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0075, device='cuda:0', dtype=torch.float64)
tensor([-214.1830, -211.6529, -200.2692, -200.7244, -211.8771],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0061, device='cuda:0', dtype=torch.float64)
tensor([-214.0901, -211.6439, -200.3882, -200.8185, -211.8277],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0099, device='cuda:0', dtype=torch.float64)
tensor([-214.0003, -211.6326, -200.4553, -200.8400, -211.7578],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0062, device='cuda:0', dtype=torch.float64)
tensor([-213.9585, -211.6305, -200.5008, -200.8749, -211.7303],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0091, device='cuda:0', dtype=torch.float64)
tensor([-213.9089, -211.6085, -200.5337, -200.8931, -211.6865],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0060, device='cuda:0', dtype=torch.float64)
tensor([-213.8999, -211.5847, -200.5220, -200.8903, -211.6571],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0088, device='cuda:0', dtype=torch.float64)
tensor([-213.8772, -211.5700, -200.5079, -200.8552, -211.6101],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0066, device='cuda:0', dtype=torch.float64)
tensor([-213.8645, -211.5591, -200.4618, -200.7997, -211.5612],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0064, device='cuda:0', dtype=torch.float64)
tensor([-213.8437, -211.5446, -200.4075, -200.7310, -211.5069],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0093, device='cuda:0', dtype=torch.float64)
tensor([-213.8638, -211.5273, -200.3416, -200.6681, -211.4909],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0061, device='cuda:0', dtype=torch.float64)
tensor([-213.8820, -211.4895, -200.2369, -200.5646, -211.4461],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0065, device='cuda:0', dtype=torch.float64)
tensor([-213.8383, -211.4667, -200.1663, -200.4532, -211.3582],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0082, device='cuda:0', dtype=torch.float64)
tensor([-213.7739, -211.4684, -200.1694, -200.4390, -211.2869],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0060, device='cuda:0', dtype=torch.float64)
tensor([-213.7264, -211.4656, -200.1683, -200.4384, -211.2306],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0078, device='cuda:0', dtype=torch.float64)
tensor([-213.7173, -211.4614, -200.1092, -200.3931, -211.1785],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0074, device='cuda:0', dtype=torch.float64)
tensor([-213.6983, -211.4833, -200.1376, -200.4335, -211.1649],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0082, device='cuda:0', dtype=torch.float64)
tensor([-213.6527, -211.5112, -200.2330, -200.5272, -211.1536],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0131, device='cuda:0', dtype=torch.float64)
tensor([-213.6214, -211.5488, -200.3245, -200.6074, -211.1608],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0086, device='cuda:0', dtype=torch.float64)
tensor([-213.6108, -211.5592, -200.3437, -200.6248, -211.1479],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0078, device='cuda:0', dtype=torch.float64)
tensor([-213.6185, -211.5894, -200.3934, -200.6759, -211.1680],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0068, device='cuda:0', dtype=torch.float64)
tensor([-213.6164, -211.6160, -200.4324, -200.7197, -211.1688],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0066, device='cuda:0', dtype=torch.float64)
tensor([-213.6083, -211.6362, -200.4981, -200.7984, -211.1787],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0054, device='cuda:0', dtype=torch.float64)
tensor([-213.6351, -211.6521, -200.5121, -200.8410, -211.1965],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0098, device='cuda:0', dtype=torch.float64)
tensor([-213.7033, -211.6550, -200.4004, -200.7623, -211.1989],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0070, device='cuda:0', dtype=torch.float64)
tensor([-213.7472, -211.6515, -200.3040, -200.6966, -211.1815],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0075, device='cuda:0', dtype=torch.float64)
tensor([-213.8301, -211.6540, -200.1876, -200.6264, -211.1951],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0087, device='cuda:0', dtype=torch.float64)
tensor([-213.9113, -211.6509, -200.0481, -200.5252, -211.1978],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0062, device='cuda:0', dtype=torch.float64)
tensor([-214.0558, -211.6577, -199.8308, -200.3674, -211.2295],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0100, device='cuda:0', dtype=torch.float64)
tensor([-214.1776, -211.6932, -199.6734, -200.2661, -211.2681],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0102, device='cuda:0', dtype=torch.float64)
tensor([-214.1526, -211.7204, -199.6688, -200.2566, -211.2345],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0066, device='cuda:0', dtype=torch.float64)
tensor([-214.1131, -211.7462, -199.7164, -200.2993, -211.2210],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0103, device='cuda:0', dtype=torch.float64)
tensor([-214.0879, -211.7824, -199.7627, -200.3332, -211.2245],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0090, device='cuda:0', dtype=torch.float64)
tensor([-214.0477, -211.8226, -199.8410, -200.3863, -211.2272],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0075, device='cuda:0', dtype=torch.float64)
tensor([-214.0327, -211.8440, -199.8850, -200.4116, -211.2401],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0107, device='cuda:0', dtype=torch.float64)
tensor([-214.0148, -211.8669, -199.9177, -200.4144, -211.2532],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0070, device='cuda:0', dtype=torch.float64)
tensor([-214.0307, -211.8965, -199.9333, -200.4206, -211.2901],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0077, device='cuda:0', dtype=torch.float64)
tensor([-214.0349, -211.9162, -199.9442, -200.3985, -211.3164],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0084, device='cuda:0', dtype=torch.float64)
tensor([-214.1007, -211.9485, -199.9107, -200.3672, -211.3874],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0063, device='cuda:0', dtype=torch.float64)
tensor([-214.2568, -211.9867, -199.7721, -200.2796, -211.5044],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0082, device='cuda:0', dtype=torch.float64)
tensor([-214.4863, -212.0207, -199.5097, -200.0907, -211.6354],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0077, device='cuda:0', dtype=torch.float64)
tensor([-214.7540, -212.0412, -199.1895, -199.8636, -211.7543],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0070, device='cuda:0', dtype=torch.float64)
tensor([-215.0030, -212.0644, -198.9142, -199.6702, -211.8710],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0088, device='cuda:0', dtype=torch.float64)
tensor([-215.0314, -212.0525, -198.9030, -199.6805, -211.9076],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0070, device='cuda:0', dtype=torch.float64)
tensor([-214.9995, -212.0412, -198.9503, -199.7271, -211.9120],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0065, device='cuda:0', dtype=torch.float64)
tensor([-214.8566, -212.0184, -199.1428, -199.9002, -211.8796],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0064, device='cuda:0', dtype=torch.float64)
tensor([-214.7234, -212.0248, -199.3678, -200.0992, -211.8732],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0118, device='cuda:0', dtype=torch.float64)
tensor([-214.5293, -212.0261, -199.6911, -200.3749, -211.8465],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0076, device='cuda:0', dtype=torch.float64)
tensor([-214.2866, -212.0093, -200.0778, -200.6890, -211.7950],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0067, device='cuda:0', dtype=torch.float64)
tensor([-214.0077, -212.0004, -200.4920, -201.0061, -211.7168],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0063, device='cuda:0', dtype=torch.float64)
tensor([-213.7596, -212.0039, -200.8446, -201.2536, -211.6363],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0064, device='cuda:0', dtype=torch.float64)
tensor([-213.5358, -212.0041, -201.1773, -201.4990, -211.5612],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0089, device='cuda:0', dtype=torch.float64)
tensor([-213.3170, -211.9456, -201.3812, -201.6155, -211.4288],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0068, device='cuda:0', dtype=torch.float64)
tensor([-213.1736, -211.8836, -201.4712, -201.6514, -211.3287],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0066, device='cuda:0', dtype=torch.float64)
tensor([-213.0787, -211.8084, -201.4761, -201.6098, -211.2475],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0059, device='cuda:0', dtype=torch.float64)
tensor([-213.0131, -211.7219, -201.4459, -201.5588, -211.1776],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0067, device='cuda:0', dtype=torch.float64)
tensor([-212.9951, -211.6563, -201.3936, -201.5015, -211.1446],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0083, device='cuda:0', dtype=torch.float64)
tensor([-213.0318, -211.5918, -201.2683, -201.3799, -211.1367],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0055, device='cuda:0', dtype=torch.float64)
tensor([-213.0598, -211.5365, -201.1433, -201.2328, -211.1260],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0167, device='cuda:0', dtype=torch.float64)
tensor([-213.1160, -211.4695, -200.9355, -201.0343, -211.0922],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0088, device='cuda:0', dtype=torch.float64)
tensor([-213.2021, -211.3866, -200.6732, -200.8016, -211.0503],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0060, device='cuda:0', dtype=torch.float64)
tensor([-213.3124, -211.3297, -200.4700, -200.6450, -211.0585],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0085, device='cuda:0', dtype=torch.float64)
tensor([-213.4455, -211.2863, -200.2628, -200.4966, -211.0893],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0095, device='cuda:0', dtype=torch.float64)
tensor([-213.5744, -211.2621, -200.0412, -200.3236, -211.1040],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0084, device='cuda:0', dtype=torch.float64)
tensor([-213.6925, -211.2575, -199.8444, -200.1640, -211.1282],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0064, device='cuda:0', dtype=torch.float64)
tensor([-213.7635, -211.2703, -199.7545, -200.0940, -211.1637],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0066, device='cuda:0', dtype=torch.float64)
tensor([-213.8275, -211.2868, -199.6739, -200.0230, -211.1944],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0087, device='cuda:0', dtype=torch.float64)
tensor([-213.8849, -211.3118, -199.6669, -200.0281, -211.2521],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0092, device='cuda:0', dtype=torch.float64)
tensor([-213.9602, -211.3559, -199.6694, -200.0470, -211.3346],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0097, device='cuda:0', dtype=torch.float64)
tensor([-214.0098, -211.3915, -199.6675, -200.0458, -211.3970],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0066, device='cuda:0', dtype=torch.float64)
tensor([-214.0984, -211.4285, -199.6385, -200.0578, -211.4782],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0071, device='cuda:0', dtype=torch.float64)
tensor([-214.1515, -211.4488, -199.6543, -200.1124, -211.5509],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0082, device='cuda:0', dtype=torch.float64)
tensor([-214.2481, -211.4817, -199.6203, -200.1376, -211.6424],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0095, device='cuda:0', dtype=torch.float64)
tensor([-214.2117, -211.4905, -199.6932, -200.1983, -211.6580],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0061, device='cuda:0', dtype=torch.float64)
tensor([-214.1142, -211.5072, -199.8483, -200.3177, -211.6472],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0066, device='cuda:0', dtype=torch.float64)
tensor([-214.0809, -211.5278, -199.9430, -200.4058, -211.6760],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0064, device='cuda:0', dtype=torch.float64)
tensor([-214.0669, -211.5510, -200.0141, -200.4807, -211.7067],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0088, device='cuda:0', dtype=torch.float64)
tensor([-214.0954, -211.5827, -200.0002, -200.4764, -211.7427],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0068, device='cuda:0', dtype=torch.float64)
tensor([-214.0756, -211.6106, -200.0249, -200.4808, -211.7517],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0066, device='cuda:0', dtype=torch.float64)
tensor([-214.0735, -211.6402, -200.0308, -200.4886, -211.7640],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0061, device='cuda:0', dtype=torch.float64)
tensor([-214.1056, -211.6755, -199.9894, -200.4619, -211.7902],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0074, device='cuda:0', dtype=torch.float64)
tensor([-214.1365, -211.7006, -199.8934, -200.3890, -211.7971],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0073, device='cuda:0', dtype=torch.float64)
tensor([-214.1819, -211.7198, -199.7989, -200.3239, -211.8124],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0072, device='cuda:0', dtype=torch.float64)
tensor([-214.2507, -211.7697, -199.7433, -200.3093, -211.8672],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0077, device='cuda:0', dtype=torch.float64)
tensor([-214.2554, -211.7862, -199.7980, -200.4058, -211.9103],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0074, device='cuda:0', dtype=torch.float64)
tensor([-214.2243, -211.8154, -199.9130, -200.5324, -211.9522],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0063, device='cuda:0', dtype=torch.float64)
tensor([-214.1880, -211.8364, -199.9871, -200.6036, -211.9705],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0080, device='cuda:0', dtype=torch.float64)
tensor([-214.1253, -211.8460, -200.0588, -200.6565, -211.9648],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0056, device='cuda:0', dtype=torch.float64)
tensor([-214.1135, -211.8418, -200.0387, -200.6490, -211.9691],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0063, device='cuda:0', dtype=torch.float64)
tensor([-214.0763, -211.8461, -200.0206, -200.6291, -211.9486],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0073, device='cuda:0', dtype=torch.float64)
tensor([-213.9869, -211.8314, -200.0289, -200.6002, -211.8841],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0090, device='cuda:0', dtype=torch.float64)
tensor([-213.8276, -211.7987, -200.0995, -200.5998, -211.7731],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0062, device='cuda:0', dtype=torch.float64)
tensor([-213.6850, -211.7506, -200.0875, -200.5346, -211.6318],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0065, device='cuda:0', dtype=torch.float64)
tensor([-213.5036, -211.7019, -200.1076, -200.4726, -211.4666],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0101, device='cuda:0', dtype=torch.float64)
tensor([-213.3531, -211.6608, -200.1302, -200.4419, -211.3379],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0084, device='cuda:0', dtype=torch.float64)
tensor([-213.1844, -211.6074, -200.2000, -200.4560, -211.2073],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0055, device='cuda:0', dtype=torch.float64)
tensor([-213.0796, -211.5617, -200.2526, -200.4940, -211.1281],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0072, device='cuda:0', dtype=torch.float64)
tensor([-213.0228, -211.5083, -200.2470, -200.4868, -211.0722],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0063, device='cuda:0', dtype=torch.float64)
tensor([-212.9573, -211.4585, -200.2886, -200.5168, -211.0284],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0070, device='cuda:0', dtype=torch.float64)
tensor([-212.9427, -211.4184, -200.2676, -200.5146, -210.9957],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0092, device='cuda:0', dtype=torch.float64)
tensor([-212.9525, -211.3705, -200.1759, -200.4378, -210.9586],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0060, device='cuda:0', dtype=torch.float64)
tensor([-212.9691, -211.3314, -200.0869, -200.3686, -210.9371],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0070, device='cuda:0', dtype=torch.float64)
tensor([-212.9657, -211.3091, -200.0988, -200.3857, -210.9447],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0063, device='cuda:0', dtype=torch.float64)
tensor([-212.9733, -211.2982, -200.1562, -200.4714, -210.9812],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0083, device='cuda:0', dtype=torch.float64)
tensor([-212.9892, -211.2677, -200.1900, -200.5301, -211.0206],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0072, device='cuda:0', dtype=torch.float64)
tensor([-212.9875, -211.2443, -200.2635, -200.6187, -211.0575],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0061, device='cuda:0', dtype=torch.float64)
tensor([-212.9231, -211.2362, -200.3648, -200.6963, -211.0442],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0065, device='cuda:0', dtype=torch.float64)
tensor([-212.8771, -211.2180, -200.4220, -200.7222, -211.0417],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0097, device='cuda:0', dtype=torch.float64)
tensor([-212.8762, -211.1932, -200.4265, -200.7227, -211.0605],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0076, device='cuda:0', dtype=torch.float64)
tensor([-212.8332, -211.1772, -200.4930, -200.7706, -211.0526],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0106, device='cuda:0', dtype=torch.float64)
tensor([-212.7982, -211.1638, -200.5390, -200.8085, -211.0404],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0066, device='cuda:0', dtype=torch.float64)
tensor([-212.7951, -211.1467, -200.4969, -200.7691, -211.0272],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0066, device='cuda:0', dtype=torch.float64)
tensor([-212.8878, -211.1250, -200.2976, -200.6230, -211.0344],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0068, device='cuda:0', dtype=torch.float64)
tensor([-213.0411, -211.1029, -200.0228, -200.4202, -211.0674],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0109, device='cuda:0', dtype=torch.float64)
tensor([-213.1717, -211.1255, -199.8360, -200.2885, -211.1206],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0090, device='cuda:0', dtype=torch.float64)
tensor([-213.2538, -211.1424, -199.7296, -200.2238, -211.1619],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0060, device='cuda:0', dtype=torch.float64)
tensor([-213.2797, -211.1759, -199.6866, -200.1945, -211.1779],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0068, device='cuda:0', dtype=torch.float64)
tensor([-213.2963, -211.2266, -199.6877, -200.2063, -211.1977],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0073, device='cuda:0', dtype=torch.float64)
tensor([-213.2894, -211.2692, -199.7340, -200.2652, -211.2130],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0087, device='cuda:0', dtype=torch.float64)
tensor([-213.2970, -211.3366, -199.8443, -200.3922, -211.2741],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0059, device='cuda:0', dtype=torch.float64)
tensor([-213.3695, -211.3958, -199.8574, -200.4636, -211.3502],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0065, device='cuda:0', dtype=torch.float64)
tensor([-213.4781, -211.4886, -199.8674, -200.5466, -211.4717],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0084, device='cuda:0', dtype=torch.float64)
tensor([-213.5081, -211.5548, -199.9132, -200.6243, -211.5310],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0091, device='cuda:0', dtype=torch.float64)
tensor([-213.5337, -211.5895, -199.8634, -200.6110, -211.5312],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0065, device='cuda:0', dtype=torch.float64)
tensor([-213.5469, -211.5981, -199.7554, -200.5235, -211.4923],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0135, device='cuda:0', dtype=torch.float64)
tensor([-213.5423, -211.6169, -199.6964, -200.4760, -211.4498],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0104, device='cuda:0', dtype=torch.float64)
tensor([-213.5513, -211.6064, -199.5488, -200.3474, -211.3742],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0064, device='cuda:0', dtype=torch.float64)
tensor([-213.5604, -211.5975, -199.4134, -200.2290, -211.3076],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0071, device='cuda:0', dtype=torch.float64)
tensor([-213.6281, -211.5887, -199.2073, -200.0627, -211.2640],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0079, device='cuda:0', dtype=torch.float64)
tensor([-213.6141, -211.5864, -199.1153, -199.9530, -211.1935],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0068, device='cuda:0', dtype=torch.float64)
tensor([-213.5940, -211.5853, -199.0316, -199.8467, -211.1186],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0065, device='cuda:0', dtype=torch.float64)
tensor([-213.5303, -211.5746, -199.0228, -199.8154, -211.0352],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0069, device='cuda:0', dtype=torch.float64)
tensor([-213.4294, -211.5697, -199.0412, -199.7888, -210.9335],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0085, device='cuda:0', dtype=torch.float64)
tensor([-213.3550, -211.5816, -199.1025, -199.8234, -210.8845],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0073, device='cuda:0', dtype=torch.float64)
tensor([-213.2952, -211.6009, -199.1810, -199.8959, -210.8611],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0069, device='cuda:0', dtype=torch.float64)
tensor([-213.2271, -211.6116, -199.2572, -199.9554, -210.8305],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0075, device='cuda:0', dtype=torch.float64)
tensor([-213.2031, -211.6030, -199.2655, -199.9640, -210.8172],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0090, device='cuda:0', dtype=torch.float64)
tensor([-213.2178, -211.6088, -199.2629, -199.9626, -210.8412],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0060, device='cuda:0', dtype=torch.float64)
tensor([-213.1810, -211.6118, -199.3283, -200.0002, -210.8557],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0102, device='cuda:0', dtype=torch.float64)
tensor([-213.1803, -211.6222, -199.3734, -200.0308, -210.8954],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0055, device='cuda:0', dtype=torch.float64)
tensor([-213.2121, -211.6312, -199.3916, -200.0613, -210.9494],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0104, device='cuda:0', dtype=torch.float64)
tensor([-213.1838, -211.6626, -199.5172, -200.1545, -210.9943],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0074, device='cuda:0', dtype=torch.float64)
tensor([-213.1947, -211.6798, -199.5632, -200.1995, -211.0342],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0082, device='cuda:0', dtype=torch.float64)
tensor([-213.1992, -211.6976, -199.6020, -200.2344, -211.0713],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0065, device='cuda:0', dtype=torch.float64)
tensor([-213.2486, -211.6857, -199.5423, -200.2024, -211.0963],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0069, device='cuda:0', dtype=torch.float64)
tensor([-213.3043, -211.6717, -199.4620, -200.1485, -211.1191],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0069, device='cuda:0', dtype=torch.float64)
tensor([-213.3865, -211.6621, -199.4225, -200.1590, -211.1892],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0089, device='cuda:0', dtype=torch.float64)
tensor([-213.3896, -211.6359, -199.4486, -200.1905, -211.2138],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0063, device='cuda:0', dtype=torch.float64)
tensor([-213.3644, -211.6193, -199.5181, -200.2507, -211.2342],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0079, device='cuda:0', dtype=torch.float64)
tensor([-213.3834, -211.6296, -199.5729, -200.3232, -211.2899],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0091, device='cuda:0', dtype=torch.float64)
tensor([-213.3609, -211.6314, -199.6606, -200.3858, -211.3223],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0060, device='cuda:0', dtype=torch.float64)
tensor([-213.3188, -211.6324, -199.8037, -200.4998, -211.3579],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0075, device='cuda:0', dtype=torch.float64)
tensor([-213.2472, -211.6219, -199.9342, -200.5648, -211.3564],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0069, device='cuda:0', dtype=torch.float64)
tensor([-213.2018, -211.6145, -200.0305, -200.6150, -211.3551],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0089, device='cuda:0', dtype=torch.float64)
tensor([-213.1416, -211.6006, -200.1122, -200.6308, -211.3266],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0079, device='cuda:0', dtype=torch.float64)
tensor([-213.0542, -211.5772, -200.1597, -200.5951, -211.2529],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0054, device='cuda:0', dtype=torch.float64)
tensor([-212.9002, -211.5304, -200.2348, -200.5587, -211.1161],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0068, device='cuda:0', dtype=torch.float64)
tensor([-212.7520, -211.4961, -200.3721, -200.5909, -211.0144],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0062, device='cuda:0', dtype=torch.float64)
tensor([-212.6734, -211.4696, -200.4729, -200.6429, -210.9673],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0091, device='cuda:0', dtype=torch.float64)
tensor([-212.6164, -211.4658, -200.6077, -200.7503, -210.9507],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0077, device='cuda:0', dtype=torch.float64)
tensor([-212.5749, -211.4553, -200.7036, -200.8290, -210.9288],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0078, device='cuda:0', dtype=torch.float64)
tensor([-212.5577, -211.4294, -200.7200, -200.8354, -210.8959],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0063, device='cuda:0', dtype=torch.float64)
tensor([-212.5886, -211.3853, -200.6557, -200.7900, -210.8816],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0118, device='cuda:0', dtype=torch.float64)
tensor([-212.6222, -211.3405, -200.5042, -200.6588, -210.8327],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0077, device='cuda:0', dtype=torch.float64)
tensor([-212.7421, -211.2693, -200.2418, -200.4882, -210.8178],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0093, device='cuda:0', dtype=torch.float64)
tensor([-212.8437, -211.1922, -199.9889, -200.3302, -210.7745],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0066, device='cuda:0', dtype=torch.float64)
tensor([-212.9600, -211.1177, -199.7383, -200.1638, -210.7484],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0074, device='cuda:0', dtype=torch.float64)
tensor([-213.0553, -211.0474, -199.5079, -200.0041, -210.7086],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0098, device='cuda:0', dtype=torch.float64)
tensor([-213.2174, -210.9717, -199.1643, -199.7575, -210.6857],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0056, device='cuda:0', dtype=torch.float64)
tensor([-213.3643, -210.9217, -198.8734, -199.5504, -210.6747],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0099, device='cuda:0', dtype=torch.float64)
tensor([-213.4926, -210.8799, -198.6390, -199.4020, -210.6630],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0092, device='cuda:0', dtype=torch.float64)
tensor([-213.6130, -210.8592, -198.4339, -199.2725, -210.6550],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0065, device='cuda:0', dtype=torch.float64)
tensor([-213.7275, -210.8397, -198.2685, -199.1805, -210.6697],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0088, device='cuda:0', dtype=torch.float64)
tensor([-213.8979, -210.8690, -198.1392, -199.1559, -210.7645],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0082, device='cuda:0', dtype=torch.float64)
tensor([-214.0783, -210.9024, -198.0259, -199.1481, -210.8732],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0109, device='cuda:0', dtype=torch.float64)
tensor([-214.1704, -210.9592, -198.0529, -199.2317, -210.9752],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0090, device='cuda:0', dtype=torch.float64)
tensor([-214.1797, -211.0021, -198.1763, -199.3731, -211.0444],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0075, device='cuda:0', dtype=torch.float64)
tensor([-214.1218, -211.0411, -198.4011, -199.5886, -211.1042],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0076, device='cuda:0', dtype=torch.float64)
tensor([-214.0506, -211.0804, -198.6352, -199.8036, -211.1621],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0085, device='cuda:0', dtype=torch.float64)
tensor([-213.9226, -211.0897, -198.8854, -199.9943, -211.1615],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0086, device='cuda:0', dtype=torch.float64)
tensor([-213.7427, -211.0677, -199.1421, -200.1627, -211.1090],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0083, device='cuda:0', dtype=torch.float64)
tensor([-213.5431, -211.0671, -199.4852, -200.4142, -211.0727],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0062, device='cuda:0', dtype=torch.float64)
tensor([-213.3633, -211.0776, -199.7981, -200.6337, -211.0459],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0069, device='cuda:0', dtype=torch.float64)
tensor([-213.2417, -211.0920, -200.0510, -200.8332, -211.0455],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0069, device='cuda:0', dtype=torch.float64)
tensor([-213.1658, -211.1119, -200.2067, -200.9437, -211.0494],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0066, device='cuda:0', dtype=torch.float64)
tensor([-213.1002, -211.1091, -200.3248, -201.0203, -211.0476],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0076, device='cuda:0', dtype=torch.float64)
tensor([-212.9706, -211.0853, -200.3948, -201.0239, -210.9613],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0070, device='cuda:0', dtype=torch.float64)
tensor([-212.8474, -211.0604, -200.3856, -200.9382, -210.8495],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0073, device='cuda:0', dtype=torch.float64)
tensor([-212.7788, -211.0287, -200.2991, -200.8069, -210.7537],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0121, device='cuda:0', dtype=torch.float64)
tensor([-212.7670, -211.0180, -200.1570, -200.6366, -210.6905],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0073, device='cuda:0', dtype=torch.float64)
tensor([-212.8121, -211.0176, -200.0315, -200.5162, -210.6988],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0073, device='cuda:0', dtype=torch.float64)
tensor([-212.8342, -211.0220, -199.9447, -200.4230, -210.7085],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0062, device='cuda:0', dtype=torch.float64)
tensor([-212.8666, -211.0102, -199.8362, -200.3266, -210.7148],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0078, device='cuda:0', dtype=torch.float64)
tensor([-212.9480, -210.9992, -199.7120, -200.2430, -210.7584],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0076, device='cuda:0', dtype=torch.float64)
tensor([-213.0501, -211.0105, -199.6364, -200.2238, -210.8364],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0067, device='cuda:0', dtype=torch.float64)
tensor([-213.1920, -211.0244, -199.5228, -200.1865, -210.9431],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0074, device='cuda:0', dtype=torch.float64)
tensor([-213.2832, -211.0633, -199.5684, -200.3009, -211.0769],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0086, device='cuda:0', dtype=torch.float64)
tensor([-213.3436, -211.0887, -199.6080, -200.3963, -211.1707],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0097, device='cuda:0', dtype=torch.float64)
tensor([-213.4819, -211.1138, -199.5280, -200.4207, -211.2938],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0066, device='cuda:0', dtype=torch.float64)
tensor([-213.5579, -211.1066, -199.4497, -200.4179, -211.3481],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0084, device='cuda:0', dtype=torch.float64)
tensor([-213.6411, -211.1029, -199.3656, -200.3972, -211.3959],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0103, device='cuda:0', dtype=torch.float64)
tensor([-213.6053, -211.0930, -199.4221, -200.4586, -211.3897],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0080, device='cuda:0', dtype=torch.float64)
tensor([-213.5046, -211.0678, -199.4759, -200.4742, -211.3104],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0109, device='cuda:0', dtype=torch.float64)
tensor([-213.3654, -211.0239, -199.5312, -200.4743, -211.1885],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0071, device='cuda:0', dtype=torch.float64)
tensor([-213.2463, -210.9824, -199.5632, -200.4617, -211.0705],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0070, device='cuda:0', dtype=torch.float64)
tensor([-213.2255, -210.9631, -199.5145, -200.4377, -211.0068],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0060, device='cuda:0', dtype=torch.float64)
tensor([-213.1500, -210.9459, -199.5241, -200.4384, -210.9166],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0058, device='cuda:0', dtype=torch.float64)
tensor([-213.0220, -210.9117, -199.5689, -200.4468, -210.7900],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0065, device='cuda:0', dtype=torch.float64)
tensor([-212.8938, -210.9021, -199.6214, -200.4617, -210.6618],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0064, device='cuda:0', dtype=torch.float64)
tensor([-212.8019, -210.9016, -199.6968, -200.5169, -210.5708],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0070, device='cuda:0', dtype=torch.float64)
tensor([-212.7440, -210.8930, -199.6981, -200.5112, -210.4902],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0075, device='cuda:0', dtype=torch.float64)
tensor([-212.7100, -210.8626, -199.6358, -200.4354, -210.4027],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0061, device='cuda:0', dtype=torch.float64)
tensor([-212.7270, -210.8197, -199.5489, -200.3718, -210.3556],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0120, device='cuda:0', dtype=torch.float64)
tensor([-212.7725, -210.7877, -199.4413, -200.2958, -210.3323],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0073, device='cuda:0', dtype=torch.float64)
tensor([-212.8613, -210.7442, -199.2522, -200.1526, -210.3057],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0090, device='cuda:0', dtype=torch.float64)
tensor([-212.9363, -210.7218, -199.1744, -200.1111, -210.3143],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0070, device='cuda:0', dtype=torch.float64)
tensor([-212.9154, -210.7152, -199.2132, -200.1149, -210.2936],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0108, device='cuda:0', dtype=torch.float64)
tensor([-212.8942, -210.6956, -199.1921, -200.0417, -210.2527],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0065, device='cuda:0', dtype=torch.float64)
tensor([-212.8628, -210.6761, -199.2239, -200.0157, -210.2262],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0074, device='cuda:0', dtype=torch.float64)
tensor([-212.8768, -210.6620, -199.1706, -199.9380, -210.2075],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0067, device='cuda:0', dtype=torch.float64)
tensor([-212.9072, -210.6509, -199.1201, -199.8772, -210.2078],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0107, device='cuda:0', dtype=torch.float64)
tensor([-212.9301, -210.6322, -199.0381, -199.7781, -210.1857],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0066, device='cuda:0', dtype=torch.float64)
tensor([-212.9448, -210.6401, -199.0420, -199.7608, -210.1942],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0068, device='cuda:0', dtype=torch.float64)
tensor([-212.9779, -210.6662, -199.0734, -199.7942, -210.2256],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0075, device='cuda:0', dtype=torch.float64)
tensor([-212.9405, -210.6963, -199.1824, -199.8778, -210.2312],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0093, device='cuda:0', dtype=torch.float64)
tensor([-212.8488, -210.7011, -199.3306, -199.9686, -210.1968],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0055, device='cuda:0', dtype=torch.float64)
tensor([-212.7362, -210.7007, -199.4905, -200.0644, -210.1406],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0087, device='cuda:0', dtype=torch.float64)
tensor([-212.6192, -210.7092, -199.7222, -200.2411, -210.1189],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0064, device='cuda:0', dtype=torch.float64)
tensor([-212.5035, -210.7429, -199.9863, -200.4447, -210.1143],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0063, device='cuda:0', dtype=torch.float64)
tensor([-212.4625, -210.7358, -200.1093, -200.5642, -210.1134],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0063, device='cuda:0', dtype=torch.float64)
tensor([-212.4486, -210.7147, -200.1498, -200.6095, -210.1054],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0059, device='cuda:0', dtype=torch.float64)
tensor([-212.4451, -210.6826, -200.1721, -200.6423, -210.1060],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0067, device='cuda:0', dtype=torch.float64)
tensor([-212.4327, -210.6505, -200.2189, -200.6921, -210.1137],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0088, device='cuda:0', dtype=torch.float64)
tensor([-212.4335, -210.5980, -200.1752, -200.6729, -210.0979],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0058, device='cuda:0', dtype=torch.float64)
tensor([-212.4590, -210.5380, -200.0733, -200.6087, -210.0845],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0062, device='cuda:0', dtype=torch.float64)
tensor([-212.4450, -210.4837, -200.0307, -200.5881, -210.0590],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0087, device='cuda:0', dtype=torch.float64)
tensor([-212.4821, -210.4155, -199.8449, -200.4296, -210.0135],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0097, device='cuda:0', dtype=torch.float64)
tensor([-212.5736, -210.3513, -199.6260, -200.2670, -209.9993],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0073, device='cuda:0', dtype=torch.float64)
tensor([-212.6542, -210.2742, -199.3642, -200.0546, -209.9514],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0054, device='cuda:0', dtype=torch.float64)
tensor([-212.7751, -210.2204, -199.1107, -199.8741, -209.9442],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0070, device='cuda:0', dtype=torch.float64)
tensor([-212.8000, -210.1855, -198.9871, -199.7814, -209.8909],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0067, device='cuda:0', dtype=torch.float64)
tensor([-212.7833, -210.1509, -198.8529, -199.6385, -209.7953],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0071, device='cuda:0', dtype=torch.float64)
tensor([-212.7593, -210.1413, -198.7933, -199.5607, -209.7356],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0061, device='cuda:0', dtype=torch.float64)
tensor([-212.7875, -210.1238, -198.6371, -199.4092, -209.6808],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0091, device='cuda:0', dtype=torch.float64)
tensor([-212.8278, -210.1527, -198.6321, -199.4415, -209.7152],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0062, device='cuda:0', dtype=torch.float64)
tensor([-212.8824, -210.1748, -198.6016, -199.4539, -209.7523],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0071, device='cuda:0', dtype=torch.float64)
tensor([-212.9262, -210.1779, -198.5563, -199.4455, -209.7661],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0076, device='cuda:0', dtype=torch.float64)
tensor([-212.9540, -210.2127, -198.6011, -199.5187, -209.8180],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0089, device='cuda:0', dtype=torch.float64)
tensor([-212.8924, -210.2557, -198.7916, -199.7041, -209.8476],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0089, device='cuda:0', dtype=torch.float64)
tensor([-212.8629, -210.3127, -198.9538, -199.8718, -209.8976],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0091, device='cuda:0', dtype=torch.float64)
tensor([-212.8897, -210.3700, -199.0610, -200.0001, -209.9926],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0079, device='cuda:0', dtype=torch.float64)
tensor([-212.8529, -210.4285, -199.2374, -200.1601, -210.0550],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0074, device='cuda:0', dtype=torch.float64)
tensor([-212.8766, -210.4946, -199.3274, -200.2643, -210.1375],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0079, device='cuda:0', dtype=torch.float64)
tensor([-212.8945, -210.5594, -199.4023, -200.3425, -210.2112],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0098, device='cuda:0', dtype=torch.float64)
tensor([-212.8402, -210.5881, -199.4821, -200.4068, -210.2078],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0064, device='cuda:0', dtype=torch.float64)
tensor([-212.7694, -210.6178, -199.5841, -200.4728, -210.2029],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0089, device='cuda:0', dtype=torch.float64)
tensor([-212.7199, -210.6391, -199.6329, -200.5113, -210.1801],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0069, device='cuda:0', dtype=torch.float64)
tensor([-212.6638, -210.6446, -199.6968, -200.5729, -210.1476],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0063, device='cuda:0', dtype=torch.float64)
tensor([-212.6224, -210.6407, -199.7484, -200.6198, -210.1289],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0104, device='cuda:0', dtype=torch.float64)
tensor([-212.6339, -210.6331, -199.7583, -200.6514, -210.1401],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0080, device='cuda:0', dtype=torch.float64)
tensor([-212.6275, -210.6145, -199.7471, -200.6403, -210.1213],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0116, device='cuda:0', dtype=torch.float64)
tensor([-212.6090, -210.6003, -199.7511, -200.6368, -210.0937],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0074, device='cuda:0', dtype=torch.float64)
tensor([-212.5762, -210.5781, -199.7531, -200.6327, -210.0479],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0074, device='cuda:0', dtype=torch.float64)
tensor([-212.5958, -210.5676, -199.7182, -200.6211, -210.0521],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0079, device='cuda:0', dtype=torch.float64)
tensor([-212.6196, -210.5512, -199.5839, -200.4888, -210.0221],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0070, device='cuda:0', dtype=torch.float64)
tensor([-212.6008, -210.5352, -199.4843, -200.3451, -209.9615],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0065, device='cuda:0', dtype=torch.float64)
tensor([-212.5617, -210.5179, -199.4179, -200.2176, -209.8869],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0089, device='cuda:0', dtype=torch.float64)
tensor([-212.5583, -210.4929, -199.3558, -200.1176, -209.8510],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0093, device='cuda:0', dtype=torch.float64)
tensor([-212.6220, -210.4661, -199.2302, -199.9894, -209.8493],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0074, device='cuda:0', dtype=torch.float64)
tensor([-212.7263, -210.4444, -199.0315, -199.8214, -209.8533],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0068, device='cuda:0', dtype=torch.float64)
tensor([-212.8456, -210.4715, -198.9259, -199.7719, -209.9165],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0074, device='cuda:0', dtype=torch.float64)
tensor([-212.9658, -210.4730, -198.8206, -199.7429, -209.9768],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0058, device='cuda:0', dtype=torch.float64)
tensor([-213.0232, -210.4800, -198.8228, -199.7865, -210.0250],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0076, device='cuda:0', dtype=torch.float64)
tensor([-213.0318, -210.4918, -198.8978, -199.8830, -210.0569],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0076, device='cuda:0', dtype=torch.float64)
tensor([-213.0523, -210.5227, -199.0325, -200.0326, -210.1310],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0064, device='cuda:0', dtype=torch.float64)
tensor([-213.0498, -210.5326, -199.1394, -200.1477, -210.1622],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0068, device='cuda:0', dtype=torch.float64)
tensor([-213.0353, -210.5441, -199.2374, -200.2379, -210.1871],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0070, device='cuda:0', dtype=torch.float64)
tensor([-213.0655, -210.5514, -199.2639, -200.2615, -210.2317],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0066, device='cuda:0', dtype=torch.float64)
tensor([-213.0208, -210.5466, -199.3408, -200.2876, -210.2295],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0073, device='cuda:0', dtype=torch.float64)
tensor([-212.9882, -210.5379, -199.3595, -200.2666, -210.2182],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0070, device='cuda:0', dtype=torch.float64)
tensor([-212.9848, -210.5344, -199.3710, -200.2497, -210.2484],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0119, device='cuda:0', dtype=torch.float64)
tensor([-213.0017, -210.5173, -199.3337, -200.2018, -210.2757],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0083, device='cuda:0', dtype=torch.float64)
tensor([-213.0643, -210.4951, -199.2479, -200.1293, -210.3291],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0066, device='cuda:0', dtype=torch.float64)
tensor([-213.0773, -210.4687, -199.2458, -200.1231, -210.3640],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0079, device='cuda:0', dtype=torch.float64)
tensor([-213.0772, -210.4564, -199.3241, -200.2085, -210.4247],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0071, device='cuda:0', dtype=torch.float64)
tensor([-213.0148, -210.4492, -199.4951, -200.3556, -210.4739],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0089, device='cuda:0', dtype=torch.float64)
tensor([-212.9509, -210.4118, -199.6260, -200.4672, -210.5038],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0070, device='cuda:0', dtype=torch.float64)
tensor([-212.8445, -210.3664, -199.7461, -200.5453, -210.4804],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0067, device='cuda:0', dtype=torch.float64)
tensor([-212.7497, -210.3500, -199.9059, -200.6690, -210.4867],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0070, device='cuda:0', dtype=torch.float64)
tensor([-212.6136, -210.3347, -200.0846, -200.7900, -210.4586],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0060, device='cuda:0', dtype=torch.float64)
tensor([-212.4896, -210.3319, -200.2383, -200.8956, -210.4290],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0107, device='cuda:0', dtype=torch.float64)
tensor([-212.4049, -210.3237, -200.3220, -200.9372, -210.4089],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0092, device='cuda:0', dtype=torch.float64)
tensor([-212.3272, -210.3229, -200.3964, -200.9715, -210.3957],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0138, device='cuda:0', dtype=torch.float64)
tensor([-212.2921, -210.3160, -200.4068, -200.9674, -210.3830],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0062, device='cuda:0', dtype=torch.float64)
tensor([-212.2414, -210.3176, -200.4927, -201.0291, -210.3974],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0085, device='cuda:0', dtype=torch.float64)
tensor([-212.2124, -210.3198, -200.5656, -201.0932, -210.4259],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0067, device='cuda:0', dtype=torch.float64)
tensor([-212.1741, -210.3048, -200.6068, -201.1284, -210.4187],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0089, device='cuda:0', dtype=torch.float64)
tensor([-212.1500, -210.2705, -200.5719, -201.0935, -210.3862],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0084, device='cuda:0', dtype=torch.float64)
tensor([-212.1734, -210.2309, -200.4868, -201.0492, -210.3746],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0067, device='cuda:0', dtype=torch.float64)
tensor([-212.2326, -210.2022, -200.4119, -201.0313, -210.4160],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0072, device='cuda:0', dtype=torch.float64)
tensor([-212.3005, -210.1733, -200.3156, -200.9928, -210.4487],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0077, device='cuda:0', dtype=torch.float64)
tensor([-212.3571, -210.1438, -200.2022, -200.9264, -210.4673],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0078, device='cuda:0', dtype=torch.float64)
tensor([-212.4316, -210.1072, -200.0499, -200.8341, -210.4922],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0092, device='cuda:0', dtype=torch.float64)
tensor([-212.4983, -210.0798, -199.9026, -200.7511, -210.4961],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0086, device='cuda:0', dtype=torch.float64)
tensor([-212.5202, -210.0383, -199.7341, -200.6071, -210.4401],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0075, device='cuda:0', dtype=torch.float64)
tensor([-212.5549, -209.9843, -199.4734, -200.3445, -210.3537],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0067, device='cuda:0', dtype=torch.float64)
tensor([-212.6021, -209.9470, -199.2231, -200.1059, -210.2905],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0066, device='cuda:0', dtype=torch.float64)
tensor([-212.6557, -209.9232, -198.9748, -199.8587, -210.2356],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0066, device='cuda:0', dtype=torch.float64)
tensor([-212.7228, -209.9324, -198.8021, -199.7153, -210.2348],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0070, device='cuda:0', dtype=torch.float64)
tensor([-212.8371, -209.9498, -198.6197, -199.5879, -210.2761],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0062, device='cuda:0', dtype=torch.float64)
tensor([-212.9388, -209.9849, -198.4668, -199.4957, -210.3124],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0085, device='cuda:0', dtype=torch.float64)
tensor([-213.0521, -210.0083, -198.3009, -199.3992, -210.3443],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0070, device='cuda:0', dtype=torch.float64)
tensor([-213.1167, -210.0447, -198.2184, -199.3591, -210.3696],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0086, device='cuda:0', dtype=torch.float64)
tensor([-213.1669, -210.0573, -198.0638, -199.2189, -210.3381],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0075, device='cuda:0', dtype=torch.float64)
tensor([-213.2183, -210.0876, -197.9293, -199.0997, -210.3234],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0099, device='cuda:0', dtype=torch.float64)
tensor([-213.2563, -210.1440, -197.9013, -199.0990, -210.3479],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0081, device='cuda:0', dtype=torch.float64)
tensor([-213.2183, -210.1819, -197.9246, -199.1128, -210.3247],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0075, device='cuda:0', dtype=torch.float64)
tensor([-213.0849, -210.2128, -198.0867, -199.2340, -210.2667],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0078, device='cuda:0', dtype=torch.float64)
tensor([-212.9308, -210.2382, -198.2306, -199.3167, -210.1747],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0111, device='cuda:0', dtype=torch.float64)
tensor([-212.7615, -210.2543, -198.4088, -199.4265, -210.0826],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0080, device='cuda:0', dtype=torch.float64)
tensor([-212.5786, -210.2478, -198.5826, -199.5409, -209.9574],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0076, device='cuda:0', dtype=torch.float64)
tensor([-212.4658, -210.2735, -198.7678, -199.6987, -209.9209],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0065, device='cuda:0', dtype=torch.float64)
tensor([-212.3768, -210.2743, -198.8922, -199.8130, -209.8791],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0090, device='cuda:0', dtype=torch.float64)
tensor([-212.3085, -210.3071, -199.0508, -199.9724, -209.8814],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0067, device='cuda:0', dtype=torch.float64)
tensor([-212.3023, -210.3398, -199.1688, -200.1345, -209.9251],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0088, device='cuda:0', dtype=torch.float64)
tensor([-212.3248, -210.3703, -199.2314, -200.2402, -209.9784],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0069, device='cuda:0', dtype=torch.float64)
tensor([-212.2957, -210.4017, -199.3629, -200.3818, -210.0101],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0085, device='cuda:0', dtype=torch.float64)
tensor([-212.2425, -210.4125, -199.5067, -200.4992, -210.0315],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0071, device='cuda:0', dtype=torch.float64)
tensor([-212.1992, -210.4218, -199.6249, -200.5969, -210.0481],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0073, device='cuda:0', dtype=torch.float64)
tensor([-212.1133, -210.3801, -199.6971, -200.6210, -210.0140],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0073, device='cuda:0', dtype=torch.float64)
tensor([-212.0749, -210.3221, -199.6419, -200.5353, -209.9697],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0086, device='cuda:0', dtype=torch.float64)
tensor([-212.1008, -210.2177, -199.3821, -200.2764, -209.9224],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0068, device='cuda:0', dtype=torch.float64)
tensor([-212.1563, -210.0986, -199.0671, -199.9761, -209.8702],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0101, device='cuda:0', dtype=torch.float64)
tensor([-212.2231, -209.9923, -198.6776, -199.5866, -209.7851],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0086, device='cuda:0', dtype=torch.float64)
tensor([-212.2256, -209.8705, -198.3679, -199.2501, -209.6612],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0078, device='cuda:0', dtype=torch.float64)
tensor([-212.1206, -209.7491, -198.2531, -199.0626, -209.5168],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0066, device='cuda:0', dtype=torch.float64)
tensor([-212.0555, -209.6381, -198.1090, -198.8754, -209.3929],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0062, device='cuda:0', dtype=torch.float64)
tensor([-211.9472, -209.5242, -198.0524, -198.7597, -209.2614],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0100, device='cuda:0', dtype=torch.float64)
tensor([-211.8288, -209.4319, -198.1145, -198.7627, -209.1844],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0090, device='cuda:0', dtype=torch.float64)
tensor([-211.6890, -209.3532, -198.2907, -198.8855, -209.1481],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0085, device='cuda:0', dtype=torch.float64)
tensor([-211.6347, -209.2722, -198.3563, -198.9385, -209.1467],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0078, device='cuda:0', dtype=torch.float64)
tensor([-211.6589, -209.2389, -198.4402, -199.0659, -209.2371],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0084, device='cuda:0', dtype=torch.float64)
tensor([-211.6400, -209.2131, -198.6137, -199.2698, -209.3226],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0081, device='cuda:0', dtype=torch.float64)
tensor([-211.5441, -209.2106, -198.9311, -199.5863, -209.3930],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0071, device='cuda:0', dtype=torch.float64)
tensor([-211.4588, -209.2001, -199.2237, -199.8798, -209.4517],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0068, device='cuda:0', dtype=torch.float64)
tensor([-211.3834, -209.1878, -199.4517, -200.0945, -209.4855],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0064, device='cuda:0', dtype=torch.float64)
tensor([-211.3009, -209.1747, -199.6542, -200.2619, -209.5034],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0074, device='cuda:0', dtype=torch.float64)
tensor([-211.2629, -209.1575, -199.7780, -200.3741, -209.5315],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0093, device='cuda:0', dtype=torch.float64)
tensor([-211.2847, -209.1281, -199.7957, -200.3942, -209.5747],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0071, device='cuda:0', dtype=torch.float64)
tensor([-211.2693, -209.1156, -199.8614, -200.4512, -209.5881],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0082, device='cuda:0', dtype=torch.float64)
tensor([-211.3459, -209.1101, -199.7870, -200.4054, -209.6335],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0085, device='cuda:0', dtype=torch.float64)
tensor([-211.3837, -209.1324, -199.7924, -200.4325, -209.6765],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0081, device='cuda:0', dtype=torch.float64)
tensor([-211.3749, -209.1416, -199.8180, -200.4510, -209.6821],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0062, device='cuda:0', dtype=torch.float64)
tensor([-211.3672, -209.1410, -199.7917, -200.4266, -209.6548],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0105, device='cuda:0', dtype=torch.float64)
tensor([-211.3670, -209.1429, -199.7830, -200.4212, -209.6480],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0078, device='cuda:0', dtype=torch.float64)
tensor([-211.4185, -209.1214, -199.6526, -200.3146, -209.6341],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0081, device='cuda:0', dtype=torch.float64)
tensor([-211.5010, -209.0823, -199.4659, -200.1804, -209.6128],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0063, device='cuda:0', dtype=torch.float64)
tensor([-211.6428, -209.0183, -199.1730, -199.9639, -209.6000],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0087, device='cuda:0', dtype=torch.float64)
tensor([-211.7541, -208.9761, -198.9811, -199.8386, -209.6003],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0082, device='cuda:0', dtype=torch.float64)
tensor([-211.8814, -208.9590, -198.8153, -199.7360, -209.6327],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0088, device='cuda:0', dtype=torch.float64)
tensor([-211.9556, -208.9292, -198.7121, -199.6706, -209.6433],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0073, device='cuda:0', dtype=torch.float64)
tensor([-212.1065, -208.9088, -198.5353, -199.5666, -209.6899],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0065, device='cuda:0', dtype=torch.float64)
tensor([-212.1954, -208.8950, -198.5006, -199.5974, -209.7451],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0073, device='cuda:0', dtype=torch.float64)
tensor([-212.1601, -208.8436, -198.5397, -199.6354, -209.7117],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0078, device='cuda:0', dtype=torch.float64)
tensor([-212.1286, -208.8529, -198.6940, -199.8030, -209.7403],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0083, device='cuda:0', dtype=torch.float64)
tensor([-212.1256, -208.8555, -198.7887, -199.9153, -209.7622],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0080, device='cuda:0', dtype=torch.float64)
tensor([-212.1244, -208.8898, -198.9257, -200.0721, -209.8125],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0096, device='cuda:0', dtype=torch.float64)
tensor([-212.1135, -208.9405, -199.0814, -200.2369, -209.8660],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0080, device='cuda:0', dtype=torch.float64)
tensor([-212.0236, -208.9698, -199.2589, -200.3638, -209.8476],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0078, device='cuda:0', dtype=torch.float64)
tensor([-211.9239, -209.0116, -199.4440, -200.4757, -209.8153],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0084, device='cuda:0', dtype=torch.float64)
tensor([-211.7942, -209.0761, -199.7277, -200.6639, -209.7968],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0070, device='cuda:0', dtype=torch.float64)
tensor([-211.7088, -209.1021, -199.8491, -200.6990, -209.7566],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0070, device='cuda:0', dtype=torch.float64)
tensor([-211.6076, -209.1033, -199.8983, -200.6617, -209.6689],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0053, device='cuda:0', dtype=torch.float64)
tensor([-211.4928, -209.0741, -199.8682, -200.5382, -209.5315],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0081, device='cuda:0', dtype=torch.float64)
tensor([-211.4448, -209.0530, -199.7976, -200.4064, -209.4420],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0079, device='cuda:0', dtype=torch.float64)
tensor([-211.4767, -209.0306, -199.6388, -200.2336, -209.3893],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0063, device='cuda:0', dtype=torch.float64)
tensor([-211.5312, -208.9851, -199.3972, -199.9918, -209.3303],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0067, device='cuda:0', dtype=torch.float64)
tensor([-211.5995, -208.9454, -199.1539, -199.7636, -209.2833],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0066, device='cuda:0', dtype=torch.float64)
tensor([-211.6649, -208.9049, -198.9147, -199.5534, -209.2218],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0087, device='cuda:0', dtype=torch.float64)
tensor([-211.6703, -208.8843, -198.8486, -199.5051, -209.1831],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0083, device='cuda:0', dtype=torch.float64)
tensor([-211.6802, -208.8662, -198.7966, -199.4798, -209.1524],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0070, device='cuda:0', dtype=torch.float64)
tensor([-211.6844, -208.8429, -198.7264, -199.4370, -209.1091],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0069, device='cuda:0', dtype=torch.float64)
tensor([-211.6728, -208.8506, -198.7411, -199.4839, -209.0936],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0072, device='cuda:0', dtype=torch.float64)
tensor([-211.6607, -208.8498, -198.7385, -199.5021, -209.0672],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0086, device='cuda:0', dtype=torch.float64)
tensor([-211.7107, -208.8426, -198.6698, -199.5018, -209.0741],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0079, device='cuda:0', dtype=torch.float64)
tensor([-211.7214, -208.8521, -198.6575, -199.5306, -209.0626],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0078, device='cuda:0', dtype=torch.float64)
tensor([-211.7326, -208.8531, -198.6313, -199.5389, -209.0442],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0080, device='cuda:0', dtype=torch.float64)
tensor([-211.7537, -208.8318, -198.5032, -199.4274, -208.9953],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0088, device='cuda:0', dtype=torch.float64)
tensor([-211.7759, -208.8216, -198.4086, -199.3503, -208.9587],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0071, device='cuda:0', dtype=torch.float64)
tensor([-211.7489, -208.7855, -198.3607, -199.3091, -208.8808],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0062, device='cuda:0', dtype=torch.float64)
tensor([-211.7030, -208.7701, -198.3935, -199.3389, -208.8250],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0125, device='cuda:0', dtype=torch.float64)
tensor([-211.7044, -208.7819, -198.4482, -199.4278, -208.8482],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0080, device='cuda:0', dtype=torch.float64)
tensor([-211.6417, -208.7977, -198.5730, -199.5439, -208.8354],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0092, device='cuda:0', dtype=torch.float64)
tensor([-211.5746, -208.7767, -198.6360, -199.6047, -208.7702],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0147, device='cuda:0', dtype=torch.float64)
tensor([-211.4775, -208.7618, -198.7485, -199.6967, -208.7042],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0062, device='cuda:0', dtype=torch.float64)
tensor([-211.3933, -208.7362, -198.8330, -199.7584, -208.6344],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0104, device='cuda:0', dtype=torch.float64)
tensor([-211.3561, -208.7095, -198.8864, -199.8183, -208.6093],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0074, device='cuda:0', dtype=torch.float64)
tensor([-211.4035, -208.6907, -198.8127, -199.7918, -208.6239],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0075, device='cuda:0', dtype=torch.float64)
tensor([-211.3822, -208.6683, -198.8195, -199.8017, -208.6189],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0068, device='cuda:0', dtype=torch.float64)
tensor([-211.3275, -208.6374, -198.8912, -199.8686, -208.6048],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0108, device='cuda:0', dtype=torch.float64)
tensor([-211.3540, -208.6143, -198.8848, -199.9058, -208.6424],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0064, device='cuda:0', dtype=torch.float64)
tensor([-211.3832, -208.5794, -198.8365, -199.8967, -208.6720],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0090, device='cuda:0', dtype=torch.float64)
tensor([-211.4619, -208.5422, -198.7103, -199.8330, -208.7167],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0070, device='cuda:0', dtype=torch.float64)
tensor([-211.5382, -208.5268, -198.6406, -199.8257, -208.7804],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0074, device='cuda:0', dtype=torch.float64)
tensor([-211.6339, -208.5031, -198.5126, -199.7685, -208.8397],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0065, device='cuda:0', dtype=torch.float64)
tensor([-211.6942, -208.5275, -198.5412, -199.8607, -208.9330],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0083, device='cuda:0', dtype=torch.float64)
tensor([-211.8090, -208.5969, -198.5666, -199.9825, -209.0864],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0065, device='cuda:0', dtype=torch.float64)
tensor([-211.8926, -208.6634, -198.6251, -200.1219, -209.2203],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0105, device='cuda:0', dtype=torch.float64)
tensor([-211.9585, -208.7095, -198.5926, -200.1542, -209.2801],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0080, device='cuda:0', dtype=torch.float64)
tensor([-211.9618, -208.7321, -198.5589, -200.1333, -209.2899],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0068, device='cuda:0', dtype=torch.float64)
tensor([-211.9536, -208.7841, -198.5505, -200.1260, -209.2985],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0073, device='cuda:0', dtype=torch.float64)
tensor([-211.8955, -208.8345, -198.6681, -200.2147, -209.3154],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0067, device='cuda:0', dtype=torch.float64)
tensor([-211.8449, -208.8672, -198.7404, -200.2621, -209.3176],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0073, device='cuda:0', dtype=torch.float64)
tensor([-211.8228, -208.9102, -198.8205, -200.3321, -209.3577],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0074, device='cuda:0', dtype=torch.float64)
tensor([-211.7830, -208.9365, -198.8794, -200.3734, -209.3726],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0070, device='cuda:0', dtype=torch.float64)
tensor([-211.7245, -208.9354, -198.9326, -200.3992, -209.3569],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0067, device='cuda:0', dtype=torch.float64)
tensor([-211.6301, -208.8875, -198.8835, -200.2906, -209.2510],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0079, device='cuda:0', dtype=torch.float64)
tensor([-211.5602, -208.8379, -198.7707, -200.1363, -209.1469],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0072, device='cuda:0', dtype=torch.float64)
tensor([-211.4976, -208.7739, -198.6143, -199.9361, -209.0242],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0077, device='cuda:0', dtype=torch.float64)
tensor([-211.3684, -208.6940, -198.5183, -199.7647, -208.8555],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0070, device='cuda:0', dtype=torch.float64)
tensor([-211.2771, -208.6124, -198.3675, -199.5535, -208.7034],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0093, device='cuda:0', dtype=torch.float64)
tensor([-211.1552, -208.5754, -198.3405, -199.4564, -208.5800],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0072, device='cuda:0', dtype=torch.float64)
tensor([-211.0614, -208.5311, -198.3007, -199.3774, -208.4779],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0065, device='cuda:0', dtype=torch.float64)
tensor([-210.9803, -208.4949, -198.2881, -199.3316, -208.4113],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0067, device='cuda:0', dtype=torch.float64)
tensor([-210.8845, -208.4615, -198.3350, -199.3336, -208.3434],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0082, device='cuda:0', dtype=torch.float64)
tensor([-210.8064, -208.4398, -198.4350, -199.4033, -208.3244],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0089, device='cuda:0', dtype=torch.float64)
tensor([-210.7928, -208.4334, -198.4921, -199.4637, -208.3526],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0059, device='cuda:0', dtype=torch.float64)
tensor([-210.8130, -208.4057, -198.4981, -199.5072, -208.3906],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0079, device='cuda:0', dtype=torch.float64)
tensor([-210.8389, -208.3952, -198.5355, -199.5727, -208.4450],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0085, device='cuda:0', dtype=torch.float64)
tensor([-210.9052, -208.4073, -198.6396, -199.7425, -208.5662],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0067, device='cuda:0', dtype=torch.float64)
tensor([-210.9944, -208.4652, -198.8109, -199.9920, -208.7391],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0073, device='cuda:0', dtype=torch.float64)
tensor([-211.0940, -208.5337, -198.9755, -200.2362, -208.9258],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0073, device='cuda:0', dtype=torch.float64)
tensor([-211.1971, -208.6114, -199.1584, -200.5081, -209.1174],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0124, device='cuda:0', dtype=torch.float64)
tensor([-211.2065, -208.6448, -199.3190, -200.6818, -209.2112],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0059, device='cuda:0', dtype=torch.float64)
tensor([-211.2619, -208.6744, -199.3918, -200.7926, -209.3073],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0076, device='cuda:0', dtype=torch.float64)
tensor([-211.3080, -208.6805, -199.4386, -200.8654, -209.3882],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0069, device='cuda:0', dtype=torch.float64)
tensor([-211.3178, -208.6911, -199.5216, -200.9543, -209.4499],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0078, device='cuda:0', dtype=torch.float64)
tensor([-211.3518, -208.6874, -199.5561, -201.0108, -209.5038],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0087, device='cuda:0', dtype=torch.float64)
tensor([-211.4114, -208.6607, -199.4821, -200.9798, -209.5422],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0066, device='cuda:0', dtype=torch.float64)
tensor([-211.4858, -208.6322, -199.3062, -200.8400, -209.5702],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0067, device='cuda:0', dtype=torch.float64)
tensor([-211.5839, -208.6320, -199.1636, -200.7465, -209.6258],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0084, device='cuda:0', dtype=torch.float64)
tensor([-211.6042, -208.5888, -199.0321, -200.6312, -209.5839],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0065, device='cuda:0', dtype=torch.float64)
tensor([-211.5548, -208.5272, -198.9258, -200.4917, -209.4763],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0095, device='cuda:0', dtype=torch.float64)
tensor([-211.5026, -208.4592, -198.7709, -200.3136, -209.3532],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0129, device='cuda:0', dtype=torch.float64)
tensor([-211.4415, -208.4026, -198.6388, -200.1542, -209.2300],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0080, device='cuda:0', dtype=torch.float64)
tensor([-211.3435, -208.3387, -198.5850, -200.0487, -209.0977],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0071, device='cuda:0', dtype=torch.float64)
tensor([-211.3270, -208.2662, -198.4630, -199.9174, -209.0178],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0124, device='cuda:0', dtype=torch.float64)
tensor([-211.2155, -208.1743, -198.3945, -199.7729, -208.8574],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0117, device='cuda:0', dtype=torch.float64)
tensor([-211.1141, -208.0977, -198.3695, -199.6910, -208.7286],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0080, device='cuda:0', dtype=torch.float64)
tensor([-211.0327, -208.0229, -198.3532, -199.6319, -208.6255],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0130, device='cuda:0', dtype=torch.float64)
tensor([-210.9337, -207.9594, -198.4226, -199.6628, -208.5349],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0077, device='cuda:0', dtype=torch.float64)
tensor([-210.8131, -207.8706, -198.4356, -199.6225, -208.3901],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0065, device='cuda:0', dtype=torch.float64)
tensor([-210.7491, -207.8239, -198.4470, -199.6286, -208.2947],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0104, device='cuda:0', dtype=torch.float64)
tensor([-210.6334, -207.7931, -198.5702, -199.7187, -208.1913],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0066, device='cuda:0', dtype=torch.float64)
tensor([-210.5211, -207.7627, -198.7114, -199.8284, -208.0977],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0071, device='cuda:0', dtype=torch.float64)
tensor([-210.4385, -207.7351, -198.8177, -199.9172, -208.0082],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0078, device='cuda:0', dtype=torch.float64)
tensor([-210.3993, -207.7469, -198.9489, -200.0571, -207.9732],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0067, device='cuda:0', dtype=torch.float64)
tensor([-210.4295, -207.7690, -198.9920, -200.1557, -207.9694],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0074, device='cuda:0', dtype=torch.float64)
tensor([-210.4407, -207.7751, -199.0254, -200.2262, -207.9551],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0071, device='cuda:0', dtype=torch.float64)
tensor([-210.4559, -207.7906, -199.0796, -200.3193, -207.9439],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0063, device='cuda:0', dtype=torch.float64)
tensor([-210.5072, -207.7838, -199.0642, -200.3660, -207.9446],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0108, device='cuda:0', dtype=torch.float64)
tensor([-210.6586, -207.7514, -198.9196, -200.3464, -208.0153],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0081, device='cuda:0', dtype=torch.float64)
tensor([-210.7808, -207.7290, -198.7820, -200.3051, -208.0742],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0081, device='cuda:0', dtype=torch.float64)
tensor([-210.8907, -207.7089, -198.6610, -200.2562, -208.1407],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0125, device='cuda:0', dtype=torch.float64)
tensor([-211.0031, -207.6909, -198.5239, -200.1933, -208.2161],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0074, device='cuda:0', dtype=torch.float64)
tensor([-211.0703, -207.6701, -198.4224, -200.1255, -208.2684],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0078, device='cuda:0', dtype=torch.float64)
tensor([-211.1406, -207.6598, -198.3354, -200.0675, -208.3239],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0077, device='cuda:0', dtype=torch.float64)
tensor([-211.2134, -207.6461, -198.2862, -200.0688, -208.3856],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0070, device='cuda:0', dtype=torch.float64)
tensor([-211.3476, -207.6241, -198.1669, -200.0304, -208.4820],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0076, device='cuda:0', dtype=torch.float64)
tensor([-211.5348, -207.6362, -198.0975, -200.0778, -208.6596],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0115, device='cuda:0', dtype=torch.float64)
tensor([-211.6850, -207.6346, -197.9643, -200.0075, -208.7750],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0065, device='cuda:0', dtype=torch.float64)
tensor([-211.8110, -207.6244, -197.8337, -199.9138, -208.8596],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0092, device='cuda:0', dtype=torch.float64)
tensor([-211.9141, -207.6203, -197.7907, -199.9088, -208.9501],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0089, device='cuda:0', dtype=torch.float64)
tensor([-211.8759, -207.5558, -197.8002, -199.8904, -208.9138],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0060, device='cuda:0', dtype=torch.float64)
tensor([-211.8023, -207.4688, -197.8190, -199.8681, -208.8467],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0066, device='cuda:0', dtype=torch.float64)
tensor([-211.7594, -207.3894, -197.7976, -199.8217, -208.7840],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0074, device='cuda:0', dtype=torch.float64)
tensor([-211.6977, -207.3135, -197.7819, -199.7662, -208.7182],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0082, device='cuda:0', dtype=torch.float64)
tensor([-211.5673, -207.2232, -197.8242, -199.7330, -208.6098],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0072, device='cuda:0', dtype=torch.float64)
tensor([-211.3863, -207.1429, -197.9855, -199.7947, -208.4996],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0062, device='cuda:0', dtype=torch.float64)
tensor([-211.2349, -207.0934, -198.2027, -199.9541, -208.4336],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0057, device='cuda:0', dtype=torch.float64)
tensor([-211.0557, -207.0541, -198.4751, -200.1435, -208.3613],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0081, device='cuda:0', dtype=torch.float64)
tensor([-210.8257, -207.0056, -198.7428, -200.2903, -208.2363],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0075, device='cuda:0', dtype=torch.float64)
tensor([-210.6109, -206.9552, -198.9569, -200.3787, -208.1050],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0082, device='cuda:0', dtype=torch.float64)
tensor([-210.4106, -206.9051, -199.1381, -200.4507, -207.9724],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0061, device='cuda:0', dtype=torch.float64)
tensor([-210.2477, -206.8569, -199.2527, -200.4698, -207.8538],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0092, device='cuda:0', dtype=torch.float64)
tensor([-210.1552, -206.8244, -199.2834, -200.4409, -207.7659],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0079, device='cuda:0', dtype=torch.float64)
tensor([-210.1168, -206.8074, -199.2884, -200.4198, -207.7284],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0077, device='cuda:0', dtype=torch.float64)
tensor([-210.0964, -206.8226, -199.3068, -200.4205, -207.7161],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0060, device='cuda:0', dtype=torch.float64)
tensor([-210.0630, -206.8203, -199.2705, -200.3555, -207.6619],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0071, device='cuda:0', dtype=torch.float64)
tensor([-210.0572, -206.8035, -199.1510, -200.1937, -207.6215],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0135, device='cuda:0', dtype=torch.float64)
tensor([-210.0733, -206.7833, -198.9670, -199.9864, -207.5894],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0073, device='cuda:0', dtype=torch.float64)
tensor([-210.0936, -206.7943, -198.8340, -199.8592, -207.5600],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0073, device='cuda:0', dtype=torch.float64)
tensor([-210.0740, -206.8142, -198.8165, -199.8374, -207.5384],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0094, device='cuda:0', dtype=torch.float64)
tensor([-210.0563, -206.8484, -198.8611, -199.8842, -207.5425],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0074, device='cuda:0', dtype=torch.float64)
tensor([-210.0835, -206.8822, -198.8420, -199.9030, -207.5639],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0074, device='cuda:0', dtype=torch.float64)
tensor([-210.1175, -206.9222, -198.8081, -199.8978, -207.5926],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0070, device='cuda:0', dtype=torch.float64)
tensor([-210.1888, -206.9405, -198.6943, -199.8339, -207.6453],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0104, device='cuda:0', dtype=torch.float64)
tensor([-210.2261, -206.9578, -198.6499, -199.8298, -207.6789],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0066, device='cuda:0', dtype=torch.float64)
tensor([-210.2807, -206.9908, -198.6171, -199.8540, -207.7228],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0094, device='cuda:0', dtype=torch.float64)
tensor([-210.3711, -207.0262, -198.5533, -199.8772, -207.7844],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0075, device='cuda:0', dtype=torch.float64)
tensor([-210.4364, -207.0361, -198.4583, -199.8467, -207.8036],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0057, device='cuda:0', dtype=torch.float64)
tensor([-210.4768, -207.0475, -198.3779, -199.8090, -207.8081],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0066, device='cuda:0', dtype=torch.float64)
tensor([-210.5296, -207.0243, -198.2179, -199.7001, -207.7924],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0091, device='cuda:0', dtype=torch.float64)
tensor([-210.5572, -206.9901, -198.0944, -199.6124, -207.7530],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0067, device='cuda:0', dtype=torch.float64)
tensor([-210.5977, -206.9850, -198.0216, -199.5833, -207.7505],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0089, device='cuda:0', dtype=torch.float64)
tensor([-210.6236, -206.9713, -197.9541, -199.5519, -207.7476],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0068, device='cuda:0', dtype=torch.float64)
tensor([-210.5845, -206.9587, -198.0104, -199.6175, -207.7134],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0097, device='cuda:0', dtype=torch.float64)
tensor([-210.5410, -206.9608, -198.1723, -199.7959, -207.7031],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0089, device='cuda:0', dtype=torch.float64)
tensor([-210.5135, -206.9610, -198.2854, -199.9239, -207.6913],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0116, device='cuda:0', dtype=torch.float64)
tensor([-210.4262, -206.9463, -198.4206, -200.0448, -207.6279],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0089, device='cuda:0', dtype=torch.float64)
tensor([-210.3401, -206.9027, -198.4451, -200.0376, -207.5213],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0083, device='cuda:0', dtype=torch.float64)
tensor([-210.2848, -206.8306, -198.3276, -199.8822, -207.4197],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0068, device='cuda:0', dtype=torch.float64)
tensor([-210.1736, -206.7653, -198.2466, -199.7184, -207.2842],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0086, device='cuda:0', dtype=torch.float64)
tensor([-210.0685, -206.7076, -198.2386, -199.6452, -207.1670],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0089, device='cuda:0', dtype=torch.float64)
tensor([-209.9268, -206.6472, -198.2816, -199.5961, -207.0342],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0087, device='cuda:0', dtype=torch.float64)
tensor([-209.8872, -206.5683, -198.1855, -199.4662, -206.9560],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0092, device='cuda:0', dtype=torch.float64)
tensor([-209.8866, -206.5254, -198.1425, -199.4310, -206.9331],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0108, device='cuda:0', dtype=torch.float64)
tensor([-209.8904, -206.4845, -198.1747, -199.4769, -206.9403],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0076, device='cuda:0', dtype=torch.float64)
tensor([-209.8265, -206.4276, -198.2395, -199.5164, -206.8994],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0061, device='cuda:0', dtype=torch.float64)
tensor([-209.7942, -206.4050, -198.3034, -199.5767, -206.8924],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0086, device='cuda:0', dtype=torch.float64)
tensor([-209.8040, -206.3770, -198.2829, -199.5725, -206.9083],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0075, device='cuda:0', dtype=torch.float64)
tensor([-209.7952, -206.3299, -198.2723, -199.5588, -206.9076],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0059, device='cuda:0', dtype=torch.float64)
tensor([-209.8071, -206.3142, -198.3470, -199.6480, -206.9622],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0076, device='cuda:0', dtype=torch.float64)
tensor([-209.8266, -206.3094, -198.4373, -199.7574, -207.0137],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0103, device='cuda:0', dtype=torch.float64)
tensor([-209.8032, -206.3017, -198.5617, -199.8807, -207.0294],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0072, device='cuda:0', dtype=torch.float64)
tensor([-209.7419, -206.3051, -198.7446, -200.0491, -207.0116],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0078, device='cuda:0', dtype=torch.float64)
tensor([-209.6762, -206.3162, -198.8698, -200.1496, -206.9734],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0070, device='cuda:0', dtype=torch.float64)
tensor([-209.5757, -206.2982, -198.9157, -200.1369, -206.8706],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0079, device='cuda:0', dtype=torch.float64)
tensor([-209.4771, -206.3076, -199.0240, -200.1796, -206.7908],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0068, device='cuda:0', dtype=torch.float64)
tensor([-209.4189, -206.3272, -199.0910, -200.2000, -206.7463],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0078, device='cuda:0', dtype=torch.float64)
tensor([-209.3886, -206.3338, -199.1160, -200.2085, -206.7014],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0072, device='cuda:0', dtype=torch.float64)
tensor([-209.4154, -206.3159, -199.0128, -200.1173, -206.6861],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0068, device='cuda:0', dtype=torch.float64)
tensor([-209.4775, -206.2966, -198.8133, -199.9448, -206.6837],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0072, device='cuda:0', dtype=torch.float64)
tensor([-209.5138, -206.2991, -198.6987, -199.8454, -206.6817],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0062, device='cuda:0', dtype=torch.float64)
tensor([-209.5509, -206.2857, -198.5333, -199.6891, -206.6620],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0074, device='cuda:0', dtype=torch.float64)
tensor([-209.5526, -206.2567, -198.3857, -199.5267, -206.6108],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0078, device='cuda:0', dtype=torch.float64)
tensor([-209.5845, -206.2135, -198.1914, -199.3413, -206.5707],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0106, device='cuda:0', dtype=torch.float64)
tensor([-209.6361, -206.1972, -198.0717, -199.2569, -206.5889],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0098, device='cuda:0', dtype=torch.float64)
tensor([-209.6872, -206.2063, -197.9969, -199.2174, -206.6103],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0084, device='cuda:0', dtype=torch.float64)
tensor([-209.7490, -206.2325, -197.8868, -199.1442, -206.6359],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0087, device='cuda:0', dtype=torch.float64)
tensor([-209.8779, -206.2998, -197.8382, -199.1930, -206.7495],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0080, device='cuda:0', dtype=torch.float64)
tensor([-209.9732, -206.3589, -197.8218, -199.2579, -206.8325],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0091, device='cuda:0', dtype=torch.float64)
tensor([-210.1199, -206.4193, -197.7950, -199.3440, -206.9802],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0076, device='cuda:0', dtype=torch.float64)
tensor([-210.2619, -206.4603, -197.7221, -199.3757, -207.1108],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0077, device='cuda:0', dtype=torch.float64)
tensor([-210.3866, -206.4827, -197.5612, -199.2796, -207.1954],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0099, device='cuda:0', dtype=torch.float64)
tensor([-210.4299, -206.4740, -197.5022, -199.2385, -207.2396],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0073, device='cuda:0', dtype=torch.float64)
tensor([-210.3908, -206.4459, -197.5068, -199.2106, -207.2118],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0083, device='cuda:0', dtype=torch.float64)
tensor([-210.3659, -206.3889, -197.3853, -199.0508, -207.1500],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0097, device='cuda:0', dtype=torch.float64)
tensor([-210.2569, -206.3114, -197.4101, -199.0134, -207.0532],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0069, device='cuda:0', dtype=torch.float64)
tensor([-210.1320, -206.2293, -197.4723, -199.0048, -206.9574],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0091, device='cuda:0', dtype=torch.float64)
tensor([-209.9602, -206.1450, -197.6298, -199.0717, -206.8421],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0071, device='cuda:0', dtype=torch.float64)
tensor([-209.7767, -206.0611, -197.8441, -199.1921, -206.7328],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0070, device='cuda:0', dtype=torch.float64)
tensor([-209.6566, -205.9906, -197.9943, -199.2892, -206.6629],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0089, device='cuda:0', dtype=torch.float64)
tensor([-209.4773, -205.9196, -198.1680, -199.3544, -206.5519],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0090, device='cuda:0', dtype=torch.float64)
tensor([-209.3385, -205.8515, -198.2876, -199.3883, -206.4627],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0071, device='cuda:0', dtype=torch.float64)
tensor([-209.2346, -205.8040, -198.3900, -199.4312, -206.4089],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0086, device='cuda:0', dtype=torch.float64)
tensor([-209.1307, -205.7899, -198.5507, -199.5433, -206.3771],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0074, device='cuda:0', dtype=torch.float64)
tensor([-209.0773, -205.7759, -198.6705, -199.6575, -206.3780],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0076, device='cuda:0', dtype=torch.float64)
tensor([-209.0872, -205.7738, -198.7459, -199.7681, -206.4212],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0086, device='cuda:0', dtype=torch.float64)
tensor([-209.1042, -205.7819, -198.7393, -199.7948, -206.4409],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0095, device='cuda:0', dtype=torch.float64)
tensor([-209.0840, -205.7878, -198.7839, -199.8398, -206.4438],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0072, device='cuda:0', dtype=torch.float64)
tensor([-209.1121, -205.7923, -198.7447, -199.8314, -206.4715],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0068, device='cuda:0', dtype=torch.float64)
tensor([-209.2093, -205.8146, -198.6344, -199.8012, -206.5552],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0074, device='cuda:0', dtype=torch.float64)
tensor([-209.2860, -205.8089, -198.4977, -199.7289, -206.6181],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0084, device='cuda:0', dtype=torch.float64)
tensor([-209.3302, -205.7867, -198.3480, -199.6180, -206.6443],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0073, device='cuda:0', dtype=torch.float64)
tensor([-209.4070, -205.7755, -198.2149, -199.5378, -206.7031],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0097, device='cuda:0', dtype=torch.float64)
tensor([-209.4423, -205.7903, -198.1885, -199.5469, -206.7448],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0102, device='cuda:0', dtype=torch.float64)
tensor([-209.4970, -205.8075, -198.1594, -199.5729, -206.8005],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0103, device='cuda:0', dtype=torch.float64)
tensor([-209.5308, -205.8159, -198.1002, -199.5575, -206.8136],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0092, device='cuda:0', dtype=torch.float64)
tensor([-209.5792, -205.8284, -198.0647, -199.5747, -206.8489],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0073, device='cuda:0', dtype=torch.float64)
tensor([-209.5994, -205.8322, -198.0580, -199.6121, -206.8573],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0081, device='cuda:0', dtype=torch.float64)
tensor([-209.5390, -205.8315, -198.1855, -199.7578, -206.8148],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0068, device='cuda:0', dtype=torch.float64)
tensor([-209.4104, -205.8079, -198.3467, -199.8893, -206.7097],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0058, device='cuda:0', dtype=torch.float64)
tensor([-209.3058, -205.7930, -198.4801, -199.9998, -206.6249],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0092, device='cuda:0', dtype=torch.float64)
tensor([-209.2667, -205.7819, -198.5454, -200.0861, -206.5784],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0072, device='cuda:0', dtype=torch.float64)
tensor([-209.1769, -205.7755, -198.6330, -200.1483, -206.4947],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0088, device='cuda:0', dtype=torch.float64)
tensor([-209.0952, -205.7481, -198.6267, -200.1062, -206.4050],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0072, device='cuda:0', dtype=torch.float64)
tensor([-209.0547, -205.7361, -198.6283, -200.0926, -206.3564],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0100, device='cuda:0', dtype=torch.float64)
tensor([-209.0770, -205.6710, -198.4010, -199.8782, -206.3136],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0065, device='cuda:0', dtype=torch.float64)
tensor([-209.0888, -205.5943, -198.2056, -199.6796, -206.2748],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0085, device='cuda:0', dtype=torch.float64)
tensor([-209.1114, -205.4868, -197.9407, -199.4118, -206.2277],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0088, device='cuda:0', dtype=torch.float64)
tensor([-209.0865, -205.3552, -197.6730, -199.0904, -206.1372],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0077, device='cuda:0', dtype=torch.float64)
tensor([-209.0519, -205.2158, -197.3996, -198.7445, -206.0256],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0068, device='cuda:0', dtype=torch.float64)
tensor([-209.0401, -205.0720, -197.1113, -198.3979, -205.9187],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0078, device='cuda:0', dtype=torch.float64)
tensor([-209.0216, -204.9463, -196.8660, -198.0935, -205.8051],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0094, device='cuda:0', dtype=torch.float64)
tensor([-209.0726, -204.8654, -196.6852, -197.9259, -205.7702],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0077, device='cuda:0', dtype=torch.float64)
tensor([-208.9971, -204.7980, -196.7356, -197.9451, -205.6923],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0084, device='cuda:0', dtype=torch.float64)
tensor([-209.0178, -204.7436, -196.6976, -197.9243, -205.6837],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0084, device='cuda:0', dtype=torch.float64)
tensor([-208.9421, -204.7136, -196.8348, -198.0514, -205.6371],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0078, device='cuda:0', dtype=torch.float64)
tensor([-208.8816, -204.7164, -197.0485, -198.2850, -205.6387],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0075, device='cuda:0', dtype=torch.float64)
tensor([-208.8157, -204.7607, -197.3941, -198.6702, -205.6704],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0084, device='cuda:0', dtype=torch.float64)
tensor([-208.7564, -204.8121, -197.6975, -199.0034, -205.6937],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0088, device='cuda:0', dtype=torch.float64)
tensor([-208.7355, -204.8600, -197.9697, -199.3263, -205.7227],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0094, device='cuda:0', dtype=torch.float64)
tensor([-208.7461, -204.9241, -198.2413, -199.6707, -205.7727],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0086, device='cuda:0', dtype=torch.float64)
tensor([-208.7663, -204.9939, -198.4819, -199.9738, -205.8213],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0083, device='cuda:0', dtype=torch.float64)
tensor([-208.8096, -205.0773, -198.6760, -200.2441, -205.8840],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0075, device='cuda:0', dtype=torch.float64)
tensor([-208.8668, -205.1598, -198.8512, -200.5025, -205.9504],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0065, device='cuda:0', dtype=torch.float64)
tensor([-208.8801, -205.2213, -198.9755, -200.6703, -205.9707],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0069, device='cuda:0', dtype=torch.float64)
tensor([-208.8801, -205.2501, -198.9944, -200.7062, -205.9655],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0111, device='cuda:0', dtype=torch.float64)
tensor([-208.8777, -205.2569, -198.9872, -200.7160, -205.9543],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0086, device='cuda:0', dtype=torch.float64)
tensor([-208.8901, -205.2525, -198.9221, -200.6794, -205.9503],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0090, device='cuda:0', dtype=torch.float64)
tensor([-208.9610, -205.2445, -198.7710, -200.5894, -206.0030],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0112, device='cuda:0', dtype=torch.float64)
tensor([-209.0974, -205.2158, -198.4955, -200.4078, -206.0957],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0082, device='cuda:0', dtype=torch.float64)
tensor([-209.1964, -205.1765, -198.1657, -200.1155, -206.1460],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0080, device='cuda:0', dtype=torch.float64)
tensor([-209.2240, -205.1152, -197.8716, -199.8099, -206.1400],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0103, device='cuda:0', dtype=torch.float64)
tensor([-209.2608, -205.0891, -197.6595, -199.5958, -206.1749],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0090, device='cuda:0', dtype=torch.float64)
tensor([-209.3150, -205.0751, -197.4997, -199.4486, -206.2346],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0087, device='cuda:0', dtype=torch.float64)
tensor([-209.2595, -205.0310, -197.4460, -199.3599, -206.1965],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0095, device='cuda:0', dtype=torch.float64)
tensor([-209.0973, -205.0173, -197.5537, -199.3733, -206.0911],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0088, device='cuda:0', dtype=torch.float64)
tensor([-208.8777, -204.9804, -197.7484, -199.4381, -205.9380],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0081, device='cuda:0', dtype=torch.float64)
tensor([-208.6784, -204.9503, -197.9391, -199.5168, -205.7914],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0116, device='cuda:0', dtype=torch.float64)
tensor([-208.4626, -204.9326, -198.1668, -199.6159, -205.6485],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0094, device='cuda:0', dtype=torch.float64)
tensor([-208.3070, -204.9303, -198.3430, -199.6978, -205.5505],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0091, device='cuda:0', dtype=torch.float64)
tensor([-208.1477, -204.9273, -198.4827, -199.7231, -205.4434],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0082, device='cuda:0', dtype=torch.float64)
tensor([-208.0538, -204.9508, -198.5965, -199.7759, -205.3860],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0082, device='cuda:0', dtype=torch.float64)
tensor([-208.0232, -204.9646, -198.6338, -199.7900, -205.3902],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0076, device='cuda:0', dtype=torch.float64)
tensor([-207.9968, -204.9552, -198.5997, -199.7432, -205.3922],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0070, device='cuda:0', dtype=torch.float64)
tensor([-208.0083, -204.9223, -198.4862, -199.6424, -205.4036],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0088, device='cuda:0', dtype=torch.float64)
tensor([-208.0646, -204.8943, -198.3508, -199.5486, -205.4390],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0080, device='cuda:0', dtype=torch.float64)
tensor([-208.1711, -204.8554, -198.1264, -199.4016, -205.4993],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0075, device='cuda:0', dtype=torch.float64)
tensor([-208.3009, -204.8300, -197.8739, -199.2265, -205.5878],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0092, device='cuda:0', dtype=torch.float64)
tensor([-208.3764, -204.8116, -197.7018, -199.0903, -205.6521],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0075, device='cuda:0', dtype=torch.float64)
tensor([-208.4847, -204.8213, -197.5886, -199.0550, -205.7604],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0075, device='cuda:0', dtype=torch.float64)
tensor([-208.6613, -204.8391, -197.4368, -199.0346, -205.9210],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0135, device='cuda:0', dtype=torch.float64)
tensor([-208.8258, -204.8588, -197.2518, -198.9556, -206.0560],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0073, device='cuda:0', dtype=torch.float64)
tensor([-208.9368, -204.9119, -197.1959, -198.9851, -206.1659],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0090, device='cuda:0', dtype=torch.float64)
tensor([-208.9930, -204.9321, -197.1869, -199.0328, -206.2225],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0078, device='cuda:0', dtype=torch.float64)
tensor([-209.0611, -204.9532, -197.1502, -199.0601, -206.2750],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0093, device='cuda:0', dtype=torch.float64)
tensor([-209.1351, -204.9647, -197.0836, -199.0682, -206.3282],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0086, device='cuda:0', dtype=torch.float64)
tensor([-209.1486, -204.9673, -197.0659, -199.0911, -206.3210],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0091, device='cuda:0', dtype=torch.float64)
tensor([-209.1048, -204.9753, -197.1265, -199.1527, -206.2789],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0100, device='cuda:0', dtype=torch.float64)
tensor([-208.9785, -204.9622, -197.2825, -199.2665, -206.1705],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0082, device='cuda:0', dtype=torch.float64)
tensor([-208.7839, -204.9830, -197.6681, -199.5920, -206.0374],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0106, device='cuda:0', dtype=torch.float64)
tensor([-208.5819, -205.0163, -198.0280, -199.8627, -205.8870],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0071, device='cuda:0', dtype=torch.float64)
tensor([-208.4385, -205.0653, -198.3895, -200.1767, -205.7728],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0075, device='cuda:0', dtype=torch.float64)
tensor([-208.3123, -205.1084, -198.6872, -200.4251, -205.6650],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0078, device='cuda:0', dtype=torch.float64)
tensor([-208.2039, -205.1700, -199.0262, -200.7194, -205.5683],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0098, device='cuda:0', dtype=torch.float64)
tensor([-208.1172, -205.2088, -199.1686, -200.8205, -205.4738],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0085, device='cuda:0', dtype=torch.float64)
tensor([-208.0267, -205.2015, -199.1622, -200.7634, -205.3856],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0093, device='cuda:0', dtype=torch.float64)
tensor([-207.9570, -205.1753, -199.1410, -200.7150, -205.3286],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0089, device='cuda:0', dtype=torch.float64)
tensor([-207.8799, -205.1252, -199.0707, -200.6128, -205.2651],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0059, device='cuda:0', dtype=torch.float64)
tensor([-207.8050, -205.0726, -198.9362, -200.4278, -205.1947],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0073, device='cuda:0', dtype=torch.float64)
tensor([-207.7791, -205.0203, -198.7383, -200.2128, -205.1673],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0104, device='cuda:0', dtype=torch.float64)
tensor([-207.8010, -204.9577, -198.4794, -199.9703, -205.1609],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0074, device='cuda:0', dtype=torch.float64)
tensor([-207.8500, -204.8806, -198.1959, -199.7240, -205.1902],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0082, device='cuda:0', dtype=torch.float64)
tensor([-207.8661, -204.8011, -197.9717, -199.5081, -205.1887],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0091, device='cuda:0', dtype=torch.float64)
tensor([-207.9231, -204.6937, -197.6975, -199.2676, -205.2220],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0106, device='cuda:0', dtype=torch.float64)
tensor([-208.0307, -204.5959, -197.4062, -199.0478, -205.2969],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0078, device='cuda:0', dtype=torch.float64)
tensor([-208.1419, -204.4907, -197.0450, -198.7366, -205.3571],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0064, device='cuda:0', dtype=torch.float64)
tensor([-208.2612, -204.4024, -196.7250, -198.4702, -205.4289],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0140, device='cuda:0', dtype=torch.float64)
tensor([-208.2906, -204.3317, -196.5925, -198.3460, -205.4509],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0099, device='cuda:0', dtype=torch.float64)
tensor([-208.2584, -204.2693, -196.6577, -198.4174, -205.4609],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0084, device='cuda:0', dtype=torch.float64)
tensor([-208.2240, -204.2305, -196.7566, -198.5383, -205.4732],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0090, device='cuda:0', dtype=torch.float64)
tensor([-208.2722, -204.2377, -196.8745, -198.7501, -205.5718],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0090, device='cuda:0', dtype=torch.float64)
tensor([-208.2392, -204.2475, -197.1363, -199.0753, -205.6206],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0088, device='cuda:0', dtype=torch.float64)
tensor([-208.2061, -204.2487, -197.3554, -199.3409, -205.6632],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0083, device='cuda:0', dtype=torch.float64)
tensor([-208.1441, -204.2386, -197.5777, -199.5744, -205.6728],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0077, device='cuda:0', dtype=torch.float64)
tensor([-208.1181, -204.2441, -197.8050, -199.8461, -205.7027],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0105, device='cuda:0', dtype=torch.float64)
tensor([-208.1289, -204.2604, -198.0029, -200.1184, -205.7509],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0099, device='cuda:0', dtype=torch.float64)
tensor([-208.1263, -204.2638, -198.1505, -200.3229, -205.7570],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0085, device='cuda:0', dtype=torch.float64)
tensor([-208.1007, -204.2437, -198.2781, -200.4939, -205.7336],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0094, device='cuda:0', dtype=torch.float64)
tensor([-208.0201, -204.2337, -198.4375, -200.6517, -205.6688],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0085, device='cuda:0', dtype=torch.float64)
tensor([-207.9481, -204.2302, -198.5646, -200.7786, -205.6096],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0076, device='cuda:0', dtype=torch.float64)
tensor([-207.8938, -204.2405, -198.6605, -200.8808, -205.5589],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0068, device='cuda:0', dtype=torch.float64)
tensor([-207.8314, -204.2337, -198.6768, -200.8841, -205.4840],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0083, device='cuda:0', dtype=torch.float64)
tensor([-207.7686, -204.2248, -198.6662, -200.8530, -205.3978],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0084, device='cuda:0', dtype=torch.float64)
tensor([-207.6553, -204.2086, -198.7093, -200.8347, -205.2714],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0132, device='cuda:0', dtype=torch.float64)
tensor([-207.5157, -204.1784, -198.7236, -200.7494, -205.1207],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0071, device='cuda:0', dtype=torch.float64)
tensor([-207.3388, -204.1426, -198.7693, -200.6648, -204.9388],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0106, device='cuda:0', dtype=torch.float64)
tensor([-207.2223, -204.1189, -198.6891, -200.4983, -204.7976],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0082, device='cuda:0', dtype=torch.float64)
tensor([-207.1365, -204.0912, -198.5671, -200.3041, -204.6796],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0078, device='cuda:0', dtype=torch.float64)
tensor([-207.0856, -204.0329, -198.3953, -200.0876, -204.5849],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0068, device='cuda:0', dtype=torch.float64)
tensor([-207.0725, -203.9649, -198.1345, -199.8006, -204.5256],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0090, device='cuda:0', dtype=torch.float64)
tensor([-207.0534, -203.9122, -197.9865, -199.6432, -204.4786],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0098, device='cuda:0', dtype=torch.float64)
tensor([-207.0548, -203.8593, -197.7462, -199.3902, -204.4444],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0071, device='cuda:0', dtype=torch.float64)
tensor([-207.1209, -203.8214, -197.5159, -199.1909, -204.4844],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0083, device='cuda:0', dtype=torch.float64)
tensor([-207.1818, -203.7905, -197.3074, -199.0174, -204.5241],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0067, device='cuda:0', dtype=torch.float64)
tensor([-207.2209, -203.7812, -197.2473, -198.9935, -204.5601],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0087, device='cuda:0', dtype=torch.float64)
tensor([-207.2718, -203.7793, -197.2250, -199.0345, -204.6149],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0103, device='cuda:0', dtype=torch.float64)
tensor([-207.3093, -203.7729, -197.2314, -199.1009, -204.6687],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0108, device='cuda:0', dtype=torch.float64)
tensor([-207.3342, -203.7666, -197.2330, -199.1515, -204.7201],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0078, device='cuda:0', dtype=torch.float64)
tensor([-207.3534, -203.7801, -197.3597, -199.3335, -204.7882],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0079, device='cuda:0', dtype=torch.float64)
tensor([-207.4118, -203.8079, -197.4519, -199.5130, -204.8769],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0089, device='cuda:0', dtype=torch.float64)
tensor([-207.4397, -203.8504, -197.5932, -199.7263, -204.9408],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0092, device='cuda:0', dtype=torch.float64)
tensor([-207.4606, -203.8683, -197.7322, -199.9267, -204.9895],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0079, device='cuda:0', dtype=torch.float64)
tensor([-207.4677, -203.8739, -197.8624, -200.1153, -205.0184],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0086, device='cuda:0', dtype=torch.float64)
tensor([-207.4180, -203.8674, -197.9624, -200.2237, -204.9778],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0102, device='cuda:0', dtype=torch.float64)
tensor([-207.3444, -203.8397, -198.1073, -200.3536, -204.9227],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0090, device='cuda:0', dtype=torch.float64)
tensor([-207.2515, -203.7982, -198.1629, -200.3631, -204.8365],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0109, device='cuda:0', dtype=torch.float64)
tensor([-207.2377, -203.7573, -198.1283, -200.3419, -204.8167],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0089, device='cuda:0', dtype=torch.float64)
tensor([-207.1513, -203.6993, -198.1260, -200.2925, -204.7259],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0095, device='cuda:0', dtype=torch.float64)
tensor([-207.1245, -203.6569, -198.0961, -200.2620, -204.6909],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0130, device='cuda:0', dtype=torch.float64)
tensor([-207.1057, -203.6034, -198.0240, -200.1778, -204.6776],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0134, device='cuda:0', dtype=torch.float64)
tensor([-207.0571, -203.5587, -197.9957, -200.1181, -204.6301],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0074, device='cuda:0', dtype=torch.float64)
tensor([-206.9991, -203.5114, -197.9210, -199.9882, -204.5619],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0085, device='cuda:0', dtype=torch.float64)
tensor([-206.8854, -203.4660, -197.8978, -199.8774, -204.4421],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0153, device='cuda:0', dtype=torch.float64)
tensor([-206.8156, -203.4191, -197.7989, -199.7125, -204.3534],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0081, device='cuda:0', dtype=torch.float64)
tensor([-206.8346, -203.3837, -197.6267, -199.5408, -204.3377],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0089, device='cuda:0', dtype=torch.float64)
tensor([-206.8832, -203.3924, -197.5846, -199.5610, -204.3575],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0085, device='cuda:0', dtype=torch.float64)
tensor([-206.9464, -203.3959, -197.5489, -199.6008, -204.3920],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0093, device='cuda:0', dtype=torch.float64)
tensor([-206.9907, -203.4168, -197.5650, -199.6775, -204.4068],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0077, device='cuda:0', dtype=torch.float64)
tensor([-206.9793, -203.4466, -197.6965, -199.8313, -204.3770],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0078, device='cuda:0', dtype=torch.float64)
tensor([-206.9758, -203.4610, -197.7798, -199.9420, -204.3353],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0073, device='cuda:0', dtype=torch.float64)
tensor([-206.9192, -203.4539, -197.8691, -200.0072, -204.2520],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0089, device='cuda:0', dtype=torch.float64)
tensor([-206.8504, -203.4261, -197.8902, -199.9830, -204.1579],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0126, device='cuda:0', dtype=torch.float64)
tensor([-206.8176, -203.4085, -197.8704, -199.9406, -204.0968],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0086, device='cuda:0', dtype=torch.float64)
tensor([-206.7563, -203.3815, -197.8530, -199.8679, -204.0082],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0073, device='cuda:0', dtype=torch.float64)
tensor([-206.7192, -203.3337, -197.8226, -199.7954, -203.9416],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0068, device='cuda:0', dtype=torch.float64)
tensor([-206.6713, -203.2890, -197.7633, -199.6734, -203.8614],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0077, device='cuda:0', dtype=torch.float64)
tensor([-206.6444, -203.2272, -197.6374, -199.4932, -203.7961],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0084, device='cuda:0', dtype=torch.float64)
tensor([-206.6217, -203.1512, -197.5109, -199.3110, -203.7579],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0077, device='cuda:0', dtype=torch.float64)
tensor([-206.6228, -203.0816, -197.3990, -199.1764, -203.7365],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0075, device='cuda:0', dtype=torch.float64)
tensor([-206.6663, -203.0145, -197.2338, -199.0115, -203.7538],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0103, device='cuda:0', dtype=torch.float64)
tensor([-206.6554, -202.9556, -197.2260, -198.9904, -203.7325],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0093, device='cuda:0', dtype=torch.float64)
tensor([-206.6136, -202.9231, -197.3678, -199.1209, -203.6845],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0085, device='cuda:0', dtype=torch.float64)
tensor([-206.5934, -202.9111, -197.5946, -199.3721, -203.6618],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0123, device='cuda:0', dtype=torch.float64)
tensor([-206.6043, -202.9271, -197.8533, -199.6868, -203.6776],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0094, device='cuda:0', dtype=torch.float64)
tensor([-206.6321, -202.9458, -198.1275, -200.0203, -203.7019],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0082, device='cuda:0', dtype=torch.float64)
tensor([-206.7237, -202.9534, -198.2798, -200.2815, -203.7778],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0084, device='cuda:0', dtype=torch.float64)
tensor([-206.8176, -202.9371, -198.3126, -200.4245, -203.8536],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0086, device='cuda:0', dtype=torch.float64)
tensor([-206.8945, -202.9206, -198.2920, -200.4910, -203.9145],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0075, device='cuda:0', dtype=torch.float64)
tensor([-206.9585, -202.8902, -198.1938, -200.4572, -203.9752],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0089, device='cuda:0', dtype=torch.float64)
tensor([-207.0218, -202.8781, -198.1045, -200.4371, -204.0390],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0099, device='cuda:0', dtype=torch.float64)
tensor([-207.0712, -202.8712, -198.0258, -200.4110, -204.0890],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0099, device='cuda:0', dtype=torch.float64)
tensor([-207.0939, -202.8442, -197.9206, -200.3381, -204.1097],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0091, device='cuda:0', dtype=torch.float64)
tensor([-207.1256, -202.8258, -197.7700, -200.2127, -204.1436],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0107, device='cuda:0', dtype=torch.float64)
tensor([-207.1153, -202.8127, -197.6826, -200.1083, -204.1410],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0093, device='cuda:0', dtype=torch.float64)
tensor([-207.0530, -202.7856, -197.6020, -199.9589, -204.0874],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0078, device='cuda:0', dtype=torch.float64)
tensor([-206.9951, -202.7469, -197.4712, -199.7500, -204.0273],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0078, device='cuda:0', dtype=torch.float64)
tensor([-206.9466, -202.7175, -197.3761, -199.5959, -203.9780],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0109, device='cuda:0', dtype=torch.float64)
tensor([-206.8378, -202.6865, -197.3204, -199.4417, -203.8854],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0072, device='cuda:0', dtype=torch.float64)
tensor([-206.7521, -202.6597, -197.2585, -199.3027, -203.8134],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0073, device='cuda:0', dtype=torch.float64)
tensor([-206.7139, -202.6358, -197.1865, -199.1957, -203.7919],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0097, device='cuda:0', dtype=torch.float64)
tensor([-206.6924, -202.6100, -197.1470, -199.1408, -203.7765],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0078, device='cuda:0', dtype=torch.float64)
tensor([-206.6861, -202.5998, -197.1749, -199.1671, -203.7821],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0088, device='cuda:0', dtype=torch.float64)
tensor([-206.7142, -202.5989, -197.0948, -199.1001, -203.8120],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0084, device='cuda:0', dtype=torch.float64)
tensor([-206.7077, -202.6104, -197.0885, -199.1011, -203.8065],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0095, device='cuda:0', dtype=torch.float64)
tensor([-206.7390, -202.6222, -197.0945, -199.1581, -203.8209],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0099, device='cuda:0', dtype=torch.float64)
tensor([-206.7657, -202.6314, -197.1900, -199.3158, -203.8308],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0090, device='cuda:0', dtype=torch.float64)
tensor([-206.7213, -202.6525, -197.4250, -199.5781, -203.7642],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0093, device='cuda:0', dtype=torch.float64)
tensor([-206.5993, -202.6694, -197.6767, -199.7760, -203.6274],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0083, device='cuda:0', dtype=torch.float64)
tensor([-206.4914, -202.6760, -197.8873, -199.9349, -203.5015],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0125, device='cuda:0', dtype=torch.float64)
tensor([-206.4331, -202.6832, -197.9893, -200.0177, -203.4051],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0135, device='cuda:0', dtype=torch.float64)
tensor([-206.3605, -202.6814, -198.1183, -200.1106, -203.2975],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0117, device='cuda:0', dtype=torch.float64)
tensor([-206.3131, -202.6709, -198.1889, -200.1518, -203.2188],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0078, device='cuda:0', dtype=torch.float64)
tensor([-206.2878, -202.6837, -198.2437, -200.1956, -203.1635],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0078, device='cuda:0', dtype=torch.float64)
tensor([-206.2843, -202.6950, -198.2814, -200.2500, -203.1141],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0089, device='cuda:0', dtype=torch.float64)
tensor([-206.2639, -202.6896, -198.2733, -200.2284, -203.0642],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0076, device='cuda:0', dtype=torch.float64)
tensor([-206.2164, -202.6863, -198.3122, -200.2425, -202.9940],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0076, device='cuda:0', dtype=torch.float64)
tensor([-206.2554, -202.6734, -198.1798, -200.1432, -203.0110],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0106, device='cuda:0', dtype=torch.float64)
tensor([-206.4087, -202.6568, -197.9939, -200.1031, -203.1391],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0097, device='cuda:0', dtype=torch.float64)
tensor([-206.5792, -202.6458, -197.8610, -200.1363, -203.2946],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0121, device='cuda:0', dtype=torch.float64)
tensor([-206.7438, -202.5870, -197.5412, -199.9373, -203.4556],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0090, device='cuda:0', dtype=torch.float64)
tensor([-206.9048, -202.5151, -197.1850, -199.6739, -203.6165],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0093, device='cuda:0', dtype=torch.float64)
tensor([-207.0747, -202.4652, -196.8760, -199.4681, -203.7780],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0076, device='cuda:0', dtype=torch.float64)
tensor([-207.2195, -202.4378, -196.6681, -199.3683, -203.9042],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0092, device='cuda:0', dtype=torch.float64)
tensor([-207.2975, -202.4064, -196.4971, -199.2434, -203.9878],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0092, device='cuda:0', dtype=torch.float64)
tensor([-207.4101, -202.3923, -196.3301, -199.1600, -204.0920],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0096, device='cuda:0', dtype=torch.float64)
tensor([-207.4861, -202.3533, -196.2448, -199.1282, -204.1768],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0109, device='cuda:0', dtype=torch.float64)
tensor([-207.4373, -202.2999, -196.2793, -199.1311, -204.1628],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0094, device='cuda:0', dtype=torch.float64)
tensor([-207.3070, -202.2395, -196.4469, -199.2254, -204.0893],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0118, device='cuda:0', dtype=torch.float64)
tensor([-207.0864, -202.1778, -196.7374, -199.3893, -203.9488],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0106, device='cuda:0', dtype=torch.float64)
tensor([-206.8416, -202.1306, -197.1906, -199.7182, -203.8027],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0094, device='cuda:0', dtype=torch.float64)
tensor([-206.6135, -202.1023, -197.7124, -200.1385, -203.6684],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0080, device='cuda:0', dtype=torch.float64)
tensor([-206.3581, -202.0976, -198.2708, -200.5574, -203.5027],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0074, device='cuda:0', dtype=torch.float64)
tensor([-206.1112, -202.0822, -198.6956, -200.8180, -203.3342],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0086, device='cuda:0', dtype=torch.float64)
tensor([-205.8889, -202.0699, -198.9804, -200.9412, -203.1951],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0074, device='cuda:0', dtype=torch.float64)
tensor([-205.7068, -202.0472, -199.1899, -201.0228, -203.0804],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0096, device='cuda:0', dtype=torch.float64)
tensor([-205.6113, -201.9984, -199.2261, -201.0010, -203.0455],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0076, device='cuda:0', dtype=torch.float64)
tensor([-205.5327, -201.9639, -199.1848, -200.9008, -203.0038],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0111, device='cuda:0', dtype=torch.float64)
tensor([-205.5195, -201.9400, -199.0807, -200.7889, -203.0024],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0099, device='cuda:0', dtype=torch.float64)
tensor([-205.4828, -201.9163, -198.9525, -200.6212, -202.9846],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0086, device='cuda:0', dtype=torch.float64)
tensor([-205.4850, -201.8755, -198.7128, -200.3717, -202.9914],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0076, device='cuda:0', dtype=torch.float64)
tensor([-205.4568, -201.8322, -198.4727, -200.0845, -202.9754],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0092, device='cuda:0', dtype=torch.float64)
tensor([-205.4229, -201.7885, -198.2826, -199.8574, -202.9383],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0118, device='cuda:0', dtype=torch.float64)
tensor([-205.4472, -201.7590, -198.0305, -199.6234, -202.9503],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0091, device='cuda:0', dtype=torch.float64)
tensor([-205.4622, -201.7409, -197.8296, -199.4485, -202.9536],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0090, device='cuda:0', dtype=torch.float64)
tensor([-205.5090, -201.7163, -197.6372, -199.3141, -202.9751],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0089, device='cuda:0', dtype=torch.float64)
tensor([-205.5611, -201.7072, -197.4731, -199.2320, -202.9950],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0082, device='cuda:0', dtype=torch.float64)
tensor([-205.6100, -201.7285, -197.4239, -199.2781, -203.0170],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0133, device='cuda:0', dtype=torch.float64)
tensor([-205.7106, -201.7574, -197.3440, -199.3301, -203.0872],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0110, device='cuda:0', dtype=torch.float64)
tensor([-205.7435, -201.7780, -197.2616, -199.3024, -203.0916],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0083, device='cuda:0', dtype=torch.float64)
tensor([-205.7879, -201.8104, -197.2243, -199.3428, -203.1082],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0072, device='cuda:0', dtype=torch.float64)
tensor([-205.8497, -201.8414, -197.1439, -199.3563, -203.1346],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0085, device='cuda:0', dtype=torch.float64)
tensor([-205.8353, -201.8845, -197.2026, -199.4478, -203.1009],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0079, device='cuda:0', dtype=torch.float64)
tensor([-205.8074, -201.9429, -197.3237, -199.5852, -203.0564],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0084, device='cuda:0', dtype=torch.float64)
tensor([-205.8117, -202.0147, -197.4429, -199.7658, -203.0238],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0108, device='cuda:0', dtype=torch.float64)
tensor([-205.7756, -202.0598, -197.5717, -199.9127, -202.9572],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0090, device='cuda:0', dtype=torch.float64)
tensor([-205.7006, -202.1091, -197.6793, -199.9920, -202.8580],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0094, device='cuda:0', dtype=torch.float64)
tensor([-205.6341, -202.1469, -197.6920, -199.9706, -202.7912],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0093, device='cuda:0', dtype=torch.float64)
tensor([-205.5668, -202.1616, -197.5998, -199.8327, -202.7412],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0088, device='cuda:0', dtype=torch.float64)
tensor([-205.4813, -202.1698, -197.6146, -199.7919, -202.6719],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0088, device='cuda:0', dtype=torch.float64)
tensor([-205.4521, -202.1786, -197.5748, -199.7385, -202.6382],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0067, device='cuda:0', dtype=torch.float64)
tensor([-205.4519, -202.1817, -197.5434, -199.7242, -202.6329],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0103, device='cuda:0', dtype=torch.float64)
tensor([-205.4315, -202.1764, -197.4924, -199.6508, -202.6002],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0115, device='cuda:0', dtype=torch.float64)
tensor([-205.4319, -202.1575, -197.3691, -199.5131, -202.5905],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0089, device='cuda:0', dtype=torch.float64)
tensor([-205.4885, -202.1254, -197.1734, -199.3443, -202.6532],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0074, device='cuda:0', dtype=torch.float64)
tensor([-205.5276, -202.0980, -197.0124, -199.1972, -202.6942],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0138, device='cuda:0', dtype=torch.float64)
tensor([-205.5951, -202.0558, -196.8260, -199.0512, -202.7463],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0094, device='cuda:0', dtype=torch.float64)
tensor([-205.6764, -202.0219, -196.6516, -198.9335, -202.8145],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0101, device='cuda:0', dtype=torch.float64)
tensor([-205.7614, -201.9737, -196.4136, -198.7399, -202.8758],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0086, device='cuda:0', dtype=torch.float64)
tensor([-205.8478, -201.9164, -196.2553, -198.6526, -202.9364],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0090, device='cuda:0', dtype=torch.float64)
tensor([-205.8797, -201.8635, -196.2582, -198.7052, -202.9540],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0105, device='cuda:0', dtype=torch.float64)
tensor([-205.8494, -201.8163, -196.4286, -198.8951, -202.9075],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0096, device='cuda:0', dtype=torch.float64)
tensor([-205.8441, -201.7719, -196.6002, -199.1212, -202.8590],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0093, device='cuda:0', dtype=torch.float64)
tensor([-205.8086, -201.7466, -196.7956, -199.3327, -202.7969],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0082, device='cuda:0', dtype=torch.float64)
tensor([-205.7664, -201.7093, -197.0133, -199.5565, -202.7227],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0092, device='cuda:0', dtype=torch.float64)
tensor([-205.6810, -201.6777, -197.2909, -199.8056, -202.6079],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0076, device='cuda:0', dtype=torch.float64)
tensor([-205.5121, -201.6351, -197.5476, -199.9570, -202.4280],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0089, device='cuda:0', dtype=torch.float64)
tensor([-205.4014, -201.5958, -197.7382, -200.0917, -202.2981],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0108, device='cuda:0', dtype=torch.float64)
tensor([-205.3081, -201.5501, -197.8510, -200.1518, -202.2036],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0096, device='cuda:0', dtype=torch.float64)
tensor([-205.2266, -201.5210, -197.9612, -200.2187, -202.1143],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0089, device='cuda:0', dtype=torch.float64)
tensor([-205.1915, -201.4799, -197.9897, -200.2418, -202.0631],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0089, device='cuda:0', dtype=torch.float64)
tensor([-205.1310, -201.4232, -198.0150, -200.2271, -202.0020],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0127, device='cuda:0', dtype=torch.float64)
tensor([-205.0956, -201.3901, -198.0251, -200.2074, -201.9676],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0099, device='cuda:0', dtype=torch.float64)
tensor([-205.0873, -201.3629, -198.0054, -200.1800, -201.9466],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0096, device='cuda:0', dtype=torch.float64)
tensor([-205.0686, -201.3335, -197.9396, -200.0906, -201.9293],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0100, device='cuda:0', dtype=torch.float64)
tensor([-205.0965, -201.3096, -197.8256, -200.0100, -201.9430],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0109, device='cuda:0', dtype=torch.float64)
tensor([-205.0826, -201.2886, -197.6938, -199.8630, -201.9200],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0096, device='cuda:0', dtype=torch.float64)
tensor([-205.0690, -201.2547, -197.5412, -199.6949, -201.8711],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0089, device='cuda:0', dtype=torch.float64)
tensor([-205.0660, -201.2241, -197.3975, -199.5684, -201.8379],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0120, device='cuda:0', dtype=torch.float64)
tensor([-205.0230, -201.1784, -197.2348, -199.3696, -201.7756],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0091, device='cuda:0', dtype=torch.float64)
tensor([-205.0028, -201.1249, -196.9973, -199.1050, -201.7213],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0098, device='cuda:0', dtype=torch.float64)
tensor([-205.0036, -201.0777, -196.7935, -198.9051, -201.6822],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0066, device='cuda:0', dtype=torch.float64)
tensor([-205.0453, -201.0470, -196.6012, -198.7566, -201.6806],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0080, device='cuda:0', dtype=torch.float64)
tensor([-205.1021, -201.0156, -196.4078, -198.6272, -201.6882],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0132, device='cuda:0', dtype=torch.float64)
tensor([-205.1577, -201.0007, -196.2660, -198.5644, -201.6936],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0099, device='cuda:0', dtype=torch.float64)
tensor([-205.1624, -200.9946, -196.2061, -198.5483, -201.6673],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0089, device='cuda:0', dtype=torch.float64)
tensor([-205.1637, -200.9960, -196.1849, -198.5816, -201.6448],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0086, device='cuda:0', dtype=torch.float64)
tensor([-205.2194, -201.0167, -196.1990, -198.7030, -201.6866],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0081, device='cuda:0', dtype=torch.float64)
tensor([-205.2946, -201.0410, -196.1403, -198.7526, -201.7490],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0086, device='cuda:0', dtype=torch.float64)
tensor([-205.3029, -201.0474, -196.1717, -198.8370, -201.7502],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0090, device='cuda:0', dtype=torch.float64)
tensor([-205.2799, -201.0617, -196.2359, -198.9259, -201.7096],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0099, device='cuda:0', dtype=torch.float64)
tensor([-205.1894, -201.0700, -196.3529, -199.0032, -201.5936],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0091, device='cuda:0', dtype=torch.float64)
tensor([-205.1137, -201.0758, -196.4301, -199.0493, -201.4984],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0101, device='cuda:0', dtype=torch.float64)
tensor([-205.1125, -201.0868, -196.5180, -199.1924, -201.4632],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0084, device='cuda:0', dtype=torch.float64)
tensor([-205.1222, -201.0868, -196.5475, -199.2762, -201.4511],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0083, device='cuda:0', dtype=torch.float64)
tensor([-205.1629, -201.0707, -196.5179, -199.3155, -201.4636],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0085, device='cuda:0', dtype=torch.float64)
tensor([-205.1865, -201.0641, -196.5566, -199.4015, -201.4751],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0162, device='cuda:0', dtype=torch.float64)
tensor([-205.1825, -201.0739, -196.6924, -199.5554, -201.4419],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0118, device='cuda:0', dtype=torch.float64)
tensor([-205.1594, -201.0568, -196.7896, -199.6373, -201.4059],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0091, device='cuda:0', dtype=torch.float64)
tensor([-205.1465, -201.0399, -196.8287, -199.6647, -201.3971],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0094, device='cuda:0', dtype=torch.float64)
tensor([-205.0968, -201.0283, -196.9100, -199.7068, -201.3664],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0148, device='cuda:0', dtype=torch.float64)
tensor([-205.0289, -200.9957, -196.9750, -199.7092, -201.3307],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0083, device='cuda:0', dtype=torch.float64)
tensor([-204.9682, -200.9559, -197.0057, -199.6731, -201.3010],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0106, device='cuda:0', dtype=torch.float64)
tensor([-204.8874, -200.9095, -196.9735, -199.5386, -201.2566],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0095, device='cuda:0', dtype=torch.float64)
tensor([-204.8367, -200.8647, -196.8352, -199.3018, -201.2433],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0101, device='cuda:0', dtype=torch.float64)
tensor([-204.8183, -200.8155, -196.6356, -199.0420, -201.2557],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0087, device='cuda:0', dtype=torch.float64)
tensor([-204.7971, -200.7609, -196.4636, -198.8205, -201.2641],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0131, device='cuda:0', dtype=torch.float64)
tensor([-204.8108, -200.7051, -196.2883, -198.6325, -201.3004],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0075, device='cuda:0', dtype=torch.float64)
tensor([-204.8300, -200.6486, -196.1553, -198.5013, -201.3467],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0100, device='cuda:0', dtype=torch.float64)
tensor([-204.8836, -200.5969, -196.0137, -198.4033, -201.4276],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0112, device='cuda:0', dtype=torch.float64)
tensor([-204.9051, -200.5620, -195.9907, -198.4154, -201.4541],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0088, device='cuda:0', dtype=torch.float64)
tensor([-204.8880, -200.5447, -196.0890, -198.5311, -201.4585],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0094, device='cuda:0', dtype=torch.float64)
tensor([-204.8331, -200.5338, -196.2868, -198.7292, -201.4253],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0104, device='cuda:0', dtype=torch.float64)
tensor([-204.8361, -200.5036, -196.4403, -198.9261, -201.4496],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0103, device='cuda:0', dtype=torch.float64)
tensor([-204.7611, -200.4600, -196.5980, -199.0357, -201.4051],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0092, device='cuda:0', dtype=torch.float64)
tensor([-204.6104, -200.4162, -196.7717, -199.0770, -201.2987],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0106, device='cuda:0', dtype=torch.float64)
tensor([-204.4740, -200.3750, -196.8794, -199.0609, -201.1800],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0106, device='cuda:0', dtype=torch.float64)
tensor([-204.3510, -200.3551, -196.9864, -199.0608, -201.0661],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0089, device='cuda:0', dtype=torch.float64)
tensor([-204.2452, -200.3415, -197.1076, -199.0842, -200.9755],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0097, device='cuda:0', dtype=torch.float64)
tensor([-204.1348, -200.3312, -197.2547, -199.1372, -200.8716],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0096, device='cuda:0', dtype=torch.float64)
tensor([-204.0842, -200.3244, -197.3396, -199.1859, -200.8112],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0125, device='cuda:0', dtype=torch.float64)
tensor([-204.0080, -200.3276, -197.4760, -199.2758, -200.7288],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0071, device='cuda:0', dtype=torch.float64)
tensor([-203.9242, -200.3273, -197.5722, -199.3140, -200.6340],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0077, device='cuda:0', dtype=torch.float64)
tensor([-203.9169, -200.3321, -197.5646, -199.3136, -200.6173],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0091, device='cuda:0', dtype=torch.float64)
tensor([-203.9221, -200.3393, -197.5591, -199.3211, -200.6040],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0105, device='cuda:0', dtype=torch.float64)
tensor([-204.0042, -200.3457, -197.4506, -199.3048, -200.6797],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0103, device='cuda:0', dtype=torch.float64)
tensor([-204.1264, -200.3445, -197.1913, -199.1595, -200.8203],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0092, device='cuda:0', dtype=torch.float64)
tensor([-204.2239, -200.3354, -196.9279, -198.9852, -200.9332],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0095, device='cuda:0', dtype=torch.float64)
tensor([-204.3237, -200.3328, -196.6605, -198.8031, -201.0569],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0103, device='cuda:0', dtype=torch.float64)
tensor([-204.3597, -200.3440, -196.5572, -198.7470, -201.1065],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0084, device='cuda:0', dtype=torch.float64)
tensor([-204.4094, -200.3559, -196.4107, -198.6664, -201.1631],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0120, device='cuda:0', dtype=torch.float64)
tensor([-204.4356, -200.3565, -196.2906, -198.5811, -201.2037],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0088, device='cuda:0', dtype=torch.float64)
tensor([-204.4221, -200.3657, -196.2402, -198.5313, -201.2042],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0135, device='cuda:0', dtype=torch.float64)
tensor([-204.3608, -200.3841, -196.2409, -198.4893, -201.1495],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0140, device='cuda:0', dtype=torch.float64)
tensor([-204.2875, -200.3975, -196.2935, -198.4920, -201.0893],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0114, device='cuda:0', dtype=torch.float64)
tensor([-204.2225, -200.4008, -196.3009, -198.4716, -201.0335],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0119, device='cuda:0', dtype=torch.float64)
tensor([-204.1673, -200.4159, -196.3913, -198.5814, -200.9731],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0098, device='cuda:0', dtype=torch.float64)
tensor([-204.0710, -200.4262, -196.4940, -198.6466, -200.8725],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0097, device='cuda:0', dtype=torch.float64)
tensor([-203.9662, -200.4351, -196.6594, -198.7713, -200.7472],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0085, device='cuda:0', dtype=torch.float64)
tensor([-203.9333, -200.4355, -196.6734, -198.8069, -200.6937],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0110, device='cuda:0', dtype=torch.float64)
tensor([-203.9290, -200.4476, -196.6409, -198.8159, -200.6719],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0109, device='cuda:0', dtype=torch.float64)
tensor([-203.9659, -200.4493, -196.4970, -198.7431, -200.7059],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0107, device='cuda:0', dtype=torch.float64)
tensor([-203.9768, -200.4374, -196.3619, -198.6495, -200.7231],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0127, device='cuda:0', dtype=torch.float64)
tensor([-203.9424, -200.4423, -196.3088, -198.5806, -200.6898],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0083, device='cuda:0', dtype=torch.float64)
tensor([-203.9107, -200.4407, -196.2620, -198.5195, -200.6688],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0087, device='cuda:0', dtype=torch.float64)
tensor([-203.8855, -200.4310, -196.2592, -198.5150, -200.6425],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0108, device='cuda:0', dtype=torch.float64)
tensor([-203.8068, -200.4317, -196.4454, -198.6717, -200.5427],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0092, device='cuda:0', dtype=torch.float64)
tensor([-203.7235, -200.4096, -196.5957, -198.7758, -200.4412],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0093, device='cuda:0', dtype=torch.float64)
tensor([-203.6151, -200.3885, -196.7500, -198.8546, -200.3174],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0115, device='cuda:0', dtype=torch.float64)
tensor([-203.5382, -200.3600, -196.8995, -198.9590, -200.2252],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0120, device='cuda:0', dtype=torch.float64)
tensor([-203.5225, -200.3339, -197.0133, -199.0861, -200.1820],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0085, device='cuda:0', dtype=torch.float64)
tensor([-203.5068, -200.3047, -197.0288, -199.0968, -200.1621],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0082, device='cuda:0', dtype=torch.float64)
tensor([-203.4914, -200.2725, -196.9499, -198.9946, -200.1674],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0085, device='cuda:0', dtype=torch.float64)
tensor([-203.4806, -200.2311, -196.8682, -198.8949, -200.1700],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0114, device='cuda:0', dtype=torch.float64)
tensor([-203.5189, -200.1711, -196.7513, -198.8153, -200.2105],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0096, device='cuda:0', dtype=torch.float64)
tensor([-203.5874, -200.1118, -196.6331, -198.7489, -200.2924],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0100, device='cuda:0', dtype=torch.float64)
tensor([-203.6636, -200.0487, -196.4595, -198.6287, -200.3785],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0104, device='cuda:0', dtype=torch.float64)
tensor([-203.7119, -200.0043, -196.3436, -198.5259, -200.4322],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0092, device='cuda:0', dtype=torch.float64)
tensor([-203.7239, -199.9512, -196.2443, -198.3855, -200.4523],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0093, device='cuda:0', dtype=torch.float64)
tensor([-203.7423, -199.8834, -196.0869, -198.1882, -200.4795],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0089, device='cuda:0', dtype=torch.float64)
tensor([-203.7514, -199.8337, -196.0180, -198.0937, -200.4915],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0117, device='cuda:0', dtype=torch.float64)
tensor([-203.6913, -199.8097, -196.1116, -198.1129, -200.4181],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0122, device='cuda:0', dtype=torch.float64)
tensor([-203.6480, -199.8058, -196.3532, -198.3391, -200.3293],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0125, device='cuda:0', dtype=torch.float64)
tensor([-203.5578, -199.8050, -196.7004, -198.6273, -200.1775],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0101, device='cuda:0', dtype=torch.float64)
tensor([-203.4689, -199.8140, -197.0893, -198.9545, -200.0285],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0105, device='cuda:0', dtype=torch.float64)
tensor([-203.3783, -199.8306, -197.4285, -199.2292, -199.8561],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0078, device='cuda:0', dtype=torch.float64)
tensor([-203.3067, -199.8296, -197.7104, -199.4631, -199.6990],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0124, device='cuda:0', dtype=torch.float64)
tensor([-203.2482, -199.8349, -197.8858, -199.5929, -199.5612],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0072, device='cuda:0', dtype=torch.float64)
tensor([-203.2426, -199.8138, -197.9453, -199.6582, -199.4725],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0100, device='cuda:0', dtype=torch.float64)
tensor([-203.2273, -199.7811, -197.9669, -199.6733, -199.3784],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0093, device='cuda:0', dtype=torch.float64)
tensor([-203.2466, -199.7385, -197.8422, -199.5555, -199.3350],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0109, device='cuda:0', dtype=torch.float64)
tensor([-203.2878, -199.6803, -197.6129, -199.3494, -199.3254],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0085, device='cuda:0', dtype=torch.float64)
tensor([-203.3618, -199.6034, -197.3126, -199.0840, -199.3504],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0113, device='cuda:0', dtype=torch.float64)
tensor([-203.4362, -199.5407, -196.9924, -198.7990, -199.3807],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0099, device='cuda:0', dtype=torch.float64)
tensor([-203.5293, -199.4848, -196.6072, -198.4577, -199.4394],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0110, device='cuda:0', dtype=torch.float64)
tensor([-203.6655, -199.4337, -196.2401, -198.1801, -199.5426],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0105, device='cuda:0', dtype=torch.float64)
tensor([-203.8195, -199.4050, -195.9218, -197.9966, -199.6213],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0095, device='cuda:0', dtype=torch.float64)
tensor([-203.9178, -199.3794, -195.6974, -197.8587, -199.6469],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0088, device='cuda:0', dtype=torch.float64)
tensor([-204.0139, -199.3710, -195.5424, -197.8027, -199.6737],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0094, device='cuda:0', dtype=torch.float64)
tensor([-204.0478, -199.3675, -195.5790, -197.9157, -199.6388],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0121, device='cuda:0', dtype=torch.float64)
tensor([-204.0659, -199.3856, -195.7056, -198.1233, -199.5820],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0098, device='cuda:0', dtype=torch.float64)
tensor([-204.0232, -199.4111, -195.9268, -198.3841, -199.4544],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0107, device='cuda:0', dtype=torch.float64)
tensor([-203.9962, -199.4221, -196.1639, -198.6841, -199.3471],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0103, device='cuda:0', dtype=torch.float64)
tensor([-203.9697, -199.4258, -196.2971, -198.8534, -199.2613],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0115, device='cuda:0', dtype=torch.float64)
tensor([-203.9417, -199.4461, -196.5186, -199.1224, -199.1622],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0115, device='cuda:0', dtype=torch.float64)
tensor([-203.8560, -199.4656, -196.7513, -199.3259, -199.0337],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0093, device='cuda:0', dtype=torch.float64)
tensor([-203.7365, -199.4744, -196.9344, -199.4037, -198.9132],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0084, device='cuda:0', dtype=torch.float64)
tensor([-203.6475, -199.4704, -197.0212, -199.4162, -198.8322],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0119, device='cuda:0', dtype=torch.float64)
tensor([-203.6299, -199.4430, -196.9887, -199.3904, -198.8286],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0111, device='cuda:0', dtype=torch.float64)
tensor([-203.5753, -199.4049, -196.9316, -199.2930, -198.8132],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0088, device='cuda:0', dtype=torch.float64)
tensor([-203.4983, -199.3712, -196.8625, -199.1506, -198.7740],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0106, device='cuda:0', dtype=torch.float64)
tensor([-203.4480, -199.2993, -196.7188, -198.9534, -198.7639],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0096, device='cuda:0', dtype=torch.float64)
tensor([-203.3076, -199.2289, -196.5607, -198.6350, -198.6656],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0148, device='cuda:0', dtype=torch.float64)
tensor([-203.2213, -199.1931, -196.3324, -198.2849, -198.6321],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0101, device='cuda:0', dtype=torch.float64)
tensor([-203.1146, -199.1572, -196.2145, -198.0402, -198.5605],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0085, device='cuda:0', dtype=torch.float64)
tensor([-203.0304, -199.1097, -196.1093, -197.8483, -198.4824],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0091, device='cuda:0', dtype=torch.float64)
tensor([-202.9933, -199.0615, -195.9730, -197.6793, -198.4483],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0100, device='cuda:0', dtype=torch.float64)
tensor([-202.9777, -199.0005, -195.8229, -197.5203, -198.4228],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0107, device='cuda:0', dtype=torch.float64)
tensor([-202.9670, -198.9564, -195.7476, -197.4504, -198.4019],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0087, device='cuda:0', dtype=torch.float64)
tensor([-202.9493, -198.9412, -195.7365, -197.4517, -198.3895],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0118, device='cuda:0', dtype=torch.float64)
tensor([-202.9026, -198.9773, -195.8110, -197.5244, -198.3576],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0081, device='cuda:0', dtype=torch.float64)
tensor([-202.8828, -199.0101, -195.8608, -197.6003, -198.3661],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0102, device='cuda:0', dtype=torch.float64)
tensor([-202.8921, -199.0385, -195.9306, -197.7412, -198.3806],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0101, device='cuda:0', dtype=torch.float64)
tensor([-202.9067, -199.0848, -196.0831, -198.0013, -198.3736],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0094, device='cuda:0', dtype=torch.float64)
tensor([-202.9632, -199.1430, -196.2786, -198.3606, -198.3808],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0081, device='cuda:0', dtype=torch.float64)
tensor([-203.0477, -199.1890, -196.4053, -198.6651, -198.4124],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0094, device='cuda:0', dtype=torch.float64)
tensor([-203.1677, -199.2110, -196.3934, -198.8370, -198.5032],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0084, device='cuda:0', dtype=torch.float64)
tensor([-203.2869, -199.2157, -196.3526, -198.9655, -198.6042],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0125, device='cuda:0', dtype=torch.float64)
tensor([-203.4101, -199.2296, -196.2301, -198.9876, -198.7286],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0100, device='cuda:0', dtype=torch.float64)
tensor([-203.5448, -199.2307, -196.0938, -199.0186, -198.8540],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0096, device='cuda:0', dtype=torch.float64)
tensor([-203.6171, -199.2343, -196.0475, -199.0565, -198.9234],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0127, device='cuda:0', dtype=torch.float64)
tensor([-203.6692, -199.2300, -195.9067, -198.9477, -199.0105],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0106, device='cuda:0', dtype=torch.float64)
tensor([-203.6667, -199.2213, -195.8099, -198.8125, -199.0621],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0111, device='cuda:0', dtype=torch.float64)
tensor([-203.6733, -199.2229, -195.8300, -198.8395, -199.1077],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0098, device='cuda:0', dtype=torch.float64)
tensor([-203.6284, -199.2317, -195.9342, -198.9192, -199.0961],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0100, device='cuda:0', dtype=torch.float64)
tensor([-203.4855, -199.2477, -196.1794, -199.0460, -199.0059],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0095, device='cuda:0', dtype=torch.float64)
tensor([-203.3606, -199.2573, -196.3765, -199.1389, -198.9204],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0104, device='cuda:0', dtype=torch.float64)
tensor([-203.2347, -199.2588, -196.5966, -199.2549, -198.8396],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0073, device='cuda:0', dtype=torch.float64)
tensor([-203.1332, -199.2641, -196.7857, -199.3700, -198.7501],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0095, device='cuda:0', dtype=torch.float64)
tensor([-202.9764, -199.2566, -196.9482, -199.3857, -198.6385],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0152, device='cuda:0', dtype=torch.float64)
tensor([-202.7865, -199.2562, -197.1915, -199.4529, -198.4880],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0104, device='cuda:0', dtype=torch.float64)
tensor([-202.5996, -199.2584, -197.4410, -199.5379, -198.3463],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0102, device='cuda:0', dtype=torch.float64)
tensor([-202.4146, -199.2558, -197.6278, -199.5441, -198.2270],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0106, device='cuda:0', dtype=torch.float64)
tensor([-202.2893, -199.2535, -197.6803, -199.4661, -198.1582],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0106, device='cuda:0', dtype=torch.float64)
tensor([-202.1980, -199.2160, -197.6960, -199.4015, -198.1072],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0087, device='cuda:0', dtype=torch.float64)
tensor([-202.1348, -199.1715, -197.6586, -199.3191, -198.0761],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0124, device='cuda:0', dtype=torch.float64)
tensor([-202.0899, -199.1257, -197.5903, -199.2234, -198.0490],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0091, device='cuda:0', dtype=torch.float64)
tensor([-202.0925, -199.0635, -197.4539, -199.0970, -198.0664],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0080, device='cuda:0', dtype=torch.float64)
tensor([-202.0746, -199.0012, -197.2917, -198.9076, -198.0730],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0079, device='cuda:0', dtype=torch.float64)
tensor([-202.1003, -198.9344, -197.0570, -198.6822, -198.1194],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0084, device='cuda:0', dtype=torch.float64)
tensor([-202.1338, -198.8977, -196.8165, -198.4544, -198.1912],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0136, device='cuda:0', dtype=torch.float64)
tensor([-202.1812, -198.8644, -196.5383, -198.2067, -198.2706],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0092, device='cuda:0', dtype=torch.float64)
tensor([-202.2428, -198.8507, -196.2957, -198.0161, -198.3578],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0083, device='cuda:0', dtype=torch.float64)
tensor([-202.3318, -198.8460, -196.1151, -197.9414, -198.4497],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0083, device='cuda:0', dtype=torch.float64)
tensor([-202.4393, -198.8435, -195.9008, -197.8381, -198.5428],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0088, device='cuda:0', dtype=torch.float64)
tensor([-202.5524, -198.8487, -195.6634, -197.7116, -198.6417],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0116, device='cuda:0', dtype=torch.float64)
tensor([-202.6824, -198.8615, -195.3514, -197.4873, -198.7746],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0097, device='cuda:0', dtype=torch.float64)
tensor([-202.7963, -198.8960, -195.1774, -197.4278, -198.8810],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0098, device='cuda:0', dtype=torch.float64)
tensor([-202.8991, -198.9259, -195.0591, -197.4189, -198.9667],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0108, device='cuda:0', dtype=torch.float64)
tensor([-202.9748, -198.9709, -195.1043, -197.5958, -199.0277],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0111, device='cuda:0', dtype=torch.float64)
tensor([-202.9566, -199.0267, -195.3746, -197.9366, -198.9931],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0111, device='cuda:0', dtype=torch.float64)
tensor([-202.9911, -199.0771, -195.5258, -198.1877, -198.9972],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0120, device='cuda:0', dtype=torch.float64)
tensor([-202.9760, -199.1165, -195.7670, -198.4932, -198.9370],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0106, device='cuda:0', dtype=torch.float64)
tensor([-202.9788, -199.1255, -195.9778, -198.7698, -198.8837],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0098, device='cuda:0', dtype=torch.float64)
tensor([-202.9353, -199.1404, -196.2493, -199.0677, -198.8049],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0126, device='cuda:0', dtype=torch.float64)
tensor([-202.8921, -199.1604, -196.5119, -199.3538, -198.7339],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0096, device='cuda:0', dtype=torch.float64)
tensor([-202.8325, -199.1912, -196.7582, -199.5903, -198.6509],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0106, device='cuda:0', dtype=torch.float64)
tensor([-202.7839, -199.2030, -196.9308, -199.7466, -198.5822],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0103, device='cuda:0', dtype=torch.float64)
tensor([-202.7151, -199.2084, -197.0372, -199.7985, -198.4898],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0081, device='cuda:0', dtype=torch.float64)
tensor([-202.6359, -199.2192, -197.1464, -199.8356, -198.3765],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0098, device='cuda:0', dtype=torch.float64)
tensor([-202.5413, -199.2280, -197.1670, -199.7354, -198.2668],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0106, device='cuda:0', dtype=torch.float64)
tensor([-202.4808, -199.2261, -197.0914, -199.5637, -198.2212],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0090, device='cuda:0', dtype=torch.float64)
tensor([-202.4558, -199.2184, -196.9858, -199.3916, -198.2234],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0123, device='cuda:0', dtype=torch.float64)
tensor([-202.4334, -199.2022, -196.8428, -199.1630, -198.2355],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0098, device='cuda:0', dtype=torch.float64)
tensor([-202.4354, -199.1734, -196.6291, -198.8961, -198.2684],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0091, device='cuda:0', dtype=torch.float64)
tensor([-202.4580, -199.1479, -196.4284, -198.6848, -198.3008],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0091, device='cuda:0', dtype=torch.float64)
tensor([-202.5159, -199.1313, -196.2272, -198.5000, -198.3836],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0103, device='cuda:0', dtype=torch.float64)
tensor([-202.6166, -199.1081, -195.9956, -198.3482, -198.4805],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0102, device='cuda:0', dtype=torch.float64)
tensor([-202.6613, -199.0923, -195.8305, -198.2062, -198.5104],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0097, device='cuda:0', dtype=torch.float64)
tensor([-202.7407, -199.0750, -195.6744, -198.1341, -198.5640],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0104, device='cuda:0', dtype=torch.float64)
tensor([-202.8642, -199.0428, -195.4173, -197.9777, -198.6729],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0098, device='cuda:0', dtype=torch.float64)
tensor([-202.9687, -199.0240, -195.2143, -197.8496, -198.7699],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0083, device='cuda:0', dtype=torch.float64)
tensor([-203.1103, -198.9773, -194.9103, -197.6372, -198.8992],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0086, device='cuda:0', dtype=torch.float64)
tensor([-203.2593, -198.9061, -194.5762, -197.3775, -199.0137],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0109, device='cuda:0', dtype=torch.float64)
tensor([-203.2949, -198.8492, -194.5272, -197.3464, -199.0129],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0085, device='cuda:0', dtype=torch.float64)
tensor([-203.3039, -198.7984, -194.5751, -197.4137, -199.0016],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0118, device='cuda:0', dtype=torch.float64)
tensor([-203.2653, -198.7573, -194.8172, -197.6687, -198.9571],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0122, device='cuda:0', dtype=torch.float64)
tensor([-203.1585, -198.7205, -195.1929, -198.0229, -198.8265],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0111, device='cuda:0', dtype=torch.float64)
tensor([-203.0579, -198.6972, -195.5823, -198.3845, -198.7048],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0097, device='cuda:0', dtype=torch.float64)
tensor([-202.9609, -198.6925, -195.9874, -198.7527, -198.5945],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0088, device='cuda:0', dtype=torch.float64)
tensor([-202.9200, -198.6902, -196.2943, -199.0604, -198.5492],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0096, device='cuda:0', dtype=torch.float64)
tensor([-202.8710, -198.6762, -196.4786, -199.1958, -198.5326],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0081, device='cuda:0', dtype=torch.float64)
tensor([-202.8073, -198.6418, -196.5762, -199.2146, -198.5218],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0095, device='cuda:0', dtype=torch.float64)
tensor([-202.7463, -198.5982, -196.6038, -199.1674, -198.5246],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0088, device='cuda:0', dtype=torch.float64)
tensor([-202.6830, -198.5673, -196.6264, -199.1243, -198.5046],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0120, device='cuda:0', dtype=torch.float64)
tensor([-202.6269, -198.5507, -196.6361, -199.0805, -198.4813],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0123, device='cuda:0', dtype=torch.float64)
tensor([-202.5505, -198.5562, -196.6775, -199.0438, -198.4157],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0124, device='cuda:0', dtype=torch.float64)
tensor([-202.4117, -198.5586, -196.7397, -198.9580, -198.2963],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0094, device='cuda:0', dtype=torch.float64)
tensor([-202.2804, -198.5473, -196.7074, -198.7633, -198.2330],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0106, device='cuda:0', dtype=torch.float64)
tensor([-202.1826, -198.5126, -196.6299, -198.5646, -198.2102],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0094, device='cuda:0', dtype=torch.float64)
tensor([-202.0922, -198.4948, -196.6267, -198.4658, -198.1651],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0102, device='cuda:0', dtype=torch.float64)
tensor([-202.0358, -198.4697, -196.5966, -198.3931, -198.1570],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0092, device='cuda:0', dtype=torch.float64)
tensor([-201.9895, -198.4719, -196.5740, -198.3393, -198.1769],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0095, device='cuda:0', dtype=torch.float64)
tensor([-201.9979, -198.4450, -196.5193, -198.3220, -198.2316],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0099, device='cuda:0', dtype=torch.float64)
tensor([-201.9852, -198.4265, -196.5024, -198.3401, -198.2714],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0108, device='cuda:0', dtype=torch.float64)
tensor([-202.0265, -198.3951, -196.3702, -198.2923, -198.3568],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0108, device='cuda:0', dtype=torch.float64)
tensor([-202.0796, -198.3768, -196.2288, -198.2370, -198.4505],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0094, device='cuda:0', dtype=torch.float64)
tensor([-202.0739, -198.3649, -196.1488, -198.1659, -198.4904],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0103, device='cuda:0', dtype=torch.float64)
tensor([-202.0699, -198.3796, -196.1688, -198.2196, -198.5092],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0107, device='cuda:0', dtype=torch.float64)
tensor([-202.0699, -198.4033, -196.2146, -198.3132, -198.5267],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0078, device='cuda:0', dtype=torch.float64)
tensor([-202.1080, -198.4458, -196.2824, -198.4743, -198.5660],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0103, device='cuda:0', dtype=torch.float64)
tensor([-202.1267, -198.4836, -196.2913, -198.5331, -198.5832],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0086, device='cuda:0', dtype=torch.float64)
tensor([-202.1542, -198.5279, -196.2682, -198.5573, -198.6306],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0113, device='cuda:0', dtype=torch.float64)
tensor([-202.1475, -198.5579, -196.2253, -198.5246, -198.6304],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0103, device='cuda:0', dtype=torch.float64)
tensor([-202.1423, -198.5730, -196.1013, -198.3888, -198.6462],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0114, device='cuda:0', dtype=torch.float64)
tensor([-202.1631, -198.5775, -195.8991, -198.1936, -198.6565],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0107, device='cuda:0', dtype=torch.float64)
tensor([-202.1797, -198.5777, -195.7729, -198.0851, -198.6435],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0098, device='cuda:0', dtype=torch.float64)
tensor([-202.1163, -198.5860, -195.7459, -198.0006, -198.5601],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0101, device='cuda:0', dtype=torch.float64)
tensor([-202.0327, -198.5840, -195.6748, -197.8425, -198.4813],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0108, device='cuda:0', dtype=torch.float64)
tensor([-201.8992, -198.5813, -195.7230, -197.7535, -198.3498],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0105, device='cuda:0', dtype=torch.float64)
tensor([-201.8102, -198.5738, -195.8069, -197.7618, -198.2398],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0117, device='cuda:0', dtype=torch.float64)
tensor([-201.7620, -198.5884, -195.9662, -197.9034, -198.1465],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0097, device='cuda:0', dtype=torch.float64)
tensor([-201.7297, -198.5999, -196.0675, -198.0090, -198.0616],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0105, device='cuda:0', dtype=torch.float64)
tensor([-201.7121, -198.6161, -196.1826, -198.1575, -197.9902],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0088, device='cuda:0', dtype=torch.float64)
tensor([-201.7131, -198.6178, -196.2847, -198.3202, -197.9177],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0123, device='cuda:0', dtype=torch.float64)
tensor([-201.7033, -198.6275, -196.4973, -198.5807, -197.8107],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0117, device='cuda:0', dtype=torch.float64)
tensor([-201.6698, -198.6238, -196.7250, -198.8248, -197.7008],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0119, device='cuda:0', dtype=torch.float64)
tensor([-201.6662, -198.6018, -196.8367, -198.9763, -197.6555],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0096, device='cuda:0', dtype=torch.float64)
tensor([-201.6852, -198.5934, -196.9826, -199.2056, -197.6329],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0111, device='cuda:0', dtype=torch.float64)
tensor([-201.6629, -198.5650, -197.0392, -199.2617, -197.6144],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0105, device='cuda:0', dtype=torch.float64)
tensor([-201.6387, -198.5295, -196.9719, -199.1570, -197.5985],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0118, device='cuda:0', dtype=torch.float64)
tensor([-201.6216, -198.4896, -196.7923, -198.9224, -197.6240],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0103, device='cuda:0', dtype=torch.float64)
tensor([-201.6397, -198.4572, -196.5380, -198.6316, -197.6836],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0089, device='cuda:0', dtype=torch.float64)
tensor([-201.6507, -198.4178, -196.2860, -198.3264, -197.7206],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0082, device='cuda:0', dtype=torch.float64)
tensor([-201.6316, -198.3830, -196.0671, -198.0216, -197.7256],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0101, device='cuda:0', dtype=torch.float64)
tensor([-201.5986, -198.3563, -195.8068, -197.6374, -197.7399],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0086, device='cuda:0', dtype=torch.float64)
tensor([-201.5568, -198.3400, -195.6179, -197.3398, -197.7512],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0100, device='cuda:0', dtype=torch.float64)
tensor([-201.5112, -198.3095, -195.4919, -197.1076, -197.7524],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0111, device='cuda:0', dtype=torch.float64)
tensor([-201.4679, -198.2961, -195.3972, -196.9097, -197.7660],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0112, device='cuda:0', dtype=torch.float64)
tensor([-201.4181, -198.3000, -195.4052, -196.8525, -197.7541],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0119, device='cuda:0', dtype=torch.float64)
tensor([-201.4138, -198.2961, -195.3792, -196.8387, -197.7822],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0110, device='cuda:0', dtype=torch.float64)
tensor([-201.4644, -198.3210, -195.4016, -196.9725, -197.8429],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0093, device='cuda:0', dtype=torch.float64)
tensor([-201.5399, -198.3615, -195.5530, -197.3021, -197.9033],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0106, device='cuda:0', dtype=torch.float64)
tensor([-201.6279, -198.3983, -195.7644, -197.7195, -197.9683],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0088, device='cuda:0', dtype=torch.float64)
tensor([-201.6797, -198.4275, -195.9816, -198.0943, -198.0097],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0096, device='cuda:0', dtype=torch.float64)
tensor([-201.7371, -198.4534, -196.1410, -198.4065, -198.0417],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0114, device='cuda:0', dtype=torch.float64)
tensor([-201.7978, -198.4948, -196.3183, -198.7269, -198.0720],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0091, device='cuda:0', dtype=torch.float64)
tensor([-201.8385, -198.5430, -196.5862, -199.1368, -198.0637],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0130, device='cuda:0', dtype=torch.float64)
tensor([-201.8584, -198.6014, -196.8511, -199.4968, -198.0403],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0085, device='cuda:0', dtype=torch.float64)
tensor([-201.9262, -198.6485, -197.0192, -199.8031, -198.0609],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0077, device='cuda:0', dtype=torch.float64)
tensor([-201.9860, -198.6891, -197.1350, -200.0421, -198.0885],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0089, device='cuda:0', dtype=torch.float64)
tensor([-202.0519, -198.7137, -197.1276, -200.1518, -198.1351],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0094, device='cuda:0', dtype=torch.float64)
tensor([-202.1419, -198.7301, -197.0317, -200.1928, -198.2125],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0091, device='cuda:0', dtype=torch.float64)
tensor([-202.2024, -198.7273, -196.9181, -200.1669, -198.2876],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0088, device='cuda:0', dtype=torch.float64)
tensor([-202.2396, -198.7381, -196.8815, -200.1891, -198.3158],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0094, device='cuda:0', dtype=torch.float64)
tensor([-202.2559, -198.7387, -196.7750, -200.1052, -198.3397],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0080, device='cuda:0', dtype=torch.float64)
tensor([-202.2202, -198.7294, -196.6709, -199.9469, -198.3362],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0093, device='cuda:0', dtype=torch.float64)
tensor([-202.1654, -198.7197, -196.5309, -199.7182, -198.3358],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0105, device='cuda:0', dtype=torch.float64)
tensor([-202.1166, -198.7316, -196.3366, -199.4397, -198.3496],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0088, device='cuda:0', dtype=torch.float64)
tensor([-202.0829, -198.7234, -196.0577, -199.0891, -198.3714],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0127, device='cuda:0', dtype=torch.float64)
tensor([-202.0405, -198.7162, -195.8658, -198.8298, -198.3650],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0103, device='cuda:0', dtype=torch.float64)
tensor([-202.0134, -198.7043, -195.7229, -198.6433, -198.3555],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0118, device='cuda:0', dtype=torch.float64)
tensor([-201.9563, -198.6990, -195.6160, -198.4581, -198.3125],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0076, device='cuda:0', dtype=torch.float64)
tensor([-201.9001, -198.6767, -195.4970, -198.2514, -198.2749],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0107, device='cuda:0', dtype=torch.float64)
tensor([-201.8230, -198.6584, -195.4862, -198.1471, -198.2025],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0100, device='cuda:0', dtype=torch.float64)
tensor([-201.7253, -198.6315, -195.4072, -197.9159, -198.1397],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0080, device='cuda:0', dtype=torch.float64)
tensor([-201.5594, -198.6226, -195.5317, -197.8529, -198.0043],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0110, device='cuda:0', dtype=torch.float64)
tensor([-201.4191, -198.6321, -195.7090, -197.8757, -197.8669],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0109, device='cuda:0', dtype=torch.float64)
tensor([-201.2777, -198.6482, -195.8785, -197.8813, -197.7355],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0092, device='cuda:0', dtype=torch.float64)
tensor([-201.2020, -198.6672, -196.0721, -198.0116, -197.6429],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0095, device='cuda:0', dtype=torch.float64)
tensor([-201.1637, -198.6846, -196.3271, -198.2627, -197.5669],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0091, device='cuda:0', dtype=torch.float64)
tensor([-201.1433, -198.6956, -196.5633, -198.5067, -197.5206],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0110, device='cuda:0', dtype=torch.float64)
tensor([-201.1269, -198.7159, -196.8423, -198.7992, -197.4924],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0083, device='cuda:0', dtype=torch.float64)
tensor([-201.1441, -198.7409, -197.0388, -199.0348, -197.4905],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0093, device='cuda:0', dtype=torch.float64)
tensor([-201.1602, -198.7316, -197.1677, -199.1945, -197.5125],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0096, device='cuda:0', dtype=torch.float64)
tensor([-201.1821, -198.7187, -197.1963, -199.2544, -197.5394],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0091, device='cuda:0', dtype=torch.float64)
tensor([-201.2239, -198.6933, -197.1435, -199.2569, -197.5870],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0077, device='cuda:0', dtype=torch.float64)
tensor([-201.2521, -198.6663, -197.0437, -199.1803, -197.6380],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0128, device='cuda:0', dtype=torch.float64)
tensor([-201.2978, -198.6278, -196.8016, -198.9411, -197.7502],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0090, device='cuda:0', dtype=torch.float64)
tensor([-201.3454, -198.5848, -196.4934, -198.6340, -197.8674],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0102, device='cuda:0', dtype=torch.float64)
tensor([-201.3769, -198.5409, -196.2075, -198.3315, -197.9547],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0108, device='cuda:0', dtype=torch.float64)
tensor([-201.4494, -198.4848, -195.8867, -198.0288, -198.0733],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0095, device='cuda:0', dtype=torch.float64)
tensor([-201.5422, -198.4280, -195.5732, -197.7619, -198.2055],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0095, device='cuda:0', dtype=torch.float64)
tensor([-201.5749, -198.3950, -195.3647, -197.5368, -198.2808],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0120, device='cuda:0', dtype=torch.float64)
tensor([-201.5971, -198.3853, -195.3488, -197.5440, -198.3271],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0105, device='cuda:0', dtype=torch.float64)
tensor([-201.6229, -198.3841, -195.4090, -197.6693, -198.3610],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0122, device='cuda:0', dtype=torch.float64)
tensor([-201.6344, -198.3944, -195.5941, -197.9127, -198.3852],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0100, device='cuda:0', dtype=torch.float64)
tensor([-201.6404, -198.3952, -195.7382, -198.1026, -198.3957],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0101, device='cuda:0', dtype=torch.float64)
tensor([-201.6566, -198.3881, -195.9759, -198.4169, -198.4009],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0087, device='cuda:0', dtype=torch.float64)
tensor([-201.6303, -198.3888, -196.2563, -198.7280, -198.3614],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0091, device='cuda:0', dtype=torch.float64)
tensor([-201.5646, -198.3714, -196.5450, -198.9966, -198.2729],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0100, device='cuda:0', dtype=torch.float64)
tensor([-201.4990, -198.3715, -196.8840, -199.3100, -198.1714],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0122, device='cuda:0', dtype=torch.float64)
tensor([-201.3960, -198.3956, -197.1884, -199.5328, -198.0464],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0085, device='cuda:0', dtype=torch.float64)
tensor([-201.3158, -198.4250, -197.4283, -199.7098, -197.9497],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0099, device='cuda:0', dtype=torch.float64)
tensor([-201.2195, -198.4547, -197.5870, -199.7615, -197.8607],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0082, device='cuda:0', dtype=torch.float64)
tensor([-201.1439, -198.4654, -197.6424, -199.7279, -197.8034],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0100, device='cuda:0', dtype=torch.float64)
tensor([-201.0645, -198.4714, -197.5926, -199.5691, -197.7640],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0103, device='cuda:0', dtype=torch.float64)
tensor([-201.0546, -198.4571, -197.3846, -199.3261, -197.7978],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0089, device='cuda:0', dtype=torch.float64)
tensor([-201.0668, -198.4344, -197.1001, -199.0181, -197.8524],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0097, device='cuda:0', dtype=torch.float64)
tensor([-201.0966, -198.4354, -196.8901, -198.8305, -197.8863],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0086, device='cuda:0', dtype=torch.float64)
tensor([-201.1812, -198.4391, -196.6496, -198.6853, -197.9639],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0119, device='cuda:0', dtype=torch.float64)
tensor([-201.2294, -198.4440, -196.4073, -198.4870, -198.0189],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0083, device='cuda:0', dtype=torch.float64)
tensor([-201.2567, -198.4459, -196.1200, -198.2012, -198.0655],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0099, device='cuda:0', dtype=torch.float64)
tensor([-201.2440, -198.4416, -195.8576, -197.8725, -198.0798],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0109, device='cuda:0', dtype=torch.float64)
tensor([-201.2345, -198.4174, -195.6771, -197.6303, -198.0675],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0088, device='cuda:0', dtype=torch.float64)
tensor([-201.2431, -198.4024, -195.5717, -197.5102, -198.0623],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0112, device='cuda:0', dtype=torch.float64)
tensor([-201.2073, -198.3980, -195.6485, -197.5627, -197.9983],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0098, device='cuda:0', dtype=torch.float64)
tensor([-201.1394, -198.3994, -195.7503, -197.5994, -197.9090],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0078, device='cuda:0', dtype=torch.float64)
tensor([-201.0733, -198.4075, -195.8757, -197.6805, -197.8330],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0096, device='cuda:0', dtype=torch.float64)
tensor([-201.0440, -198.4203, -196.0546, -197.8768, -197.7836],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0079, device='cuda:0', dtype=torch.float64)
tensor([-201.0740, -198.4497, -196.1846, -198.0931, -197.7867],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0085, device='cuda:0', dtype=torch.float64)
tensor([-201.0684, -198.4671, -196.3219, -198.2601, -197.7594],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0098, device='cuda:0', dtype=torch.float64)
tensor([-201.0537, -198.4925, -196.4419, -198.3960, -197.7239],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0092, device='cuda:0', dtype=torch.float64)
tensor([-201.0525, -198.4997, -196.5665, -198.5509, -197.7031],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0090, device='cuda:0', dtype=torch.float64)
tensor([-201.0182, -198.4876, -196.6314, -198.5893, -197.6647],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0097, device='cuda:0', dtype=torch.float64)
tensor([-200.9676, -198.4675, -196.6805, -198.5814, -197.6213],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0071, device='cuda:0', dtype=torch.float64)
tensor([-200.9529, -198.4389, -196.7004, -198.5921, -197.5996],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0090, device='cuda:0', dtype=torch.float64)
tensor([-200.9824, -198.4045, -196.6520, -198.5858, -197.6180],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0082, device='cuda:0', dtype=torch.float64)
tensor([-200.9935, -198.3821, -196.6213, -198.5780, -197.6184],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0107, device='cuda:0', dtype=torch.float64)
tensor([-201.0467, -198.3412, -196.5547, -198.5965, -197.6409],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0110, device='cuda:0', dtype=torch.float64)
tensor([-201.0684, -198.3249, -196.5303, -198.6218, -197.6451],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0072, device='cuda:0', dtype=torch.float64)
tensor([-201.0945, -198.2982, -196.4561, -198.5967, -197.6659],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0130, device='cuda:0', dtype=torch.float64)
tensor([-201.1319, -198.2821, -196.4159, -198.6287, -197.6916],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0096, device='cuda:0', dtype=torch.float64)
tensor([-201.1322, -198.2584, -196.3904, -198.6296, -197.6885],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0088, device='cuda:0', dtype=torch.float64)
tensor([-201.1181, -198.2194, -196.3898, -198.6392, -197.6770],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0073, device='cuda:0', dtype=torch.float64)
tensor([-201.1226, -198.1881, -196.3233, -198.5954, -197.6883],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0115, device='cuda:0', dtype=torch.float64)
tensor([-201.1752, -198.1354, -196.0711, -198.3880, -197.7751],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0091, device='cuda:0', dtype=torch.float64)
tensor([-201.2297, -198.0735, -195.8166, -198.1753, -197.8573],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0087, device='cuda:0', dtype=torch.float64)
tensor([-201.2650, -198.0227, -195.5791, -197.9551, -197.9198],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0080, device='cuda:0', dtype=torch.float64)
tensor([-201.2744, -197.9791, -195.3256, -197.6735, -197.9555],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0108, device='cuda:0', dtype=torch.float64)
tensor([-201.2425, -197.9639, -195.2042, -197.4994, -197.9474],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0092, device='cuda:0', dtype=torch.float64)
tensor([-201.1978, -197.9506, -195.1550, -197.3926, -197.9343],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0108, device='cuda:0', dtype=torch.float64)
tensor([-201.1970, -197.9355, -195.1860, -197.4549, -197.9338],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0104, device='cuda:0', dtype=torch.float64)
tensor([-201.2457, -197.9447, -195.1390, -197.4783, -197.9744],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0096, device='cuda:0', dtype=torch.float64)
tensor([-201.2405, -197.9632, -195.2548, -197.6383, -197.9536],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0116, device='cuda:0', dtype=torch.float64)
tensor([-201.2612, -198.0020, -195.3529, -197.8310, -197.9742],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0090, device='cuda:0', dtype=torch.float64)
tensor([-201.2851, -198.0462, -195.4445, -198.0147, -197.9801],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0086, device='cuda:0', dtype=torch.float64)
tensor([-201.3445, -198.0839, -195.5525, -198.2706, -198.0008],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0086, device='cuda:0', dtype=torch.float64)
tensor([-201.3993, -198.1206, -195.6539, -198.4978, -198.0183],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0096, device='cuda:0', dtype=torch.float64)
tensor([-201.4664, -198.1544, -195.6720, -198.6431, -198.0543],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0096, device='cuda:0', dtype=torch.float64)
tensor([-201.5577, -198.1837, -195.5897, -198.7083, -198.1191],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0105, device='cuda:0', dtype=torch.float64)
tensor([-201.6351, -198.2067, -195.5260, -198.7890, -198.1596],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0094, device='cuda:0', dtype=torch.float64)
tensor([-201.6819, -198.2323, -195.4228, -198.7684, -198.1919],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0107, device='cuda:0', dtype=torch.float64)
tensor([-201.6723, -198.2362, -195.3789, -198.7483, -198.1915],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0108, device='cuda:0', dtype=torch.float64)
tensor([-201.6233, -198.2262, -195.4138, -198.7734, -198.1683],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0161, device='cuda:0', dtype=torch.float64)
tensor([-201.5720, -198.2182, -195.4378, -198.7644, -198.1673],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0099, device='cuda:0', dtype=torch.float64)
tensor([-201.4127, -198.2091, -195.5467, -198.7116, -198.0836],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0112, device='cuda:0', dtype=torch.float64)
tensor([-201.2037, -198.2219, -195.7201, -198.6446, -197.9514],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0102, device='cuda:0', dtype=torch.float64)
tensor([-201.0069, -198.2403, -195.9165, -198.6012, -197.8266],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0092, device='cuda:0', dtype=torch.float64)
tensor([-200.8244, -198.2427, -195.9763, -198.4123, -197.7278],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0114, device='cuda:0', dtype=torch.float64)
tensor([-200.6642, -198.2610, -196.0909, -198.3172, -197.6313],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0102, device='cuda:0', dtype=torch.float64)
tensor([-200.5457, -198.2915, -196.2252, -198.2941, -197.5620],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0086, device='cuda:0', dtype=torch.float64)
tensor([-200.4607, -198.3112, -196.3261, -198.2798, -197.5263],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0101, device='cuda:0', dtype=torch.float64)
tensor([-200.3697, -198.3339, -196.4897, -198.3366, -197.4709],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0083, device='cuda:0', dtype=torch.float64)
tensor([-200.2815, -198.3704, -196.6614, -198.4103, -197.4043],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0092, device='cuda:0', dtype=torch.float64)
tensor([-200.2323, -198.3943, -196.8301, -198.5315, -197.3653],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0083, device='cuda:0', dtype=torch.float64)
tensor([-200.1895, -198.4024, -196.8928, -198.5391, -197.3392],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0113, device='cuda:0', dtype=torch.float64)
tensor([-200.1392, -198.4148, -196.9239, -198.4990, -197.3262],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0090, device='cuda:0', dtype=torch.float64)
tensor([-200.1281, -198.3967, -196.8827, -198.4454, -197.3573],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0117, device='cuda:0', dtype=torch.float64)
tensor([-200.1271, -198.3649, -196.7401, -198.2976, -197.4001],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0138, device='cuda:0', dtype=torch.float64)
tensor([-200.1089, -198.3325, -196.6514, -198.1834, -197.4100],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0095, device='cuda:0', dtype=torch.float64)
tensor([-200.1021, -198.3043, -196.6126, -198.1477, -197.4294],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0087, device='cuda:0', dtype=torch.float64)
tensor([-200.1600, -198.2647, -196.5119, -198.1305, -197.5089],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0087, device='cuda:0', dtype=torch.float64)
tensor([-200.2200, -198.2170, -196.4069, -198.1093, -197.5891],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0095, device='cuda:0', dtype=torch.float64)
tensor([-200.2830, -198.1727, -196.3232, -198.1188, -197.6826],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0083, device='cuda:0', dtype=torch.float64)
tensor([-200.3288, -198.1325, -196.3376, -198.2181, -197.7427],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0119, device='cuda:0', dtype=torch.float64)
tensor([-200.3852, -198.0921, -196.3096, -198.2596, -197.8138],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0095, device='cuda:0', dtype=torch.float64)
tensor([-200.4513, -198.0542, -196.3080, -198.3472, -197.8912],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0099, device='cuda:0', dtype=torch.float64)
tensor([-200.5125, -198.0261, -196.3718, -198.4965, -197.9451],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0099, device='cuda:0', dtype=torch.float64)
tensor([-200.5540, -197.9828, -196.3822, -198.5540, -197.9749],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0103, device='cuda:0', dtype=torch.float64)
tensor([-200.6093, -197.9345, -196.3587, -198.5955, -198.0102],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0110, device='cuda:0', dtype=torch.float64)
tensor([-200.6355, -197.9142, -196.4475, -198.7275, -197.9980],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0093, device='cuda:0', dtype=torch.float64)
tensor([-200.6683, -197.8900, -196.4981, -198.8472, -197.9779],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0090, device='cuda:0', dtype=torch.float64)
tensor([-200.6905, -197.8351, -196.5486, -198.9450, -197.9465],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0093, device='cuda:0', dtype=torch.float64)
tensor([-200.7434, -197.7834, -196.4798, -198.9719, -197.9515],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0089, device='cuda:0', dtype=torch.float64)
tensor([-200.8059, -197.7110, -196.3086, -198.9005, -197.9733],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0097, device='cuda:0', dtype=torch.float64)
tensor([-200.8319, -197.6602, -196.1604, -198.7933, -197.9694],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0084, device='cuda:0', dtype=torch.float64)
tensor([-200.8589, -197.6103, -196.0307, -198.7080, -197.9640],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0082, device='cuda:0', dtype=torch.float64)
tensor([-200.8429, -197.5734, -195.9310, -198.5962, -197.9112],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0116, device='cuda:0', dtype=torch.float64)
tensor([-200.8041, -197.5543, -195.8025, -198.4112, -197.8487],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0099, device='cuda:0', dtype=torch.float64)
tensor([-200.7135, -197.5604, -195.7885, -198.2816, -197.7303],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0119, device='cuda:0', dtype=torch.float64)
tensor([-200.6432, -197.5636, -195.7321, -198.1243, -197.6445],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0097, device='cuda:0', dtype=torch.float64)
tensor([-200.5776, -197.5677, -195.6364, -197.9261, -197.5783],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0074, device='cuda:0', dtype=torch.float64)
tensor([-200.5461, -197.5686, -195.5461, -197.7767, -197.5161],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0126, device='cuda:0', dtype=torch.float64)
tensor([-200.5556, -197.5760, -195.4781, -197.6984, -197.4965],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0107, device='cuda:0', dtype=torch.float64)
tensor([-200.5867, -197.5718, -195.3555, -197.5871, -197.4997],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0091, device='cuda:0', dtype=torch.float64)
tensor([-200.5918, -197.5998, -195.3383, -197.5696, -197.4836],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0096, device='cuda:0', dtype=torch.float64)
tensor([-200.6061, -197.6162, -195.2675, -197.5130, -197.4766],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0092, device='cuda:0', dtype=torch.float64)
tensor([-200.6966, -197.6419, -195.1633, -197.5285, -197.5466],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0076, device='cuda:0', dtype=torch.float64)
tensor([-200.7702, -197.6641, -195.1691, -197.6596, -197.5886],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0103, device='cuda:0', dtype=torch.float64)
tensor([-200.8105, -197.6706, -195.2222, -197.7918, -197.6076],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0071, device='cuda:0', dtype=torch.float64)
tensor([-200.8507, -197.6565, -195.2757, -197.9176, -197.6105],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0093, device='cuda:0', dtype=torch.float64)
tensor([-200.8717, -197.6391, -195.3624, -198.0513, -197.5838],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0093, device='cuda:0', dtype=torch.float64)
tensor([-200.9236, -197.6132, -195.4476, -198.2122, -197.5782],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0093, device='cuda:0', dtype=torch.float64)
tensor([-201.0259, -197.5853, -195.5350, -198.4379, -197.5922],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0103, device='cuda:0', dtype=torch.float64)
tensor([-201.1022, -197.5507, -195.6635, -198.6838, -197.5636],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0088, device='cuda:0', dtype=torch.float64)
tensor([-201.1632, -197.4990, -195.6539, -198.7372, -197.5552],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0104, device='cuda:0', dtype=torch.float64)
tensor([-201.2116, -197.4667, -195.5852, -198.7041, -197.5812],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0098, device='cuda:0', dtype=torch.float64)
tensor([-201.2131, -197.4354, -195.4766, -198.5678, -197.5838],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0110, device='cuda:0', dtype=torch.float64)
tensor([-201.1795, -197.3959, -195.3358, -198.3408, -197.5669],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0109, device='cuda:0', dtype=torch.float64)
tensor([-201.1543, -197.3742, -195.2214, -198.1523, -197.5524],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0094, device='cuda:0', dtype=torch.float64)
tensor([-201.0970, -197.3454, -195.1102, -197.9319, -197.5265],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0094, device='cuda:0', dtype=torch.float64)
tensor([-200.9940, -197.3415, -195.0378, -197.7025, -197.4788],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0101, device='cuda:0', dtype=torch.float64)
tensor([-200.8849, -197.3528, -195.0900, -197.6072, -197.4126],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0094, device='cuda:0', dtype=torch.float64)
tensor([-200.7488, -197.3739, -195.2648, -197.6383, -197.3033],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0109, device='cuda:0', dtype=torch.float64)
tensor([-200.6581, -197.3940, -195.3742, -197.6619, -197.2223],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0094, device='cuda:0', dtype=torch.float64)
tensor([-200.5472, -197.4163, -195.5681, -197.7595, -197.1092],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0102, device='cuda:0', dtype=torch.float64)
tensor([-200.3927, -197.4475, -195.8174, -197.8563, -196.9557],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0081, device='cuda:0', dtype=torch.float64)
tensor([-200.2408, -197.4902, -196.0972, -198.0024, -196.7955],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0083, device='cuda:0', dtype=torch.float64)
tensor([-200.0732, -197.5442, -196.3670, -198.1042, -196.6614],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0100, device='cuda:0', dtype=torch.float64)
tensor([-199.9380, -197.5939, -196.5328, -198.1272, -196.5723],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0087, device='cuda:0', dtype=torch.float64)
tensor([-199.8101, -197.6336, -196.5909, -198.0286, -196.5191],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0098, device='cuda:0', dtype=torch.float64)
tensor([-199.6925, -197.6617, -196.5619, -197.8412, -196.4674],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0091, device='cuda:0', dtype=torch.float64)
tensor([-199.6299, -197.6730, -196.5385, -197.7315, -196.4592],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0083, device='cuda:0', dtype=torch.float64)
tensor([-199.5959, -197.6904, -196.4880, -197.6348, -196.4731],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0138, device='cuda:0', dtype=torch.float64)
tensor([-199.5399, -197.6899, -196.3514, -197.4097, -196.5116],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0087, device='cuda:0', dtype=torch.float64)
tensor([-199.5631, -197.6853, -196.1550, -197.2318, -196.5776],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0083, device='cuda:0', dtype=torch.float64)
tensor([-199.5982, -197.6582, -195.8949, -196.9934, -196.6669],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0107, device='cuda:0', dtype=torch.float64)
tensor([-199.6477, -197.6098, -195.5997, -196.7394, -196.7616],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0096, device='cuda:0', dtype=torch.float64)
tensor([-199.6684, -197.5738, -195.3949, -196.5544, -196.8146],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0093, device='cuda:0', dtype=torch.float64)
tensor([-199.6787, -197.5503, -195.2732, -196.4603, -196.8458],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0088, device='cuda:0', dtype=torch.float64)
tensor([-199.7514, -197.5142, -195.2440, -196.5624, -196.9047],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0096, device='cuda:0', dtype=torch.float64)
tensor([-199.8597, -197.4731, -195.2013, -196.6888, -196.9932],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0100, device='cuda:0', dtype=torch.float64)
tensor([-200.0134, -197.4235, -195.0561, -196.7485, -197.1191],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0098, device='cuda:0', dtype=torch.float64)
tensor([-200.1539, -197.3916, -194.9426, -196.8106, -197.2355],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0086, device='cuda:0', dtype=torch.float64)
tensor([-200.2762, -197.3554, -194.8797, -196.9196, -197.3573],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0083, device='cuda:0', dtype=torch.float64)
tensor([-200.3595, -197.3196, -194.8835, -197.0600, -197.4392],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0094, device='cuda:0', dtype=torch.float64)
tensor([-200.4292, -197.2854, -194.9720, -197.2931, -197.4965],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0092, device='cuda:0', dtype=torch.float64)
tensor([-200.5418, -197.2541, -195.0634, -197.5820, -197.5745],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0111, device='cuda:0', dtype=torch.float64)
tensor([-200.6474, -197.2370, -195.2690, -198.0013, -197.6191],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0087, device='cuda:0', dtype=torch.float64)
tensor([-200.7814, -197.2090, -195.3812, -198.3233, -197.6932],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0089, device='cuda:0', dtype=torch.float64)
tensor([-200.8080, -197.1807, -195.6437, -198.6788, -197.6592],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0108, device='cuda:0', dtype=torch.float64)
tensor([-200.7666, -197.1583, -195.8210, -198.8411, -197.5876],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0106, device='cuda:0', dtype=torch.float64)
tensor([-200.6489, -197.1425, -196.0388, -198.9361, -197.4656],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0114, device='cuda:0', dtype=torch.float64)
tensor([-200.5092, -197.0921, -196.1699, -198.8847, -197.3445],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0116, device='cuda:0', dtype=torch.float64)
tensor([-200.3882, -197.0192, -196.2027, -198.7465, -197.2610],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0090, device='cuda:0', dtype=torch.float64)
tensor([-200.2679, -196.9452, -196.1656, -198.5336, -197.1972],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0093, device='cuda:0', dtype=torch.float64)
tensor([-200.2009, -196.8762, -196.0676, -198.3259, -197.1755],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0091, device='cuda:0', dtype=torch.float64)
tensor([-200.0865, -196.8085, -195.9608, -198.0409, -197.1118],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0113, device='cuda:0', dtype=torch.float64)
tensor([-199.9571, -196.7607, -195.8314, -197.6993, -197.0567],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0135, device='cuda:0', dtype=torch.float64)
tensor([-199.8154, -196.7300, -195.6909, -197.3373, -196.9918],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0101, device='cuda:0', dtype=torch.float64)
tensor([-199.6361, -196.7204, -195.5603, -196.9263, -196.8851],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0099, device='cuda:0', dtype=torch.float64)
tensor([-199.4959, -196.7073, -195.3995, -196.5188, -196.8033],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0108, device='cuda:0', dtype=torch.float64)
tensor([-199.3552, -196.6953, -195.3138, -196.2103, -196.6965],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0108, device='cuda:0', dtype=torch.float64)
tensor([-199.2204, -196.7067, -195.3370, -196.0648, -196.5901],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0119, device='cuda:0', dtype=torch.float64)
tensor([-199.1057, -196.7552, -195.4810, -196.0988, -196.4947],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0095, device='cuda:0', dtype=torch.float64)
tensor([-199.0309, -196.8008, -195.5688, -196.1184, -196.4423],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0093, device='cuda:0', dtype=torch.float64)
tensor([-198.9560, -196.8583, -195.6625, -196.1543, -196.3899],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0080, device='cuda:0', dtype=torch.float64)
tensor([-198.9166, -196.9032, -195.7065, -196.1821, -196.3675],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0075, device='cuda:0', dtype=torch.float64)
tensor([-198.8953, -196.9429, -195.7717, -196.2625, -196.3474],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0115, device='cuda:0', dtype=torch.float64)
tensor([-198.8786, -196.9924, -195.8244, -196.3237, -196.3368],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0093, device='cuda:0', dtype=torch.float64)
tensor([-198.8850, -197.0686, -195.9702, -196.5319, -196.3384],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0091, device='cuda:0', dtype=torch.float64)
tensor([-198.9247, -197.1080, -196.0358, -196.6960, -196.3716],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0085, device='cuda:0', dtype=torch.float64)
tensor([-198.9924, -197.1487, -196.0897, -196.8940, -196.4177],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0081, device='cuda:0', dtype=torch.float64)
tensor([-199.0411, -197.1999, -196.0892, -197.0052, -196.4578],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0102, device='cuda:0', dtype=torch.float64)
tensor([-199.0930, -197.2515, -196.0685, -197.0928, -196.5104],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0099, device='cuda:0', dtype=torch.float64)
tensor([-199.1751, -197.2794, -195.9709, -197.1343, -196.6029],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0094, device='cuda:0', dtype=torch.float64)
tensor([-199.2372, -197.3102, -195.9388, -197.2086, -196.6738],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0091, device='cuda:0', dtype=torch.float64)
tensor([-199.3397, -197.3404, -195.9116, -197.3416, -196.7559],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0081, device='cuda:0', dtype=torch.float64)
tensor([-199.4408, -197.3561, -195.8450, -197.4122, -196.8517],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0078, device='cuda:0', dtype=torch.float64)
tensor([-199.5456, -197.3652, -195.6967, -197.4024, -196.9483],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0109, device='cuda:0', dtype=torch.float64)
tensor([-199.6040, -197.3909, -195.6340, -197.4143, -196.9988],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0118, device='cuda:0', dtype=torch.float64)
tensor([-199.6332, -197.4062, -195.6903, -197.5232, -197.0013],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0094, device='cuda:0', dtype=torch.float64)
tensor([-199.6724, -197.3892, -195.7875, -197.6815, -196.9948],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0091, device='cuda:0', dtype=torch.float64)
tensor([-199.7066, -197.3579, -195.7917, -197.7362, -197.0075],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0080, device='cuda:0', dtype=torch.float64)
tensor([-199.7511, -197.3124, -195.8007, -197.8104, -197.0245],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0098, device='cuda:0', dtype=torch.float64)
tensor([-199.7739, -197.2313, -195.8261, -197.8698, -197.0136],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0102, device='cuda:0', dtype=torch.float64)
tensor([-199.8292, -197.1568, -195.8320, -197.9545, -197.0188],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0081, device='cuda:0', dtype=torch.float64)
tensor([-199.8708, -197.0806, -195.8237, -197.9986, -197.0300],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0093, device='cuda:0', dtype=torch.float64)
tensor([-199.9469, -197.0139, -195.8777, -198.1654, -197.0613],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0102, device='cuda:0', dtype=torch.float64)
tensor([-199.9926, -196.9502, -195.8821, -198.2200, -197.0748],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0080, device='cuda:0', dtype=torch.float64)
tensor([-200.0400, -196.8945, -195.8818, -198.2813, -197.1052],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0101, device='cuda:0', dtype=torch.float64)
tensor([-200.0625, -196.8323, -195.8568, -198.2789, -197.1329],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0106, device='cuda:0', dtype=torch.float64)
tensor([-200.1086, -196.7799, -195.7580, -198.2168, -197.1867],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0086, device='cuda:0', dtype=torch.float64)
tensor([-200.1313, -196.7279, -195.6489, -198.1105, -197.2376],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0092, device='cuda:0', dtype=torch.float64)
tensor([-200.1407, -196.6781, -195.5322, -197.9741, -197.2817],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0108, device='cuda:0', dtype=torch.float64)
tensor([-200.1678, -196.6486, -195.4073, -197.8667, -197.3400],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0095, device='cuda:0', dtype=torch.float64)
tensor([-200.1692, -196.6309, -195.3845, -197.8461, -197.3710],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0090, device='cuda:0', dtype=torch.float64)
tensor([-200.1503, -196.6196, -195.4276, -197.8787, -197.3704],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0099, device='cuda:0', dtype=torch.float64)
tensor([-200.1054, -196.6192, -195.4256, -197.8426, -197.3371],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0084, device='cuda:0', dtype=torch.float64)
tensor([-200.0081, -196.6170, -195.3884, -197.6983, -197.2862],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0080, device='cuda:0', dtype=torch.float64)
tensor([-199.9535, -196.6048, -195.4473, -197.7330, -197.2408],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0087, device='cuda:0', dtype=torch.float64)
tensor([-199.8489, -196.5927, -195.3933, -197.5661, -197.1889],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0085, device='cuda:0', dtype=torch.float64)
tensor([-199.7304, -196.5840, -195.3942, -197.4356, -197.1210],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0092, device='cuda:0', dtype=torch.float64)
tensor([-199.6052, -196.5564, -195.3327, -197.2155, -197.0771],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0097, device='cuda:0', dtype=torch.float64)
tensor([-199.4995, -196.5280, -195.3311, -197.0956, -197.0314],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0095, device='cuda:0', dtype=torch.float64)
tensor([-199.3645, -196.5238, -195.4168, -197.0252, -196.9401],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0132, device='cuda:0', dtype=torch.float64)
tensor([-199.2727, -196.5304, -195.4635, -196.9527, -196.8897],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0089, device='cuda:0', dtype=torch.float64)
tensor([-199.1957, -196.5066, -195.4443, -196.8328, -196.8390],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0093, device='cuda:0', dtype=torch.float64)
tensor([-199.1403, -196.4858, -195.4031, -196.7100, -196.8095],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0106, device='cuda:0', dtype=torch.float64)
tensor([-199.1338, -196.4751, -195.3591, -196.6431, -196.8257],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0091, device='cuda:0', dtype=torch.float64)
tensor([-199.1157, -196.4761, -195.3758, -196.6488, -196.8180],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0088, device='cuda:0', dtype=torch.float64)
tensor([-199.0935, -196.4879, -195.4460, -196.7124, -196.7904],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0086, device='cuda:0', dtype=torch.float64)
tensor([-199.0901, -196.4948, -195.4269, -196.6993, -196.7813],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0096, device='cuda:0', dtype=torch.float64)
tensor([-199.0659, -196.5044, -195.4585, -196.7161, -196.7472],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0086, device='cuda:0', dtype=torch.float64)
tensor([-199.1002, -196.4959, -195.3643, -196.6580, -196.7685],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0091, device='cuda:0', dtype=torch.float64)
tensor([-199.1070, -196.4791, -195.2401, -196.5299, -196.7701],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0101, device='cuda:0', dtype=torch.float64)
tensor([-199.1292, -196.4511, -195.1981, -196.5319, -196.7611],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0074, device='cuda:0', dtype=torch.float64)
tensor([-199.1599, -196.4132, -195.1094, -196.4896, -196.7622],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0104, device='cuda:0', dtype=torch.float64)
tensor([-199.1403, -196.4109, -195.0984, -196.4550, -196.7198],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0090, device='cuda:0', dtype=torch.float64)
tensor([-199.0836, -196.4274, -195.1198, -196.4031, -196.6550],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0098, device='cuda:0', dtype=torch.float64)
tensor([-199.0680, -196.4479, -195.0765, -196.3350, -196.6454],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0098, device='cuda:0', dtype=torch.float64)
tensor([-199.0343, -196.4657, -195.1198, -196.3573, -196.6184],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0087, device='cuda:0', dtype=torch.float64)
tensor([-199.0218, -196.4897, -195.1545, -196.4034, -196.6053],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0101, device='cuda:0', dtype=torch.float64)
tensor([-198.9984, -196.5085, -195.2832, -196.5501, -196.5472],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0106, device='cuda:0', dtype=torch.float64)
tensor([-199.0007, -196.5164, -195.3717, -196.6789, -196.5297],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0093, device='cuda:0', dtype=torch.float64)
tensor([-199.0387, -196.5087, -195.3897, -196.7788, -196.5447],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0123, device='cuda:0', dtype=torch.float64)
tensor([-199.0549, -196.4845, -195.3332, -196.7474, -196.5803],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0106, device='cuda:0', dtype=torch.float64)
tensor([-199.0635, -196.4646, -195.3490, -196.7930, -196.5800],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0102, device='cuda:0', dtype=torch.float64)
tensor([-199.0663, -196.4559, -195.4576, -196.9562, -196.5548],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0081, device='cuda:0', dtype=torch.float64)
tensor([-199.1065, -196.4483, -195.5762, -197.1736, -196.5515],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0093, device='cuda:0', dtype=torch.float64)
tensor([-199.1597, -196.4287, -195.6023, -197.3129, -196.5716],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0101, device='cuda:0', dtype=torch.float64)
tensor([-199.2048, -196.3775, -195.5392, -197.3330, -196.6156],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0082, device='cuda:0', dtype=torch.float64)
tensor([-199.2512, -196.3272, -195.5008, -197.3944, -196.6650],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0103, device='cuda:0', dtype=torch.float64)
tensor([-199.2851, -196.2899, -195.5424, -197.5177, -196.7009],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0095, device='cuda:0', dtype=torch.float64)
tensor([-199.3007, -196.2336, -195.5965, -197.6189, -196.6976],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0109, device='cuda:0', dtype=torch.float64)
tensor([-199.2611, -196.1890, -195.6415, -197.6269, -196.6512],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0103, device='cuda:0', dtype=torch.float64)
tensor([-199.2148, -196.1449, -195.7468, -197.6857, -196.5954],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0093, device='cuda:0', dtype=torch.float64)
tensor([-199.1247, -196.1058, -195.8678, -197.7135, -196.4979],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0092, device='cuda:0', dtype=torch.float64)
tensor([-199.0483, -196.0886, -195.9982, -197.7630, -196.4199],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0089, device='cuda:0', dtype=torch.float64)
tensor([-198.9974, -196.0571, -196.0685, -197.7780, -196.3708],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0079, device='cuda:0', dtype=torch.float64)
tensor([-198.9426, -196.0287, -196.0892, -197.7318, -196.3135],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0080, device='cuda:0', dtype=torch.float64)
tensor([-198.8978, -196.0113, -196.0749, -197.6453, -196.2868],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0087, device='cuda:0', dtype=torch.float64)
tensor([-198.8650, -195.9855, -196.0075, -197.5268, -196.2826],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0095, device='cuda:0', dtype=torch.float64)
tensor([-198.8183, -195.9696, -196.0239, -197.4760, -196.2563],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0092, device='cuda:0', dtype=torch.float64)
tensor([-198.7593, -195.9776, -196.0013, -197.3621, -196.2367],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0094, device='cuda:0', dtype=torch.float64)
tensor([-198.7505, -195.9820, -195.9750, -197.3219, -196.2343],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0093, device='cuda:0', dtype=torch.float64)
tensor([-198.7386, -195.9603, -195.8195, -197.1303, -196.2432],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0108, device='cuda:0', dtype=torch.float64)
tensor([-198.7913, -195.9383, -195.6721, -197.0397, -196.2844],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0086, device='cuda:0', dtype=torch.float64)
tensor([-198.8755, -195.8884, -195.4474, -196.9221, -196.3573],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0098, device='cuda:0', dtype=torch.float64)
tensor([-198.9485, -195.8372, -195.1943, -196.7558, -196.4287],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0109, device='cuda:0', dtype=torch.float64)
tensor([-199.0381, -195.7851, -194.9863, -196.6320, -196.5029],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0082, device='cuda:0', dtype=torch.float64)
tensor([-199.0585, -195.7497, -194.8150, -196.4658, -196.5112],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0115, device='cuda:0', dtype=torch.float64)
tensor([-199.0937, -195.7172, -194.8059, -196.5137, -196.5175],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0126, device='cuda:0', dtype=torch.float64)
tensor([-199.0533, -195.7122, -194.9529, -196.6495, -196.4568],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0084, device='cuda:0', dtype=torch.float64)
tensor([-199.0405, -195.6797, -195.0728, -196.7928, -196.4118],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0100, device='cuda:0', dtype=torch.float64)
tensor([-199.0365, -195.6281, -195.0727, -196.8026, -196.4033],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0091, device='cuda:0', dtype=torch.float64)
tensor([-199.0141, -195.6109, -195.0992, -196.8114, -196.3761],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0095, device='cuda:0', dtype=torch.float64)
tensor([-198.9839, -195.6141, -195.1140, -196.7991, -196.3415],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0087, device='cuda:0', dtype=torch.float64)
tensor([-198.9595, -195.6291, -195.0954, -196.7568, -196.3181],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0089, device='cuda:0', dtype=torch.float64)
tensor([-198.9021, -195.6531, -195.1284, -196.7336, -196.2666],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0081, device='cuda:0', dtype=torch.float64)
tensor([-198.8378, -195.6844, -195.1063, -196.6271, -196.2213],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0086, device='cuda:0', dtype=torch.float64)
tensor([-198.7960, -195.7110, -195.0720, -196.5473, -196.1915],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0092, device='cuda:0', dtype=torch.float64)
tensor([-198.7872, -195.7207, -194.8958, -196.3416, -196.2035],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0100, device='cuda:0', dtype=torch.float64)
tensor([-198.7243, -195.7063, -194.7235, -196.0874, -196.1744],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0093, device='cuda:0', dtype=torch.float64)
tensor([-198.6353, -195.6914, -194.6137, -195.8678, -196.1219],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0111, device='cuda:0', dtype=torch.float64)
tensor([-198.5881, -195.6709, -194.5935, -195.8212, -196.0711],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0110, device='cuda:0', dtype=torch.float64)
tensor([-198.5641, -195.6490, -194.6040, -195.8408, -196.0203],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0097, device='cuda:0', dtype=torch.float64)
tensor([-198.5329, -195.6249, -194.6105, -195.8309, -195.9796],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0101, device='cuda:0', dtype=torch.float64)
tensor([-198.5023, -195.6123, -194.7824, -196.0034, -195.9186],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0080, device='cuda:0', dtype=torch.float64)
tensor([-198.4975, -195.5970, -194.9303, -196.1914, -195.8757],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0090, device='cuda:0', dtype=torch.float64)
tensor([-198.5446, -195.5555, -195.0049, -196.3769, -195.8867],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0081, device='cuda:0', dtype=torch.float64)
tensor([-198.6061, -195.5398, -195.0699, -196.5707, -195.8940],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0103, device='cuda:0', dtype=torch.float64)
tensor([-198.6462, -195.5302, -195.2552, -196.8792, -195.8675],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0088, device='cuda:0', dtype=torch.float64)
tensor([-198.7107, -195.5089, -195.4191, -197.1996, -195.8564],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0097, device='cuda:0', dtype=torch.float64)
tensor([-198.7184, -195.4884, -195.5790, -197.4354, -195.7882],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0122, device='cuda:0', dtype=torch.float64)
tensor([-198.6959, -195.5066, -195.6779, -197.5540, -195.7168],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0110, device='cuda:0', dtype=torch.float64)
tensor([-198.6754, -195.5109, -195.7821, -197.6831, -195.6523],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0087, device='cuda:0', dtype=torch.float64)
tensor([-198.6500, -195.4956, -195.7056, -197.6111, -195.6325],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0106, device='cuda:0', dtype=torch.float64)
tensor([-198.5992, -195.4698, -195.5350, -197.4170, -195.6253],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0089, device='cuda:0', dtype=torch.float64)
tensor([-198.4963, -195.4718, -195.3275, -197.0988, -195.6027],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0083, device='cuda:0', dtype=torch.float64)
tensor([-198.4192, -195.4631, -195.1046, -196.7945, -195.5984],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0100, device='cuda:0', dtype=torch.float64)
tensor([-198.3981, -195.4522, -194.9276, -196.5907, -195.6303],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0104, device='cuda:0', dtype=torch.float64)
tensor([-198.3880, -195.4466, -194.8585, -196.5154, -195.6425],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0094, device='cuda:0', dtype=torch.float64)
tensor([-198.4166, -195.4391, -194.7612, -196.4645, -195.6860],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0103, device='cuda:0', dtype=torch.float64)
tensor([-198.4382, -195.4450, -194.7205, -196.4555, -195.7165],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0100, device='cuda:0', dtype=torch.float64)
tensor([-198.4767, -195.4537, -194.6317, -196.4038, -195.7723],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0099, device='cuda:0', dtype=torch.float64)
tensor([-198.4898, -195.4473, -194.5624, -196.3422, -195.7914],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0106, device='cuda:0', dtype=torch.float64)
tensor([-198.4944, -195.4629, -194.3803, -196.1242, -195.8438],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0102, device='cuda:0', dtype=torch.float64)
tensor([-198.5295, -195.4836, -194.2171, -196.0009, -195.9183],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0099, device='cuda:0', dtype=torch.float64)
tensor([-198.5442, -195.5331, -194.1212, -195.9177, -195.9849],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0087, device='cuda:0', dtype=torch.float64)
tensor([-198.5534, -195.5655, -194.0326, -195.8291, -196.0296],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0092, device='cuda:0', dtype=torch.float64)
tensor([-198.5967, -195.5744, -193.8866, -195.7146, -196.0958],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0096, device='cuda:0', dtype=torch.float64)
tensor([-198.6276, -195.5909, -193.9465, -195.8171, -196.1259],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0095, device='cuda:0', dtype=torch.float64)
tensor([-198.6921, -195.5992, -194.0015, -195.9653, -196.1932],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0094, device='cuda:0', dtype=torch.float64)
tensor([-198.7383, -195.6124, -194.1310, -196.1676, -196.2360],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0076, device='cuda:0', dtype=torch.float64)
tensor([-198.7457, -195.6256, -194.3461, -196.4316, -196.2425],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0105, device='cuda:0', dtype=torch.float64)
tensor([-198.7694, -195.6425, -194.4470, -196.5927, -196.2872],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0107, device='cuda:0', dtype=torch.float64)
tensor([-198.8078, -195.6458, -194.4986, -196.7193, -196.3514],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0098, device='cuda:0', dtype=torch.float64)
tensor([-198.8538, -195.6369, -194.5482, -196.8710, -196.3946],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0085, device='cuda:0', dtype=torch.float64)
tensor([-198.8639, -195.6397, -194.5871, -196.9716, -196.4220],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0101, device='cuda:0', dtype=torch.float64)
tensor([-198.8401, -195.6156, -194.6087, -196.9909, -196.4212],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0096, device='cuda:0', dtype=torch.float64)
tensor([-198.8455, -195.6028, -194.4857, -196.8797, -196.4747],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0093, device='cuda:0', dtype=torch.float64)
tensor([-198.8349, -195.5854, -194.4827, -196.9012, -196.4733],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0098, device='cuda:0', dtype=torch.float64)
tensor([-198.8544, -195.5893, -194.4346, -196.9075, -196.5117],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0097, device='cuda:0', dtype=torch.float64)
tensor([-198.9149, -195.6021, -194.2525, -196.8116, -196.5866],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0096, device='cuda:0', dtype=torch.float64)
tensor([-198.9505, -195.6100, -194.0476, -196.6469, -196.6460],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0098, device='cuda:0', dtype=torch.float64)
tensor([-198.9516, -195.5988, -193.9028, -196.5050, -196.6638],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0096, device='cuda:0', dtype=torch.float64)
tensor([-198.9016, -195.5894, -193.9417, -196.4973, -196.6161],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0083, device='cuda:0', dtype=torch.float64)
tensor([-198.8446, -195.5892, -194.1062, -196.6339, -196.5327],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0096, device='cuda:0', dtype=torch.float64)
tensor([-198.7552, -195.5935, -194.4229, -196.8950, -196.4035],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0091, device='cuda:0', dtype=torch.float64)
tensor([-198.6670, -195.6125, -194.7319, -197.1254, -196.2883],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0098, device='cuda:0', dtype=torch.float64)
tensor([-198.6085, -195.6450, -194.8769, -197.2093, -196.2283],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0087, device='cuda:0', dtype=torch.float64)
tensor([-198.5331, -195.6822, -195.0190, -197.2572, -196.1672],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0144, device='cuda:0', dtype=torch.float64)
tensor([-198.4518, -195.7337, -195.1561, -197.2824, -196.0974],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0079, device='cuda:0', dtype=torch.float64)
tensor([-198.4172, -195.7805, -195.1230, -197.1896, -196.1079],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0091, device='cuda:0', dtype=torch.float64)
tensor([-198.3993, -195.8196, -195.0215, -197.0392, -196.1471],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0077, device='cuda:0', dtype=torch.float64)
tensor([-198.4213, -195.8420, -194.8482, -196.8525, -196.2180],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0087, device='cuda:0', dtype=torch.float64)
tensor([-198.5008, -195.8533, -194.7376, -196.8174, -196.3114],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0099, device='cuda:0', dtype=torch.float64)
tensor([-198.5956, -195.8597, -194.5052, -196.6644, -196.4384],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0097, device='cuda:0', dtype=torch.float64)
tensor([-198.6229, -195.8560, -194.3326, -196.4960, -196.5160],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0089, device='cuda:0', dtype=torch.float64)
tensor([-198.6646, -195.8380, -194.0848, -196.2591, -196.6231],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0093, device='cuda:0', dtype=torch.float64)
tensor([-198.6740, -195.8265, -193.9252, -196.0920, -196.6919],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0083, device='cuda:0', dtype=torch.float64)
tensor([-198.6992, -195.8145, -193.7375, -195.9065, -196.7701],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0097, device='cuda:0', dtype=torch.float64)
tensor([-198.7690, -195.8147, -193.6698, -195.9230, -196.8532],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0091, device='cuda:0', dtype=torch.float64)
tensor([-198.8122, -195.8086, -193.6688, -195.9789, -196.9122],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0126, device='cuda:0', dtype=torch.float64)
tensor([-198.8392, -195.7810, -193.6856, -196.0297, -196.9372],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0090, device='cuda:0', dtype=torch.float64)
tensor([-198.8725, -195.7451, -193.7821, -196.1892, -196.9491],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0100, device='cuda:0', dtype=torch.float64)
tensor([-198.8171, -195.7358, -194.0415, -196.4161, -196.8820],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0107, device='cuda:0', dtype=torch.float64)
tensor([-198.7819, -195.7299, -194.2567, -196.6208, -196.8336],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0091, device='cuda:0', dtype=torch.float64)
tensor([-198.7106, -195.7398, -194.4922, -196.7912, -196.7603],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0098, device='cuda:0', dtype=torch.float64)
tensor([-198.6786, -195.7495, -194.6677, -196.9423, -196.7275],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0094, device='cuda:0', dtype=torch.float64)
tensor([-198.6690, -195.7516, -194.8651, -197.1458, -196.6883],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0084, device='cuda:0', dtype=torch.float64)
tensor([-198.6491, -195.7376, -194.9669, -197.2464, -196.6482],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0085, device='cuda:0', dtype=torch.float64)
tensor([-198.6404, -195.7180, -195.0125, -197.3012, -196.6213],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0095, device='cuda:0', dtype=torch.float64)
tensor([-198.5707, -195.7043, -195.0514, -197.2616, -196.5588],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0083, device='cuda:0', dtype=torch.float64)
tensor([-198.5034, -195.6622, -195.0577, -197.2026, -196.5033],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0099, device='cuda:0', dtype=torch.float64)
tensor([-198.4223, -195.6238, -195.0102, -197.0727, -196.4565],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0087, device='cuda:0', dtype=torch.float64)
tensor([-198.4220, -195.5803, -194.8982, -196.9889, -196.4701],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0114, device='cuda:0', dtype=torch.float64)
tensor([-198.4779, -195.5424, -194.7333, -196.9129, -196.5307],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0093, device='cuda:0', dtype=torch.float64)
tensor([-198.4938, -195.5191, -194.5849, -196.7812, -196.5548],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0083, device='cuda:0', dtype=torch.float64)
tensor([-198.4977, -195.4803, -194.5505, -196.7417, -196.5348],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0108, device='cuda:0', dtype=torch.float64)
tensor([-198.4904, -195.4454, -194.5028, -196.6751, -196.5023],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0102, device='cuda:0', dtype=torch.float64)
tensor([-198.4580, -195.4106, -194.4528, -196.5739, -196.4418],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0092, device='cuda:0', dtype=torch.float64)
tensor([-198.4104, -195.3630, -194.4932, -196.5618, -196.3543],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0090, device='cuda:0', dtype=torch.float64)
tensor([-198.3467, -195.3319, -194.5506, -196.5412, -196.2479],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0085, device='cuda:0', dtype=torch.float64)
tensor([-198.2680, -195.2900, -194.5829, -196.4725, -196.1307],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0089, device='cuda:0', dtype=torch.float64)
tensor([-198.2089, -195.2549, -194.6471, -196.4753, -196.0109],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0083, device='cuda:0', dtype=torch.float64)
tensor([-198.1660, -195.1973, -194.6364, -196.4284, -195.9171],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0084, device='cuda:0', dtype=torch.float64)
tensor([-198.1499, -195.1204, -194.4968, -196.2698, -195.8658],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0098, device='cuda:0', dtype=torch.float64)
tensor([-198.1070, -195.0363, -194.3075, -196.0287, -195.8063],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0096, device='cuda:0', dtype=torch.float64)
tensor([-198.0663, -194.9488, -194.0350, -195.6848, -195.7741],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0083, device='cuda:0', dtype=torch.float64)
tensor([-198.0467, -194.8691, -193.7295, -195.3272, -195.7569],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0084, device='cuda:0', dtype=torch.float64)
tensor([-197.9902, -194.8258, -193.6039, -195.1337, -195.6910],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0086, device='cuda:0', dtype=torch.float64)
tensor([-197.9888, -194.8191, -193.5220, -195.0654, -195.6651],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0101, device='cuda:0', dtype=torch.float64)
tensor([-197.9826, -194.8244, -193.5794, -195.1557, -195.6005],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0116, device='cuda:0', dtype=torch.float64)
tensor([-197.9509, -194.8315, -193.6062, -195.1708, -195.5217],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0097, device='cuda:0', dtype=torch.float64)
tensor([-197.9714, -194.8207, -193.6893, -195.3160, -195.4958],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0112, device='cuda:0', dtype=torch.float64)
tensor([-197.9994, -194.8324, -193.7610, -195.4452, -195.4726],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0101, device='cuda:0', dtype=torch.float64)
tensor([-198.0317, -194.8391, -193.9296, -195.6859, -195.4433],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0088, device='cuda:0', dtype=torch.float64)
tensor([-198.0446, -194.8353, -194.0252, -195.8073, -195.4263],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0102, device='cuda:0', dtype=torch.float64)
tensor([-198.1021, -194.8304, -194.0565, -195.9029, -195.4437],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0090, device='cuda:0', dtype=torch.float64)
tensor([-198.1539, -194.8224, -194.0147, -195.8968, -195.4793],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0095, device='cuda:0', dtype=torch.float64)
tensor([-198.1645, -194.8166, -194.0598, -195.9303, -195.4675],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0123, device='cuda:0', dtype=torch.float64)
tensor([-198.1589, -194.8206, -194.1631, -196.0228, -195.4489],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0090, device='cuda:0', dtype=torch.float64)
tensor([-198.1424, -194.8090, -194.2551, -196.1068, -195.4177],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0076, device='cuda:0', dtype=torch.float64)
tensor([-198.0918, -194.7843, -194.3379, -196.1272, -195.3771],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0099, device='cuda:0', dtype=torch.float64)
tensor([-198.0497, -194.7644, -194.4036, -196.1271, -195.3414],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0105, device='cuda:0', dtype=torch.float64)
tensor([-198.0337, -194.7572, -194.4570, -196.1332, -195.3322],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0103, device='cuda:0', dtype=torch.float64)
tensor([-198.0129, -194.7284, -194.4617, -196.0889, -195.3253],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0109, device='cuda:0', dtype=torch.float64)
tensor([-198.0412, -194.6909, -194.3798, -196.0092, -195.3724],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0102, device='cuda:0', dtype=torch.float64)
tensor([-198.0247, -194.6666, -194.3491, -195.9389, -195.3682],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0096, device='cuda:0', dtype=torch.float64)
tensor([-198.0365, -194.6462, -194.3485, -195.9539, -195.3678],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0093, device='cuda:0', dtype=torch.float64)
tensor([-198.0451, -194.6160, -194.4383, -196.0530, -195.3428],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0092, device='cuda:0', dtype=torch.float64)
tensor([-198.0607, -194.5883, -194.4101, -196.0405, -195.3421],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0082, device='cuda:0', dtype=torch.float64)
tensor([-198.0914, -194.5653, -194.3049, -195.9514, -195.3577],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0100, device='cuda:0', dtype=torch.float64)
tensor([-198.1203, -194.5396, -194.2871, -195.9684, -195.3460],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0093, device='cuda:0', dtype=torch.float64)
tensor([-198.0748, -194.5285, -194.4103, -196.0600, -195.2573],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0081, device='cuda:0', dtype=torch.float64)
tensor([-198.0479, -194.5106, -194.5082, -196.1477, -195.1941],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0103, device='cuda:0', dtype=torch.float64)
tensor([-198.0069, -194.5117, -194.5980, -196.1989, -195.1580],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0084, device='cuda:0', dtype=torch.float64)
tensor([-197.9579, -194.5069, -194.6952, -196.2496, -195.1098],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0104, device='cuda:0', dtype=torch.float64)
tensor([-197.8897, -194.5100, -194.6216, -196.0716, -195.0850],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0102, device='cuda:0', dtype=torch.float64)
tensor([-197.8302, -194.5080, -194.4387, -195.7706, -195.1023],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0093, device='cuda:0', dtype=torch.float64)
tensor([-197.8146, -194.5058, -194.2486, -195.5348, -195.1419],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0095, device='cuda:0', dtype=torch.float64)
tensor([-197.7687, -194.4870, -194.0688, -195.2609, -195.1613],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0101, device='cuda:0', dtype=torch.float64)
tensor([-197.7349, -194.5003, -194.0573, -195.2006, -195.1412],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0092, device='cuda:0', dtype=torch.float64)
tensor([-197.6980, -194.5393, -194.0375, -195.1359, -195.1184],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0078, device='cuda:0', dtype=torch.float64)
tensor([-197.6692, -194.5433, -193.9784, -195.0400, -195.1165],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0108, device='cuda:0', dtype=torch.float64)
tensor([-197.6859, -194.5725, -193.8745, -194.9561, -195.1546],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0101, device='cuda:0', dtype=torch.float64)
tensor([-197.7730, -194.5911, -193.8115, -195.0156, -195.2205],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0103, device='cuda:0', dtype=torch.float64)
tensor([-197.8059, -194.6185, -193.8669, -195.1221, -195.2249],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0085, device='cuda:0', dtype=torch.float64)
tensor([-197.8638, -194.6435, -193.8586, -195.1872, -195.2489],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0084, device='cuda:0', dtype=torch.float64)
tensor([-197.8938, -194.6606, -193.8505, -195.2042, -195.2549],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0101, device='cuda:0', dtype=torch.float64)
tensor([-197.9384, -194.6687, -193.8265, -195.2221, -195.2842],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0097, device='cuda:0', dtype=torch.float64)
tensor([-197.9958, -194.6337, -193.7701, -195.2188, -195.3260],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0083, device='cuda:0', dtype=torch.float64)
tensor([-198.0336, -194.6186, -193.7628, -195.2414, -195.3572],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0097, device='cuda:0', dtype=torch.float64)
tensor([-198.0897, -194.6326, -193.7235, -195.2568, -195.4004],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0087, device='cuda:0', dtype=torch.float64)
tensor([-198.1601, -194.6421, -193.6474, -195.2659, -195.4694],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0092, device='cuda:0', dtype=torch.float64)
tensor([-198.1671, -194.6553, -193.6339, -195.2672, -195.4793],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0091, device='cuda:0', dtype=torch.float64)
tensor([-198.1133, -194.6492, -193.5938, -195.1520, -195.4490],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0093, device='cuda:0', dtype=torch.float64)
tensor([-198.0630, -194.6371, -193.5444, -195.0289, -195.4426],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0102, device='cuda:0', dtype=torch.float64)
tensor([-197.9194, -194.6117, -193.5598, -194.8629, -195.3545],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0094, device='cuda:0', dtype=torch.float64)
tensor([-197.7990, -194.5844, -193.5508, -194.6874, -195.2849],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0087, device='cuda:0', dtype=torch.float64)
tensor([-197.7027, -194.5893, -193.6132, -194.6107, -195.2064],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0076, device='cuda:0', dtype=torch.float64)
tensor([-197.6093, -194.5828, -193.7221, -194.5737, -195.1262],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0095, device='cuda:0', dtype=torch.float64)
tensor([-197.5506, -194.5620, -193.7204, -194.4669, -195.1103],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0081, device='cuda:0', dtype=torch.float64)
tensor([-197.4961, -194.5455, -193.8322, -194.5132, -195.0838],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0082, device='cuda:0', dtype=torch.float64)
tensor([-197.4860, -194.5246, -193.8744, -194.5451, -195.0869],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0094, device='cuda:0', dtype=torch.float64)
tensor([-197.5415, -194.5160, -193.8517, -194.5823, -195.1569],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0091, device='cuda:0', dtype=torch.float64)
tensor([-197.6100, -194.5109, -193.9293, -194.7527, -195.1912],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0078, device='cuda:0', dtype=torch.float64)
tensor([-197.6727, -194.4985, -193.9678, -194.8832, -195.2375],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0102, device='cuda:0', dtype=torch.float64)
tensor([-197.7879, -194.4857, -193.9615, -195.0280, -195.3157],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0105, device='cuda:0', dtype=torch.float64)
tensor([-197.8807, -194.4713, -194.0096, -195.2108, -195.3624],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0090, device='cuda:0', dtype=torch.float64)
tensor([-197.9838, -194.4310, -193.9959, -195.3324, -195.4338],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0092, device='cuda:0', dtype=torch.float64)
tensor([-198.1321, -194.3895, -193.9119, -195.4456, -195.5583],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0094, device='cuda:0', dtype=torch.float64)
tensor([-198.2602, -194.3607, -193.8435, -195.5404, -195.6586],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0100, device='cuda:0', dtype=torch.float64)
tensor([-198.2982, -194.3299, -193.8163, -195.5770, -195.6996],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0100, device='cuda:0', dtype=torch.float64)
tensor([-198.3265, -194.3057, -193.8236, -195.6448, -195.7211],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0088, device='cuda:0', dtype=torch.float64)
tensor([-198.3574, -194.2822, -193.8520, -195.7460, -195.7258],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0094, device='cuda:0', dtype=torch.float64)
tensor([-198.3942, -194.2390, -193.7904, -195.7566, -195.7499],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0120, device='cuda:0', dtype=torch.float64)
tensor([-198.4152, -194.1793, -193.6412, -195.6337, -195.7714],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0104, device='cuda:0', dtype=torch.float64)
tensor([-198.4372, -194.1372, -193.5060, -195.5277, -195.8005],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0079, device='cuda:0', dtype=torch.float64)
tensor([-198.4064, -194.1161, -193.4410, -195.4309, -195.7733],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0102, device='cuda:0', dtype=torch.float64)
tensor([-198.2907, -194.0771, -193.4424, -195.2859, -195.6914],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0090, device='cuda:0', dtype=torch.float64)
tensor([-198.1375, -194.0401, -193.4871, -195.1397, -195.5673],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0084, device='cuda:0', dtype=torch.float64)
tensor([-197.9813, -194.0248, -193.5494, -195.0247, -195.4339],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0095, device='cuda:0', dtype=torch.float64)
tensor([-197.8593, -193.9916, -193.4742, -194.8154, -195.3580],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0103, device='cuda:0', dtype=torch.float64)
tensor([-197.6832, -193.9730, -193.5982, -194.7524, -195.2178],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0100, device='cuda:0', dtype=torch.float64)
tensor([-197.5659, -193.9266, -193.6857, -194.7234, -195.1377],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0089, device='cuda:0', dtype=torch.float64)
tensor([-197.4733, -193.8847, -193.7340, -194.6892, -195.0738],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0096, device='cuda:0', dtype=torch.float64)
tensor([-197.4133, -193.8513, -193.7583, -194.6701, -195.0213],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0098, device='cuda:0', dtype=torch.float64)
tensor([-197.3539, -193.8313, -193.9398, -194.8064, -194.9330],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0087, device='cuda:0', dtype=torch.float64)
tensor([-197.3538, -193.8044, -194.0743, -194.9636, -194.8723],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0085, device='cuda:0', dtype=torch.float64)
tensor([-197.3614, -193.7719, -194.2433, -195.1693, -194.8109],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0089, device='cuda:0', dtype=torch.float64)
tensor([-197.3446, -193.7252, -194.3708, -195.2972, -194.7352],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0091, device='cuda:0', dtype=torch.float64)
tensor([-197.3616, -193.6937, -194.4241, -195.3804, -194.6985],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0077, device='cuda:0', dtype=torch.float64)
tensor([-197.3368, -193.6804, -194.5253, -195.4673, -194.6012],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0084, device='cuda:0', dtype=torch.float64)
tensor([-197.3354, -193.6892, -194.5815, -195.5353, -194.5503],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0102, device='cuda:0', dtype=torch.float64)
tensor([-197.3679, -193.7083, -194.6180, -195.6094, -194.5439],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0089, device='cuda:0', dtype=torch.float64)
tensor([-197.4025, -193.7363, -194.6631, -195.7026, -194.5428],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0099, device='cuda:0', dtype=torch.float64)
tensor([-197.4542, -193.7472, -194.6183, -195.7251, -194.5579],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0088, device='cuda:0', dtype=torch.float64)
tensor([-197.4736, -193.7708, -194.6051, -195.7483, -194.5325],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0126, device='cuda:0', dtype=torch.float64)
tensor([-197.4050, -193.8047, -194.5139, -195.5737, -194.4745],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0091, device='cuda:0', dtype=torch.float64)
tensor([-197.3307, -193.8464, -194.3979, -195.3566, -194.4087],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0091, device='cuda:0', dtype=torch.float64)
tensor([-197.2541, -193.8621, -194.1912, -195.0424, -194.3634],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0091, device='cuda:0', dtype=torch.float64)
tensor([-197.2405, -193.8457, -194.0333, -194.8751, -194.3339],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0096, device='cuda:0', dtype=torch.float64)
tensor([-197.2549, -193.8061, -193.7351, -194.5875, -194.3596],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0094, device='cuda:0', dtype=torch.float64)
tensor([-197.3285, -193.7740, -193.4614, -194.3856, -194.4380],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0084, device='cuda:0', dtype=torch.float64)
tensor([-197.4090, -193.7463, -193.2564, -194.2647, -194.5045],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0097, device='cuda:0', dtype=torch.float64)
tensor([-197.5122, -193.7196, -192.9518, -194.0471, -194.6181],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0097, device='cuda:0', dtype=torch.float64)
tensor([-197.7098, -193.6775, -192.5814, -193.8927, -194.8052],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0095, device='cuda:0', dtype=torch.float64)
tensor([-197.8899, -193.6511, -192.4330, -193.9603, -194.9381],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0097, device='cuda:0', dtype=torch.float64)
tensor([-198.0259, -193.6163, -192.2887, -193.9458, -195.0432],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0094, device='cuda:0', dtype=torch.float64)
tensor([-198.1097, -193.5923, -192.2607, -194.0056, -195.1001],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0083, device='cuda:0', dtype=torch.float64)
tensor([-198.1823, -193.5845, -192.3075, -194.1456, -195.1305],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0095, device='cuda:0', dtype=torch.float64)
tensor([-198.1913, -193.5948, -192.4318, -194.2984, -195.0927],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0094, device='cuda:0', dtype=torch.float64)
tensor([-198.1915, -193.5882, -192.6347, -194.5358, -195.0445],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0082, device='cuda:0', dtype=torch.float64)
tensor([-198.0886, -193.5940, -193.0385, -194.8590, -194.8984],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0084, device='cuda:0', dtype=torch.float64)
tensor([-197.9827, -193.6049, -193.2916, -195.0154, -194.7870],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0088, device='cuda:0', dtype=torch.float64)
tensor([-197.8389, -193.6175, -193.4808, -195.0570, -194.6669],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0102, device='cuda:0', dtype=torch.float64)
tensor([-197.7307, -193.6330, -193.6018, -195.0763, -194.5636],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0076, device='cuda:0', dtype=torch.float64)
tensor([-197.5960, -193.6564, -193.8205, -195.1612, -194.4228],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0113, device='cuda:0', dtype=torch.float64)
tensor([-197.4662, -193.6524, -193.9668, -195.1761, -194.3083],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0091, device='cuda:0', dtype=torch.float64)
tensor([-197.4028, -193.6338, -194.0581, -195.2002, -194.2591],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0099, device='cuda:0', dtype=torch.float64)
tensor([-197.3406, -193.6223, -194.1322, -195.1937, -194.2319],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0086, device='cuda:0', dtype=torch.float64)
tensor([-197.2891, -193.5833, -194.1557, -195.1655, -194.2128],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0086, device='cuda:0', dtype=torch.float64)
tensor([-197.2528, -193.5447, -193.9959, -194.9517, -194.2496],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0100, device='cuda:0', dtype=torch.float64)
tensor([-197.1983, -193.5064, -193.8223, -194.6853, -194.2796],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0091, device='cuda:0', dtype=torch.float64)
tensor([-197.1941, -193.4628, -193.5375, -194.3633, -194.3559],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0085, device='cuda:0', dtype=torch.float64)
tensor([-197.1946, -193.4437, -193.3750, -194.1921, -194.4112],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0085, device='cuda:0', dtype=torch.float64)
tensor([-197.2846, -193.4152, -193.1597, -194.0747, -194.5378],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0103, device='cuda:0', dtype=torch.float64)
tensor([-197.3371, -193.3852, -192.9342, -193.8904, -194.6601],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0082, device='cuda:0', dtype=torch.float64)
tensor([-197.4185, -193.3609, -192.7058, -193.7342, -194.7833],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0104, device='cuda:0', dtype=torch.float64)
tensor([-197.4955, -193.3558, -192.6430, -193.7763, -194.8808],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0098, device='cuda:0', dtype=torch.float64)
tensor([-197.5658, -193.3557, -192.6801, -193.9365, -194.9522],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0086, device='cuda:0', dtype=torch.float64)
tensor([-197.6147, -193.3660, -192.7927, -194.1661, -195.0053],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0084, device='cuda:0', dtype=torch.float64)
tensor([-197.6632, -193.3755, -192.8595, -194.3540, -195.0524],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0092, device='cuda:0', dtype=torch.float64)
tensor([-197.6524, -193.4071, -192.9758, -194.5053, -195.0549],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0082, device='cuda:0', dtype=torch.float64)
tensor([-197.6137, -193.4352, -193.1099, -194.6247, -195.0286],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0101, device='cuda:0', dtype=torch.float64)
tensor([-197.5896, -193.4741, -193.2284, -194.7350, -195.0137],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0089, device='cuda:0', dtype=torch.float64)
tensor([-197.6007, -193.5036, -193.3716, -194.9195, -195.0216],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0098, device='cuda:0', dtype=torch.float64)
tensor([-197.5382, -193.5549, -193.5758, -195.0756, -194.9571],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0091, device='cuda:0', dtype=torch.float64)
tensor([-197.5457, -193.5903, -193.6612, -195.1927, -194.9660],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0099, device='cuda:0', dtype=torch.float64)
tensor([-197.5616, -193.6212, -193.8049, -195.3796, -194.9682],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0096, device='cuda:0', dtype=torch.float64)
tensor([-197.5937, -193.6546, -193.9067, -195.5673, -194.9855],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0089, device='cuda:0', dtype=torch.float64)
tensor([-197.5983, -193.6727, -194.0039, -195.7127, -194.9760],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0099, device='cuda:0', dtype=torch.float64)
tensor([-197.5831, -193.6736, -193.9629, -195.6945, -194.9958],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0088, device='cuda:0', dtype=torch.float64)
tensor([-197.6235, -193.6837, -193.8451, -195.6819, -195.0478],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0089, device='cuda:0', dtype=torch.float64)
tensor([-197.6538, -193.7227, -193.6686, -195.5854, -195.1200],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0088, device='cuda:0', dtype=torch.float64)
tensor([-197.6594, -193.7699, -193.4078, -195.3680, -195.1996],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0086, device='cuda:0', dtype=torch.float64)
tensor([-197.6084, -193.8121, -193.1540, -195.0847, -195.2227],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0097, device='cuda:0', dtype=torch.float64)
tensor([-197.5512, -193.8466, -192.8002, -194.6864, -195.2683],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0097, device='cuda:0', dtype=torch.float64)
tensor([-197.5206, -193.8917, -192.4159, -194.2669, -195.3515],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0086, device='cuda:0', dtype=torch.float64)
tensor([-197.4268, -193.9338, -192.0925, -193.8238, -195.3756],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0094, device='cuda:0', dtype=torch.float64)
tensor([-197.2829, -193.9849, -191.9054, -193.4551, -195.3333],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0095, device='cuda:0', dtype=torch.float64)
tensor([-197.1521, -194.0255, -191.8461, -193.2566, -195.2783],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0101, device='cuda:0', dtype=torch.float64)
tensor([-196.9898, -194.0524, -192.0438, -193.2789, -195.1522],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0088, device='cuda:0', dtype=torch.float64)
tensor([-196.7755, -194.0643, -192.3380, -193.3220, -194.9766],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0092, device='cuda:0', dtype=torch.float64)
tensor([-196.6541, -194.0596, -192.7686, -193.6392, -194.8306],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0089, device='cuda:0', dtype=torch.float64)
tensor([-196.5456, -194.0512, -193.1535, -193.9179, -194.6846],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0078, device='cuda:0', dtype=torch.float64)
tensor([-196.5260, -194.0570, -193.6045, -194.3717, -194.5862],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0093, device='cuda:0', dtype=torch.float64)
tensor([-196.6133, -194.0371, -193.9254, -194.8105, -194.5697],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0081, device='cuda:0', dtype=torch.float64)
tensor([-196.7282, -194.0024, -194.0829, -195.1034, -194.6059],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0093, device='cuda:0', dtype=torch.float64)
tensor([-196.8390, -193.9398, -194.1270, -195.2774, -194.6798],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0092, device='cuda:0', dtype=torch.float64)
tensor([-196.9136, -193.8735, -194.1120, -195.3601, -194.7549],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0084, device='cuda:0', dtype=torch.float64)
tensor([-196.9800, -193.8106, -194.1095, -195.4486, -194.7971],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0091, device='cuda:0', dtype=torch.float64)
tensor([-197.0351, -193.7551, -194.0414, -195.4438, -194.8536],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0089, device='cuda:0', dtype=torch.float64)
tensor([-197.1184, -193.6837, -193.9157, -195.4234, -194.9271],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0100, device='cuda:0', dtype=torch.float64)
tensor([-197.0395, -193.6143, -193.8296, -195.2219, -194.8922],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0080, device='cuda:0', dtype=torch.float64)
tensor([-196.9349, -193.5559, -193.7509, -194.9927, -194.8295],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0077, device='cuda:0', dtype=torch.float64)
tensor([-196.8631, -193.4874, -193.6383, -194.7651, -194.7907],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0104, device='cuda:0', dtype=torch.float64)
tensor([-196.8244, -193.4636, -193.6018, -194.6451, -194.7580],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0099, device='cuda:0', dtype=torch.float64)
tensor([-196.7616, -193.4197, -193.5780, -194.5054, -194.6965],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0102, device='cuda:0', dtype=torch.float64)
tensor([-196.7195, -193.3809, -193.5356, -194.3709, -194.6514],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0091, device='cuda:0', dtype=torch.float64)
tensor([-196.7501, -193.3449, -193.6160, -194.4723, -194.6263],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0098, device='cuda:0', dtype=torch.float64)
tensor([-196.7973, -193.3090, -193.6671, -194.5685, -194.6123],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0089, device='cuda:0', dtype=torch.float64)
tensor([-196.8412, -193.2899, -193.7118, -194.6603, -194.6072],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0099, device='cuda:0', dtype=torch.float64)
tensor([-196.8547, -193.2873, -193.7181, -194.6877, -194.5884],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0116, device='cuda:0', dtype=torch.float64)
tensor([-196.8581, -193.2901, -193.6776, -194.6392, -194.5727],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0088, device='cuda:0', dtype=torch.float64)
tensor([-196.8857, -193.2977, -193.6269, -194.5934, -194.5811],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0095, device='cuda:0', dtype=torch.float64)
tensor([-196.8696, -193.3099, -193.4848, -194.4025, -194.5980],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0090, device='cuda:0', dtype=torch.float64)
tensor([-196.8383, -193.3357, -193.3100, -194.1516, -194.6138],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0084, device='cuda:0', dtype=torch.float64)
tensor([-196.8617, -193.3694, -193.1036, -193.9336, -194.6549],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0086, device='cuda:0', dtype=torch.float64)
tensor([-196.8697, -193.4178, -192.8986, -193.7092, -194.7030],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0088, device='cuda:0', dtype=torch.float64)
tensor([-196.8633, -193.4475, -192.7999, -193.5877, -194.7137],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0097, device='cuda:0', dtype=torch.float64)
tensor([-196.8641, -193.4664, -192.6473, -193.4001, -194.7423],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0089, device='cuda:0', dtype=torch.float64)
tensor([-196.8591, -193.4714, -192.5994, -193.3302, -194.7410],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0105, device='cuda:0', dtype=torch.float64)
tensor([-196.9144, -193.4621, -192.5883, -193.3806, -194.7715],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0090, device='cuda:0', dtype=torch.float64)
tensor([-196.9356, -193.4300, -192.5831, -193.4047, -194.7700],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0077, device='cuda:0', dtype=torch.float64)
tensor([-196.9927, -193.4062, -192.6540, -193.5641, -194.7793],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0097, device='cuda:0', dtype=torch.float64)
tensor([-197.0864, -193.3801, -192.7392, -193.7834, -194.7786],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0096, device='cuda:0', dtype=torch.float64)
tensor([-197.1978, -193.3412, -192.6318, -193.8234, -194.8653],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0111, device='cuda:0', dtype=torch.float64)
tensor([-197.3339, -193.3155, -192.5639, -193.9475, -194.9501],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0099, device='cuda:0', dtype=torch.float64)
tensor([-197.3958, -193.2857, -192.4953, -193.9770, -194.9918],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0093, device='cuda:0', dtype=torch.float64)
tensor([-197.4413, -193.2393, -192.5647, -194.1573, -194.9639],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0095, device='cuda:0', dtype=torch.float64)
tensor([-197.5283, -193.2047, -192.6265, -194.3861, -194.9689],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0103, device='cuda:0', dtype=torch.float64)
tensor([-197.4999, -193.1643, -192.8035, -194.5903, -194.8717],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0088, device='cuda:0', dtype=torch.float64)
tensor([-197.4656, -193.1516, -193.0371, -194.8384, -194.7656],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0086, device='cuda:0', dtype=torch.float64)
tensor([-197.3633, -193.1498, -193.3060, -195.0324, -194.6211],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0085, device='cuda:0', dtype=torch.float64)
tensor([-197.2791, -193.1420, -193.4295, -195.0888, -194.5245],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0097, device='cuda:0', dtype=torch.float64)
tensor([-197.1245, -193.1439, -193.4045, -194.8794, -194.4071],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0075, device='cuda:0', dtype=torch.float64)
tensor([-196.9707, -193.1651, -193.3603, -194.6450, -194.3129],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0088, device='cuda:0', dtype=torch.float64)
tensor([-196.8641, -193.1574, -193.1798, -194.3413, -194.2904],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0085, device='cuda:0', dtype=torch.float64)
tensor([-196.7730, -193.1571, -192.9415, -194.0313, -194.2842],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0098, device='cuda:0', dtype=torch.float64)
tensor([-196.6716, -193.1296, -192.7585, -193.7464, -194.2557],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0081, device='cuda:0', dtype=torch.float64)
tensor([-196.5575, -193.1157, -192.6424, -193.5090, -194.2051],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0090, device='cuda:0', dtype=torch.float64)
tensor([-196.4523, -193.1182, -192.6921, -193.4570, -194.1318],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0098, device='cuda:0', dtype=torch.float64)
tensor([-196.3406, -193.1489, -192.7939, -193.4300, -194.0514],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0106, device='cuda:0', dtype=torch.float64)
tensor([-196.2341, -193.1906, -193.0249, -193.5428, -193.9503],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0089, device='cuda:0', dtype=torch.float64)
tensor([-196.1322, -193.2251, -193.2548, -193.6748, -193.8410],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0101, device='cuda:0', dtype=torch.float64)
tensor([-196.0792, -193.2414, -193.4265, -193.8117, -193.7590],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0089, device='cuda:0', dtype=torch.float64)
tensor([-196.0273, -193.2351, -193.4910, -193.8296, -193.7134],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0094, device='cuda:0', dtype=torch.float64)
tensor([-196.0139, -193.2183, -193.4573, -193.8027, -193.7253],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0098, device='cuda:0', dtype=torch.float64)
tensor([-196.0584, -193.1667, -193.3386, -193.7664, -193.7833],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0079, device='cuda:0', dtype=torch.float64)
tensor([-196.1243, -193.1262, -193.1340, -193.6801, -193.8948],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0093, device='cuda:0', dtype=torch.float64)
tensor([-196.2675, -193.1035, -193.0513, -193.8003, -194.0187],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0097, device='cuda:0', dtype=torch.float64)
tensor([-196.4121, -193.0593, -192.9881, -193.9351, -194.1396],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0084, device='cuda:0', dtype=torch.float64)
tensor([-196.5272, -193.0248, -192.8336, -193.9401, -194.2833],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0095, device='cuda:0', dtype=torch.float64)
tensor([-196.7192, -192.9939, -192.7253, -194.0990, -194.4701],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0105, device='cuda:0', dtype=torch.float64)
tensor([-196.8702, -192.9431, -192.6431, -194.2396, -194.6153],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0094, device='cuda:0', dtype=torch.float64)
tensor([-197.0217, -192.8991, -192.4906, -194.3159, -194.7860],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0090, device='cuda:0', dtype=torch.float64)
tensor([-197.1344, -192.8717, -192.3216, -194.3148, -194.9519],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0097, device='cuda:0', dtype=torch.float64)
tensor([-197.2265, -192.8594, -192.2163, -194.3540, -195.0800],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0098, device='cuda:0', dtype=torch.float64)
tensor([-197.2473, -192.8788, -192.1498, -194.3491, -195.1569],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0095, device='cuda:0', dtype=torch.float64)
tensor([-197.2719, -192.9214, -192.0397, -194.2871, -195.2622],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0092, device='cuda:0', dtype=torch.float64)
tensor([-197.2599, -192.9823, -192.0513, -194.3263, -195.3063],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0096, device='cuda:0', dtype=torch.float64)
tensor([-197.2360, -193.0458, -192.1110, -194.3844, -195.3254],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0086, device='cuda:0', dtype=torch.float64)
tensor([-197.2023, -193.0984, -192.1908, -194.4329, -195.3165],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0093, device='cuda:0', dtype=torch.float64)
tensor([-197.0969, -193.1508, -192.2672, -194.3768, -195.2558],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0107, device='cuda:0', dtype=torch.float64)
tensor([-196.9689, -193.1837, -192.3811, -194.3213, -195.1655],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0088, device='cuda:0', dtype=torch.float64)
tensor([-196.7991, -193.1956, -192.5207, -194.2256, -195.0505],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0092, device='cuda:0', dtype=torch.float64)
tensor([-196.6730, -193.2107, -192.6426, -194.1761, -194.9619],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0099, device='cuda:0', dtype=torch.float64)
tensor([-196.6221, -193.2295, -192.7700, -194.2363, -194.9190],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0088, device='cuda:0', dtype=torch.float64)
tensor([-196.5583, -193.2290, -192.9197, -194.3071, -194.8354],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0107, device='cuda:0', dtype=torch.float64)
tensor([-196.5307, -193.2291, -193.0276, -194.3647, -194.7934],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0096, device='cuda:0', dtype=torch.float64)
tensor([-196.5347, -193.2266, -193.2106, -194.5339, -194.7515],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0076, device='cuda:0', dtype=torch.float64)
tensor([-196.5163, -193.2084, -193.3710, -194.6351, -194.6878],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0084, device='cuda:0', dtype=torch.float64)
tensor([-196.4471, -193.1965, -193.4850, -194.6284, -194.6205],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0090, device='cuda:0', dtype=torch.float64)
tensor([-196.4177, -193.1751, -193.3851, -194.4726, -194.6551],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0080, device='cuda:0', dtype=torch.float64)
tensor([-196.4022, -193.1408, -193.2402, -194.2915, -194.6918],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0089, device='cuda:0', dtype=torch.float64)
tensor([-196.3688, -193.1226, -193.2627, -194.2643, -194.6765],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0089, device='cuda:0', dtype=torch.float64)
tensor([-196.3122, -193.0997, -193.1964, -194.1129, -194.6929],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0087, device='cuda:0', dtype=torch.float64)
tensor([-196.2169, -193.0840, -193.0593, -193.8498, -194.7083],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0082, device='cuda:0', dtype=torch.float64)
tensor([-196.1277, -193.0447, -192.8658, -193.5556, -194.7318],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0079, device='cuda:0', dtype=torch.float64)
tensor([-196.1058, -193.0155, -192.7557, -193.4379, -194.7594],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0094, device='cuda:0', dtype=torch.float64)
tensor([-196.0968, -192.9698, -192.5865, -193.2853, -194.8071],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0083, device='cuda:0', dtype=torch.float64)
tensor([-196.1244, -192.9376, -192.5225, -193.2916, -194.8515],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0100, device='cuda:0', dtype=torch.float64)
tensor([-196.1785, -192.9143, -192.4914, -193.3471, -194.9004],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0083, device='cuda:0', dtype=torch.float64)
tensor([-196.2864, -192.8969, -192.4941, -193.5144, -194.9813],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0093, device='cuda:0', dtype=torch.float64)
tensor([-196.3577, -192.8733, -192.5239, -193.6709, -195.0271],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0088, device='cuda:0', dtype=torch.float64)
tensor([-196.3956, -192.8739, -192.4598, -193.6946, -195.0709],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0093, device='cuda:0', dtype=torch.float64)
tensor([-196.4506, -192.8862, -192.4332, -193.7810, -195.1247],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0090, device='cuda:0', dtype=torch.float64)
tensor([-196.4819, -192.8826, -192.4257, -193.8512, -195.1559],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0083, device='cuda:0', dtype=torch.float64)
tensor([-196.4899, -192.8596, -192.4351, -193.9201, -195.1778],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0088, device='cuda:0', dtype=torch.float64)
tensor([-196.4304, -192.8419, -192.4052, -193.8679, -195.1548],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0104, device='cuda:0', dtype=torch.float64)
tensor([-196.3903, -192.8253, -192.2578, -193.7348, -195.1446],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0099, device='cuda:0', dtype=torch.float64)
tensor([-196.2938, -192.8203, -192.0951, -193.5060, -195.0988],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0088, device='cuda:0', dtype=torch.float64)
tensor([-196.2201, -192.8184, -192.0193, -193.3991, -195.0472],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0098, device='cuda:0', dtype=torch.float64)
tensor([-196.1499, -192.8132, -192.0188, -193.3609, -194.9761],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0088, device='cuda:0', dtype=torch.float64)
tensor([-196.0719, -192.8045, -192.0349, -193.3316, -194.9088],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0095, device='cuda:0', dtype=torch.float64)
tensor([-195.9693, -192.7893, -191.9942, -193.1986, -194.8475],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0099, device='cuda:0', dtype=torch.float64)
tensor([-195.8756, -192.7808, -192.0669, -193.1723, -194.7572],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0087, device='cuda:0', dtype=torch.float64)
tensor([-195.8286, -192.7514, -191.9903, -193.0616, -194.7287],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0098, device='cuda:0', dtype=torch.float64)
tensor([-195.8152, -192.7176, -191.9911, -193.0614, -194.7043],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0101, device='cuda:0', dtype=torch.float64)
tensor([-195.8194, -192.7036, -192.2183, -193.3263, -194.6291],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0093, device='cuda:0', dtype=torch.float64)
tensor([-195.7476, -192.6976, -192.4591, -193.4893, -194.5024],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0093, device='cuda:0', dtype=torch.float64)
tensor([-195.7294, -192.7195, -192.8011, -193.8148, -194.3645],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0083, device='cuda:0', dtype=torch.float64)
tensor([-195.6898, -192.7186, -193.1898, -194.1580, -194.2000],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0075, device='cuda:0', dtype=torch.float64)
tensor([-195.6769, -192.7089, -193.4724, -194.4228, -194.0760],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0085, device='cuda:0', dtype=torch.float64)
tensor([-195.6575, -192.7035, -193.7201, -194.6268, -193.9572],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0089, device='cuda:0', dtype=torch.float64)
tensor([-195.6904, -192.6826, -193.8116, -194.7567, -193.9027],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0089, device='cuda:0', dtype=torch.float64)
tensor([-195.7074, -192.6521, -193.7697, -194.7341, -193.8689],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0091, device='cuda:0', dtype=torch.float64)
tensor([-195.7139, -192.6119, -193.6961, -194.6900, -193.8348],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0101, device='cuda:0', dtype=torch.float64)
tensor([-195.7104, -192.5652, -193.5968, -194.6158, -193.7925],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0090, device='cuda:0', dtype=torch.float64)
tensor([-195.7131, -192.5112, -193.4898, -194.5241, -193.7592],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0095, device='cuda:0', dtype=torch.float64)
tensor([-195.7038, -192.4534, -193.2237, -194.2556, -193.7705],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0085, device='cuda:0', dtype=torch.float64)
tensor([-195.7071, -192.3678, -192.8425, -193.9012, -193.8248],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0104, device='cuda:0', dtype=torch.float64)
tensor([-195.6896, -192.2882, -192.4211, -193.4812, -193.8943],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0091, device='cuda:0', dtype=torch.float64)
tensor([-195.7212, -192.2189, -192.0571, -193.1796, -193.9771],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0087, device='cuda:0', dtype=torch.float64)
tensor([-195.7286, -192.1380, -191.7544, -192.9198, -194.0209],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0083, device='cuda:0', dtype=torch.float64)
tensor([-195.7376, -192.0361, -191.5803, -192.7785, -194.0153],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0087, device='cuda:0', dtype=torch.float64)
tensor([-195.7804, -191.9549, -191.3779, -192.6310, -194.0493],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0113, device='cuda:0', dtype=torch.float64)
tensor([-195.7326, -191.8855, -191.3621, -192.5293, -193.9938],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0090, device='cuda:0', dtype=torch.float64)
tensor([-195.7695, -191.8351, -191.3229, -192.5209, -194.0156],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0103, device='cuda:0', dtype=torch.float64)
tensor([-195.7303, -191.7814, -191.4886, -192.6451, -193.9368],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0092, device='cuda:0', dtype=torch.float64)
tensor([-195.6888, -191.7477, -191.7127, -192.8272, -193.8616],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0095, device='cuda:0', dtype=torch.float64)
tensor([-195.6716, -191.7491, -191.9939, -193.0984, -193.8112],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0091, device='cuda:0', dtype=torch.float64)
tensor([-195.6512, -191.7759, -192.3546, -193.4466, -193.7381],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0089, device='cuda:0', dtype=torch.float64)
tensor([-195.6050, -191.8130, -192.6568, -193.7072, -193.6256],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0092, device='cuda:0', dtype=torch.float64)
tensor([-195.5814, -191.8568, -192.8809, -193.9227, -193.5505],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0107, device='cuda:0', dtype=torch.float64)
tensor([-195.5701, -191.9082, -193.0253, -194.0882, -193.5092],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0099, device='cuda:0', dtype=torch.float64)
tensor([-195.6068, -191.9517, -193.0418, -194.1840, -193.5500],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0107, device='cuda:0', dtype=torch.float64)
tensor([-195.6861, -191.9820, -192.9875, -194.2486, -193.6287],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0088, device='cuda:0', dtype=torch.float64)
tensor([-195.7388, -192.0135, -193.0018, -194.3402, -193.6618],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0097, device='cuda:0', dtype=torch.float64)
tensor([-195.7763, -192.0264, -192.9909, -194.3738, -193.6767],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0093, device='cuda:0', dtype=torch.float64)
tensor([-195.8589, -192.0267, -192.9014, -194.3711, -193.7496],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0095, device='cuda:0', dtype=torch.float64)
tensor([-195.9272, -192.0086, -192.7701, -194.3134, -193.8048],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0097, device='cuda:0', dtype=torch.float64)
tensor([-196.0352, -191.9814, -192.5524, -194.2097, -193.9031],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0090, device='cuda:0', dtype=torch.float64)
tensor([-196.0805, -191.9534, -192.3043, -193.9903, -193.9700],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0100, device='cuda:0', dtype=torch.float64)
tensor([-196.1158, -191.9191, -192.0493, -193.7641, -194.0357],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0089, device='cuda:0', dtype=torch.float64)
tensor([-196.0566, -191.9030, -191.8816, -193.5127, -194.0350],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0102, device='cuda:0', dtype=torch.float64)
tensor([-195.9922, -191.8734, -191.6488, -193.1805, -194.0278],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0084, device='cuda:0', dtype=torch.float64)
tensor([-195.8748, -191.8396, -191.5131, -192.8917, -193.9610],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0102, device='cuda:0', dtype=torch.float64)
tensor([-195.7175, -191.8163, -191.5060, -192.6576, -193.8374],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0095, device='cuda:0', dtype=torch.float64)
tensor([-195.5340, -191.7825, -191.6611, -192.5508, -193.6516],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0094, device='cuda:0', dtype=torch.float64)
tensor([-195.3425, -191.7632, -191.8610, -192.4671, -193.4682],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0101, device='cuda:0', dtype=torch.float64)
tensor([-195.2624, -191.7328, -192.0020, -192.4584, -193.3638],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0099, device='cuda:0', dtype=torch.float64)
tensor([-195.2247, -191.7249, -192.0418, -192.4068, -193.3121],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0098, device='cuda:0', dtype=torch.float64)
tensor([-195.2187, -191.7275, -191.9114, -192.2448, -193.3326],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0084, device='cuda:0', dtype=torch.float64)
tensor([-195.2720, -191.7319, -191.7956, -192.1860, -193.3996],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0086, device='cuda:0', dtype=torch.float64)
tensor([-195.3407, -191.7320, -191.9050, -192.3860, -193.4106],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0102, device='cuda:0', dtype=torch.float64)
tensor([-195.4522, -191.7305, -192.0412, -192.6562, -193.4410],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0090, device='cuda:0', dtype=torch.float64)
tensor([-195.5537, -191.7095, -192.1016, -192.8356, -193.4768],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0093, device='cuda:0', dtype=torch.float64)
tensor([-195.5796, -191.6581, -192.1368, -192.8971, -193.4641],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0090, device='cuda:0', dtype=torch.float64)
tensor([-195.5773, -191.5853, -192.0486, -192.8041, -193.4586],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0099, device='cuda:0', dtype=torch.float64)
tensor([-195.5471, -191.5150, -191.9993, -192.7250, -193.4389],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0098, device='cuda:0', dtype=torch.float64)
tensor([-195.4998, -191.4711, -191.9736, -192.6638, -193.4207],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0094, device='cuda:0', dtype=torch.float64)
tensor([-195.4991, -191.4236, -191.9162, -192.6294, -193.4214],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0104, device='cuda:0', dtype=torch.float64)
tensor([-195.5323, -191.3811, -191.7978, -192.5742, -193.4633],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0089, device='cuda:0', dtype=torch.float64)
tensor([-195.5233, -191.3284, -191.7593, -192.5564, -193.4535],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0100, device='cuda:0', dtype=torch.float64)
tensor([-195.5222, -191.3078, -191.8384, -192.6634, -193.4239],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0089, device='cuda:0', dtype=torch.float64)
tensor([-195.4928, -191.2799, -191.8785, -192.6932, -193.3928],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0097, device='cuda:0', dtype=torch.float64)
tensor([-195.5017, -191.2367, -191.9065, -192.7571, -193.3792],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0091, device='cuda:0', dtype=torch.float64)
tensor([-195.5112, -191.2086, -192.0392, -192.9335, -193.3365],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0100, device='cuda:0', dtype=torch.float64)
tensor([-195.4822, -191.2058, -192.3007, -193.1776, -193.2564],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0109, device='cuda:0', dtype=torch.float64)
tensor([-195.4738, -191.2068, -192.4313, -193.3312, -193.2288],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0101, device='cuda:0', dtype=torch.float64)
tensor([-195.4361, -191.2220, -192.4636, -193.3385, -193.2230],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0090, device='cuda:0', dtype=torch.float64)
tensor([-195.4373, -191.2647, -192.4956, -193.3803, -193.2521],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0106, device='cuda:0', dtype=torch.float64)
tensor([-195.4782, -191.3041, -192.6303, -193.5592, -193.2991],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0105, device='cuda:0', dtype=torch.float64)
tensor([-195.5281, -191.3445, -192.5940, -193.5637, -193.3987],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0103, device='cuda:0', dtype=torch.float64)
tensor([-195.5554, -191.3723, -192.6301, -193.6047, -193.4564],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0099, device='cuda:0', dtype=torch.float64)
tensor([-195.5840, -191.3926, -192.5173, -193.4938, -193.5580],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0071, device='cuda:0', dtype=torch.float64)
tensor([-195.6064, -191.3998, -192.4272, -193.3981, -193.6296],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0088, device='cuda:0', dtype=torch.float64)
tensor([-195.6317, -191.3961, -192.4109, -193.3866, -193.6709],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0086, device='cuda:0', dtype=torch.float64)
tensor([-195.6195, -191.3812, -192.4378, -193.3759, -193.6448],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0080, device='cuda:0', dtype=torch.float64)
tensor([-195.6411, -191.3741, -192.4780, -193.4147, -193.6231],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0087, device='cuda:0', dtype=torch.float64)
tensor([-195.7004, -191.3686, -192.4779, -193.4701, -193.6478],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0099, device='cuda:0', dtype=torch.float64)
tensor([-195.7731, -191.3798, -192.4326, -193.4921, -193.6871],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0086, device='cuda:0', dtype=torch.float64)
tensor([-195.7738, -191.3873, -192.4523, -193.4832, -193.6664],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0092, device='cuda:0', dtype=torch.float64)
tensor([-195.8145, -191.3700, -192.4735, -193.5467, -193.6536],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0088, device='cuda:0', dtype=torch.float64)
tensor([-195.8064, -191.3447, -192.5406, -193.6047, -193.5944],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0087, device='cuda:0', dtype=torch.float64)
tensor([-195.7740, -191.3189, -192.5065, -193.5441, -193.5498],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0098, device='cuda:0', dtype=torch.float64)
tensor([-195.7509, -191.3185, -192.5606, -193.5827, -193.4873],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0082, device='cuda:0', dtype=torch.float64)
tensor([-195.6407, -191.3130, -192.4465, -193.3557, -193.4112],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0094, device='cuda:0', dtype=torch.float64)
tensor([-195.5080, -191.2991, -192.2565, -193.0318, -193.3291],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0084, device='cuda:0', dtype=torch.float64)
tensor([-195.4237, -191.2893, -192.1151, -192.8076, -193.2773],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0082, device='cuda:0', dtype=torch.float64)
tensor([-195.3275, -191.2907, -191.7986, -192.4023, -193.2702],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0093, device='cuda:0', dtype=torch.float64)
tensor([-195.3208, -191.2797, -191.6218, -192.2311, -193.2573],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0084, device='cuda:0', dtype=torch.float64)
tensor([-195.4206, -191.2730, -191.4921, -192.2411, -193.2968],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0100, device='cuda:0', dtype=torch.float64)
tensor([-195.5619, -191.2593, -191.4690, -192.4237, -193.3421],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0092, device='cuda:0', dtype=torch.float64)
tensor([-195.6151, -191.2410, -191.6229, -192.6618, -193.2854],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0098, device='cuda:0', dtype=torch.float64)
tensor([-195.7311, -191.2056, -191.7478, -192.9678, -193.2630],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0089, device='cuda:0', dtype=torch.float64)
tensor([-195.8960, -191.1596, -191.9286, -193.3726, -193.2416],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0088, device='cuda:0', dtype=torch.float64)
tensor([-196.0255, -191.1176, -192.0185, -193.6391, -193.2413],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0091, device='cuda:0', dtype=torch.float64)
tensor([-196.1338, -191.0906, -192.1281, -193.8934, -193.2388],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0089, device='cuda:0', dtype=torch.float64)
tensor([-196.1956, -191.0451, -192.1713, -194.0109, -193.2232],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0085, device='cuda:0', dtype=torch.float64)
tensor([-196.1696, -190.9935, -192.1507, -193.9649, -193.1843],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0098, device='cuda:0', dtype=torch.float64)
tensor([-196.0528, -190.9318, -191.9563, -193.6371, -193.1460],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0103, device='cuda:0', dtype=torch.float64)
tensor([-195.8361, -190.8684, -191.7022, -193.1123, -193.0636],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0089, device='cuda:0', dtype=torch.float64)
tensor([-195.6103, -190.8032, -191.2769, -192.3980, -193.0073],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0103, device='cuda:0', dtype=torch.float64)
tensor([-195.4345, -190.7477, -190.8425, -191.7350, -192.9643],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0115, device='cuda:0', dtype=torch.float64)
tensor([-195.2632, -190.7151, -190.5151, -191.2189, -192.9246],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0100, device='cuda:0', dtype=torch.float64)
tensor([-195.0603, -190.7077, -190.5488, -191.0354, -192.7680],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0103, device='cuda:0', dtype=torch.float64)
tensor([-194.8867, -190.7160, -190.7038, -190.9984, -192.6041],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0103, device='cuda:0', dtype=torch.float64)
tensor([-194.6925, -190.7531, -190.8184, -190.8978, -192.4518],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0093, device='cuda:0', dtype=torch.float64)
tensor([-194.5351, -190.7960, -190.9909, -190.8880, -192.3153],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0091, device='cuda:0', dtype=torch.float64)
tensor([-194.4509, -190.8547, -191.0771, -190.8756, -192.2477],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0097, device='cuda:0', dtype=torch.float64)
tensor([-194.4092, -190.8796, -191.1200, -190.8738, -192.2169],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0096, device='cuda:0', dtype=torch.float64)
tensor([-194.4028, -190.8805, -191.3593, -191.1048, -192.1433],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0086, device='cuda:0', dtype=torch.float64)
tensor([-194.4203, -190.8842, -191.5060, -191.2840, -192.1227],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0101, device='cuda:0', dtype=torch.float64)
tensor([-194.4964, -190.9226, -191.6856, -191.5560, -192.1325],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0095, device='cuda:0', dtype=torch.float64)
tensor([-194.7172, -190.9866, -191.8222, -191.9847, -192.2560],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0094, device='cuda:0', dtype=torch.float64)
tensor([-195.0179, -191.0441, -192.0034, -192.5797, -192.4061],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0095, device='cuda:0', dtype=torch.float64)
tensor([-195.2585, -191.0946, -191.9677, -192.9014, -192.5931],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0099, device='cuda:0', dtype=torch.float64)
tensor([-195.5101, -191.1510, -191.7156, -193.0159, -192.8504],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0096, device='cuda:0', dtype=torch.float64)
tensor([-195.7391, -191.2105, -191.5081, -193.1493, -193.0911],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0097, device='cuda:0', dtype=torch.float64)
tensor([-195.9467, -191.2617, -191.1976, -193.1659, -193.3436],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0098, device='cuda:0', dtype=torch.float64)
tensor([-196.0913, -191.2981, -190.8429, -193.0657, -193.5568],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0091, device='cuda:0', dtype=torch.float64)
tensor([-196.2302, -191.3435, -190.5213, -192.9767, -193.7908],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0101, device='cuda:0', dtype=torch.float64)
tensor([-196.2943, -191.3736, -190.2978, -192.8829, -193.9585],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0115, device='cuda:0', dtype=torch.float64)
tensor([-196.0731, -191.3791, -190.2090, -192.5679, -193.8858],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0095, device='cuda:0', dtype=torch.float64)
tensor([-195.7885, -191.3698, -190.2283, -192.2942, -193.7518],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0118, device='cuda:0', dtype=torch.float64)
tensor([-195.4669, -191.3545, -190.4748, -192.1803, -193.5416],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0130, device='cuda:0', dtype=torch.float64)
tensor([-195.1089, -191.3396, -190.6390, -191.9199, -193.3541],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0101, device='cuda:0', dtype=torch.float64)
tensor([-194.7596, -191.3385, -190.8407, -191.7006, -193.1888],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0109, device='cuda:0', dtype=torch.float64)
tensor([-194.3908, -191.3614, -191.2678, -191.6661, -192.9111],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0085, device='cuda:0', dtype=torch.float64)
tensor([-194.1184, -191.3804, -191.6384, -191.6954, -192.6889],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0103, device='cuda:0', dtype=torch.float64)
tensor([-193.8777, -191.4096, -192.0613, -191.8105, -192.4613],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0085, device='cuda:0', dtype=torch.float64)
tensor([-193.7094, -191.4202, -192.3924, -191.9300, -192.2744],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0086, device='cuda:0', dtype=torch.float64)
tensor([-193.6144, -191.4203, -192.6158, -192.0353, -192.1496],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0105, device='cuda:0', dtype=torch.float64)
tensor([-193.6251, -191.4091, -192.6909, -192.1369, -192.1123],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0095, device='cuda:0', dtype=torch.float64)
tensor([-193.6858, -191.3873, -192.6392, -192.1901, -192.1313],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0081, device='cuda:0', dtype=torch.float64)
tensor([-193.8136, -191.3373, -192.5714, -192.3203, -192.1734],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0076, device='cuda:0', dtype=torch.float64)
tensor([-193.9569, -191.2657, -192.4191, -192.4004, -192.2450],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0083, device='cuda:0', dtype=torch.float64)
tensor([-194.1498, -191.1977, -192.1786, -192.4523, -192.3571],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0100, device='cuda:0', dtype=torch.float64)
tensor([-194.3425, -191.1228, -191.8702, -192.4326, -192.5020],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0099, device='cuda:0', dtype=torch.float64)
tensor([-194.5148, -191.0715, -191.5179, -192.3231, -192.6628],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0095, device='cuda:0', dtype=torch.float64)
tensor([-194.6912, -191.0072, -191.0932, -192.1452, -192.8525],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0094, device='cuda:0', dtype=torch.float64)
tensor([-194.7509, -190.9466, -190.7916, -191.9352, -192.9440],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0089, device='cuda:0', dtype=torch.float64)
tensor([-194.7893, -190.9235, -190.6547, -191.8450, -192.9718],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0084, device='cuda:0', dtype=torch.float64)
tensor([-194.8162, -190.9056, -190.4862, -191.6988, -192.9869],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0099, device='cuda:0', dtype=torch.float64)
tensor([-194.8900, -190.8968, -190.3958, -191.6821, -192.9942],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0093, device='cuda:0', dtype=torch.float64)
tensor([-194.9806, -190.8759, -190.4204, -191.8094, -192.9746],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0096, device='cuda:0', dtype=torch.float64)
tensor([-195.0575, -190.8588, -190.5461, -192.0008, -192.9351],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0107, device='cuda:0', dtype=torch.float64)
tensor([-195.1161, -190.8536, -190.5092, -192.0196, -192.9389],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0099, device='cuda:0', dtype=torch.float64)
tensor([-195.1194, -190.8582, -190.6779, -192.1522, -192.8509],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0093, device='cuda:0', dtype=torch.float64)
tensor([-195.0828, -190.8615, -190.8675, -192.2578, -192.7269],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0110, device='cuda:0', dtype=torch.float64)
tensor([-195.0655, -190.8548, -191.0785, -192.4072, -192.6213],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0094, device='cuda:0', dtype=torch.float64)
tensor([-195.0409, -190.8467, -191.2622, -192.5066, -192.5204],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0093, device='cuda:0', dtype=torch.float64)
tensor([-195.0132, -190.8339, -191.4264, -192.5795, -192.4194],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0084, device='cuda:0', dtype=torch.float64)
tensor([-195.0139, -190.8311, -191.4765, -192.5778, -192.3767],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0082, device='cuda:0', dtype=torch.float64)
tensor([-194.9382, -190.8417, -191.5251, -192.4681, -192.3180],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0085, device='cuda:0', dtype=torch.float64)
tensor([-194.8977, -190.8283, -191.5467, -192.3683, -192.2872],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0090, device='cuda:0', dtype=torch.float64)
tensor([-194.8597, -190.8306, -191.5282, -192.2459, -192.2730],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0083, device='cuda:0', dtype=torch.float64)
tensor([-194.8670, -190.8317, -191.4238, -192.1071, -192.3127],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0099, device='cuda:0', dtype=torch.float64)
tensor([-194.9301, -190.8397, -191.1400, -191.8512, -192.4393],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0081, device='cuda:0', dtype=torch.float64)
tensor([-194.9744, -190.8537, -190.8336, -191.5626, -192.5785],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0091, device='cuda:0', dtype=torch.float64)
tensor([-195.0396, -190.8631, -190.4877, -191.2733, -192.7242],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0084, device='cuda:0', dtype=torch.float64)
tensor([-195.0863, -190.8675, -190.2091, -191.0245, -192.8477],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0118, device='cuda:0', dtype=torch.float64)
tensor([-195.1075, -190.8733, -190.3163, -191.1637, -192.8592],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0095, device='cuda:0', dtype=torch.float64)
tensor([-195.1446, -190.8852, -190.4987, -191.3899, -192.8656],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0084, device='cuda:0', dtype=torch.float64)
tensor([-195.1298, -190.9070, -190.6310, -191.5199, -192.8502],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0088, device='cuda:0', dtype=torch.float64)
tensor([-195.1247, -190.9226, -190.8266, -191.7343, -192.8159],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0082, device='cuda:0', dtype=torch.float64)
tensor([-195.0853, -190.9293, -190.9573, -191.8368, -192.7765],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0093, device='cuda:0', dtype=torch.float64)
tensor([-195.1810, -190.9095, -191.2052, -192.2202, -192.7558],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0099, device='cuda:0', dtype=torch.float64)
tensor([-195.2058, -190.9129, -191.4485, -192.5124, -192.6961],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0078, device='cuda:0', dtype=torch.float64)
tensor([-195.2880, -190.9063, -191.6231, -192.8045, -192.6833],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0085, device='cuda:0', dtype=torch.float64)
tensor([-195.2988, -190.9040, -191.6480, -192.8800, -192.6924],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0088, device='cuda:0', dtype=torch.float64)
tensor([-195.3317, -190.9197, -191.6039, -192.9016, -192.7546],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0112, device='cuda:0', dtype=torch.float64)
tensor([-195.3635, -190.9102, -191.5405, -192.9226, -192.7916],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0093, device='cuda:0', dtype=torch.float64)
tensor([-195.4012, -190.8835, -191.3893, -192.8703, -192.8669],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0085, device='cuda:0', dtype=torch.float64)
tensor([-195.3963, -190.8807, -191.1605, -192.6956, -192.9269],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0084, device='cuda:0', dtype=torch.float64)
tensor([-195.3920, -190.8845, -190.9674, -192.5368, -192.9714],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0088, device='cuda:0', dtype=torch.float64)
tensor([-195.3802, -190.8753, -190.8018, -192.3972, -192.9899],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0115, device='cuda:0', dtype=torch.float64)
tensor([-195.3438, -190.8949, -190.6571, -192.2415, -192.9729],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0094, device='cuda:0', dtype=torch.float64)
tensor([-195.2371, -190.8851, -190.5278, -192.0321, -192.8989],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0089, device='cuda:0', dtype=torch.float64)
tensor([-195.1269, -190.8623, -190.5036, -191.9127, -192.7793],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0103, device='cuda:0', dtype=torch.float64)
tensor([-194.9753, -190.8536, -190.4332, -191.6731, -192.6570],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0096, device='cuda:0', dtype=torch.float64)
tensor([-194.8236, -190.8223, -190.5204, -191.5764, -192.5045],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0099, device='cuda:0', dtype=torch.float64)
tensor([-194.6196, -190.8014, -190.5395, -191.3562, -192.3602],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0103, device='cuda:0', dtype=torch.float64)
tensor([-194.4666, -190.7720, -190.6256, -191.2524, -192.2287],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0083, device='cuda:0', dtype=torch.float64)
tensor([-194.2768, -190.7520, -190.8122, -191.2099, -192.0475],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0089, device='cuda:0', dtype=torch.float64)
tensor([-194.2150, -190.7385, -190.8333, -191.1704, -191.9692],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0091, device='cuda:0', dtype=torch.float64)
tensor([-194.2517, -190.7128, -190.9364, -191.3325, -191.9138],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0108, device='cuda:0', dtype=torch.float64)
tensor([-194.2179, -190.6946, -190.9868, -191.3690, -191.8554],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0083, device='cuda:0', dtype=torch.float64)
tensor([-194.1806, -190.6403, -191.0857, -191.4600, -191.7637],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0093, device='cuda:0', dtype=torch.float64)
tensor([-194.1727, -190.5966, -191.0661, -191.4455, -191.7247],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0091, device='cuda:0', dtype=torch.float64)
tensor([-194.1276, -190.5803, -191.1485, -191.4770, -191.6623],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0094, device='cuda:0', dtype=torch.float64)
tensor([-194.0260, -190.5789, -191.0319, -191.2512, -191.6172],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0089, device='cuda:0', dtype=torch.float64)
tensor([-193.9185, -190.5876, -190.8591, -190.9770, -191.5979],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0091, device='cuda:0', dtype=torch.float64)
tensor([-193.7978, -190.5965, -190.6503, -190.6703, -191.5876],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0081, device='cuda:0', dtype=torch.float64)
tensor([-193.7132, -190.6008, -190.4719, -190.4289, -191.5829],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0094, device='cuda:0', dtype=torch.float64)
tensor([-193.7110, -190.6014, -190.3185, -190.2990, -191.6123],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0088, device='cuda:0', dtype=torch.float64)
tensor([-193.7750, -190.5977, -190.1112, -190.2080, -191.6859],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0097, device='cuda:0', dtype=torch.float64)
tensor([-193.8466, -190.6068, -189.9472, -190.1637, -191.7679],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0079, device='cuda:0', dtype=torch.float64)
tensor([-193.9951, -190.6009, -189.8010, -190.2225, -191.8989],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0094, device='cuda:0', dtype=torch.float64)
tensor([-194.1140, -190.5927, -189.8853, -190.4569, -191.9411],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0110, device='cuda:0', dtype=torch.float64)
tensor([-194.2433, -190.5532, -190.1784, -190.9078, -191.9018],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0086, device='cuda:0', dtype=torch.float64)
tensor([-194.4099, -190.4974, -190.3002, -191.2351, -191.9425],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0111, device='cuda:0', dtype=torch.float64)
tensor([-194.6017, -190.4542, -190.3205, -191.5024, -192.0404],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0092, device='cuda:0', dtype=torch.float64)
tensor([-194.8202, -190.4108, -190.4261, -191.8810, -192.1330],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0082, device='cuda:0', dtype=torch.float64)
tensor([-195.0101, -190.3751, -190.5267, -192.2395, -192.2258],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0089, device='cuda:0', dtype=torch.float64)
tensor([-195.1304, -190.3336, -190.5800, -192.4588, -192.3130],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0085, device='cuda:0', dtype=torch.float64)
tensor([-195.2299, -190.3047, -190.4560, -192.4856, -192.4549],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0087, device='cuda:0', dtype=torch.float64)
tensor([-195.3860, -190.3053, -190.3028, -192.5481, -192.6424],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0107, device='cuda:0', dtype=torch.float64)
tensor([-195.4752, -190.3226, -189.9711, -192.3586, -192.8523],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0090, device='cuda:0', dtype=torch.float64)
tensor([-195.4852, -190.3409, -189.7197, -192.1680, -192.9737],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0085, device='cuda:0', dtype=torch.float64)
tensor([-195.4754, -190.3483, -189.5709, -192.0488, -193.0563],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0088, device='cuda:0', dtype=torch.float64)
tensor([-195.3992, -190.3730, -189.4952, -191.9118, -193.0655],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0100, device='cuda:0', dtype=torch.float64)
tensor([-195.2737, -190.3982, -189.3818, -191.6811, -193.0476],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0100, device='cuda:0', dtype=torch.float64)
tensor([-195.1263, -190.3691, -189.4236, -191.5467, -192.9668],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0095, device='cuda:0', dtype=torch.float64)
tensor([-194.8727, -190.3529, -189.5189, -191.3400, -192.7925],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0085, device='cuda:0', dtype=torch.float64)
tensor([-194.6342, -190.3282, -189.7158, -191.2618, -192.6144],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0106, device='cuda:0', dtype=torch.float64)
tensor([-194.4853, -190.2822, -190.0705, -191.4311, -192.4011],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0090, device='cuda:0', dtype=torch.float64)
tensor([-194.3444, -190.2459, -190.5008, -191.6654, -192.1649],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0089, device='cuda:0', dtype=torch.float64)
tensor([-194.2928, -190.2394, -190.8542, -191.9279, -192.0130],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0093, device='cuda:0', dtype=torch.float64)
tensor([-194.2522, -190.2432, -191.1643, -192.1568, -191.8982],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0092, device='cuda:0', dtype=torch.float64)
tensor([-194.2450, -190.2415, -191.3653, -192.3071, -191.8546],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0088, device='cuda:0', dtype=torch.float64)
tensor([-194.3631, -190.2494, -191.4551, -192.5115, -191.8954],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0090, device='cuda:0', dtype=torch.float64)
tensor([-194.4462, -190.2264, -191.3752, -192.5312, -191.9598],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0090, device='cuda:0', dtype=torch.float64)
tensor([-194.4626, -190.2211, -191.1976, -192.3790, -192.0459],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0086, device='cuda:0', dtype=torch.float64)
tensor([-194.4857, -190.2067, -191.0135, -192.2435, -192.1501],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0101, device='cuda:0', dtype=torch.float64)
tensor([-194.5224, -190.1958, -190.6735, -191.9725, -192.3257],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0088, device='cuda:0', dtype=torch.float64)
tensor([-194.5093, -190.1949, -190.4099, -191.7051, -192.4683],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0104, device='cuda:0', dtype=torch.float64)
tensor([-194.4800, -190.1798, -190.1739, -191.4618, -192.5720],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0097, device='cuda:0', dtype=torch.float64)
tensor([-194.4693, -190.1613, -189.9376, -191.2378, -192.6670],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0095, device='cuda:0', dtype=torch.float64)
tensor([-194.4641, -190.1351, -189.5629, -190.8997, -192.7917],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0106, device='cuda:0', dtype=torch.float64)
tensor([-194.4477, -190.1081, -189.4351, -190.8028, -192.8298],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0097, device='cuda:0', dtype=torch.float64)
tensor([-194.3926, -190.0731, -189.5090, -190.8373, -192.7796],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0085, device='cuda:0', dtype=torch.float64)
tensor([-194.2791, -190.0489, -189.7203, -190.9305, -192.6477],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0086, device='cuda:0', dtype=torch.float64)
tensor([-194.1749, -190.0349, -189.9602, -191.0759, -192.5020],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0096, device='cuda:0', dtype=torch.float64)
tensor([-194.1035, -190.0406, -190.0980, -191.1535, -192.4062],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0099, device='cuda:0', dtype=torch.float64)
tensor([-194.0698, -190.0717, -190.2620, -191.2993, -192.3273],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0093, device='cuda:0', dtype=torch.float64)
tensor([-193.9824, -190.1273, -190.4829, -191.4129, -192.1888],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0082, device='cuda:0', dtype=torch.float64)
tensor([-193.8649, -190.1698, -190.5816, -191.3996, -192.0852],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0092, device='cuda:0', dtype=torch.float64)
tensor([-193.7845, -190.2178, -190.6547, -191.4183, -192.0127],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0104, device='cuda:0', dtype=torch.float64)
tensor([-193.8108, -190.2345, -190.8286, -191.6519, -191.9669],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0077, device='cuda:0', dtype=torch.float64)
tensor([-193.8469, -190.2466, -191.0496, -191.9327, -191.9042],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0082, device='cuda:0', dtype=torch.float64)
tensor([-193.8663, -190.2596, -191.1509, -192.0788, -191.8878],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0097, device='cuda:0', dtype=torch.float64)
tensor([-193.8761, -190.2514, -191.2328, -192.1836, -191.8664],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0081, device='cuda:0', dtype=torch.float64)
tensor([-193.9513, -190.2250, -191.2587, -192.2989, -191.9107],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0103, device='cuda:0', dtype=torch.float64)
tensor([-193.9987, -190.2043, -191.0530, -192.1870, -192.0299],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0088, device='cuda:0', dtype=torch.float64)
tensor([-194.0781, -190.1490, -190.6731, -191.9564, -192.2101],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0089, device='cuda:0', dtype=torch.float64)
tensor([-194.2236, -190.1085, -190.3701, -191.8775, -192.4015],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0094, device='cuda:0', dtype=torch.float64)
tensor([-194.2821, -190.0654, -190.2893, -191.8857, -192.4732],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0082, device='cuda:0', dtype=torch.float64)
tensor([-194.3316, -190.0193, -190.1453, -191.8205, -192.5637],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0090, device='cuda:0', dtype=torch.float64)
tensor([-194.3563, -189.9485, -190.0814, -191.7901, -192.5958],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0087, device='cuda:0', dtype=torch.float64)
tensor([-194.3926, -189.8699, -190.0724, -191.8254, -192.5928],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0087, device='cuda:0', dtype=torch.float64)
tensor([-194.4472, -189.7962, -189.8654, -191.7086, -192.6587],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0099, device='cuda:0', dtype=torch.float64)
tensor([-194.4970, -189.7425, -189.8635, -191.7612, -192.6663],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0094, device='cuda:0', dtype=torch.float64)
tensor([-194.5470, -189.6962, -189.8830, -191.8223, -192.6909],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0101, device='cuda:0', dtype=torch.float64)
tensor([-194.5592, -189.7061, -189.8496, -191.7752, -192.7290],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0105, device='cuda:0', dtype=torch.float64)
tensor([-194.5543, -189.7319, -189.8743, -191.7902, -192.7240],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0090, device='cuda:0', dtype=torch.float64)
tensor([-194.4487, -189.7548, -190.0492, -191.8225, -192.5816],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0095, device='cuda:0', dtype=torch.float64)
tensor([-194.3217, -189.7738, -190.1044, -191.7428, -192.4559],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0103, device='cuda:0', dtype=torch.float64)
tensor([-194.2166, -189.8098, -189.9912, -191.5534, -192.4098],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0093, device='cuda:0', dtype=torch.float64)
tensor([-194.0426, -189.8223, -189.9021, -191.3344, -192.3193],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0085, device='cuda:0', dtype=torch.float64)
tensor([-193.8930, -189.8154, -189.9675, -191.2835, -192.1967],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0090, device='cuda:0', dtype=torch.float64)
tensor([-193.8055, -189.8000, -190.0277, -191.3066, -192.1007],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0098, device='cuda:0', dtype=torch.float64)
tensor([-193.7226, -189.7762, -190.0334, -191.2903, -192.0061],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0086, device='cuda:0', dtype=torch.float64)
tensor([-193.6522, -189.7648, -190.2039, -191.4290, -191.8745],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0102, device='cuda:0', dtype=torch.float64)
tensor([-193.6818, -189.7406, -190.2609, -191.5642, -191.8421],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0086, device='cuda:0', dtype=torch.float64)
tensor([-193.5935, -189.7115, -190.3172, -191.5525, -191.7604],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0090, device='cuda:0', dtype=torch.float64)
tensor([-193.5369, -189.6369, -190.3195, -191.5297, -191.7150],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0103, device='cuda:0', dtype=torch.float64)
tensor([-193.5643, -189.5993, -190.4411, -191.6885, -191.6869],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0100, device='cuda:0', dtype=torch.float64)
tensor([-193.6261, -189.5607, -190.6263, -191.9336, -191.6629],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0098, device='cuda:0', dtype=torch.float64)
tensor([-193.6376, -189.5072, -190.6621, -191.9734, -191.6756],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0082, device='cuda:0', dtype=torch.float64)
tensor([-193.6758, -189.4730, -190.6866, -192.0386, -191.6911],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0106, device='cuda:0', dtype=torch.float64)
tensor([-193.7786, -189.4818, -190.6664, -192.1358, -191.7793],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0095, device='cuda:0', dtype=torch.float64)
tensor([-193.8259, -189.4845, -190.3846, -191.9452, -191.9325],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0097, device='cuda:0', dtype=torch.float64)
tensor([-193.9346, -189.4909, -190.0008, -191.7224, -192.1179],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0078, device='cuda:0', dtype=torch.float64)
tensor([-193.9627, -189.4608, -189.7367, -191.5072, -192.2319],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0093, device='cuda:0', dtype=torch.float64)
tensor([-193.9540, -189.4399, -189.4681, -191.2464, -192.3347],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0096, device='cuda:0', dtype=torch.float64)
tensor([-193.9296, -189.4252, -189.0532, -190.8384, -192.4869],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0112, device='cuda:0', dtype=torch.float64)
tensor([-193.9360, -189.4051, -188.5483, -190.3781, -192.6841],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0102, device='cuda:0', dtype=torch.float64)
tensor([-194.0623, -189.4195, -188.1429, -190.1392, -192.9289],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0094, device='cuda:0', dtype=torch.float64)
tensor([-194.1919, -189.4235, -187.8699, -190.0380, -193.1183],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0101, device='cuda:0', dtype=torch.float64)
tensor([-194.2466, -189.4175, -187.7902, -190.0331, -193.1836],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0109, device='cuda:0', dtype=torch.float64)
tensor([-194.2386, -189.4357, -188.0759, -190.3147, -193.1271],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0098, device='cuda:0', dtype=torch.float64)
tensor([-194.1374, -189.4460, -188.5477, -190.6538, -192.9298],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0096, device='cuda:0', dtype=torch.float64)
tensor([-194.0161, -189.4539, -188.9928, -190.9475, -192.7072],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0093, device='cuda:0', dtype=torch.float64)
tensor([-193.9981, -189.4805, -189.3442, -191.2685, -192.5668],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0092, device='cuda:0', dtype=torch.float64)
tensor([-194.0076, -189.4962, -189.8177, -191.7205, -192.4106],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0092, device='cuda:0', dtype=torch.float64)
tensor([-194.0691, -189.4896, -190.3787, -192.2931, -192.2407],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0097, device='cuda:0', dtype=torch.float64)
tensor([-194.1019, -189.4793, -190.9465, -192.8348, -192.0284],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0088, device='cuda:0', dtype=torch.float64)
tensor([-194.1752, -189.4894, -191.3657, -193.2832, -191.9114],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0086, device='cuda:0', dtype=torch.float64)
tensor([-194.1731, -189.4788, -191.6440, -193.5258, -191.8006],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0093, device='cuda:0', dtype=torch.float64)
tensor([-194.1266, -189.4723, -191.8729, -193.6899, -191.6657],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0082, device='cuda:0', dtype=torch.float64)
tensor([-194.0559, -189.4560, -192.0072, -193.7461, -191.5508],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0087, device='cuda:0', dtype=torch.float64)
tensor([-194.0290, -189.4144, -191.8646, -193.6296, -191.5855],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0093, device='cuda:0', dtype=torch.float64)
tensor([-194.0315, -189.3473, -191.5461, -193.3941, -191.6847],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0103, device='cuda:0', dtype=torch.float64)
tensor([-193.9729, -189.3026, -191.0529, -192.9331, -191.8279],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0094, device='cuda:0', dtype=torch.float64)
tensor([-193.8359, -189.2586, -190.4972, -192.3358, -191.9510],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0082, device='cuda:0', dtype=torch.float64)
tensor([-193.7094, -189.1726, -189.8892, -191.7028, -192.0770],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0103, device='cuda:0', dtype=torch.float64)
tensor([-193.6543, -189.0793, -189.3147, -191.1746, -192.2237],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0098, device='cuda:0', dtype=torch.float64)
tensor([-193.5843, -188.9985, -188.8224, -190.6954, -192.3100],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0105, device='cuda:0', dtype=torch.float64)
tensor([-193.4268, -188.9342, -188.5253, -190.2859, -192.2643],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0104, device='cuda:0', dtype=torch.float64)
tensor([-193.3233, -188.9228, -188.2454, -189.9375, -192.2729],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0087, device='cuda:0', dtype=torch.float64)
tensor([-193.2543, -188.9206, -188.0948, -189.7405, -192.2610],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0095, device='cuda:0', dtype=torch.float64)
tensor([-193.1533, -188.9066, -188.1923, -189.7321, -192.1282],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0112, device='cuda:0', dtype=torch.float64)
tensor([-193.0565, -188.9136, -188.4212, -189.8644, -191.9502],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0114, device='cuda:0', dtype=torch.float64)
tensor([-192.9798, -188.9070, -188.7501, -190.1064, -191.7505],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0094, device='cuda:0', dtype=torch.float64)
tensor([-193.0328, -188.9310, -188.9405, -190.3712, -191.7020],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0094, device='cuda:0', dtype=torch.float64)
tensor([-193.1132, -188.9649, -189.0282, -190.5672, -191.7067],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0090, device='cuda:0', dtype=torch.float64)
tensor([-193.1666, -188.9867, -189.3628, -190.9453, -191.5944],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0109, device='cuda:0', dtype=torch.float64)
tensor([-193.2913, -188.9885, -189.5606, -191.2969, -191.5574],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0089, device='cuda:0', dtype=torch.float64)
tensor([-193.4053, -188.9492, -189.8295, -191.6852, -191.4805],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0111, device='cuda:0', dtype=torch.float64)
tensor([-193.4269, -188.9378, -189.9410, -191.8172, -191.4542],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0086, device='cuda:0', dtype=torch.float64)
tensor([-193.4654, -188.9191, -190.0156, -191.9328, -191.4527],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0086, device='cuda:0', dtype=torch.float64)
tensor([-193.4661, -188.8715, -190.0352, -191.9691, -191.4409],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0097, device='cuda:0', dtype=torch.float64)
tensor([-193.4681, -188.8157, -190.1293, -192.0557, -191.4070],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0086, device='cuda:0', dtype=torch.float64)
tensor([-193.4333, -188.7657, -190.0818, -191.9884, -191.3915],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0106, device='cuda:0', dtype=torch.float64)
tensor([-193.3613, -188.7221, -189.7052, -191.5674, -191.4656],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0079, device='cuda:0', dtype=torch.float64)
tensor([-193.2482, -188.6697, -189.4044, -191.1675, -191.4993],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0090, device='cuda:0', dtype=torch.float64)
tensor([-193.1276, -188.6034, -189.0931, -190.7418, -191.5223],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0097, device='cuda:0', dtype=torch.float64)
tensor([-193.0644, -188.5463, -188.7593, -190.3717, -191.5958],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0090, device='cuda:0', dtype=torch.float64)
tensor([-193.0270, -188.4773, -188.4158, -190.0175, -191.6721],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0099, device='cuda:0', dtype=torch.float64)
tensor([-192.9107, -188.4014, -188.3826, -189.8624, -191.6074],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0093, device='cuda:0', dtype=torch.float64)
tensor([-192.7695, -188.3672, -188.3431, -189.6658, -191.5307],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0089, device='cuda:0', dtype=torch.float64)
tensor([-192.7592, -188.3677, -188.3888, -189.6894, -191.5169],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0096, device='cuda:0', dtype=torch.float64)
tensor([-192.7900, -188.4191, -188.4173, -189.7346, -191.5388],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0088, device='cuda:0', dtype=torch.float64)
tensor([-192.7474, -188.4462, -188.5811, -189.8279, -191.4976],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0101, device='cuda:0', dtype=torch.float64)
tensor([-192.8139, -188.4323, -188.9231, -190.2005, -191.4127],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0088, device='cuda:0', dtype=torch.float64)
tensor([-192.8512, -188.4173, -189.2871, -190.5658, -191.3234],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0105, device='cuda:0', dtype=torch.float64)
tensor([-192.9237, -188.4279, -189.5505, -190.8871, -191.3017],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0107, device='cuda:0', dtype=torch.float64)
tensor([-192.8846, -188.4199, -189.6062, -190.9088, -191.2619],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0094, device='cuda:0', dtype=torch.float64)
tensor([-192.8885, -188.4565, -189.4851, -190.8109, -191.3161],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0095, device='cuda:0', dtype=torch.float64)
tensor([-192.9397, -188.4479, -189.4067, -190.8202, -191.3804],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0090, device='cuda:0', dtype=torch.float64)
tensor([-193.0207, -188.4386, -189.3849, -190.9239, -191.4320],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0087, device='cuda:0', dtype=torch.float64)
tensor([-193.1490, -188.4654, -189.2094, -190.9571, -191.5590],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0089, device='cuda:0', dtype=torch.float64)
tensor([-193.3168, -188.4840, -188.9806, -190.9942, -191.7136],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0086, device='cuda:0', dtype=torch.float64)
tensor([-193.4605, -188.4951, -188.7415, -191.0060, -191.8728],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0094, device='cuda:0', dtype=torch.float64)
tensor([-193.4942, -188.4992, -188.4357, -190.8156, -191.9932],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0085, device='cuda:0', dtype=torch.float64)
tensor([-193.4499, -188.4783, -188.1444, -190.5462, -192.0492],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0105, device='cuda:0', dtype=torch.float64)
tensor([-193.3723, -188.4244, -188.1603, -190.5026, -191.9759],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0090, device='cuda:0', dtype=torch.float64)
tensor([-193.2280, -188.3587, -188.3163, -190.5169, -191.8077],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0098, device='cuda:0', dtype=torch.float64)
tensor([-193.0529, -188.3193, -188.4810, -190.4808, -191.6451],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0099, device='cuda:0', dtype=torch.float64)
tensor([-192.9832, -188.3337, -188.4843, -190.4123, -191.6024],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0085, device='cuda:0', dtype=torch.float64)
tensor([-192.8700, -188.3526, -188.5718, -190.3803, -191.5271],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0082, device='cuda:0', dtype=torch.float64)
tensor([-192.8130, -188.3955, -188.5356, -190.3117, -191.5309],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0099, device='cuda:0', dtype=torch.float64)
tensor([-192.6629, -188.4230, -188.5670, -190.2144, -191.4223],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0096, device='cuda:0', dtype=torch.float64)
tensor([-192.4974, -188.4262, -188.7499, -190.2434, -191.2371],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0095, device='cuda:0', dtype=torch.float64)
tensor([-192.4345, -188.4278, -189.0030, -190.4328, -191.0767],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0100, device='cuda:0', dtype=torch.float64)
tensor([-192.4172, -188.4241, -189.0760, -190.4991, -190.9941],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0094, device='cuda:0', dtype=torch.float64)
tensor([-192.4644, -188.4233, -188.9360, -190.4526, -191.0374],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0101, device='cuda:0', dtype=torch.float64)
tensor([-192.5566, -188.4154, -188.8913, -190.5351, -191.0672],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0089, device='cuda:0', dtype=torch.float64)
tensor([-192.7138, -188.3949, -188.9449, -190.7849, -191.0772],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0094, device='cuda:0', dtype=torch.float64)
tensor([-192.9042, -188.3700, -188.9461, -191.0270, -191.1556],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0103, device='cuda:0', dtype=torch.float64)
tensor([-192.9954, -188.3539, -188.7686, -191.0041, -191.2501],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0111, device='cuda:0', dtype=torch.float64)
tensor([-193.0291, -188.3473, -188.6531, -190.9629, -191.2852],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0096, device='cuda:0', dtype=torch.float64)
tensor([-192.9298, -188.3642, -188.5618, -190.7915, -191.2411],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0087, device='cuda:0', dtype=torch.float64)
tensor([-192.8660, -188.3828, -188.4761, -190.6717, -191.2167],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0105, device='cuda:0', dtype=torch.float64)
tensor([-192.8617, -188.3982, -188.4086, -190.6208, -191.1900],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0090, device='cuda:0', dtype=torch.float64)
tensor([-192.8433, -188.4272, -188.3251, -190.5472, -191.1560],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0096, device='cuda:0', dtype=torch.float64)
tensor([-192.7348, -188.4285, -188.2174, -190.3535, -191.1114],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0112, device='cuda:0', dtype=torch.float64)
tensor([-192.6231, -188.4432, -187.9390, -189.9912, -191.1263],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0094, device='cuda:0', dtype=torch.float64)
tensor([-192.5149, -188.4496, -187.7932, -189.7282, -191.1032],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0084, device='cuda:0', dtype=torch.float64)
tensor([-192.3789, -188.4409, -187.8110, -189.5714, -191.0108],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0090, device='cuda:0', dtype=torch.float64)
tensor([-192.1317, -188.4450, -187.7557, -189.2238, -190.8824],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0104, device='cuda:0', dtype=torch.float64)
tensor([-191.8672, -188.4737, -187.8252, -188.9425, -190.7170],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0101, device='cuda:0', dtype=torch.float64)
tensor([-191.6694, -188.5232, -188.1241, -188.9304, -190.5409],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0098, device='cuda:0', dtype=torch.float64)
tensor([-191.5783, -188.5636, -188.4196, -189.0275, -190.4138],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0098, device='cuda:0', dtype=torch.float64)
tensor([-191.6157, -188.6137, -188.7277, -189.2555, -190.3567],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0088, device='cuda:0', dtype=torch.float64)
tensor([-191.6843, -188.6789, -188.8729, -189.3995, -190.3531],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0104, device='cuda:0', dtype=torch.float64)
tensor([-191.8574, -188.7503, -188.8442, -189.5003, -190.4650],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0085, device='cuda:0', dtype=torch.float64)
tensor([-192.1045, -188.8003, -188.9003, -189.7671, -190.5946],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0099, device='cuda:0', dtype=torch.float64)
tensor([-192.5299, -188.8466, -188.8009, -190.1074, -190.8826],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0097, device='cuda:0', dtype=torch.float64)
tensor([-192.8648, -188.8605, -188.6610, -190.3021, -191.1410],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0090, device='cuda:0', dtype=torch.float64)
tensor([-193.1310, -188.9221, -188.6339, -190.5163, -191.3193],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0098, device='cuda:0', dtype=torch.float64)
tensor([-193.4306, -189.0046, -188.5437, -190.7179, -191.5449],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0095, device='cuda:0', dtype=torch.float64)
tensor([-193.6533, -189.0547, -188.4462, -190.8504, -191.7252],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0075, device='cuda:0', dtype=torch.float64)
tensor([-193.7412, -189.0733, -188.4474, -190.9259, -191.7731],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0078, device='cuda:0', dtype=torch.float64)
tensor([-193.8071, -189.0697, -188.4867, -191.0145, -191.8073],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0083, device='cuda:0', dtype=torch.float64)
tensor([-193.8490, -189.0532, -188.4871, -191.0565, -191.8590],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0093, device='cuda:0', dtype=torch.float64)
tensor([-193.8963, -189.0258, -188.4256, -191.0461, -191.9351],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0101, device='cuda:0', dtype=torch.float64)
tensor([-193.8247, -188.9415, -188.3452, -190.9070, -191.9524],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0094, device='cuda:0', dtype=torch.float64)
tensor([-193.6892, -188.8132, -188.3485, -190.7730, -191.8985],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0092, device='cuda:0', dtype=torch.float64)
tensor([-193.4693, -188.7034, -188.3822, -190.5756, -191.8000],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0098, device='cuda:0', dtype=torch.float64)
tensor([-193.2246, -188.6122, -188.4403, -190.3633, -191.6906],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0085, device='cuda:0', dtype=torch.float64)
tensor([-192.9734, -188.5300, -188.6118, -190.2524, -191.5298],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0095, device='cuda:0', dtype=torch.float64)
tensor([-192.6927, -188.4419, -188.8023, -190.1389, -191.3496],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0098, device='cuda:0', dtype=torch.float64)
tensor([-192.4958, -188.3464, -188.9482, -190.0714, -191.2069],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0084, device='cuda:0', dtype=torch.float64)
tensor([-192.4740, -188.3044, -189.0239, -190.1066, -191.1749],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0091, device='cuda:0', dtype=torch.float64)
tensor([-192.5182, -188.2587, -188.9983, -190.1523, -191.1908],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0091, device='cuda:0', dtype=torch.float64)
tensor([-192.6987, -188.2280, -188.9091, -190.3089, -191.3090],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0102, device='cuda:0', dtype=torch.float64)
tensor([-193.0171, -188.2460, -188.8050, -190.5901, -191.5414],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0106, device='cuda:0', dtype=torch.float64)
tensor([-193.1760, -188.2542, -188.7762, -190.7508, -191.6608],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0101, device='cuda:0', dtype=torch.float64)
tensor([-193.2592, -188.2474, -188.7722, -190.8566, -191.7228],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0087, device='cuda:0', dtype=torch.float64)
tensor([-193.1918, -188.2544, -188.8189, -190.8490, -191.6504],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0096, device='cuda:0', dtype=torch.float64)
tensor([-193.1705, -188.2766, -188.7293, -190.7624, -191.6557],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0084, device='cuda:0', dtype=torch.float64)
tensor([-193.1336, -188.2933, -188.5844, -190.6070, -191.6589],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0094, device='cuda:0', dtype=torch.float64)
tensor([-193.1092, -188.3631, -188.5338, -190.5326, -191.6605],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0081, device='cuda:0', dtype=torch.float64)
tensor([-193.0362, -188.4246, -188.5517, -190.4534, -191.6158],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0093, device='cuda:0', dtype=torch.float64)
tensor([-192.9934, -188.4746, -188.5328, -190.3811, -191.5932],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0096, device='cuda:0', dtype=torch.float64)
tensor([-192.9102, -188.5057, -188.4919, -190.2595, -191.5633],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0106, device='cuda:0', dtype=torch.float64)
tensor([-192.8380, -188.5313, -188.3338, -190.0444, -191.5494],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0095, device='cuda:0', dtype=torch.float64)
tensor([-192.7086, -188.5534, -188.1918, -189.7751, -191.4998],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0095, device='cuda:0', dtype=torch.float64)
tensor([-192.6380, -188.5894, -188.0094, -189.5434, -191.5059],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0107, device='cuda:0', dtype=torch.float64)
tensor([-192.6057, -188.5806, -187.8656, -189.3866, -191.5009],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0096, device='cuda:0', dtype=torch.float64)
tensor([-192.6428, -188.5762, -187.7576, -189.3374, -191.5161],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0089, device='cuda:0', dtype=torch.float64)
tensor([-192.6540, -188.5962, -187.6509, -189.2591, -191.5385],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0106, device='cuda:0', dtype=torch.float64)
tensor([-192.6392, -188.5897, -187.8547, -189.4070, -191.4445],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0091, device='cuda:0', dtype=torch.float64)
tensor([-192.6173, -188.5892, -188.0507, -189.5428, -191.3631],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0107, device='cuda:0', dtype=torch.float64)
tensor([-192.6968, -188.5167, -188.2390, -189.7889, -191.3318],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0101, device='cuda:0', dtype=torch.float64)
tensor([-192.7514, -188.4228, -188.4209, -190.0030, -191.2968],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0093, device='cuda:0', dtype=torch.float64)
tensor([-192.7866, -188.3499, -188.6525, -190.2524, -191.2270],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0094, device='cuda:0', dtype=torch.float64)
tensor([-192.7281, -188.2953, -189.0399, -190.5425, -191.0639],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0098, device='cuda:0', dtype=torch.float64)
tensor([-192.6936, -188.2150, -189.2095, -190.6880, -190.9622],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0097, device='cuda:0', dtype=torch.float64)
tensor([-192.5363, -188.1526, -189.1521, -190.5031, -190.8680],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0086, device='cuda:0', dtype=torch.float64)
tensor([-192.3945, -188.0707, -188.9998, -190.2576, -190.8142],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0094, device='cuda:0', dtype=torch.float64)
tensor([-192.2644, -187.9939, -188.9685, -190.1277, -190.7146],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0099, device='cuda:0', dtype=torch.float64)
tensor([-192.1183, -187.9018, -188.7784, -189.8450, -190.6357],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0103, device='cuda:0', dtype=torch.float64)
tensor([-191.9486, -187.7698, -188.6199, -189.5717, -190.5118],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0097, device='cuda:0', dtype=torch.float64)
tensor([-191.8897, -187.6666, -188.2966, -189.2555, -190.5183],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0095, device='cuda:0', dtype=torch.float64)
tensor([-191.9090, -187.5678, -187.8412, -188.9069, -190.6242],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0101, device='cuda:0', dtype=torch.float64)
tensor([-191.8516, -187.4994, -187.5358, -188.6011, -190.6508],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0096, device='cuda:0', dtype=torch.float64)
tensor([-191.8528, -187.4652, -187.3196, -188.4413, -190.6689],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0088, device='cuda:0', dtype=torch.float64)
tensor([-191.9104, -187.4430, -187.2198, -188.4420, -190.6833],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0087, device='cuda:0', dtype=torch.float64)
tensor([-191.9296, -187.4426, -187.1363, -188.4085, -190.6815],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0096, device='cuda:0', dtype=torch.float64)
tensor([-192.0210, -187.4547, -187.2284, -188.6024, -190.7003],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0097, device='cuda:0', dtype=torch.float64)
tensor([-192.1167, -187.4587, -187.3271, -188.8024, -190.7296],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0102, device='cuda:0', dtype=torch.float64)
tensor([-192.1349, -187.4753, -187.6291, -189.0934, -190.6438],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0101, device='cuda:0', dtype=torch.float64)
tensor([-192.2409, -187.5083, -187.9338, -189.4777, -190.6248],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0095, device='cuda:0', dtype=torch.float64)
tensor([-192.3086, -187.5373, -188.2157, -189.7966, -190.5855],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0104, device='cuda:0', dtype=torch.float64)
tensor([-192.4410, -187.5829, -188.4411, -190.1469, -190.6053],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0095, device='cuda:0', dtype=torch.float64)
tensor([-192.5725, -187.6372, -188.5126, -190.3825, -190.6780],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0097, device='cuda:0', dtype=torch.float64)
tensor([-192.7658, -187.7268, -188.3548, -190.4877, -190.8678],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0089, device='cuda:0', dtype=torch.float64)
tensor([-192.8533, -187.8227, -188.1267, -190.4257, -191.0511],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0087, device='cuda:0', dtype=torch.float64)
tensor([-192.7500, -187.9163, -187.9461, -190.1840, -191.0962],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0077, device='cuda:0', dtype=torch.float64)
tensor([-192.6431, -188.0222, -187.7275, -189.9122, -191.1565],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0096, device='cuda:0', dtype=torch.float64)
tensor([-192.3822, -188.1136, -187.5540, -189.5066, -191.1007],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0094, device='cuda:0', dtype=torch.float64)
tensor([-192.0931, -188.1718, -187.5203, -189.1944, -190.9740],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0095, device='cuda:0', dtype=torch.float64)
tensor([-191.8700, -188.1952, -187.5259, -188.9894, -190.8670],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0091, device='cuda:0', dtype=torch.float64)
tensor([-191.8300, -188.1815, -187.5573, -189.0178, -190.8355],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0087, device='cuda:0', dtype=torch.float64)
tensor([-191.8398, -188.1385, -187.4818, -189.0045, -190.8497],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0105, device='cuda:0', dtype=torch.float64)
tensor([-191.9002, -188.0926, -187.4319, -189.0703, -190.8561],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0097, device='cuda:0', dtype=torch.float64)
tensor([-191.8752, -188.0589, -187.4534, -189.0948, -190.7980],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0098, device='cuda:0', dtype=torch.float64)
tensor([-191.8207, -188.0266, -187.4166, -189.0652, -190.7435],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0094, device='cuda:0', dtype=torch.float64)
tensor([-191.7301, -187.9979, -187.4098, -189.0282, -190.6427],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0106, device='cuda:0', dtype=torch.float64)
tensor([-191.6412, -187.9400, -187.5459, -189.1099, -190.4842],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0098, device='cuda:0', dtype=torch.float64)
tensor([-191.6210, -187.8634, -187.5819, -189.1878, -190.3884],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0090, device='cuda:0', dtype=torch.float64)
tensor([-191.6245, -187.7825, -187.5535, -189.2363, -190.3284],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0092, device='cuda:0', dtype=torch.float64)
tensor([-191.6549, -187.7286, -187.2449, -189.0676, -190.3851],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0100, device='cuda:0', dtype=torch.float64)
tensor([-191.7450, -187.6855, -187.0518, -189.0560, -190.4306],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0097, device='cuda:0', dtype=torch.float64)
tensor([-191.8209, -187.6097, -186.9513, -189.0880, -190.4586],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0091, device='cuda:0', dtype=torch.float64)
tensor([-191.7935, -187.5140, -187.0361, -189.1696, -190.3476],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0102, device='cuda:0', dtype=torch.float64)
tensor([-191.6591, -187.4706, -187.2145, -189.1830, -190.1898],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0097, device='cuda:0', dtype=torch.float64)
tensor([-191.4687, -187.4060, -187.4700, -189.2084, -189.9770],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0082, device='cuda:0', dtype=torch.float64)
tensor([-191.2884, -187.3426, -187.5995, -189.1375, -189.8187],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0099, device='cuda:0', dtype=torch.float64)
tensor([-191.1242, -187.2462, -187.8678, -189.2034, -189.5901],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0093, device='cuda:0', dtype=torch.float64)
tensor([-191.0615, -187.1766, -187.9287, -189.2140, -189.4904],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0087, device='cuda:0', dtype=torch.float64)
tensor([-191.0763, -187.1295, -188.0195, -189.3063, -189.4177],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0091, device='cuda:0', dtype=torch.float64)
tensor([-191.1685, -187.0938, -188.0973, -189.4675, -189.3883],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0104, device='cuda:0', dtype=torch.float64)
tensor([-191.2228, -187.0843, -188.0912, -189.5134, -189.3793],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0099, device='cuda:0', dtype=torch.float64)
tensor([-191.3052, -187.0898, -187.9906, -189.4960, -189.4353],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0087, device='cuda:0', dtype=torch.float64)
tensor([-191.3078, -187.1097, -187.9811, -189.4710, -189.4438],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0099, device='cuda:0', dtype=torch.float64)
tensor([-191.3285, -187.1505, -187.6813, -189.2177, -189.5581],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0092, device='cuda:0', dtype=torch.float64)
tensor([-191.3410, -187.2084, -187.3201, -188.8827, -189.7155],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0093, device='cuda:0', dtype=torch.float64)
tensor([-191.2679, -187.2554, -186.7918, -188.3231, -189.8905],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0107, device='cuda:0', dtype=torch.float64)
tensor([-191.1695, -187.3249, -186.4865, -187.8983, -189.9975],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0111, device='cuda:0', dtype=torch.float64)
tensor([-191.1050, -187.4017, -186.3830, -187.6932, -190.0628],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0097, device='cuda:0', dtype=torch.float64)
tensor([-191.1448, -187.4395, -186.3657, -187.6920, -190.1410],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0107, device='cuda:0', dtype=torch.float64)
tensor([-191.2719, -187.4423, -186.4296, -187.8790, -190.2328],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0095, device='cuda:0', dtype=torch.float64)
tensor([-191.4704, -187.4791, -186.4319, -188.0965, -190.4105],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0091, device='cuda:0', dtype=torch.float64)
tensor([-191.6282, -187.5521, -186.5488, -188.3485, -190.5208],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0099, device='cuda:0', dtype=torch.float64)
tensor([-191.7394, -187.6412, -186.5780, -188.4770, -190.6209],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0088, device='cuda:0', dtype=torch.float64)
tensor([-191.8868, -187.7229, -186.8306, -188.8134, -190.6590],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0095, device='cuda:0', dtype=torch.float64)
tensor([-192.0497, -187.7848, -187.1814, -189.2430, -190.6665],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0090, device='cuda:0', dtype=torch.float64)
tensor([-192.1722, -187.8545, -187.5881, -189.6894, -190.6215],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0088, device='cuda:0', dtype=torch.float64)
tensor([-192.2583, -187.8995, -187.7649, -189.9048, -190.6373],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0087, device='cuda:0', dtype=torch.float64)
tensor([-192.4275, -187.9332, -187.8453, -190.1530, -190.7099],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0100, device='cuda:0', dtype=torch.float64)
tensor([-192.5625, -187.9278, -187.6607, -190.1662, -190.8510],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0089, device='cuda:0', dtype=torch.float64)
tensor([-192.5841, -187.9069, -187.6465, -190.1889, -190.8752],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0087, device='cuda:0', dtype=torch.float64)
tensor([-192.5846, -187.8907, -187.6173, -190.1811, -190.8984],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0105, device='cuda:0', dtype=torch.float64)
tensor([-192.5682, -187.8737, -187.5013, -190.0863, -190.9369],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0095, device='cuda:0', dtype=torch.float64)
tensor([-192.5380, -187.8456, -187.2665, -189.8597, -191.0012],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0088, device='cuda:0', dtype=torch.float64)
tensor([-192.5301, -187.7985, -186.9935, -189.6313, -191.0688],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0098, device='cuda:0', dtype=torch.float64)
tensor([-192.5100, -187.7388, -186.8344, -189.4878, -191.0843],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0083, device='cuda:0', dtype=torch.float64)
tensor([-192.4632, -187.6801, -186.9150, -189.5139, -191.0069],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0083, device='cuda:0', dtype=torch.float64)
tensor([-192.4152, -187.6396, -186.9618, -189.5177, -190.9584],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0078, device='cuda:0', dtype=torch.float64)
tensor([-192.3561, -187.5776, -187.0110, -189.5096, -190.9069],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0101, device='cuda:0', dtype=torch.float64)
tensor([-192.2925, -187.5090, -186.8946, -189.3608, -190.9019],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0084, device='cuda:0', dtype=torch.float64)
tensor([-192.1694, -187.4366, -186.7378, -189.1221, -190.8822],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0092, device='cuda:0', dtype=torch.float64)
tensor([-191.9866, -187.3616, -186.7713, -188.9692, -190.7709],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0100, device='cuda:0', dtype=torch.float64)
tensor([-191.9000, -187.3143, -186.8707, -188.9603, -190.6879],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0110, device='cuda:0', dtype=torch.float64)
tensor([-191.9688, -187.2472, -187.1106, -189.2424, -190.6331],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0094, device='cuda:0', dtype=torch.float64)
tensor([-192.0463, -187.1595, -187.2983, -189.4858, -190.5932],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0085, device='cuda:0', dtype=torch.float64)
tensor([-192.1607, -187.0767, -187.4469, -189.7354, -190.5887],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0102, device='cuda:0', dtype=torch.float64)
tensor([-192.2009, -187.0243, -187.5298, -189.8379, -190.5857],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0091, device='cuda:0', dtype=torch.float64)
tensor([-192.2445, -187.0159, -187.4046, -189.7964, -190.6475],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0092, device='cuda:0', dtype=torch.float64)
tensor([-192.2102, -187.0021, -187.2687, -189.6607, -190.6606],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0091, device='cuda:0', dtype=torch.float64)
tensor([-192.2267, -187.0052, -187.1846, -189.5998, -190.6905],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0100, device='cuda:0', dtype=torch.float64)
tensor([-192.3246, -187.0430, -186.8673, -189.4320, -190.8352],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0095, device='cuda:0', dtype=torch.float64)
tensor([-192.3733, -187.0937, -186.6601, -189.2925, -190.9003],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0110, device='cuda:0', dtype=torch.float64)
tensor([-192.3929, -187.1166, -186.4538, -189.1342, -190.9484],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0102, device='cuda:0', dtype=torch.float64)
tensor([-192.2550, -187.1444, -186.2742, -188.8222, -190.9254],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0099, device='cuda:0', dtype=torch.float64)
tensor([-192.0034, -187.1763, -186.2264, -188.5050, -190.8092],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0092, device='cuda:0', dtype=torch.float64)
tensor([-191.6595, -187.2366, -186.3907, -188.2698, -190.5876],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0098, device='cuda:0', dtype=torch.float64)
tensor([-191.2927, -187.2477, -186.6874, -188.1280, -190.3036],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0082, device='cuda:0', dtype=torch.float64)
tensor([-190.9971, -187.2713, -186.8526, -187.9596, -190.1062],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0086, device='cuda:0', dtype=torch.float64)
tensor([-190.8628, -187.2896, -186.9796, -187.9409, -190.0096],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0091, device='cuda:0', dtype=torch.float64)
tensor([-190.8719, -187.3148, -187.1249, -188.0973, -189.9870],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0092, device='cuda:0', dtype=torch.float64)
tensor([-190.9454, -187.3247, -187.2359, -188.2882, -190.0091],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0094, device='cuda:0', dtype=torch.float64)
tensor([-191.0525, -187.3030, -187.3374, -188.5181, -190.0435],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0079, device='cuda:0', dtype=torch.float64)
tensor([-191.2003, -187.2828, -187.4108, -188.7586, -190.1159],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0083, device='cuda:0', dtype=torch.float64)
tensor([-191.3375, -187.2568, -187.3170, -188.8486, -190.2373],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0085, device='cuda:0', dtype=torch.float64)
tensor([-191.4336, -187.2332, -187.2336, -188.9154, -190.3027],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0080, device='cuda:0', dtype=torch.float64)
tensor([-191.5508, -187.2172, -187.1715, -189.0192, -190.3947],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0105, device='cuda:0', dtype=torch.float64)
tensor([-191.5318, -187.2006, -187.0041, -188.9167, -190.4390],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0091, device='cuda:0', dtype=torch.float64)
tensor([-191.6692, -187.1626, -186.9259, -189.0588, -190.5306],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0089, device='cuda:0', dtype=torch.float64)
tensor([-191.8302, -187.1353, -186.8177, -189.1829, -190.6719],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0097, device='cuda:0', dtype=torch.float64)
tensor([-192.0404, -187.1313, -186.5850, -189.2637, -190.8798],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0091, device='cuda:0', dtype=torch.float64)
tensor([-192.3553, -187.1356, -186.2878, -189.4277, -191.1602],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0093, device='cuda:0', dtype=torch.float64)
tensor([-192.5593, -187.1157, -186.2278, -189.6447, -191.2966],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0101, device='cuda:0', dtype=torch.float64)
tensor([-192.5395, -187.0771, -186.3822, -189.7914, -191.2322],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0086, device='cuda:0', dtype=torch.float64)
tensor([-192.3828, -187.0260, -186.6312, -189.8452, -191.0526],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0092, device='cuda:0', dtype=torch.float64)
tensor([-192.1646, -186.9978, -186.9196, -189.8772, -190.8200],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0078, device='cuda:0', dtype=torch.float64)
tensor([-191.8827, -186.9849, -187.2599, -189.8899, -190.5287],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0084, device='cuda:0', dtype=torch.float64)
tensor([-191.5043, -186.9980, -187.6299, -189.8090, -190.1790],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0100, device='cuda:0', dtype=torch.float64)
tensor([-191.1428, -187.0867, -188.2117, -189.8910, -189.7499],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0097, device='cuda:0', dtype=torch.float64)
tensor([-190.8326, -187.1820, -188.7088, -189.9551, -189.3693],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0089, device='cuda:0', dtype=torch.float64)
tensor([-190.6237, -187.2771, -189.0171, -189.9888, -189.1249],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0085, device='cuda:0', dtype=torch.float64)
tensor([-190.4299, -187.3608, -189.1445, -189.9147, -188.9600],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0107, device='cuda:0', dtype=torch.float64)
tensor([-190.2164, -187.4336, -188.7548, -189.4355, -188.9960],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0106, device='cuda:0', dtype=torch.float64)
tensor([-190.1057, -187.4732, -188.1113, -188.8467, -189.1903],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0089, device='cuda:0', dtype=torch.float64)
tensor([-190.1153, -187.4713, -187.3663, -188.3012, -189.4699],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0098, device='cuda:0', dtype=torch.float64)
tensor([-190.2158, -187.4762, -186.5157, -187.7569, -189.8459],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0096, device='cuda:0', dtype=torch.float64)
tensor([-190.4726, -187.4992, -185.6292, -187.3254, -190.3199],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0084, device='cuda:0', dtype=torch.float64)
tensor([-190.8684, -187.5302, -184.9775, -187.2098, -190.7811],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0095, device='cuda:0', dtype=torch.float64)
tensor([-191.2841, -187.5666, -184.5680, -187.2995, -191.1744],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0098, device='cuda:0', dtype=torch.float64)
tensor([-191.7019, -187.6136, -184.3502, -187.5582, -191.5131],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0100, device='cuda:0', dtype=torch.float64)
tensor([-192.0272, -187.5827, -184.5503, -188.0823, -191.6410],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0120, device='cuda:0', dtype=torch.float64)
tensor([-192.1546, -187.5278, -185.0657, -188.6497, -191.5362],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0088, device='cuda:0', dtype=torch.float64)
tensor([-192.2061, -187.4573, -185.6837, -189.2179, -191.3567],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0108, device='cuda:0', dtype=torch.float64)
tensor([-192.1475, -187.3671, -186.3739, -189.7179, -191.0582],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0087, device='cuda:0', dtype=torch.float64)
tensor([-192.0491, -187.2964, -187.1962, -190.2820, -190.6864],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0090, device='cuda:0', dtype=torch.float64)
tensor([-192.0487, -187.2223, -187.8659, -190.8145, -190.4232],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0081, device='cuda:0', dtype=torch.float64)
tensor([-191.9990, -187.1604, -188.4741, -191.2283, -190.1616],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0094, device='cuda:0', dtype=torch.float64)
tensor([-191.9524, -187.0998, -188.7316, -191.3728, -190.0365],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0082, device='cuda:0', dtype=torch.float64)
tensor([-191.9266, -187.0170, -188.6964, -191.3287, -190.0431],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0100, device='cuda:0', dtype=torch.float64)
tensor([-191.8881, -186.9523, -188.3416, -191.0224, -190.1362],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0103, device='cuda:0', dtype=torch.float64)
tensor([-191.7193, -186.8642, -187.7898, -190.4391, -190.2706],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0083, device='cuda:0', dtype=torch.float64)
tensor([-191.5651, -186.7753, -187.1177, -189.7853, -190.4290],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0089, device='cuda:0', dtype=torch.float64)
tensor([-191.3829, -186.7160, -186.5298, -189.1485, -190.5274],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0085, device='cuda:0', dtype=torch.float64)
tensor([-191.2514, -186.6663, -185.8831, -188.5139, -190.6756],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0086, device='cuda:0', dtype=torch.float64)
tensor([-191.0873, -186.6536, -185.3794, -187.9370, -190.7425],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0089, device='cuda:0', dtype=torch.float64)
tensor([-190.9668, -186.6135, -185.1722, -187.6425, -190.7248],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0094, device='cuda:0', dtype=torch.float64)
tensor([-190.8242, -186.5715, -185.3213, -187.6112, -190.5792],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0096, device='cuda:0', dtype=torch.float64)
tensor([-190.8315, -186.5392, -185.6515, -187.8848, -190.4569],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0104, device='cuda:0', dtype=torch.float64)
tensor([-190.8340, -186.5030, -186.1638, -188.2812, -190.2628],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0088, device='cuda:0', dtype=torch.float64)
tensor([-190.8540, -186.5015, -186.6826, -188.6927, -190.0744],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0091, device='cuda:0', dtype=torch.float64)
tensor([-190.9644, -186.4960, -187.3986, -189.3626, -189.8600],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0113, device='cuda:0', dtype=torch.float64)
tensor([-191.1613, -186.4975, -187.7188, -189.8293, -189.8486],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0091, device='cuda:0', dtype=torch.float64)
tensor([-191.2985, -186.5338, -187.8693, -190.1039, -189.8784],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0112, device='cuda:0', dtype=torch.float64)
tensor([-191.3756, -186.5663, -187.7981, -190.1646, -189.9640],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0086, device='cuda:0', dtype=torch.float64)
tensor([-191.5278, -186.5853, -187.6356, -190.2446, -190.1230],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0073, device='cuda:0', dtype=torch.float64)
tensor([-191.6423, -186.5976, -187.5490, -190.3486, -190.2335],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0110, device='cuda:0', dtype=torch.float64)
tensor([-191.6403, -186.5962, -187.4419, -190.3134, -190.2962],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0095, device='cuda:0', dtype=torch.float64)
tensor([-191.6659, -186.6153, -187.3686, -190.3270, -190.3461],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0088, device='cuda:0', dtype=torch.float64)
tensor([-191.6378, -186.6324, -187.1673, -190.2007, -190.4299],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0093, device='cuda:0', dtype=torch.float64)
tensor([-191.5563, -186.6681, -186.6793, -189.7878, -190.5868],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0107, device='cuda:0', dtype=torch.float64)
tensor([-191.6051, -186.7372, -185.9728, -189.3317, -190.8764],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0092, device='cuda:0', dtype=torch.float64)
tensor([-191.6643, -186.7759, -185.5066, -189.0727, -191.0866],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0096, device='cuda:0', dtype=torch.float64)
tensor([-191.6680, -186.8137, -185.1221, -188.8230, -191.2475],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0098, device='cuda:0', dtype=torch.float64)
tensor([-191.5464, -186.7439, -184.9009, -188.5740, -191.2205],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0105, device='cuda:0', dtype=torch.float64)
tensor([-191.4459, -186.6216, -184.9914, -188.5912, -191.0689],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0091, device='cuda:0', dtype=torch.float64)
tensor([-191.2288, -186.4533, -185.2275, -188.6061, -190.7740],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0092, device='cuda:0', dtype=torch.float64)
tensor([-190.9894, -186.3367, -185.4174, -188.5524, -190.4862],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0100, device='cuda:0', dtype=torch.float64)
tensor([-190.5817, -186.1927, -185.6529, -188.3506, -190.0663],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0106, device='cuda:0', dtype=torch.float64)
tensor([-190.3050, -186.1045, -185.8733, -188.2780, -189.7309],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0098, device='cuda:0', dtype=torch.float64)
tensor([-190.0964, -186.0215, -186.3382, -188.4556, -189.3482],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0091, device='cuda:0', dtype=torch.float64)
tensor([-189.8955, -185.9896, -186.7992, -188.6181, -188.9916],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0094, device='cuda:0', dtype=torch.float64)
tensor([-189.8423, -185.9936, -187.3911, -189.0066, -188.6728],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0101, device='cuda:0', dtype=torch.float64)
tensor([-189.8924, -186.0438, -187.6359, -189.2101, -188.5426],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0097, device='cuda:0', dtype=torch.float64)
tensor([-189.9428, -186.0992, -187.9140, -189.4281, -188.3937],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0094, device='cuda:0', dtype=torch.float64)
tensor([-190.0016, -186.1321, -188.0080, -189.5109, -188.3229],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0085, device='cuda:0', dtype=torch.float64)
tensor([-190.1030, -186.2184, -187.9545, -189.5300, -188.3460],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0095, device='cuda:0', dtype=torch.float64)
tensor([-190.0298, -186.2609, -187.9295, -189.3811, -188.3056],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0121, device='cuda:0', dtype=torch.float64)
tensor([-190.0730, -186.2739, -187.4457, -189.0103, -188.5066],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0092, device='cuda:0', dtype=torch.float64)
tensor([-190.2015, -186.3219, -186.8104, -188.6121, -188.8146],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0091, device='cuda:0', dtype=torch.float64)
tensor([-190.3458, -186.4019, -185.9680, -188.0654, -189.2275],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0102, device='cuda:0', dtype=torch.float64)
tensor([-190.3906, -186.5308, -185.1547, -187.4213, -189.6100],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0094, device='cuda:0', dtype=torch.float64)
tensor([-190.4904, -186.6585, -184.5051, -186.9331, -189.9912],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0092, device='cuda:0', dtype=torch.float64)
tensor([-190.5409, -186.7705, -184.1733, -186.6533, -190.2174],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0106, device='cuda:0', dtype=torch.float64)
tensor([-190.6257, -186.8447, -184.3168, -186.8043, -190.2869],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0107, device='cuda:0', dtype=torch.float64)
tensor([-190.6984, -186.8261, -184.7880, -187.2290, -190.2152],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0081, device='cuda:0', dtype=torch.float64)
tensor([-190.6842, -186.7782, -185.4084, -187.6721, -190.0133],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0116, device='cuda:0', dtype=torch.float64)
tensor([-190.6896, -186.7021, -186.0329, -188.1381, -189.8148],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0095, device='cuda:0', dtype=torch.float64)
tensor([-190.8286, -186.6644, -186.7640, -188.8014, -189.6664],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0088, device='cuda:0', dtype=torch.float64)
tensor([-190.9248, -186.6257, -187.4527, -189.3870, -189.4955],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0101, device='cuda:0', dtype=torch.float64)
tensor([-190.9350, -186.5944, -187.9759, -189.7741, -189.3260],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0080, device='cuda:0', dtype=torch.float64)
tensor([-190.8073, -186.5783, -188.1694, -189.7645, -189.2298],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0087, device='cuda:0', dtype=torch.float64)
tensor([-190.6306, -186.5554, -188.1142, -189.5308, -189.1869],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0108, device='cuda:0', dtype=torch.float64)
tensor([-190.5691, -186.5240, -187.7002, -189.1548, -189.3644],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0100, device='cuda:0', dtype=torch.float64)
tensor([-190.4702, -186.4503, -187.0917, -188.6055, -189.5553],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0089, device='cuda:0', dtype=torch.float64)
tensor([-190.3776, -186.3841, -186.3177, -187.9455, -189.7889],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0096, device='cuda:0', dtype=torch.float64)
tensor([-190.2508, -186.2988, -185.5154, -187.2264, -189.9974],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0091, device='cuda:0', dtype=torch.float64)
tensor([-190.2599, -186.2736, -184.7720, -186.6771, -190.2497],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0092, device='cuda:0', dtype=torch.float64)
tensor([-190.3252, -186.2275, -184.3228, -186.4059, -190.4330],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0091, device='cuda:0', dtype=torch.float64)
tensor([-190.2606, -186.1511, -184.1964, -186.2842, -190.4094],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0090, device='cuda:0', dtype=torch.float64)
tensor([-190.1675, -186.0435, -184.3826, -186.3868, -190.2580],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0093, device='cuda:0', dtype=torch.float64)
tensor([-190.0677, -185.9596, -184.5243, -186.4531, -190.1251],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0094, device='cuda:0', dtype=torch.float64)
tensor([-190.0124, -185.8732, -184.8652, -186.7383, -189.9640],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0093, device='cuda:0', dtype=torch.float64)
tensor([-190.0525, -185.8205, -185.1981, -187.1053, -189.8657],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0081, device='cuda:0', dtype=torch.float64)
tensor([-190.0863, -185.8163, -185.5065, -187.4188, -189.7717],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0086, device='cuda:0', dtype=torch.float64)
tensor([-190.1460, -185.8099, -185.9704, -187.8645, -189.6188],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0093, device='cuda:0', dtype=torch.float64)
tensor([-190.1962, -185.8165, -186.5413, -188.3751, -189.4295],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0086, device='cuda:0', dtype=torch.float64)
tensor([-190.2525, -185.8754, -186.9598, -188.7690, -189.3127],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0094, device='cuda:0', dtype=torch.float64)
tensor([-190.3509, -185.9331, -187.1349, -189.0408, -189.2716],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0091, device='cuda:0', dtype=torch.float64)
tensor([-190.4384, -185.9958, -187.0445, -189.1113, -189.3135],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0105, device='cuda:0', dtype=torch.float64)
tensor([-190.6609, -186.0732, -186.9510, -189.3370, -189.4390],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0100, device='cuda:0', dtype=torch.float64)
tensor([-190.9643, -186.1944, -186.6266, -189.4414, -189.6911],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0095, device='cuda:0', dtype=torch.float64)
tensor([-191.1942, -186.2888, -186.3552, -189.5185, -189.8676],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0103, device='cuda:0', dtype=torch.float64)
tensor([-191.1770, -186.3401, -185.9511, -189.2626, -189.9723],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0090, device='cuda:0', dtype=torch.float64)
tensor([-190.9228, -186.3072, -185.6393, -188.8354, -189.8892],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0102, device='cuda:0', dtype=torch.float64)
tensor([-190.7507, -186.2838, -185.2671, -188.4321, -189.8800],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0089, device='cuda:0', dtype=torch.float64)
tensor([-190.5390, -186.2777, -184.9606, -188.0459, -189.8348],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0085, device='cuda:0', dtype=torch.float64)
tensor([-190.2245, -186.2743, -184.5453, -187.4468, -189.7601],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0115, device='cuda:0', dtype=torch.float64)
tensor([-189.9856, -186.2337, -184.5671, -187.2703, -189.5500],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0089, device='cuda:0', dtype=torch.float64)
tensor([-189.7785, -186.1925, -184.6849, -187.1719, -189.3197],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0100, device='cuda:0', dtype=torch.float64)
tensor([-189.5228, -186.1577, -185.0129, -187.1666, -188.9962],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0092, device='cuda:0', dtype=torch.float64)
tensor([-189.2479, -186.1134, -185.3765, -187.1361, -188.6720],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0102, device='cuda:0', dtype=torch.float64)
tensor([-189.1027, -186.0714, -185.8866, -187.3646, -188.3625],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0086, device='cuda:0', dtype=torch.float64)
tensor([-189.1032, -186.0424, -186.3247, -187.6841, -188.1584],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0067, device='cuda:0', dtype=torch.float64)
tensor([-189.1506, -186.0127, -186.7315, -188.0391, -188.0019],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0087, device='cuda:0', dtype=torch.float64)
tensor([-189.2421, -185.9598, -187.1189, -188.4356, -187.8556],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0090, device='cuda:0', dtype=torch.float64)
tensor([-189.3667, -185.9003, -187.1717, -188.6017, -187.8415],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0100, device='cuda:0', dtype=torch.float64)
tensor([-189.5379, -185.8421, -187.3648, -188.9219, -187.8065],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0088, device='cuda:0', dtype=torch.float64)
tensor([-189.6630, -185.7949, -187.5227, -189.1788, -187.7840],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0097, device='cuda:0', dtype=torch.float64)
tensor([-189.8105, -185.7634, -187.3338, -189.2023, -187.9173],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0092, device='cuda:0', dtype=torch.float64)
tensor([-189.9134, -185.7540, -186.9372, -189.0057, -188.1138],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0101, device='cuda:0', dtype=torch.float64)
tensor([-189.9984, -185.7410, -186.3681, -188.6634, -188.3642],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0089, device='cuda:0', dtype=torch.float64)
tensor([-190.1320, -185.7310, -185.9310, -188.4690, -188.6058],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0097, device='cuda:0', dtype=torch.float64)
tensor([-190.2783, -185.7262, -185.4752, -188.2798, -188.8711],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0090, device='cuda:0', dtype=torch.float64)
tensor([-190.3632, -185.7624, -184.7473, -187.7983, -189.2287],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0102, device='cuda:0', dtype=torch.float64)
tensor([-190.3242, -185.7644, -184.3018, -187.3716, -189.4104],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0106, device='cuda:0', dtype=torch.float64)
tensor([-190.1728, -185.7631, -184.0944, -187.0039, -189.4416],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0109, device='cuda:0', dtype=torch.float64)
tensor([-189.9286, -185.7094, -184.2438, -186.8306, -189.2804],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0100, device='cuda:0', dtype=torch.float64)
tensor([-189.8097, -185.6801, -184.3373, -186.7224, -189.2033],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0116, device='cuda:0', dtype=torch.float64)
tensor([-189.4741, -185.6137, -184.8393, -186.7229, -188.8444],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0098, device='cuda:0', dtype=torch.float64)
tensor([-189.1366, -185.5658, -185.5508, -186.8799, -188.4347],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0090, device='cuda:0', dtype=torch.float64)
tensor([-188.9201, -185.5218, -186.2094, -187.1203, -188.1041],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0096, device='cuda:0', dtype=torch.float64)
tensor([-188.8779, -185.5177, -186.9304, -187.5895, -187.8470],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0099, device='cuda:0', dtype=torch.float64)
tensor([-188.9316, -185.5588, -187.3930, -187.9483, -187.7233],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0090, device='cuda:0', dtype=torch.float64)
tensor([-188.9160, -185.5455, -187.5158, -188.0028, -187.6881],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0093, device='cuda:0', dtype=torch.float64)
tensor([-189.0534, -185.5425, -187.5890, -188.1775, -187.7523],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0096, device='cuda:0', dtype=torch.float64)
tensor([-189.2719, -185.4929, -187.2672, -188.1507, -187.9786],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0097, device='cuda:0', dtype=torch.float64)
tensor([-189.4145, -185.4568, -186.7464, -187.9029, -188.2538],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0103, device='cuda:0', dtype=torch.float64)
tensor([-189.5886, -185.4135, -186.4063, -187.8344, -188.4690],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0086, device='cuda:0', dtype=torch.float64)
tensor([-189.7395, -185.3604, -186.0063, -187.7165, -188.6816],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0099, device='cuda:0', dtype=torch.float64)
tensor([-189.9089, -185.3416, -185.4329, -187.4940, -188.9918],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0090, device='cuda:0', dtype=torch.float64)
tensor([-190.1663, -185.3306, -184.9864, -187.4476, -189.3219],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0095, device='cuda:0', dtype=torch.float64)
tensor([-190.4813, -185.3933, -184.4641, -187.3670, -189.7525],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0094, device='cuda:0', dtype=torch.float64)
tensor([-190.8003, -185.4389, -184.1540, -187.4515, -190.1096],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0102, device='cuda:0', dtype=torch.float64)
tensor([-191.0931, -185.5033, -184.0867, -187.6960, -190.3791],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0112, device='cuda:0', dtype=torch.float64)
tensor([-191.3557, -185.5449, -184.1616, -188.0419, -190.5528],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0102, device='cuda:0', dtype=torch.float64)
tensor([-191.3872, -185.5433, -184.2853, -188.1949, -190.5504],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0104, device='cuda:0', dtype=torch.float64)
tensor([-191.2876, -185.5494, -184.4862, -188.2728, -190.4380],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0100, device='cuda:0', dtype=torch.float64)
tensor([-191.1076, -185.5501, -184.8129, -188.3532, -190.2175],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0093, device='cuda:0', dtype=torch.float64)
tensor([-190.9061, -185.5476, -185.0602, -188.3598, -190.0198],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0088, device='cuda:0', dtype=torch.float64)
tensor([-190.7075, -185.5071, -185.3249, -188.3884, -189.7884],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0085, device='cuda:0', dtype=torch.float64)
tensor([-190.5588, -185.4510, -185.5844, -188.4584, -189.5779],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0096, device='cuda:0', dtype=torch.float64)
tensor([-190.3370, -185.3818, -185.9250, -188.5157, -189.3098],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0093, device='cuda:0', dtype=torch.float64)
tensor([-190.1140, -185.3335, -186.0461, -188.4071, -189.1346],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0083, device='cuda:0', dtype=torch.float64)
tensor([-189.8836, -185.3162, -186.0643, -188.2050, -189.0018],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0097, device='cuda:0', dtype=torch.float64)
tensor([-189.6671, -185.3117, -186.0734, -188.0082, -188.8482],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0091, device='cuda:0', dtype=torch.float64)
tensor([-189.4666, -185.2806, -185.9824, -187.7589, -188.7311],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0112, device='cuda:0', dtype=torch.float64)
tensor([-189.3299, -185.2043, -186.0790, -187.7366, -188.5581],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0086, device='cuda:0', dtype=torch.float64)
tensor([-189.2421, -185.1461, -186.1403, -187.7500, -188.4147],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0094, device='cuda:0', dtype=torch.float64)
tensor([-189.2159, -185.0994, -186.1350, -187.7598, -188.3379],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0092, device='cuda:0', dtype=torch.float64)
tensor([-189.2175, -185.0664, -185.7565, -187.5188, -188.4275],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0093, device='cuda:0', dtype=torch.float64)
tensor([-189.2969, -185.0510, -185.4178, -187.3911, -188.5454],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0100, device='cuda:0', dtype=torch.float64)
tensor([-189.3575, -185.0303, -185.1540, -187.3027, -188.6186],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0088, device='cuda:0', dtype=torch.float64)
tensor([-189.2923, -185.0252, -184.7959, -187.0127, -188.6756],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0089, device='cuda:0', dtype=torch.float64)
tensor([-189.1715, -185.0095, -184.3991, -186.6312, -188.7068],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0099, device='cuda:0', dtype=torch.float64)
tensor([-189.0725, -185.0030, -184.0645, -186.3164, -188.7320],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0085, device='cuda:0', dtype=torch.float64)
tensor([-189.1385, -185.0242, -183.6813, -186.1169, -188.8779],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0089, device='cuda:0', dtype=torch.float64)
tensor([-189.2402, -185.0339, -183.5323, -186.1209, -188.9552],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0094, device='cuda:0', dtype=torch.float64)
tensor([-189.2706, -184.9927, -183.6824, -186.2957, -188.8815],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0110, device='cuda:0', dtype=torch.float64)
tensor([-189.2630, -184.9358, -184.0264, -186.5626, -188.6944],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0093, device='cuda:0', dtype=torch.float64)
tensor([-189.1930, -184.8859, -184.3539, -186.7419, -188.4873],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0085, device='cuda:0', dtype=torch.float64)
tensor([-189.0308, -184.8103, -184.6526, -186.8026, -188.2347],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0091, device='cuda:0', dtype=torch.float64)
tensor([-188.9599, -184.7407, -184.9512, -186.9521, -188.0378],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0104, device='cuda:0', dtype=torch.float64)
tensor([-188.8184, -184.6563, -185.2068, -187.0125, -187.8269],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0094, device='cuda:0', dtype=torch.float64)
tensor([-188.6962, -184.5908, -185.3999, -187.0354, -187.6748],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0101, device='cuda:0', dtype=torch.float64)
tensor([-188.6264, -184.5758, -185.3684, -186.9212, -187.6374],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0096, device='cuda:0', dtype=torch.float64)
tensor([-188.6630, -184.6173, -184.9254, -186.5910, -187.8276],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0101, device='cuda:0', dtype=torch.float64)
tensor([-188.6790, -184.6792, -184.5187, -186.2673, -188.0022],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0087, device='cuda:0', dtype=torch.float64)
tensor([-188.6919, -184.7285, -184.2297, -186.0363, -188.1367],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0087, device='cuda:0', dtype=torch.float64)
tensor([-188.8403, -184.7866, -183.9879, -185.9855, -188.3552],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0090, device='cuda:0', dtype=torch.float64)
tensor([-189.0986, -184.8579, -184.0110, -186.2543, -188.5501],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0094, device='cuda:0', dtype=torch.float64)
tensor([-189.3826, -184.9551, -184.3232, -186.7563, -188.6401],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0100, device='cuda:0', dtype=torch.float64)
tensor([-189.7407, -185.0437, -184.5408, -187.2575, -188.8146],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0104, device='cuda:0', dtype=torch.float64)
tensor([-190.0801, -185.0796, -184.9057, -187.8667, -188.8873],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0092, device='cuda:0', dtype=torch.float64)
tensor([-190.3835, -185.0878, -185.4259, -188.5529, -188.8457],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0090, device='cuda:0', dtype=torch.float64)
tensor([-190.5605, -185.0827, -185.8471, -189.0356, -188.7717],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0085, device='cuda:0', dtype=torch.float64)
tensor([-190.6521, -185.0432, -186.2738, -189.4453, -188.6663],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0087, device='cuda:0', dtype=torch.float64)
tensor([-190.5652, -184.9745, -186.6005, -189.6178, -188.4986],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0091, device='cuda:0', dtype=torch.float64)
tensor([-190.3320, -184.8979, -186.7379, -189.5058, -188.3357],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0099, device='cuda:0', dtype=torch.float64)
tensor([-190.1156, -184.8282, -186.6345, -189.2509, -188.2689],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0109, device='cuda:0', dtype=torch.float64)
tensor([-189.7223, -184.7784, -186.1745, -188.5654, -188.2567],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0095, device='cuda:0', dtype=torch.float64)
tensor([-189.2019, -184.6600, -185.7328, -187.7675, -188.1612],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0087, device='cuda:0', dtype=torch.float64)
tensor([-188.6866, -184.5654, -185.2032, -186.8877, -188.1266],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0110, device='cuda:0', dtype=torch.float64)
tensor([-188.4697, -184.5286, -184.4914, -186.1478, -188.2945],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0099, device='cuda:0', dtype=torch.float64)
tensor([-188.2995, -184.5191, -183.7559, -185.4238, -188.4749],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0098, device='cuda:0', dtype=torch.float64)
tensor([-188.1989, -184.4854, -183.3322, -184.9935, -188.5736],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0109, device='cuda:0', dtype=torch.float64)
tensor([-188.0662, -184.3833, -183.4355, -184.9550, -188.4360],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0101, device='cuda:0', dtype=torch.float64)
tensor([-188.1146, -184.3527, -183.6100, -185.1357, -188.3879],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0097, device='cuda:0', dtype=torch.float64)
tensor([-188.2459, -184.2908, -183.9593, -185.5264, -188.2952],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0091, device='cuda:0', dtype=torch.float64)
tensor([-188.4337, -184.2462, -184.5937, -186.1881, -188.1317],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0088, device='cuda:0', dtype=torch.float64)
tensor([-188.6206, -184.1867, -185.3542, -186.9562, -187.8887],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0091, device='cuda:0', dtype=torch.float64)
tensor([-188.9192, -184.1776, -186.1111, -187.8148, -187.7283],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0090, device='cuda:0', dtype=torch.float64)
tensor([-189.1190, -184.2069, -186.5654, -188.3505, -187.6324],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0093, device='cuda:0', dtype=torch.float64)
tensor([-189.1753, -184.2467, -186.6507, -188.4767, -187.5988],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0091, device='cuda:0', dtype=torch.float64)
tensor([-189.2049, -184.2715, -186.4493, -188.3738, -187.6982],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0095, device='cuda:0', dtype=torch.float64)
tensor([-189.1867, -184.2703, -186.0567, -188.0981, -187.8466],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0090, device='cuda:0', dtype=torch.float64)
tensor([-189.1868, -184.3035, -185.4020, -187.6405, -188.1100],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0092, device='cuda:0', dtype=torch.float64)
tensor([-189.1357, -184.3313, -184.6032, -187.0179, -188.4155],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0117, device='cuda:0', dtype=torch.float64)
tensor([-189.1260, -184.3436, -183.8825, -186.4739, -188.7140],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0098, device='cuda:0', dtype=torch.float64)
tensor([-189.0717, -184.3533, -183.4672, -186.0944, -188.8433],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0104, device='cuda:0', dtype=torch.float64)
tensor([-189.0749, -184.4082, -183.0675, -185.7748, -189.0065],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0093, device='cuda:0', dtype=torch.float64)
tensor([-189.1909, -184.4294, -182.7834, -185.6771, -189.1724],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0095, device='cuda:0', dtype=torch.float64)
tensor([-189.2352, -184.3596, -182.9610, -185.8721, -189.1105],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0104, device='cuda:0', dtype=torch.float64)
tensor([-189.2689, -184.3381, -183.3352, -186.1929, -189.0056],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0106, device='cuda:0', dtype=torch.float64)
tensor([-189.1818, -184.2924, -183.7712, -186.4427, -188.8114],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0098, device='cuda:0', dtype=torch.float64)
tensor([-189.0215, -184.1991, -184.1922, -186.6019, -188.5680],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0094, device='cuda:0', dtype=torch.float64)
tensor([-188.8476, -184.0898, -184.7024, -186.8213, -188.2570],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0102, device='cuda:0', dtype=torch.float64)
tensor([-188.7099, -183.9943, -185.1142, -187.0080, -187.9955],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0097, device='cuda:0', dtype=torch.float64)
tensor([-188.5937, -183.9484, -185.5084, -187.1986, -187.7490],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0100, device='cuda:0', dtype=torch.float64)
tensor([-188.5273, -183.9315, -185.6185, -187.2179, -187.6581],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0102, device='cuda:0', dtype=torch.float64)
tensor([-188.5851, -183.9294, -185.2921, -187.0297, -187.8136],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0087, device='cuda:0', dtype=torch.float64)
tensor([-188.5804, -183.9348, -184.8595, -186.7038, -187.9596],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0120, device='cuda:0', dtype=torch.float64)
tensor([-188.6221, -183.9486, -184.5233, -186.4950, -188.1075],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0102, device='cuda:0', dtype=torch.float64)
tensor([-188.8907, -183.9973, -184.1185, -186.4420, -188.4103],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0097, device='cuda:0', dtype=torch.float64)
tensor([-189.1422, -184.1085, -183.8143, -186.4209, -188.6896],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0096, device='cuda:0', dtype=torch.float64)
tensor([-189.3379, -184.1819, -183.7190, -186.5058, -188.8606],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0095, device='cuda:0', dtype=torch.float64)
tensor([-189.5899, -184.2373, -183.6332, -186.6528, -189.0482],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0102, device='cuda:0', dtype=torch.float64)
tensor([-189.6673, -184.2699, -183.5406, -186.6175, -189.1351],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0088, device='cuda:0', dtype=torch.float64)
tensor([-189.7242, -184.3262, -183.5427, -186.6380, -189.1817],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0092, device='cuda:0', dtype=torch.float64)
tensor([-189.7842, -184.3956, -183.6102, -186.7029, -189.2296],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0111, device='cuda:0', dtype=torch.float64)
tensor([-189.5972, -184.4039, -183.8351, -186.6488, -189.0289],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0114, device='cuda:0', dtype=torch.float64)
tensor([-189.2416, -184.3700, -184.2834, -186.6021, -188.6180],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0086, device='cuda:0', dtype=torch.float64)
tensor([-188.9029, -184.3266, -184.5433, -186.4481, -188.3001],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0088, device='cuda:0', dtype=torch.float64)
tensor([-188.7233, -184.2321, -185.0453, -186.6567, -187.9525],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0094, device='cuda:0', dtype=torch.float64)
tensor([-188.5012, -184.1593, -185.3857, -186.6982, -187.6444],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0088, device='cuda:0', dtype=torch.float64)
tensor([-188.2609, -184.0775, -185.6597, -186.6960, -187.3684],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0096, device='cuda:0', dtype=torch.float64)
tensor([-188.1295, -183.9861, -185.8411, -186.7345, -187.1790],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0091, device='cuda:0', dtype=torch.float64)
tensor([-188.0252, -183.9367, -185.9054, -186.7074, -187.0190],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0090, device='cuda:0', dtype=torch.float64)
tensor([-188.2154, -183.9250, -185.9530, -186.9481, -187.0332],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0102, device='cuda:0', dtype=torch.float64)
tensor([-188.3616, -183.9005, -185.8144, -187.0163, -187.1145],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0096, device='cuda:0', dtype=torch.float64)
tensor([-188.4737, -183.8780, -185.6335, -187.0265, -187.2069],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0096, device='cuda:0', dtype=torch.float64)
tensor([-188.5411, -183.8893, -185.2449, -186.8365, -187.3670],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0086, device='cuda:0', dtype=torch.float64)
tensor([-188.4925, -183.8765, -184.8865, -186.5631, -187.4381],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0083, device='cuda:0', dtype=torch.float64)
tensor([-188.4891, -183.8817, -184.4816, -186.2791, -187.5478],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0094, device='cuda:0', dtype=torch.float64)
tensor([-188.5229, -183.9049, -184.2659, -186.1778, -187.6228],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0078, device='cuda:0', dtype=torch.float64)
tensor([-188.5859, -183.9626, -184.0666, -186.1173, -187.7361],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0092, device='cuda:0', dtype=torch.float64)
tensor([-188.5755, -183.9953, -184.1064, -186.1835, -187.7144],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0070, device='cuda:0', dtype=torch.float64)
tensor([-188.5312, -184.0098, -184.0519, -186.1289, -187.7203],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0099, device='cuda:0', dtype=torch.float64)
tensor([-188.5455, -184.0747, -183.9604, -186.1088, -187.7918],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0099, device='cuda:0', dtype=torch.float64)
tensor([-188.6957, -184.1558, -184.0561, -186.3767, -187.8634],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0106, device='cuda:0', dtype=torch.float64)
tensor([-188.8034, -184.2017, -184.0220, -186.5137, -187.9389],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0093, device='cuda:0', dtype=torch.float64)
tensor([-188.9708, -184.2741, -183.9372, -186.6791, -188.0814],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0091, device='cuda:0', dtype=torch.float64)
tensor([-188.9699, -184.2990, -184.0067, -186.7868, -188.0644],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0101, device='cuda:0', dtype=torch.float64)
tensor([-188.9359, -184.3131, -184.0491, -186.8377, -188.0380],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0090, device='cuda:0', dtype=torch.float64)
tensor([-188.8862, -184.3246, -184.1813, -186.9389, -187.9571],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0093, device='cuda:0', dtype=torch.float64)
tensor([-188.7766, -184.3733, -184.2647, -186.9282, -187.8667],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0091, device='cuda:0', dtype=torch.float64)
tensor([-188.6951, -184.3990, -184.2857, -186.8874, -187.8220],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0080, device='cuda:0', dtype=torch.float64)
tensor([-188.6037, -184.4056, -184.3944, -186.8975, -187.7278],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0093, device='cuda:0', dtype=torch.float64)
tensor([-188.3629, -184.4202, -184.3136, -186.6182, -187.6273],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0090, device='cuda:0', dtype=torch.float64)
tensor([-188.0470, -184.4157, -184.1309, -186.1857, -187.5424],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0092, device='cuda:0', dtype=torch.float64)
tensor([-187.7445, -184.4091, -183.7958, -185.6562, -187.5217],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0093, device='cuda:0', dtype=torch.float64)
tensor([-187.5785, -184.4446, -183.5121, -185.2891, -187.5430],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0091, device='cuda:0', dtype=torch.float64)
tensor([-187.3797, -184.4452, -183.3323, -184.9704, -187.5074],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0100, device='cuda:0', dtype=torch.float64)
tensor([-187.2391, -184.4515, -183.2306, -184.7691, -187.4640],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0099, device='cuda:0', dtype=torch.float64)
tensor([-187.1591, -184.4389, -183.4079, -184.8464, -187.3301],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0104, device='cuda:0', dtype=torch.float64)
tensor([-187.2164, -184.3858, -183.6899, -185.1397, -187.2221],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0104, device='cuda:0', dtype=torch.float64)
tensor([-187.3758, -184.3425, -183.8247, -185.4059, -187.2172],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0096, device='cuda:0', dtype=torch.float64)
tensor([-187.5764, -184.2711, -184.1706, -185.8744, -187.1607],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0095, device='cuda:0', dtype=torch.float64)
tensor([-188.0232, -184.2387, -184.4126, -186.5000, -187.2657],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0074, device='cuda:0', dtype=torch.float64)
tensor([-188.4908, -184.2316, -184.5060, -187.0477, -187.4526],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0109, device='cuda:0', dtype=torch.float64)
tensor([-188.8419, -184.2407, -184.7178, -187.5561, -187.5441],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0098, device='cuda:0', dtype=torch.float64)
tensor([-188.9388, -184.2296, -184.6944, -187.6405, -187.5793],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0102, device='cuda:0', dtype=torch.float64)
tensor([-188.7800, -184.2229, -184.4934, -187.3613, -187.5407],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0097, device='cuda:0', dtype=torch.float64)
tensor([-188.6756, -184.2051, -184.1843, -187.0583, -187.5799],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0092, device='cuda:0', dtype=torch.float64)
tensor([-188.5630, -184.1772, -183.7661, -186.6538, -187.6311],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0078, device='cuda:0', dtype=torch.float64)
tensor([-188.3532, -184.1834, -183.4148, -186.1902, -187.5956],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0101, device='cuda:0', dtype=torch.float64)
tensor([-188.1424, -184.1709, -183.2651, -185.8644, -187.4907],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0092, device='cuda:0', dtype=torch.float64)
tensor([-187.9388, -184.1190, -183.3047, -185.6990, -187.2895],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0073, device='cuda:0', dtype=torch.float64)
tensor([-187.8339, -184.1073, -183.2175, -185.5389, -187.2110],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0104, device='cuda:0', dtype=torch.float64)
tensor([-187.8018, -184.0823, -183.0565, -185.3863, -187.2172],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0089, device='cuda:0', dtype=torch.float64)
tensor([-187.7495, -184.0592, -183.0420, -185.3352, -187.1693],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0094, device='cuda:0', dtype=torch.float64)
tensor([-187.6912, -183.9951, -183.1925, -185.3988, -187.0460],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0086, device='cuda:0', dtype=torch.float64)
tensor([-187.5060, -183.9000, -183.4120, -185.3963, -186.8191],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0090, device='cuda:0', dtype=torch.float64)
tensor([-187.3213, -183.8249, -183.3970, -185.2248, -186.6934],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0085, device='cuda:0', dtype=torch.float64)
tensor([-187.0393, -183.7562, -183.4003, -184.9571, -186.5056],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0088, device='cuda:0', dtype=torch.float64)
tensor([-186.8986, -183.6868, -183.4539, -184.8522, -186.3868],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0095, device='cuda:0', dtype=torch.float64)
tensor([-186.9045, -183.6778, -183.3528, -184.7682, -186.4248],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0102, device='cuda:0', dtype=torch.float64)
tensor([-187.2061, -183.7053, -183.4663, -185.1221, -186.5394],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0101, device='cuda:0', dtype=torch.float64)
tensor([-187.6108, -183.7331, -183.4739, -185.5009, -186.7577],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0101, device='cuda:0', dtype=torch.float64)
tensor([-188.0036, -183.7951, -183.4549, -185.8444, -187.0059],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0103, device='cuda:0', dtype=torch.float64)
tensor([-188.2517, -183.7913, -183.5677, -186.1457, -187.0828],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0086, device='cuda:0', dtype=torch.float64)
tensor([-188.4213, -183.7574, -183.7754, -186.4350, -187.0887],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0087, device='cuda:0', dtype=torch.float64)
tensor([-188.4604, -183.6926, -183.9469, -186.5899, -187.0336],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0096, device='cuda:0', dtype=torch.float64)
tensor([-188.3650, -183.5888, -183.9990, -186.5611, -186.9243],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0094, device='cuda:0', dtype=torch.float64)
tensor([-188.3529, -183.5495, -183.9675, -186.5555, -186.9274],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0095, device='cuda:0', dtype=torch.float64)
tensor([-188.4007, -183.5261, -183.9204, -186.6102, -186.9829],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0096, device='cuda:0', dtype=torch.float64)
tensor([-188.3744, -183.5094, -183.8050, -186.5443, -187.0083],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0096, device='cuda:0', dtype=torch.float64)
tensor([-188.2358, -183.4691, -183.6664, -186.3543, -186.9739],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0101, device='cuda:0', dtype=torch.float64)
tensor([-188.0771, -183.3929, -183.5914, -186.1928, -186.8887],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0088, device='cuda:0', dtype=torch.float64)
tensor([-187.8070, -183.2907, -183.7004, -186.0343, -186.6649],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0111, device='cuda:0', dtype=torch.float64)
tensor([-187.5000, -183.1836, -184.0744, -186.0516, -186.3159],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0098, device='cuda:0', dtype=torch.float64)
tensor([-187.3379, -183.1192, -184.2260, -186.0386, -186.1395],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0104, device='cuda:0', dtype=torch.float64)
tensor([-187.2083, -183.0766, -184.0759, -185.8334, -186.1211],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0097, device='cuda:0', dtype=torch.float64)
tensor([-186.9953, -183.0360, -183.7608, -185.4264, -186.1193],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0098, device='cuda:0', dtype=torch.float64)
tensor([-187.0159, -182.9937, -183.6570, -185.3911, -186.1600],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0111, device='cuda:0', dtype=torch.float64)
tensor([-187.0521, -182.9215, -183.6431, -185.4420, -186.1547],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0088, device='cuda:0', dtype=torch.float64)
tensor([-187.0902, -182.8434, -183.7095, -185.5355, -186.1349],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0098, device='cuda:0', dtype=torch.float64)
tensor([-187.1582, -182.7860, -183.7039, -185.5936, -186.1724],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0095, device='cuda:0', dtype=torch.float64)
tensor([-187.1613, -182.7370, -183.7614, -185.6318, -186.1353],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0095, device='cuda:0', dtype=torch.float64)
tensor([-187.1383, -182.7262, -183.8787, -185.6804, -186.0643],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0095, device='cuda:0', dtype=torch.float64)
tensor([-187.2104, -182.7355, -183.8724, -185.7181, -186.1193],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0096, device='cuda:0', dtype=torch.float64)
tensor([-187.4645, -182.7706, -183.9688, -186.0082, -186.2354],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0100, device='cuda:0', dtype=torch.float64)
tensor([-187.7956, -182.8366, -183.8093, -186.1712, -186.5291],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0103, device='cuda:0', dtype=torch.float64)
tensor([-188.3325, -182.9222, -183.5579, -186.4621, -186.9682],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0118, device='cuda:0', dtype=torch.float64)
tensor([-188.6871, -182.9805, -183.0618, -186.4130, -187.4244],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0104, device='cuda:0', dtype=torch.float64)
tensor([-188.9753, -183.0585, -182.6985, -186.3884, -187.7854],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0089, device='cuda:0', dtype=torch.float64)
tensor([-189.0178, -183.0928, -182.4528, -186.2220, -187.9649],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0094, device='cuda:0', dtype=torch.float64)
tensor([-188.9815, -183.1418, -182.5462, -186.2369, -187.9490],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0089, device='cuda:0', dtype=torch.float64)
tensor([-189.0063, -183.1425, -182.8119, -186.4529, -187.8575],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0097, device='cuda:0', dtype=torch.float64)
tensor([-188.8992, -183.0762, -183.3525, -186.7466, -187.5786],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0102, device='cuda:0', dtype=torch.float64)
tensor([-188.8445, -183.0365, -183.7543, -186.9853, -187.3685],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0098, device='cuda:0', dtype=torch.float64)
tensor([-188.7913, -182.9803, -184.0337, -187.1485, -187.2062],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0094, device='cuda:0', dtype=torch.float64)
tensor([-188.6399, -182.8862, -184.1601, -187.1268, -187.0320],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0102, device='cuda:0', dtype=torch.float64)
tensor([-188.3880, -182.8487, -184.0586, -186.8220, -186.9257],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0101, device='cuda:0', dtype=torch.float64)
tensor([-188.1797, -182.8422, -183.7700, -186.4110, -186.9369],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0103, device='cuda:0', dtype=torch.float64)
tensor([-187.9503, -182.8512, -183.2460, -185.8047, -187.0606],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0092, device='cuda:0', dtype=torch.float64)
tensor([-187.8207, -182.8768, -182.9136, -185.4326, -187.1538],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0098, device='cuda:0', dtype=torch.float64)
tensor([-187.6644, -182.8589, -182.7229, -185.1394, -187.1824],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0115, device='cuda:0', dtype=torch.float64)
tensor([-187.5642, -182.8471, -182.9045, -185.1714, -187.1085],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0103, device='cuda:0', dtype=torch.float64)
tensor([-187.5926, -182.7973, -183.2495, -185.4643, -187.0137],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0078, device='cuda:0', dtype=torch.float64)
tensor([-187.5723, -182.7352, -183.5627, -185.6853, -186.9046],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0102, device='cuda:0', dtype=torch.float64)
tensor([-187.4568, -182.6449, -184.0170, -185.9103, -186.6610],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0082, device='cuda:0', dtype=torch.float64)
tensor([-187.3451, -182.5459, -184.2648, -185.9819, -186.4942],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0095, device='cuda:0', dtype=torch.float64)
tensor([-187.2974, -182.4643, -184.4184, -186.0446, -186.4019],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0096, device='cuda:0', dtype=torch.float64)
tensor([-187.2587, -182.3865, -184.3780, -185.9864, -186.3816],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0081, device='cuda:0', dtype=torch.float64)
tensor([-187.1779, -182.2941, -184.3214, -185.8873, -186.3226],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0094, device='cuda:0', dtype=torch.float64)
tensor([-187.1092, -182.2345, -184.3055, -185.8191, -186.2506],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0093, device='cuda:0', dtype=torch.float64)
tensor([-187.0037, -182.1698, -184.0693, -185.5635, -186.2430],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0092, device='cuda:0', dtype=torch.float64)
tensor([-187.1076, -182.1143, -183.8542, -185.5231, -186.3286],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0095, device='cuda:0', dtype=torch.float64)
tensor([-187.1280, -182.0845, -183.6813, -185.4257, -186.3831],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0107, device='cuda:0', dtype=torch.float64)
tensor([-187.2280, -182.1029, -183.5513, -185.4295, -186.5074],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0102, device='cuda:0', dtype=torch.float64)
tensor([-187.3139, -182.0820, -183.2716, -185.3309, -186.6716],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0100, device='cuda:0', dtype=torch.float64)
tensor([-187.4196, -182.1042, -183.1728, -185.3799, -186.7749],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0095, device='cuda:0', dtype=torch.float64)
tensor([-187.5175, -182.1340, -183.2364, -185.5320, -186.8216],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0085, device='cuda:0', dtype=torch.float64)
tensor([-187.6753, -182.1881, -183.2787, -185.7302, -186.9002],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0103, device='cuda:0', dtype=torch.float64)
tensor([-187.8428, -182.2370, -183.3163, -185.9403, -186.9754],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0120, device='cuda:0', dtype=torch.float64)
tensor([-187.9640, -182.2977, -183.2541, -186.0271, -187.0812],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0088, device='cuda:0', dtype=torch.float64)
tensor([-188.1524, -182.3728, -183.1685, -186.1557, -187.2328],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0109, device='cuda:0', dtype=torch.float64)
tensor([-188.4675, -182.5310, -183.0247, -186.3329, -187.5044],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0094, device='cuda:0', dtype=torch.float64)
tensor([-188.6318, -182.6540, -182.8287, -186.3477, -187.7210],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0090, device='cuda:0', dtype=torch.float64)
tensor([-188.6862, -182.7550, -182.7003, -186.3192, -187.8414],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0101, device='cuda:0', dtype=torch.float64)
tensor([-188.4796, -182.8277, -182.7625, -186.1791, -187.7141],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0094, device='cuda:0', dtype=torch.float64)
tensor([-188.1388, -182.8989, -182.6505, -185.7751, -187.5787],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0084, device='cuda:0', dtype=torch.float64)
tensor([-187.8001, -182.9055, -182.9524, -185.6827, -187.2683],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0093, device='cuda:0', dtype=torch.float64)
tensor([-187.3492, -182.9974, -182.9840, -185.2638, -187.0095],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0097, device='cuda:0', dtype=torch.float64)
tensor([-186.9959, -183.1056, -182.8130, -184.7971, -186.9070],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0079, device='cuda:0', dtype=torch.float64)
tensor([-186.6850, -183.1968, -182.7453, -184.4431, -186.7829],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0106, device='cuda:0', dtype=torch.float64)
tensor([-186.6074, -183.3302, -182.6260, -184.2480, -186.8439],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0085, device='cuda:0', dtype=torch.float64)
tensor([-186.7104, -183.4188, -182.7939, -184.4507, -186.8614],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0092, device='cuda:0', dtype=torch.float64)
tensor([-186.9146, -183.4771, -182.9728, -184.7678, -186.8960],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0096, device='cuda:0', dtype=torch.float64)
tensor([-187.3529, -183.5127, -183.3768, -185.4722, -186.9251],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0094, device='cuda:0', dtype=torch.float64)
tensor([-187.9312, -183.5495, -183.7286, -186.2720, -187.0445],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0086, device='cuda:0', dtype=torch.float64)
tensor([-188.3753, -183.5933, -183.8237, -186.7541, -187.2122],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0089, device='cuda:0', dtype=torch.float64)
tensor([-188.7299, -183.6141, -183.7996, -187.0827, -187.4216],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0088, device='cuda:0', dtype=torch.float64)
tensor([-189.0380, -183.6467, -183.7383, -187.3375, -187.6151],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0095, device='cuda:0', dtype=torch.float64)
tensor([-189.2339, -183.6848, -183.5670, -187.3998, -187.7786],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0114, device='cuda:0', dtype=torch.float64)
tensor([-188.8484, -183.6034, -183.3795, -186.9271, -187.6260],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0085, device='cuda:0', dtype=torch.float64)
tensor([-188.4004, -183.5189, -183.1833, -186.3948, -187.4372],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0093, device='cuda:0', dtype=torch.float64)
tensor([-187.9153, -183.4241, -183.0933, -185.8887, -187.1470],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0110, device='cuda:0', dtype=torch.float64)
tensor([-187.3984, -183.2862, -182.8754, -185.2798, -186.8720],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0085, device='cuda:0', dtype=torch.float64)
tensor([-186.9931, -183.1589, -182.8111, -184.8868, -186.6095],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0107, device='cuda:0', dtype=torch.float64)
tensor([-186.8752, -183.0800, -182.6962, -184.7180, -186.5505],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0107, device='cuda:0', dtype=torch.float64)
tensor([-186.6691, -183.0427, -182.4090, -184.3502, -186.5274],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0091, device='cuda:0', dtype=torch.float64)
tensor([-186.4575, -182.9671, -182.0578, -183.9496, -186.5138],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0089, device='cuda:0', dtype=torch.float64)
tensor([-186.3822, -182.9126, -181.7660, -183.7160, -186.5494],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0085, device='cuda:0', dtype=torch.float64)
tensor([-186.3125, -182.8150, -181.6288, -183.5853, -186.5182],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0109, device='cuda:0', dtype=torch.float64)
tensor([-186.1518, -182.6776, -181.7229, -183.5226, -186.3373],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0102, device='cuda:0', dtype=torch.float64)
tensor([-186.0518, -182.5820, -182.2525, -183.8234, -186.0137],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0109, device='cuda:0', dtype=torch.float64)
tensor([-186.0546, -182.5395, -183.0219, -184.3811, -185.6800],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0099, device='cuda:0', dtype=torch.float64)
tensor([-186.2042, -182.5752, -183.8668, -185.1108, -185.4042],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0105, device='cuda:0', dtype=torch.float64)
tensor([-186.4270, -182.6185, -184.3123, -185.6159, -185.3183],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0099, device='cuda:0', dtype=torch.float64)
tensor([-186.4454, -182.6252, -184.4434, -185.7079, -185.2682],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0102, device='cuda:0', dtype=torch.float64)
tensor([-186.5359, -182.6562, -184.2446, -185.6550, -185.4267],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0102, device='cuda:0', dtype=torch.float64)
tensor([-186.7271, -182.7163, -183.7902, -185.5177, -185.7518],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0097, device='cuda:0', dtype=torch.float64)
tensor([-186.7552, -182.7520, -183.3257, -185.2289, -185.9946],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0097, device='cuda:0', dtype=torch.float64)
tensor([-186.8094, -182.7700, -182.9675, -185.0231, -186.1966],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0089, device='cuda:0', dtype=torch.float64)
tensor([-186.9847, -182.8406, -182.3873, -184.7618, -186.5651],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0092, device='cuda:0', dtype=torch.float64)
tensor([-187.0941, -182.8941, -181.8253, -184.4731, -186.8693],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0110, device='cuda:0', dtype=torch.float64)
tensor([-187.0476, -182.9433, -181.3328, -184.0690, -187.0653],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0106, device='cuda:0', dtype=torch.float64)
tensor([-186.9684, -182.9648, -181.2202, -183.9164, -187.1081],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0105, device='cuda:0', dtype=torch.float64)
tensor([-186.9015, -182.9990, -181.3640, -183.9602, -187.0424],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0092, device='cuda:0', dtype=torch.float64)
tensor([-186.8877, -183.0196, -181.5762, -184.1101, -186.9761],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0083, device='cuda:0', dtype=torch.float64)
tensor([-186.7399, -183.0000, -181.9172, -184.2368, -186.7706],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0093, device='cuda:0', dtype=torch.float64)
tensor([-186.6077, -182.9915, -182.3589, -184.4421, -186.5217],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0099, device='cuda:0', dtype=torch.float64)
tensor([-186.4172, -182.9317, -182.8772, -184.6445, -186.1899],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0097, device='cuda:0', dtype=torch.float64)
tensor([-186.2647, -182.8929, -183.1670, -184.7038, -185.9879],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0076, device='cuda:0', dtype=torch.float64)
tensor([-186.0562, -182.8415, -183.3248, -184.6209, -185.7972],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0083, device='cuda:0', dtype=torch.float64)
tensor([-185.9684, -182.8156, -183.3946, -184.5764, -185.7189],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0092, device='cuda:0', dtype=torch.float64)
tensor([-186.0109, -182.8328, -183.3638, -184.5773, -185.7406],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0086, device='cuda:0', dtype=torch.float64)
tensor([-186.0820, -182.8574, -183.3657, -184.6324, -185.7575],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0095, device='cuda:0', dtype=torch.float64)
tensor([-186.3834, -182.9003, -183.4943, -184.9971, -185.8096],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0086, device='cuda:0', dtype=torch.float64)
tensor([-186.7976, -183.0012, -183.5406, -185.3974, -185.9719],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0097, device='cuda:0', dtype=torch.float64)
tensor([-187.3012, -183.0642, -183.4806, -185.8176, -186.2530],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0094, device='cuda:0', dtype=torch.float64)
tensor([-187.6986, -183.1443, -183.1432, -185.9668, -186.6204],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0078, device='cuda:0', dtype=torch.float64)
tensor([-188.0528, -183.2258, -182.7078, -186.0050, -187.0121],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0088, device='cuda:0', dtype=torch.float64)
tensor([-188.2041, -183.3233, -182.1466, -185.7637, -187.3643],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0097, device='cuda:0', dtype=torch.float64)
tensor([-188.2394, -183.3467, -181.6591, -185.4628, -187.6140],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0089, device='cuda:0', dtype=torch.float64)
tensor([-188.1446, -183.3103, -181.6236, -185.3466, -187.5577],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0101, device='cuda:0', dtype=torch.float64)
tensor([-187.7832, -183.2321, -181.6741, -185.0415, -187.3164],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0084, device='cuda:0', dtype=torch.float64)
tensor([-187.3637, -183.1396, -181.8187, -184.7563, -187.0125],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0093, device='cuda:0', dtype=torch.float64)
tensor([-187.0549, -183.0386, -182.1826, -184.7282, -186.6532],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0098, device='cuda:0', dtype=torch.float64)
tensor([-186.6353, -182.9215, -182.6753, -184.6964, -186.1607],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0101, device='cuda:0', dtype=torch.float64)
tensor([-186.3202, -182.8215, -182.8592, -184.5621, -185.8728],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0088, device='cuda:0', dtype=torch.float64)
tensor([-186.1185, -182.7321, -182.8847, -184.4293, -185.7257],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0078, device='cuda:0', dtype=torch.float64)
tensor([-185.9416, -182.6471, -183.0580, -184.4176, -185.5238],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0101, device='cuda:0', dtype=torch.float64)
tensor([-185.9194, -182.4659, -183.2905, -184.6168, -185.3255],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0095, device='cuda:0', dtype=torch.float64)
tensor([-186.0316, -182.3010, -183.5235, -184.9361, -185.2147],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0098, device='cuda:0', dtype=torch.float64)
tensor([-186.1817, -182.1902, -183.6145, -185.1754, -185.1986],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0103, device='cuda:0', dtype=torch.float64)
tensor([-186.2232, -182.0968, -183.3367, -185.0621, -185.2981],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0099, device='cuda:0', dtype=torch.float64)
tensor([-186.2765, -182.0219, -183.1420, -185.0020, -185.3917],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0093, device='cuda:0', dtype=torch.float64)
tensor([-186.3809, -181.9411, -182.9766, -185.0089, -185.4700],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0088, device='cuda:0', dtype=torch.float64)
tensor([-186.4391, -181.8702, -182.6356, -184.8391, -185.5942],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0077, device='cuda:0', dtype=torch.float64)
tensor([-186.5491, -181.7947, -182.2904, -184.7259, -185.7493],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0097, device='cuda:0', dtype=torch.float64)
tensor([-186.6372, -181.7384, -181.7773, -184.5005, -185.9525],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0087, device='cuda:0', dtype=torch.float64)
tensor([-186.7974, -181.7225, -181.3289, -184.3675, -186.1927],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0103, device='cuda:0', dtype=torch.float64)
tensor([-186.7057, -181.7132, -180.9413, -184.0244, -186.2820],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0094, device='cuda:0', dtype=torch.float64)
tensor([-186.4680, -181.7208, -180.6463, -183.6019, -186.2573],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0084, device='cuda:0', dtype=torch.float64)
tensor([-186.2150, -181.7489, -180.4980, -183.2632, -186.1930],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0105, device='cuda:0', dtype=torch.float64)
tensor([-185.8124, -181.7012, -180.6929, -183.0489, -185.8914],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0104, device='cuda:0', dtype=torch.float64)
tensor([-185.5135, -181.6494, -181.4135, -183.3102, -185.4479],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0082, device='cuda:0', dtype=torch.float64)
tensor([-185.3025, -181.6424, -182.2266, -183.6984, -185.0443],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0087, device='cuda:0', dtype=torch.float64)
tensor([-185.1257, -181.6361, -183.0377, -184.1126, -184.6892],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0077, device='cuda:0', dtype=torch.float64)
tensor([-185.0792, -181.6696, -183.7748, -184.5836, -184.4216],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0096, device='cuda:0', dtype=torch.float64)
tensor([-185.1735, -181.7138, -184.1806, -184.9549, -184.3486],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0100, device='cuda:0', dtype=torch.float64)
tensor([-185.2008, -181.7520, -184.1518, -184.9514, -184.3776],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0081, device='cuda:0', dtype=torch.float64)
tensor([-185.1504, -181.7529, -183.8882, -184.7258, -184.4657],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0091, device='cuda:0', dtype=torch.float64)
tensor([-185.2235, -181.7435, -183.3110, -184.3919, -184.7096],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0096, device='cuda:0', dtype=torch.float64)
tensor([-185.5415, -181.8194, -182.6658, -184.2421, -185.1294],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0101, device='cuda:0', dtype=torch.float64)
tensor([-185.9203, -181.8688, -182.1535, -184.2394, -185.4951],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0089, device='cuda:0', dtype=torch.float64)
tensor([-186.1428, -181.8998, -181.7708, -184.1924, -185.7478],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0088, device='cuda:0', dtype=torch.float64)
tensor([-186.4516, -181.9621, -181.2389, -184.1213, -186.1196],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0098, device='cuda:0', dtype=torch.float64)
tensor([-186.8233, -182.0097, -180.8936, -184.2476, -186.4697],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0099, device='cuda:0', dtype=torch.float64)
tensor([-187.1199, -182.0697, -180.5299, -184.2834, -186.7895],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0091, device='cuda:0', dtype=torch.float64)
tensor([-187.3223, -182.1020, -180.2056, -184.2507, -187.0221],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0112, device='cuda:0', dtype=torch.float64)
tensor([-187.2169, -181.9937, -180.1031, -184.1015, -187.0021],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0108, device='cuda:0', dtype=torch.float64)
tensor([-187.2011, -181.8719, -179.9897, -184.0263, -187.0219],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0084, device='cuda:0', dtype=torch.float64)
tensor([-187.1630, -181.7482, -180.1364, -184.1232, -186.9205],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0100, device='cuda:0', dtype=torch.float64)
tensor([-186.9172, -181.6346, -180.4428, -184.1305, -186.6391],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0098, device='cuda:0', dtype=torch.float64)
tensor([-186.6492, -181.5192, -180.8728, -184.2119, -186.2625],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0091, device='cuda:0', dtype=torch.float64)
tensor([-186.3456, -181.3955, -181.5204, -184.4203, -185.7903],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0094, device='cuda:0', dtype=torch.float64)
tensor([-185.9981, -181.3234, -182.0381, -184.4915, -185.3991],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0077, device='cuda:0', dtype=torch.float64)
tensor([-185.6796, -181.2308, -182.5612, -184.5939, -185.0068],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0094, device='cuda:0', dtype=torch.float64)
tensor([-185.2774, -181.1447, -182.8256, -184.4660, -184.6841],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0094, device='cuda:0', dtype=torch.float64)
tensor([-185.0658, -181.0680, -182.8976, -184.3799, -184.5278],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0095, device='cuda:0', dtype=torch.float64)
tensor([-184.9734, -180.9712, -182.8307, -184.3062, -184.4773],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0082, device='cuda:0', dtype=torch.float64)
tensor([-184.8673, -180.8842, -182.5376, -184.0685, -184.5328],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0093, device='cuda:0', dtype=torch.float64)
tensor([-184.8674, -180.7847, -182.1511, -183.8587, -184.6541],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0092, device='cuda:0', dtype=torch.float64)
tensor([-185.1033, -180.7513, -181.6855, -183.7730, -184.9313],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0098, device='cuda:0', dtype=torch.float64)
tensor([-185.3097, -180.7688, -181.4248, -183.7883, -185.1323],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0091, device='cuda:0', dtype=torch.float64)
tensor([-185.6289, -180.7999, -181.2526, -183.9534, -185.3412],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0093, device='cuda:0', dtype=torch.float64)
tensor([-186.0332, -180.8676, -181.1194, -184.2258, -185.5778],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0088, device='cuda:0', dtype=torch.float64)
tensor([-186.4438, -180.9539, -181.2292, -184.6742, -185.7318],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0090, device='cuda:0', dtype=torch.float64)
tensor([-186.6750, -181.0266, -181.3258, -184.9368, -185.8172],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0101, device='cuda:0', dtype=torch.float64)
tensor([-186.9147, -181.0891, -181.5351, -185.2629, -185.8756],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0095, device='cuda:0', dtype=torch.float64)
tensor([-187.0800, -181.1914, -181.5744, -185.3894, -185.9810],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0095, device='cuda:0', dtype=torch.float64)
tensor([-187.0856, -181.2451, -181.6867, -185.4189, -185.9726],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0096, device='cuda:0', dtype=torch.float64)
tensor([-187.1446, -181.3686, -181.5432, -185.3076, -186.1294],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0099, device='cuda:0', dtype=torch.float64)
tensor([-187.0659, -181.4972, -181.2818, -184.9861, -186.2513],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0106, device='cuda:0', dtype=torch.float64)
tensor([-186.7394, -181.5666, -181.1417, -184.5204, -186.1673],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0122, device='cuda:0', dtype=torch.float64)
tensor([-186.2273, -181.6131, -180.8060, -183.7535, -186.0663],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0080, device='cuda:0', dtype=torch.float64)
tensor([-185.8999, -181.6592, -180.6438, -183.2736, -185.9844],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0087, device='cuda:0', dtype=torch.float64)
tensor([-185.5840, -181.6457, -180.5839, -182.8952, -185.8487],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0102, device='cuda:0', dtype=torch.float64)
tensor([-185.3905, -181.5546, -180.8287, -182.8574, -185.6332],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0087, device='cuda:0', dtype=torch.float64)
tensor([-185.2989, -181.4221, -181.2664, -183.0553, -185.3729],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0092, device='cuda:0', dtype=torch.float64)
tensor([-185.3319, -181.2724, -181.7943, -183.4495, -185.1547],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0094, device='cuda:0', dtype=torch.float64)
tensor([-185.4052, -181.1829, -182.4606, -183.9611, -184.9058],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0105, device='cuda:0', dtype=torch.float64)
tensor([-185.5732, -181.1043, -182.8699, -184.4005, -184.7939],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0099, device='cuda:0', dtype=torch.float64)
tensor([-185.6960, -181.0205, -183.0911, -184.6740, -184.7176],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0094, device='cuda:0', dtype=torch.float64)
tensor([-185.9490, -181.0390, -183.1517, -184.9362, -184.7943],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0088, device='cuda:0', dtype=torch.float64)
tensor([-186.1107, -181.0812, -182.7402, -184.7886, -185.0391],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0093, device='cuda:0', dtype=torch.float64)
tensor([-186.2248, -181.1378, -182.0723, -184.4106, -185.3920],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0091, device='cuda:0', dtype=torch.float64)
tensor([-186.2854, -181.1570, -181.5189, -184.0729, -185.6644],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0095, device='cuda:0', dtype=torch.float64)
tensor([-186.3540, -181.1605, -181.0018, -183.7874, -185.9089],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0099, device='cuda:0', dtype=torch.float64)
tensor([-186.2480, -181.1735, -180.7089, -183.4861, -185.9519],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0086, device='cuda:0', dtype=torch.float64)
tensor([-186.1818, -181.2105, -180.5528, -183.2952, -185.9419],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0090, device='cuda:0', dtype=torch.float64)
tensor([-186.0573, -181.1719, -180.6016, -183.2082, -185.8016],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0089, device='cuda:0', dtype=torch.float64)
tensor([-185.9144, -181.1012, -180.9276, -183.3006, -185.5287],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0082, device='cuda:0', dtype=torch.float64)
tensor([-185.7778, -180.9888, -181.2336, -183.4120, -185.2469],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0114, device='cuda:0', dtype=torch.float64)
tensor([-185.6530, -180.8583, -181.8101, -183.7239, -184.8539],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0100, device='cuda:0', dtype=torch.float64)
tensor([-185.4732, -180.7916, -182.2469, -183.8807, -184.4871],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0095, device='cuda:0', dtype=torch.float64)
tensor([-185.0576, -180.7191, -182.3998, -183.6312, -184.1312],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0090, device='cuda:0', dtype=torch.float64)
tensor([-184.7389, -180.7195, -182.3900, -183.3426, -183.8919],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0093, device='cuda:0', dtype=torch.float64)
tensor([-184.4821, -180.7327, -182.3537, -183.0926, -183.7005],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0096, device='cuda:0', dtype=torch.float64)
tensor([-184.2649, -180.7804, -182.3164, -182.8914, -183.5596],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0094, device='cuda:0', dtype=torch.float64)
tensor([-184.2302, -180.8045, -182.0652, -182.7232, -183.5839],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0112, device='cuda:0', dtype=torch.float64)
tensor([-184.3802, -180.8784, -181.7895, -182.6987, -183.7537],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0107, device='cuda:0', dtype=torch.float64)
tensor([-184.6990, -180.9455, -181.4804, -182.8285, -183.9935],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0101, device='cuda:0', dtype=torch.float64)
tensor([-185.0249, -180.9814, -181.3793, -183.1154, -184.1271],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0098, device='cuda:0', dtype=torch.float64)
tensor([-185.4344, -181.0202, -181.4049, -183.5681, -184.2669],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0087, device='cuda:0', dtype=torch.float64)
tensor([-185.6886, -181.0244, -181.3326, -183.8026, -184.3659],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0090, device='cuda:0', dtype=torch.float64)
tensor([-185.8289, -180.9979, -181.4068, -184.0389, -184.3606],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0091, device='cuda:0', dtype=torch.float64)
tensor([-185.8636, -180.9951, -181.3302, -184.0616, -184.3734],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0093, device='cuda:0', dtype=torch.float64)
tensor([-185.8362, -181.0270, -180.9352, -183.8024, -184.4798],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0094, device='cuda:0', dtype=torch.float64)
tensor([-185.8438, -181.0563, -180.6611, -183.6474, -184.5704],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0098, device='cuda:0', dtype=torch.float64)
tensor([-185.7363, -181.1185, -180.3168, -183.3148, -184.6473],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0092, device='cuda:0', dtype=torch.float64)
tensor([-185.6719, -181.2143, -179.9918, -183.0279, -184.7695],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0089, device='cuda:0', dtype=torch.float64)
tensor([-185.5432, -181.2918, -179.8547, -182.8008, -184.7628],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0088, device='cuda:0', dtype=torch.float64)
tensor([-185.3990, -181.3257, -179.7691, -182.5990, -184.7051],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0105, device='cuda:0', dtype=torch.float64)
tensor([-185.0433, -181.3077, -179.9644, -182.3874, -184.4159],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0114, device='cuda:0', dtype=torch.float64)
tensor([-184.6557, -181.3595, -180.0031, -182.0015, -184.2161],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0109, device='cuda:0', dtype=torch.float64)
tensor([-184.3771, -181.3689, -180.1051, -181.7671, -184.0413],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0111, device='cuda:0', dtype=torch.float64)
tensor([-184.2215, -181.3371, -180.3306, -181.7523, -183.8469],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0102, device='cuda:0', dtype=torch.float64)
tensor([-184.2427, -181.2890, -180.3792, -181.7974, -183.8341],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0091, device='cuda:0', dtype=torch.float64)
tensor([-184.3793, -181.2338, -180.4889, -181.9982, -183.8640],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0106, device='cuda:0', dtype=torch.float64)
tensor([-184.5769, -181.2133, -180.4040, -182.1172, -184.0128],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0106, device='cuda:0', dtype=torch.float64)
tensor([-184.7758, -181.1184, -180.5164, -182.3912, -184.0725],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0103, device='cuda:0', dtype=torch.float64)
tensor([-185.1080, -180.9922, -180.6031, -182.7934, -184.2150],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0096, device='cuda:0', dtype=torch.float64)
tensor([-185.4110, -180.8497, -180.7378, -183.2030, -184.3308],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0097, device='cuda:0', dtype=torch.float64)
tensor([-185.5055, -180.6646, -180.8026, -183.3514, -184.3604],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0100, device='cuda:0', dtype=torch.float64)
tensor([-185.4519, -180.4905, -180.9410, -183.4186, -184.2450],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0090, device='cuda:0', dtype=torch.float64)
tensor([-185.3677, -180.3273, -181.0336, -183.4198, -184.1438],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0103, device='cuda:0', dtype=torch.float64)
tensor([-185.2731, -180.2060, -180.9972, -183.3147, -184.1099],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0074, device='cuda:0', dtype=torch.float64)
tensor([-185.2369, -180.1098, -180.9859, -183.2765, -184.0998],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0104, device='cuda:0', dtype=torch.float64)
tensor([-185.1573, -180.0785, -180.9885, -183.1846, -184.0807],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0094, device='cuda:0', dtype=torch.float64)
tensor([-185.0452, -180.0946, -181.0837, -183.1321, -184.0127],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0079, device='cuda:0', dtype=torch.float64)
tensor([-184.9284, -180.1083, -181.2363, -183.1135, -183.9139],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0097, device='cuda:0', dtype=torch.float64)
tensor([-184.7318, -180.1176, -181.3281, -182.9782, -183.7784],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0105, device='cuda:0', dtype=torch.float64)
tensor([-184.6450, -180.1139, -181.2677, -182.8404, -183.7420],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0091, device='cuda:0', dtype=torch.float64)
tensor([-184.6664, -180.1651, -181.2148, -182.7842, -183.7580],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0106, device='cuda:0', dtype=torch.float64)
tensor([-184.7374, -180.2495, -181.2491, -182.8318, -183.7737],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0079, device='cuda:0', dtype=torch.float64)
tensor([-184.8130, -180.3226, -181.1934, -182.8416, -183.8281],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0095, device='cuda:0', dtype=torch.float64)
tensor([-184.9330, -180.4520, -180.9995, -182.7898, -183.9581],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0101, device='cuda:0', dtype=torch.float64)
tensor([-185.0419, -180.5701, -180.8209, -182.7388, -184.0525],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0090, device='cuda:0', dtype=torch.float64)
tensor([-185.1891, -180.6481, -180.5155, -182.6428, -184.2223],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0092, device='cuda:0', dtype=torch.float64)
tensor([-185.4252, -180.7192, -180.3659, -182.7577, -184.3625],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0088, device='cuda:0', dtype=torch.float64)
tensor([-185.6049, -180.7280, -180.3005, -182.8900, -184.4124],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0090, device='cuda:0', dtype=torch.float64)
tensor([-185.7411, -180.7470, -180.2818, -183.0142, -184.4549],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0078, device='cuda:0', dtype=torch.float64)
tensor([-185.7699, -180.7400, -180.3312, -183.0872, -184.4098],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0105, device='cuda:0', dtype=torch.float64)
tensor([-185.8758, -180.6862, -180.3010, -183.1665, -184.4213],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0090, device='cuda:0', dtype=torch.float64)
tensor([-186.0957, -180.5728, -180.3386, -183.4177, -184.4822],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0090, device='cuda:0', dtype=torch.float64)
tensor([-186.1705, -180.4580, -180.2141, -183.4234, -184.5288],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0092, device='cuda:0', dtype=torch.float64)
tensor([-186.2032, -180.3745, -180.1108, -183.4085, -184.5266],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0113, device='cuda:0', dtype=torch.float64)
tensor([-185.9571, -180.3015, -180.2696, -183.2989, -184.2616],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0093, device='cuda:0', dtype=torch.float64)
tensor([-185.6450, -180.2617, -180.4095, -183.1256, -183.9857],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0090, device='cuda:0', dtype=torch.float64)
tensor([-185.3931, -180.2722, -180.4384, -182.9246, -183.7859],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0114, device='cuda:0', dtype=torch.float64)
tensor([-185.2889, -180.3159, -180.2764, -182.7309, -183.7466],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0089, device='cuda:0', dtype=torch.float64)
tensor([-185.0784, -180.3611, -180.0606, -182.3978, -183.6978],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0097, device='cuda:0', dtype=torch.float64)
tensor([-184.9757, -180.3889, -180.0156, -182.2661, -183.6316],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0084, device='cuda:0', dtype=torch.float64)
tensor([-184.9598, -180.3656, -180.1292, -182.3328, -183.5692],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0100, device='cuda:0', dtype=torch.float64)
tensor([-184.6951, -180.3294, -180.3086, -182.2203, -183.3656],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0090, device='cuda:0', dtype=torch.float64)
tensor([-184.5240, -180.3031, -180.5008, -182.2190, -183.2017],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0083, device='cuda:0', dtype=torch.float64)
tensor([-184.3774, -180.2781, -180.7924, -182.2992, -183.0415],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0095, device='cuda:0', dtype=torch.float64)
tensor([-184.3875, -180.2719, -180.7624, -182.2855, -183.0938],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0086, device='cuda:0', dtype=torch.float64)
tensor([-184.5065, -180.2746, -180.8336, -182.4487, -183.1716],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0104, device='cuda:0', dtype=torch.float64)
tensor([-184.7939, -180.2479, -180.8367, -182.7444, -183.3459],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0091, device='cuda:0', dtype=torch.float64)
tensor([-185.0552, -180.2524, -180.7068, -182.9321, -183.5810],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0102, device='cuda:0', dtype=torch.float64)
tensor([-185.4810, -180.3053, -180.5108, -183.2147, -183.9307],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0101, device='cuda:0', dtype=torch.float64)
tensor([-185.8832, -180.4120, -180.2873, -183.4467, -184.3457],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0092, device='cuda:0', dtype=torch.float64)
tensor([-186.1663, -180.4850, -180.1016, -183.6071, -184.6716],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0101, device='cuda:0', dtype=torch.float64)
tensor([-186.1796, -180.5140, -179.8900, -183.5202, -184.8557],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0100, device='cuda:0', dtype=torch.float64)
tensor([-186.0143, -180.4999, -179.7768, -183.3341, -184.8734],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0101, device='cuda:0', dtype=torch.float64)
tensor([-185.8056, -180.4638, -179.7524, -183.1588, -184.8548],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0080, device='cuda:0', dtype=torch.float64)
tensor([-185.4480, -180.4501, -179.6693, -182.8063, -184.7916],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0105, device='cuda:0', dtype=torch.float64)
tensor([-184.9177, -180.4542, -179.9382, -182.5212, -184.5196],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0097, device='cuda:0', dtype=torch.float64)
tensor([-184.6380, -180.4894, -180.1992, -182.4560, -184.3710],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0105, device='cuda:0', dtype=torch.float64)
tensor([-184.5900, -180.5475, -180.6315, -182.7351, -184.2887],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0098, device='cuda:0', dtype=torch.float64)
tensor([-184.5119, -180.6526, -180.9429, -182.8758, -184.2593],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0095, device='cuda:0', dtype=torch.float64)
tensor([-184.3123, -180.7274, -181.1248, -182.8339, -184.1852],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0100, device='cuda:0', dtype=torch.float64)
tensor([-184.3661, -180.7603, -180.9423, -182.7883, -184.3507],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0090, device='cuda:0', dtype=torch.float64)
tensor([-184.4362, -180.8361, -180.5372, -182.6040, -184.6056],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0090, device='cuda:0', dtype=torch.float64)
tensor([-184.5436, -180.8754, -180.3535, -182.6050, -184.7903],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0081, device='cuda:0', dtype=torch.float64)
tensor([-184.7208, -180.9055, -180.2106, -182.7078, -184.9813],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0105, device='cuda:0', dtype=torch.float64)
tensor([-184.8311, -180.8745, -180.2760, -182.8866, -185.0382],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0091, device='cuda:0', dtype=torch.float64)
tensor([-184.9726, -180.8631, -180.5823, -183.2429, -185.0244],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0102, device='cuda:0', dtype=torch.float64)
tensor([-184.9939, -180.7943, -180.8078, -183.4553, -184.9579],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0098, device='cuda:0', dtype=torch.float64)
tensor([-184.9216, -180.6906, -181.1211, -183.6476, -184.8197],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0090, device='cuda:0', dtype=torch.float64)
tensor([-184.8433, -180.5675, -181.2501, -183.7224, -184.7398],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0096, device='cuda:0', dtype=torch.float64)
tensor([-184.7885, -180.4522, -181.3448, -183.8223, -184.6866],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0093, device='cuda:0', dtype=torch.float64)
tensor([-184.6543, -180.4324, -181.3274, -183.7552, -184.6743],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0106, device='cuda:0', dtype=torch.float64)
tensor([-184.5974, -180.4427, -181.1326, -183.6395, -184.7703],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0093, device='cuda:0', dtype=torch.float64)
tensor([-184.3830, -180.4395, -180.9356, -183.3783, -184.7608],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0090, device='cuda:0', dtype=torch.float64)
tensor([-183.8837, -180.4069, -180.6789, -182.8047, -184.6191],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0096, device='cuda:0', dtype=torch.float64)
tensor([-183.5171, -180.3333, -180.8028, -182.5971, -184.3546],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0094, device='cuda:0', dtype=torch.float64)
tensor([-183.4136, -180.2717, -180.7985, -182.5564, -184.2823],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0089, device='cuda:0', dtype=torch.float64)
tensor([-183.3913, -180.2108, -181.0352, -182.7617, -184.1454],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0097, device='cuda:0', dtype=torch.float64)
tensor([-183.4671, -180.1607, -181.1240, -182.9467, -184.1068],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0084, device='cuda:0', dtype=torch.float64)
tensor([-183.6785, -180.1568, -181.2540, -183.2736, -184.1230],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0095, device='cuda:0', dtype=torch.float64)
tensor([-183.7624, -180.1186, -181.3582, -183.4735, -184.0377],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0087, device='cuda:0', dtype=torch.float64)
tensor([-183.8377, -180.0918, -181.4698, -183.6655, -183.9382],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0077, device='cuda:0', dtype=torch.float64)
tensor([-183.8965, -180.0836, -181.5396, -183.8064, -183.8478],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0093, device='cuda:0', dtype=torch.float64)
tensor([-183.9613, -180.0861, -181.3237, -183.7531, -183.8981],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0102, device='cuda:0', dtype=torch.float64)
tensor([-183.8890, -180.1157, -180.7634, -183.3310, -184.0121],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0095, device='cuda:0', dtype=torch.float64)
tensor([-183.7612, -180.1190, -180.1686, -182.8338, -184.0829],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0103, device='cuda:0', dtype=torch.float64)
tensor([-183.9490, -180.1089, -179.6104, -182.6511, -184.2923],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0095, device='cuda:0', dtype=torch.float64)
tensor([-184.2776, -180.1272, -179.2118, -182.7005, -184.5441],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0097, device='cuda:0', dtype=torch.float64)
tensor([-184.4808, -180.1570, -178.9090, -182.6962, -184.6960],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0085, device='cuda:0', dtype=torch.float64)
tensor([-184.6594, -180.1997, -178.8032, -182.7907, -184.7792],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0109, device='cuda:0', dtype=torch.float64)
tensor([-184.6229, -180.1282, -179.0547, -182.9392, -184.5927],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0095, device='cuda:0', dtype=torch.float64)
tensor([-184.4144, -180.0147, -179.2132, -182.8507, -184.3415],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0107, device='cuda:0', dtype=torch.float64)
tensor([-184.0350, -179.8498, -179.7653, -182.8746, -183.8460],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0107, device='cuda:0', dtype=torch.float64)
tensor([-183.7991, -179.7616, -180.1711, -182.9117, -183.5222],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0106, device='cuda:0', dtype=torch.float64)
tensor([-183.7585, -179.7321, -180.3427, -182.9579, -183.4679],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0105, device='cuda:0', dtype=torch.float64)
tensor([-183.5394, -179.7291, -180.2243, -182.6263, -183.4349],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0098, device='cuda:0', dtype=torch.float64)
tensor([-183.2449, -179.7454, -179.9333, -182.0859, -183.4409],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0098, device='cuda:0', dtype=torch.float64)
tensor([-182.9655, -179.7503, -179.9631, -181.7791, -183.3319],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0110, device='cuda:0', dtype=torch.float64)
tensor([-182.7378, -179.7802, -179.8784, -181.4244, -183.3176],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0096, device='cuda:0', dtype=torch.float64)
tensor([-182.6713, -179.7869, -179.7439, -181.1969, -183.3635],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0099, device='cuda:0', dtype=torch.float64)
tensor([-182.6439, -179.7751, -179.5407, -180.9701, -183.4495],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0103, device='cuda:0', dtype=torch.float64)
tensor([-182.8708, -179.7879, -179.4516, -181.0667, -183.6398],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0089, device='cuda:0', dtype=torch.float64)
tensor([-183.1950, -179.8088, -179.6094, -181.4273, -183.7837],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0086, device='cuda:0', dtype=torch.float64)
tensor([-183.5733, -179.8287, -179.7502, -181.8253, -183.9713],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0098, device='cuda:0', dtype=torch.float64)
tensor([-184.0642, -179.8711, -179.8276, -182.3020, -184.2350],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0089, device='cuda:0', dtype=torch.float64)
tensor([-184.2743, -179.9026, -179.7013, -182.3845, -184.4258],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0096, device='cuda:0', dtype=torch.float64)
tensor([-184.2921, -179.9085, -179.6228, -182.3360, -184.5008],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0090, device='cuda:0', dtype=torch.float64)
tensor([-184.2592, -179.9721, -179.6456, -182.2992, -184.5422],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0086, device='cuda:0', dtype=torch.float64)
tensor([-184.2678, -180.0253, -179.5561, -182.2412, -184.6407],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0087, device='cuda:0', dtype=torch.float64)
tensor([-184.2342, -180.0912, -179.3909, -182.1053, -184.7571],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0099, device='cuda:0', dtype=torch.float64)
tensor([-184.0820, -180.1358, -179.2898, -181.8961, -184.7863],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0089, device='cuda:0', dtype=torch.float64)
tensor([-183.9131, -180.1635, -179.2946, -181.7341, -184.7332],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0095, device='cuda:0', dtype=torch.float64)
tensor([-184.0528, -180.1968, -179.2783, -181.8543, -184.8455],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0098, device='cuda:0', dtype=torch.float64)
tensor([-183.9813, -180.1382, -179.4518, -181.9322, -184.7163],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0101, device='cuda:0', dtype=torch.float64)
tensor([-183.9466, -180.0791, -179.6667, -182.0877, -184.5635],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0098, device='cuda:0', dtype=torch.float64)
tensor([-184.1457, -179.9956, -179.9142, -182.4707, -184.4862],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0085, device='cuda:0', dtype=torch.float64)
tensor([-184.3374, -179.9446, -180.1985, -182.8628, -184.3849],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0113, device='cuda:0', dtype=torch.float64)
tensor([-184.6220, -179.9029, -180.4412, -183.3069, -184.3760],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0097, device='cuda:0', dtype=torch.float64)
tensor([-184.6979, -179.8616, -180.3812, -183.3635, -184.3959],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0101, device='cuda:0', dtype=torch.float64)
tensor([-184.9123, -179.8543, -180.1969, -183.4627, -184.5599],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0093, device='cuda:0', dtype=torch.float64)
tensor([-185.0107, -179.8611, -180.0710, -183.4918, -184.6493],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0078, device='cuda:0', dtype=torch.float64)
tensor([-185.0890, -179.8570, -179.7734, -183.3844, -184.7804],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0095, device='cuda:0', dtype=torch.float64)
tensor([-185.2443, -179.8744, -179.3269, -183.2525, -185.0085],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0100, device='cuda:0', dtype=torch.float64)
tensor([-185.2022, -179.8831, -179.0824, -183.0988, -185.0194],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0090, device='cuda:0', dtype=torch.float64)
tensor([-184.9675, -179.8141, -178.8775, -182.8005, -184.8766],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0105, device='cuda:0', dtype=torch.float64)
tensor([-184.4832, -179.7030, -178.7502, -182.3366, -184.5271],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0088, device='cuda:0', dtype=torch.float64)
tensor([-184.0290, -179.6335, -178.5818, -181.8614, -184.2409],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0100, device='cuda:0', dtype=torch.float64)
tensor([-183.6731, -179.5675, -178.4924, -181.5369, -184.0196],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0095, device='cuda:0', dtype=torch.float64)
tensor([-183.3218, -179.4407, -178.5942, -181.3619, -183.6900],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0098, device='cuda:0', dtype=torch.float64)
tensor([-183.1881, -179.3394, -178.4826, -181.2140, -183.5768],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0098, device='cuda:0', dtype=torch.float64)
tensor([-183.0311, -179.2302, -178.5061, -181.1443, -183.3769],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0082, device='cuda:0', dtype=torch.float64)
tensor([-182.7639, -179.1548, -178.4925, -180.9332, -183.1185],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0106, device='cuda:0', dtype=torch.float64)
tensor([-182.6153, -179.1248, -178.5367, -180.8664, -182.9209],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0092, device='cuda:0', dtype=torch.float64)
tensor([-182.4595, -179.1409, -178.6490, -180.8151, -182.7226],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0095, device='cuda:0', dtype=torch.float64)
tensor([-182.4962, -179.1620, -178.8447, -181.0023, -182.6220],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0092, device='cuda:0', dtype=torch.float64)
tensor([-182.6584, -179.1831, -178.9893, -181.2785, -182.5822],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0113, device='cuda:0', dtype=torch.float64)
tensor([-182.8374, -179.1781, -179.4216, -181.7586, -182.4433],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0109, device='cuda:0', dtype=torch.float64)
tensor([-183.2899, -179.2116, -179.7361, -182.3957, -182.5025],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0098, device='cuda:0', dtype=torch.float64)
tensor([-183.7404, -179.2259, -180.1936, -183.1153, -182.4721],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0111, device='cuda:0', dtype=torch.float64)
tensor([-183.9251, -179.2938, -180.0139, -183.1563, -182.5788],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0088, device='cuda:0', dtype=torch.float64)
tensor([-184.0043, -179.3126, -179.7451, -183.0471, -182.6778],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0096, device='cuda:0', dtype=torch.float64)
tensor([-183.9776, -179.3135, -179.3621, -182.7747, -182.8032],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0095, device='cuda:0', dtype=torch.float64)
tensor([-183.7045, -179.2085, -178.9751, -182.2758, -182.7921],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0098, device='cuda:0', dtype=torch.float64)
tensor([-183.4629, -179.0874, -178.6428, -181.8339, -182.7803],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0106, device='cuda:0', dtype=torch.float64)
tensor([-183.2684, -178.9484, -178.3886, -181.4886, -182.7725],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0106, device='cuda:0', dtype=torch.float64)
tensor([-183.2006, -178.8575, -178.2442, -181.3255, -182.7997],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0090, device='cuda:0', dtype=torch.float64)
tensor([-183.1039, -178.7400, -178.1830, -181.1990, -182.8087],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0106, device='cuda:0', dtype=torch.float64)
tensor([-183.0360, -178.6607, -178.3836, -181.2429, -182.7604],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0104, device='cuda:0', dtype=torch.float64)
tensor([-182.9232, -178.5673, -178.7033, -181.3378, -182.6587],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0085, device='cuda:0', dtype=torch.float64)
tensor([-182.7672, -178.4791, -179.0098, -181.3837, -182.5479],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0105, device='cuda:0', dtype=torch.float64)
tensor([-182.7893, -178.4556, -179.2232, -181.5105, -182.5600],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0091, device='cuda:0', dtype=torch.float64)
tensor([-182.7285, -178.4491, -179.3970, -181.5528, -182.5610],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0102, device='cuda:0', dtype=torch.float64)
tensor([-182.9390, -178.4460, -179.3572, -181.7027, -182.7855],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0104, device='cuda:0', dtype=torch.float64)
tensor([-183.4167, -178.4790, -179.2905, -182.0795, -183.1577],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0096, device='cuda:0', dtype=torch.float64)
tensor([-183.8090, -178.5070, -179.3652, -182.4778, -183.4437],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0098, device='cuda:0', dtype=torch.float64)
tensor([-184.0722, -178.4842, -179.6249, -182.9146, -183.5652],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0092, device='cuda:0', dtype=torch.float64)
tensor([-184.4590, -178.5224, -179.7561, -183.3437, -183.7985],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0104, device='cuda:0', dtype=torch.float64)
tensor([-184.8909, -178.5767, -180.0330, -183.8975, -184.0143],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0110, device='cuda:0', dtype=torch.float64)
tensor([-184.8120, -178.5379, -180.1722, -183.9082, -183.9414],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0100, device='cuda:0', dtype=torch.float64)
tensor([-184.5080, -178.5383, -180.0071, -183.5002, -183.8537],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0087, device='cuda:0', dtype=torch.float64)
tensor([-184.1472, -178.5238, -179.8978, -183.0844, -183.7013],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0085, device='cuda:0', dtype=torch.float64)
tensor([-183.7476, -178.5096, -179.5968, -182.5076, -183.6159],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0091, device='cuda:0', dtype=torch.float64)
tensor([-183.3900, -178.5168, -179.4382, -182.0538, -183.4969],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0098, device='cuda:0', dtype=torch.float64)
tensor([-183.2849, -178.5173, -179.5195, -182.0004, -183.3987],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0091, device='cuda:0', dtype=torch.float64)
tensor([-183.3362, -178.5387, -179.5596, -182.0728, -183.4029],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0113, device='cuda:0', dtype=torch.float64)
tensor([-183.4139, -178.5129, -179.6889, -182.2672, -183.3283],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0103, device='cuda:0', dtype=torch.float64)
tensor([-183.3042, -178.4035, -179.8547, -182.3141, -183.0736],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0095, device='cuda:0', dtype=torch.float64)
tensor([-183.3624, -178.3635, -180.2016, -182.6424, -182.8470],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0092, device='cuda:0', dtype=torch.float64)
tensor([-183.5608, -178.3528, -180.2642, -182.8962, -182.8270],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0105, device='cuda:0', dtype=torch.float64)
tensor([-183.7092, -178.3829, -180.2495, -183.0489, -182.8136],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0112, device='cuda:0', dtype=torch.float64)
tensor([-183.7440, -178.4556, -179.9096, -182.8644, -182.8886],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0101, device='cuda:0', dtype=torch.float64)
tensor([-183.6846, -178.5274, -179.4217, -182.5086, -182.9870],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0097, device='cuda:0', dtype=torch.float64)
tensor([-183.4030, -178.5485, -179.1312, -182.0979, -182.8481],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0088, device='cuda:0', dtype=torch.float64)
tensor([-183.1906, -178.5939, -178.7547, -181.6939, -182.8013],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0095, device='cuda:0', dtype=torch.float64)
tensor([-183.0525, -178.6131, -178.4510, -181.4113, -182.7556],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0092, device='cuda:0', dtype=torch.float64)
tensor([-183.0134, -178.6004, -178.3251, -181.3433, -182.6881],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0092, device='cuda:0', dtype=torch.float64)
tensor([-182.8585, -178.6000, -178.1631, -181.1368, -182.5964],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0095, device='cuda:0', dtype=torch.float64)
tensor([-182.7140, -178.6590, -177.8942, -180.8468, -182.5978],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0088, device='cuda:0', dtype=torch.float64)
tensor([-182.3625, -178.6515, -177.6750, -180.4204, -182.4249],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0099, device='cuda:0', dtype=torch.float64)
tensor([-182.3054, -178.6771, -177.7520, -180.4584, -182.3221],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0100, device='cuda:0', dtype=torch.float64)
tensor([-182.2342, -178.6950, -177.9931, -180.5738, -182.1536],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0087, device='cuda:0', dtype=torch.float64)
tensor([-182.2136, -178.6937, -178.2100, -180.7109, -182.0028],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0094, device='cuda:0', dtype=torch.float64)
tensor([-182.1052, -178.7113, -178.2333, -180.6457, -181.9120],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0097, device='cuda:0', dtype=torch.float64)
tensor([-182.1081, -178.6755, -178.2265, -180.6740, -181.8887],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0097, device='cuda:0', dtype=torch.float64)
tensor([-182.0138, -178.6002, -178.4943, -180.7976, -181.7150],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0103, device='cuda:0', dtype=torch.float64)
tensor([-181.9806, -178.5508, -178.6657, -180.9091, -181.6539],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0102, device='cuda:0', dtype=torch.float64)
tensor([-182.0934, -178.5358, -178.7730, -181.0960, -181.7171],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0085, device='cuda:0', dtype=torch.float64)
tensor([-182.1372, -178.5188, -178.7785, -181.1524, -181.7883],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0094, device='cuda:0', dtype=torch.float64)
tensor([-182.1314, -178.5017, -178.8292, -181.1987, -181.8416],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0086, device='cuda:0', dtype=torch.float64)
tensor([-182.0329, -178.4832, -178.9904, -181.2329, -181.7610],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0085, device='cuda:0', dtype=torch.float64)
tensor([-182.1473, -178.4436, -179.2028, -181.4944, -181.7728],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0105, device='cuda:0', dtype=torch.float64)
tensor([-182.3019, -178.4008, -178.9276, -181.4403, -182.0127],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0082, device='cuda:0', dtype=torch.float64)
tensor([-182.4680, -178.3682, -178.4060, -181.2269, -182.3456],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0103, device='cuda:0', dtype=torch.float64)
tensor([-182.5270, -178.3090, -178.1874, -181.1486, -182.4934],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0093, device='cuda:0', dtype=torch.float64)
tensor([-182.4935, -178.2074, -178.1738, -181.1253, -182.4978],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0093, device='cuda:0', dtype=torch.float64)
tensor([-182.4765, -178.1151, -178.2096, -181.1537, -182.4822],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0089, device='cuda:0', dtype=torch.float64)
tensor([-182.5011, -178.0184, -178.1582, -181.1519, -182.5068],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0091, device='cuda:0', dtype=torch.float64)
tensor([-182.3943, -177.9063, -178.4759, -181.2947, -182.3101],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0097, device='cuda:0', dtype=torch.float64)
tensor([-182.3053, -177.8046, -178.5438, -181.2790, -182.2157],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0111, device='cuda:0', dtype=torch.float64)
tensor([-181.9816, -177.7356, -178.3151, -180.8327, -182.1092],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0098, device='cuda:0', dtype=torch.float64)
tensor([-181.7050, -177.6866, -178.3991, -180.6312, -181.8991],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0084, device='cuda:0', dtype=torch.float64)
tensor([-181.4869, -177.6673, -178.5320, -180.5286, -181.7293],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0101, device='cuda:0', dtype=torch.float64)
tensor([-181.3908, -177.6322, -178.9166, -180.7119, -181.5326],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0101, device='cuda:0', dtype=torch.float64)
tensor([-181.4198, -177.5997, -179.1209, -180.8691, -181.4914],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0087, device='cuda:0', dtype=torch.float64)
tensor([-181.5038, -177.5170, -179.2459, -181.0334, -181.4816],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0092, device='cuda:0', dtype=torch.float64)
tensor([-181.6064, -177.4999, -179.4060, -181.2284, -181.4813],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0077, device='cuda:0', dtype=torch.float64)
tensor([-181.7495, -177.5532, -179.3878, -181.3101, -181.5577],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0105, device='cuda:0', dtype=torch.float64)
tensor([-181.9947, -177.6204, -178.9196, -181.1832, -181.8411],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0106, device='cuda:0', dtype=torch.float64)
tensor([-182.1720, -177.7944, -178.3642, -180.9145, -182.1344],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0101, device='cuda:0', dtype=torch.float64)
tensor([-182.4159, -178.0084, -177.7792, -180.6753, -182.5054],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0080, device='cuda:0', dtype=torch.float64)
tensor([-182.5368, -178.2175, -177.3181, -180.4167, -182.7915],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0097, device='cuda:0', dtype=torch.float64)
tensor([-182.5052, -178.4094, -176.9698, -180.1002, -182.9478],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0081, device='cuda:0', dtype=torch.float64)
tensor([-182.5864, -178.6035, -176.9104, -180.0979, -183.0409],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0080, device='cuda:0', dtype=torch.float64)
tensor([-182.6440, -178.7734, -176.9683, -180.1499, -183.0703],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0104, device='cuda:0', dtype=torch.float64)
tensor([-182.3601, -178.8769, -177.0983, -179.9708, -182.8764],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0083, device='cuda:0', dtype=torch.float64)
tensor([-182.1319, -178.9114, -177.2094, -179.8450, -182.6943],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0100, device='cuda:0', dtype=torch.float64)
tensor([-181.9241, -178.8815, -177.6108, -179.9630, -182.4002],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0105, device='cuda:0', dtype=torch.float64)
tensor([-181.9646, -178.8475, -178.3673, -180.5541, -182.0879],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0091, device='cuda:0', dtype=torch.float64)
tensor([-182.0676, -178.8004, -179.3489, -181.3444, -181.7406],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0094, device='cuda:0', dtype=torch.float64)
tensor([-182.2256, -178.7562, -180.4366, -182.2579, -181.3588],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0095, device='cuda:0', dtype=torch.float64)
tensor([-182.2538, -178.7143, -180.9548, -182.6596, -181.1600],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0085, device='cuda:0', dtype=torch.float64)
tensor([-182.1458, -178.6052, -181.2170, -182.7757, -180.9781],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0093, device='cuda:0', dtype=torch.float64)
tensor([-182.0883, -178.4870, -181.1994, -182.7529, -180.8940],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0087, device='cuda:0', dtype=torch.float64)
tensor([-182.0510, -178.3786, -180.9692, -182.5962, -180.8988],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0077, device='cuda:0', dtype=torch.float64)
tensor([-181.9689, -178.2620, -180.6668, -182.3574, -180.9142],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0108, device='cuda:0', dtype=torch.float64)
tensor([-181.9006, -178.1524, -179.9624, -181.8609, -181.1097],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0104, device='cuda:0', dtype=torch.float64)
tensor([-181.8594, -178.0426, -179.0342, -181.2410, -181.4198],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0084, device='cuda:0', dtype=torch.float64)
tensor([-181.7905, -177.9492, -178.0009, -180.5155, -181.7537],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0093, device='cuda:0', dtype=torch.float64)
tensor([-181.7597, -177.8948, -177.0233, -179.8559, -182.1052],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0091, device='cuda:0', dtype=torch.float64)
tensor([-181.8087, -177.8305, -176.2554, -179.4058, -182.4211],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0114, device='cuda:0', dtype=torch.float64)
tensor([-181.8602, -177.8109, -175.7716, -179.1519, -182.6501],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0106, device='cuda:0', dtype=torch.float64)
tensor([-181.9859, -177.8327, -175.9140, -179.3951, -182.7218],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0108, device='cuda:0', dtype=torch.float64)
tensor([-182.0932, -177.8343, -176.5174, -179.9524, -182.6198],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0098, device='cuda:0', dtype=torch.float64)
tensor([-182.0984, -177.8227, -177.2515, -180.5111, -182.4009],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0117, device='cuda:0', dtype=torch.float64)
tensor([-181.9574, -177.7971, -178.1573, -181.0505, -182.0358],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0097, device='cuda:0', dtype=torch.float64)
tensor([-181.8307, -177.8249, -178.8294, -181.4214, -181.7570],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0092, device='cuda:0', dtype=torch.float64)
tensor([-181.7914, -177.8483, -179.3769, -181.7784, -181.5813],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0081, device='cuda:0', dtype=torch.float64)
tensor([-181.8116, -177.9027, -179.9091, -182.1687, -181.4624],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0102, device='cuda:0', dtype=torch.float64)
tensor([-181.8658, -177.9933, -180.3634, -182.5246, -181.3883],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0094, device='cuda:0', dtype=torch.float64)
tensor([-182.1714, -178.0820, -180.6912, -183.0149, -181.4778],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0102, device='cuda:0', dtype=torch.float64)
tensor([-182.4534, -178.1438, -180.6833, -183.2574, -181.6798],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0078, device='cuda:0', dtype=torch.float64)
tensor([-182.5928, -178.2247, -180.5769, -183.3117, -181.8362],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0089, device='cuda:0', dtype=torch.float64)
tensor([-182.5503, -178.2637, -180.1717, -183.0058, -182.0014],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0086, device='cuda:0', dtype=torch.float64)
tensor([-182.4616, -178.2679, -179.5577, -182.5349, -182.2140],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0097, device='cuda:0', dtype=torch.float64)
tensor([-182.3808, -178.3435, -178.7707, -181.9395, -182.5277],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0081, device='cuda:0', dtype=torch.float64)
tensor([-182.5367, -178.4750, -178.1026, -181.6079, -182.9124],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0101, device='cuda:0', dtype=torch.float64)
tensor([-182.6469, -178.5887, -177.4432, -181.2403, -183.2839],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0087, device='cuda:0', dtype=torch.float64)
tensor([-182.7723, -178.6702, -176.8787, -180.9488, -183.5993],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0090, device='cuda:0', dtype=torch.float64)
tensor([-182.7088, -178.6687, -176.6018, -180.7117, -183.6725],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0090, device='cuda:0', dtype=torch.float64)
tensor([-182.4687, -178.5704, -176.3585, -180.3612, -183.6074],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0102, device='cuda:0', dtype=torch.float64)
tensor([-182.1313, -178.4256, -176.4435, -180.1470, -183.3724],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0092, device='cuda:0', dtype=torch.float64)
tensor([-181.9346, -178.2829, -176.7612, -180.2096, -183.1042],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0098, device='cuda:0', dtype=torch.float64)
tensor([-181.8997, -178.1689, -177.2319, -180.5179, -182.8882],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0105, device='cuda:0', dtype=torch.float64)
tensor([-181.8834, -178.0530, -177.8707, -180.9436, -182.6228],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0085, device='cuda:0', dtype=torch.float64)
tensor([-181.6901, -177.9005, -178.5426, -181.2404, -182.2175],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0099, device='cuda:0', dtype=torch.float64)
tensor([-181.6522, -177.8389, -178.7553, -181.3605, -182.0874],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0081, device='cuda:0', dtype=torch.float64)
tensor([-181.4986, -177.7723, -178.8783, -181.3228, -181.9211],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0093, device='cuda:0', dtype=torch.float64)
tensor([-181.2387, -177.7220, -179.1063, -181.2396, -181.6744],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0107, device='cuda:0', dtype=torch.float64)
tensor([-180.8660, -177.6287, -179.0873, -180.8987, -181.4450],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0080, device='cuda:0', dtype=torch.float64)
tensor([-180.6536, -177.5438, -178.9609, -180.6242, -181.3293],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0099, device='cuda:0', dtype=torch.float64)
tensor([-180.5639, -177.5002, -178.6915, -180.3743, -181.3107],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0099, device='cuda:0', dtype=torch.float64)
tensor([-180.7628, -177.5388, -178.1686, -180.2042, -181.5458],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0090, device='cuda:0', dtype=torch.float64)
tensor([-181.1096, -177.5470, -177.7220, -180.2292, -181.8260],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0092, device='cuda:0', dtype=torch.float64)
tensor([-181.3360, -177.5302, -177.2922, -180.1602, -182.0387],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0092, device='cuda:0', dtype=torch.float64)
tensor([-181.5455, -177.4594, -177.3647, -180.4081, -182.0447],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0087, device='cuda:0', dtype=torch.float64)
tensor([-181.4262, -177.3719, -177.4962, -180.4106, -181.8524],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0082, device='cuda:0', dtype=torch.float64)
tensor([-181.4229, -177.2739, -177.5696, -180.4682, -181.7466],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0089, device='cuda:0', dtype=torch.float64)
tensor([-181.4317, -177.1362, -177.8588, -180.7072, -181.5524],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0099, device='cuda:0', dtype=torch.float64)
tensor([-181.5196, -177.0501, -178.1319, -180.9877, -181.4286],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0103, device='cuda:0', dtype=torch.float64)
tensor([-181.7312, -177.0496, -178.3792, -181.3420, -181.4023],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0106, device='cuda:0', dtype=torch.float64)
tensor([-181.9312, -177.0830, -178.3319, -181.4699, -181.5070],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0087, device='cuda:0', dtype=torch.float64)
tensor([-181.9760, -177.1505, -177.9562, -181.2120, -181.6982],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0103, device='cuda:0', dtype=torch.float64)
tensor([-182.0233, -177.1610, -177.6954, -181.0463, -181.8444],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0105, device='cuda:0', dtype=torch.float64)
tensor([-182.0147, -177.1415, -177.4339, -180.8300, -181.9715],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0109, device='cuda:0', dtype=torch.float64)
tensor([-181.7156, -177.0751, -177.6039, -180.6612, -181.7860],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0095, device='cuda:0', dtype=torch.float64)
tensor([-181.2371, -177.0595, -177.5475, -180.1791, -181.6309],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0104, device='cuda:0', dtype=torch.float64)
tensor([-180.7095, -177.0421, -177.5506, -179.6956, -181.4376],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0089, device='cuda:0', dtype=torch.float64)
tensor([-180.2956, -177.0316, -177.5890, -179.3256, -181.2994],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0112, device='cuda:0', dtype=torch.float64)
tensor([-180.1313, -177.0624, -177.4003, -179.0227, -181.3521],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0110, device='cuda:0', dtype=torch.float64)
tensor([-180.2558, -177.0361, -177.4764, -179.1644, -181.3967],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0090, device='cuda:0', dtype=torch.float64)
tensor([-180.4457, -177.0493, -177.3483, -179.2148, -181.5601],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0089, device='cuda:0', dtype=torch.float64)
tensor([-180.7327, -177.0862, -177.4021, -179.4648, -181.7106],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0098, device='cuda:0', dtype=torch.float64)
tensor([-181.1754, -177.2020, -177.6315, -179.9701, -181.8658],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0092, device='cuda:0', dtype=torch.float64)
tensor([-181.5533, -177.2607, -177.7150, -180.3208, -182.0202],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0083, device='cuda:0', dtype=torch.float64)
tensor([-181.8366, -177.3063, -177.8366, -180.6114, -182.0944],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0086, device='cuda:0', dtype=torch.float64)
tensor([-182.0385, -177.3251, -177.9153, -180.8117, -182.1533],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0099, device='cuda:0', dtype=torch.float64)
tensor([-182.4538, -177.4199, -177.6249, -180.9536, -182.4926],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0097, device='cuda:0', dtype=torch.float64)
tensor([-182.8333, -177.5065, -177.3662, -181.0839, -182.7943],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0094, device='cuda:0', dtype=torch.float64)
tensor([-182.8761, -177.5550, -177.0872, -180.8886, -182.8956],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0099, device='cuda:0', dtype=torch.float64)
tensor([-182.9033, -177.5975, -176.9456, -180.7746, -182.9573],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0097, device='cuda:0', dtype=torch.float64)
tensor([-182.7584, -177.5901, -177.2090, -180.7794, -182.7647],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0114, device='cuda:0', dtype=torch.float64)
tensor([-182.1165, -177.5186, -177.6092, -180.4514, -182.2221],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0092, device='cuda:0', dtype=torch.float64)
tensor([-181.6056, -177.4544, -177.9287, -180.1931, -181.7840],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0093, device='cuda:0', dtype=torch.float64)
tensor([-181.1847, -177.4702, -178.2136, -180.0017, -181.4521],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0101, device='cuda:0', dtype=torch.float64)
tensor([-180.8050, -177.4258, -178.7227, -180.0154, -181.0401],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0092, device='cuda:0', dtype=torch.float64)
tensor([-180.6479, -177.3829, -179.0447, -180.1052, -180.8091],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0107, device='cuda:0', dtype=torch.float64)
tensor([-180.7737, -177.3534, -179.5878, -180.5961, -180.6442],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0094, device='cuda:0', dtype=torch.float64)
tensor([-181.1484, -177.3750, -179.9309, -181.1654, -180.6866],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0108, device='cuda:0', dtype=torch.float64)
tensor([-181.6355, -177.3577, -180.0673, -181.7257, -180.8819],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0097, device='cuda:0', dtype=torch.float64)
tensor([-182.0240, -177.3446, -179.6195, -181.8280, -181.2549],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0096, device='cuda:0', dtype=torch.float64)
tensor([-182.5757, -177.3894, -179.0685, -182.0148, -181.7667],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0090, device='cuda:0', dtype=torch.float64)
tensor([-182.9781, -177.4927, -178.1446, -181.8218, -182.4044],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0104, device='cuda:0', dtype=torch.float64)
tensor([-183.0961, -177.6446, -177.0484, -181.2248, -182.9540],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0115, device='cuda:0', dtype=torch.float64)
tensor([-182.9281, -177.7787, -176.0366, -180.4329, -183.2786],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0092, device='cuda:0', dtype=torch.float64)
tensor([-182.5940, -177.9131, -175.2674, -179.6376, -183.4117],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0098, device='cuda:0', dtype=torch.float64)
tensor([-182.2756, -177.9264, -174.8807, -179.1334, -183.3558],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0100, device='cuda:0', dtype=torch.float64)
tensor([-182.2175, -177.9280, -174.8495, -179.1105, -183.3133],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0100, device='cuda:0', dtype=torch.float64)
tensor([-182.1402, -177.8253, -175.5084, -179.5480, -182.9612],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0095, device='cuda:0', dtype=torch.float64)
tensor([-182.0651, -177.7050, -176.3467, -180.1106, -182.5183],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0096, device='cuda:0', dtype=torch.float64)
tensor([-181.9612, -177.5667, -177.0934, -180.5780, -182.0771],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0085, device='cuda:0', dtype=torch.float64)
tensor([-181.6153, -177.4410, -177.7362, -180.7414, -181.5496],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0105, device='cuda:0', dtype=torch.float64)
tensor([-181.3345, -177.3778, -178.1781, -180.8212, -181.1571],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0090, device='cuda:0', dtype=torch.float64)
tensor([-181.1832, -177.2971, -178.5314, -180.9606, -180.8756],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0100, device='cuda:0', dtype=torch.float64)
tensor([-180.9878, -177.1695, -178.7063, -180.9511, -180.6315],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0090, device='cuda:0', dtype=torch.float64)
tensor([-180.7634, -176.9922, -178.7189, -180.8330, -180.4328],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0088, device='cuda:0', dtype=torch.float64)
tensor([-180.6792, -176.8351, -178.3930, -180.6105, -180.4155],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0085, device='cuda:0', dtype=torch.float64)
tensor([-180.4661, -176.6369, -177.8817, -180.1437, -180.4025],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0094, device='cuda:0', dtype=torch.float64)
tensor([-180.3616, -176.4593, -177.1261, -179.6274, -180.5513],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0101, device='cuda:0', dtype=torch.float64)
tensor([-180.2303, -176.3131, -176.3104, -179.0297, -180.7438],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0106, device='cuda:0', dtype=torch.float64)
tensor([-180.2415, -176.2236, -175.7696, -178.7270, -180.9293],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0103, device='cuda:0', dtype=torch.float64)
tensor([-180.3113, -176.1874, -175.5102, -178.6517, -181.0390],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0094, device='cuda:0', dtype=torch.float64)
tensor([-180.6797, -176.2335, -175.3314, -178.8606, -181.3276],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0108, device='cuda:0', dtype=torch.float64)
tensor([-180.7774, -176.2333, -175.5829, -179.1245, -181.3177],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0103, device='cuda:0', dtype=torch.float64)
tensor([-180.8736, -176.2991, -175.9632, -179.4587, -181.2784],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0103, device='cuda:0', dtype=torch.float64)
tensor([-180.9965, -176.3924, -176.5551, -179.9540, -181.1378],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0096, device='cuda:0', dtype=torch.float64)
tensor([-181.2306, -176.5201, -177.1252, -180.5438, -181.0654],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0093, device='cuda:0', dtype=torch.float64)
tensor([-181.2160, -176.6357, -177.5597, -180.8161, -180.9052],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0096, device='cuda:0', dtype=torch.float64)
tensor([-181.0081, -176.7115, -177.9119, -180.8600, -180.6994],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0081, device='cuda:0', dtype=torch.float64)
tensor([-180.9195, -176.8162, -178.1042, -180.8981, -180.6529],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0096, device='cuda:0', dtype=torch.float64)
tensor([-181.0403, -176.9625, -178.1273, -181.0112, -180.8145],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0097, device='cuda:0', dtype=torch.float64)
tensor([-181.2417, -177.1225, -177.8038, -180.9859, -181.1755],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0105, device='cuda:0', dtype=torch.float64)
tensor([-181.3247, -177.2320, -177.5125, -180.8782, -181.4412],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0095, device='cuda:0', dtype=torch.float64)
tensor([-181.2502, -177.3550, -176.9603, -180.4587, -181.7474],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0096, device='cuda:0', dtype=torch.float64)
tensor([-181.0775, -177.3812, -176.7814, -180.1946, -181.7732],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0087, device='cuda:0', dtype=torch.float64)
tensor([-180.8273, -177.3906, -176.6385, -179.8754, -181.7415],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0085, device='cuda:0', dtype=torch.float64)
tensor([-180.5332, -177.4106, -176.6073, -179.5806, -181.6574],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0091, device='cuda:0', dtype=torch.float64)
tensor([-180.1315, -177.4022, -176.4916, -179.1240, -181.5355],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0106, device='cuda:0', dtype=torch.float64)
tensor([-180.1041, -177.3776, -176.4601, -179.0616, -181.5065],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0089, device='cuda:0', dtype=torch.float64)
tensor([-180.1641, -177.3520, -176.3631, -179.0601, -181.5140],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0109, device='cuda:0', dtype=torch.float64)
tensor([-180.1819, -177.3337, -176.3770, -179.0879, -181.4585],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0112, device='cuda:0', dtype=torch.float64)
tensor([-180.6241, -177.3323, -176.5740, -179.6179, -181.5727],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0093, device='cuda:0', dtype=torch.float64)
tensor([-181.0819, -177.3217, -176.9438, -180.2772, -181.6099],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0086, device='cuda:0', dtype=torch.float64)
tensor([-181.3804, -177.2905, -177.2755, -180.7567, -181.5551],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0085, device='cuda:0', dtype=torch.float64)
tensor([-181.6629, -177.1968, -177.6444, -181.2485, -181.4842],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0093, device='cuda:0', dtype=torch.float64)
tensor([-181.7514, -177.0342, -177.7322, -181.4113, -181.4130],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0096, device='cuda:0', dtype=torch.float64)
tensor([-181.6164, -176.8388, -177.4981, -181.1741, -181.3401],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0104, device='cuda:0', dtype=torch.float64)
tensor([-181.3782, -176.7136, -177.0406, -180.6911, -181.3082],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0103, device='cuda:0', dtype=torch.float64)
tensor([-180.9239, -176.5714, -176.5285, -179.9806, -181.2064],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0083, device='cuda:0', dtype=torch.float64)
tensor([-180.2426, -176.3927, -176.1487, -179.1536, -180.9207],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0099, device='cuda:0', dtype=torch.float64)
tensor([-179.8461, -176.2755, -175.7049, -178.5370, -180.8219],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0078, device='cuda:0', dtype=torch.float64)
tensor([-179.4271, -176.1776, -175.3357, -177.9363, -180.6681],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0110, device='cuda:0', dtype=torch.float64)
tensor([-179.1287, -176.0130, -175.5338, -177.8299, -180.3580],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0088, device='cuda:0', dtype=torch.float64)
tensor([-179.1185, -175.8919, -176.0422, -178.1935, -180.1050],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0110, device='cuda:0', dtype=torch.float64)
tensor([-179.2525, -175.8016, -176.7159, -178.7641, -179.9343],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0083, device='cuda:0', dtype=torch.float64)
tensor([-179.6897, -175.8425, -177.3477, -179.5599, -179.9723],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0097, device='cuda:0', dtype=torch.float64)
tensor([-180.2616, -175.9127, -177.8694, -180.3866, -180.1539],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0105, device='cuda:0', dtype=torch.float64)
tensor([-180.8299, -175.9597, -178.1941, -181.0863, -180.3884],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0107, device='cuda:0', dtype=torch.float64)
tensor([-181.3053, -176.0356, -178.3011, -181.5564, -180.6781],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0096, device='cuda:0', dtype=torch.float64)
tensor([-181.7478, -176.2001, -177.8553, -181.6178, -181.1850],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0100, device='cuda:0', dtype=torch.float64)
tensor([-182.0777, -176.4033, -177.3310, -181.5353, -181.6797],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0097, device='cuda:0', dtype=torch.float64)
tensor([-182.1131, -176.5864, -176.5652, -181.0404, -182.1005],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0089, device='cuda:0', dtype=torch.float64)
tensor([-181.8342, -176.6950, -176.0458, -180.4313, -182.2322],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0086, device='cuda:0', dtype=torch.float64)
tensor([-181.4012, -176.8609, -175.3168, -179.5224, -182.3803],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0103, device='cuda:0', dtype=torch.float64)
tensor([-180.6325, -176.9405, -174.8950, -178.5411, -182.1971],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0097, device='cuda:0', dtype=torch.float64)
tensor([-179.9803, -176.9665, -174.9661, -177.9986, -181.9142],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0108, device='cuda:0', dtype=torch.float64)
tensor([-179.7020, -176.9966, -175.2455, -177.9158, -181.7355],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0100, device='cuda:0', dtype=torch.float64)
tensor([-179.6312, -177.0584, -175.7415, -178.1587, -181.5947],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0100, device='cuda:0', dtype=torch.float64)
tensor([-179.6738, -177.0221, -176.4316, -178.6442, -181.4028],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0088, device='cuda:0', dtype=torch.float64)
tensor([-179.7184, -176.9861, -177.3409, -179.2494, -181.0764],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0101, device='cuda:0', dtype=torch.float64)
tensor([-179.7757, -176.9496, -178.1055, -179.7890, -180.7839],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0082, device='cuda:0', dtype=torch.float64)
tensor([-180.0097, -176.9661, -178.9166, -180.5005, -180.5461],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0088, device='cuda:0', dtype=torch.float64)
tensor([-180.2649, -176.9842, -179.4411, -181.0530, -180.4090],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0099, device='cuda:0', dtype=torch.float64)
tensor([-180.4639, -177.0003, -179.6799, -181.3762, -180.3375],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0088, device='cuda:0', dtype=torch.float64)
tensor([-180.7667, -176.9996, -179.6680, -181.6328, -180.4297],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0106, device='cuda:0', dtype=torch.float64)
tensor([-180.9291, -177.0100, -179.1130, -181.4134, -180.6762],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0100, device='cuda:0', dtype=torch.float64)
tensor([-181.1986, -176.9673, -178.4349, -181.2304, -181.0101],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0102, device='cuda:0', dtype=torch.float64)
tensor([-181.4649, -176.9881, -177.4305, -180.8217, -181.4998],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0089, device='cuda:0', dtype=torch.float64)
tensor([-181.8138, -177.1036, -176.2250, -180.3510, -182.1526],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0104, device='cuda:0', dtype=torch.float64)
tensor([-181.8896, -177.1488, -175.2137, -179.7898, -182.5413],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0101, device='cuda:0', dtype=torch.float64)
tensor([-181.8411, -177.1244, -174.3576, -179.2295, -182.7799],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0090, device='cuda:0', dtype=torch.float64)
tensor([-181.4095, -177.0374, -173.5766, -178.3666, -182.7596],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0110, device='cuda:0', dtype=torch.float64)
tensor([-180.8559, -176.8533, -173.5331, -177.9074, -182.3851],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0101, device='cuda:0', dtype=torch.float64)
tensor([-180.0988, -176.5525, -173.9644, -177.6220, -181.6903],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0096, device='cuda:0', dtype=torch.float64)
tensor([-179.1784, -176.1908, -174.8342, -177.5069, -180.7390],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0102, device='cuda:0', dtype=torch.float64)
tensor([-178.6695, -175.9501, -175.9284, -177.8877, -179.9779],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0092, device='cuda:0', dtype=torch.float64)
tensor([-178.3211, -175.7340, -177.1595, -178.4854, -179.2729],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0115, device='cuda:0', dtype=torch.float64)
tensor([-178.1657, -175.5920, -177.8593, -178.8952, -178.8872],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0089, device='cuda:0', dtype=torch.float64)
tensor([-178.3806, -175.5296, -178.2570, -179.4323, -178.8210],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0100, device='cuda:0', dtype=torch.float64)
tensor([-178.7196, -175.4696, -178.2600, -179.8132, -178.9753],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0092, device='cuda:0', dtype=torch.float64)
tensor([-179.1289, -175.4687, -177.9759, -180.0605, -179.2829],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0105, device='cuda:0', dtype=torch.float64)
tensor([-179.6992, -175.5843, -177.4242, -180.2374, -179.7577],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0097, device='cuda:0', dtype=torch.float64)
tensor([-180.3508, -175.7823, -176.8120, -180.4200, -180.3523],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0103, device='cuda:0', dtype=torch.float64)
tensor([-180.9523, -176.1117, -175.6469, -180.1542, -181.2424],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0094, device='cuda:0', dtype=torch.float64)
tensor([-181.6366, -176.4587, -174.7959, -180.1412, -182.0823],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0097, device='cuda:0', dtype=torch.float64)
tensor([-181.9463, -176.7308, -174.2996, -180.0400, -182.5495],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0096, device='cuda:0', dtype=torch.float64)
tensor([-181.9919, -176.8828, -174.0141, -179.8542, -182.7636],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0118, device='cuda:0', dtype=torch.float64)
tensor([-181.2967, -176.8794, -174.3262, -179.4285, -182.2646],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0095, device='cuda:0', dtype=torch.float64)
tensor([-180.5446, -176.7642, -174.7918, -179.0584, -181.6371],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0106, device='cuda:0', dtype=torch.float64)
tensor([-179.7890, -176.5740, -175.6781, -178.9583, -180.8420],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0103, device='cuda:0', dtype=torch.float64)
tensor([-179.1502, -176.3567, -176.6229, -178.9967, -180.0972],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0101, device='cuda:0', dtype=torch.float64)
tensor([-178.6174, -176.1915, -177.1478, -178.8600, -179.5718],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0101, device='cuda:0', dtype=torch.float64)
tensor([-178.3693, -176.1017, -177.4984, -178.8667, -179.2851],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0104, device='cuda:0', dtype=torch.float64)
tensor([-178.4962, -176.0620, -177.7364, -179.1476, -179.2090],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0099, device='cuda:0', dtype=torch.float64)
tensor([-178.9686, -176.0574, -177.7536, -179.5677, -179.3668],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0097, device='cuda:0', dtype=torch.float64)
tensor([-179.7067, -176.0996, -177.7845, -180.2279, -179.6920],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0085, device='cuda:0', dtype=torch.float64)
tensor([-180.3112, -176.1305, -177.5646, -180.6228, -180.0586],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0106, device='cuda:0', dtype=torch.float64)
tensor([-180.5773, -176.0959, -176.9252, -180.4564, -180.4394],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0094, device='cuda:0', dtype=torch.float64)
tensor([-180.9376, -176.1066, -176.0880, -180.2168, -180.9616],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0092, device='cuda:0', dtype=torch.float64)
tensor([-181.0622, -176.0975, -175.4568, -179.9183, -181.2366],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0102, device='cuda:0', dtype=torch.float64)
tensor([-180.9708, -176.0237, -175.0245, -179.5733, -181.2960],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0103, device='cuda:0', dtype=torch.float64)
tensor([-180.5810, -175.8881, -174.7829, -179.1111, -181.1086],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0093, device='cuda:0', dtype=torch.float64)
tensor([-180.0184, -175.7767, -174.6627, -178.5641, -180.7887],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0081, device='cuda:0', dtype=torch.float64)
tensor([-179.3867, -175.6667, -174.4968, -177.9289, -180.4581],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0098, device='cuda:0', dtype=torch.float64)
tensor([-178.8851, -175.5885, -174.6318, -177.5903, -180.0980],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0097, device='cuda:0', dtype=torch.float64)
tensor([-178.4549, -175.5085, -174.9709, -177.4413, -179.6900],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0090, device='cuda:0', dtype=torch.float64)
tensor([-178.1582, -175.4189, -175.3017, -177.3970, -179.3523],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0101, device='cuda:0', dtype=torch.float64)
tensor([-177.9832, -175.3615, -175.8751, -177.6059, -178.9972],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0099, device='cuda:0', dtype=torch.float64)
tensor([-178.1441, -175.3483, -176.5909, -178.1926, -178.7533],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0102, device='cuda:0', dtype=torch.float64)
tensor([-178.4422, -175.4387, -176.9081, -178.6088, -178.7430],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0101, device='cuda:0', dtype=torch.float64)
tensor([-178.7001, -175.4712, -176.8464, -178.7575, -178.8199],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0108, device='cuda:0', dtype=torch.float64)
tensor([-179.1084, -175.4477, -176.8858, -179.1210, -178.9145],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0091, device='cuda:0', dtype=torch.float64)
tensor([-179.3068, -175.4001, -176.8000, -179.2330, -178.9638],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0101, device='cuda:0', dtype=torch.float64)
tensor([-179.5477, -175.3330, -176.5873, -179.3013, -179.0885],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0094, device='cuda:0', dtype=torch.float64)
tensor([-179.7309, -175.3451, -176.2190, -179.1961, -179.2894],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0084, device='cuda:0', dtype=torch.float64)
tensor([-179.8956, -175.3788, -175.8237, -179.0587, -179.4882],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0096, device='cuda:0', dtype=torch.float64)
tensor([-180.0633, -175.3599, -175.4364, -178.9314, -179.6570],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0085, device='cuda:0', dtype=torch.float64)
tensor([-180.2156, -175.3522, -174.9358, -178.6985, -179.8832],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0101, device='cuda:0', dtype=torch.float64)
tensor([-180.3772, -175.3788, -174.4910, -178.4980, -180.1313],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0094, device='cuda:0', dtype=torch.float64)
tensor([-180.5579, -175.3126, -174.4163, -178.5803, -180.2181],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0110, device='cuda:0', dtype=torch.float64)
tensor([-180.5367, -175.2831, -174.2072, -178.3869, -180.2663],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0111, device='cuda:0', dtype=torch.float64)
tensor([-179.9883, -175.1272, -174.3719, -178.0195, -179.8693],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0109, device='cuda:0', dtype=torch.float64)
tensor([-179.6000, -174.9503, -175.0591, -178.1425, -179.3622],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0098, device='cuda:0', dtype=torch.float64)
tensor([-179.4007, -174.8948, -175.7635, -178.4050, -178.9947],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0091, device='cuda:0', dtype=torch.float64)
tensor([-178.9611, -174.8884, -176.3033, -178.3430, -178.5770],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0099, device='cuda:0', dtype=torch.float64)
tensor([-178.7780, -174.8732, -176.6604, -178.3937, -178.3728],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0085, device='cuda:0', dtype=torch.float64)
tensor([-178.6136, -174.8677, -176.5894, -178.1800, -178.3706],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0101, device='cuda:0', dtype=torch.float64)
tensor([-178.6159, -174.9070, -176.3803, -178.0220, -178.5175],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0084, device='cuda:0', dtype=torch.float64)
tensor([-178.5614, -174.9039, -175.9525, -177.6814, -178.6977],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0100, device='cuda:0', dtype=torch.float64)
tensor([-178.5037, -174.9380, -175.3992, -177.2372, -178.9337],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0091, device='cuda:0', dtype=torch.float64)
tensor([-178.3597, -175.0084, -174.9224, -176.7555, -179.1040],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0098, device='cuda:0', dtype=torch.float64)
tensor([-178.5799, -175.1030, -174.6967, -176.7832, -179.3637],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0091, device='cuda:0', dtype=torch.float64)
tensor([-178.5600, -175.1529, -174.6019, -176.6792, -179.4584],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0092, device='cuda:0', dtype=torch.float64)
tensor([-178.5671, -175.1731, -174.7423, -176.7661, -179.4719],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0110, device='cuda:0', dtype=torch.float64)
tensor([-179.0230, -175.1902, -175.0592, -177.3786, -179.6213],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0100, device='cuda:0', dtype=torch.float64)
tensor([-179.2302, -175.1614, -175.6466, -177.9306, -179.5382],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0102, device='cuda:0', dtype=torch.float64)
tensor([-179.3623, -175.1560, -176.1795, -178.3828, -179.4090],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0093, device='cuda:0', dtype=torch.float64)
tensor([-179.7493, -175.1615, -176.4899, -178.9245, -179.4876],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0105, device='cuda:0', dtype=torch.float64)
tensor([-180.0431, -175.1971, -176.8550, -179.4083, -179.4986],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0085, device='cuda:0', dtype=torch.float64)
tensor([-179.9347, -175.2046, -177.0371, -179.4339, -179.4054],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0096, device='cuda:0', dtype=torch.float64)
tensor([-179.9169, -175.2280, -177.0551, -179.4477, -179.4160],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0087, device='cuda:0', dtype=torch.float64)
tensor([-179.7629, -175.2066, -177.0324, -179.3261, -179.3655],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0099, device='cuda:0', dtype=torch.float64)
tensor([-179.6963, -175.1871, -176.8150, -179.1546, -179.4408],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0091, device='cuda:0', dtype=torch.float64)
tensor([-179.7180, -175.1605, -176.6006, -179.0730, -179.5633],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0099, device='cuda:0', dtype=torch.float64)
tensor([-179.6242, -175.1740, -176.3465, -178.8619, -179.6560],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0098, device='cuda:0', dtype=torch.float64)
tensor([-179.4140, -175.2031, -175.8519, -178.4068, -179.7771],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0107, device='cuda:0', dtype=torch.float64)
tensor([-179.1431, -175.2081, -175.2553, -177.8192, -179.9255],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0090, device='cuda:0', dtype=torch.float64)
tensor([-179.0326, -175.3048, -174.9764, -177.5631, -180.0605],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0092, device='cuda:0', dtype=torch.float64)
tensor([-179.1904, -175.4248, -174.9739, -177.7199, -180.2190],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0102, device='cuda:0', dtype=torch.float64)
tensor([-179.7329, -175.6075, -174.9408, -178.1796, -180.5926],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0102, device='cuda:0', dtype=torch.float64)
tensor([-180.3016, -175.7745, -174.8126, -178.5982, -181.0203],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0094, device='cuda:0', dtype=torch.float64)
tensor([-180.6423, -175.9583, -174.7314, -178.8492, -181.3268],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0093, device='cuda:0', dtype=torch.float64)
tensor([-180.9979, -176.0826, -174.5775, -179.0740, -181.6593],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0097, device='cuda:0', dtype=torch.float64)
tensor([-180.8371, -176.0875, -174.7257, -179.0669, -181.5580],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0089, device='cuda:0', dtype=torch.float64)
tensor([-180.5023, -176.0788, -174.7526, -178.8276, -181.3895],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0097, device='cuda:0', dtype=torch.float64)
tensor([-180.0545, -176.0483, -175.0077, -178.6321, -181.0695],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0091, device='cuda:0', dtype=torch.float64)
tensor([-179.7041, -176.0063, -175.2387, -178.5070, -180.8061],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0102, device='cuda:0', dtype=torch.float64)
tensor([-179.2786, -175.9410, -175.1927, -178.1631, -180.6144],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0089, device='cuda:0', dtype=torch.float64)
tensor([-178.9965, -175.8873, -175.4575, -178.1268, -180.3787],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0098, device='cuda:0', dtype=torch.float64)
tensor([-178.9420, -175.8428, -175.8731, -178.3721, -180.1961],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0092, device='cuda:0', dtype=torch.float64)
tensor([-179.0437, -175.8109, -176.3159, -178.7723, -180.0532],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0082, device='cuda:0', dtype=torch.float64)
tensor([-179.1863, -175.7916, -176.8373, -179.2630, -179.8856],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0092, device='cuda:0', dtype=torch.float64)
tensor([-179.1657, -175.7442, -177.0793, -179.4650, -179.7501],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0105, device='cuda:0', dtype=torch.float64)
tensor([-179.1834, -175.6968, -177.2153, -179.6119, -179.6653],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0094, device='cuda:0', dtype=torch.float64)
tensor([-179.3425, -175.7038, -177.1261, -179.7225, -179.7516],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0085, device='cuda:0', dtype=torch.float64)
tensor([-179.4285, -175.7303, -176.5359, -179.4444, -180.0118],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0092, device='cuda:0', dtype=torch.float64)
tensor([-179.2485, -175.7368, -175.9442, -178.9374, -180.1474],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0094, device='cuda:0', dtype=torch.float64)
tensor([-179.0684, -175.6889, -175.3649, -178.4525, -180.2658],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0098, device='cuda:0', dtype=torch.float64)
tensor([-178.9214, -175.5514, -174.9953, -178.1376, -180.2801],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0112, device='cuda:0', dtype=torch.float64)
tensor([-178.9466, -175.3953, -174.7676, -178.0573, -180.3478],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0084, device='cuda:0', dtype=torch.float64)
tensor([-179.0581, -175.2646, -174.7887, -178.2061, -180.3615],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0089, device='cuda:0', dtype=torch.float64)
tensor([-179.1997, -175.1642, -174.8677, -178.4101, -180.3790],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0095, device='cuda:0', dtype=torch.float64)
tensor([-179.2049, -175.0766, -175.1790, -178.6441, -180.2445],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0094, device='cuda:0', dtype=torch.float64)
tensor([-179.2888, -174.9540, -175.7561, -179.1083, -180.0385],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0096, device='cuda:0', dtype=torch.float64)
tensor([-179.1823, -174.8177, -176.0220, -179.2303, -179.8280],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0100, device='cuda:0', dtype=torch.float64)
tensor([-179.1703, -174.6849, -175.7923, -179.1292, -179.8623],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0100, device='cuda:0', dtype=torch.float64)
tensor([-179.4526, -174.6694, -175.4523, -179.1584, -180.1008],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0098, device='cuda:0', dtype=torch.float64)
tensor([-179.6673, -174.6220, -175.2403, -179.2183, -180.2139],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0096, device='cuda:0', dtype=torch.float64)
tensor([-179.8418, -174.6074, -175.0346, -179.2250, -180.2979],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0094, device='cuda:0', dtype=torch.float64)
tensor([-179.6782, -174.5694, -174.9186, -179.0077, -180.1568],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0100, device='cuda:0', dtype=torch.float64)
tensor([-179.1657, -174.4106, -174.8307, -178.5427, -179.7743],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0090, device='cuda:0', dtype=torch.float64)
tensor([-178.6729, -174.2956, -174.7038, -178.0518, -179.4021],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0099, device='cuda:0', dtype=torch.float64)
tensor([-177.9519, -174.2128, -174.8593, -177.5346, -178.8241],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0098, device='cuda:0', dtype=torch.float64)
tensor([-177.4144, -174.1958, -175.0299, -177.1808, -178.3796],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0092, device='cuda:0', dtype=torch.float64)
tensor([-177.2966, -174.2572, -174.9382, -176.9998, -178.2751],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0107, device='cuda:0', dtype=torch.float64)
tensor([-177.3205, -174.3404, -174.6746, -176.8110, -178.2791],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0081, device='cuda:0', dtype=torch.float64)
tensor([-177.2374, -174.3897, -174.6829, -176.7137, -178.1262],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0100, device='cuda:0', dtype=torch.float64)
tensor([-177.2975, -174.4179, -174.7170, -176.7843, -178.0730],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0105, device='cuda:0', dtype=torch.float64)
tensor([-177.3570, -174.4155, -174.7476, -176.8564, -178.0348],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0092, device='cuda:0', dtype=torch.float64)
tensor([-177.4877, -174.3868, -174.7326, -176.9716, -178.0403],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0100, device='cuda:0', dtype=torch.float64)
tensor([-177.6590, -174.3695, -174.9165, -177.2420, -178.0135],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0105, device='cuda:0', dtype=torch.float64)
tensor([-177.8621, -174.2719, -175.4176, -177.7715, -177.8923],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0093, device='cuda:0', dtype=torch.float64)
tensor([-177.9244, -174.2075, -175.4893, -177.8829, -177.9090],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0082, device='cuda:0', dtype=torch.float64)
tensor([-177.8667, -174.1468, -175.3292, -177.7424, -177.9446],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0080, device='cuda:0', dtype=torch.float64)
tensor([-177.8601, -174.1660, -174.9165, -177.4658, -178.1198],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0104, device='cuda:0', dtype=torch.float64)
tensor([-177.9355, -174.2079, -174.5627, -177.2894, -178.3400],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0102, device='cuda:0', dtype=torch.float64)
tensor([-178.0111, -174.1948, -174.6286, -177.4093, -178.3652],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0096, device='cuda:0', dtype=torch.float64)
tensor([-178.0013, -174.1748, -174.5849, -177.3793, -178.3971],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0095, device='cuda:0', dtype=torch.float64)
tensor([-177.9158, -174.1887, -174.5949, -177.3022, -178.3622],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0083, device='cuda:0', dtype=torch.float64)
tensor([-177.9730, -174.1789, -174.6804, -177.4187, -178.3721],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0095, device='cuda:0', dtype=torch.float64)
tensor([-178.1445, -174.1382, -174.6871, -177.6067, -178.4783],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0103, device='cuda:0', dtype=torch.float64)
tensor([-178.0181, -174.0621, -175.0463, -177.7646, -178.2796],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0084, device='cuda:0', dtype=torch.float64)
tensor([-178.0161, -174.0113, -175.3361, -177.9916, -178.2157],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0099, device='cuda:0', dtype=torch.float64)
tensor([-178.0874, -173.9728, -175.3895, -178.1512, -178.2930],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0104, device='cuda:0', dtype=torch.float64)
tensor([-178.0336, -173.9452, -175.0582, -177.9742, -178.4363],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0102, device='cuda:0', dtype=torch.float64)
tensor([-177.7983, -173.8968, -174.8636, -177.7264, -178.4182],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0084, device='cuda:0', dtype=torch.float64)
tensor([-177.6041, -173.9016, -174.5784, -177.4353, -178.4426],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0095, device='cuda:0', dtype=torch.float64)
tensor([-177.1730, -173.8498, -174.3449, -176.9701, -178.2869],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0097, device='cuda:0', dtype=torch.float64)
tensor([-176.8064, -173.8152, -174.3667, -176.7235, -178.0832],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0100, device='cuda:0', dtype=torch.float64)
tensor([-176.7040, -173.8022, -174.4457, -176.7201, -177.9941],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0092, device='cuda:0', dtype=torch.float64)
tensor([-176.8065, -173.9095, -174.5815, -176.9108, -178.0504],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0086, device='cuda:0', dtype=torch.float64)
tensor([-176.7719, -174.0157, -174.8630, -177.0532, -178.0040],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0087, device='cuda:0', dtype=torch.float64)
tensor([-177.0755, -174.1870, -175.0540, -177.4007, -178.1646],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0101, device='cuda:0', dtype=torch.float64)
tensor([-177.6411, -174.3579, -175.4762, -178.1129, -178.3401],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0085, device='cuda:0', dtype=torch.float64)
tensor([-178.3437, -174.5200, -175.9811, -178.9974, -178.5367],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0105, device='cuda:0', dtype=torch.float64)
tensor([-178.7755, -174.6668, -175.9162, -179.2808, -178.8054],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0096, device='cuda:0', dtype=torch.float64)
tensor([-178.9402, -174.7846, -175.6719, -179.2117, -179.0159],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0093, device='cuda:0', dtype=torch.float64)
tensor([-178.9342, -174.8487, -175.3412, -178.9555, -179.1676],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0100, device='cuda:0', dtype=torch.float64)
tensor([-178.8326, -174.8238, -175.0856, -178.6994, -179.2374],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0091, device='cuda:0', dtype=torch.float64)
tensor([-178.4598, -174.6983, -174.9576, -178.3041, -179.1020],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0089, device='cuda:0', dtype=torch.float64)
tensor([-177.9897, -174.5095, -175.0828, -177.9862, -178.8177],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0096, device='cuda:0', dtype=torch.float64)
tensor([-177.6778, -174.3699, -175.2504, -177.8148, -178.6076],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0109, device='cuda:0', dtype=torch.float64)
tensor([-177.4207, -174.3091, -175.4807, -177.7117, -178.4082],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0076, device='cuda:0', dtype=torch.float64)
tensor([-177.2751, -174.2589, -175.4835, -177.5660, -178.3563],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0099, device='cuda:0', dtype=torch.float64)
tensor([-176.9825, -174.2036, -175.4024, -177.2495, -178.2456],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0096, device='cuda:0', dtype=torch.float64)
tensor([-176.8456, -174.2138, -175.4099, -177.1093, -178.1975],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0098, device='cuda:0', dtype=torch.float64)
tensor([-176.7474, -174.2376, -175.2304, -176.8788, -178.2194],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0097, device='cuda:0', dtype=torch.float64)
tensor([-176.5427, -174.1953, -175.1586, -176.6369, -178.1164],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0112, device='cuda:0', dtype=torch.float64)
tensor([-176.6641, -174.2121, -174.9767, -176.6095, -178.2385],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0087, device='cuda:0', dtype=torch.float64)
tensor([-176.6386, -174.1410, -174.8472, -176.5049, -178.2320],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0102, device='cuda:0', dtype=torch.float64)
tensor([-176.3955, -174.0450, -174.5762, -176.1261, -178.1492],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0092, device='cuda:0', dtype=torch.float64)
tensor([-176.5874, -173.9380, -174.2905, -176.1122, -178.2905],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0088, device='cuda:0', dtype=torch.float64)
tensor([-176.9091, -173.8608, -174.2884, -176.3822, -178.3776],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0114, device='cuda:0', dtype=torch.float64)
tensor([-177.6974, -173.9593, -174.3333, -177.0705, -178.7410],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0094, device='cuda:0', dtype=torch.float64)
tensor([-178.6251, -174.1272, -174.5890, -177.9982, -179.1206],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0100, device='cuda:0', dtype=torch.float64)
tensor([-179.2669, -174.2769, -174.9526, -178.7518, -179.3289],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0096, device='cuda:0', dtype=torch.float64)
tensor([-179.6023, -174.4716, -174.9048, -178.9844, -179.5918],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0103, device='cuda:0', dtype=torch.float64)
tensor([-179.4183, -174.5642, -174.9294, -178.8524, -179.4856],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0086, device='cuda:0', dtype=torch.float64)
tensor([-179.4318, -174.6339, -174.8038, -178.8084, -179.5337],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0109, device='cuda:0', dtype=torch.float64)
tensor([-179.0229, -174.6858, -174.5511, -178.3261, -179.4110],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0098, device='cuda:0', dtype=torch.float64)
tensor([-178.4346, -174.6501, -174.0686, -177.5523, -179.2727],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0094, device='cuda:0', dtype=torch.float64)
tensor([-177.9303, -174.6367, -173.6293, -176.8642, -179.1677],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0115, device='cuda:0', dtype=torch.float64)
tensor([-177.1926, -174.4826, -173.6242, -176.2598, -178.7032],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0105, device='cuda:0', dtype=torch.float64)
tensor([-176.8159, -174.4415, -173.6513, -175.9636, -178.4335],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0087, device='cuda:0', dtype=torch.float64)
tensor([-176.5883, -174.4293, -173.7854, -175.8558, -178.2349],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0095, device='cuda:0', dtype=torch.float64)
tensor([-176.6789, -174.4211, -174.0338, -176.1235, -178.1305],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0106, device='cuda:0', dtype=torch.float64)
tensor([-177.2667, -174.4744, -174.4287, -176.9013, -178.2818],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0101, device='cuda:0', dtype=torch.float64)
tensor([-178.0421, -174.5552, -174.8511, -177.8339, -178.5486],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0089, device='cuda:0', dtype=torch.float64)
tensor([-178.6185, -174.5672, -175.2317, -178.5740, -178.7037],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0097, device='cuda:0', dtype=torch.float64)
tensor([-179.2793, -174.6927, -174.9489, -178.9578, -179.1853],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0106, device='cuda:0', dtype=torch.float64)
tensor([-179.4533, -174.7870, -174.5267, -178.8281, -179.4443],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0091, device='cuda:0', dtype=torch.float64)
tensor([-179.2971, -174.9007, -173.9378, -178.3163, -179.5874],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0091, device='cuda:0', dtype=torch.float64)
tensor([-178.8432, -174.9519, -173.2673, -177.4979, -179.6239],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0093, device='cuda:0', dtype=torch.float64)
tensor([-178.5193, -174.9604, -172.7786, -176.9016, -179.6609],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0082, device='cuda:0', dtype=torch.float64)
tensor([-178.2685, -174.9444, -172.3995, -176.4374, -179.6950],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0105, device='cuda:0', dtype=torch.float64)
tensor([-178.1013, -174.9367, -172.3761, -176.2520, -179.6570],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0108, device='cuda:0', dtype=torch.float64)
tensor([-178.1070, -174.7498, -172.8065, -176.5530, -179.4576],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0109, device='cuda:0', dtype=torch.float64)
tensor([-178.2715, -174.5139, -173.3892, -177.0837, -179.2506],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0111, device='cuda:0', dtype=torch.float64)
tensor([-178.7121, -174.3140, -173.9437, -177.8167, -179.2173],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0102, device='cuda:0', dtype=torch.float64)
tensor([-178.9354, -174.0590, -174.7035, -178.5049, -178.9601],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0102, device='cuda:0', dtype=torch.float64)
tensor([-178.9705, -173.8042, -175.2943, -178.9236, -178.6776],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0098, device='cuda:0', dtype=torch.float64)
tensor([-178.8248, -173.6879, -175.5171, -178.9367, -178.5170],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0097, device='cuda:0', dtype=torch.float64)
tensor([-178.4098, -173.6075, -175.5555, -178.6070, -178.3119],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0097, device='cuda:0', dtype=torch.float64)
tensor([-177.8641, -173.5727, -175.2047, -177.9188, -178.2116],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0095, device='cuda:0', dtype=torch.float64)
tensor([-177.5248, -173.5785, -174.7985, -177.3538, -178.2436],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0092, device='cuda:0', dtype=torch.float64)
tensor([-177.3225, -173.6048, -174.2263, -176.7861, -178.3861],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0091, device='cuda:0', dtype=torch.float64)
tensor([-177.2714, -173.7610, -173.7883, -176.4158, -178.5684],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0099, device='cuda:0', dtype=torch.float64)
tensor([-177.2025, -173.8687, -173.5977, -176.1959, -178.6311],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0090, device='cuda:0', dtype=torch.float64)
tensor([-177.3896, -173.9753, -173.5331, -176.2964, -178.7786],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0112, device='cuda:0', dtype=torch.float64)
tensor([-177.5526, -174.0585, -173.5160, -176.4244, -178.9018],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0091, device='cuda:0', dtype=torch.float64)
tensor([-178.0445, -174.0691, -173.6501, -176.9398, -179.0947],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0095, device='cuda:0', dtype=torch.float64)
tensor([-178.5433, -174.0938, -173.8238, -177.4771, -179.3250],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0081, device='cuda:0', dtype=torch.float64)
tensor([-178.8899, -174.0876, -173.9339, -177.8460, -179.4820],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0093, device='cuda:0', dtype=torch.float64)
tensor([-179.2262, -174.1028, -174.0647, -178.2066, -179.6436],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0082, device='cuda:0', dtype=torch.float64)
tensor([-179.4146, -174.0906, -174.1606, -178.4241, -179.7229],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0110, device='cuda:0', dtype=torch.float64)
tensor([-179.0077, -174.0435, -174.1693, -178.0920, -179.5148],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0109, device='cuda:0', dtype=torch.float64)
tensor([-178.3288, -174.0541, -174.0595, -177.4418, -179.2457],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0089, device='cuda:0', dtype=torch.float64)
tensor([-177.7679, -174.0550, -174.1239, -177.0120, -178.9901],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0085, device='cuda:0', dtype=torch.float64)
tensor([-177.1955, -174.0183, -174.2629, -176.6402, -178.6719],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0094, device='cuda:0', dtype=torch.float64)
tensor([-177.0194, -173.9458, -174.5896, -176.7262, -178.4687],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0095, device='cuda:0', dtype=torch.float64)
tensor([-177.1167, -173.9860, -174.6940, -176.8808, -178.5216],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0089, device='cuda:0', dtype=torch.float64)
tensor([-177.4993, -174.0161, -174.8766, -177.3176, -178.6494],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0095, device='cuda:0', dtype=torch.float64)
tensor([-178.1522, -174.0494, -174.8866, -177.8791, -178.9799],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0086, device='cuda:0', dtype=torch.float64)
tensor([-178.7605, -174.0351, -174.9312, -178.4310, -179.2594],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0102, device='cuda:0', dtype=torch.float64)
tensor([-179.0462, -173.9695, -174.9905, -178.7179, -179.3877],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0096, device='cuda:0', dtype=torch.float64)
tensor([-178.8717, -173.8306, -174.8210, -178.4739, -179.2928],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0101, device='cuda:0', dtype=torch.float64)
tensor([-178.5368, -173.6760, -174.4577, -177.9863, -179.1582],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0086, device='cuda:0', dtype=torch.float64)
tensor([-178.0483, -173.5307, -174.0007, -177.2845, -178.9777],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0093, device='cuda:0', dtype=torch.float64)
tensor([-177.2940, -173.2723, -173.7066, -176.4884, -178.5726],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0091, device='cuda:0', dtype=torch.float64)
tensor([-176.6145, -173.1406, -173.3796, -175.6991, -178.2453],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0094, device='cuda:0', dtype=torch.float64)
tensor([-176.1691, -173.0219, -173.4197, -175.3390, -177.8832],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0106, device='cuda:0', dtype=torch.float64)
tensor([-176.0516, -173.0212, -173.1171, -175.0352, -177.8470],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0100, device='cuda:0', dtype=torch.float64)
tensor([-176.2182, -173.0676, -173.0941, -175.1368, -177.8517],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0109, device='cuda:0', dtype=torch.float64)
tensor([-176.7653, -173.2035, -173.1391, -175.5885, -178.0509],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0104, device='cuda:0', dtype=torch.float64)
tensor([-177.4050, -173.3512, -173.5046, -176.3216, -178.1991],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0110, device='cuda:0', dtype=torch.float64)
tensor([-178.0446, -173.5201, -173.9970, -177.1245, -178.3240],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0099, device='cuda:0', dtype=torch.float64)
tensor([-178.3160, -173.6810, -174.4412, -177.5756, -178.2668],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0102, device='cuda:0', dtype=torch.float64)
tensor([-178.6792, -173.9492, -174.6165, -177.9205, -178.4066],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0089, device='cuda:0', dtype=torch.float64)
tensor([-178.8756, -174.1155, -174.6770, -178.0844, -178.4981],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0097, device='cuda:0', dtype=torch.float64)
tensor([-178.7055, -174.2185, -174.6258, -177.8910, -178.4663],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0095, device='cuda:0', dtype=torch.float64)
tensor([-178.3435, -174.2315, -174.6410, -177.6147, -178.2942],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0089, device='cuda:0', dtype=torch.float64)
tensor([-177.8686, -174.2092, -174.5569, -177.1938, -178.1051],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0104, device='cuda:0', dtype=torch.float64)
tensor([-177.4607, -174.2030, -174.3869, -176.7793, -177.9828],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0098, device='cuda:0', dtype=torch.float64)
tensor([-177.1026, -174.1645, -174.0404, -176.3070, -177.9606],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0101, device='cuda:0', dtype=torch.float64)
tensor([-176.9118, -174.0696, -173.9582, -176.1463, -177.8745],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0095, device='cuda:0', dtype=torch.float64)
tensor([-176.7476, -173.9178, -173.9013, -176.0481, -177.7810],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0092, device='cuda:0', dtype=torch.float64)
tensor([-176.7252, -173.6483, -174.4380, -176.4813, -177.4842],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0096, device='cuda:0', dtype=torch.float64)
tensor([-176.9687, -173.4725, -174.7048, -176.9554, -177.4845],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0100, device='cuda:0', dtype=torch.float64)
tensor([-177.2912, -173.3526, -174.6756, -177.2927, -177.6695],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0097, device='cuda:0', dtype=torch.float64)
tensor([-177.6097, -173.2613, -174.4809, -177.5041, -177.9289],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0092, device='cuda:0', dtype=torch.float64)
tensor([-178.1303, -173.2373, -174.1665, -177.7768, -178.3405],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0085, device='cuda:0', dtype=torch.float64)
tensor([-178.4410, -173.2800, -173.5687, -177.6729, -178.7461],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0091, device='cuda:0', dtype=torch.float64)
tensor([-178.6332, -173.3474, -172.9809, -177.4545, -179.1172],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0116, device='cuda:0', dtype=torch.float64)
tensor([-178.2807, -173.3231, -172.8331, -177.0760, -178.9348],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0088, device='cuda:0', dtype=torch.float64)
tensor([-178.1692, -173.3205, -172.9207, -177.0336, -178.7864],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0093, device='cuda:0', dtype=torch.float64)
tensor([-177.7058, -173.2180, -172.7994, -176.5715, -178.5187],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0095, device='cuda:0', dtype=torch.float64)
tensor([-177.2715, -173.1397, -172.7247, -176.1486, -178.2402],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0101, device='cuda:0', dtype=torch.float64)
tensor([-176.8556, -173.0362, -172.8884, -175.9050, -177.8476],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0105, device='cuda:0', dtype=torch.float64)
tensor([-176.3982, -172.9005, -173.2058, -175.7279, -177.3863],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0090, device='cuda:0', dtype=torch.float64)
tensor([-175.9890, -172.8228, -173.6608, -175.6713, -176.9245],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0109, device='cuda:0', dtype=torch.float64)
tensor([-175.7147, -172.7835, -174.0451, -175.6826, -176.5694],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0097, device='cuda:0', dtype=torch.float64)
tensor([-175.5926, -172.7693, -174.6757, -175.9889, -176.2004],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0095, device='cuda:0', dtype=torch.float64)
tensor([-175.8817, -172.8497, -175.0301, -176.4396, -176.1774],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0096, device='cuda:0', dtype=torch.float64)
tensor([-176.2387, -172.8844, -175.4096, -176.9685, -176.1824],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0104, device='cuda:0', dtype=torch.float64)
tensor([-176.4556, -172.9825, -175.0955, -176.9126, -176.4329],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0090, device='cuda:0', dtype=torch.float64)
tensor([-176.5541, -173.0431, -174.6729, -176.7024, -176.6383],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0093, device='cuda:0', dtype=torch.float64)
tensor([-176.2913, -173.0375, -174.2355, -176.2140, -176.6481],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0098, device='cuda:0', dtype=torch.float64)
tensor([-176.0532, -173.0442, -173.5143, -175.5728, -176.8341],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0099, device='cuda:0', dtype=torch.float64)
tensor([-175.6584, -173.0724, -172.7512, -174.7565, -176.9910],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0082, device='cuda:0', dtype=torch.float64)
tensor([-175.4482, -173.1299, -171.9344, -174.0273, -177.2767],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0098, device='cuda:0', dtype=torch.float64)
tensor([-175.4722, -173.0714, -171.5279, -173.7831, -177.4701],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0113, device='cuda:0', dtype=torch.float64)
tensor([-175.8822, -172.9053, -171.7350, -174.2982, -177.5740],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0104, device='cuda:0', dtype=torch.float64)
tensor([-176.6299, -172.7638, -172.2089, -175.2746, -177.7313],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0103, device='cuda:0', dtype=torch.float64)
tensor([-177.1462, -172.6449, -172.4110, -175.8711, -177.9471],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0094, device='cuda:0', dtype=torch.float64)
tensor([-177.2561, -172.3412, -173.1071, -176.4595, -177.6662],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0106, device='cuda:0', dtype=torch.float64)
tensor([-177.2320, -172.0080, -173.8790, -177.0100, -177.2510],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0103, device='cuda:0', dtype=torch.float64)
tensor([-177.1413, -171.6705, -174.5028, -177.4142, -176.8547],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0097, device='cuda:0', dtype=torch.float64)
tensor([-176.8139, -171.4263, -174.5165, -177.2177, -176.6186],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0109, device='cuda:0', dtype=torch.float64)
tensor([-176.5186, -171.2504, -174.4186, -176.9512, -176.4443],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0108, device='cuda:0', dtype=torch.float64)
tensor([-176.0769, -171.1990, -173.9330, -176.2691, -176.3516],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0087, device='cuda:0', dtype=torch.float64)
tensor([-175.4105, -171.1647, -173.3645, -175.3351, -176.1898],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0096, device='cuda:0', dtype=torch.float64)
tensor([-174.8367, -171.2209, -172.9067, -174.5331, -176.0537],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0104, device='cuda:0', dtype=torch.float64)
tensor([-174.4961, -171.3425, -171.9757, -173.6152, -176.2292],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0098, device='cuda:0', dtype=torch.float64)
tensor([-174.2939, -171.5038, -171.1914, -172.8871, -176.4479],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0107, device='cuda:0', dtype=torch.float64)
tensor([-174.6352, -171.7862, -170.5785, -172.7268, -176.9167],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0115, device='cuda:0', dtype=torch.float64)
tensor([-175.2481, -172.0215, -170.5092, -173.1667, -177.3033],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0098, device='cuda:0', dtype=torch.float64)
tensor([-175.7721, -172.1661, -170.7956, -173.7778, -177.5023],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0107, device='cuda:0', dtype=torch.float64)
tensor([-176.5071, -172.2686, -171.5568, -174.8677, -177.6409],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0107, device='cuda:0', dtype=torch.float64)
tensor([-176.9048, -172.2999, -172.4343, -175.7390, -177.5208],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0094, device='cuda:0', dtype=torch.float64)
tensor([-176.9286, -172.2862, -173.3407, -176.3012, -177.1666],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0112, device='cuda:0', dtype=torch.float64)
tensor([-176.8319, -172.2856, -174.3199, -176.8020, -176.7263],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0098, device='cuda:0', dtype=torch.float64)
tensor([-176.3711, -172.2738, -175.1798, -176.9517, -176.1596],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0100, device='cuda:0', dtype=torch.float64)
tensor([-175.9871, -172.2737, -175.7353, -176.9642, -175.7746],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0098, device='cuda:0', dtype=torch.float64)
tensor([-175.4460, -172.2585, -175.7315, -176.5070, -175.5478],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0096, device='cuda:0', dtype=torch.float64)
tensor([-174.8604, -172.2193, -175.4034, -175.8099, -175.4101],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0100, device='cuda:0', dtype=torch.float64)
tensor([-174.6603, -172.1810, -174.7407, -175.2231, -175.5625],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0101, device='cuda:0', dtype=torch.float64)
tensor([-174.5821, -172.1308, -174.1333, -174.7768, -175.7804],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0095, device='cuda:0', dtype=torch.float64)
tensor([-174.7224, -172.1188, -173.4729, -174.4941, -176.1386],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0103, device='cuda:0', dtype=torch.float64)
tensor([-175.2890, -172.1063, -173.0111, -174.7209, -176.6395],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0088, device='cuda:0', dtype=torch.float64)
tensor([-175.6980, -172.1436, -172.8485, -175.0007, -176.9775],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0108, device='cuda:0', dtype=torch.float64)
tensor([-175.7962, -172.2141, -172.6855, -174.9981, -177.1637],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0092, device='cuda:0', dtype=torch.float64)
tensor([-175.8714, -172.3671, -172.5585, -174.9654, -177.3744],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0095, device='cuda:0', dtype=torch.float64)
tensor([-176.3258, -172.5496, -172.7003, -175.4127, -177.6705],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0092, device='cuda:0', dtype=torch.float64)
tensor([-176.4805, -172.6267, -172.9423, -175.6928, -177.7259],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0100, device='cuda:0', dtype=torch.float64)
tensor([-176.3865, -172.6749, -173.1688, -175.7528, -177.6114],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0083, device='cuda:0', dtype=torch.float64)
tensor([-176.3680, -172.7191, -173.3855, -175.8630, -177.5274],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0096, device='cuda:0', dtype=torch.float64)
tensor([-176.2745, -172.7275, -173.8744, -176.0950, -177.2581],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0094, device='cuda:0', dtype=torch.float64)
tensor([-176.1469, -172.7318, -174.2175, -176.2100, -177.0429],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0107, device='cuda:0', dtype=torch.float64)
tensor([-175.8146, -172.7376, -174.4769, -176.1064, -176.7519],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0089, device='cuda:0', dtype=torch.float64)
tensor([-175.7594, -172.6990, -174.7019, -176.2419, -176.5712],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0099, device='cuda:0', dtype=torch.float64)
tensor([-175.8905, -172.6718, -174.4895, -176.2526, -176.6916],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0109, device='cuda:0', dtype=torch.float64)
tensor([-176.1056, -172.6940, -173.8406, -176.0544, -177.0378],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0100, device='cuda:0', dtype=torch.float64)
tensor([-176.5515, -172.8177, -173.2521, -176.0625, -177.5237],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0093, device='cuda:0', dtype=torch.float64)
tensor([-176.9057, -172.9476, -172.8159, -176.0919, -177.8980],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0092, device='cuda:0', dtype=torch.float64)
tensor([-177.1087, -172.9291, -172.8290, -176.2871, -177.9052],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0104, device='cuda:0', dtype=torch.float64)
tensor([-176.8905, -172.8277, -172.9332, -176.1755, -177.6160],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0090, device='cuda:0', dtype=torch.float64)
tensor([-176.5415, -172.6883, -173.0874, -175.9944, -177.2493],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0089, device='cuda:0', dtype=torch.float64)
tensor([-176.2013, -172.4863, -173.3743, -175.9235, -176.8191],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0099, device='cuda:0', dtype=torch.float64)
tensor([-175.8763, -172.3342, -173.5763, -175.8085, -176.4420],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0101, device='cuda:0', dtype=torch.float64)
tensor([-175.3778, -172.0914, -173.5424, -175.4222, -176.0375],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0092, device='cuda:0', dtype=torch.float64)
tensor([-174.9862, -171.8707, -173.5993, -175.1900, -175.6707],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0109, device='cuda:0', dtype=torch.float64)
tensor([-174.7162, -171.6872, -173.3333, -174.8564, -175.4878],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0104, device='cuda:0', dtype=torch.float64)
tensor([-174.4265, -171.5725, -172.8632, -174.3499, -175.4008],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0093, device='cuda:0', dtype=torch.float64)
tensor([-174.5213, -171.5341, -172.6483, -174.3056, -175.4467],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0096, device='cuda:0', dtype=torch.float64)
tensor([-174.8515, -171.5317, -172.4077, -174.4458, -175.6316],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0096, device='cuda:0', dtype=torch.float64)
tensor([-175.1295, -171.5134, -172.0891, -174.4850, -175.8371],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0100, device='cuda:0', dtype=torch.float64)
tensor([-175.4814, -171.5872, -171.6136, -174.4627, -176.2109],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0114, device='cuda:0', dtype=torch.float64)
tensor([-175.8845, -171.6723, -171.4322, -174.6427, -176.4969],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0097, device='cuda:0', dtype=torch.float64)
tensor([-176.1495, -171.6690, -171.4415, -174.8451, -176.6361],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0110, device='cuda:0', dtype=torch.float64)
tensor([-176.3574, -171.6431, -171.5137, -175.0426, -176.7411],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0087, device='cuda:0', dtype=torch.float64)
tensor([-176.3436, -171.5722, -171.5738, -175.0642, -176.7333],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0104, device='cuda:0', dtype=torch.float64)
tensor([-176.0639, -171.5575, -171.3868, -174.7132, -176.6932],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0095, device='cuda:0', dtype=torch.float64)
tensor([-175.7600, -171.5342, -171.4216, -174.4881, -176.5474],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0109, device='cuda:0', dtype=torch.float64)
tensor([-175.3183, -171.4589, -171.2527, -174.0335, -176.3759],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0101, device='cuda:0', dtype=torch.float64)
tensor([-175.0469, -171.4325, -171.2332, -173.8178, -176.2518],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0102, device='cuda:0', dtype=torch.float64)
tensor([-175.0689, -171.4005, -171.2322, -173.8712, -176.2653],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0096, device='cuda:0', dtype=torch.float64)
tensor([-175.2853, -171.3750, -171.4879, -174.2529, -176.2352],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0110, device='cuda:0', dtype=torch.float64)
tensor([-175.5891, -171.4045, -172.0086, -174.8674, -176.1752],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0106, device='cuda:0', dtype=torch.float64)
tensor([-175.9559, -171.4716, -172.9474, -175.8088, -175.9878],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0099, device='cuda:0', dtype=torch.float64)
tensor([-176.1476, -171.5963, -173.3751, -176.2563, -175.9352],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0102, device='cuda:0', dtype=torch.float64)
tensor([-176.1142, -171.7516, -173.3014, -176.1748, -175.9365],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0101, device='cuda:0', dtype=torch.float64)
tensor([-175.7646, -171.9245, -172.9805, -175.6879, -175.9273],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0091, device='cuda:0', dtype=torch.float64)
tensor([-175.5535, -172.1829, -172.5520, -175.2157, -176.1067],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0092, device='cuda:0', dtype=torch.float64)
tensor([-175.2859, -172.3884, -172.1905, -174.7326, -176.2320],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0084, device='cuda:0', dtype=torch.float64)
tensor([-175.2489, -172.6020, -171.8570, -174.4623, -176.4652],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0112, device='cuda:0', dtype=torch.float64)
tensor([-175.4464, -172.7989, -171.7582, -174.5390, -176.7331],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0104, device='cuda:0', dtype=torch.float64)
tensor([-175.4076, -172.8720, -171.6214, -174.4116, -176.8886],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0091, device='cuda:0', dtype=torch.float64)
tensor([-175.1845, -172.7586, -171.6139, -174.2504, -176.7898],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0090, device='cuda:0', dtype=torch.float64)
tensor([-175.0456, -172.6226, -171.6367, -174.1812, -176.6954],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0087, device='cuda:0', dtype=torch.float64)
tensor([-175.0264, -172.4561, -172.1620, -174.5342, -176.4353],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0090, device='cuda:0', dtype=torch.float64)
tensor([-174.8884, -172.2987, -172.3847, -174.6006, -176.2443],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0087, device='cuda:0', dtype=torch.float64)
tensor([-174.9949, -172.2060, -172.4227, -174.7532, -176.3043],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0096, device='cuda:0', dtype=torch.float64)
tensor([-175.1856, -172.1168, -172.5265, -175.0103, -176.3935],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0103, device='cuda:0', dtype=torch.float64)
tensor([-175.1775, -171.9546, -172.6348, -175.1290, -176.3061],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0094, device='cuda:0', dtype=torch.float64)
tensor([-175.3844, -171.7892, -172.6992, -175.3926, -176.3457],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0090, device='cuda:0', dtype=torch.float64)
tensor([-175.5914, -171.6828, -172.7431, -175.6284, -176.4509],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0096, device='cuda:0', dtype=torch.float64)
tensor([-175.7042, -171.4865, -172.7663, -175.7926, -176.4935],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0097, device='cuda:0', dtype=torch.float64)
tensor([-175.3454, -171.2163, -172.6732, -175.5130, -176.3141],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0105, device='cuda:0', dtype=torch.float64)
tensor([-174.9259, -170.9666, -172.6315, -175.2127, -176.0810],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0095, device='cuda:0', dtype=torch.float64)
tensor([-174.4955, -170.7245, -172.3874, -174.7575, -175.9098],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0121, device='cuda:0', dtype=torch.float64)
tensor([-174.1697, -170.5605, -172.0360, -174.3068, -175.8441],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0091, device='cuda:0', dtype=torch.float64)
tensor([-173.9116, -170.4574, -171.8461, -174.0001, -175.7835],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0104, device='cuda:0', dtype=torch.float64)
tensor([-174.0632, -170.4393, -171.8320, -174.1327, -175.8809],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0097, device='cuda:0', dtype=torch.float64)
tensor([-174.4750, -170.4952, -171.7173, -174.4064, -176.1606],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0104, device='cuda:0', dtype=torch.float64)
tensor([-174.7849, -170.5035, -171.9062, -174.7837, -176.2401],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0091, device='cuda:0', dtype=torch.float64)
tensor([-174.9712, -170.5468, -171.8140, -174.8810, -176.3599],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0097, device='cuda:0', dtype=torch.float64)
tensor([-174.9007, -170.6047, -171.8870, -174.8603, -176.2479],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0095, device='cuda:0', dtype=torch.float64)
tensor([-174.6451, -170.5537, -172.3260, -174.9281, -175.8507],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0092, device='cuda:0', dtype=torch.float64)
tensor([-174.3264, -170.4971, -172.4268, -174.7284, -175.5717],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0107, device='cuda:0', dtype=torch.float64)
tensor([-174.1704, -170.6309, -172.6223, -174.6792, -175.3721],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0106, device='cuda:0', dtype=torch.float64)
tensor([-174.0070, -170.7525, -172.4676, -174.4061, -175.2820],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0100, device='cuda:0', dtype=torch.float64)
tensor([-173.8560, -170.9270, -171.8618, -173.8459, -175.4331],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0089, device='cuda:0', dtype=torch.float64)
tensor([-173.5664, -171.0493, -171.4086, -173.2663, -175.4516],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0095, device='cuda:0', dtype=torch.float64)
tensor([-173.4615, -171.1584, -170.8767, -172.7972, -175.5675],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0107, device='cuda:0', dtype=torch.float64)
tensor([-173.9371, -171.4540, -170.5229, -172.9143, -175.9928],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0095, device='cuda:0', dtype=torch.float64)
tensor([-174.4867, -171.6884, -170.6206, -173.3948, -176.2586],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0107, device='cuda:0', dtype=torch.float64)
tensor([-175.2862, -171.8548, -170.8328, -174.1766, -176.5870],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0092, device='cuda:0', dtype=torch.float64)
tensor([-175.6284, -171.9756, -171.1913, -174.6623, -176.6118],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0103, device='cuda:0', dtype=torch.float64)
tensor([-175.8989, -171.9035, -171.7654, -175.2416, -176.4175],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0094, device='cuda:0', dtype=torch.float64)
tensor([-176.1264, -171.8370, -172.2690, -175.7480, -176.2363],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0091, device='cuda:0', dtype=torch.float64)
tensor([-176.2855, -171.7976, -172.6967, -176.1441, -176.0696],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0089, device='cuda:0', dtype=torch.float64)
tensor([-176.2216, -171.7191, -172.9587, -176.2655, -175.8503],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0098, device='cuda:0', dtype=torch.float64)
tensor([-175.8042, -171.5767, -173.3059, -176.1598, -175.3947],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0092, device='cuda:0', dtype=torch.float64)
tensor([-175.1050, -171.4957, -173.3081, -175.6048, -174.9534],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0108, device='cuda:0', dtype=torch.float64)
tensor([-174.5563, -171.4695, -172.8371, -174.8716, -174.8412],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0096, device='cuda:0', dtype=torch.float64)
tensor([-173.8641, -171.5289, -171.9750, -173.7419, -174.8812],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0097, device='cuda:0', dtype=torch.float64)
tensor([-173.4132, -171.5022, -171.1735, -172.8538, -174.9841],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0107, device='cuda:0', dtype=torch.float64)
tensor([-173.6097, -171.5567, -170.4943, -172.6180, -175.3795],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0083, device='cuda:0', dtype=torch.float64)
tensor([-174.0013, -171.6183, -169.9390, -172.6424, -175.8129],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0105, device='cuda:0', dtype=torch.float64)
tensor([-174.4241, -171.6340, -169.6776, -172.8743, -176.1321],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0117, device='cuda:0', dtype=torch.float64)
tensor([-174.7078, -171.5320, -169.9454, -173.3412, -176.1300],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0098, device='cuda:0', dtype=torch.float64)
tensor([-174.8010, -171.3665, -170.3518, -173.7341, -175.9626],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0101, device='cuda:0', dtype=torch.float64)
tensor([-174.7691, -171.0942, -170.9752, -174.1703, -175.5898],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0104, device='cuda:0', dtype=torch.float64)
tensor([-174.4643, -170.8065, -171.6022, -174.3693, -175.0720],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0084, device='cuda:0', dtype=torch.float64)
tensor([-174.1117, -170.5593, -172.2762, -174.5593, -174.5360],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0089, device='cuda:0', dtype=torch.float64)
tensor([-173.6324, -170.3652, -172.5442, -174.3860, -174.1365],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0093, device='cuda:0', dtype=torch.float64)
tensor([-173.5536, -170.2245, -172.6531, -174.4433, -174.0453],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0107, device='cuda:0', dtype=torch.float64)
tensor([-173.4656, -170.1326, -172.1841, -174.1105, -174.1691],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0118, device='cuda:0', dtype=torch.float64)
tensor([-173.3511, -170.2018, -171.0587, -173.2998, -174.5934],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0094, device='cuda:0', dtype=torch.float64)
tensor([-173.2762, -170.3887, -170.0371, -172.5656, -175.0366],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0098, device='cuda:0', dtype=torch.float64)
tensor([-173.1026, -170.6012, -169.0783, -171.7621, -175.4250],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0096, device='cuda:0', dtype=torch.float64)
tensor([-172.8507, -170.7955, -168.5429, -171.1581, -175.6179],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0106, device='cuda:0', dtype=torch.float64)
tensor([-172.6774, -170.8821, -168.5371, -170.9964, -175.6277],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0100, device='cuda:0', dtype=torch.float64)
tensor([-172.9118, -171.0621, -168.8785, -171.3932, -175.7416],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0116, device='cuda:0', dtype=torch.float64)
tensor([-173.3239, -171.1920, -169.7788, -172.2993, -175.6699],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0111, device='cuda:0', dtype=torch.float64)
tensor([-173.7427, -171.2739, -171.3038, -173.6049, -175.3160],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0098, device='cuda:0', dtype=torch.float64)
tensor([-174.1936, -171.3310, -172.8552, -174.9406, -174.9349],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0091, device='cuda:0', dtype=torch.float64)
tensor([-174.8562, -171.4841, -174.3781, -176.3964, -174.7076],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0101, device='cuda:0', dtype=torch.float64)
tensor([-175.5753, -171.6784, -175.1530, -177.3998, -174.8276],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0116, device='cuda:0', dtype=torch.float64)
tensor([-175.5915, -171.7462, -175.0464, -177.3086, -174.9482],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0096, device='cuda:0', dtype=torch.float64)
tensor([-175.2537, -171.8500, -174.3549, -176.5625, -175.1339],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0106, device='cuda:0', dtype=torch.float64)
tensor([-174.6690, -171.9238, -173.1785, -175.3169, -175.4240],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0082, device='cuda:0', dtype=torch.float64)
tensor([-174.1925, -172.0224, -171.8808, -174.0588, -175.8261],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0095, device='cuda:0', dtype=torch.float64)
tensor([-174.2346, -172.0821, -170.8578, -173.4145, -176.3442],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0105, device='cuda:0', dtype=torch.float64)
tensor([-174.2835, -172.0723, -169.9193, -172.8284, -176.8110],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0101, device='cuda:0', dtype=torch.float64)
tensor([-174.4214, -171.9466, -169.5133, -172.6767, -177.0518],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0099, device='cuda:0', dtype=torch.float64)
tensor([-175.0327, -171.8192, -169.4980, -173.1682, -177.3783],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0105, device='cuda:0', dtype=torch.float64)
tensor([-175.1972, -171.4700, -170.0509, -173.6719, -177.1740],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0103, device='cuda:0', dtype=torch.float64)
tensor([-175.3407, -171.1308, -170.9019, -174.3402, -176.8374],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0101, device='cuda:0', dtype=torch.float64)
tensor([-175.5450, -170.8379, -171.6783, -175.0009, -176.5477],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0091, device='cuda:0', dtype=torch.float64)
tensor([-175.7218, -170.5956, -172.3959, -175.5994, -176.3081],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0094, device='cuda:0', dtype=torch.float64)
tensor([-175.7119, -170.3950, -172.9401, -175.9384, -176.0681],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0095, device='cuda:0', dtype=torch.float64)
tensor([-175.5632, -170.1856, -173.3884, -176.1048, -175.7573],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0092, device='cuda:0', dtype=torch.float64)
tensor([-175.2812, -170.0582, -173.5866, -176.0114, -175.4810],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0087, device='cuda:0', dtype=torch.float64)
tensor([-175.0869, -170.0039, -173.6996, -175.9324, -175.2773],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0091, device='cuda:0', dtype=torch.float64)
tensor([-174.7362, -169.9802, -173.5620, -175.5694, -175.1154],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0100, device='cuda:0', dtype=torch.float64)
tensor([-174.1542, -169.9682, -172.9966, -174.7671, -175.0123],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0091, device='cuda:0', dtype=torch.float64)
tensor([-173.5741, -169.9184, -172.6228, -174.0997, -174.8280],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0098, device='cuda:0', dtype=torch.float64)
tensor([-173.2608, -169.9066, -171.8711, -173.4141, -174.9184],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0096, device='cuda:0', dtype=torch.float64)
tensor([-172.8838, -169.9048, -170.7645, -172.4511, -175.1038],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0112, device='cuda:0', dtype=torch.float64)
tensor([-172.7612, -169.9062, -170.0132, -171.9388, -175.3003],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0112, device='cuda:0', dtype=torch.float64)
tensor([-172.8986, -169.9511, -169.7094, -171.8935, -175.4987],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0111, device='cuda:0', dtype=torch.float64)
tensor([-172.9915, -169.9062, -169.9232, -172.1459, -175.4422],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0107, device='cuda:0', dtype=torch.float64)
tensor([-173.6205, -169.8757, -170.5831, -173.1427, -175.4830],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0115, device='cuda:0', dtype=torch.float64)
tensor([-174.1996, -169.8784, -171.2043, -174.0554, -175.4991],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0094, device='cuda:0', dtype=torch.float64)
tensor([-174.5796, -169.9105, -171.8904, -174.8232, -175.3981],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0102, device='cuda:0', dtype=torch.float64)
tensor([-174.5417, -169.8800, -172.5695, -175.2347, -175.0437],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0119, device='cuda:0', dtype=torch.float64)
tensor([-174.4157, -169.8756, -172.6829, -175.2232, -174.9002],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0106, device='cuda:0', dtype=torch.float64)
tensor([-174.0449, -169.9175, -172.3028, -174.7008, -174.8742],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0098, device='cuda:0', dtype=torch.float64)
tensor([-173.4460, -169.9164, -171.7045, -173.8612, -174.8246],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0091, device='cuda:0', dtype=torch.float64)
tensor([-172.7371, -169.9171, -170.8820, -172.7810, -174.8379],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0089, device='cuda:0', dtype=torch.float64)
tensor([-172.2921, -169.9862, -170.0708, -171.9032, -174.9619],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0100, device='cuda:0', dtype=torch.float64)
tensor([-172.0056, -170.0501, -169.7850, -171.4640, -174.9415],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0092, device='cuda:0', dtype=torch.float64)
tensor([-171.8765, -170.1519, -169.6222, -171.2154, -174.9713],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0105, device='cuda:0', dtype=torch.float64)
tensor([-172.0251, -170.3034, -169.5047, -171.2282, -175.1169],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0112, device='cuda:0', dtype=torch.float64)
tensor([-172.3170, -170.3651, -169.7176, -171.5882, -175.1598],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0115, device='cuda:0', dtype=torch.float64)
tensor([-172.9890, -170.3973, -170.2124, -172.4572, -175.2899],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0119, device='cuda:0', dtype=torch.float64)
tensor([-174.0307, -170.4790, -171.1890, -173.9058, -175.4151],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0096, device='cuda:0', dtype=torch.float64)
tensor([-175.0024, -170.5630, -172.2938, -175.3540, -175.4812],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0102, device='cuda:0', dtype=torch.float64)
tensor([-175.8280, -170.7668, -172.8459, -176.3091, -175.7684],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0101, device='cuda:0', dtype=torch.float64)
tensor([-176.3929, -170.9075, -173.0537, -176.8470, -176.0564],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0092, device='cuda:0', dtype=torch.float64)
tensor([-176.1738, -170.9180, -172.9962, -176.6170, -176.0293],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0094, device='cuda:0', dtype=torch.float64)
tensor([-175.6122, -170.8382, -172.8419, -176.0728, -175.8309],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0100, device='cuda:0', dtype=torch.float64)
tensor([-174.8376, -170.6694, -172.7616, -175.4002, -175.4298],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0099, device='cuda:0', dtype=torch.float64)
tensor([-173.6380, -170.5072, -172.5176, -174.2854, -174.9170],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0101, device='cuda:0', dtype=torch.float64)
tensor([-172.7977, -170.3809, -172.0956, -173.3463, -174.6985],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0107, device='cuda:0', dtype=torch.float64)
tensor([-172.6667, -170.3311, -171.8953, -173.1194, -174.7130],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0108, device='cuda:0', dtype=torch.float64)
tensor([-172.8512, -170.2458, -171.7745, -173.2100, -174.8374],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0101, device='cuda:0', dtype=torch.float64)
tensor([-172.9978, -170.1920, -171.9551, -173.4400, -174.8602],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0104, device='cuda:0', dtype=torch.float64)
tensor([-173.2892, -170.2293, -171.6506, -173.4921, -175.1620],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0106, device='cuda:0', dtype=torch.float64)
tensor([-173.8974, -170.3903, -171.2470, -173.7278, -175.6661],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0098, device='cuda:0', dtype=torch.float64)
tensor([-174.6947, -170.5946, -170.8440, -174.1279, -176.2863],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0099, device='cuda:0', dtype=torch.float64)
tensor([-174.9435, -170.6926, -170.6855, -174.2356, -176.4454],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0097, device='cuda:0', dtype=torch.float64)
tensor([-174.8014, -170.6542, -170.6253, -174.1148, -176.3409],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0107, device='cuda:0', dtype=torch.float64)
tensor([-174.4636, -170.4399, -170.8238, -174.0094, -175.9538],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0097, device='cuda:0', dtype=torch.float64)
tensor([-174.1526, -170.1957, -170.7337, -173.7501, -175.7081],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0094, device='cuda:0', dtype=torch.float64)
tensor([-174.0336, -170.0410, -170.4333, -173.5102, -175.6307],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0103, device='cuda:0', dtype=torch.float64)
tensor([-173.4455, -169.8269, -170.4318, -173.0624, -175.1529],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0100, device='cuda:0', dtype=torch.float64)
tensor([-172.8464, -169.6585, -170.7066, -172.7372, -174.5861],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0107, device='cuda:0', dtype=torch.float64)
tensor([-172.7057, -169.6154, -171.0653, -172.8203, -174.2715],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0096, device='cuda:0', dtype=torch.float64)
tensor([-173.1204, -169.6801, -171.4760, -173.3936, -174.2360],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0100, device='cuda:0', dtype=torch.float64)
tensor([-173.8270, -169.7724, -171.7894, -174.1528, -174.4165],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0102, device='cuda:0', dtype=torch.float64)
tensor([-174.4035, -169.8878, -171.7633, -174.5690, -174.6737],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0097, device='cuda:0', dtype=torch.float64)
tensor([-174.6252, -169.9335, -171.8761, -174.7888, -174.7080],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0094, device='cuda:0', dtype=torch.float64)
tensor([-174.7485, -169.9959, -171.6062, -174.7103, -174.8694],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0104, device='cuda:0', dtype=torch.float64)
tensor([-174.3066, -169.8964, -171.3310, -174.2042, -174.7257],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0114, device='cuda:0', dtype=torch.float64)
tensor([-173.7499, -169.8771, -170.5612, -173.2649, -174.7453],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0103, device='cuda:0', dtype=torch.float64)
tensor([-173.0425, -169.9389, -169.8469, -172.2104, -174.6786],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0090, device='cuda:0', dtype=torch.float64)
tensor([-172.5735, -170.0914, -169.1659, -171.3386, -174.7294],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0109, device='cuda:0', dtype=torch.float64)
tensor([-172.5183, -170.1574, -168.8618, -171.0642, -174.7958],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0106, device='cuda:0', dtype=torch.float64)
tensor([-172.6208, -170.1634, -168.9902, -171.2106, -174.7742],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0091, device='cuda:0', dtype=torch.float64)
tensor([-172.9834, -170.1133, -169.1597, -171.6290, -174.8134],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0120, device='cuda:0', dtype=torch.float64)
tensor([-173.5908, -170.1085, -169.3876, -172.2618, -174.9825],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0114, device='cuda:0', dtype=torch.float64)
tensor([-174.1292, -170.0161, -170.3078, -173.2644, -174.7927],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0091, device='cuda:0', dtype=torch.float64)
tensor([-174.6257, -169.9794, -171.2716, -174.2376, -174.5993],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0100, device='cuda:0', dtype=torch.float64)
tensor([-174.6897, -169.9299, -172.0699, -174.7582, -174.2472],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0107, device='cuda:0', dtype=torch.float64)
tensor([-174.4463, -169.8537, -172.2931, -174.6881, -173.9523],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0105, device='cuda:0', dtype=torch.float64)
tensor([-173.8843, -169.7310, -172.1610, -174.1470, -173.6528],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0103, device='cuda:0', dtype=torch.float64)
tensor([-173.3444, -169.5989, -171.7528, -173.4465, -173.4866],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0121, device='cuda:0', dtype=torch.float64)
tensor([-172.6914, -169.4553, -170.9447, -172.4127, -173.4215],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0102, device='cuda:0', dtype=torch.float64)
tensor([-172.2342, -169.3855, -169.9532, -171.4109, -173.5530],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0089, device='cuda:0', dtype=torch.float64)
tensor([-171.9272, -169.2920, -169.2693, -170.7220, -173.5930],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0100, device='cuda:0', dtype=torch.float64)
tensor([-171.9472, -169.3617, -168.6455, -170.3102, -173.8246],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0095, device='cuda:0', dtype=torch.float64)
tensor([-172.4625, -169.6068, -168.1688, -170.3978, -174.3118],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0104, device='cuda:0', dtype=torch.float64)
tensor([-173.1964, -169.9504, -168.1125, -170.9062, -174.7956],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0106, device='cuda:0', dtype=torch.float64)
tensor([-173.7995, -170.2802, -168.4499, -171.5591, -175.0621],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0113, device='cuda:0', dtype=torch.float64)
tensor([-174.1356, -170.3796, -169.1716, -172.2739, -174.9553],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0102, device='cuda:0', dtype=torch.float64)
tensor([-174.3781, -170.3844, -169.9789, -172.9748, -174.6997],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0123, device='cuda:0', dtype=torch.float64)
tensor([-173.6735, -170.1770, -171.1223, -173.1145, -173.7321],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0087, device='cuda:0', dtype=torch.float64)
tensor([-172.6475, -170.0288, -171.8569, -172.7398, -172.8545],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0099, device='cuda:0', dtype=torch.float64)
tensor([-172.0999, -169.9795, -172.2063, -172.5134, -172.4241],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0092, device='cuda:0', dtype=torch.float64)
tensor([-171.7955, -169.9865, -172.1358, -172.2275, -172.2921],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0114, device='cuda:0', dtype=torch.float64)
tensor([-171.6596, -169.9502, -171.6016, -171.8016, -172.4352],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0098, device='cuda:0', dtype=torch.float64)
tensor([-171.5769, -169.8956, -171.1859, -171.5142, -172.5361],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0108, device='cuda:0', dtype=torch.float64)
tensor([-171.7727, -169.8724, -170.7512, -171.4546, -172.8107],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0106, device='cuda:0', dtype=torch.float64)
tensor([-172.1878, -169.8159, -170.0520, -171.4208, -173.2948],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0085, device='cuda:0', dtype=torch.float64)
tensor([-173.0239, -169.7742, -169.7546, -171.9803, -173.8519],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0099, device='cuda:0', dtype=torch.float64)
tensor([-174.1590, -169.8546, -169.5388, -172.7964, -174.6133],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0099, device='cuda:0', dtype=torch.float64)
tensor([-175.0360, -169.8869, -169.6768, -173.5876, -175.0644],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0104, device='cuda:0', dtype=torch.float64)
tensor([-175.3626, -169.9546, -169.5528, -173.7810, -175.3548],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0112, device='cuda:0', dtype=torch.float64)
tensor([-175.1939, -169.9510, -169.5190, -173.6457, -175.3083],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0101, device='cuda:0', dtype=torch.float64)
tensor([-174.6767, -169.8363, -169.6276, -173.3263, -174.9806],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0087, device='cuda:0', dtype=torch.float64)
tensor([-174.0179, -169.6934, -169.5978, -172.8046, -174.6226],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0113, device='cuda:0', dtype=torch.float64)
tensor([-173.5288, -169.5480, -169.9777, -172.6770, -174.2090],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0092, device='cuda:0', dtype=torch.float64)
tensor([-173.3382, -169.4774, -170.0655, -172.6078, -174.1132],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0108, device='cuda:0', dtype=torch.float64)
tensor([-173.0234, -169.3856, -170.2236, -172.4940, -173.8965],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0100, device='cuda:0', dtype=torch.float64)
tensor([-172.6456, -169.1023, -170.6610, -172.5400, -173.4568],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0114, device='cuda:0', dtype=torch.float64)
tensor([-172.1397, -168.8740, -170.9636, -172.3857, -173.0278],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0085, device='cuda:0', dtype=torch.float64)
tensor([-171.5464, -168.6677, -171.1563, -172.0818, -172.6253],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0092, device='cuda:0', dtype=torch.float64)
tensor([-171.2405, -168.5523, -171.5051, -172.1050, -172.3593],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0098, device='cuda:0', dtype=torch.float64)
tensor([-171.3096, -168.5894, -171.3920, -172.1204, -172.4975],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0101, device='cuda:0', dtype=torch.float64)
tensor([-172.0197, -168.7045, -171.2379, -172.6155, -172.9593],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0108, device='cuda:0', dtype=torch.float64)
tensor([-172.8541, -168.9152, -171.1998, -173.2615, -173.4753],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0092, device='cuda:0', dtype=torch.float64)
tensor([-173.5654, -169.1687, -171.0691, -173.7360, -173.9963],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0097, device='cuda:0', dtype=torch.float64)
tensor([-174.0248, -169.3891, -170.8201, -173.9393, -174.4017],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0102, device='cuda:0', dtype=torch.float64)
tensor([-174.4596, -169.6560, -170.5891, -174.1380, -174.8057],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0086, device='cuda:0', dtype=torch.float64)
tensor([-174.9289, -169.9306, -170.3122, -174.3314, -175.2585],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0106, device='cuda:0', dtype=torch.float64)
tensor([-174.7786, -170.0180, -170.1234, -174.1113, -175.2784],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0098, device='cuda:0', dtype=torch.float64)
tensor([-174.2304, -170.0403, -169.8894, -173.5237, -175.0849],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0103, device='cuda:0', dtype=torch.float64)
tensor([-173.2651, -169.9807, -169.8344, -172.7173, -174.5658],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0109, device='cuda:0', dtype=torch.float64)
tensor([-172.4049, -169.7795, -170.1844, -172.2622, -173.8808],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0089, device='cuda:0', dtype=torch.float64)
tensor([-171.7583, -169.5783, -170.5750, -172.0101, -173.3128],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0104, device='cuda:0', dtype=torch.float64)
tensor([-171.5351, -169.4756, -170.6129, -171.8795, -173.1519],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0123, device='cuda:0', dtype=torch.float64)
tensor([-171.6606, -169.4255, -170.4584, -171.9254, -173.2663],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0098, device='cuda:0', dtype=torch.float64)
tensor([-171.8766, -169.3263, -170.4123, -172.1139, -173.3423],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0105, device='cuda:0', dtype=torch.float64)
tensor([-172.2832, -169.2241, -170.4701, -172.5357, -173.4340],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0099, device='cuda:0', dtype=torch.float64)
tensor([-172.5961, -169.0844, -170.1162, -172.6482, -173.6739],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0099, device='cuda:0', dtype=torch.float64)
tensor([-172.9956, -168.9947, -169.7230, -172.7726, -173.9913],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0119, device='cuda:0', dtype=torch.float64)
tensor([-172.9292, -168.7902, -169.4619, -172.6226, -173.9524],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0104, device='cuda:0', dtype=torch.float64)
tensor([-172.6476, -168.5598, -169.0739, -172.2126, -173.8353],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0124, device='cuda:0', dtype=torch.float64)
tensor([-172.3323, -168.4149, -168.3590, -171.5466, -173.8314],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0101, device='cuda:0', dtype=torch.float64)
tensor([-171.8154, -168.2220, -168.0739, -170.9724, -173.5420],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0098, device='cuda:0', dtype=torch.float64)
tensor([-171.6922, -168.1515, -168.0128, -170.8255, -173.4044],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0102, device='cuda:0', dtype=torch.float64)
tensor([-171.5429, -168.0517, -168.4126, -170.9472, -173.0828],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0102, device='cuda:0', dtype=torch.float64)
tensor([-171.3900, -167.9817, -168.9033, -171.1167, -172.7149],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0095, device='cuda:0', dtype=torch.float64)
tensor([-171.2060, -167.9679, -169.2091, -171.1320, -172.4278],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0095, device='cuda:0', dtype=torch.float64)
tensor([-170.7431, -167.9534, -169.3046, -170.7851, -172.1058],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0113, device='cuda:0', dtype=torch.float64)
tensor([-170.6723, -168.0354, -169.3842, -170.7538, -172.0095],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0102, device='cuda:0', dtype=torch.float64)
tensor([-170.7140, -168.0777, -169.5580, -170.8786, -171.9479],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0101, device='cuda:0', dtype=torch.float64)
tensor([-171.0517, -168.1510, -169.6532, -171.2044, -172.0935],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0109, device='cuda:0', dtype=torch.float64)
tensor([-171.6346, -168.2480, -169.4895, -171.5510, -172.4871],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0106, device='cuda:0', dtype=torch.float64)
tensor([-172.3152, -168.3195, -169.4858, -172.0818, -172.8830],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0106, device='cuda:0', dtype=torch.float64)
tensor([-173.1443, -168.4565, -169.2127, -172.5845, -173.5050],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0102, device='cuda:0', dtype=torch.float64)
tensor([-173.1851, -168.3607, -169.0778, -172.5806, -173.5444],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0099, device='cuda:0', dtype=torch.float64)
tensor([-173.1821, -168.2779, -168.9968, -172.5667, -173.5226],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0110, device='cuda:0', dtype=torch.float64)
tensor([-173.4112, -168.1514, -169.2645, -172.9461, -173.4801],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0110, device='cuda:0', dtype=torch.float64)
tensor([-173.1187, -168.0090, -169.1423, -172.6724, -173.3391],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0094, device='cuda:0', dtype=torch.float64)
tensor([-172.8408, -167.8015, -169.1262, -172.4928, -173.1577],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0100, device='cuda:0', dtype=torch.float64)
tensor([-172.2974, -167.6238, -168.9484, -171.9978, -172.8822],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0101, device='cuda:0', dtype=torch.float64)
tensor([-171.6348, -167.4485, -168.9893, -171.5486, -172.4733],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0092, device='cuda:0', dtype=torch.float64)
tensor([-170.9862, -167.3033, -169.1036, -171.1391, -172.0628],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0117, device='cuda:0', dtype=torch.float64)
tensor([-170.0367, -167.1572, -169.0221, -170.3485, -171.5815],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0094, device='cuda:0', dtype=torch.float64)
tensor([-169.3667, -167.0978, -168.7820, -169.6624, -171.3273],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0095, device='cuda:0', dtype=torch.float64)
tensor([-168.8069, -167.0217, -168.6240, -169.1201, -171.1075],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0108, device='cuda:0', dtype=torch.float64)
tensor([-168.5863, -166.9945, -168.6901, -168.9953, -170.9429],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0096, device='cuda:0', dtype=torch.float64)
tensor([-168.7428, -167.0794, -169.0038, -169.3215, -170.8704],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0113, device='cuda:0', dtype=torch.float64)
tensor([-169.5046, -167.2470, -169.2357, -170.0849, -171.1536],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0102, device='cuda:0', dtype=torch.float64)
tensor([-170.8727, -167.5716, -169.4771, -171.3146, -171.8134],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0097, device='cuda:0', dtype=torch.float64)
tensor([-171.8430, -167.8100, -169.9968, -172.3850, -172.1690],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0093, device='cuda:0', dtype=torch.float64)
tensor([-172.6709, -168.0194, -170.3943, -173.2519, -172.5020],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0090, device='cuda:0', dtype=torch.float64)
tensor([-173.0832, -168.1386, -170.6004, -173.6686, -172.6709],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0102, device='cuda:0', dtype=torch.float64)
tensor([-173.1773, -168.2321, -170.3409, -173.5404, -172.9008],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0101, device='cuda:0', dtype=torch.float64)
tensor([-172.8980, -168.2468, -169.8813, -172.9977, -172.9624],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0109, device='cuda:0', dtype=torch.float64)
tensor([-171.9985, -168.1922, -169.2862, -171.8741, -172.7074],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0093, device='cuda:0', dtype=torch.float64)
tensor([-170.7919, -168.1435, -168.4914, -170.3574, -172.4602],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0113, device='cuda:0', dtype=torch.float64)
tensor([-169.7506, -168.0415, -168.0600, -169.1840, -172.1516],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0109, device='cuda:0', dtype=torch.float64)
tensor([-168.9220, -167.8784, -168.0684, -168.4438, -171.7624],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0111, device='cuda:0', dtype=torch.float64)
tensor([-168.6339, -167.7819, -167.9995, -168.1162, -171.7030],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0132, device='cuda:0', dtype=torch.float64)
tensor([-169.1563, -167.6036, -168.5409, -168.9236, -171.7045],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0111, device='cuda:0', dtype=torch.float64)
tensor([-169.8700, -167.4385, -169.4383, -170.1030, -171.6559],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0098, device='cuda:0', dtype=torch.float64)
tensor([-171.1516, -167.4811, -170.1042, -171.5356, -172.0398],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0087, device='cuda:0', dtype=torch.float64)
tensor([-172.5290, -167.5593, -170.5453, -172.8562, -172.6276],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0114, device='cuda:0', dtype=torch.float64)
tensor([-173.8520, -167.7152, -170.4996, -173.7971, -173.4074],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0113, device='cuda:0', dtype=torch.float64)
tensor([-174.4479, -167.8118, -170.1701, -174.0060, -173.9302],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0097, device='cuda:0', dtype=torch.float64)
tensor([-174.3979, -167.8226, -169.6394, -173.6064, -174.1370],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0113, device='cuda:0', dtype=torch.float64)
tensor([-174.2393, -167.9879, -168.4163, -172.6768, -174.6289],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0101, device='cuda:0', dtype=torch.float64)
tensor([-174.1869, -168.2762, -167.6016, -172.0594, -175.0382],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0108, device='cuda:0', dtype=torch.float64)
tensor([-173.3475, -168.2893, -167.3546, -171.2082, -174.6837],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0102, device='cuda:0', dtype=torch.float64)
tensor([-172.8306, -168.3141, -167.6118, -170.9355, -174.2930],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0110, device='cuda:0', dtype=torch.float64)
tensor([-172.6474, -168.3681, -168.4384, -171.2916, -173.8823],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0094, device='cuda:0', dtype=torch.float64)
tensor([-172.7336, -168.4792, -169.3631, -171.9246, -173.6012],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0104, device='cuda:0', dtype=torch.float64)
tensor([-172.6238, -168.5243, -170.3015, -172.4236, -173.1830],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0109, device='cuda:0', dtype=torch.float64)
tensor([-172.7874, -168.6644, -171.1896, -173.1095, -172.9502],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0102, device='cuda:0', dtype=torch.float64)
tensor([-172.6602, -168.8388, -171.6532, -173.2865, -172.7190],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0125, device='cuda:0', dtype=torch.float64)
tensor([-172.0621, -168.9178, -171.1300, -172.5110, -172.6585],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0109, device='cuda:0', dtype=torch.float64)
tensor([-171.2073, -168.9464, -170.6148, -171.5284, -172.4970],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0106, device='cuda:0', dtype=torch.float64)
tensor([-170.5418, -168.9991, -170.0601, -170.6635, -172.4777],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0106, device='cuda:0', dtype=torch.float64)
tensor([-170.1611, -168.9731, -169.5464, -170.0737, -172.5361],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0107, device='cuda:0', dtype=torch.float64)
tensor([-170.3907, -169.0030, -169.2892, -170.1419, -172.7615],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0104, device='cuda:0', dtype=torch.float64)
tensor([-170.8104, -168.9755, -168.8485, -170.2516, -173.1176],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0099, device='cuda:0', dtype=torch.float64)
tensor([-171.8836, -169.0588, -168.7431, -171.0745, -173.6578],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0097, device='cuda:0', dtype=torch.float64)
tensor([-172.9191, -169.1423, -168.7073, -171.8781, -174.1669],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0096, device='cuda:0', dtype=torch.float64)
tensor([-173.9075, -169.2863, -168.4560, -172.5143, -174.8240],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0098, device='cuda:0', dtype=torch.float64)
tensor([-174.7101, -169.3690, -168.6296, -173.2520, -175.1593],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0115, device='cuda:0', dtype=torch.float64)
tensor([-174.6701, -169.1217, -169.0774, -173.5376, -174.8035],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0101, device='cuda:0', dtype=torch.float64)
tensor([-174.2329, -168.7369, -169.5393, -173.5406, -174.1423],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0104, device='cuda:0', dtype=torch.float64)
tensor([-173.3862, -168.2895, -169.9802, -173.2274, -173.2545],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0102, device='cuda:0', dtype=torch.float64)
tensor([-172.4376, -167.9034, -170.2126, -172.6915, -172.4374],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0101, device='cuda:0', dtype=torch.float64)
tensor([-171.4308, -167.4854, -170.1518, -171.9291, -171.7182],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0105, device='cuda:0', dtype=torch.float64)
tensor([-170.4211, -167.0912, -169.8704, -171.0238, -171.1017],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0096, device='cuda:0', dtype=torch.float64)
tensor([-169.5081, -166.6969, -169.3208, -170.0204, -170.6902],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0107, device='cuda:0', dtype=torch.float64)
tensor([-169.3171, -166.5400, -168.6066, -169.4602, -170.6962],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0112, device='cuda:0', dtype=torch.float64)
tensor([-169.6824, -166.4946, -168.0070, -169.4128, -170.9765],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0109, device='cuda:0', dtype=torch.float64)
tensor([-170.3842, -166.5354, -167.5493, -169.7119, -171.4016],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0083, device='cuda:0', dtype=torch.float64)
tensor([-171.1259, -166.6531, -167.1782, -170.0758, -171.8675],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0101, device='cuda:0', dtype=torch.float64)
tensor([-171.6275, -166.7468, -167.1382, -170.4384, -172.0997],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0113, device='cuda:0', dtype=torch.float64)
tensor([-171.6307, -166.7655, -167.0558, -170.3946, -172.0923],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0103, device='cuda:0', dtype=torch.float64)
tensor([-171.6265, -166.7936, -167.0692, -170.4076, -172.0702],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0104, device='cuda:0', dtype=torch.float64)
tensor([-171.7373, -166.8900, -167.2105, -170.5925, -172.1159],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0109, device='cuda:0', dtype=torch.float64)
tensor([-171.7351, -166.9426, -167.4113, -170.7240, -172.0406],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0095, device='cuda:0', dtype=torch.float64)
tensor([-171.7386, -167.1039, -167.1708, -170.5623, -172.1783],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0114, device='cuda:0', dtype=torch.float64)
tensor([-171.6138, -167.2734, -167.3410, -170.5319, -172.0784],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0094, device='cuda:0', dtype=torch.float64)
tensor([-171.3154, -167.4616, -167.3136, -170.2437, -171.9849],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0101, device='cuda:0', dtype=torch.float64)
tensor([-170.9204, -167.5754, -167.4189, -169.9622, -171.7628],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0094, device='cuda:0', dtype=torch.float64)
tensor([-170.4868, -167.5795, -167.8033, -169.8235, -171.4050],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0104, device='cuda:0', dtype=torch.float64)
tensor([-170.5738, -167.6199, -168.4873, -170.2868, -171.2093],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0104, device='cuda:0', dtype=torch.float64)
tensor([-170.7694, -167.6667, -169.5003, -171.0426, -170.9370],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0111, device='cuda:0', dtype=torch.float64)
tensor([-171.1037, -167.7108, -169.9938, -171.6042, -170.9693],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0115, device='cuda:0', dtype=torch.float64)
tensor([-171.3294, -167.6992, -169.7305, -171.6364, -171.2489],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0101, device='cuda:0', dtype=torch.float64)
tensor([-171.6693, -167.6861, -169.0191, -171.5053, -171.7700],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0098, device='cuda:0', dtype=torch.float64)
tensor([-171.7994, -167.6632, -168.0516, -171.0686, -172.2949],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0104, device='cuda:0', dtype=torch.float64)
tensor([-171.9823, -167.6582, -167.1220, -170.6927, -172.8246],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0102, device='cuda:0', dtype=torch.float64)
tensor([-172.1585, -167.6099, -166.5213, -170.5003, -173.1875],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0106, device='cuda:0', dtype=torch.float64)
tensor([-171.7388, -167.4147, -166.2066, -170.0081, -173.0713],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0097, device='cuda:0', dtype=torch.float64)
tensor([-171.1411, -167.0383, -166.1850, -169.5797, -172.6698],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0116, device='cuda:0', dtype=torch.float64)
tensor([-170.5562, -166.5748, -166.3872, -169.3235, -172.1990],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0102, device='cuda:0', dtype=torch.float64)
tensor([-169.9694, -166.1641, -166.4839, -168.9784, -171.7777],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0114, device='cuda:0', dtype=torch.float64)
tensor([-169.7820, -165.8612, -166.9833, -169.1670, -171.4234],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0098, device='cuda:0', dtype=torch.float64)
tensor([-170.0624, -165.6728, -167.5478, -169.7561, -171.3109],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0114, device='cuda:0', dtype=torch.float64)
tensor([-170.4306, -165.5849, -167.8536, -170.2439, -171.3221],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0106, device='cuda:0', dtype=torch.float64)
tensor([-170.1090, -165.3862, -168.2356, -170.2464, -170.9307],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0104, device='cuda:0', dtype=torch.float64)
tensor([-169.3911, -165.1828, -168.6147, -169.9271, -170.3412],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0106, device='cuda:0', dtype=torch.float64)
tensor([-168.7841, -165.0780, -168.6471, -169.4605, -169.9746],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0105, device='cuda:0', dtype=torch.float64)
tensor([-168.1752, -165.0987, -168.2139, -168.6663, -169.8193],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0104, device='cuda:0', dtype=torch.float64)
tensor([-167.8878, -165.1546, -167.8068, -168.1677, -169.7876],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0116, device='cuda:0', dtype=torch.float64)
tensor([-168.2272, -165.3628, -167.7237, -168.3664, -169.9298],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0103, device='cuda:0', dtype=torch.float64)
tensor([-168.9113, -165.6114, -167.6822, -168.8737, -170.2358],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0089, device='cuda:0', dtype=torch.float64)
tensor([-169.7907, -165.8733, -167.8147, -169.6438, -170.6150],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0098, device='cuda:0', dtype=torch.float64)
tensor([-170.7140, -166.1141, -168.1513, -170.5483, -170.9638],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0100, device='cuda:0', dtype=torch.float64)
tensor([-171.6508, -166.3273, -168.4763, -171.4631, -171.3543],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0115, device='cuda:0', dtype=torch.float64)
tensor([-171.8904, -166.5201, -168.2309, -171.4897, -171.6654],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0096, device='cuda:0', dtype=torch.float64)
tensor([-171.8541, -166.6215, -168.2254, -171.4745, -171.7138],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0107, device='cuda:0', dtype=torch.float64)
tensor([-171.6016, -166.6915, -167.7849, -171.0317, -171.8322],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0111, device='cuda:0', dtype=torch.float64)
tensor([-171.1927, -166.6040, -167.4382, -170.5426, -171.7474],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0097, device='cuda:0', dtype=torch.float64)
tensor([-170.9732, -166.6007, -166.9054, -170.0500, -171.8814],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0106, device='cuda:0', dtype=torch.float64)
tensor([-170.0743, -166.5135, -166.2756, -168.9722, -171.6699],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0105, device='cuda:0', dtype=torch.float64)
tensor([-169.1840, -166.3411, -166.1298, -168.1996, -171.2437],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0095, device='cuda:0', dtype=torch.float64)
tensor([-168.3495, -166.0807, -166.1151, -167.5744, -170.7671],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0113, device='cuda:0', dtype=torch.float64)
tensor([-168.0425, -165.9531, -166.4701, -167.5831, -170.4457],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0097, device='cuda:0', dtype=torch.float64)
tensor([-168.3983, -165.8601, -166.9238, -168.1993, -170.3594],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0103, device='cuda:0', dtype=torch.float64)
tensor([-168.7760, -165.7600, -167.4311, -168.8998, -170.3067],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0116, device='cuda:0', dtype=torch.float64)
tensor([-169.1657, -165.5654, -168.3788, -169.8857, -170.0506],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0091, device='cuda:0', dtype=torch.float64)
tensor([-169.6030, -165.4766, -169.6008, -171.0711, -169.8009],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0107, device='cuda:0', dtype=torch.float64)
tensor([-169.6294, -165.3973, -170.2140, -171.5461, -169.5964],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0100, device='cuda:0', dtype=torch.float64)
tensor([-169.7169, -165.3181, -170.3494, -171.7715, -169.5839],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0104, device='cuda:0', dtype=torch.float64)
tensor([-169.7506, -165.3178, -169.5201, -171.3276, -169.8965],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0105, device='cuda:0', dtype=torch.float64)
tensor([-169.5356, -165.3246, -168.1605, -170.3531, -170.3119],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0092, device='cuda:0', dtype=torch.float64)
tensor([-169.5988, -165.5889, -166.7016, -169.4911, -171.0183],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0095, device='cuda:0', dtype=torch.float64)
tensor([-169.3588, -165.8179, -165.5589, -168.6014, -171.4747],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0093, device='cuda:0', dtype=torch.float64)
tensor([-169.4550, -166.1820, -164.5956, -168.0546, -172.0699],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0112, device='cuda:0', dtype=torch.float64)
tensor([-169.4924, -166.3009, -164.5062, -168.0450, -172.1605],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0102, device='cuda:0', dtype=torch.float64)
tensor([-169.0365, -166.2140, -164.7723, -167.8731, -171.7408],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0102, device='cuda:0', dtype=torch.float64)
tensor([-168.4481, -165.9732, -165.4056, -167.8642, -171.0328],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0103, device='cuda:0', dtype=torch.float64)
tensor([-167.8567, -165.7801, -166.3197, -168.0250, -170.2859],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0122, device='cuda:0', dtype=torch.float64)
tensor([-167.9761, -165.6736, -167.0481, -168.6298, -169.9897],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0105, device='cuda:0', dtype=torch.float64)
tensor([-168.3744, -165.6569, -167.6045, -169.3388, -169.9329],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0098, device='cuda:0', dtype=torch.float64)
tensor([-169.1931, -165.7572, -167.9149, -170.2127, -170.2312],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0102, device='cuda:0', dtype=torch.float64)
tensor([-170.0316, -165.8966, -167.8633, -170.8603, -170.7253],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0092, device='cuda:0', dtype=torch.float64)
tensor([-170.4256, -165.9887, -167.8413, -171.1673, -170.9833],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0117, device='cuda:0', dtype=torch.float64)
tensor([-169.9938, -165.9298, -167.8919, -170.8831, -170.6672],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0100, device='cuda:0', dtype=torch.float64)
tensor([-169.1951, -165.8299, -167.7077, -170.1703, -170.2799],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0088, device='cuda:0', dtype=torch.float64)
tensor([-168.2956, -165.7514, -167.6186, -169.4191, -169.8174],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0104, device='cuda:0', dtype=torch.float64)
tensor([-167.7003, -165.7474, -167.3938, -168.8108, -169.5925],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0109, device='cuda:0', dtype=torch.float64)
tensor([-167.1712, -165.7123, -167.1838, -168.2684, -169.3641],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0104, device='cuda:0', dtype=torch.float64)
tensor([-167.0996, -165.6276, -167.3893, -168.3392, -169.1780],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0128, device='cuda:0', dtype=torch.float64)
tensor([-167.4438, -165.5981, -167.1190, -168.4326, -169.3534],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0096, device='cuda:0', dtype=torch.float64)
tensor([-167.9269, -165.6448, -166.7726, -168.5824, -169.6715],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0101, device='cuda:0', dtype=torch.float64)
tensor([-168.4700, -165.6671, -166.3677, -168.7490, -170.0502],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0105, device='cuda:0', dtype=torch.float64)
tensor([-169.2380, -165.6636, -166.1694, -169.2256, -170.4706],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0104, device='cuda:0', dtype=torch.float64)
tensor([-169.7565, -165.6194, -165.8665, -169.4450, -170.8007],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0100, device='cuda:0', dtype=torch.float64)
tensor([-170.0957, -165.5681, -165.5140, -169.4877, -171.0494],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0107, device='cuda:0', dtype=torch.float64)
tensor([-170.3121, -165.4951, -165.3793, -169.5637, -171.1445],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0100, device='cuda:0', dtype=torch.float64)
tensor([-170.1362, -165.3623, -165.2332, -169.3199, -171.0098],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0114, device='cuda:0', dtype=torch.float64)
tensor([-170.1209, -165.2852, -165.1237, -169.2357, -170.9991],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0102, device='cuda:0', dtype=torch.float64)
tensor([-170.0856, -165.1218, -165.2058, -169.2503, -170.8724],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0097, device='cuda:0', dtype=torch.float64)
tensor([-169.9102, -164.8808, -165.5113, -169.2980, -170.5431],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0118, device='cuda:0', dtype=torch.float64)
tensor([-169.5899, -164.6678, -166.5683, -169.6721, -169.8137],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0110, device='cuda:0', dtype=torch.float64)
tensor([-168.7639, -164.4753, -167.0361, -169.3086, -169.0972],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0106, device='cuda:0', dtype=torch.float64)
tensor([-167.9595, -164.4645, -166.8523, -168.5147, -168.7496],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0097, device='cuda:0', dtype=torch.float64)
tensor([-167.3618, -164.4918, -166.8351, -167.9621, -168.4497],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0102, device='cuda:0', dtype=torch.float64)
tensor([-166.9961, -164.5839, -166.4993, -167.4194, -168.4076],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0109, device='cuda:0', dtype=torch.float64)
tensor([-167.0335, -164.7085, -166.0302, -167.1303, -168.6420],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0112, device='cuda:0', dtype=torch.float64)
tensor([-167.4677, -164.8944, -165.5502, -167.1839, -169.0987],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0108, device='cuda:0', dtype=torch.float64)
tensor([-167.7570, -164.9661, -165.6277, -167.4852, -169.2384],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0126, device='cuda:0', dtype=torch.float64)
tensor([-168.3459, -165.2042, -165.3808, -167.8244, -169.7556],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0112, device='cuda:0', dtype=torch.float64)
tensor([-168.9177, -165.4614, -165.3392, -168.2794, -170.1974],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0093, device='cuda:0', dtype=torch.float64)
tensor([-169.3911, -165.6185, -165.1780, -168.5902, -170.6137],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0086, device='cuda:0', dtype=torch.float64)
tensor([-169.7297, -165.7303, -165.0874, -168.8388, -170.9047],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0101, device='cuda:0', dtype=torch.float64)
tensor([-169.9195, -165.8479, -164.9914, -168.9706, -171.1429],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0119, device='cuda:0', dtype=torch.float64)
tensor([-169.4545, -165.7946, -164.9451, -168.6287, -170.9577],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0111, device='cuda:0', dtype=torch.float64)
tensor([-169.0531, -165.6157, -165.2599, -168.5826, -170.5983],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0098, device='cuda:0', dtype=torch.float64)
tensor([-168.8085, -165.4807, -165.4568, -168.5883, -170.4049],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0102, device='cuda:0', dtype=torch.float64)
tensor([-168.6319, -165.4302, -165.8587, -168.7405, -170.2111],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0091, device='cuda:0', dtype=torch.float64)
tensor([-168.6235, -165.4505, -166.1959, -168.9784, -170.1729],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0112, device='cuda:0', dtype=torch.float64)
tensor([-169.1082, -165.6279, -166.1736, -169.3669, -170.5613],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0098, device='cuda:0', dtype=torch.float64)
tensor([-169.7351, -165.7683, -166.2777, -169.9402, -170.9340],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0106, device='cuda:0', dtype=torch.float64)
tensor([-170.1730, -165.8995, -166.4770, -170.4168, -171.1493],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0116, device='cuda:0', dtype=torch.float64)
tensor([-170.3771, -165.8959, -166.7780, -170.7914, -171.2045],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0102, device='cuda:0', dtype=torch.float64)
tensor([-170.2072, -165.8569, -167.1146, -170.9049, -171.0050],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0107, device='cuda:0', dtype=torch.float64)
tensor([-169.9494, -165.8419, -167.1135, -170.7518, -170.9561],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0117, device='cuda:0', dtype=torch.float64)
tensor([-169.2935, -165.7788, -166.7675, -170.0921, -170.8244],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0119, device='cuda:0', dtype=torch.float64)
tensor([-168.0354, -165.6116, -166.3392, -168.8981, -170.3743],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0084, device='cuda:0', dtype=torch.float64)
tensor([-166.9818, -165.5461, -165.9263, -167.8548, -170.1252],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0097, device='cuda:0', dtype=torch.float64)
tensor([-166.0353, -165.4993, -165.6933, -166.9674, -169.8404],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0122, device='cuda:0', dtype=torch.float64)
tensor([-166.0915, -165.5525, -165.6363, -166.9801, -169.9338],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0107, device='cuda:0', dtype=torch.float64)
tensor([-166.5850, -165.7957, -165.3567, -167.1961, -170.3228],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0107, device='cuda:0', dtype=torch.float64)
tensor([-167.2991, -165.9991, -165.4822, -167.8423, -170.6281],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0089, device='cuda:0', dtype=torch.float64)
tensor([-168.0765, -166.2067, -165.7445, -168.6015, -170.8912],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0106, device='cuda:0', dtype=torch.float64)
tensor([-169.1938, -166.3101, -166.5267, -169.9654, -171.1062],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0087, device='cuda:0', dtype=torch.float64)
tensor([-170.3321, -166.4430, -167.0867, -171.1851, -171.4373],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0096, device='cuda:0', dtype=torch.float64)
tensor([-171.4083, -166.6198, -167.3730, -172.1883, -171.9404],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0108, device='cuda:0', dtype=torch.float64)
tensor([-171.8257, -166.6734, -167.3464, -172.5114, -172.2002],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0112, device='cuda:0', dtype=torch.float64)
tensor([-171.3933, -166.5528, -167.2322, -172.1291, -171.9395],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0103, device='cuda:0', dtype=torch.float64)
tensor([-170.4623, -166.3604, -166.7964, -171.1812, -171.5112],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0098, device='cuda:0', dtype=torch.float64)
tensor([-169.3992, -166.1252, -166.5583, -170.2363, -170.9001],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0089, device='cuda:0', dtype=torch.float64)
tensor([-168.1293, -165.7671, -166.5031, -169.2267, -170.1046],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0087, device='cuda:0', dtype=torch.float64)
tensor([-166.9654, -165.4164, -166.5010, -168.3096, -169.4194],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0101, device='cuda:0', dtype=torch.float64)
tensor([-165.9563, -165.1470, -166.1119, -167.2843, -169.0408],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0118, device='cuda:0', dtype=torch.float64)
tensor([-165.8911, -165.0260, -166.0144, -167.1878, -169.0119],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0106, device='cuda:0', dtype=torch.float64)
tensor([-166.5249, -164.9762, -165.9719, -167.6942, -169.2739],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0117, device='cuda:0', dtype=torch.float64)
tensor([-167.4335, -165.0439, -165.8311, -168.3252, -169.7336],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0096, device='cuda:0', dtype=torch.float64)
tensor([-168.6849, -165.2690, -165.3893, -169.0323, -170.5650],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0100, device='cuda:0', dtype=torch.float64)
tensor([-170.3633, -165.6946, -165.0742, -170.1181, -171.6919],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0105, device='cuda:0', dtype=torch.float64)
tensor([-171.8541, -166.1204, -165.0899, -171.2070, -172.6193],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0111, device='cuda:0', dtype=torch.float64)
tensor([-172.8695, -166.4156, -165.2199, -172.0044, -173.2316],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0110, device='cuda:0', dtype=torch.float64)
tensor([-172.8669, -166.3587, -165.5544, -172.1750, -173.0402],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0125, device='cuda:0', dtype=torch.float64)
tensor([-171.5252, -166.0589, -165.2725, -171.0048, -172.2829],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0094, device='cuda:0', dtype=torch.float64)
tensor([-169.7825, -165.6190, -164.9623, -169.5245, -171.3194],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0100, device='cuda:0', dtype=torch.float64)
tensor([-167.7842, -165.2299, -164.7281, -167.8468, -170.2848],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0097, device='cuda:0', dtype=torch.float64)
tensor([-166.4625, -164.8891, -164.5461, -166.7340, -169.6351],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0115, device='cuda:0', dtype=torch.float64)
tensor([-165.9228, -164.6080, -164.6156, -166.3964, -169.2681],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0119, device='cuda:0', dtype=torch.float64)
tensor([-165.8722, -164.4830, -164.4241, -166.2767, -169.2569],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0110, device='cuda:0', dtype=torch.float64)
tensor([-166.3564, -164.4958, -164.5355, -166.7454, -169.3857],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0095, device='cuda:0', dtype=torch.float64)
tensor([-166.8987, -164.5423, -164.8400, -167.3695, -169.4887],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0092, device='cuda:0', dtype=torch.float64)
tensor([-167.4208, -164.5488, -165.2513, -168.0460, -169.5703],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0118, device='cuda:0', dtype=torch.float64)
tensor([-167.7406, -164.5372, -166.0808, -168.7995, -169.3595],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0094, device='cuda:0', dtype=torch.float64)
tensor([-167.9700, -164.4857, -166.9372, -169.5294, -169.1336],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0104, device='cuda:0', dtype=torch.float64)
tensor([-167.8580, -164.4508, -167.3897, -169.7730, -168.9260],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0110, device='cuda:0', dtype=torch.float64)
tensor([-167.7005, -164.3841, -167.6065, -169.8206, -168.7761],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0110, device='cuda:0', dtype=torch.float64)
tensor([-167.2591, -164.2987, -167.6952, -169.5786, -168.5019],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0103, device='cuda:0', dtype=torch.float64)
tensor([-166.9372, -164.2320, -167.4154, -169.2157, -168.4446],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0099, device='cuda:0', dtype=torch.float64)
tensor([-166.7379, -164.2336, -166.9000, -168.8003, -168.5114],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0113, device='cuda:0', dtype=torch.float64)
tensor([-166.5278, -164.2509, -166.4852, -168.4233, -168.5298],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0096, device='cuda:0', dtype=torch.float64)
tensor([-166.4475, -164.3305, -165.8609, -167.9853, -168.7043],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0113, device='cuda:0', dtype=torch.float64)
tensor([-166.0604, -164.3027, -165.0914, -167.2312, -168.7730],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0098, device='cuda:0', dtype=torch.float64)
tensor([-165.7663, -164.3110, -164.2922, -166.5388, -168.9393],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0131, device='cuda:0', dtype=torch.float64)
tensor([-166.0117, -164.3414, -164.1629, -166.6630, -169.0883],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0120, device='cuda:0', dtype=torch.float64)
tensor([-166.4671, -164.2805, -164.6631, -167.3305, -169.0668],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0111, device='cuda:0', dtype=torch.float64)
tensor([-166.8572, -164.2973, -165.1137, -167.9016, -169.0743],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0088, device='cuda:0', dtype=torch.float64)
tensor([-166.9543, -164.2818, -165.3793, -168.1258, -168.9866],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0107, device='cuda:0', dtype=torch.float64)
tensor([-167.2219, -164.3758, -165.4865, -168.3573, -169.0582],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0102, device='cuda:0', dtype=torch.float64)
tensor([-167.5360, -164.5649, -165.1633, -168.3414, -169.3748],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0095, device='cuda:0', dtype=torch.float64)
tensor([-167.9366, -164.7244, -164.8694, -168.4313, -169.7425],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0110, device='cuda:0', dtype=torch.float64)
tensor([-168.6732, -164.8524, -164.8221, -168.9424, -170.1916],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0101, device='cuda:0', dtype=torch.float64)
tensor([-169.1852, -164.9446, -164.6581, -169.1914, -170.5274],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0103, device='cuda:0', dtype=torch.float64)
tensor([-169.5367, -164.9307, -164.9239, -169.5815, -170.5336],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0104, device='cuda:0', dtype=torch.float64)
tensor([-169.6116, -164.9032, -165.1573, -169.7206, -170.3836],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0107, device='cuda:0', dtype=torch.float64)
tensor([-169.1219, -164.7249, -165.5538, -169.5425, -169.8631],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0108, device='cuda:0', dtype=torch.float64)
tensor([-168.3920, -164.5516, -165.6861, -169.0338, -169.3337],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0116, device='cuda:0', dtype=torch.float64)
tensor([-167.6649, -164.4435, -165.8639, -168.5334, -168.8270],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0113, device='cuda:0', dtype=torch.float64)
tensor([-166.8144, -164.4003, -165.5330, -167.6395, -168.5334],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0116, device='cuda:0', dtype=torch.float64)
tensor([-165.6745, -164.3304, -165.2055, -166.4925, -168.1598],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0112, device='cuda:0', dtype=torch.float64)
tensor([-164.9372, -164.1031, -164.9150, -165.7480, -167.9095],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0111, device='cuda:0', dtype=torch.float64)
tensor([-164.9724, -163.8941, -164.5696, -165.6098, -167.9950],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0107, device='cuda:0', dtype=torch.float64)
tensor([-165.4933, -163.6732, -164.1485, -165.8310, -168.3095],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0111, device='cuda:0', dtype=torch.float64)
tensor([-166.3156, -163.5177, -163.9397, -166.4072, -168.6800],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0119, device='cuda:0', dtype=torch.float64)
tensor([-167.4510, -163.3979, -164.2861, -167.5482, -169.0462],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0123, device='cuda:0', dtype=torch.float64)
tensor([-168.6372, -163.4074, -164.9692, -168.8579, -169.3713],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0109, device='cuda:0', dtype=torch.float64)
tensor([-169.3992, -163.3591, -165.8525, -169.9546, -169.3626],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0106, device='cuda:0', dtype=torch.float64)
tensor([-169.5888, -163.2772, -166.2449, -170.3331, -169.2679],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0119, device='cuda:0', dtype=torch.float64)
tensor([-169.2153, -163.2306, -166.2419, -170.0331, -169.0337],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0116, device='cuda:0', dtype=torch.float64)
tensor([-168.2369, -163.0905, -165.6545, -168.9254, -168.6971],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0117, device='cuda:0', dtype=torch.float64)
tensor([-166.9130, -162.8429, -165.2719, -167.6673, -168.0888],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0118, device='cuda:0', dtype=torch.float64)
tensor([-166.2392, -162.8230, -164.5242, -166.6663, -168.0298],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0096, device='cuda:0', dtype=torch.float64)
tensor([-165.6850, -162.8306, -164.0422, -165.9071, -167.9581],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0113, device='cuda:0', dtype=torch.float64)
tensor([-165.1383, -162.8773, -163.7095, -165.2433, -167.8173],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0123, device='cuda:0', dtype=torch.float64)
tensor([-165.0452, -162.9765, -163.8193, -165.1916, -167.7326],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0104, device='cuda:0', dtype=torch.float64)
tensor([-165.3302, -163.1279, -164.2474, -165.6411, -167.6923],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0107, device='cuda:0', dtype=torch.float64)
tensor([-165.5798, -163.3053, -164.6433, -166.0411, -167.6782],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0107, device='cuda:0', dtype=torch.float64)
tensor([-165.5660, -163.3591, -165.2710, -166.3840, -167.4128],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0115, device='cuda:0', dtype=torch.float64)
tensor([-166.1958, -163.4557, -165.7338, -167.1592, -167.5234],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0106, device='cuda:0', dtype=torch.float64)
tensor([-167.1691, -163.6179, -166.0431, -168.0992, -167.8372],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0108, device='cuda:0', dtype=torch.float64)
tensor([-167.9798, -163.9137, -165.7821, -168.5442, -168.3865],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0080, device='cuda:0', dtype=torch.float64)
tensor([-168.6424, -164.2695, -165.2032, -168.6898, -169.0430],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0105, device='cuda:0', dtype=torch.float64)
tensor([-168.6079, -164.4656, -164.4526, -168.2289, -169.3757],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0109, device='cuda:0', dtype=torch.float64)
tensor([-168.1140, -164.5717, -163.7083, -167.4217, -169.4769],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0112, device='cuda:0', dtype=torch.float64)
tensor([-167.3082, -164.6035, -163.0695, -166.4403, -169.3646],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0106, device='cuda:0', dtype=torch.float64)
tensor([-166.3121, -164.4991, -162.6373, -165.4348, -169.0441],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0099, device='cuda:0', dtype=torch.float64)
tensor([-165.5148, -164.3334, -162.6239, -164.8155, -168.6132],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0108, device='cuda:0', dtype=torch.float64)
tensor([-164.8637, -164.1121, -162.8229, -164.4399, -168.1454],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0102, device='cuda:0', dtype=torch.float64)
tensor([-164.6536, -163.8884, -163.2631, -164.5706, -167.7642],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0119, device='cuda:0', dtype=torch.float64)
tensor([-164.7766, -163.6000, -164.2792, -165.3322, -167.2770],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0093, device='cuda:0', dtype=torch.float64)
tensor([-165.2549, -163.4400, -164.8304, -166.1105, -167.2003],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0108, device='cuda:0', dtype=torch.float64)
tensor([-166.1772, -163.3720, -165.2396, -167.1469, -167.4584],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0097, device='cuda:0', dtype=torch.float64)
tensor([-167.1758, -163.3944, -165.6158, -168.1866, -167.8224],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0104, device='cuda:0', dtype=torch.float64)
tensor([-168.1861, -163.4669, -165.8743, -169.1479, -168.2799],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0103, device='cuda:0', dtype=torch.float64)
tensor([-168.8640, -163.5187, -165.4088, -169.4290, -168.8659],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0111, device='cuda:0', dtype=torch.float64)
tensor([-168.7814, -163.4415, -165.0184, -169.1821, -168.9930],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0104, device='cuda:0', dtype=torch.float64)
tensor([-168.5532, -163.3814, -164.4402, -168.7204, -169.1093],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0115, device='cuda:0', dtype=torch.float64)
tensor([-167.9660, -163.3033, -163.5426, -167.7634, -169.1497],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0107, device='cuda:0', dtype=torch.float64)
tensor([-166.9509, -163.1108, -163.0083, -166.6787, -168.8072],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0095, device='cuda:0', dtype=torch.float64)
tensor([-166.1284, -163.0318, -162.5169, -165.7588, -168.6220],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0088, device='cuda:0', dtype=torch.float64)
tensor([-165.4992, -163.0264, -162.4348, -165.1853, -168.3855],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0110, device='cuda:0', dtype=torch.float64)
tensor([-165.2623, -163.0096, -162.7021, -165.1320, -168.1423],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0103, device='cuda:0', dtype=torch.float64)
tensor([-165.2348, -162.9837, -163.4880, -165.5786, -167.8033],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0120, device='cuda:0', dtype=torch.float64)
tensor([-165.5409, -163.0031, -164.6215, -166.4873, -167.4675],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0100, device='cuda:0', dtype=torch.float64)
tensor([-166.3170, -163.1937, -165.5447, -167.6244, -167.4575],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0112, device='cuda:0', dtype=torch.float64)
tensor([-167.6266, -163.4473, -165.9140, -168.8257, -167.9622],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0107, device='cuda:0', dtype=torch.float64)
tensor([-168.8936, -163.7676, -165.5626, -169.5336, -168.8069],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0101, device='cuda:0', dtype=torch.float64)
tensor([-169.5943, -163.9284, -165.0502, -169.7382, -169.3833],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0104, device='cuda:0', dtype=torch.float64)
tensor([-170.1322, -164.1005, -164.3225, -169.6989, -169.9657],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0125, device='cuda:0', dtype=torch.float64)
tensor([-170.0121, -164.0453, -164.0805, -169.4597, -169.8907],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0108, device='cuda:0', dtype=torch.float64)
tensor([-169.5855, -163.9196, -163.8667, -169.0157, -169.6049],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0112, device='cuda:0', dtype=torch.float64)
tensor([-168.3755, -163.6626, -163.6302, -167.9689, -168.9184],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0095, device='cuda:0', dtype=torch.float64)
tensor([-167.3290, -163.3993, -163.1947, -166.9342, -168.4510],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0106, device='cuda:0', dtype=torch.float64)
tensor([-166.4805, -163.1829, -162.7960, -166.0613, -168.1060],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0102, device='cuda:0', dtype=torch.float64)
tensor([-165.9190, -163.0102, -162.6781, -165.5508, -167.7974],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0097, device='cuda:0', dtype=torch.float64)
tensor([-165.6184, -162.7711, -162.8149, -165.4081, -167.4700],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0120, device='cuda:0', dtype=torch.float64)
tensor([-165.4723, -162.5747, -162.8696, -165.3402, -167.2437],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0128, device='cuda:0', dtype=torch.float64)
tensor([-165.5121, -162.3605, -163.2873, -165.6146, -166.9463],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0125, device='cuda:0', dtype=torch.float64)
tensor([-166.2965, -162.3023, -163.7432, -166.4869, -167.0114],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0122, device='cuda:0', dtype=torch.float64)
tensor([-167.1306, -162.4392, -164.0881, -167.2938, -167.2760],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0092, device='cuda:0', dtype=torch.float64)
tensor([-167.6877, -162.5056, -164.6225, -168.0092, -167.3249],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0108, device='cuda:0', dtype=torch.float64)
tensor([-168.3782, -162.6032, -165.1501, -168.8107, -167.4957],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0132, device='cuda:0', dtype=torch.float64)
tensor([-168.0682, -162.5122, -165.1380, -168.5359, -167.3120],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0107, device='cuda:0', dtype=torch.float64)
tensor([-167.6008, -162.3296, -164.8824, -168.0243, -167.1505],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0098, device='cuda:0', dtype=torch.float64)
tensor([-166.8913, -162.1391, -164.5807, -167.3062, -166.8932],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0106, device='cuda:0', dtype=torch.float64)
tensor([-165.8516, -162.0341, -163.9136, -166.0837, -166.6769],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0097, device='cuda:0', dtype=torch.float64)
tensor([-165.1181, -161.9811, -163.4450, -165.1962, -166.5755],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0099, device='cuda:0', dtype=torch.float64)
tensor([-164.6217, -161.9013, -163.2863, -164.6651, -166.4269],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0105, device='cuda:0', dtype=torch.float64)
tensor([-164.5142, -161.9121, -163.3059, -164.5403, -166.4318],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0109, device='cuda:0', dtype=torch.float64)
tensor([-164.4734, -161.9492, -163.7356, -164.7136, -166.2668],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0098, device='cuda:0', dtype=torch.float64)
tensor([-164.8160, -162.0359, -164.1677, -165.1939, -166.2609],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0113, device='cuda:0', dtype=torch.float64)
tensor([-165.1195, -162.0624, -164.7189, -165.7188, -166.1523],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0101, device='cuda:0', dtype=torch.float64)
tensor([-165.4630, -162.0874, -164.7836, -165.9918, -166.2600],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0108, device='cuda:0', dtype=torch.float64)
tensor([-165.8877, -162.0749, -164.6613, -166.2395, -166.4639],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0102, device='cuda:0', dtype=torch.float64)
tensor([-166.7323, -162.1709, -164.2704, -166.6508, -167.0294],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0100, device='cuda:0', dtype=torch.float64)
tensor([-167.9385, -162.3422, -164.0331, -167.4206, -167.7501],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0110, device='cuda:0', dtype=torch.float64)
tensor([-168.7224, -162.4235, -163.7944, -167.8821, -168.2445],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0119, device='cuda:0', dtype=torch.float64)
tensor([-169.0240, -162.4105, -163.6380, -168.0200, -168.4298],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0107, device='cuda:0', dtype=torch.float64)
tensor([-168.8561, -162.1850, -163.7488, -167.9940, -168.1704],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0101, device='cuda:0', dtype=torch.float64)
tensor([-168.0366, -161.8543, -163.6831, -167.3695, -167.6361],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0103, device='cuda:0', dtype=torch.float64)
tensor([-167.1604, -161.5627, -163.5322, -166.6317, -167.1768],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0104, device='cuda:0', dtype=torch.float64)
tensor([-166.3424, -161.3209, -163.7646, -166.1569, -166.6202],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0116, device='cuda:0', dtype=torch.float64)
tensor([-165.4165, -161.1563, -163.6624, -165.3862, -166.1742],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0102, device='cuda:0', dtype=torch.float64)
tensor([-164.2665, -160.9107, -163.2487, -164.2577, -165.7830],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0132, device='cuda:0', dtype=torch.float64)
tensor([-163.8362, -160.8733, -162.6813, -163.6087, -165.8655],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0112, device='cuda:0', dtype=torch.float64)
tensor([-164.3040, -161.0639, -162.2109, -163.7171, -166.2987],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0106, device='cuda:0', dtype=torch.float64)
tensor([-165.1311, -161.2831, -161.9635, -164.2543, -166.8263],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0099, device='cuda:0', dtype=torch.float64)
tensor([-166.2553, -161.5132, -161.9214, -165.1262, -167.4406],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0130, device='cuda:0', dtype=torch.float64)
tensor([-167.3202, -161.6622, -162.3059, -166.2179, -167.8269],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0113, device='cuda:0', dtype=torch.float64)
tensor([-168.2167, -161.8039, -162.3349, -166.9681, -168.3313],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0102, device='cuda:0', dtype=torch.float64)
tensor([-168.5591, -161.9095, -162.3989, -167.3026, -168.5375],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0118, device='cuda:0', dtype=torch.float64)
tensor([-168.5731, -162.0907, -162.2356, -167.2520, -168.6725],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0120, device='cuda:0', dtype=torch.float64)
tensor([-167.8559, -162.0470, -162.2256, -166.7441, -168.3178],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0115, device='cuda:0', dtype=torch.float64)
tensor([-166.5927, -161.9301, -162.2944, -165.8610, -167.6358],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0124, device='cuda:0', dtype=torch.float64)
tensor([-165.1450, -161.7961, -162.4327, -164.8254, -166.8493],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0104, device='cuda:0', dtype=torch.float64)
tensor([-164.0383, -161.6918, -162.5461, -164.0078, -166.2831],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0115, device='cuda:0', dtype=torch.float64)
tensor([-163.6334, -161.8040, -162.4014, -163.5941, -166.1913],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0117, device='cuda:0', dtype=torch.float64)
tensor([-163.5440, -161.9863, -162.2710, -163.4108, -166.2457],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0123, device='cuda:0', dtype=torch.float64)
tensor([-164.2498, -162.2329, -162.1997, -163.9147, -166.5989],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0117, device='cuda:0', dtype=torch.float64)
tensor([-165.4943, -162.4875, -162.1975, -164.8874, -167.1520],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0101, device='cuda:0', dtype=torch.float64)
tensor([-166.6409, -162.6567, -162.3253, -165.8372, -167.6244],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0105, device='cuda:0', dtype=torch.float64)
tensor([-168.0413, -162.9126, -162.3896, -166.9240, -168.3292],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0103, device='cuda:0', dtype=torch.float64)
tensor([-169.0231, -163.0722, -162.4398, -167.6749, -168.8688],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0096, device='cuda:0', dtype=torch.float64)
tensor([-169.4302, -163.1803, -162.4380, -167.9721, -169.1069],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0117, device='cuda:0', dtype=torch.float64)
tensor([-169.2625, -162.8428, -163.0758, -168.2517, -168.5244],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0102, device='cuda:0', dtype=torch.float64)
tensor([-168.8710, -162.4787, -163.6968, -168.3566, -167.8420],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0107, device='cuda:0', dtype=torch.float64)
tensor([-168.0399, -162.1427, -164.3046, -168.1230, -166.9926],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0111, device='cuda:0', dtype=torch.float64)
tensor([-166.4500, -161.7379, -164.4419, -167.0312, -166.0199],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0100, device='cuda:0', dtype=torch.float64)
tensor([-164.6046, -161.3388, -164.5299, -165.6985, -165.0705],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0131, device='cuda:0', dtype=torch.float64)
tensor([-163.1275, -161.0657, -164.4606, -164.5307, -164.4428],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0101, device='cuda:0', dtype=torch.float64)
tensor([-161.9920, -160.9550, -163.8932, -163.2902, -164.2294],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0106, device='cuda:0', dtype=torch.float64)
tensor([-161.6680, -161.0319, -162.8477, -162.4198, -164.5370],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0104, device='cuda:0', dtype=torch.float64)
tensor([-162.1414, -161.1180, -162.1835, -162.4593, -164.9902],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0103, device='cuda:0', dtype=torch.float64)
tensor([-163.2116, -161.3464, -161.7044, -163.0656, -165.6692],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0131, device='cuda:0', dtype=torch.float64)
tensor([-164.8692, -161.5074, -161.4893, -164.3084, -166.5572],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0120, device='cuda:0', dtype=torch.float64)
tensor([-166.6761, -161.7610, -161.4344, -165.6933, -167.5932],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0102, device='cuda:0', dtype=torch.float64)
tensor([-167.7941, -161.8231, -161.6556, -166.6974, -168.1888],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0099, device='cuda:0', dtype=torch.float64)
tensor([-168.5407, -161.8248, -162.0602, -167.5173, -168.4984],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0115, device='cuda:0', dtype=torch.float64)
tensor([-168.8503, -161.7917, -162.5666, -168.0689, -168.5177],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0112, device='cuda:0', dtype=torch.float64)
tensor([-169.2230, -161.7882, -163.1789, -168.7319, -168.5272],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0111, device='cuda:0', dtype=torch.float64)
tensor([-168.4446, -161.5376, -163.3914, -168.3453, -167.9661],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0103, device='cuda:0', dtype=torch.float64)
tensor([-167.3198, -161.2615, -163.5187, -167.6578, -167.2443],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0103, device='cuda:0', dtype=torch.float64)
tensor([-166.0470, -161.0061, -163.5552, -166.7669, -166.5401],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0107, device='cuda:0', dtype=torch.float64)
tensor([-164.9466, -160.8724, -163.6097, -165.9763, -165.9438],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0113, device='cuda:0', dtype=torch.float64)
tensor([-164.2444, -160.8880, -163.6902, -165.4826, -165.5938],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0111, device='cuda:0', dtype=torch.float64)
tensor([-163.5861, -161.0050, -163.4439, -164.7958, -165.4310],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0106, device='cuda:0', dtype=torch.float64)
tensor([-163.2667, -161.1575, -163.1778, -164.3568, -165.4690],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0104, device='cuda:0', dtype=torch.float64)
tensor([-163.1115, -161.2821, -163.1344, -164.1920, -165.4863],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0099, device='cuda:0', dtype=torch.float64)
tensor([-162.9884, -161.3498, -163.2448, -164.1534, -165.4263],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0111, device='cuda:0', dtype=torch.float64)
tensor([-163.5468, -161.4637, -163.2624, -164.6279, -165.6878],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0119, device='cuda:0', dtype=torch.float64)
tensor([-164.5003, -161.6355, -163.0896, -165.2968, -166.2464],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0112, device='cuda:0', dtype=torch.float64)
tensor([-165.2470, -161.7121, -162.7771, -165.7465, -166.8008],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0115, device='cuda:0', dtype=torch.float64)
tensor([-166.4779, -161.9093, -163.0216, -166.8535, -167.4217],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0090, device='cuda:0', dtype=torch.float64)
tensor([-167.5774, -162.1217, -163.1330, -167.7566, -168.0729],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0118, device='cuda:0', dtype=torch.float64)
tensor([-168.0308, -162.1862, -162.8094, -167.9422, -168.5185],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0120, device='cuda:0', dtype=torch.float64)
tensor([-167.6825, -162.2307, -161.8178, -167.1672, -168.8168],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0108, device='cuda:0', dtype=torch.float64)
tensor([-166.8774, -162.0417, -161.4384, -166.4045, -168.4638],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0111, device='cuda:0', dtype=torch.float64)
tensor([-165.6281, -161.5825, -161.4331, -165.5277, -167.6274],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0108, device='cuda:0', dtype=torch.float64)
tensor([-164.5761, -161.2077, -161.9059, -165.0467, -166.7345],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0099, device='cuda:0', dtype=torch.float64)
tensor([-163.6898, -160.9172, -162.4969, -164.7188, -165.9348],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0110, device='cuda:0', dtype=torch.float64)
tensor([-163.3772, -160.8327, -162.8564, -164.6721, -165.5435],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0104, device='cuda:0', dtype=torch.float64)
tensor([-163.0543, -160.7400, -162.7991, -164.4081, -165.3010],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0093, device='cuda:0', dtype=torch.float64)
tensor([-162.9505, -160.7187, -162.8164, -164.3300, -165.1239],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0109, device='cuda:0', dtype=torch.float64)
tensor([-163.1760, -160.7700, -162.7391, -164.4552, -165.1298],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0119, device='cuda:0', dtype=torch.float64)
tensor([-163.1684, -160.7625, -162.5014, -164.2982, -165.1106],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0099, device='cuda:0', dtype=torch.float64)
tensor([-163.4236, -160.8162, -162.4573, -164.4691, -165.1593],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0113, device='cuda:0', dtype=torch.float64)
tensor([-163.8607, -160.9089, -162.6375, -164.9087, -165.1787],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0103, device='cuda:0', dtype=torch.float64)
tensor([-164.4540, -161.0015, -162.8627, -165.4922, -165.2676],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0113, device='cuda:0', dtype=torch.float64)
tensor([-165.1966, -161.2060, -162.5890, -165.8959, -165.7281],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0102, device='cuda:0', dtype=torch.float64)
tensor([-165.6893, -161.4147, -162.1611, -166.0159, -166.1606],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0105, device='cuda:0', dtype=torch.float64)
tensor([-165.9604, -161.6620, -161.7150, -165.9372, -166.5034],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0112, device='cuda:0', dtype=torch.float64)
tensor([-165.9654, -161.7114, -161.4965, -165.7967, -166.4920],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0120, device='cuda:0', dtype=torch.float64)
tensor([-166.0498, -161.6737, -161.7569, -165.9697, -166.2896],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0113, device='cuda:0', dtype=torch.float64)
tensor([-165.9291, -161.6225, -161.9611, -165.9461, -166.0124],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0110, device='cuda:0', dtype=torch.float64)
tensor([-165.7232, -161.4186, -161.9217, -165.7336, -165.7815],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0098, device='cuda:0', dtype=torch.float64)
tensor([-164.9806, -161.0764, -161.7905, -165.0782, -165.3102],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0103, device='cuda:0', dtype=torch.float64)
tensor([-164.5356, -160.8516, -161.7838, -164.7176, -165.0139],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0112, device='cuda:0', dtype=torch.float64)
tensor([-164.3834, -160.5973, -161.8649, -164.6557, -164.8548],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0110, device='cuda:0', dtype=torch.float64)
tensor([-163.9173, -160.3572, -161.2285, -163.9388, -164.9177],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0099, device='cuda:0', dtype=torch.float64)
tensor([-163.4323, -160.0875, -160.8801, -163.3633, -164.8119],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0114, device='cuda:0', dtype=torch.float64)
tensor([-163.0939, -159.8928, -160.4277, -162.8468, -164.8444],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0106, device='cuda:0', dtype=torch.float64)
tensor([-163.3486, -159.7963, -160.4843, -163.0737, -164.9380],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0100, device='cuda:0', dtype=torch.float64)
tensor([-163.2265, -159.6293, -160.8064, -163.1545, -164.7024],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0103, device='cuda:0', dtype=torch.float64)
tensor([-163.0444, -159.4470, -161.1602, -163.2388, -164.4348],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0114, device='cuda:0', dtype=torch.float64)
tensor([-163.0402, -159.4124, -161.2582, -163.2905, -164.4157],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0105, device='cuda:0', dtype=torch.float64)
tensor([-163.2356, -159.4155, -161.3908, -163.5114, -164.4839],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0117, device='cuda:0', dtype=torch.float64)
tensor([-163.4154, -159.3856, -161.4669, -163.7215, -164.5415],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0105, device='cuda:0', dtype=torch.float64)
tensor([-163.7646, -159.3492, -161.8420, -164.2458, -164.5367],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0100, device='cuda:0', dtype=torch.float64)
tensor([-164.0447, -159.3762, -162.2029, -164.6948, -164.5000],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0109, device='cuda:0', dtype=torch.float64)
tensor([-164.5889, -159.4670, -162.1312, -165.0878, -164.8082],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0120, device='cuda:0', dtype=torch.float64)
tensor([-164.8711, -159.6942, -161.2907, -164.7908, -165.3171],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0128, device='cuda:0', dtype=torch.float64)
tensor([-164.4822, -159.8570, -160.5450, -164.0586, -165.4710],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0124, device='cuda:0', dtype=torch.float64)
tensor([-163.8921, -160.1470, -159.9995, -163.2906, -165.4828],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0092, device='cuda:0', dtype=torch.float64)
tensor([-163.4226, -160.3485, -159.7016, -162.7676, -165.4436],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0105, device='cuda:0', dtype=torch.float64)
tensor([-162.8773, -160.4291, -159.6794, -162.3506, -165.2549],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0101, device='cuda:0', dtype=torch.float64)
tensor([-162.3402, -160.4594, -160.1476, -162.1896, -164.8439],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0106, device='cuda:0', dtype=torch.float64)
tensor([-162.0694, -160.3663, -160.9191, -162.4306, -164.3687],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0106, device='cuda:0', dtype=torch.float64)
tensor([-162.0544, -160.2134, -162.0406, -163.0884, -163.8544],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0114, device='cuda:0', dtype=torch.float64)
tensor([-162.2545, -160.1098, -162.9223, -163.7754, -163.5251],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0096, device='cuda:0', dtype=torch.float64)
tensor([-162.8132, -160.1031, -163.6272, -164.6420, -163.4940],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0115, device='cuda:0', dtype=torch.float64)
tensor([-163.6530, -160.1191, -163.5430, -165.2784, -163.9380],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0101, device='cuda:0', dtype=torch.float64)
tensor([-164.3358, -160.0765, -162.9260, -165.5004, -164.5490],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0115, device='cuda:0', dtype=torch.float64)
tensor([-164.7567, -160.0097, -162.0409, -165.3740, -165.1875],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0117, device='cuda:0', dtype=torch.float64)
tensor([-164.4818, -159.8754, -160.9912, -164.6396, -165.5445],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0100, device='cuda:0', dtype=torch.float64)
tensor([-164.0285, -159.7584, -159.8829, -163.7290, -165.8679],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0124, device='cuda:0', dtype=torch.float64)
tensor([-162.7867, -159.2996, -159.4478, -162.6227, -165.3853],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0117, device='cuda:0', dtype=torch.float64)
tensor([-161.8221, -158.8659, -159.8834, -162.1866, -164.6835],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0119, device='cuda:0', dtype=torch.float64)
tensor([-161.1930, -158.4803, -161.1489, -162.4707, -163.8165],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0110, device='cuda:0', dtype=torch.float64)
tensor([-161.2584, -158.3767, -162.5025, -163.3258, -163.2936],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0113, device='cuda:0', dtype=torch.float64)
tensor([-161.3100, -158.3507, -163.2988, -163.8703, -162.9732],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0109, device='cuda:0', dtype=torch.float64)
tensor([-161.9759, -158.5731, -163.6876, -164.6000, -163.0423],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0109, device='cuda:0', dtype=torch.float64)
tensor([-162.6519, -158.8387, -163.5115, -164.9918, -163.3148],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0127, device='cuda:0', dtype=torch.float64)
tensor([-163.9604, -159.2420, -162.7304, -165.5059, -164.1350],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0111, device='cuda:0', dtype=torch.float64)
tensor([-165.1689, -159.7915, -161.5079, -165.7052, -165.2555],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0103, device='cuda:0', dtype=torch.float64)
tensor([-165.6940, -160.2204, -160.8631, -165.7344, -165.8229],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0121, device='cuda:0', dtype=torch.float64)
tensor([-165.5146, -160.4312, -160.0937, -165.1878, -166.0667],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0098, device='cuda:0', dtype=torch.float64)
tensor([-165.0475, -160.4626, -159.7484, -164.6736, -165.9269],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0133, device='cuda:0', dtype=torch.float64)
tensor([-164.2751, -160.3310, -159.5409, -164.0009, -165.5233],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0125, device='cuda:0', dtype=torch.float64)
tensor([-163.5587, -160.0510, -159.7192, -163.5659, -164.9498],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0110, device='cuda:0', dtype=torch.float64)
tensor([-162.7833, -159.5897, -160.0500, -163.1970, -164.2321],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0110, device='cuda:0', dtype=torch.float64)
tensor([-162.2862, -159.1758, -160.5135, -163.1042, -163.6305],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0109, device='cuda:0', dtype=torch.float64)
tensor([-161.5222, -158.7009, -161.0925, -162.8653, -162.8977],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0098, device='cuda:0', dtype=torch.float64)
tensor([-160.6270, -158.2715, -161.3811, -162.3537, -162.3273],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0101, device='cuda:0', dtype=torch.float64)
tensor([-160.4269, -157.9171, -162.0126, -162.6133, -161.9125],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0110, device='cuda:0', dtype=torch.float64)
tensor([-160.4143, -157.6813, -161.9346, -162.5834, -161.8966],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0114, device='cuda:0', dtype=torch.float64)
tensor([-160.3524, -157.3986, -161.6142, -162.3884, -161.9215],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0115, device='cuda:0', dtype=torch.float64)
tensor([-160.7811, -157.2145, -161.3100, -162.5762, -162.1488],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0110, device='cuda:0', dtype=torch.float64)
tensor([-160.9443, -157.1406, -160.7018, -162.3739, -162.3797],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0109, device='cuda:0', dtype=torch.float64)
tensor([-161.1421, -157.1038, -160.2324, -162.2869, -162.5975],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0116, device='cuda:0', dtype=torch.float64)
tensor([-161.5627, -157.0688, -160.1289, -162.5754, -162.7801],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0115, device='cuda:0', dtype=torch.float64)
tensor([-161.8577, -157.1573, -159.6562, -162.5185, -163.0928],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0113, device='cuda:0', dtype=torch.float64)
tensor([-161.9915, -157.1787, -159.7508, -162.6618, -163.0816],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0115, device='cuda:0', dtype=torch.float64)
tensor([-162.4449, -157.3651, -160.0718, -163.1387, -163.1566],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0116, device='cuda:0', dtype=torch.float64)
tensor([-163.0153, -157.6629, -160.3801, -163.6873, -163.3098],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0097, device='cuda:0', dtype=torch.float64)
tensor([-163.3982, -158.0100, -160.7122, -164.1043, -163.3894],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0100, device='cuda:0', dtype=torch.float64)
tensor([-163.2689, -158.2054, -161.0591, -164.1591, -163.1530],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0098, device='cuda:0', dtype=torch.float64)
tensor([-163.2378, -158.4314, -161.3702, -164.2545, -163.0159],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0104, device='cuda:0', dtype=torch.float64)
tensor([-162.9711, -158.7544, -161.2049, -163.8837, -163.0585],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0104, device='cuda:0', dtype=torch.float64)
tensor([-162.7895, -159.0799, -160.6967, -163.3856, -163.2876],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0122, device='cuda:0', dtype=torch.float64)
tensor([-162.6519, -159.3830, -159.7247, -162.6901, -163.7743],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0113, device='cuda:0', dtype=torch.float64)
tensor([-162.4541, -159.6492, -159.1591, -162.1534, -164.0559],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0113, device='cuda:0', dtype=torch.float64)
tensor([-162.5728, -159.8291, -158.5542, -161.8894, -164.4259],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0112, device='cuda:0', dtype=torch.float64)
tensor([-162.6147, -159.7784, -158.5074, -161.9239, -164.4217],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0116, device='cuda:0', dtype=torch.float64)
tensor([-162.4525, -159.5174, -158.8387, -161.9868, -164.1010],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0127, device='cuda:0', dtype=torch.float64)
tensor([-162.3138, -159.1042, -159.7198, -162.4111, -163.4968],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0102, device='cuda:0', dtype=torch.float64)
tensor([-162.9200, -158.8216, -160.7236, -163.4854, -163.1930],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0113, device='cuda:0', dtype=torch.float64)
tensor([-163.5481, -158.5082, -161.9722, -164.7520, -162.8833],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0108, device='cuda:0', dtype=torch.float64)
tensor([-164.2827, -158.3441, -163.0030, -165.9792, -162.7993],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0121, device='cuda:0', dtype=torch.float64)
tensor([-163.9445, -157.9525, -162.8920, -165.7413, -162.6071],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0129, device='cuda:0', dtype=torch.float64)
tensor([-163.3395, -157.4561, -162.0508, -164.8732, -162.4739],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0127, device='cuda:0', dtype=torch.float64)
tensor([-162.5392, -157.0608, -160.1071, -163.1879, -162.6991],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0114, device='cuda:0', dtype=torch.float64)
tensor([-161.8723, -156.9256, -158.0513, -161.5142, -163.1655],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0118, device='cuda:0', dtype=torch.float64)
tensor([-161.3756, -156.9429, -156.7066, -160.3503, -163.5305],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0119, device='cuda:0', dtype=torch.float64)
tensor([-161.2576, -156.9622, -156.4777, -160.1076, -163.5794],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0147, device='cuda:0', dtype=torch.float64)
tensor([-161.6330, -156.9409, -157.5762, -160.9836, -163.2373],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0125, device='cuda:0', dtype=torch.float64)
tensor([-162.4013, -157.1771, -159.1205, -162.3866, -162.9806],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0114, device='cuda:0', dtype=torch.float64)
tensor([-163.4559, -157.7348, -160.6627, -163.9666, -162.9680],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0105, device='cuda:0', dtype=torch.float64)
tensor([-164.5012, -158.3458, -161.3463, -165.0404, -163.2882],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0099, device='cuda:0', dtype=torch.float64)
tensor([-165.0424, -158.8550, -161.5233, -165.4609, -163.5667],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0129, device='cuda:0', dtype=torch.float64)
tensor([-164.7532, -159.1445, -160.8328, -164.8132, -163.7545],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0136, device='cuda:0', dtype=torch.float64)
tensor([-163.7240, -159.3166, -159.8597, -163.4777, -163.7401],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0101, device='cuda:0', dtype=torch.float64)
tensor([-162.4005, -159.4830, -159.0528, -161.9929, -163.6138],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0111, device='cuda:0', dtype=torch.float64)
tensor([-161.5514, -159.7359, -158.6166, -161.0341, -163.6277],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0132, device='cuda:0', dtype=torch.float64)
tensor([-161.0236, -159.7311, -158.6469, -160.6278, -163.4654],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0142, device='cuda:0', dtype=torch.float64)
tensor([-161.1208, -159.5113, -159.2281, -161.0693, -163.1314],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0110, device='cuda:0', dtype=torch.float64)
tensor([-161.3526, -159.2182, -160.1912, -161.8452, -162.6997],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0110, device='cuda:0', dtype=torch.float64)
tensor([-162.2451, -159.1077, -161.2554, -163.1713, -162.5387],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0120, device='cuda:0', dtype=torch.float64)
tensor([-163.3068, -159.1524, -162.0409, -164.4712, -162.6353],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0116, device='cuda:0', dtype=torch.float64)
tensor([-164.5668, -159.2377, -162.2587, -165.6030, -163.1284],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0108, device='cuda:0', dtype=torch.float64)
tensor([-165.6582, -159.3370, -162.4924, -166.6026, -163.5947],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0125, device='cuda:0', dtype=torch.float64)
tensor([-165.7376, -159.2564, -162.2904, -166.6009, -163.7078],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0114, device='cuda:0', dtype=torch.float64)
tensor([-164.9210, -158.9079, -161.7533, -165.7739, -163.4335],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0104, device='cuda:0', dtype=torch.float64)
tensor([-163.8675, -158.4675, -160.9917, -164.6511, -163.1163],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0111, device='cuda:0', dtype=torch.float64)
tensor([-162.0724, -157.9561, -159.8354, -162.7561, -162.6629],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0118, device='cuda:0', dtype=torch.float64)
tensor([-160.1908, -157.4199, -159.1854, -161.0349, -162.0003],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0123, device='cuda:0', dtype=torch.float64)
tensor([-159.1410, -157.1330, -158.7339, -160.0106, -161.6977],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0115, device='cuda:0', dtype=torch.float64)
tensor([-158.7281, -157.0162, -158.4933, -159.5834, -161.5758],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0127, device='cuda:0', dtype=torch.float64)
tensor([-158.6265, -156.9410, -158.5172, -159.5187, -161.4460],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0118, device='cuda:0', dtype=torch.float64)
tensor([-158.8628, -156.8630, -159.0488, -160.0223, -161.2759],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0131, device='cuda:0', dtype=torch.float64)
tensor([-159.7821, -156.9647, -159.2294, -160.8594, -161.5971],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0112, device='cuda:0', dtype=torch.float64)
tensor([-161.0541, -157.1635, -159.3957, -161.9218, -162.1274],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0113, device='cuda:0', dtype=torch.float64)
tensor([-162.4718, -157.4326, -159.4820, -162.9999, -162.7928],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0114, device='cuda:0', dtype=torch.float64)
tensor([-163.7563, -157.7126, -159.7174, -164.0375, -163.4077],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0123, device='cuda:0', dtype=torch.float64)
tensor([-164.9241, -158.0161, -159.7607, -164.8502, -164.0502],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0124, device='cuda:0', dtype=torch.float64)
tensor([-165.1556, -158.2598, -159.2384, -164.6529, -164.4674],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0135, device='cuda:0', dtype=torch.float64)
tensor([-164.1112, -158.2140, -158.9569, -163.6817, -163.9871],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0106, device='cuda:0', dtype=torch.float64)
tensor([-163.0398, -158.0420, -159.0161, -162.8940, -163.3625],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0114, device='cuda:0', dtype=torch.float64)
tensor([-161.6856, -157.8640, -159.1556, -161.9303, -162.6120],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0110, device='cuda:0', dtype=torch.float64)
tensor([-160.4499, -157.7607, -159.1988, -160.9876, -162.0444],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0119, device='cuda:0', dtype=torch.float64)
tensor([-159.0620, -157.6419, -158.9922, -159.7746, -161.6184],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0108, device='cuda:0', dtype=torch.float64)
tensor([-158.3442, -157.5225, -158.9245, -159.1726, -161.3750],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0108, device='cuda:0', dtype=torch.float64)
tensor([-157.9689, -157.4536, -158.9190, -158.8833, -161.2626],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0128, device='cuda:0', dtype=torch.float64)
tensor([-158.8571, -157.5869, -158.9394, -159.6164, -161.5311],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0121, device='cuda:0', dtype=torch.float64)
tensor([-160.4363, -157.8277, -158.9380, -160.8633, -162.1457],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0105, device='cuda:0', dtype=torch.float64)
tensor([-162.0698, -158.0448, -159.1619, -162.2315, -162.7664],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0108, device='cuda:0', dtype=torch.float64)
tensor([-164.1932, -158.4663, -159.6466, -164.0610, -163.6527],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0115, device='cuda:0', dtype=torch.float64)
tensor([-166.3724, -158.8758, -160.4082, -166.0460, -164.5520],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0138, device='cuda:0', dtype=torch.float64)
tensor([-167.1325, -159.0451, -160.4095, -166.5882, -165.0756],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0144, device='cuda:0', dtype=torch.float64)
tensor([-166.3108, -158.9701, -159.9100, -165.7392, -164.8799],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0130, device='cuda:0', dtype=torch.float64)
tensor([-164.8079, -158.9636, -159.2235, -164.2666, -164.4352],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0106, device='cuda:0', dtype=torch.float64)
tensor([-163.1153, -158.9509, -158.7493, -162.7286, -163.8653],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0113, device='cuda:0', dtype=torch.float64)
tensor([-161.2827, -158.8992, -158.8229, -161.3422, -163.0340],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0105, device='cuda:0', dtype=torch.float64)
tensor([-159.9220, -158.9832, -158.9737, -160.2977, -162.5642],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0134, device='cuda:0', dtype=torch.float64)
tensor([-159.3114, -159.0301, -158.8507, -159.7156, -162.4670],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0131, device='cuda:0', dtype=torch.float64)
tensor([-159.3141, -158.8035, -158.6793, -159.6863, -162.4138],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0115, device='cuda:0', dtype=torch.float64)
tensor([-160.2080, -158.6566, -158.6042, -160.3922, -162.6132],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0130, device='cuda:0', dtype=torch.float64)
tensor([-161.4517, -158.5665, -158.6917, -161.4230, -162.9518],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0113, device='cuda:0', dtype=torch.float64)
tensor([-163.2240, -158.5824, -159.0349, -162.9473, -163.5097],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0102, device='cuda:0', dtype=torch.float64)
tensor([-164.4942, -158.5544, -159.3203, -164.0309, -163.9208],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0082, device='cuda:0', dtype=torch.float64)
tensor([-165.6549, -158.5318, -159.6237, -165.0284, -164.3173],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0110, device='cuda:0', dtype=torch.float64)
tensor([-166.5390, -158.4389, -160.1350, -165.9593, -164.4490],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0117, device='cuda:0', dtype=torch.float64)
tensor([-166.8581, -158.2787, -160.2484, -166.2833, -164.4605],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0127, device='cuda:0', dtype=torch.float64)
tensor([-166.0356, -157.7746, -159.9745, -165.6206, -163.9520],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0103, device='cuda:0', dtype=torch.float64)
tensor([-164.4039, -157.0725, -159.7306, -164.4112, -162.9236],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0129, device='cuda:0', dtype=torch.float64)
tensor([-162.6073, -156.3619, -159.7371, -163.2041, -161.7995],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0119, device='cuda:0', dtype=torch.float64)
tensor([-160.7798, -155.8189, -159.1788, -161.6276, -161.0340],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0125, device='cuda:0', dtype=torch.float64)
tensor([-159.2834, -155.5727, -158.9675, -160.4355, -160.3599],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0090, device='cuda:0', dtype=torch.float64)
tensor([-158.3449, -155.4423, -159.0416, -159.7910, -159.8850],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0129, device='cuda:0', dtype=torch.float64)
tensor([-157.6140, -155.5614, -158.7788, -159.0672, -159.6869],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0110, device='cuda:0', dtype=torch.float64)
tensor([-157.1808, -155.8558, -158.3628, -158.4606, -159.7354],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0103, device='cuda:0', dtype=torch.float64)
tensor([-157.3833, -156.1950, -158.3045, -158.5447, -159.9340],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0119, device='cuda:0', dtype=torch.float64)
tensor([-158.0531, -156.5533, -158.1804, -158.9711, -160.2968],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0124, device='cuda:0', dtype=torch.float64)
tensor([-158.6300, -156.7896, -158.2943, -159.4632, -160.5163],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0104, device='cuda:0', dtype=torch.float64)
tensor([-159.3268, -157.0482, -158.2737, -159.9766, -160.8640],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0125, device='cuda:0', dtype=torch.float64)
tensor([-160.6291, -157.2978, -158.4754, -161.0811, -161.4190],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0101, device='cuda:0', dtype=torch.float64)
tensor([-162.0725, -157.5747, -159.0051, -162.4515, -161.9565],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0128, device='cuda:0', dtype=torch.float64)
tensor([-163.2620, -157.8088, -159.3809, -163.5555, -162.4722],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0119, device='cuda:0', dtype=torch.float64)
tensor([-163.5928, -157.8537, -159.5021, -163.9023, -162.6004],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0119, device='cuda:0', dtype=torch.float64)
tensor([-163.5295, -157.8256, -159.3238, -163.8262, -162.6527],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0107, device='cuda:0', dtype=torch.float64)
tensor([-162.9160, -157.6806, -158.9382, -163.2355, -162.4815],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0106, device='cuda:0', dtype=torch.float64)
tensor([-161.9738, -157.4551, -158.7013, -162.4873, -162.1263],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0118, device='cuda:0', dtype=torch.float64)
tensor([-160.9863, -157.2620, -158.4848, -161.6906, -161.7257],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0099, device='cuda:0', dtype=torch.float64)
tensor([-160.0857, -157.1435, -158.2425, -160.9260, -161.4275],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0117, device='cuda:0', dtype=torch.float64)
tensor([-159.6476, -157.1766, -158.1489, -160.5674, -161.3195],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0106, device='cuda:0', dtype=torch.float64)
tensor([-159.5887, -157.2663, -158.2832, -160.5981, -161.2601],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0136, device='cuda:0', dtype=torch.float64)
tensor([-159.8198, -157.3276, -158.8500, -161.0744, -161.1745],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0120, device='cuda:0', dtype=torch.float64)
tensor([-159.9063, -157.3212, -159.2317, -161.3532, -161.1232],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0098, device='cuda:0', dtype=torch.float64)
tensor([-159.9835, -157.1812, -159.5440, -161.6246, -161.0892],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0118, device='cuda:0', dtype=torch.float64)
tensor([-160.1692, -157.1035, -159.3441, -161.6807, -161.2714],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0103, device='cuda:0', dtype=torch.float64)
tensor([-160.7491, -157.1018, -158.9494, -161.9239, -161.7249],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0140, device='cuda:0', dtype=torch.float64)
tensor([-161.1529, -157.2367, -157.9375, -161.6783, -162.4115],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0117, device='cuda:0', dtype=torch.float64)
tensor([-162.1494, -157.4478, -157.0312, -161.9240, -163.3620],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0106, device='cuda:0', dtype=torch.float64)
tensor([-162.7782, -157.4849, -156.5775, -162.1333, -163.9306],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0116, device='cuda:0', dtype=torch.float64)
tensor([-162.6155, -157.3598, -156.1740, -161.8031, -164.0499],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0122, device='cuda:0', dtype=torch.float64)
tensor([-161.8063, -156.9910, -156.2390, -161.2420, -163.5073],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0104, device='cuda:0', dtype=torch.float64)
tensor([-160.7173, -156.4765, -156.8176, -160.7369, -162.5388],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0105, device='cuda:0', dtype=torch.float64)
tensor([-159.9461, -156.1373, -157.6127, -160.5705, -161.7050],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0104, device='cuda:0', dtype=torch.float64)
tensor([-159.4685, -155.9862, -158.5686, -160.6822, -161.0062],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0107, device='cuda:0', dtype=torch.float64)
tensor([-159.2299, -155.9854, -159.0170, -160.6959, -160.6599],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0118, device='cuda:0', dtype=torch.float64)
tensor([-159.3051, -156.0306, -159.0592, -160.7474, -160.6150],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0125, device='cuda:0', dtype=torch.float64)
tensor([-159.5342, -156.0680, -158.6795, -160.7009, -160.7962],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0115, device='cuda:0', dtype=torch.float64)
tensor([-160.1618, -156.2223, -158.2273, -160.9160, -161.2306],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0105, device='cuda:0', dtype=torch.float64)
tensor([-160.9600, -156.3594, -157.9176, -161.3440, -161.6622],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0129, device='cuda:0', dtype=torch.float64)
tensor([-161.4060, -156.4423, -157.1617, -161.2771, -162.1667],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0095, device='cuda:0', dtype=torch.float64)
tensor([-161.6808, -156.5982, -156.3083, -161.0201, -162.6856],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0104, device='cuda:0', dtype=torch.float64)
tensor([-161.7608, -156.6048, -155.6627, -160.7608, -163.0002],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0112, device='cuda:0', dtype=torch.float64)
tensor([-161.4671, -156.5664, -155.1642, -160.3131, -163.0266],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0106, device='cuda:0', dtype=torch.float64)
tensor([-161.0389, -156.4586, -154.9399, -159.9258, -162.8326],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0107, device='cuda:0', dtype=torch.float64)
tensor([-160.6429, -156.2101, -155.2616, -159.8544, -162.3301],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0107, device='cuda:0', dtype=torch.float64)
tensor([-160.2776, -155.9291, -155.9062, -159.9636, -161.6702],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0113, device='cuda:0', dtype=torch.float64)
tensor([-159.7684, -155.5527, -156.9494, -160.1949, -160.7649],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0104, device='cuda:0', dtype=torch.float64)
tensor([-159.1689, -155.2257, -157.9927, -160.3688, -159.9048],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0108, device='cuda:0', dtype=torch.float64)
tensor([-158.6271, -155.0150, -158.7602, -160.4192, -159.2779],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0103, device='cuda:0', dtype=torch.float64)
tensor([-158.4939, -154.9321, -159.1838, -160.5599, -159.0233],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0127, device='cuda:0', dtype=torch.float64)
tensor([-158.5313, -154.8029, -158.9209, -160.4791, -159.0699],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0110, device='cuda:0', dtype=torch.float64)
tensor([-158.6495, -154.6978, -158.2757, -160.2422, -159.3074],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0106, device='cuda:0', dtype=torch.float64)
tensor([-158.9434, -154.7601, -157.4791, -160.0230, -159.7353],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0107, device='cuda:0', dtype=torch.float64)
tensor([-159.4799, -154.9265, -156.9286, -160.1087, -160.2241],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0099, device='cuda:0', dtype=torch.float64)
tensor([-160.0830, -155.1225, -156.3845, -160.2598, -160.7867],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0104, device='cuda:0', dtype=torch.float64)
tensor([-160.7434, -155.4383, -155.8566, -160.4442, -161.4435],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0115, device='cuda:0', dtype=torch.float64)
tensor([-161.4742, -155.8054, -155.2457, -160.6178, -162.2496],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0132, device='cuda:0', dtype=torch.float64)
tensor([-160.9645, -155.7989, -155.0450, -160.1426, -162.1183],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0102, device='cuda:0', dtype=torch.float64)
tensor([-160.4425, -155.6291, -155.1430, -159.8378, -161.7845],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0125, device='cuda:0', dtype=torch.float64)
tensor([-160.4390, -155.4832, -155.6783, -160.1622, -161.4714],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0112, device='cuda:0', dtype=torch.float64)
tensor([-160.4412, -155.2970, -156.5013, -160.6511, -161.0351],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0098, device='cuda:0', dtype=torch.float64)
tensor([-160.0658, -155.1417, -157.3045, -160.8479, -160.4612],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0117, device='cuda:0', dtype=torch.float64)
tensor([-159.6201, -155.0603, -157.6198, -160.7132, -160.1195],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0113, device='cuda:0', dtype=torch.float64)
tensor([-159.3763, -155.0415, -158.0537, -160.7873, -159.8972],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0103, device='cuda:0', dtype=torch.float64)
tensor([-159.1183, -154.9928, -158.0426, -160.6111, -159.8143],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0115, device='cuda:0', dtype=torch.float64)
tensor([-159.1851, -155.0647, -157.8284, -160.5296, -159.9538],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0119, device='cuda:0', dtype=torch.float64)
tensor([-158.8055, -155.0055, -157.2417, -159.9375, -160.0688],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0111, device='cuda:0', dtype=torch.float64)
tensor([-158.7523, -155.0088, -156.7735, -159.6501, -160.2689],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0118, device='cuda:0', dtype=torch.float64)
tensor([-158.7330, -155.1905, -156.1169, -159.2730, -160.6657],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0097, device='cuda:0', dtype=torch.float64)
tensor([-159.0737, -155.4363, -155.4836, -159.1787, -161.2716],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0127, device='cuda:0', dtype=torch.float64)
tensor([-159.1171, -155.4508, -155.3781, -159.1392, -161.3805],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0103, device='cuda:0', dtype=torch.float64)
tensor([-159.3593, -155.4508, -155.2844, -159.2718, -161.5479],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0132, device='cuda:0', dtype=torch.float64)
tensor([-159.5249, -155.3328, -155.4314, -159.4604, -161.5311],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0114, device='cuda:0', dtype=torch.float64)
tensor([-159.4454, -155.0683, -155.9048, -159.6545, -161.2064],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0123, device='cuda:0', dtype=torch.float64)
tensor([-159.5911, -154.9631, -156.7528, -160.1901, -160.8465],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0105, device='cuda:0', dtype=torch.float64)
tensor([-159.7943, -154.8817, -157.8574, -160.9329, -160.4155],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0098, device='cuda:0', dtype=torch.float64)
tensor([-160.0385, -154.8798, -158.6743, -161.5667, -160.1786],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0112, device='cuda:0', dtype=torch.float64)
tensor([-160.1857, -154.7707, -158.8691, -161.8192, -160.1090],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0111, device='cuda:0', dtype=torch.float64)
tensor([-159.9290, -154.5484, -158.4487, -161.4638, -160.1194],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0125, device='cuda:0', dtype=torch.float64)
tensor([-159.5310, -154.3148, -157.5224, -160.7323, -160.2587],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0105, device='cuda:0', dtype=torch.float64)
tensor([-159.2360, -154.1783, -156.4173, -159.9608, -160.5061],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0096, device='cuda:0', dtype=torch.float64)
tensor([-159.0247, -154.1848, -155.4556, -159.3044, -160.7878],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0112, device='cuda:0', dtype=torch.float64)
tensor([-158.8703, -154.2551, -154.8184, -158.8572, -161.0304],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0103, device='cuda:0', dtype=torch.float64)
tensor([-158.9650, -154.3787, -154.6178, -158.7936, -161.1760],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0108, device='cuda:0', dtype=torch.float64)
tensor([-158.7929, -154.4319, -154.6408, -158.6509, -161.0651],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0114, device='cuda:0', dtype=torch.float64)
tensor([-158.4874, -154.2595, -155.2952, -158.7736, -160.5131],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0120, device='cuda:0', dtype=torch.float64)
tensor([-157.8184, -154.0958, -155.8857, -158.5930, -159.8593],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0108, device='cuda:0', dtype=torch.float64)
tensor([-157.2504, -153.8743, -156.6900, -158.5983, -159.1575],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0108, device='cuda:0', dtype=torch.float64)
tensor([-157.0780, -153.8255, -157.3423, -158.8182, -158.7097],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0112, device='cuda:0', dtype=torch.float64)
tensor([-156.8760, -153.7991, -157.7967, -158.9239, -158.3188],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0117, device='cuda:0', dtype=torch.float64)
tensor([-157.1130, -153.9002, -158.0208, -159.2305, -158.1463],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0125, device='cuda:0', dtype=torch.float64)
tensor([-157.7970, -154.0515, -158.3826, -159.9539, -158.1442],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0131, device='cuda:0', dtype=torch.float64)
tensor([-158.5880, -154.1774, -157.8185, -160.2568, -158.5464],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0109, device='cuda:0', dtype=torch.float64)
tensor([-159.3330, -154.2739, -157.3402, -160.5790, -158.9585],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0112, device='cuda:0', dtype=torch.float64)
tensor([-160.2912, -154.4228, -156.7634, -160.9884, -159.5775],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0108, device='cuda:0', dtype=torch.float64)
tensor([-160.5512, -154.5026, -155.8429, -160.7137, -160.0535],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0102, device='cuda:0', dtype=torch.float64)
tensor([-160.3147, -154.4243, -155.0237, -160.1340, -160.2163],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0117, device='cuda:0', dtype=torch.float64)
tensor([-159.2957, -154.1783, -154.2278, -159.0302, -159.9861],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0130, device='cuda:0', dtype=torch.float64)
tensor([-158.1803, -153.7538, -154.2335, -158.2827, -159.3129],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0110, device='cuda:0', dtype=torch.float64)
tensor([-157.4036, -153.3821, -154.7293, -158.0382, -158.6168],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0139, device='cuda:0', dtype=torch.float64)
tensor([-156.5650, -153.0115, -155.6035, -157.9010, -157.8089],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0125, device='cuda:0', dtype=torch.float64)
tensor([-156.1399, -152.8286, -155.8786, -157.7683, -157.4905],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0122, device='cuda:0', dtype=torch.float64)
tensor([-155.8754, -152.7940, -155.5608, -157.4223, -157.4774],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0115, device='cuda:0', dtype=torch.float64)
tensor([-156.0226, -152.7220, -155.6911, -157.6325, -157.4500],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0125, device='cuda:0', dtype=torch.float64)
tensor([-156.7663, -152.8196, -155.3110, -157.9995, -157.8926],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0122, device='cuda:0', dtype=torch.float64)
tensor([-156.9308, -152.7942, -154.8879, -157.9265, -158.1172],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0122, device='cuda:0', dtype=torch.float64)
tensor([-157.0208, -152.8132, -154.7038, -157.9081, -158.2728],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0119, device='cuda:0', dtype=torch.float64)
tensor([-156.7808, -152.6759, -155.0406, -157.9226, -158.0608],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0114, device='cuda:0', dtype=torch.float64)
tensor([-156.5263, -152.6467, -155.4643, -157.9605, -157.8033],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0106, device='cuda:0', dtype=torch.float64)
tensor([-155.9877, -152.7197, -155.8155, -157.7048, -157.4617],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0132, device='cuda:0', dtype=torch.float64)
tensor([-156.2453, -153.0423, -156.0447, -157.9465, -157.5199],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0129, device='cuda:0', dtype=torch.float64)
tensor([-156.0112, -153.2604, -155.8511, -157.6183, -157.5562],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0092, device='cuda:0', dtype=torch.float64)
tensor([-155.8985, -153.4286, -156.0396, -157.5874, -157.4808],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0116, device='cuda:0', dtype=torch.float64)
tensor([-156.3920, -153.7151, -156.1201, -157.9488, -157.7078],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0110, device='cuda:0', dtype=torch.float64)
tensor([-157.5845, -154.1089, -155.9977, -158.7404, -158.3368],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0126, device='cuda:0', dtype=torch.float64)
tensor([-158.7920, -154.4276, -156.1585, -159.6931, -158.8761],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0101, device='cuda:0', dtype=torch.float64)
tensor([-159.7850, -154.5926, -156.3399, -160.4975, -159.2584],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0115, device='cuda:0', dtype=torch.float64)
tensor([-160.2370, -154.5616, -156.3159, -160.8111, -159.5161],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0120, device='cuda:0', dtype=torch.float64)
tensor([-159.9423, -154.4010, -155.5690, -160.2152, -159.7107],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0122, device='cuda:0', dtype=torch.float64)
tensor([-158.9175, -153.9509, -154.9035, -159.1643, -159.4732],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0116, device='cuda:0', dtype=torch.float64)
tensor([-157.5334, -153.5064, -154.1364, -157.8215, -159.1336],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0131, device='cuda:0', dtype=torch.float64)
tensor([-156.4905, -153.0258, -153.4300, -156.7508, -158.8938],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0105, device='cuda:0', dtype=torch.float64)
tensor([-155.5514, -152.5890, -152.9240, -155.8461, -158.6664],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0118, device='cuda:0', dtype=torch.float64)
tensor([-155.0161, -152.2111, -152.8355, -155.4562, -158.4473],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0119, device='cuda:0', dtype=torch.float64)
tensor([-154.8445, -151.9039, -153.1262, -155.5256, -158.2402],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0132, device='cuda:0', dtype=torch.float64)
tensor([-155.0248, -151.8938, -153.3612, -155.7993, -158.2950],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0146, device='cuda:0', dtype=torch.float64)
tensor([-155.9106, -151.9258, -154.3517, -156.9789, -158.2947],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0125, device='cuda:0', dtype=torch.float64)
tensor([-156.6650, -152.0497, -155.5161, -158.1488, -158.2076],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0118, device='cuda:0', dtype=torch.float64)
tensor([-157.4339, -152.2821, -156.3486, -159.1409, -158.3346],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0086, device='cuda:0', dtype=torch.float64)
tensor([-158.0173, -152.5834, -156.9273, -159.8535, -158.4548],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0135, device='cuda:0', dtype=torch.float64)
tensor([-157.3676, -152.6791, -156.7409, -159.2348, -158.2339],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0105, device='cuda:0', dtype=torch.float64)
tensor([-156.6930, -152.6835, -156.4924, -158.5712, -157.9999],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0115, device='cuda:0', dtype=torch.float64)
tensor([-156.2813, -152.8268, -155.7521, -157.8001, -158.0868],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0120, device='cuda:0', dtype=torch.float64)
tensor([-156.3944, -153.0765, -154.9312, -157.3960, -158.4484],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0106, device='cuda:0', dtype=torch.float64)
tensor([-156.3813, -153.2806, -154.6042, -157.1572, -158.5560],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0112, device='cuda:0', dtype=torch.float64)
tensor([-156.2128, -153.4751, -154.2755, -156.8153, -158.6380],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0100, device='cuda:0', dtype=torch.float64)
tensor([-156.3634, -153.6794, -154.1639, -156.8383, -158.7553],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0123, device='cuda:0', dtype=torch.float64)
tensor([-157.0923, -154.0798, -153.8839, -157.2276, -159.2691],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0114, device='cuda:0', dtype=torch.float64)
tensor([-157.5941, -154.3105, -154.0391, -157.6749, -159.4248],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0117, device='cuda:0', dtype=torch.float64)
tensor([-158.1962, -154.4031, -154.6204, -158.4227, -159.3968],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0127, device='cuda:0', dtype=torch.float64)
tensor([-158.2015, -154.0785, -155.6269, -158.9843, -158.8027],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0112, device='cuda:0', dtype=torch.float64)
tensor([-158.1253, -153.8584, -156.1572, -159.2396, -158.4187],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0099, device='cuda:0', dtype=torch.float64)
tensor([-158.1228, -153.8083, -156.4433, -159.3910, -158.1963],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0103, device='cuda:0', dtype=torch.float64)
tensor([-158.0133, -153.7399, -156.2324, -159.1977, -158.1130],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0129, device='cuda:0', dtype=torch.float64)
tensor([-157.5935, -153.5832, -155.4435, -158.4936, -158.1193],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0126, device='cuda:0', dtype=torch.float64)
tensor([-157.5330, -153.4193, -154.4778, -157.9866, -158.3577],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0109, device='cuda:0', dtype=torch.float64)
tensor([-157.2798, -153.3031, -153.5542, -157.3527, -158.5885],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0111, device='cuda:0', dtype=torch.float64)
tensor([-157.0986, -153.2123, -152.7829, -156.8195, -158.7952],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0131, device='cuda:0', dtype=torch.float64)
tensor([-157.3033, -153.1417, -152.2249, -156.6911, -159.0838],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0122, device='cuda:0', dtype=torch.float64)
tensor([-157.7613, -153.1354, -152.2038, -157.0074, -159.2388],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0121, device='cuda:0', dtype=torch.float64)
tensor([-158.5565, -153.1585, -152.7788, -157.8487, -159.2604],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0111, device='cuda:0', dtype=torch.float64)
tensor([-159.0953, -153.1449, -153.7090, -158.6945, -159.0274],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0124, device='cuda:0', dtype=torch.float64)
tensor([-159.2990, -153.1090, -154.6133, -159.3146, -158.6662],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0120, device='cuda:0', dtype=torch.float64)
tensor([-158.9650, -153.0064, -155.4583, -159.5248, -158.0615],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0110, device='cuda:0', dtype=torch.float64)
tensor([-158.7494, -152.9985, -155.8644, -159.5679, -157.7180],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0141, device='cuda:0', dtype=torch.float64)
tensor([-158.2543, -153.1242, -155.5181, -159.0081, -157.5621],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0114, device='cuda:0', dtype=torch.float64)
tensor([-157.4035, -153.2001, -154.9918, -158.0815, -157.3717],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0105, device='cuda:0', dtype=torch.float64)
tensor([-156.6286, -153.3216, -154.1945, -157.0823, -157.4333],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0096, device='cuda:0', dtype=torch.float64)
tensor([-156.0282, -153.4909, -153.5651, -156.2833, -157.5502],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0120, device='cuda:0', dtype=torch.float64)
tensor([-155.7010, -153.5748, -153.2834, -155.8779, -157.5805],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0121, device='cuda:0', dtype=torch.float64)
tensor([-155.8768, -153.5946, -153.2691, -156.0209, -157.6112],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0115, device='cuda:0', dtype=torch.float64)
tensor([-156.5738, -153.5053, -153.5899, -156.7462, -157.6230],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0110, device='cuda:0', dtype=torch.float64)
tensor([-157.6486, -153.3893, -154.0690, -157.8158, -157.7436],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0119, device='cuda:0', dtype=torch.float64)
tensor([-158.6709, -153.2455, -154.4452, -158.7878, -157.9182],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0113, device='cuda:0', dtype=torch.float64)
tensor([-159.6374, -153.1249, -154.8023, -159.6950, -158.1770],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0112, device='cuda:0', dtype=torch.float64)
tensor([-160.3116, -153.0240, -154.5677, -160.0564, -158.5717],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0117, device='cuda:0', dtype=torch.float64)
tensor([-160.5966, -152.8562, -154.1573, -160.0513, -158.8330],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0145, device='cuda:0', dtype=torch.float64)
tensor([-159.8925, -152.4674, -153.8116, -159.3920, -158.4807],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0126, device='cuda:0', dtype=torch.float64)
tensor([-158.8720, -151.9674, -153.6887, -158.6359, -157.8619],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0128, device='cuda:0', dtype=torch.float64)
tensor([-158.0289, -151.5114, -153.2249, -157.8221, -157.5335],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0121, device='cuda:0', dtype=torch.float64)
tensor([-156.5566, -151.0027, -153.0757, -156.7083, -156.7513],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0114, device='cuda:0', dtype=torch.float64)
tensor([-155.7061, -150.6749, -153.0150, -156.0651, -156.3153],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0124, device='cuda:0', dtype=torch.float64)
tensor([-154.7497, -150.3896, -152.8428, -155.2789, -155.9341],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0102, device='cuda:0', dtype=torch.float64)
tensor([-154.0491, -150.2206, -152.6681, -154.6673, -155.6849],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0122, device='cuda:0', dtype=torch.float64)
tensor([-154.1437, -150.2988, -152.8559, -154.8563, -155.6707],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0121, device='cuda:0', dtype=torch.float64)
tensor([-154.5231, -150.5328, -152.9714, -155.1960, -155.7851],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0105, device='cuda:0', dtype=torch.float64)
tensor([-155.1541, -150.8910, -153.2842, -155.8018, -155.9474],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0117, device='cuda:0', dtype=torch.float64)
tensor([-155.2302, -151.2293, -153.6851, -156.0420, -155.8884],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0111, device='cuda:0', dtype=torch.float64)
tensor([-155.1979, -151.5450, -153.8375, -156.0549, -155.8987],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0120, device='cuda:0', dtype=torch.float64)
tensor([-155.1972, -152.0600, -153.4783, -155.8185, -156.2120],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0126, device='cuda:0', dtype=torch.float64)
tensor([-155.3673, -152.5240, -152.8868, -155.5861, -156.7232],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0108, device='cuda:0', dtype=torch.float64)
tensor([-156.0256, -153.1485, -152.2568, -155.6981, -157.5104],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0125, device='cuda:0', dtype=torch.float64)
tensor([-156.6059, -153.4132, -152.5894, -156.2712, -157.6707],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0120, device='cuda:0', dtype=torch.float64)
tensor([-156.8938, -153.5012, -152.9202, -156.6421, -157.6252],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0113, device='cuda:0', dtype=torch.float64)
tensor([-157.4119, -153.6454, -153.0712, -157.0938, -157.7789],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0118, device='cuda:0', dtype=torch.float64)
tensor([-157.9416, -153.5939, -153.7327, -157.8308, -157.6553],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0097, device='cuda:0', dtype=torch.float64)
tensor([-157.9524, -153.4141, -154.2527, -158.1371, -157.3650],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0124, device='cuda:0', dtype=torch.float64)
tensor([-157.4892, -153.1883, -154.7259, -158.0996, -156.9092],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0119, device='cuda:0', dtype=torch.float64)
tensor([-156.8756, -152.9231, -155.0901, -157.8819, -156.4353],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0111, device='cuda:0', dtype=torch.float64)
tensor([-156.2161, -152.6812, -155.4877, -157.6508, -155.9745],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0112, device='cuda:0', dtype=torch.float64)
tensor([-155.8405, -152.4238, -155.5430, -157.4660, -155.7711],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0113, device='cuda:0', dtype=torch.float64)
tensor([-155.9789, -152.2014, -155.3809, -157.5641, -155.8584],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0121, device='cuda:0', dtype=torch.float64)
tensor([-155.8722, -151.8852, -154.5506, -157.1297, -156.0913],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0116, device='cuda:0', dtype=torch.float64)
tensor([-155.9216, -151.6798, -153.4383, -156.6610, -156.5419],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0122, device='cuda:0', dtype=torch.float64)
tensor([-156.3033, -151.6219, -152.3616, -156.4515, -157.2011],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0122, device='cuda:0', dtype=torch.float64)
tensor([-156.9431, -151.7482, -151.4053, -156.4667, -157.9973],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0120, device='cuda:0', dtype=torch.float64)
tensor([-157.4917, -151.9335, -151.0159, -156.6992, -158.4829],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0106, device='cuda:0', dtype=torch.float64)
tensor([-157.3903, -152.0121, -150.9212, -156.6426, -158.4891],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0149, device='cuda:0', dtype=torch.float64)
tensor([-156.3254, -151.7450, -151.1778, -156.1361, -157.7383],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0116, device='cuda:0', dtype=torch.float64)
tensor([-155.2870, -151.5457, -151.4421, -155.6099, -157.0337],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0123, device='cuda:0', dtype=torch.float64)
tensor([-153.8528, -151.3111, -151.9252, -154.8981, -156.1045],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0112, device='cuda:0', dtype=torch.float64)
tensor([-152.7045, -151.0904, -152.4161, -154.3661, -155.3592],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0109, device='cuda:0', dtype=torch.float64)
tensor([-152.0436, -150.9969, -153.2178, -154.3244, -154.7145],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0142, device='cuda:0', dtype=torch.float64)
tensor([-152.0001, -150.9496, -153.2071, -154.3463, -154.5834],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0107, device='cuda:0', dtype=torch.float64)
tensor([-152.5398, -150.9891, -153.6047, -155.0114, -154.4932],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0127, device='cuda:0', dtype=torch.float64)
tensor([-153.1344, -151.0374, -153.5798, -155.4841, -154.6253],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0124, device='cuda:0', dtype=torch.float64)
tensor([-153.3279, -151.1906, -153.2537, -155.4581, -154.7576],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0123, device='cuda:0', dtype=torch.float64)
tensor([-153.4183, -151.1649, -152.6569, -155.2362, -154.9282],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0121, device='cuda:0', dtype=torch.float64)
tensor([-153.9596, -151.1791, -152.3671, -155.4703, -155.1513],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0122, device='cuda:0', dtype=torch.float64)
tensor([-154.6445, -151.1605, -151.9935, -155.7614, -155.4563],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0105, device='cuda:0', dtype=torch.float64)
tensor([-155.6559, -151.2183, -151.7343, -156.3090, -155.8851],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0138, device='cuda:0', dtype=torch.float64)
tensor([-155.6144, -151.0888, -151.3220, -156.0312, -155.9002],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0111, device='cuda:0', dtype=torch.float64)
tensor([-155.1460, -150.7754, -151.1070, -155.5545, -155.6231],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0129, device='cuda:0', dtype=torch.float64)
tensor([-154.2998, -150.3458, -151.3602, -155.0291, -154.9462],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0120, device='cuda:0', dtype=torch.float64)
tensor([-153.3323, -149.9708, -151.4969, -154.3517, -154.3212],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0140, device='cuda:0', dtype=torch.float64)
tensor([-152.6544, -149.7155, -151.7231, -153.9055, -153.8590],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0131, device='cuda:0', dtype=torch.float64)
tensor([-152.2025, -149.5666, -152.1446, -153.7276, -153.4332],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0115, device='cuda:0', dtype=torch.float64)
tensor([-152.0372, -149.5594, -152.2759, -153.6042, -153.2830],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0126, device='cuda:0', dtype=torch.float64)
tensor([-152.7387, -149.7512, -152.5069, -154.1815, -153.4530],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0118, device='cuda:0', dtype=torch.float64)
tensor([-153.9276, -150.0231, -152.1454, -154.8145, -154.0727],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0134, device='cuda:0', dtype=torch.float64)
tensor([-154.8573, -150.3095, -151.9000, -155.3094, -154.5943],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0127, device='cuda:0', dtype=torch.float64)
tensor([-156.2806, -150.7439, -151.6800, -156.1701, -155.4375],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0126, device='cuda:0', dtype=torch.float64)
tensor([-158.1566, -151.3170, -151.8401, -157.5100, -156.4197],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0129, device='cuda:0', dtype=torch.float64)
tensor([-159.3393, -151.7372, -151.4812, -158.0760, -157.3446],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0123, device='cuda:0', dtype=torch.float64)
tensor([-159.3812, -151.8742, -151.2505, -157.9225, -157.5346],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0113, device='cuda:0', dtype=torch.float64)
tensor([-158.5005, -151.6527, -151.0944, -157.2358, -157.1217],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0094, device='cuda:0', dtype=torch.float64)
tensor([-157.5202, -151.4185, -150.9994, -156.5098, -156.6369],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0120, device='cuda:0', dtype=torch.float64)
tensor([-156.7327, -151.0786, -151.3739, -156.1772, -156.0457],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0139, device='cuda:0', dtype=torch.float64)
tensor([-155.5502, -150.5401, -152.2250, -155.8390, -155.0204],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0116, device='cuda:0', dtype=torch.float64)
tensor([-153.8436, -149.9064, -152.6211, -154.8724, -154.0114],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0125, device='cuda:0', dtype=torch.float64)
tensor([-152.9393, -149.4618, -152.7980, -154.3593, -153.5314],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0128, device='cuda:0', dtype=torch.float64)
tensor([-152.5804, -149.2045, -152.4250, -153.9549, -153.4496],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0109, device='cuda:0', dtype=torch.float64)
tensor([-152.1499, -148.9598, -151.5409, -153.2321, -153.5563],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0120, device='cuda:0', dtype=torch.float64)
tensor([-152.1108, -148.8600, -150.6194, -152.7689, -153.8899],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0113, device='cuda:0', dtype=torch.float64)
tensor([-152.5963, -148.9678, -149.8389, -152.7444, -154.4365],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0116, device='cuda:0', dtype=torch.float64)
tensor([-153.4681, -149.1916, -149.5030, -153.2052, -154.9449],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0122, device='cuda:0', dtype=torch.float64)
tensor([-154.2656, -149.4175, -149.5173, -153.7718, -155.2233],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0123, device='cuda:0', dtype=torch.float64)
tensor([-154.7271, -149.6194, -149.7299, -154.1950, -155.2447],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0132, device='cuda:0', dtype=torch.float64)
tensor([-154.0563, -149.4134, -150.3167, -154.0166, -154.4994],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0117, device='cuda:0', dtype=torch.float64)
tensor([-153.0165, -149.1189, -150.9608, -153.6092, -153.6412],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0118, device='cuda:0', dtype=torch.float64)
tensor([-152.4223, -148.9739, -151.0112, -153.1886, -153.2847],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0133, device='cuda:0', dtype=torch.float64)
tensor([-152.2666, -148.7617, -151.3300, -153.2712, -152.9959],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0128, device='cuda:0', dtype=torch.float64)
tensor([-152.4250, -148.6402, -151.3221, -153.4176, -152.9962],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0119, device='cuda:0', dtype=torch.float64)
tensor([-152.1644, -148.4042, -151.1636, -153.1556, -152.8823],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0109, device='cuda:0', dtype=torch.float64)
tensor([-152.1005, -148.2610, -150.9470, -153.0179, -152.8709],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0119, device='cuda:0', dtype=torch.float64)
tensor([-152.4099, -148.2343, -150.5237, -153.0548, -153.0604],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0119, device='cuda:0', dtype=torch.float64)
tensor([-152.5848, -148.1933, -150.3109, -153.1112, -153.1377],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0125, device='cuda:0', dtype=torch.float64)
tensor([-153.8357, -148.5761, -149.8483, -153.7919, -153.8613],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0137, device='cuda:0', dtype=torch.float64)
tensor([-155.4571, -149.0659, -149.9969, -155.0243, -154.6616],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0119, device='cuda:0', dtype=torch.float64)
tensor([-156.8447, -149.5855, -150.4570, -156.2492, -155.2635],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0135, device='cuda:0', dtype=torch.float64)
tensor([-157.2628, -149.8329, -151.2650, -156.9957, -155.2509],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0128, device='cuda:0', dtype=torch.float64)
tensor([-156.6844, -149.8255, -151.4217, -156.6802, -154.9508],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0119, device='cuda:0', dtype=torch.float64)
tensor([-155.6505, -149.6686, -151.3656, -155.9140, -154.4699],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0117, device='cuda:0', dtype=torch.float64)
tensor([-154.5011, -149.5347, -150.7861, -154.7831, -154.2091],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0143, device='cuda:0', dtype=torch.float64)
tensor([-153.0351, -149.3391, -150.5307, -153.5803, -153.7620],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0126, device='cuda:0', dtype=torch.float64)
tensor([-152.2095, -149.3652, -150.3669, -152.8878, -153.6677],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0113, device='cuda:0', dtype=torch.float64)
tensor([-152.0393, -149.5714, -149.8325, -152.4838, -154.0325],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0121, device='cuda:0', dtype=torch.float64)
tensor([-152.3067, -149.8404, -149.2310, -152.3765, -154.6554],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0130, device='cuda:0', dtype=torch.float64)
tensor([-152.7362, -149.8510, -149.5683, -152.8540, -154.7903],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0116, device='cuda:0', dtype=torch.float64)
tensor([-153.8000, -150.0385, -149.9060, -153.7796, -155.1748],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0132, device='cuda:0', dtype=torch.float64)
tensor([-154.6121, -150.1572, -150.6455, -154.6988, -155.2613],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0134, device='cuda:0', dtype=torch.float64)
tensor([-155.5304, -150.3482, -151.2354, -155.6039, -155.5206],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0142, device='cuda:0', dtype=torch.float64)
tensor([-155.6511, -150.3365, -151.6492, -155.8522, -155.4336],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0139, device='cuda:0', dtype=torch.float64)
tensor([-154.8209, -150.0043, -151.6194, -155.2291, -155.0439],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0125, device='cuda:0', dtype=torch.float64)
tensor([-153.0145, -149.2408, -151.2570, -153.7681, -154.3242],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0126, device='cuda:0', dtype=torch.float64)
tensor([-151.5207, -148.5371, -150.8120, -152.5018, -153.8412],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0118, device='cuda:0', dtype=torch.float64)
tensor([-150.3465, -148.0110, -150.3153, -151.4267, -153.5826],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0133, device='cuda:0', dtype=torch.float64)
tensor([-150.4440, -147.6809, -150.2096, -151.4673, -153.5666],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0131, device='cuda:0', dtype=torch.float64)
tensor([-151.2939, -147.5507, -150.1650, -152.0789, -153.7873],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0127, device='cuda:0', dtype=torch.float64)
tensor([-152.4249, -147.5899, -150.4539, -153.0306, -154.0979],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0122, device='cuda:0', dtype=torch.float64)
tensor([-153.7332, -147.7825, -150.5090, -153.9731, -154.6718],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0133, device='cuda:0', dtype=torch.float64)
tensor([-154.7388, -147.9534, -150.7331, -154.7870, -155.0318],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0130, device='cuda:0', dtype=torch.float64)
tensor([-154.6615, -147.7826, -151.1458, -154.9689, -154.7675],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0122, device='cuda:0', dtype=torch.float64)
tensor([-154.0770, -147.6297, -151.1085, -154.5437, -154.4006],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0124, device='cuda:0', dtype=torch.float64)
tensor([-152.8452, -147.4646, -150.9994, -153.6125, -153.7482],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0127, device='cuda:0', dtype=torch.float64)
tensor([-151.4184, -147.3380, -150.7867, -152.4803, -153.1129],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0120, device='cuda:0', dtype=torch.float64)
tensor([-150.1555, -147.4871, -150.6097, -151.4350, -152.6680],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0131, device='cuda:0', dtype=torch.float64)
tensor([-150.3223, -148.0425, -150.5201, -151.4424, -152.7895],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0114, device='cuda:0', dtype=torch.float64)
tensor([-151.1038, -148.5886, -150.5437, -151.9805, -153.0716],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0144, device='cuda:0', dtype=torch.float64)
tensor([-152.2142, -149.1407, -150.7881, -152.8566, -153.4244],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0126, device='cuda:0', dtype=torch.float64)
tensor([-153.4555, -149.7448, -150.6595, -153.6261, -154.0990],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0122, device='cuda:0', dtype=torch.float64)
tensor([-154.7166, -150.0423, -150.7607, -154.5358, -154.6455],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0125, device='cuda:0', dtype=torch.float64)
tensor([-155.1324, -150.0710, -150.8169, -154.8522, -154.7941],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0094, device='cuda:0', dtype=torch.float64)
tensor([-154.8576, -149.8557, -151.0496, -154.7618, -154.4991],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0129, device='cuda:0', dtype=torch.float64)
tensor([-153.4647, -149.3475, -151.1010, -153.8154, -153.7361],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0127, device='cuda:0', dtype=torch.float64)
tensor([-151.8866, -148.7529, -151.5840, -152.9351, -152.7804],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0129, device='cuda:0', dtype=torch.float64)
tensor([-150.4167, -148.1842, -152.1403, -152.1402, -151.9294],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0144, device='cuda:0', dtype=torch.float64)
tensor([-149.2309, -147.8160, -152.4512, -151.4371, -151.3992],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0134, device='cuda:0', dtype=torch.float64)
tensor([-148.8227, -147.6472, -152.1337, -150.9879, -151.3277],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0141, device='cuda:0', dtype=torch.float64)
tensor([-149.1307, -147.4144, -151.2805, -150.8647, -151.5235],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0124, device='cuda:0', dtype=torch.float64)
tensor([-150.0411, -147.2902, -150.4946, -151.2031, -151.9194],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0137, device='cuda:0', dtype=torch.float64)
tensor([-151.4440, -147.2659, -150.6031, -152.3009, -152.2080],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0114, device='cuda:0', dtype=torch.float64)
tensor([-153.2496, -147.3500, -151.5604, -154.1206, -152.5328],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0109, device='cuda:0', dtype=torch.float64)
tensor([-154.8905, -147.6605, -152.2269, -155.6506, -153.0531],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0128, device='cuda:0', dtype=torch.float64)
tensor([-155.6059, -147.7498, -152.3973, -156.2808, -153.2972],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0140, device='cuda:0', dtype=torch.float64)
tensor([-155.9279, -147.6397, -152.3180, -156.5121, -153.3960],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0137, device='cuda:0', dtype=torch.float64)
tensor([-155.7540, -147.4853, -151.6673, -156.0837, -153.4189],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0128, device='cuda:0', dtype=torch.float64)
tensor([-155.0568, -147.1749, -150.9481, -155.2619, -153.1452],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0139, device='cuda:0', dtype=torch.float64)
tensor([-153.5900, -146.8129, -149.6853, -153.5960, -152.6377],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0113, device='cuda:0', dtype=torch.float64)
tensor([-152.1620, -146.6469, -148.7014, -152.1070, -152.1495],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0145, device='cuda:0', dtype=torch.float64)
tensor([-150.7502, -146.6031, -148.0207, -150.7803, -151.6766],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0109, device='cuda:0', dtype=torch.float64)
tensor([-149.6761, -146.7078, -147.3083, -149.6569, -151.5077],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0131, device='cuda:0', dtype=torch.float64)
tensor([-149.3991, -146.9583, -147.1162, -149.3453, -151.4567],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0125, device='cuda:0', dtype=torch.float64)
tensor([-149.5081, -147.0151, -147.3046, -149.4923, -151.2951],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0130, device='cuda:0', dtype=torch.float64)
tensor([-150.1172, -147.2068, -147.7965, -150.1294, -151.1936],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0131, device='cuda:0', dtype=torch.float64)
tensor([-151.6254, -147.4974, -148.6567, -151.5775, -151.3002],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0126, device='cuda:0', dtype=torch.float64)
tensor([-152.8814, -147.9154, -149.8259, -153.0182, -151.3435],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0124, device='cuda:0', dtype=torch.float64)
tensor([-154.6594, -148.5012, -150.7536, -154.7129, -151.8070],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0129, device='cuda:0', dtype=torch.float64)
tensor([-155.9998, -148.9465, -151.8428, -156.2242, -152.1256],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0118, device='cuda:0', dtype=torch.float64)
tensor([-156.7040, -149.1490, -152.5882, -157.1452, -152.2486],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0144, device='cuda:0', dtype=torch.float64)
tensor([-155.5912, -148.7063, -152.0893, -156.1036, -151.7159],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0140, device='cuda:0', dtype=torch.float64)
tensor([-154.2782, -148.2272, -150.4387, -154.3422, -151.5098],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0125, device='cuda:0', dtype=torch.float64)
tensor([-153.4172, -147.9837, -148.5933, -152.8486, -151.8022],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0133, device='cuda:0', dtype=torch.float64)
tensor([-152.9772, -148.0170, -146.9848, -151.8083, -152.4066],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0109, device='cuda:0', dtype=torch.float64)
tensor([-152.8458, -148.1450, -145.8341, -151.2238, -153.0601],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0149, device='cuda:0', dtype=torch.float64)
tensor([-152.1183, -147.7069, -145.6297, -150.6701, -152.8226],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0112, device='cuda:0', dtype=torch.float64)
tensor([-151.4789, -147.3447, -145.6175, -150.2238, -152.5126],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0131, device='cuda:0', dtype=torch.float64)
tensor([-151.5210, -146.9736, -145.9007, -150.3970, -152.2944],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0122, device='cuda:0', dtype=torch.float64)
tensor([-151.1949, -146.4271, -146.6049, -150.4935, -151.6702],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0145, device='cuda:0', dtype=torch.float64)
tensor([-151.0862, -145.9380, -147.4731, -150.8562, -151.1306],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0109, device='cuda:0', dtype=torch.float64)
tensor([-150.9805, -145.6090, -148.6787, -151.3876, -150.5841],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0145, device='cuda:0', dtype=torch.float64)
tensor([-151.4897, -145.5409, -149.8070, -152.3292, -150.4264],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0130, device='cuda:0', dtype=torch.float64)
tensor([-151.8464, -145.5016, -150.4457, -152.9305, -150.4464],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0120, device='cuda:0', dtype=torch.float64)
tensor([-151.8183, -145.2613, -150.5256, -152.9690, -150.4757],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0147, device='cuda:0', dtype=torch.float64)
tensor([-151.7457, -145.0262, -150.0783, -152.6898, -150.6798],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0134, device='cuda:0', dtype=torch.float64)
tensor([-151.1280, -144.7634, -149.1934, -151.7949, -150.8200],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0140, device='cuda:0', dtype=torch.float64)
tensor([-150.2072, -144.6763, -148.1468, -150.5969, -150.8969],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0133, device='cuda:0', dtype=torch.float64)
tensor([-149.6817, -145.0181, -146.8736, -149.6034, -151.4056],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0107, device='cuda:0', dtype=torch.float64)
tensor([-149.9119, -145.5718, -146.1147, -149.4154, -152.1070],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0138, device='cuda:0', dtype=torch.float64)
tensor([-151.3226, -146.4838, -145.5157, -150.1236, -153.3171],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0123, device='cuda:0', dtype=torch.float64)
tensor([-152.2277, -147.1450, -145.3728, -150.7071, -154.0247],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0151, device='cuda:0', dtype=torch.float64)
tensor([-152.7468, -147.1047, -146.3793, -151.5863, -153.6585],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0145, device='cuda:0', dtype=torch.float64)
tensor([-152.6549, -146.9525, -147.6189, -152.1593, -152.9503],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0119, device='cuda:0', dtype=torch.float64)
tensor([-152.3979, -146.8959, -149.0384, -152.6932, -152.1704],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0114, device='cuda:0', dtype=torch.float64)
tensor([-152.1164, -146.9788, -150.0463, -153.0119, -151.6460],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0141, device='cuda:0', dtype=torch.float64)
tensor([-151.4519, -146.9464, -150.1651, -152.6064, -151.3150],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0132, device='cuda:0', dtype=torch.float64)
tensor([-151.0332, -146.9296, -149.3819, -151.9289, -151.4345],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0125, device='cuda:0', dtype=torch.float64)
tensor([-150.2073, -146.9277, -148.1367, -150.7236, -151.6770],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0106, device='cuda:0', dtype=torch.float64)
tensor([-149.7341, -147.0121, -147.0009, -149.8523, -152.0815],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0144, device='cuda:0', dtype=torch.float64)
tensor([-150.2400, -146.9331, -146.5255, -150.0555, -152.3781],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0107, device='cuda:0', dtype=torch.float64)
tensor([-150.8647, -146.7163, -146.5534, -150.5922, -152.4472],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0133, device='cuda:0', dtype=torch.float64)
tensor([-151.7391, -146.6726, -146.6021, -151.2920, -152.7107],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0115, device='cuda:0', dtype=torch.float64)
tensor([-152.2983, -146.6709, -146.5740, -151.7018, -152.8948],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0133, device='cuda:0', dtype=torch.float64)
tensor([-152.3391, -146.5882, -146.9354, -151.9319, -152.6237],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0119, device='cuda:0', dtype=torch.float64)
tensor([-151.8903, -146.4119, -147.0472, -151.6903, -152.2417],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0127, device='cuda:0', dtype=torch.float64)
tensor([-151.2177, -146.2675, -147.2058, -151.3269, -151.7668],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0115, device='cuda:0', dtype=torch.float64)
tensor([-150.5998, -146.1994, -147.2755, -150.9484, -151.4176],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0126, device='cuda:0', dtype=torch.float64)
tensor([-150.4506, -146.1869, -147.4436, -150.9749, -151.2463],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0135, device='cuda:0', dtype=torch.float64)
tensor([-150.3879, -146.1304, -147.9201, -151.2252, -151.0075],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0119, device='cuda:0', dtype=torch.float64)
tensor([-150.4024, -146.1290, -147.9333, -151.3021, -151.0606],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0123, device='cuda:0', dtype=torch.float64)
tensor([-150.5508, -146.0832, -148.0431, -151.5309, -151.1196],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0108, device='cuda:0', dtype=torch.float64)
tensor([-150.3221, -145.9207, -148.4466, -151.6192, -150.9026],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0116, device='cuda:0', dtype=torch.float64)
tensor([-149.9538, -145.7296, -148.4354, -151.4173, -150.8025],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0139, device='cuda:0', dtype=torch.float64)
tensor([-150.2421, -145.5481, -148.4903, -151.7353, -150.8873],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0117, device='cuda:0', dtype=torch.float64)
tensor([-150.8115, -145.5143, -148.3446, -152.1167, -151.1859],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0100, device='cuda:0', dtype=torch.float64)
tensor([-150.8618, -145.3868, -147.9162, -151.9729, -151.3717],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0114, device='cuda:0', dtype=torch.float64)
tensor([-150.6066, -145.2755, -147.3562, -151.5311, -151.4918],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0131, device='cuda:0', dtype=torch.float64)
tensor([-149.3669, -144.8079, -147.0866, -150.5626, -150.9811],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0128, device='cuda:0', dtype=torch.float64)
tensor([-148.1448, -144.5506, -146.9031, -149.6011, -150.5542],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0110, device='cuda:0', dtype=torch.float64)
tensor([-147.2698, -144.2881, -146.7222, -148.8949, -150.2819],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0130, device='cuda:0', dtype=torch.float64)
tensor([-146.9501, -144.3664, -146.5052, -148.5607, -150.3071],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0141, device='cuda:0', dtype=torch.float64)
tensor([-146.8616, -144.3695, -146.5550, -148.5165, -150.1784],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0139, device='cuda:0', dtype=torch.float64)
tensor([-147.1547, -144.3484, -147.0688, -148.9628, -149.8395],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0127, device='cuda:0', dtype=torch.float64)
tensor([-148.3710, -144.3606, -147.5847, -150.1231, -149.8099],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0114, device='cuda:0', dtype=torch.float64)
tensor([-149.6939, -144.6890, -147.9690, -151.2535, -150.0583],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0129, device='cuda:0', dtype=torch.float64)
tensor([-151.6871, -145.2847, -147.5895, -152.4241, -151.0080],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0134, device='cuda:0', dtype=torch.float64)
tensor([-153.3027, -145.6894, -147.6396, -153.5108, -151.6668],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0148, device='cuda:0', dtype=torch.float64)
tensor([-152.9757, -145.6118, -147.9447, -153.4188, -151.2355],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0143, device='cuda:0', dtype=torch.float64)
tensor([-152.7142, -145.6731, -147.6917, -153.1018, -151.1392],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0114, device='cuda:0', dtype=torch.float64)
tensor([-151.9920, -145.6246, -147.0009, -152.2454, -151.0282],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0135, device='cuda:0', dtype=torch.float64)
tensor([-150.8072, -145.5369, -145.9097, -150.8981, -150.9680],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0142, device='cuda:0', dtype=torch.float64)
tensor([-149.8802, -145.6291, -145.1485, -149.8777, -151.0108],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0152, device='cuda:0', dtype=torch.float64)
tensor([-149.0361, -145.7892, -144.6195, -149.0158, -151.0899],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0104, device='cuda:0', dtype=torch.float64)
tensor([-148.5232, -145.9823, -144.1842, -148.4366, -151.3255],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0139, device='cuda:0', dtype=torch.float64)
tensor([-148.5861, -146.1007, -144.2072, -148.4865, -151.3623],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0138, device='cuda:0', dtype=torch.float64)
tensor([-148.2951, -145.9324, -144.6387, -148.4464, -150.9141],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0115, device='cuda:0', dtype=torch.float64)
tensor([-148.2787, -145.7309, -145.2836, -148.6870, -150.4569],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0150, device='cuda:0', dtype=torch.float64)
tensor([-149.6296, -145.6261, -146.5161, -150.1879, -150.2206],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0144, device='cuda:0', dtype=torch.float64)
tensor([-151.9105, -146.0061, -147.8737, -152.4307, -150.6875],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0113, device='cuda:0', dtype=torch.float64)
tensor([-154.0288, -146.4838, -148.9350, -154.4470, -151.4570],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0135, device='cuda:0', dtype=torch.float64)
tensor([-155.0819, -146.7108, -149.4016, -155.4641, -151.9560],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0149, device='cuda:0', dtype=torch.float64)
tensor([-154.3156, -146.4295, -149.1679, -154.8742, -151.6698],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0145, device='cuda:0', dtype=torch.float64)
tensor([-152.7641, -145.9835, -148.4753, -153.4920, -151.1178],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0104, device='cuda:0', dtype=torch.float64)
tensor([-151.0809, -145.4782, -147.6320, -151.9449, -150.5888],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0111, device='cuda:0', dtype=torch.float64)
tensor([-149.6811, -145.1229, -146.5350, -150.4831, -150.4417],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0112, device='cuda:0', dtype=torch.float64)
tensor([-148.2619, -144.8378, -146.0265, -149.2568, -150.0800],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0112, device='cuda:0', dtype=torch.float64)
tensor([-147.3980, -144.9668, -145.4129, -148.3502, -150.0978],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0119, device='cuda:0', dtype=torch.float64)
tensor([-147.3969, -145.3439, -144.6363, -148.0302, -150.6055],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0152, device='cuda:0', dtype=torch.float64)
tensor([-147.5945, -145.7715, -144.0748, -147.9405, -151.0739],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0119, device='cuda:0', dtype=torch.float64)
tensor([-147.9544, -146.0109, -144.0334, -148.1537, -151.2012],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0117, device='cuda:0', dtype=torch.float64)
tensor([-148.4120, -146.1656, -144.0836, -148.4854, -151.2682],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0124, device='cuda:0', dtype=torch.float64)
tensor([-148.5063, -145.9736, -144.7104, -148.7852, -150.7574],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0148, device='cuda:0', dtype=torch.float64)
tensor([-149.3292, -145.9933, -145.5829, -149.6902, -150.4170],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0127, device='cuda:0', dtype=torch.float64)
tensor([-149.9020, -146.1042, -146.1305, -150.2876, -150.2878],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0144, device='cuda:0', dtype=torch.float64)
tensor([-150.5528, -146.2273, -146.7586, -150.9879, -150.1902],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0123, device='cuda:0', dtype=torch.float64)
tensor([-150.8203, -146.2361, -146.9549, -151.2202, -150.0885],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0130, device='cuda:0', dtype=torch.float64)
tensor([-150.8857, -146.2060, -147.0801, -151.2957, -149.9395],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0124, device='cuda:0', dtype=torch.float64)
tensor([-150.4157, -145.9347, -147.0971, -150.9634, -149.5087],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0135, device='cuda:0', dtype=torch.float64)
tensor([-150.0372, -145.6219, -147.3034, -150.7823, -149.0731],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0143, device='cuda:0', dtype=torch.float64)
tensor([-149.0261, -145.1366, -147.3104, -150.0807, -148.4423],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0137, device='cuda:0', dtype=torch.float64)
tensor([-147.8060, -144.7275, -146.8754, -148.9791, -147.9988],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0106, device='cuda:0', dtype=torch.float64)
tensor([-146.8486, -144.4058, -146.4988, -148.0970, -147.6772],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0121, device='cuda:0', dtype=torch.float64)
tensor([-146.5618, -144.2783, -146.0784, -147.7231, -147.7123],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0117, device='cuda:0', dtype=torch.float64)
tensor([-146.5210, -144.1102, -146.1056, -147.7551, -147.6138],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0120, device='cuda:0', dtype=torch.float64)
tensor([-146.6454, -143.9347, -145.9284, -147.8140, -147.6584],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0132, device='cuda:0', dtype=torch.float64)
tensor([-146.7599, -143.8412, -145.3337, -147.6690, -147.9762],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0129, device='cuda:0', dtype=torch.float64)
tensor([-147.1368, -143.7186, -144.9477, -147.8282, -148.2828],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0125, device='cuda:0', dtype=torch.float64)
tensor([-147.8517, -143.8211, -144.4256, -148.1307, -148.8535],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0111, device='cuda:0', dtype=torch.float64)
tensor([-148.5065, -143.7078, -144.4462, -148.6465, -149.0684],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0135, device='cuda:0', dtype=torch.float64)
tensor([-148.4439, -143.3099, -144.9901, -148.8949, -148.6808],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0148, device='cuda:0', dtype=torch.float64)
tensor([-147.8037, -142.9163, -145.1860, -148.5921, -148.2352],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0122, device='cuda:0', dtype=torch.float64)
tensor([-147.2227, -142.5208, -145.4190, -148.3238, -147.8019],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0134, device='cuda:0', dtype=torch.float64)
tensor([-146.4160, -142.1169, -145.8838, -147.9917, -147.1964],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0118, device='cuda:0', dtype=torch.float64)
tensor([-145.1838, -141.6887, -146.1445, -147.2592, -146.5879],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0121, device='cuda:0', dtype=torch.float64)
tensor([-143.9291, -141.4066, -146.1487, -146.3538, -146.1476],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0146, device='cuda:0', dtype=torch.float64)
tensor([-143.2758, -141.3171, -145.6359, -145.6136, -146.1201],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0161, device='cuda:0', dtype=torch.float64)
tensor([-144.5143, -141.7008, -145.1018, -146.2925, -146.6220],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0120, device='cuda:0', dtype=torch.float64)
tensor([-146.0926, -142.2707, -144.8330, -147.3363, -147.2008],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0118, device='cuda:0', dtype=torch.float64)
tensor([-147.8309, -142.9753, -144.6321, -148.4860, -147.9580],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0119, device='cuda:0', dtype=torch.float64)
tensor([-149.4559, -143.7178, -144.4429, -149.5604, -148.7573],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0144, device='cuda:0', dtype=torch.float64)
tensor([-150.5258, -144.3155, -144.7137, -150.4601, -149.1172],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0126, device='cuda:0', dtype=torch.float64)
tensor([-150.8654, -144.7114, -145.1824, -150.9730, -149.0350],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0145, device='cuda:0', dtype=torch.float64)
tensor([-150.7606, -144.8668, -145.5743, -151.1492, -148.7305],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0140, device='cuda:0', dtype=torch.float64)
tensor([-150.3452, -144.8022, -145.8261, -151.0723, -148.3123],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0140, device='cuda:0', dtype=torch.float64)
tensor([-149.6680, -144.6309, -145.5741, -150.5508, -147.9599],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0120, device='cuda:0', dtype=torch.float64)
tensor([-148.3627, -144.2180, -145.7137, -149.7397, -147.1476],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0119, device='cuda:0', dtype=torch.float64)
tensor([-146.7643, -143.7015, -145.6210, -148.6003, -146.3888],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0122, device='cuda:0', dtype=torch.float64)
tensor([-145.6226, -143.3380, -145.2664, -147.6505, -146.0073],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0139, device='cuda:0', dtype=torch.float64)
tensor([-144.7580, -143.0845, -144.4725, -146.7003, -145.9289],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0132, device='cuda:0', dtype=torch.float64)
tensor([-144.2422, -142.7627, -143.8687, -146.1092, -145.8888],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0136, device='cuda:0', dtype=torch.float64)
tensor([-144.0311, -142.4503, -143.4514, -145.8140, -145.8187],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0162, device='cuda:0', dtype=torch.float64)
tensor([-144.5452, -142.1026, -143.5572, -146.2296, -145.6959],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0123, device='cuda:0', dtype=torch.float64)
tensor([-145.1270, -141.8189, -143.4320, -146.6381, -145.8086],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0129, device='cuda:0', dtype=torch.float64)
tensor([-145.8219, -141.5478, -143.5275, -147.1949, -145.9294],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0142, device='cuda:0', dtype=torch.float64)
tensor([-146.5131, -141.4767, -143.3345, -147.6050, -146.2352],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0141, device='cuda:0', dtype=torch.float64)
tensor([-146.9585, -141.4600, -143.2064, -147.8476, -146.4449],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0136, device='cuda:0', dtype=torch.float64)
tensor([-147.5548, -141.5551, -143.3344, -148.2946, -146.6515],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0130, device='cuda:0', dtype=torch.float64)
tensor([-147.2452, -141.5027, -143.6002, -148.1875, -146.3669],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0139, device='cuda:0', dtype=torch.float64)
tensor([-146.2502, -141.3735, -143.4669, -147.4144, -146.0259],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0124, device='cuda:0', dtype=torch.float64)
tensor([-145.5823, -141.4348, -143.3864, -146.8739, -145.9026],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0139, device='cuda:0', dtype=torch.float64)
tensor([-145.5749, -141.5391, -143.7587, -146.9970, -145.8465],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0133, device='cuda:0', dtype=torch.float64)
tensor([-145.6239, -141.6123, -144.5221, -147.3308, -145.6152],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0114, device='cuda:0', dtype=torch.float64)
tensor([-145.9395, -141.7952, -145.4897, -147.9667, -145.4761],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0125, device='cuda:0', dtype=torch.float64)
tensor([-146.1245, -141.8677, -146.3455, -148.4949, -145.3823],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0127, device='cuda:0', dtype=torch.float64)
tensor([-146.1595, -141.8616, -147.1438, -148.9248, -145.3111],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0141, device='cuda:0', dtype=torch.float64)
tensor([-145.6568, -141.5876, -146.7571, -148.3925, -145.3310],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0122, device='cuda:0', dtype=torch.float64)
tensor([-144.7617, -141.2333, -145.9047, -147.3560, -145.3428],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0129, device='cuda:0', dtype=torch.float64)
tensor([-143.9990, -141.0153, -144.7993, -146.2984, -145.5697],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0135, device='cuda:0', dtype=torch.float64)
tensor([-143.5361, -141.0596, -143.8088, -145.4988, -146.0558],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0157, device='cuda:0', dtype=torch.float64)
tensor([-144.0799, -141.2397, -143.0625, -145.5618, -146.7333],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0128, device='cuda:0', dtype=torch.float64)
tensor([-145.2418, -141.5810, -142.4391, -146.1111, -147.5277],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0124, device='cuda:0', dtype=torch.float64)
tensor([-146.8820, -142.0649, -142.2717, -147.1658, -148.3105],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0132, device='cuda:0', dtype=torch.float64)
tensor([-148.9306, -142.7974, -142.3568, -148.5523, -149.2445],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0120, device='cuda:0', dtype=torch.float64)
tensor([-150.2555, -143.3105, -142.6938, -149.5581, -149.7618],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0124, device='cuda:0', dtype=torch.float64)
tensor([-150.7886, -143.6107, -143.1743, -150.1248, -149.7801],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0134, device='cuda:0', dtype=torch.float64)
tensor([-151.0718, -143.5387, -144.4814, -150.9600, -149.2290],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0129, device='cuda:0', dtype=torch.float64)
tensor([-150.4645, -143.3912, -145.1385, -150.8925, -148.5696],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0148, device='cuda:0', dtype=torch.float64)
tensor([-148.6238, -142.8755, -145.6514, -149.9241, -147.3761],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0147, device='cuda:0', dtype=torch.float64)
tensor([-146.4900, -142.4088, -146.0616, -148.6403, -146.2306],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0144, device='cuda:0', dtype=torch.float64)
tensor([-144.5162, -142.1250, -145.5454, -146.9366, -145.6324],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0140, device='cuda:0', dtype=torch.float64)
tensor([-143.0333, -142.0972, -145.6050, -145.7997, -145.2043],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0151, device='cuda:0', dtype=torch.float64)
tensor([-142.5967, -142.1237, -145.9534, -145.5922, -144.9372],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0150, device='cuda:0', dtype=torch.float64)
tensor([-143.2748, -142.1829, -145.8019, -146.0464, -145.0173],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0150, device='cuda:0', dtype=torch.float64)
tensor([-143.4869, -142.2400, -144.9960, -145.8679, -145.2866],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0144, device='cuda:0', dtype=torch.float64)
tensor([-144.2393, -142.5148, -144.1168, -146.0517, -145.8518],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0149, device='cuda:0', dtype=torch.float64)
tensor([-145.2228, -142.7926, -143.6592, -146.5941, -146.3740],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0129, device='cuda:0', dtype=torch.float64)
tensor([-146.5860, -142.9655, -143.5853, -147.5556, -146.8506],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0128, device='cuda:0', dtype=torch.float64)
tensor([-148.1465, -143.3022, -143.6087, -148.6676, -147.5087],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0124, device='cuda:0', dtype=torch.float64)
tensor([-149.5547, -143.6085, -143.9054, -149.7889, -148.0802],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0129, device='cuda:0', dtype=torch.float64)
tensor([-150.2813, -143.8454, -144.1088, -150.3685, -148.3411],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0125, device='cuda:0', dtype=torch.float64)
tensor([-149.9889, -143.7207, -144.5673, -150.3719, -147.9156],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0146, device='cuda:0', dtype=torch.float64)
tensor([-148.5895, -143.3752, -144.5943, -149.4323, -147.1457],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0120, device='cuda:0', dtype=torch.float64)
tensor([-147.0637, -142.9847, -144.0291, -148.1193, -146.6430],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0129, device='cuda:0', dtype=torch.float64)
tensor([-145.5684, -142.6575, -143.9134, -147.0382, -146.0808],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0125, device='cuda:0', dtype=torch.float64)
tensor([-144.2880, -142.2789, -144.1297, -146.2205, -145.5235],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0143, device='cuda:0', dtype=torch.float64)
tensor([-143.8433, -141.9841, -144.2340, -145.9839, -145.2861],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0133, device='cuda:0', dtype=torch.float64)
tensor([-143.1859, -141.4968, -144.6601, -145.7430, -144.8093],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0142, device='cuda:0', dtype=torch.float64)
tensor([-143.5115, -141.2757, -144.7987, -146.0811, -144.7919],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0138, device='cuda:0', dtype=torch.float64)
tensor([-144.5955, -141.2900, -144.4854, -146.7532, -145.2434],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0155, device='cuda:0', dtype=torch.float64)
tensor([-146.4203, -141.4599, -144.1695, -147.8781, -146.0505],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0119, device='cuda:0', dtype=torch.float64)
tensor([-148.5828, -141.8342, -143.4302, -148.9785, -147.3249],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0110, device='cuda:0', dtype=torch.float64)
tensor([-150.5620, -142.2469, -143.0850, -150.0958, -148.4989],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0130, device='cuda:0', dtype=torch.float64)
tensor([-151.7187, -142.5710, -142.8098, -150.6862, -149.2037],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0148, device='cuda:0', dtype=torch.float64)
tensor([-152.8049, -143.0065, -142.6643, -151.2602, -149.8197],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0138, device='cuda:0', dtype=torch.float64)
tensor([-151.9112, -142.6603, -142.5244, -150.5747, -149.1888],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0140, device='cuda:0', dtype=torch.float64)
tensor([-149.6236, -141.8127, -142.5963, -149.0893, -147.6798],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0178, device='cuda:0', dtype=torch.float64)
tensor([-145.6872, -140.6512, -142.1514, -146.2089, -145.7892],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0145, device='cuda:0', dtype=torch.float64)
tensor([-142.4229, -139.8613, -142.8247, -144.1254, -144.2637],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0134, device='cuda:0', dtype=torch.float64)
tensor([-140.4924, -139.4328, -144.1539, -143.1695, -143.3178],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0141, device='cuda:0', dtype=torch.float64)
tensor([-139.7790, -139.3409, -144.9279, -142.8774, -142.9278],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0117, device='cuda:0', dtype=torch.float64)
tensor([-139.9387, -139.3244, -145.4658, -143.2249, -142.7283],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0143, device='cuda:0', dtype=torch.float64)
tensor([-140.6444, -139.3044, -145.2164, -143.6883, -142.8060],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0158, device='cuda:0', dtype=torch.float64)
tensor([-141.6998, -139.2298, -143.6582, -143.8672, -143.3097],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0132, device='cuda:0', dtype=torch.float64)
tensor([-143.4939, -139.5820, -142.1110, -144.5420, -144.3074],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0159, device='cuda:0', dtype=torch.float64)
tensor([-145.1088, -140.1508, -140.7838, -145.1076, -145.4694],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0138, device='cuda:0', dtype=torch.float64)
tensor([-146.9970, -141.0094, -139.8301, -145.9891, -146.8703],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0148, device='cuda:0', dtype=torch.float64)
tensor([-148.2586, -141.7632, -139.4085, -146.6441, -147.7483],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0139, device='cuda:0', dtype=torch.float64)
tensor([-148.6068, -141.8818, -139.4757, -146.8564, -147.7768],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0172, device='cuda:0', dtype=torch.float64)
tensor([-148.0442, -141.5362, -140.0530, -146.6809, -146.9882],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0118, device='cuda:0', dtype=torch.float64)
tensor([-147.0084, -141.1943, -140.7357, -146.2272, -145.9610],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0135, device='cuda:0', dtype=torch.float64)
tensor([-146.0499, -140.9894, -141.2124, -145.7360, -145.1772],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0129, device='cuda:0', dtype=torch.float64)
tensor([-145.2379, -140.7179, -141.6730, -145.3380, -144.5144],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0129, device='cuda:0', dtype=torch.float64)
tensor([-144.9403, -140.5819, -141.9144, -145.2288, -144.2084],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0118, device='cuda:0', dtype=torch.float64)
tensor([-144.6245, -140.5539, -141.9528, -145.0208, -144.0374],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0146, device='cuda:0', dtype=torch.float64)
tensor([-144.6534, -140.4569, -141.9543, -145.0700, -144.0238],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0134, device='cuda:0', dtype=torch.float64)
tensor([-144.9831, -140.4408, -142.3345, -145.4801, -144.0015],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0139, device='cuda:0', dtype=torch.float64)
tensor([-145.5023, -140.5085, -142.1098, -145.7654, -144.3789],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0132, device='cuda:0', dtype=torch.float64)
tensor([-145.4946, -140.3180, -142.8804, -146.1062, -144.0792],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0126, device='cuda:0', dtype=torch.float64)
tensor([-145.3341, -140.0742, -143.6040, -146.3511, -143.8546],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0130, device='cuda:0', dtype=torch.float64)
tensor([-144.9977, -139.9135, -144.0718, -146.3396, -143.6367],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0121, device='cuda:0', dtype=torch.float64)
tensor([-144.7709, -139.9399, -144.0772, -146.1732, -143.6031],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0129, device='cuda:0', dtype=torch.float64)
tensor([-144.7120, -139.9466, -143.8885, -146.0612, -143.7197],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0129, device='cuda:0', dtype=torch.float64)
tensor([-144.8566, -140.1184, -143.6850, -146.0799, -143.9228],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0150, device='cuda:0', dtype=torch.float64)
tensor([-144.8972, -140.1884, -143.2607, -145.9614, -144.1605],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0115, device='cuda:0', dtype=torch.float64)
tensor([-144.7613, -140.2121, -142.7324, -145.6779, -144.3737],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0150, device='cuda:0', dtype=torch.float64)
tensor([-144.3525, -140.1270, -142.0620, -145.1710, -144.5913],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0124, device='cuda:0', dtype=torch.float64)
tensor([-144.2326, -140.1970, -141.4769, -144.9389, -144.9368],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0144, device='cuda:0', dtype=torch.float64)
tensor([-144.5843, -140.1242, -141.3790, -145.2097, -145.0814],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0139, device='cuda:0', dtype=torch.float64)
tensor([-144.4930, -139.8453, -141.7151, -145.3440, -144.7625],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0123, device='cuda:0', dtype=torch.float64)
tensor([-144.2173, -139.6858, -141.7748, -145.2395, -144.5799],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0111, device='cuda:0', dtype=torch.float64)
tensor([-144.3632, -139.5584, -142.1095, -145.5166, -144.3764],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0122, device='cuda:0', dtype=torch.float64)
tensor([-144.8190, -139.5210, -142.3574, -145.9890, -144.3895],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0144, device='cuda:0', dtype=torch.float64)
tensor([-145.0537, -139.5676, -142.6485, -146.3167, -144.3114],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0159, device='cuda:0', dtype=torch.float64)
tensor([-145.7172, -139.7223, -142.6151, -146.7988, -144.5628],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0110, device='cuda:0', dtype=torch.float64)
tensor([-146.1913, -139.8186, -142.4823, -147.0972, -144.7828],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0129, device='cuda:0', dtype=torch.float64)
tensor([-146.1461, -139.8339, -141.9170, -146.8714, -144.9844],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0149, device='cuda:0', dtype=torch.float64)
tensor([-145.3314, -139.6038, -141.4672, -146.1962, -144.7546],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0151, device='cuda:0', dtype=torch.float64)
tensor([-143.8872, -138.9245, -141.5600, -145.3247, -143.9492],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0150, device='cuda:0', dtype=torch.float64)
tensor([-142.7835, -138.3826, -141.4318, -144.5786, -143.4226],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0129, device='cuda:0', dtype=torch.float64)
tensor([-141.6871, -138.1142, -141.2023, -143.7624, -143.0125],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0133, device='cuda:0', dtype=torch.float64)
tensor([-140.7418, -137.9715, -140.6346, -142.9289, -142.8791],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0155, device='cuda:0', dtype=torch.float64)
tensor([-140.3944, -137.7271, -140.4600, -142.6161, -142.7343],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0142, device='cuda:0', dtype=torch.float64)
tensor([-141.2273, -137.7661, -140.1482, -143.0771, -143.0492],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0120, device='cuda:0', dtype=torch.float64)
tensor([-141.9470, -137.7411, -140.0379, -143.4885, -143.2556],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0147, device='cuda:0', dtype=torch.float64)
tensor([-142.2413, -137.4620, -140.3286, -143.7470, -143.1279],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0134, device='cuda:0', dtype=torch.float64)
tensor([-142.5628, -137.2903, -140.5751, -144.0254, -143.0540],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0133, device='cuda:0', dtype=torch.float64)
tensor([-143.1750, -137.3068, -140.9778, -144.5668, -143.0843],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0152, device='cuda:0', dtype=torch.float64)
tensor([-143.9757, -137.6584, -141.1975, -145.1366, -143.3015],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0147, device='cuda:0', dtype=torch.float64)
tensor([-143.9068, -137.8074, -141.4218, -145.1315, -143.1134],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0120, device='cuda:0', dtype=torch.float64)
tensor([-144.3650, -138.1565, -141.6120, -145.4390, -143.1977],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0144, device='cuda:0', dtype=torch.float64)
tensor([-144.0812, -138.2479, -141.8645, -145.3178, -142.9229],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0106, device='cuda:0', dtype=torch.float64)
tensor([-143.4541, -138.2128, -141.8594, -144.8486, -142.6141],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0142, device='cuda:0', dtype=torch.float64)
tensor([-141.8106, -137.9264, -141.4320, -143.5238, -142.1742],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0111, device='cuda:0', dtype=torch.float64)
tensor([-140.6549, -137.8807, -140.9599, -142.5036, -142.1029],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0136, device='cuda:0', dtype=torch.float64)
tensor([-139.7398, -137.6820, -140.8942, -141.8317, -141.9306],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0137, device='cuda:0', dtype=torch.float64)
tensor([-139.2313, -137.3671, -141.4014, -141.6874, -141.5491],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0156, device='cuda:0', dtype=torch.float64)
tensor([-139.6637, -137.1237, -141.5575, -142.1365, -141.4875],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0127, device='cuda:0', dtype=torch.float64)
tensor([-140.4947, -137.0747, -141.4383, -142.7184, -141.6532],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0137, device='cuda:0', dtype=torch.float64)
tensor([-140.8443, -137.0606, -141.2857, -142.9308, -141.7562],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0167, device='cuda:0', dtype=torch.float64)
tensor([-141.0470, -137.1983, -140.2560, -142.6651, -142.2178],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0134, device='cuda:0', dtype=torch.float64)
tensor([-141.4304, -137.2440, -139.2522, -142.5771, -142.8143],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0128, device='cuda:0', dtype=torch.float64)
tensor([-142.2487, -137.6601, -138.1848, -142.7619, -143.7422],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0123, device='cuda:0', dtype=torch.float64)
tensor([-143.2963, -138.0871, -137.6708, -143.3077, -144.4472],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0152, device='cuda:0', dtype=torch.float64)
tensor([-143.6464, -137.9164, -137.7651, -143.5698, -144.2732],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0162, device='cuda:0', dtype=torch.float64)
tensor([-143.4163, -137.3444, -138.3898, -143.6591, -143.4583],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0122, device='cuda:0', dtype=torch.float64)
tensor([-142.6603, -136.6943, -139.4039, -143.6087, -142.3610],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0153, device='cuda:0', dtype=torch.float64)
tensor([-141.3556, -136.1361, -140.1927, -143.1183, -141.3124],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0128, device='cuda:0', dtype=torch.float64)
tensor([-140.7718, -135.8793, -141.0918, -143.1200, -140.6305],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0135, device='cuda:0', dtype=torch.float64)
tensor([-140.3783, -135.7310, -141.8192, -143.1825, -140.1741],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0146, device='cuda:0', dtype=torch.float64)
tensor([-139.8499, -135.5987, -141.9391, -142.8298, -139.8256],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0149, device='cuda:0', dtype=torch.float64)
tensor([-139.6526, -135.4892, -140.8502, -142.1390, -139.8179],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0145, device='cuda:0', dtype=torch.float64)
tensor([-140.0197, -135.6555, -139.4887, -141.7419, -140.1748],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0146, device='cuda:0', dtype=torch.float64)
tensor([-141.0868, -136.3249, -137.7946, -141.7393, -141.1869],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0137, device='cuda:0', dtype=torch.float64)
tensor([-142.5837, -137.3383, -136.5427, -142.2302, -142.4957],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0129, device='cuda:0', dtype=torch.float64)
tensor([-143.3584, -137.7202, -136.2414, -142.5630, -142.8963],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0125, device='cuda:0', dtype=torch.float64)
tensor([-143.9854, -137.8937, -136.3281, -142.9590, -143.0054],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0161, device='cuda:0', dtype=torch.float64)
tensor([-144.5420, -137.8849, -136.9219, -143.4823, -142.7760],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0151, device='cuda:0', dtype=torch.float64)
tensor([-144.2258, -137.7369, -137.4500, -143.4348, -142.2269],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0116, device='cuda:0', dtype=torch.float64)
tensor([-143.1576, -137.2043, -138.1758, -142.9978, -141.2931],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0139, device='cuda:0', dtype=torch.float64)
tensor([-142.3837, -136.7828, -138.9978, -142.8178, -140.5723],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0139, device='cuda:0', dtype=torch.float64)
tensor([-141.9244, -136.3967, -140.2225, -143.0405, -139.9700],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0152, device='cuda:0', dtype=torch.float64)
tensor([-142.2343, -136.3608, -141.0478, -143.6157, -139.9227],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0153, device='cuda:0', dtype=torch.float64)
tensor([-142.4549, -136.4438, -141.2025, -143.7943, -140.0242],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0143, device='cuda:0', dtype=torch.float64)
tensor([-141.8542, -136.3288, -140.6856, -143.1499, -139.9521],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0160, device='cuda:0', dtype=torch.float64)
tensor([-139.9438, -136.0222, -139.9681, -141.5643, -139.5193],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0154, device='cuda:0', dtype=torch.float64)
tensor([-138.7208, -135.9404, -138.8852, -140.3538, -139.6738],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0154, device='cuda:0', dtype=torch.float64)
tensor([-138.0194, -136.1581, -138.0524, -139.6601, -140.1777],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0171, device='cuda:0', dtype=torch.float64)
tensor([-138.5429, -136.4700, -137.3154, -139.8598, -140.9061],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0160, device='cuda:0', dtype=torch.float64)
tensor([-139.0278, -136.1735, -137.3944, -140.2628, -140.8160],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0169, device='cuda:0', dtype=torch.float64)
tensor([-139.5650, -135.7766, -138.2300, -140.9227, -140.3591],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0127, device='cuda:0', dtype=torch.float64)
tensor([-140.2129, -135.6934, -139.4314, -141.8370, -140.0726],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0136, device='cuda:0', dtype=torch.float64)
tensor([-141.1457, -135.7836, -140.6856, -143.0139, -140.0787],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0133, device='cuda:0', dtype=torch.float64)
tensor([-142.1177, -135.9602, -141.3809, -144.0128, -140.3451],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0132, device='cuda:0', dtype=torch.float64)
tensor([-143.3851, -136.2693, -141.9364, -145.1731, -140.8769],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0135, device='cuda:0', dtype=torch.float64)
tensor([-143.5615, -136.2603, -141.6820, -145.2206, -141.0927],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0149, device='cuda:0', dtype=torch.float64)
tensor([-142.8797, -135.9282, -141.0066, -144.5223, -141.0299],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0160, device='cuda:0', dtype=torch.float64)
tensor([-140.9125, -135.1408, -140.3793, -143.0463, -140.3859],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0123, device='cuda:0', dtype=torch.float64)
tensor([-139.1469, -134.6000, -139.2689, -141.4588, -140.0946],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0125, device='cuda:0', dtype=torch.float64)
tensor([-138.0060, -134.3680, -138.4960, -140.4658, -140.0708],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0139, device='cuda:0', dtype=torch.float64)
tensor([-137.9420, -134.3404, -137.8542, -140.2337, -140.4128],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0164, device='cuda:0', dtype=torch.float64)
tensor([-139.3582, -135.0535, -137.1435, -140.9116, -141.2797],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0140, device='cuda:0', dtype=torch.float64)
tensor([-140.8979, -135.7570, -136.9520, -141.8567, -141.9715],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0137, device='cuda:0', dtype=torch.float64)
tensor([-142.2814, -136.5145, -136.8891, -142.7195, -142.6131],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0130, device='cuda:0', dtype=torch.float64)
tensor([-143.2496, -136.8819, -137.1849, -143.4245, -142.8683],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0150, device='cuda:0', dtype=torch.float64)
tensor([-143.0019, -136.6232, -138.1342, -143.6454, -142.1092],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0155, device='cuda:0', dtype=torch.float64)
tensor([-142.0308, -136.2694, -138.7146, -143.2940, -141.3044],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0158, device='cuda:0', dtype=torch.float64)
tensor([-140.1107, -135.6234, -139.4987, -142.4129, -140.0623],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0141, device='cuda:0', dtype=torch.float64)
tensor([-137.7968, -135.0898, -139.8067, -141.0036, -139.0482],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0142, device='cuda:0', dtype=torch.float64)
tensor([-136.4630, -134.9313, -139.5020, -139.9419, -138.7227],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0138, device='cuda:0', dtype=torch.float64)
tensor([-136.0387, -135.0534, -138.8556, -139.3929, -138.8400],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0118, device='cuda:0', dtype=torch.float64)
tensor([-135.7703, -135.0245, -138.5102, -139.0853, -138.8520],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0140, device='cuda:0', dtype=torch.float64)
tensor([-135.7749, -134.9163, -138.6018, -139.1104, -138.6721],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0151, device='cuda:0', dtype=torch.float64)
tensor([-135.8049, -134.7481, -138.7372, -139.1312, -138.4361],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0158, device='cuda:0', dtype=torch.float64)
tensor([-137.1713, -134.8189, -138.6329, -139.9924, -138.5762],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0108, device='cuda:0', dtype=torch.float64)
tensor([-138.9053, -135.0876, -138.6252, -141.1115, -138.9604],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0148, device='cuda:0', dtype=torch.float64)
tensor([-140.9593, -135.4997, -138.6408, -142.4489, -139.6903],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0146, device='cuda:0', dtype=torch.float64)
tensor([-142.5319, -135.7750, -138.4452, -143.3745, -140.4073],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0141, device='cuda:0', dtype=torch.float64)
tensor([-142.8630, -135.6152, -138.3831, -143.5587, -140.4952],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0135, device='cuda:0', dtype=torch.float64)
tensor([-143.2279, -135.4887, -138.1867, -143.6989, -140.6714],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0165, device='cuda:0', dtype=torch.float64)
tensor([-142.2407, -134.9629, -138.0821, -143.0268, -140.0763],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0136, device='cuda:0', dtype=torch.float64)
tensor([-140.6448, -134.3037, -137.8358, -141.8934, -139.3185],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0118, device='cuda:0', dtype=torch.float64)
tensor([-139.6607, -133.8635, -137.8972, -141.2780, -138.7853],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0126, device='cuda:0', dtype=torch.float64)
tensor([-138.5899, -133.5251, -137.7494, -140.4847, -138.3321],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0137, device='cuda:0', dtype=torch.float64)
tensor([-137.7095, -133.1940, -137.6936, -139.8416, -137.9794],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0141, device='cuda:0', dtype=torch.float64)
tensor([-136.8598, -132.9401, -138.0990, -139.3839, -137.5347],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0159, device='cuda:0', dtype=torch.float64)
tensor([-136.2282, -132.6351, -138.7961, -139.1959, -137.0701],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0149, device='cuda:0', dtype=torch.float64)
tensor([-136.1258, -132.5238, -139.2731, -139.2923, -136.8233],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0143, device='cuda:0', dtype=torch.float64)
tensor([-136.1837, -132.4897, -139.4906, -139.3709, -136.6733],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0157, device='cuda:0', dtype=torch.float64)
tensor([-137.0009, -132.6069, -139.0686, -139.6905, -136.8529],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0148, device='cuda:0', dtype=torch.float64)
tensor([-138.2582, -132.8369, -138.0506, -140.0571, -137.4437],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0147, device='cuda:0', dtype=torch.float64)
tensor([-139.8335, -133.2794, -137.3994, -140.7523, -138.1621],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0136, device='cuda:0', dtype=torch.float64)
tensor([-141.5761, -133.9959, -136.6518, -141.4786, -139.1449],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0142, device='cuda:0', dtype=torch.float64)
tensor([-142.9039, -134.7105, -136.1665, -142.0645, -139.9239],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0152, device='cuda:0', dtype=torch.float64)
tensor([-143.2613, -135.0745, -136.1245, -142.2834, -140.0633],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0137, device='cuda:0', dtype=torch.float64)
tensor([-142.6333, -134.9367, -136.1350, -141.9358, -139.6729],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0148, device='cuda:0', dtype=torch.float64)
tensor([-141.9288, -134.7877, -136.0346, -141.4945, -139.3258],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0139, device='cuda:0', dtype=torch.float64)
tensor([-140.7510, -134.2415, -136.0818, -140.8247, -138.6854],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0156, device='cuda:0', dtype=torch.float64)
tensor([-139.8960, -133.9732, -136.0248, -140.2926, -138.3040],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0119, device='cuda:0', dtype=torch.float64)
tensor([-139.4701, -133.9151, -135.7807, -139.9569, -138.2111],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0147, device='cuda:0', dtype=torch.float64)
tensor([-139.5576, -133.8703, -135.5060, -139.8984, -138.2928],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0136, device='cuda:0', dtype=torch.float64)
tensor([-139.9071, -133.8382, -135.5768, -140.1396, -138.3215],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0155, device='cuda:0', dtype=torch.float64)
tensor([-139.7657, -133.6875, -135.7216, -140.0627, -138.1506],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0127, device='cuda:0', dtype=torch.float64)
tensor([-138.5760, -133.4005, -135.6003, -139.2331, -137.6815],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0148, device='cuda:0', dtype=torch.float64)
tensor([-137.0442, -133.0098, -135.6540, -138.2649, -137.1173],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0145, device='cuda:0', dtype=torch.float64)
tensor([-136.6626, -132.8521, -135.5514, -137.9865, -137.0415],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0137, device='cuda:0', dtype=torch.float64)
tensor([-136.5970, -132.8261, -135.3659, -137.8679, -137.0620],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0140, device='cuda:0', dtype=torch.float64)
tensor([-136.3233, -132.5881, -135.5377, -137.7305, -136.8567],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0139, device='cuda:0', dtype=torch.float64)
tensor([-136.2397, -132.2580, -136.0392, -137.8506, -136.5770],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0109, device='cuda:0', dtype=torch.float64)
tensor([-136.4322, -131.9802, -136.6986, -138.2346, -136.3752],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0149, device='cuda:0', dtype=torch.float64)
tensor([-136.4531, -131.7769, -136.7987, -138.2574, -136.2936],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0156, device='cuda:0', dtype=torch.float64)
tensor([-136.4165, -131.5758, -136.3146, -137.9885, -136.4043],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0157, device='cuda:0', dtype=torch.float64)
tensor([-137.7125, -131.8066, -135.9165, -138.6191, -136.9570],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0133, device='cuda:0', dtype=torch.float64)
tensor([-138.2085, -131.8302, -135.7779, -138.8279, -137.1763],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0131, device='cuda:0', dtype=torch.float64)
tensor([-138.1244, -131.6788, -135.6557, -138.6998, -137.1696],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0145, device='cuda:0', dtype=torch.float64)
tensor([-137.8195, -131.5864, -135.7642, -138.5194, -136.9677],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0121, device='cuda:0', dtype=torch.float64)
tensor([-137.7326, -131.5757, -135.5613, -138.3270, -136.9281],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0125, device='cuda:0', dtype=torch.float64)
tensor([-137.8968, -131.7190, -135.3642, -138.3114, -136.9673],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0124, device='cuda:0', dtype=torch.float64)
tensor([-137.9557, -131.8306, -135.2991, -138.2870, -136.8886],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0158, device='cuda:0', dtype=torch.float64)
tensor([-138.0882, -132.1696, -134.8290, -138.1400, -137.0022],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0148, device='cuda:0', dtype=torch.float64)
tensor([-137.6101, -132.3094, -134.3302, -137.6039, -136.9486],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0133, device='cuda:0', dtype=torch.float64)
tensor([-136.9523, -132.4648, -134.2016, -137.1259, -136.7459],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0145, device='cuda:0', dtype=torch.float64)
tensor([-136.3942, -132.6264, -134.2436, -136.7451, -136.5790],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0141, device='cuda:0', dtype=torch.float64)
tensor([-136.0681, -132.6045, -134.6109, -136.6149, -136.2242],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0135, device='cuda:0', dtype=torch.float64)
tensor([-136.1906, -132.6893, -135.1524, -136.8668, -135.8897],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0133, device='cuda:0', dtype=torch.float64)
tensor([-136.4125, -132.7933, -135.5038, -137.1443, -135.7423],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0144, device='cuda:0', dtype=torch.float64)
tensor([-136.6658, -132.8087, -135.8088, -137.4245, -135.6330],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0146, device='cuda:0', dtype=torch.float64)
tensor([-137.6338, -132.9235, -135.9224, -138.1073, -135.8485],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0141, device='cuda:0', dtype=torch.float64)
tensor([-137.8552, -132.7618, -136.9020, -138.6744, -135.6246],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0150, device='cuda:0', dtype=torch.float64)
tensor([-138.0277, -132.6712, -137.8463, -139.2610, -135.5203],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0150, device='cuda:0', dtype=torch.float64)
tensor([-138.0653, -132.5788, -138.0683, -139.4634, -135.5601],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0158, device='cuda:0', dtype=torch.float64)
tensor([-137.8784, -132.2046, -136.8086, -138.8386, -135.8282],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0127, device='cuda:0', dtype=torch.float64)
tensor([-137.9327, -131.9600, -135.5337, -138.3716, -136.2969],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0145, device='cuda:0', dtype=torch.float64)
tensor([-138.1462, -131.8988, -134.3056, -138.0506, -136.9349],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0144, device='cuda:0', dtype=torch.float64)
tensor([-137.9322, -131.4579, -133.6921, -137.7102, -137.1705],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0148, device='cuda:0', dtype=torch.float64)
tensor([-137.0071, -130.8274, -133.5670, -137.1447, -136.9185],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0148, device='cuda:0', dtype=torch.float64)
tensor([-136.1735, -130.4915, -133.3411, -136.5836, -136.7484],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0140, device='cuda:0', dtype=torch.float64)
tensor([-135.7999, -130.2189, -133.2684, -136.3854, -136.5775],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0144, device='cuda:0', dtype=torch.float64)
tensor([-136.4137, -130.2617, -133.6499, -136.9572, -136.4894],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0143, device='cuda:0', dtype=torch.float64)
tensor([-137.0485, -130.3442, -134.5969, -137.7683, -136.2301],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0138, device='cuda:0', dtype=torch.float64)
tensor([-136.8688, -130.2811, -136.1880, -138.4100, -135.6465],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0169, device='cuda:0', dtype=torch.float64)
tensor([-135.6910, -130.1401, -137.5364, -138.3339, -134.9139],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0151, device='cuda:0', dtype=torch.float64)
tensor([-134.9450, -130.0322, -137.4480, -137.8260, -134.5921],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0160, device='cuda:0', dtype=torch.float64)
tensor([-133.3939, -129.7191, -136.9707, -136.5764, -134.1472],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0153, device='cuda:0', dtype=torch.float64)
tensor([-133.0031, -129.7481, -135.5154, -135.7372, -134.3230],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0149, device='cuda:0', dtype=torch.float64)
tensor([-134.0292, -130.3645, -133.4786, -135.7347, -135.3979],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0153, device='cuda:0', dtype=torch.float64)
tensor([-136.3141, -131.8638, -131.8667, -136.7570, -137.2551],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0126, device='cuda:0', dtype=torch.float64)
tensor([-138.5625, -133.2832, -131.0946, -138.0267, -138.8839],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0150, device='cuda:0', dtype=torch.float64)
tensor([-139.7099, -133.9603, -130.9391, -138.7583, -139.5211],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0160, device='cuda:0', dtype=torch.float64)
tensor([-140.7993, -134.3337, -131.0580, -139.4879, -139.8714],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0146, device='cuda:0', dtype=torch.float64)
tensor([-141.6223, -134.0758, -131.7928, -140.2087, -139.5456],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0154, device='cuda:0', dtype=torch.float64)
tensor([-142.5159, -133.6755, -132.9304, -141.1522, -139.1838],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0152, device='cuda:0', dtype=torch.float64)
tensor([-141.9841, -132.8588, -134.4685, -141.4794, -138.1021],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0154, device='cuda:0', dtype=torch.float64)
tensor([-140.8127, -132.0152, -136.1507, -141.5389, -136.9568],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0173, device='cuda:0', dtype=torch.float64)
tensor([-138.7790, -131.2128, -137.1963, -140.7572, -135.8201],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0131, device='cuda:0', dtype=torch.float64)
tensor([-136.7914, -130.5158, -137.9343, -139.8173, -134.9370],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0172, device='cuda:0', dtype=torch.float64)
tensor([-134.8133, -129.7936, -138.0698, -138.5155, -134.2346],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0157, device='cuda:0', dtype=torch.float64)
tensor([-133.5628, -129.2956, -136.8488, -137.1084, -134.0244],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0150, device='cuda:0', dtype=torch.float64)
tensor([-133.0773, -129.2708, -135.6633, -136.3154, -134.1957],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0156, device='cuda:0', dtype=torch.float64)
tensor([-133.0435, -129.3760, -134.4635, -135.8618, -134.6626],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0155, device='cuda:0', dtype=torch.float64)
tensor([-133.2931, -129.9257, -133.1413, -135.6146, -135.5311],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0173, device='cuda:0', dtype=torch.float64)
tensor([-134.0348, -130.2343, -132.4643, -135.8920, -136.1393],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0152, device='cuda:0', dtype=torch.float64)
tensor([-134.2680, -129.9372, -132.4578, -135.9807, -136.0286],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0150, device='cuda:0', dtype=torch.float64)
tensor([-134.2957, -129.4070, -132.9751, -136.0819, -135.4879],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0160, device='cuda:0', dtype=torch.float64)
tensor([-134.6584, -129.1349, -133.6266, -136.4683, -135.1055],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0138, device='cuda:0', dtype=torch.float64)
tensor([-135.4119, -129.1517, -134.7177, -137.3179, -134.8267],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0138, device='cuda:0', dtype=torch.float64)
tensor([-135.8068, -129.3465, -135.3757, -137.8020, -134.6845],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0173, device='cuda:0', dtype=torch.float64)
tensor([-135.6305, -129.4469, -135.6322, -137.7770, -134.4802],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0145, device='cuda:0', dtype=torch.float64)
tensor([-135.3680, -129.6150, -134.8946, -137.2710, -134.4996],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0136, device='cuda:0', dtype=torch.float64)
tensor([-135.2033, -129.9499, -134.2307, -136.9084, -134.6221],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0133, device='cuda:0', dtype=torch.float64)
tensor([-134.8531, -130.2440, -133.8724, -136.5215, -134.5919],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0155, device='cuda:0', dtype=torch.float64)
tensor([-134.8242, -130.4779, -133.3619, -136.2895, -134.7607],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0139, device='cuda:0', dtype=torch.float64)
tensor([-135.4758, -130.7122, -132.8901, -136.5146, -135.0842],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0161, device='cuda:0', dtype=torch.float64)
tensor([-135.9115, -130.6359, -133.0587, -136.8026, -135.0344],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0153, device='cuda:0', dtype=torch.float64)
tensor([-135.8013, -130.3731, -133.5206, -136.8631, -134.7493],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0144, device='cuda:0', dtype=torch.float64)
tensor([-135.8125, -130.1329, -133.9284, -137.0016, -134.6319],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0144, device='cuda:0', dtype=torch.float64)
tensor([-135.4817, -129.8524, -134.5011, -137.0147, -134.3643],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0148, device='cuda:0', dtype=torch.float64)
tensor([-135.4486, -129.6466, -134.9964, -137.1958, -134.3176],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0162, device='cuda:0', dtype=torch.float64)
tensor([-135.1289, -129.5000, -134.3717, -136.7102, -134.3324],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0155, device='cuda:0', dtype=torch.float64)
tensor([-134.2031, -129.2895, -133.3677, -135.6892, -134.2531],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0126, device='cuda:0', dtype=torch.float64)
tensor([-133.4333, -129.1674, -132.7093, -134.9654, -134.2179],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0134, device='cuda:0', dtype=torch.float64)
tensor([-132.9281, -129.2868, -131.9480, -134.4022, -134.4076],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0155, device='cuda:0', dtype=torch.float64)
tensor([-133.1153, -129.5219, -131.3081, -134.3095, -134.7271],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0153, device='cuda:0', dtype=torch.float64)
tensor([-133.2121, -129.6169, -130.8433, -134.1838, -134.9467],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0164, device='cuda:0', dtype=torch.float64)
tensor([-133.4959, -129.7832, -130.5304, -134.2114, -135.0855],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0157, device='cuda:0', dtype=torch.float64)
tensor([-134.1353, -129.7678, -130.5223, -134.5173, -134.9321],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0143, device='cuda:0', dtype=torch.float64)
tensor([-134.8285, -129.4717, -131.0984, -134.9920, -134.4519],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0154, device='cuda:0', dtype=torch.float64)
tensor([-135.4228, -129.4054, -131.9913, -135.5759, -133.9519],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0136, device='cuda:0', dtype=torch.float64)
tensor([-136.2198, -129.5430, -132.5617, -136.2367, -133.8425],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0157, device='cuda:0', dtype=torch.float64)
tensor([-136.9754, -129.8323, -133.0071, -136.8831, -133.7999],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0161, device='cuda:0', dtype=torch.float64)
tensor([-138.2074, -130.4172, -133.1529, -137.7495, -134.0951],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0149, device='cuda:0', dtype=torch.float64)
tensor([-138.5871, -130.8461, -133.2027, -138.0514, -134.0170],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0151, device='cuda:0', dtype=torch.float64)
tensor([-139.0271, -131.2523, -132.6216, -138.1214, -134.2425],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0137, device='cuda:0', dtype=torch.float64)
tensor([-139.1477, -131.4674, -132.0562, -138.0273, -134.3831],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0155, device='cuda:0', dtype=torch.float64)
tensor([-138.5182, -131.4411, -131.4179, -137.4697, -134.2426],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0145, device='cuda:0', dtype=torch.float64)
tensor([-137.5230, -131.1716, -131.2691, -136.8526, -133.7224],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0128, device='cuda:0', dtype=torch.float64)
tensor([-136.1939, -130.9593, -130.8154, -135.9409, -133.3181],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0151, device='cuda:0', dtype=torch.float64)
tensor([-134.5811, -130.6347, -130.3434, -134.8554, -132.9918],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0166, device='cuda:0', dtype=torch.float64)
tensor([-133.8575, -130.4384, -129.9515, -134.3182, -132.9863],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0159, device='cuda:0', dtype=torch.float64)
tensor([-132.8071, -129.9249, -129.8749, -133.6667, -132.6691],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0172, device='cuda:0', dtype=torch.float64)
tensor([-131.4884, -128.9562, -130.3618, -132.9557, -131.8299],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0150, device='cuda:0', dtype=torch.float64)
tensor([-130.7381, -128.1020, -131.1287, -132.7181, -131.0642],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0141, device='cuda:0', dtype=torch.float64)
tensor([-130.7657, -127.4528, -131.8153, -132.9841, -130.7284],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0188, device='cuda:0', dtype=torch.float64)
tensor([-131.2372, -126.9739, -132.2305, -133.4571, -130.7830],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0144, device='cuda:0', dtype=torch.float64)
tensor([-131.4628, -126.6895, -132.2387, -133.6204, -130.9425],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0142, device='cuda:0', dtype=torch.float64)
tensor([-131.8865, -126.6262, -131.7732, -133.7216, -131.2362],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0137, device='cuda:0', dtype=torch.float64)
tensor([-131.3070, -126.3967, -131.1259, -133.1386, -131.2922],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0161, device='cuda:0', dtype=torch.float64)
tensor([-131.1503, -126.1895, -131.0725, -133.0401, -131.3506],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0125, device='cuda:0', dtype=torch.float64)
tensor([-131.3340, -126.4215, -130.6204, -133.0471, -131.5509],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0150, device='cuda:0', dtype=torch.float64)
tensor([-131.3478, -126.5491, -130.3519, -132.9967, -131.6482],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0140, device='cuda:0', dtype=torch.float64)
tensor([-132.1730, -127.1062, -129.9299, -133.4462, -132.0631],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0163, device='cuda:0', dtype=torch.float64)
tensor([-132.6842, -127.7220, -129.8741, -133.8078, -132.1677],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0137, device='cuda:0', dtype=torch.float64)
tensor([-133.0575, -128.1071, -129.9851, -134.1249, -132.1388],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0144, device='cuda:0', dtype=torch.float64)
tensor([-133.4002, -128.3622, -130.1456, -134.4370, -132.0833],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0147, device='cuda:0', dtype=torch.float64)
tensor([-133.4774, -128.4216, -130.3996, -134.6169, -131.8597],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0142, device='cuda:0', dtype=torch.float64)
tensor([-133.0841, -128.1862, -131.1182, -134.6756, -131.2807],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0172, device='cuda:0', dtype=torch.float64)
tensor([-133.4051, -128.0885, -131.6890, -135.1341, -131.1235],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0145, device='cuda:0', dtype=torch.float64)
tensor([-133.3296, -127.8839, -131.8224, -135.1730, -130.9794],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0153, device='cuda:0', dtype=torch.float64)
tensor([-133.0226, -127.6160, -131.8720, -135.0438, -130.7581],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0153, device='cuda:0', dtype=torch.float64)
tensor([-132.0315, -127.1609, -131.5086, -134.3132, -130.4093],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0147, device='cuda:0', dtype=torch.float64)
tensor([-130.9461, -126.6424, -130.5766, -133.3405, -130.3089],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0159, device='cuda:0', dtype=torch.float64)
tensor([-130.9084, -126.5619, -129.2855, -132.9596, -130.7402],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0138, device='cuda:0', dtype=torch.float64)
tensor([-131.0345, -126.6396, -128.2245, -132.8063, -131.2941],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0135, device='cuda:0', dtype=torch.float64)
tensor([-131.9003, -127.1041, -127.3886, -133.2098, -132.0383],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0164, device='cuda:0', dtype=torch.float64)
tensor([-132.2632, -127.3567, -126.8459, -133.3873, -132.4817],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0133, device='cuda:0', dtype=torch.float64)
tensor([-132.3268, -127.2485, -126.7817, -133.4317, -132.3947],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0167, device='cuda:0', dtype=torch.float64)
tensor([-132.7776, -127.1291, -126.9967, -133.7366, -132.2334],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0150, device='cuda:0', dtype=torch.float64)
tensor([-132.0530, -126.3490, -127.9246, -133.5157, -131.2684],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0146, device='cuda:0', dtype=torch.float64)
tensor([-132.3283, -126.0756, -129.2569, -134.0909, -130.7176],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0161, device='cuda:0', dtype=torch.float64)
tensor([-131.5553, -125.8359, -130.9907, -134.2643, -129.9537],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0159, device='cuda:0', dtype=torch.float64)
tensor([-131.5402, -126.1514, -132.4055, -134.8154, -129.7023],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0153, device='cuda:0', dtype=torch.float64)
tensor([-130.9113, -126.4111, -133.3632, -134.7525, -129.3323],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0156, device='cuda:0', dtype=torch.float64)
tensor([-130.0847, -126.4263, -132.9731, -133.9495, -128.9739],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0158, device='cuda:0', dtype=torch.float64)
tensor([-128.7641, -126.2429, -132.2400, -132.6509, -128.6642],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0159, device='cuda:0', dtype=torch.float64)
tensor([-128.6517, -126.6271, -130.9451, -132.0281, -128.8320],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0173, device='cuda:0', dtype=torch.float64)
tensor([-129.0702, -127.2837, -129.4328, -131.7800, -129.4564],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0146, device='cuda:0', dtype=torch.float64)
tensor([-130.0104, -128.1854, -128.0799, -132.0180, -130.5673],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0171, device='cuda:0', dtype=torch.float64)
tensor([-131.8919, -129.3634, -126.8221, -132.9640, -132.1228],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0154, device='cuda:0', dtype=torch.float64)
tensor([-133.3906, -130.4684, -126.0459, -133.7774, -133.5792],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0170, device='cuda:0', dtype=torch.float64)
tensor([-134.2607, -130.7960, -125.7723, -134.2437, -134.1299],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0134, device='cuda:0', dtype=torch.float64)
tensor([-135.0275, -130.8267, -125.7438, -134.6091, -134.3242],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0145, device='cuda:0', dtype=torch.float64)
tensor([-134.7949, -129.8264, -126.1715, -134.3756, -133.4752],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0144, device='cuda:0', dtype=torch.float64)
tensor([-133.7414, -128.3977, -127.1435, -133.8093, -131.9803],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0154, device='cuda:0', dtype=torch.float64)
tensor([-132.1465, -127.0787, -128.6396, -133.2026, -130.4492],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0137, device='cuda:0', dtype=torch.float64)
tensor([-131.4697, -126.5215, -130.3004, -133.3772, -129.6129],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0149, device='cuda:0', dtype=torch.float64)
tensor([-131.0016, -126.2749, -131.3071, -133.5171, -129.2464],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0141, device='cuda:0', dtype=torch.float64)
tensor([-130.6675, -126.0219, -131.8028, -133.5590, -129.0726],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0174, device='cuda:0', dtype=torch.float64)
tensor([-130.3209, -125.6478, -130.3274, -132.7755, -129.1762],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0147, device='cuda:0', dtype=torch.float64)
tensor([-129.4988, -125.3778, -128.9679, -131.7981, -129.2707],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0159, device='cuda:0', dtype=torch.float64)
tensor([-128.2451, -125.1361, -127.9182, -130.7241, -129.4286],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0143, device='cuda:0', dtype=torch.float64)
tensor([-127.4617, -125.0792, -127.3608, -130.1888, -129.6887],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0157, device='cuda:0', dtype=torch.float64)
tensor([-127.3570, -125.4439, -126.7090, -130.0861, -130.3584],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0164, device='cuda:0', dtype=torch.float64)
tensor([-128.0580, -126.0748, -126.2091, -130.4962, -131.0971],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0161, device='cuda:0', dtype=torch.float64)
tensor([-128.9542, -126.4966, -125.9805, -131.0112, -131.5513],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0164, device='cuda:0', dtype=torch.float64)
tensor([-130.1413, -127.2688, -125.8697, -131.7495, -132.0834],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0150, device='cuda:0', dtype=torch.float64)
tensor([-130.9443, -127.3833, -126.3793, -132.2799, -131.6631],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0150, device='cuda:0', dtype=torch.float64)
tensor([-131.9928, -127.5970, -127.2431, -133.1306, -131.1621],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0148, device='cuda:0', dtype=torch.float64)
tensor([-133.5753, -127.9969, -128.6413, -134.5508, -130.8279],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0153, device='cuda:0', dtype=torch.float64)
tensor([-134.6834, -128.5955, -130.1743, -135.9227, -130.6341],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0139, device='cuda:0', dtype=torch.float64)
tensor([-135.9899, -129.4717, -131.6112, -137.4498, -130.7711],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0171, device='cuda:0', dtype=torch.float64)
tensor([-136.1935, -129.9697, -132.6820, -138.1653, -130.5295],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0153, device='cuda:0', dtype=torch.float64)
tensor([-135.3265, -129.8251, -132.2561, -137.4457, -130.1165],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0171, device='cuda:0', dtype=torch.float64)
tensor([-133.0336, -128.9520, -131.8190, -135.8251, -129.1427],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0174, device='cuda:0', dtype=torch.float64)
tensor([-130.9322, -127.9441, -130.5847, -133.9978, -128.6241],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0180, device='cuda:0', dtype=torch.float64)
tensor([-129.4951, -127.2881, -128.8312, -132.4976, -128.7926],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0167, device='cuda:0', dtype=torch.float64)
tensor([-128.5884, -126.8489, -127.7142, -131.6726, -129.1498],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0158, device='cuda:0', dtype=torch.float64)
tensor([-128.4296, -126.4550, -126.6905, -131.4070, -129.7096],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0142, device='cuda:0', dtype=torch.float64)
tensor([-128.4686, -126.0289, -125.8779, -131.2929, -130.1718],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0163, device='cuda:0', dtype=torch.float64)
tensor([-128.8381, -125.4289, -125.2673, -131.3881, -130.5140],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0177, device='cuda:0', dtype=torch.float64)
tensor([-128.3233, -124.4275, -125.1951, -131.0208, -130.1083],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0145, device='cuda:0', dtype=torch.float64)
tensor([-127.7258, -123.3725, -125.3418, -130.6340, -129.5313],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0157, device='cuda:0', dtype=torch.float64)
tensor([-128.1049, -122.7765, -125.6181, -130.8795, -129.2770],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0155, device='cuda:0', dtype=torch.float64)
tensor([-127.8680, -122.3632, -125.7037, -130.7515, -128.9991],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0142, device='cuda:0', dtype=torch.float64)
tensor([-127.5471, -122.2594, -125.5673, -130.5424, -128.7788],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0154, device='cuda:0', dtype=torch.float64)
tensor([-127.4609, -122.3294, -125.8325, -130.5764, -128.4090],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0138, device='cuda:0', dtype=torch.float64)
tensor([-127.4061, -122.6745, -125.5846, -130.4917, -128.2664],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0143, device='cuda:0', dtype=torch.float64)
tensor([-127.1981, -123.0609, -125.3524, -130.2868, -128.1160],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0188, device='cuda:0', dtype=torch.float64)
tensor([-126.6681, -123.2869, -125.6196, -129.9585, -127.6159],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0148, device='cuda:0', dtype=torch.float64)
tensor([-126.9230, -123.8441, -125.6957, -130.0686, -127.4991],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0145, device='cuda:0', dtype=torch.float64)
tensor([-127.1753, -124.1917, -126.0243, -130.2513, -127.2712],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0167, device='cuda:0', dtype=torch.float64)
tensor([-126.3138, -123.8344, -126.5997, -129.7796, -126.7651],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0147, device='cuda:0', dtype=torch.float64)
tensor([-126.1220, -123.6864, -127.2524, -129.7979, -126.3940],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0170, device='cuda:0', dtype=torch.float64)
tensor([-126.7330, -123.7759, -127.1469, -130.1219, -126.4671],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0146, device='cuda:0', dtype=torch.float64)
tensor([-127.3375, -123.7814, -126.8617, -130.3838, -126.6812],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0164, device='cuda:0', dtype=torch.float64)
tensor([-128.3721, -123.8695, -125.9220, -130.6610, -127.3126],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0183, device='cuda:0', dtype=torch.float64)
tensor([-128.2259, -123.7472, -125.1534, -130.2429, -127.6349],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0143, device='cuda:0', dtype=torch.float64)
tensor([-127.6717, -123.4105, -124.7944, -129.7211, -127.6702],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0132, device='cuda:0', dtype=torch.float64)
tensor([-127.0539, -123.2652, -124.2581, -129.1483, -127.8922],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0158, device='cuda:0', dtype=torch.float64)
tensor([-126.6834, -122.9280, -124.2318, -128.8428, -127.7503],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0140, device='cuda:0', dtype=torch.float64)
tensor([-125.8664, -122.3865, -124.4784, -128.3246, -127.3498],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0178, device='cuda:0', dtype=torch.float64)
tensor([-124.9058, -121.6084, -125.3330, -127.8590, -126.6189],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0149, device='cuda:0', dtype=torch.float64)
tensor([-124.7306, -121.2774, -126.0024, -127.8609, -126.1691],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0165, device='cuda:0', dtype=torch.float64)
tensor([-125.2171, -121.4310, -126.2239, -128.1824, -125.9974],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0149, device='cuda:0', dtype=torch.float64)
tensor([-126.2812, -121.8521, -126.1184, -128.7491, -126.0674],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0150, device='cuda:0', dtype=torch.float64)
tensor([-127.4949, -122.6130, -125.5428, -129.2608, -126.4088],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0145, device='cuda:0', dtype=torch.float64)
tensor([-128.8495, -123.2844, -125.3451, -129.9777, -126.7502],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0148, device='cuda:0', dtype=torch.float64)
tensor([-129.2268, -123.4877, -125.4588, -130.1775, -126.6842],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0140, device='cuda:0', dtype=torch.float64)
tensor([-128.6166, -123.2391, -125.9291, -129.9373, -126.1566],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0131, device='cuda:0', dtype=torch.float64)
tensor([-127.8629, -122.9939, -126.4533, -129.6332, -125.6501],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0138, device='cuda:0', dtype=torch.float64)
tensor([-126.5462, -122.5861, -126.9915, -128.9577, -125.0760],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0168, device='cuda:0', dtype=torch.float64)
tensor([-125.8311, -122.4795, -127.1890, -128.5302, -124.7233],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0151, device='cuda:0', dtype=torch.float64)
tensor([-125.1297, -122.2752, -126.9416, -127.9341, -124.6047],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0141, device='cuda:0', dtype=torch.float64)
tensor([-124.6781, -122.1502, -126.5386, -127.4820, -124.6427],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0171, device='cuda:0', dtype=torch.float64)
tensor([-125.5753, -122.3667, -125.5414, -127.8017, -125.0961],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0150, device='cuda:0', dtype=torch.float64)
tensor([-126.2919, -122.4911, -124.8302, -128.0757, -125.5128],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0158, device='cuda:0', dtype=torch.float64)
tensor([-128.1573, -123.0175, -124.2922, -129.0986, -126.2526],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0140, device='cuda:0', dtype=torch.float64)
tensor([-129.6239, -123.4626, -124.1615, -129.9918, -126.8284],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0173, device='cuda:0', dtype=torch.float64)
tensor([-130.6957, -123.6658, -123.8357, -130.5344, -127.4813],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0152, device='cuda:0', dtype=torch.float64)
tensor([-130.4997, -123.3689, -123.6514, -130.4023, -127.4601],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0174, device='cuda:0', dtype=torch.float64)
tensor([-129.4028, -122.6729, -123.8272, -129.8039, -126.8301],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0185, device='cuda:0', dtype=torch.float64)
tensor([-128.3125, -122.2693, -123.8369, -129.1385, -126.2859],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0163, device='cuda:0', dtype=torch.float64)
tensor([-127.6040, -122.0409, -123.8345, -128.7279, -125.9269],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0174, device='cuda:0', dtype=torch.float64)
tensor([-126.3272, -121.5663, -124.1245, -128.0728, -125.3400],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0154, device='cuda:0', dtype=torch.float64)
tensor([-124.5479, -120.9754, -124.7367, -127.2107, -124.5565],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0149, device='cuda:0', dtype=torch.float64)
tensor([-123.2628, -120.5182, -125.4293, -126.6777, -124.0438],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0168, device='cuda:0', dtype=torch.float64)
tensor([-122.3113, -120.3510, -125.6313, -126.1718, -123.8323],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0161, device='cuda:0', dtype=torch.float64)
tensor([-122.7443, -120.6688, -125.4905, -126.4850, -123.8777],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0176, device='cuda:0', dtype=torch.float64)
tensor([-123.3762, -121.2192, -125.1196, -126.8393, -124.0097],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0160, device='cuda:0', dtype=torch.float64)
tensor([-123.9254, -121.7653, -124.4929, -127.0102, -124.2837],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0177, device='cuda:0', dtype=torch.float64)
tensor([-125.1265, -122.4431, -124.1216, -127.6707, -124.6973],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0167, device='cuda:0', dtype=torch.float64)
tensor([-125.9296, -122.9226, -124.1088, -128.1809, -124.8923],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0161, device='cuda:0', dtype=torch.float64)
tensor([-125.8339, -122.8649, -124.4671, -128.2317, -124.6496],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0155, device='cuda:0', dtype=torch.float64)
tensor([-126.1701, -123.0612, -124.5999, -128.5251, -124.7161],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0150, device='cuda:0', dtype=torch.float64)
tensor([-126.7978, -123.3204, -124.3370, -128.8821, -125.0646],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0177, device='cuda:0', dtype=torch.float64)
tensor([-126.8736, -123.3751, -123.7041, -128.8315, -125.4338],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0151, device='cuda:0', dtype=torch.float64)
tensor([-126.9806, -123.0266, -123.7646, -128.9658, -125.3660],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0165, device='cuda:0', dtype=torch.float64)
tensor([-127.8221, -122.9689, -123.7001, -129.5475, -125.6951],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0177, device='cuda:0', dtype=torch.float64)
tensor([-128.4296, -122.8014, -124.3865, -130.1825, -125.6144],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0180, device='cuda:0', dtype=torch.float64)
tensor([-127.7584, -122.1431, -125.2738, -130.0968, -125.0734],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0153, device='cuda:0', dtype=torch.float64)
tensor([-126.3419, -121.4150, -126.1380, -129.5421, -124.3226],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0159, device='cuda:0', dtype=torch.float64)
tensor([-124.4351, -120.6496, -126.2932, -128.3475, -123.5862],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0178, device='cuda:0', dtype=torch.float64)
tensor([-122.3222, -119.8864, -126.0761, -126.8723, -122.9431],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0138, device='cuda:0', dtype=torch.float64)
tensor([-121.0026, -119.4460, -125.6096, -125.8510, -122.7394],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0211, device='cuda:0', dtype=torch.float64)
tensor([-120.9736, -119.7726, -123.6049, -125.3895, -123.5572],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0153, device='cuda:0', dtype=torch.float64)
tensor([-122.1086, -121.2405, -122.1882, -126.0125, -125.1801],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0158, device='cuda:0', dtype=torch.float64)
tensor([-123.8411, -122.8393, -121.5459, -127.1322, -126.6499],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0147, device='cuda:0', dtype=torch.float64)
tensor([-125.5081, -123.8108, -121.1130, -128.1215, -127.4766],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0181, device='cuda:0', dtype=torch.float64)
tensor([-126.1565, -123.5202, -121.0859, -128.3697, -127.1133],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0157, device='cuda:0', dtype=torch.float64)
tensor([-127.5332, -123.2669, -121.4768, -129.0514, -126.7463],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0148, device='cuda:0', dtype=torch.float64)
tensor([-127.5604, -122.4478, -122.4604, -129.1845, -125.9244],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0152, device='cuda:0', dtype=torch.float64)
tensor([-127.0264, -121.5157, -124.0412, -129.3041, -124.9958],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0139, device='cuda:0', dtype=torch.float64)
tensor([-126.7286, -121.0950, -125.2050, -129.5781, -124.6372],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0164, device='cuda:0', dtype=torch.float64)
tensor([-124.7950, -120.3040, -126.5155, -128.9374, -123.7596],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0166, device='cuda:0', dtype=torch.float64)
tensor([-123.0922, -119.6266, -126.5796, -127.8895, -123.2239],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0141, device='cuda:0', dtype=torch.float64)
tensor([-121.6403, -119.0362, -125.9336, -126.7116, -122.9427],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0162, device='cuda:0', dtype=torch.float64)
tensor([-120.5184, -118.7179, -124.9892, -125.7291, -122.9885],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0177, device='cuda:0', dtype=torch.float64)
tensor([-120.9381, -119.0526, -123.5795, -125.6956, -123.5828],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0157, device='cuda:0', dtype=torch.float64)
tensor([-122.5361, -119.9820, -122.1793, -126.4801, -124.6787],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0155, device='cuda:0', dtype=torch.float64)
tensor([-124.7245, -121.2404, -121.2602, -127.7069, -125.8101],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0147, device='cuda:0', dtype=torch.float64)
tensor([-126.8214, -122.5707, -120.6805, -128.9082, -126.9379],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0149, device='cuda:0', dtype=torch.float64)
tensor([-128.9436, -123.7091, -120.3980, -130.1389, -127.9782],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0153, device='cuda:0', dtype=torch.float64)
tensor([-129.7743, -124.3062, -120.2701, -130.6713, -128.4003],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0169, device='cuda:0', dtype=torch.float64)
tensor([-129.1849, -123.7706, -120.5642, -130.3338, -127.5940],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0151, device='cuda:0', dtype=torch.float64)
tensor([-127.3629, -122.4887, -121.2100, -129.3339, -125.9628],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0163, device='cuda:0', dtype=torch.float64)
tensor([-125.9119, -121.2071, -122.5814, -128.7458, -124.4530],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0150, device='cuda:0', dtype=torch.float64)
tensor([-124.2575, -120.2705, -123.6423, -128.0614, -123.3917],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0161, device='cuda:0', dtype=torch.float64)
tensor([-122.6298, -119.3732, -124.8248, -127.3928, -122.5903],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0156, device='cuda:0', dtype=torch.float64)
tensor([-121.5521, -118.7343, -125.7504, -126.9660, -122.1305],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0161, device='cuda:0', dtype=torch.float64)
tensor([-120.1928, -118.0381, -126.9576, -126.4282, -121.7435],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0167, device='cuda:0', dtype=torch.float64)
tensor([-119.2875, -117.4140, -127.2453, -125.8821, -121.5979],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0187, device='cuda:0', dtype=torch.float64)
tensor([-118.6771, -116.8150, -126.1020, -125.0661, -121.3995],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0167, device='cuda:0', dtype=torch.float64)
tensor([-118.3855, -116.3436, -123.9214, -124.2302, -121.3719],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0156, device='cuda:0', dtype=torch.float64)
tensor([-118.6587, -116.4109, -121.8734, -123.9241, -121.7055],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0173, device='cuda:0', dtype=torch.float64)
tensor([-120.2335, -117.3853, -120.0178, -124.6714, -122.7204],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0165, device='cuda:0', dtype=torch.float64)
tensor([-122.7406, -118.6831, -118.9957, -126.0923, -124.0407],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0172, device='cuda:0', dtype=torch.float64)
tensor([-125.3367, -120.1683, -118.5618, -127.6034, -125.2713],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0201, device='cuda:0', dtype=torch.float64)
tensor([-125.7418, -120.0677, -118.9038, -127.7876, -124.9301],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0174, device='cuda:0', dtype=torch.float64)
tensor([-125.5035, -119.6499, -119.2430, -127.6483, -124.2933],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0154, device='cuda:0', dtype=torch.float64)
tensor([-124.6482, -119.0024, -119.8465, -127.2051, -123.2908],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0158, device='cuda:0', dtype=torch.float64)
tensor([-122.6682, -118.0252, -120.4931, -126.1332, -122.0045],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0156, device='cuda:0', dtype=torch.float64)
tensor([-120.3959, -117.2067, -121.0739, -124.8835, -120.8477],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0163, device='cuda:0', dtype=torch.float64)
tensor([-119.2373, -116.9056, -121.3760, -124.2564, -120.3424],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0148, device='cuda:0', dtype=torch.float64)
tensor([-118.6222, -116.7449, -121.6149, -123.9349, -120.0651],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0144, device='cuda:0', dtype=torch.float64)
tensor([-118.6773, -116.9125, -121.6626, -123.9946, -119.9681],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0167, device='cuda:0', dtype=torch.float64)
tensor([-119.2391, -117.1854, -121.8709, -124.3974, -119.9277],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0178, device='cuda:0', dtype=torch.float64)
tensor([-120.2670, -117.5339, -121.4343, -124.9517, -120.2577],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0151, device='cuda:0', dtype=torch.float64)
tensor([-121.3142, -117.9136, -121.0043, -125.4890, -120.7021],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0191, device='cuda:0', dtype=torch.float64)
tensor([-120.9620, -117.8643, -120.8530, -125.2119, -120.6229],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0164, device='cuda:0', dtype=torch.float64)
tensor([-121.2714, -118.1862, -120.3589, -125.2667, -120.9074],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0162, device='cuda:0', dtype=torch.float64)
tensor([-120.4624, -117.9963, -119.9414, -124.6489, -121.0020],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0154, device='cuda:0', dtype=torch.float64)
tensor([-119.9094, -118.3246, -119.5781, -124.2639, -121.4557],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0169, device='cuda:0', dtype=torch.float64)
tensor([-119.7878, -118.3693, -119.4379, -124.1057, -121.7507],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0148, device='cuda:0', dtype=torch.float64)
tensor([-119.9184, -118.3705, -119.2692, -124.1338, -121.9852],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0167, device='cuda:0', dtype=torch.float64)
tensor([-120.7022, -118.5379, -118.8599, -124.5276, -122.4450],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0183, device='cuda:0', dtype=torch.float64)
tensor([-121.2894, -118.1553, -118.6590, -124.7431, -122.5070],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0203, device='cuda:0', dtype=torch.float64)
tensor([-121.5056, -117.0140, -119.2904, -124.7733, -121.9318],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0171, device='cuda:0', dtype=torch.float64)
tensor([-123.0850, -116.8601, -120.1176, -125.8324, -122.2874],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0138, device='cuda:0', dtype=torch.float64)
tensor([-123.8219, -116.7237, -120.5107, -126.3538, -122.6816],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0184, device='cuda:0', dtype=torch.float64)
tensor([-123.8910, -116.6306, -119.9613, -126.1887, -122.9402],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0152, device='cuda:0', dtype=torch.float64)
tensor([-123.4504, -116.4571, -119.5907, -125.7905, -122.8842],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0150, device='cuda:0', dtype=torch.float64)
tensor([-122.6834, -116.2050, -119.4248, -125.2838, -122.5226],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0153, device='cuda:0', dtype=torch.float64)
tensor([-121.0568, -115.9407, -119.0438, -124.2405, -121.8900],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0166, device='cuda:0', dtype=torch.float64)
tensor([-120.0771, -115.9552, -119.1411, -123.7013, -121.3321],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0165, device='cuda:0', dtype=torch.float64)
tensor([-119.5087, -116.1060, -119.3482, -123.4299, -120.9101],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0158, device='cuda:0', dtype=torch.float64)
tensor([-119.3840, -116.6286, -119.1799, -123.3348, -120.7481],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0189, device='cuda:0', dtype=torch.float64)
tensor([-119.7548, -117.3539, -118.9933, -123.5722, -120.7403],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0161, device='cuda:0', dtype=torch.float64)
tensor([-119.6258, -117.9202, -118.7288, -123.4587, -120.7519],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0153, device='cuda:0', dtype=torch.float64)
tensor([-119.5534, -118.2425, -118.6608, -123.4186, -120.6242],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0184, device='cuda:0', dtype=torch.float64)
tensor([-120.0468, -118.6306, -118.2699, -123.6992, -120.8527],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0162, device='cuda:0', dtype=torch.float64)
tensor([-120.9828, -119.1160, -117.7308, -124.2612, -121.3174],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0164, device='cuda:0', dtype=torch.float64)
tensor([-122.6007, -119.9866, -117.0729, -125.2030, -122.2868],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0160, device='cuda:0', dtype=torch.float64)
tensor([-124.8879, -121.4628, -116.4740, -126.5464, -123.8059],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0153, device='cuda:0', dtype=torch.float64)
tensor([-125.8161, -121.8883, -116.2079, -127.0437, -124.3433],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0145, device='cuda:0', dtype=torch.float64)
tensor([-126.3357, -122.2237, -115.9234, -127.2999, -124.8129],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0157, device='cuda:0', dtype=torch.float64)
tensor([-125.2574, -121.4307, -115.8608, -126.5256, -124.1020],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0166, device='cuda:0', dtype=torch.float64)
tensor([-122.2159, -119.3635, -116.1097, -124.5493, -122.2013],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0156, device='cuda:0', dtype=torch.float64)
tensor([-119.3068, -117.2755, -116.7769, -122.6815, -120.3579],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0136, device='cuda:0', dtype=torch.float64)
tensor([-117.0534, -115.6699, -117.5255, -121.2704, -119.3031],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0192, device='cuda:0', dtype=torch.float64)
tensor([-115.0808, -114.2224, -118.6638, -120.1212, -118.5393],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0164, device='cuda:0', dtype=torch.float64)
tensor([-114.1164, -113.3170, -120.0517, -119.7639, -118.0588],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0191, device='cuda:0', dtype=torch.float64)
tensor([-115.0121, -113.2235, -120.0936, -120.4241, -118.0039],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0200, device='cuda:0', dtype=torch.float64)
tensor([-117.0381, -113.8591, -118.9309, -121.5008, -118.4782],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0169, device='cuda:0', dtype=torch.float64)
tensor([-119.6654, -114.8287, -117.9267, -122.9493, -119.4971],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0153, device='cuda:0', dtype=torch.float64)
tensor([-121.7260, -115.6110, -117.5284, -124.1144, -120.3623],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0164, device='cuda:0', dtype=torch.float64)
tensor([-123.1236, -116.4194, -116.9006, -124.7964, -121.0335],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0163, device='cuda:0', dtype=torch.float64)
tensor([-123.3711, -116.7803, -116.2828, -124.8077, -121.2616],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0158, device='cuda:0', dtype=torch.float64)
tensor([-122.3158, -116.4679, -116.0808, -124.1169, -120.6903],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0150, device='cuda:0', dtype=torch.float64)
tensor([-120.9118, -115.8977, -115.9359, -123.2181, -120.0424],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0195, device='cuda:0', dtype=torch.float64)
tensor([-118.7773, -114.9176, -116.3520, -122.0069, -118.9681],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0171, device='cuda:0', dtype=torch.float64)
tensor([-117.0658, -114.0742, -116.7959, -121.0611, -118.2937],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0194, device='cuda:0', dtype=torch.float64)
tensor([-116.0164, -113.7022, -117.4946, -120.5651, -117.5946],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0145, device='cuda:0', dtype=torch.float64)
tensor([-115.1277, -113.4651, -118.1674, -120.1911, -117.1388],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0165, device='cuda:0', dtype=torch.float64)
tensor([-114.7682, -113.6295, -118.1383, -119.9958, -116.9388],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0194, device='cuda:0', dtype=torch.float64)
tensor([-114.9612, -113.8925, -117.4591, -120.0387, -117.0623],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0153, device='cuda:0', dtype=torch.float64)
tensor([-116.0027, -114.4306, -116.5192, -120.6146, -117.4202],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0170, device='cuda:0', dtype=torch.float64)
tensor([-117.1426, -115.2250, -115.5127, -121.2060, -118.1010],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0186, device='cuda:0', dtype=torch.float64)
tensor([-118.6150, -115.7084, -115.1544, -122.0871, -118.5714],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0171, device='cuda:0', dtype=torch.float64)
tensor([-120.0988, -115.9671, -115.1283, -122.9804, -119.0715],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0166, device='cuda:0', dtype=torch.float64)
tensor([-121.4672, -116.2670, -115.3918, -123.8523, -119.4419],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0183, device='cuda:0', dtype=torch.float64)
tensor([-121.9233, -116.3353, -115.3858, -124.1028, -119.5497],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0152, device='cuda:0', dtype=torch.float64)
tensor([-121.9688, -116.2807, -115.2316, -124.0379, -119.5299],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0167, device='cuda:0', dtype=torch.float64)
tensor([-121.2363, -115.9963, -114.8163, -123.4549, -119.3359],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0171, device='cuda:0', dtype=torch.float64)
tensor([-119.2284, -115.1700, -114.5495, -122.2065, -118.7724],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0169, device='cuda:0', dtype=torch.float64)
tensor([-117.3736, -114.6679, -114.4976, -121.1311, -118.4699],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0160, device='cuda:0', dtype=torch.float64)
tensor([-116.0440, -114.4529, -114.6847, -120.3771, -118.4132],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0158, device='cuda:0', dtype=torch.float64)
tensor([-114.7468, -113.9451, -115.2139, -119.6508, -118.1559],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0149, device='cuda:0', dtype=torch.float64)
tensor([-113.9255, -113.3661, -115.6911, -119.1642, -117.6536],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0157, device='cuda:0', dtype=torch.float64)
tensor([-113.7957, -112.8267, -115.9259, -119.0385, -117.0552],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0147, device='cuda:0', dtype=torch.float64)
tensor([-113.8489, -112.3696, -116.3839, -119.1127, -116.4511],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0178, device='cuda:0', dtype=torch.float64)
tensor([-114.3480, -112.2229, -116.6673, -119.4979, -116.1342],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0157, device='cuda:0', dtype=torch.float64)
tensor([-114.7048, -112.0338, -116.9173, -119.8396, -116.0221],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0163, device='cuda:0', dtype=torch.float64)
tensor([-116.2348, -112.5328, -116.4845, -120.7177, -116.3605],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0163, device='cuda:0', dtype=torch.float64)
tensor([-117.1616, -112.8582, -116.2720, -121.2589, -116.5662],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0161, device='cuda:0', dtype=torch.float64)
tensor([-118.8569, -113.6570, -115.6990, -122.1768, -117.2208],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0173, device='cuda:0', dtype=torch.float64)
tensor([-119.7850, -114.1474, -115.8149, -122.8478, -117.4314],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0131, device='cuda:0', dtype=torch.float64)
tensor([-120.2271, -114.4647, -115.8429, -123.1783, -117.4703],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0178, device='cuda:0', dtype=torch.float64)
tensor([-119.7248, -114.3598, -115.3570, -122.7417, -117.2581],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0166, device='cuda:0', dtype=torch.float64)
tensor([-119.1316, -114.1398, -114.5604, -122.1860, -117.2964],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0152, device='cuda:0', dtype=torch.float64)
tensor([-117.4460, -113.5236, -113.9475, -121.0371, -116.8710],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0177, device='cuda:0', dtype=torch.float64)
tensor([-116.1379, -113.5002, -113.2018, -120.2040, -116.9876],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0183, device='cuda:0', dtype=torch.float64)
tensor([-115.9136, -114.1168, -112.7744, -120.1737, -117.5470],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0179, device='cuda:0', dtype=torch.float64)
tensor([-116.8557, -115.2857, -112.3299, -120.9447, -118.7189],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0168, device='cuda:0', dtype=torch.float64)
tensor([-116.8841, -115.3846, -112.2094, -121.0192, -118.8323],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0176, device='cuda:0', dtype=torch.float64)
tensor([-116.1865, -114.3905, -112.2149, -120.5137, -117.9648],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0178, device='cuda:0', dtype=torch.float64)
tensor([-114.8220, -112.5673, -112.7945, -119.6165, -116.4644],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0157, device='cuda:0', dtype=torch.float64)
tensor([-115.0041, -111.5656, -114.0554, -119.9281, -115.5827],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0174, device='cuda:0', dtype=torch.float64)
tensor([-115.7613, -111.5306, -115.5919, -120.8828, -115.4233],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0185, device='cuda:0', dtype=torch.float64)
tensor([-117.1359, -111.9797, -116.3138, -122.1481, -115.9224],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0197, device='cuda:0', dtype=torch.float64)
tensor([-117.8560, -112.2259, -115.9817, -122.5810, -116.2893],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0165, device='cuda:0', dtype=torch.float64)
tensor([-117.9298, -112.2179, -115.1387, -122.4278, -116.4611],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0181, device='cuda:0', dtype=torch.float64)
tensor([-117.7511, -112.4201, -113.5451, -121.9000, -116.7256],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0161, device='cuda:0', dtype=torch.float64)
tensor([-117.8766, -113.1656, -112.1992, -121.7583, -117.3190],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0171, device='cuda:0', dtype=torch.float64)
tensor([-118.3835, -114.2813, -111.3822, -122.0629, -118.1598],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0197, device='cuda:0', dtype=torch.float64)
tensor([-117.9724, -114.5957, -111.1296, -121.8906, -118.4051],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0201, device='cuda:0', dtype=torch.float64)
tensor([-116.6716, -114.0790, -111.2635, -121.0317, -117.8873],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0161, device='cuda:0', dtype=torch.float64)
tensor([-115.2904, -113.3287, -111.5977, -120.0603, -117.1101],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0169, device='cuda:0', dtype=torch.float64)
tensor([-114.1892, -112.2504, -112.3265, -119.1709, -115.8819],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0148, device='cuda:0', dtype=torch.float64)
tensor([-113.7157, -111.6892, -113.0679, -118.7715, -115.1112],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0175, device='cuda:0', dtype=torch.float64)
tensor([-114.2510, -111.6613, -113.5381, -119.0143, -114.8484],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0148, device='cuda:0', dtype=torch.float64)
tensor([-114.5762, -111.5973, -114.1861, -119.2355, -114.6250],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0189, device='cuda:0', dtype=torch.float64)
tensor([-115.3682, -111.7943, -114.8010, -119.7814, -114.6703],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0186, device='cuda:0', dtype=torch.float64)
tensor([-114.8700, -111.4964, -115.1205, -119.4409, -114.4528],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0173, device='cuda:0', dtype=torch.float64)
tensor([-114.5904, -111.3437, -115.2771, -119.2122, -114.3275],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0173, device='cuda:0', dtype=torch.float64)
tensor([-115.0261, -111.5002, -114.3149, -119.1746, -114.6451],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0179, device='cuda:0', dtype=torch.float64)
tensor([-115.8367, -111.8061, -113.4000, -119.3986, -115.1598],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0191, device='cuda:0', dtype=torch.float64)
tensor([-116.2933, -112.1685, -112.5687, -119.4508, -115.6071],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0142, device='cuda:0', dtype=torch.float64)
tensor([-117.4062, -113.1836, -111.5748, -119.8766, -116.5437],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0162, device='cuda:0', dtype=torch.float64)
tensor([-118.1194, -113.7349, -111.0418, -120.2385, -117.2583],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0160, device='cuda:0', dtype=torch.float64)
tensor([-118.1998, -114.0270, -110.7110, -120.2425, -117.5158],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0151, device='cuda:0', dtype=torch.float64)
tensor([-118.1149, -114.2394, -110.4232, -120.1518, -117.6667],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0169, device='cuda:0', dtype=torch.float64)
tensor([-116.3514, -112.9751, -110.7309, -119.0690, -116.4897],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0160, device='cuda:0', dtype=torch.float64)
tensor([-114.5656, -111.8742, -111.2098, -118.0205, -115.3036],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0180, device='cuda:0', dtype=torch.float64)
tensor([-113.0792, -110.8733, -112.2365, -117.2521, -114.0992],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0148, device='cuda:0', dtype=torch.float64)
tensor([-111.7639, -110.1008, -113.1964, -116.6059, -113.3263],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0162, device='cuda:0', dtype=torch.float64)
tensor([-111.1084, -109.8471, -113.3098, -116.1863, -112.9871],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0194, device='cuda:0', dtype=torch.float64)
tensor([-111.3493, -110.1547, -112.6551, -116.1497, -112.9696],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0170, device='cuda:0', dtype=torch.float64)
tensor([-112.4419, -110.8666, -111.8366, -116.6495, -113.2639],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0179, device='cuda:0', dtype=torch.float64)
tensor([-113.2551, -111.6303, -111.2348, -116.9782, -113.4850],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0177, device='cuda:0', dtype=torch.float64)
tensor([-113.8052, -112.0249, -110.8415, -117.1825, -113.5956],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0168, device='cuda:0', dtype=torch.float64)
tensor([-114.9156, -112.7543, -110.3263, -117.7848, -114.0816],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0168, device='cuda:0', dtype=torch.float64)
tensor([-115.1431, -112.8844, -110.1436, -117.8837, -114.0526],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0201, device='cuda:0', dtype=torch.float64)
tensor([-113.1244, -111.6216, -110.5288, -116.6767, -112.9156],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0203, device='cuda:0', dtype=torch.float64)
tensor([-110.6779, -109.9757, -111.3023, -115.2471, -111.7536],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0178, device='cuda:0', dtype=torch.float64)
tensor([-108.9877, -108.6884, -112.4840, -114.3789, -111.0385],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0178, device='cuda:0', dtype=torch.float64)
tensor([-108.0339, -108.0046, -112.7779, -113.7841, -110.8655],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0150, device='cuda:0', dtype=torch.float64)
tensor([-107.7497, -107.6868, -112.6353, -113.5711, -110.8170],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0173, device='cuda:0', dtype=torch.float64)
tensor([-107.5111, -107.7120, -111.8129, -113.2832, -111.0000],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0176, device='cuda:0', dtype=torch.float64)
tensor([-107.9745, -108.0739, -110.9064, -113.5216, -111.3370],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0158, device='cuda:0', dtype=torch.float64)
tensor([-109.1760, -108.9559, -109.8733, -114.2614, -112.0127],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0151, device='cuda:0', dtype=torch.float64)
tensor([-110.9424, -109.8989, -109.0445, -115.3202, -112.7484],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0183, device='cuda:0', dtype=torch.float64)
tensor([-113.4570, -110.9685, -108.5953, -116.8297, -113.4815],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0170, device='cuda:0', dtype=torch.float64)
tensor([-115.6472, -112.1399, -108.4437, -118.1709, -114.3269],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0207, device='cuda:0', dtype=torch.float64)
tensor([-115.8883, -112.2741, -108.5192, -118.2620, -114.1655],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0165, device='cuda:0', dtype=torch.float64)
tensor([-114.6648, -111.5730, -108.7756, -117.4254, -113.1663],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0194, device='cuda:0', dtype=torch.float64)
tensor([-112.7134, -110.4711, -109.1707, -116.1764, -111.9141],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0147, device='cuda:0', dtype=torch.float64)
tensor([-111.1596, -109.8284, -109.3373, -115.1851, -111.1572],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0164, device='cuda:0', dtype=torch.float64)
tensor([-109.2968, -108.6827, -110.0290, -114.0598, -110.2233],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0177, device='cuda:0', dtype=torch.float64)
tensor([-107.9011, -107.9379, -110.6001, -113.1950, -109.7363],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0164, device='cuda:0', dtype=torch.float64)
tensor([-106.9388, -107.5350, -111.0298, -112.5675, -109.6046],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0189, device='cuda:0', dtype=torch.float64)
tensor([-106.4486, -107.1921, -111.5900, -112.2302, -109.3237],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0157, device='cuda:0', dtype=torch.float64)
tensor([-106.4336, -106.8899, -111.7430, -112.1705, -109.1391],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0187, device='cuda:0', dtype=torch.float64)
tensor([-106.9967, -106.8184, -111.6880, -112.4890, -109.0330],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0232, device='cuda:0', dtype=torch.float64)
tensor([-109.3603, -107.7668, -110.3982, -113.7600, -109.5781],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0162, device='cuda:0', dtype=torch.float64)
tensor([-112.2705, -109.2748, -109.7678, -115.4972, -110.5235],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0192, device='cuda:0', dtype=torch.float64)
tensor([-115.6126, -111.0133, -109.0722, -117.4011, -112.1241],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0168, device='cuda:0', dtype=torch.float64)
tensor([-118.6999, -112.8449, -108.7624, -119.1951, -113.6795],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0137, device='cuda:0', dtype=torch.float64)
tensor([-120.0397, -113.6801, -108.1957, -119.8408, -114.6036],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0173, device='cuda:0', dtype=torch.float64)
tensor([-118.6780, -112.9883, -107.6320, -118.9057, -114.1358],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0178, device='cuda:0', dtype=torch.float64)
tensor([-117.2334, -112.2322, -107.0785, -117.9570, -113.7674],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0168, device='cuda:0', dtype=torch.float64)
tensor([-116.3611, -111.6111, -106.8316, -117.4295, -113.6220],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0187, device='cuda:0', dtype=torch.float64)
tensor([-114.3084, -110.6732, -106.4738, -116.1529, -112.9912],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0148, device='cuda:0', dtype=torch.float64)
tensor([-111.8994, -109.7467, -106.4005, -114.7159, -112.4115],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0172, device='cuda:0', dtype=torch.float64)
tensor([-109.5587, -108.9425, -106.9671, -113.3694, -112.0258],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0176, device='cuda:0', dtype=torch.float64)
tensor([-109.0220, -109.2255, -107.4667, -113.1476, -112.5813],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0204, device='cuda:0', dtype=torch.float64)
tensor([-108.0646, -108.5032, -107.8247, -112.4133, -111.9826],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0164, device='cuda:0', dtype=torch.float64)
tensor([-107.5966, -107.6422, -107.7630, -111.8387, -110.9695],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0177, device='cuda:0', dtype=torch.float64)
tensor([-108.4944, -107.4649, -107.5306, -112.1159, -110.0518],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0192, device='cuda:0', dtype=torch.float64)
tensor([-110.9884, -108.3995, -108.0657, -113.6871, -109.8633],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0182, device='cuda:0', dtype=torch.float64)
tensor([-113.5692, -109.9086, -109.3692, -115.7372, -110.3105],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0162, device='cuda:0', dtype=torch.float64)
tensor([-116.0618, -111.7610, -111.4369, -118.2206, -111.0450],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0185, device='cuda:0', dtype=torch.float64)
tensor([-117.7826, -113.0933, -112.7522, -119.9963, -111.7672],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0174, device='cuda:0', dtype=torch.float64)
tensor([-118.4231, -113.5863, -113.0022, -120.4883, -111.9096],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0202, device='cuda:0', dtype=torch.float64)
tensor([-117.4053, -112.8018, -112.2066, -119.3904, -111.3623],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0164, device='cuda:0', dtype=torch.float64)
tensor([-114.7812, -111.0333, -110.5327, -116.8019, -110.1260],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0173, device='cuda:0', dtype=torch.float64)
tensor([-111.7052, -109.1742, -108.9570, -114.0511, -109.0728],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0184, device='cuda:0', dtype=torch.float64)
tensor([-109.3493, -108.1983, -107.7202, -112.0509, -108.7636],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0167, device='cuda:0', dtype=torch.float64)
tensor([-108.4609, -108.2276, -107.2266, -111.4053, -109.4433],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0220, device='cuda:0', dtype=torch.float64)
tensor([-108.0104, -108.1386, -107.2034, -111.2036, -110.1116],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0167, device='cuda:0', dtype=torch.float64)
tensor([-107.7756, -107.8960, -107.1487, -111.1157, -110.4813],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0179, device='cuda:0', dtype=torch.float64)
tensor([-108.3171, -107.8095, -106.6744, -111.4201, -110.8168],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0169, device='cuda:0', dtype=torch.float64)
tensor([-109.2037, -107.7408, -106.1830, -111.9318, -111.1376],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0186, device='cuda:0', dtype=torch.float64)
tensor([-109.9980, -107.7649, -106.0328, -112.3652, -111.1499],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0174, device='cuda:0', dtype=torch.float64)
tensor([-109.8015, -107.4420, -106.1422, -112.2836, -110.9576],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0165, device='cuda:0', dtype=torch.float64)
tensor([-109.5329, -107.0671, -106.5290, -112.1533, -110.3087],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0183, device='cuda:0', dtype=torch.float64)
tensor([-108.2634, -106.3298, -107.4123, -111.5418, -109.2637],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0187, device='cuda:0', dtype=torch.float64)
tensor([-107.4891, -106.0538, -107.9777, -111.1713, -108.6016],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0171, device='cuda:0', dtype=torch.float64)
tensor([-107.1870, -105.8136, -108.3503, -111.0818, -108.2388],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0192, device='cuda:0', dtype=torch.float64)
tensor([-108.4021, -106.2607, -108.2528, -111.8461, -108.3657],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0164, device='cuda:0', dtype=torch.float64)
tensor([-110.0336, -106.9579, -108.2165, -112.9152, -108.7076],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0166, device='cuda:0', dtype=torch.float64)
tensor([-110.6832, -107.1634, -108.1812, -113.3641, -108.8240],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0202, device='cuda:0', dtype=torch.float64)
tensor([-110.7469, -107.0684, -107.6606, -113.3270, -108.9267],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0175, device='cuda:0', dtype=torch.float64)
tensor([-109.4862, -106.3644, -107.2270, -112.5729, -108.5763],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0143, device='cuda:0', dtype=torch.float64)
tensor([-108.1773, -105.6717, -106.9612, -111.8840, -108.3070],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0176, device='cuda:0', dtype=torch.float64)
tensor([-107.3854, -105.2179, -106.6952, -111.5396, -108.3051],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0178, device='cuda:0', dtype=torch.float64)
tensor([-107.1163, -105.1874, -106.2285, -111.4819, -108.6110],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0169, device='cuda:0', dtype=torch.float64)
tensor([-106.9769, -105.2738, -105.8691, -111.5424, -108.9869],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0198, device='cuda:0', dtype=torch.float64)
tensor([-107.0121, -105.4652, -105.5920, -111.7291, -109.3533],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0186, device='cuda:0', dtype=torch.float64)
tensor([-107.1691, -105.6150, -105.3466, -111.9608, -109.6230],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0187, device='cuda:0', dtype=torch.float64)
tensor([-107.5427, -105.4844, -105.0415, -112.1169, -109.5469],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0191, device='cuda:0', dtype=torch.float64)
tensor([-107.1565, -104.8078, -104.9899, -111.8374, -109.1860],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0198, device='cuda:0', dtype=torch.float64)
tensor([-106.5452, -103.7864, -105.1408, -111.4313, -108.7023],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0174, device='cuda:0', dtype=torch.float64)
tensor([-106.7283, -102.9052, -105.7430, -111.5166, -108.3599],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0194, device='cuda:0', dtype=torch.float64)
tensor([-105.9642, -102.0830, -106.8610, -111.2276, -107.8613],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0157, device='cuda:0', dtype=torch.float64)
tensor([-105.8281, -101.8487, -108.0627, -111.3773, -107.6325],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0186, device='cuda:0', dtype=torch.float64)
tensor([-107.0815, -102.3607, -108.3656, -112.1447, -107.9383],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0167, device='cuda:0', dtype=torch.float64)
tensor([-108.1534, -102.9706, -107.9681, -112.5265, -108.0661],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0196, device='cuda:0', dtype=torch.float64)
tensor([-107.9170, -103.0993, -107.4752, -112.0528, -107.6911],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0185, device='cuda:0', dtype=torch.float64)
tensor([-107.5675, -103.2251, -106.8248, -111.4795, -107.3718],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0173, device='cuda:0', dtype=torch.float64)
tensor([-106.6833, -103.1924, -106.1143, -110.6155, -107.0561],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0161, device='cuda:0', dtype=torch.float64)
tensor([-105.0998, -103.0228, -105.6921, -109.5076, -106.7676],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0169, device='cuda:0', dtype=torch.float64)
tensor([-104.0856, -103.0046, -105.7661, -108.9154, -106.7364],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0164, device='cuda:0', dtype=torch.float64)
tensor([-103.4250, -103.1083, -106.0467, -108.5371, -106.7360],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0186, device='cuda:0', dtype=torch.float64)
tensor([-103.1365, -103.1827, -106.2042, -108.3385, -106.8253],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0204, device='cuda:0', dtype=torch.float64)
tensor([-103.0181, -102.7999, -106.2070, -108.1127, -106.3284],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0167, device='cuda:0', dtype=torch.float64)
tensor([-103.5814, -102.7920, -105.8442, -108.2681, -106.0272],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0178, device='cuda:0', dtype=torch.float64)
tensor([-105.1334, -103.7613, -104.9566, -108.9889, -106.3936],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0197, device='cuda:0', dtype=torch.float64)
tensor([-107.0678, -104.8655, -104.1398, -109.9777, -107.1266],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0185, device='cuda:0', dtype=torch.float64)
tensor([-108.6886, -105.6794, -103.6966, -110.7891, -107.6822],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0167, device='cuda:0', dtype=torch.float64)
tensor([-110.3459, -106.2963, -103.4632, -111.6441, -108.2816],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0165, device='cuda:0', dtype=torch.float64)
tensor([-112.4617, -107.3562, -103.3398, -112.7947, -109.2347],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0185, device='cuda:0', dtype=torch.float64)
tensor([-112.6347, -107.4005, -103.4411, -112.8629, -109.0456],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0178, device='cuda:0', dtype=torch.float64)
tensor([-111.8582, -106.8061, -103.5778, -112.4164, -108.4417],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0177, device='cuda:0', dtype=torch.float64)
tensor([-111.2658, -106.1231, -103.7736, -112.0889, -107.9932],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0179, device='cuda:0', dtype=torch.float64)
tensor([-110.0326, -105.3955, -103.6525, -111.3758, -107.4831],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0189, device='cuda:0', dtype=torch.float64)
tensor([-108.2035, -104.3686, -103.3824, -110.2461, -106.9410],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0181, device='cuda:0', dtype=torch.float64)
tensor([-105.1527, -102.7610, -103.4287, -108.5025, -106.0763],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0174, device='cuda:0', dtype=torch.float64)
tensor([-103.0966, -101.9125, -103.7134, -107.4320, -105.9147],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0179, device='cuda:0', dtype=torch.float64)
tensor([-101.4498, -101.0537, -104.3921, -106.5535, -105.6383],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0154, device='cuda:0', dtype=torch.float64)
tensor([-100.9434, -101.0602, -104.6121, -106.3080, -105.6965],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0192, device='cuda:0', dtype=torch.float64)
tensor([-100.5340, -100.8374, -104.7426, -106.0158, -105.3605],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0195, device='cuda:0', dtype=torch.float64)
tensor([-101.0217, -101.0632, -104.3231, -106.1452, -105.0637],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0175, device='cuda:0', dtype=torch.float64)
tensor([-102.1982, -101.4733, -103.5933, -106.7175, -104.9597],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0190, device='cuda:0', dtype=torch.float64)
tensor([-103.9569, -101.9915, -103.3899, -107.7193, -104.9515],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0165, device='cuda:0', dtype=torch.float64)
tensor([-106.0479, -102.8070, -103.9703, -109.1964, -105.3110],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0204, device='cuda:0', dtype=torch.float64)
tensor([-108.1709, -104.1182, -104.2854, -110.7330, -106.0213],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0190, device='cuda:0', dtype=torch.float64)
tensor([-109.1330, -104.7556, -104.6480, -111.5889, -106.2708],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0206, device='cuda:0', dtype=torch.float64)
tensor([-109.3910, -105.1218, -104.8930, -111.9021, -106.1039],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0194, device='cuda:0', dtype=torch.float64)
tensor([-108.3894, -104.6542, -105.1308, -111.4899, -105.5304],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0190, device='cuda:0', dtype=torch.float64)
tensor([-106.2960, -103.5039, -104.9462, -110.1621, -104.5123],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0190, device='cuda:0', dtype=torch.float64)
tensor([-104.3840, -102.4624, -104.4923, -108.8268, -103.6224],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0166, device='cuda:0', dtype=torch.float64)
tensor([-102.8756, -101.6491, -103.5441, -107.6458, -103.1276],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0170, device='cuda:0', dtype=torch.float64)
tensor([-101.9290, -101.2061, -102.8731, -106.9251, -102.8912],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0185, device='cuda:0', dtype=torch.float64)
tensor([-101.2539, -100.8193, -102.2464, -106.4564, -102.9553],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0186, device='cuda:0', dtype=torch.float64)
tensor([-100.8902, -100.5701, -101.7544, -106.2196, -103.1796],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0167, device='cuda:0', dtype=torch.float64)
tensor([-100.8596, -100.4654, -101.2523, -106.2317, -103.5560],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0186, device='cuda:0', dtype=torch.float64)
tensor([-101.8852, -100.9335, -100.4132, -106.9064, -104.2439],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0209, device='cuda:0', dtype=torch.float64)
tensor([-104.4593, -102.2193,  -99.5636, -108.3502, -105.2280],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0173, device='cuda:0', dtype=torch.float64)
tensor([-106.6091, -103.3932,  -99.1694, -109.5260, -106.0777],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0169, device='cuda:0', dtype=torch.float64)
tensor([-107.4432, -103.8259,  -99.0705, -109.8227, -106.2092],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0153, device='cuda:0', dtype=torch.float64)
tensor([-108.5369, -104.3348,  -99.0913, -110.2194, -106.3572],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0181, device='cuda:0', dtype=torch.float64)
tensor([-108.6287, -104.3573,  -99.2150, -110.0364, -105.9787],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0196, device='cuda:0', dtype=torch.float64)
tensor([-107.6316, -103.7296,  -99.6335, -109.1489, -104.8989],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0160, device='cuda:0', dtype=torch.float64)
tensor([-106.3606, -103.0098, -100.0548, -108.1959, -103.8196],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0156, device='cuda:0', dtype=torch.float64)
tensor([-104.0377, -101.6204, -100.7793, -106.7639, -102.4527],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0174, device='cuda:0', dtype=torch.float64)
tensor([-101.9649, -100.4551, -101.4955, -105.5251, -101.4346],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0175, device='cuda:0', dtype=torch.float64)
tensor([-100.6302,  -99.7939, -102.2422, -104.7051, -100.7456],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0186, device='cuda:0', dtype=torch.float64)
tensor([-100.1577,  -99.8939, -102.4521, -104.2533, -100.2773],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0199, device='cuda:0', dtype=torch.float64)
tensor([-100.7556, -100.4673, -101.9674, -104.3889, -100.2201],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0231, device='cuda:0', dtype=torch.float64)
tensor([-102.5318, -101.6268, -100.5638, -105.1625, -101.0253],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0207, device='cuda:0', dtype=torch.float64)
tensor([-104.3715, -102.9369,  -99.4836, -106.2399, -102.4578],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0200, device='cuda:0', dtype=torch.float64)
tensor([-106.1956, -104.3802,  -98.8392, -107.5336, -104.1329],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0180, device='cuda:0', dtype=torch.float64)
tensor([-108.5805, -105.8440,  -98.3803, -109.1476, -105.9031],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0170, device='cuda:0', dtype=torch.float64)
tensor([-110.5716, -106.8613,  -98.1587, -110.3631, -107.1731],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0176, device='cuda:0', dtype=torch.float64)
tensor([-110.3962, -105.8681,  -98.0557, -110.0494, -106.9117],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0183, device='cuda:0', dtype=torch.float64)
tensor([-109.8540, -104.6413,  -98.1935, -109.5002, -106.2700],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0190, device='cuda:0', dtype=torch.float64)
tensor([-106.9940, -102.0702,  -98.7518, -107.7313, -104.3722],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0180, device='cuda:0', dtype=torch.float64)
tensor([-103.7893,  -99.5837,  -99.9038, -106.0169, -102.6665],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0159, device='cuda:0', dtype=torch.float64)
tensor([-101.6357,  -98.1558, -101.3770, -105.1301, -101.8153],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0161, device='cuda:0', dtype=torch.float64)
tensor([ -99.6575,  -97.1107, -102.5946, -104.2846, -101.2956],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0209, device='cuda:0', dtype=torch.float64)
tensor([ -98.0705,  -96.4317, -103.8335, -103.6840, -101.0334],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0204, device='cuda:0', dtype=torch.float64)
tensor([ -97.5375,  -96.1605, -103.4414, -103.4223, -100.9583],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0185, device='cuda:0', dtype=torch.float64)
tensor([ -97.2466,  -96.0531, -103.7470, -103.4572, -100.9758],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0194, device='cuda:0', dtype=torch.float64)
tensor([ -97.7806,  -96.1349, -102.7453, -103.7011, -100.9984],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0184, device='cuda:0', dtype=torch.float64)
tensor([ -99.3877,  -96.7891, -100.9871, -104.4459, -101.3932],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0206, device='cuda:0', dtype=torch.float64)
tensor([-100.6136,  -97.5947,  -99.4736, -105.0666, -101.9975],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0183, device='cuda:0', dtype=torch.float64)
tensor([-102.1570,  -98.8327,  -98.3249, -106.0539, -103.0099],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0192, device='cuda:0', dtype=torch.float64)
tensor([-103.8187, -100.5807,  -97.4458, -107.2767, -104.2147],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0179, device='cuda:0', dtype=torch.float64)
tensor([-104.5891, -101.6735,  -97.2100, -107.8690, -104.6415],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0168, device='cuda:0', dtype=torch.float64)
tensor([-104.0153, -101.8742,  -97.1479, -107.6132, -104.4184],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0210, device='cuda:0', dtype=torch.float64)
tensor([-102.8199, -101.3768,  -97.3127, -106.7479, -103.5016],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0157, device='cuda:0', dtype=torch.float64)
tensor([-101.0178, -100.3244,  -97.7367, -105.3793, -102.1101],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0155, device='cuda:0', dtype=torch.float64)
tensor([ -99.8424,  -99.4451,  -98.3131, -104.4637, -101.0063],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0175, device='cuda:0', dtype=torch.float64)
tensor([ -99.1754,  -98.9427,  -98.7935, -104.0140, -100.3438],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0209, device='cuda:0', dtype=torch.float64)
tensor([ -97.7606,  -98.0877,  -99.2787, -103.1640,  -99.6701],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0194, device='cuda:0', dtype=torch.float64)
tensor([ -96.7758,  -97.6555,  -99.3202, -102.5382,  -99.4530],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0188, device='cuda:0', dtype=torch.float64)
tensor([ -97.2552,  -98.3013,  -98.8601, -102.7077,  -99.6173],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0198, device='cuda:0', dtype=torch.float64)
tensor([ -98.5903,  -99.3308,  -98.1889, -103.4567, -100.2423],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0173, device='cuda:0', dtype=torch.float64)
tensor([-100.6511, -100.8706,  -97.5553, -104.8383, -101.4355],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0150, device='cuda:0', dtype=torch.float64)
tensor([-102.5927, -102.3746,  -97.1891, -106.1413, -102.5385],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0195, device='cuda:0', dtype=torch.float64)
tensor([-104.1194, -103.3143,  -96.8955, -106.9951, -103.0579],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0168, device='cuda:0', dtype=torch.float64)
tensor([-105.8854, -104.0091,  -96.6803, -107.7379, -103.2128],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0182, device='cuda:0', dtype=torch.float64)
tensor([-107.1721, -104.2516,  -96.6108, -108.2713, -103.2848],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0192, device='cuda:0', dtype=torch.float64)
tensor([-108.7176, -104.6622,  -96.7988, -109.0492, -103.5882],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0182, device='cuda:0', dtype=torch.float64)
tensor([-108.5781, -104.4376,  -96.7107, -108.8878, -103.2580],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0168, device='cuda:0', dtype=torch.float64)
tensor([-107.0481, -103.2124,  -96.5529, -107.8303, -102.1317],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0202, device='cuda:0', dtype=torch.float64)
tensor([-104.0002, -101.2302,  -96.3833, -105.8177, -100.2956],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0168, device='cuda:0', dtype=torch.float64)
tensor([-101.7313, -100.0921,  -96.2717, -104.3124,  -99.0902],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0176, device='cuda:0', dtype=torch.float64)
tensor([ -99.7048,  -99.0595,  -96.4952, -103.0856,  -98.2667],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0186, device='cuda:0', dtype=torch.float64)
tensor([ -97.6398,  -97.7747,  -97.1558, -101.8120,  -97.5920],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0205, device='cuda:0', dtype=torch.float64)
tensor([ -96.5692,  -97.2077,  -97.8836, -101.1559,  -97.4785],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0204, device='cuda:0', dtype=torch.float64)
tensor([ -96.0630,  -96.6982,  -97.9733, -100.8053,  -97.4298],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0187, device='cuda:0', dtype=torch.float64)
tensor([ -95.5068,  -95.9168,  -97.8258, -100.3237,  -97.1357],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0211, device='cuda:0', dtype=torch.float64)
tensor([ -95.9216,  -95.5770,  -96.9295, -100.5137,  -97.1913],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0168, device='cuda:0', dtype=torch.float64)
tensor([ -97.1118,  -96.0150,  -96.1636, -101.2843,  -97.7751],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0174, device='cuda:0', dtype=torch.float64)
tensor([ -98.2304,  -96.2030,  -95.8862, -101.9758,  -98.1916],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0178, device='cuda:0', dtype=torch.float64)
tensor([ -99.2824,  -96.4755,  -96.0082, -102.6686,  -98.6412],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0199, device='cuda:0', dtype=torch.float64)
tensor([ -99.5855,  -96.3281,  -96.0039, -102.9694,  -99.0469],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0182, device='cuda:0', dtype=torch.float64)
tensor([ -99.0828,  -95.8109,  -95.9420, -102.7291,  -99.1103],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0167, device='cuda:0', dtype=torch.float64)
tensor([ -98.2649,  -95.4030,  -95.7916, -102.2544,  -98.9691],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0176, device='cuda:0', dtype=torch.float64)
tensor([ -99.0793,  -96.5301,  -95.3402, -102.7718,  -99.4170],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0187, device='cuda:0', dtype=torch.float64)
tensor([ -98.2871,  -96.3857,  -95.3985, -102.0947,  -98.8587],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0168, device='cuda:0', dtype=torch.float64)
tensor([ -97.8752,  -96.3540,  -95.5573, -101.6356,  -98.3477],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0176, device='cuda:0', dtype=torch.float64)
tensor([ -98.6614,  -96.9963,  -95.5634, -101.8423,  -98.1684],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0192, device='cuda:0', dtype=torch.float64)
tensor([ -99.6212,  -97.5902,  -95.5044, -102.2319,  -98.2142],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0163, device='cuda:0', dtype=torch.float64)
tensor([ -99.7865,  -97.5463,  -95.6584, -102.1747,  -97.9701],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0164, device='cuda:0', dtype=torch.float64)
tensor([ -99.0586,  -96.8377,  -96.0813, -101.6540,  -97.3458],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0209, device='cuda:0', dtype=torch.float64)
tensor([ -98.0593,  -95.8661,  -96.8082, -101.2063,  -96.8608],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0180, device='cuda:0', dtype=torch.float64)
tensor([ -96.8685,  -94.7913,  -98.1428, -100.8720,  -96.4961],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0177, device='cuda:0', dtype=torch.float64)
tensor([ -96.5669,  -94.3729,  -98.7796, -100.9628,  -96.6197],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0204, device='cuda:0', dtype=torch.float64)
tensor([ -95.8760,  -93.5952,  -98.4837, -100.4817,  -96.6006],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0193, device='cuda:0', dtype=torch.float64)
tensor([ -95.4417,  -93.0327,  -97.6907, -100.0935,  -96.6473],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0210, device='cuda:0', dtype=torch.float64)
tensor([-94.7012, -92.3341, -96.7110, -99.4589, -96.5709], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.0210, device='cuda:0', dtype=torch.float64)
tensor([-94.1394, -91.8757, -95.9995, -99.0477, -96.5833], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.0212, device='cuda:0', dtype=torch.float64)
tensor([-94.5888, -92.5487, -94.8834, -99.4029, -97.2096], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.0178, device='cuda:0', dtype=torch.float64)
tensor([ -95.5557,  -93.8197,  -94.3457, -100.2958,  -98.1173],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0175, device='cuda:0', dtype=torch.float64)
tensor([ -97.2338,  -95.6682,  -93.9811, -101.5744,  -99.0497],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0157, device='cuda:0', dtype=torch.float64)
tensor([ -99.0305,  -97.3547,  -93.6071, -102.7990,  -99.8779],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0177, device='cuda:0', dtype=torch.float64)
tensor([-100.2706,  -98.2408,  -93.0702, -103.4987, -100.2023],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0187, device='cuda:0', dtype=torch.float64)
tensor([-101.3396,  -98.5388,  -92.4576, -103.8329, -100.1701],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0179, device='cuda:0', dtype=torch.float64)
tensor([-101.4086,  -97.5939,  -92.0560, -103.2435,  -99.2539],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0182, device='cuda:0', dtype=torch.float64)
tensor([-101.6179,  -96.6906,  -92.1093, -102.9068,  -98.5553],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0164, device='cuda:0', dtype=torch.float64)
tensor([-101.9437,  -95.8349,  -92.9476, -102.9354,  -98.0717],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0178, device='cuda:0', dtype=torch.float64)
tensor([-102.2355,  -95.4653,  -94.4440, -103.4375,  -97.8100],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0194, device='cuda:0', dtype=torch.float64)
tensor([-102.2396,  -95.2337,  -95.3381, -103.8126,  -97.8414],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0201, device='cuda:0', dtype=torch.float64)
tensor([-101.5166,  -94.7918,  -94.8404, -103.1593,  -97.4414],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0189, device='cuda:0', dtype=torch.float64)
tensor([-100.0639,  -93.9618,  -94.1763, -102.0533,  -96.8018],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0167, device='cuda:0', dtype=torch.float64)
tensor([ -97.6948,  -92.6344,  -93.3709, -100.4848,  -95.9399],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0199, device='cuda:0', dtype=torch.float64)
tensor([-95.0119, -91.2909, -92.5394, -98.9205, -95.3428], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.0200, device='cuda:0', dtype=torch.float64)
tensor([-93.7165, -91.2675, -91.9137, -98.6201, -95.8802], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.0178, device='cuda:0', dtype=torch.float64)
tensor([-93.9328, -92.2639, -91.7929, -99.4215, -97.0418], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.0175, device='cuda:0', dtype=torch.float64)
tensor([ -94.7112,  -93.4862,  -91.8504, -100.6087,  -98.3432],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0186, device='cuda:0', dtype=torch.float64)
tensor([ -95.2599,  -94.0659,  -91.5689, -101.1257,  -98.8386],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0188, device='cuda:0', dtype=torch.float64)
tensor([ -95.6353,  -94.2072,  -91.0009, -101.1263,  -98.7955],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0189, device='cuda:0', dtype=torch.float64)
tensor([ -96.2605,  -94.5810,  -90.5901, -101.1985,  -98.7972],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0146, device='cuda:0', dtype=torch.float64)
tensor([ -96.2560,  -94.2741,  -90.3724, -100.6627,  -98.2623],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0166, device='cuda:0', dtype=torch.float64)
tensor([ -96.8407,  -94.3912,  -90.3435, -100.6572,  -98.1948],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0186, device='cuda:0', dtype=torch.float64)
tensor([ -97.8311,  -94.5953,  -90.5834, -100.8770,  -98.1753],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0213, device='cuda:0', dtype=torch.float64)
tensor([ -99.6221,  -95.7503,  -91.0861, -101.8002,  -98.6756],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0178, device='cuda:0', dtype=torch.float64)
tensor([-100.2448,  -96.3358,  -91.6013, -102.0899,  -98.6228],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0192, device='cuda:0', dtype=torch.float64)
tensor([ -99.5849,  -96.0677,  -91.9858, -101.6676,  -98.0542],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0185, device='cuda:0', dtype=torch.float64)
tensor([ -97.6337,  -94.9123,  -92.1924, -100.4560,  -96.8897],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0185, device='cuda:0', dtype=torch.float64)
tensor([-95.2461, -93.4870, -92.3409, -99.0119, -95.6884], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.0179, device='cuda:0', dtype=torch.float64)
tensor([-92.6101, -91.9633, -92.3959, -97.3914, -94.6252], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.0213, device='cuda:0', dtype=torch.float64)
tensor([-90.9590, -91.1606, -92.4090, -96.4655, -94.2433], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.0189, device='cuda:0', dtype=torch.float64)
tensor([-89.6083, -90.4319, -92.7511, -95.8104, -94.0465], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.0231, device='cuda:0', dtype=torch.float64)
tensor([-88.8649, -90.3456, -92.9353, -95.6514, -94.3862], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.0212, device='cuda:0', dtype=torch.float64)
tensor([-89.4723, -90.7789, -92.4295, -96.1809, -94.8719], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.0210, device='cuda:0', dtype=torch.float64)
tensor([-91.1415, -92.3451, -91.5434, -97.5034, -95.8583], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.0188, device='cuda:0', dtype=torch.float64)
tensor([-93.2936, -93.6180, -90.8487, -98.9810, -96.8583], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.0188, device='cuda:0', dtype=torch.float64)
tensor([ -96.3154,  -95.3053,  -90.5890, -100.8991,  -98.1787],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0198, device='cuda:0', dtype=torch.float64)
tensor([ -99.3047,  -97.3087,  -90.5631, -102.9821,  -99.8057],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0184, device='cuda:0', dtype=torch.float64)
tensor([ -99.3422,  -96.7672,  -90.7360, -103.0040,  -99.7499],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0164, device='cuda:0', dtype=torch.float64)
tensor([ -98.4096,  -95.7785,  -90.8777, -102.4380,  -99.2437],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0175, device='cuda:0', dtype=torch.float64)
tensor([ -95.4250,  -93.4710,  -90.9017, -100.5307,  -97.7151],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0187, device='cuda:0', dtype=torch.float64)
tensor([-92.2088, -91.0154, -91.4236, -98.4908, -96.0555], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.0204, device='cuda:0', dtype=torch.float64)
tensor([-90.0379, -89.2901, -92.0710, -97.2035, -95.1089], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.0206, device='cuda:0', dtype=torch.float64)
tensor([-88.8327, -88.4267, -92.3156, -96.5003, -94.6699], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.0177, device='cuda:0', dtype=torch.float64)
tensor([-88.5201, -88.0689, -92.3344, -96.3553, -94.5747], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.0186, device='cuda:0', dtype=torch.float64)
tensor([-88.7181, -88.1456, -92.0916, -96.4774, -94.5475], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.0182, device='cuda:0', dtype=torch.float64)
tensor([-89.2705, -88.4407, -91.6353, -96.8663, -94.7294], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.0186, device='cuda:0', dtype=torch.float64)
tensor([-90.6041, -89.4799, -90.7442, -97.7517, -95.3571], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.0148, device='cuda:0', dtype=torch.float64)
tensor([-92.1024, -90.5516, -90.1644, -98.7238, -96.0450], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.0173, device='cuda:0', dtype=torch.float64)
tensor([-93.4071, -91.7155, -89.6426, -99.5629, -96.5812], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.0154, device='cuda:0', dtype=torch.float64)
tensor([ -95.3281,  -93.4947,  -89.1967, -100.8668,  -97.4918],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0142, device='cuda:0', dtype=torch.float64)
tensor([ -97.1368,  -94.8859,  -89.0141, -102.0492,  -98.2885],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0181, device='cuda:0', dtype=torch.float64)
tensor([ -97.1468,  -95.2857,  -88.8344, -102.1154,  -98.2204],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0164, device='cuda:0', dtype=torch.float64)
tensor([ -97.8682,  -96.1990,  -88.7987, -102.5595,  -98.4161],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0200, device='cuda:0', dtype=torch.float64)
tensor([ -98.6717,  -96.7658,  -88.7225, -102.8859,  -98.4547],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0178, device='cuda:0', dtype=torch.float64)
tensor([ -98.6336,  -96.3847,  -88.6998, -102.4771,  -97.9131],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0191, device='cuda:0', dtype=torch.float64)
tensor([ -98.2138,  -95.7175,  -88.7284, -101.9325,  -97.3325],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0187, device='cuda:0', dtype=torch.float64)
tensor([ -96.9609,  -94.8861,  -88.8103, -101.0529,  -96.5318],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0156, device='cuda:0', dtype=torch.float64)
tensor([-95.5271, -93.2859, -88.9224, -99.8719, -95.4547], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.0206, device='cuda:0', dtype=torch.float64)
tensor([-92.9889, -90.6703, -89.2729, -98.1194, -94.0503], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.0193, device='cuda:0', dtype=torch.float64)
tensor([-89.7835, -87.5298, -90.2365, -96.1239, -92.5488], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.0182, device='cuda:0', dtype=torch.float64)
tensor([-88.7531, -86.2076, -91.1446, -95.5526, -92.0625], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.0188, device='cuda:0', dtype=torch.float64)
tensor([-89.7707, -86.4853, -91.2506, -96.1883, -92.4053], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.0196, device='cuda:0', dtype=torch.float64)
tensor([-90.8771, -86.9674, -91.4099, -96.8966, -92.7924], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.0179, device='cuda:0', dtype=torch.float64)
tensor([-92.0199, -87.5701, -91.0850, -97.5703, -93.3790], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.0192, device='cuda:0', dtype=torch.float64)
tensor([-94.3769, -89.0311, -90.4275, -99.0243, -94.7459], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.0171, device='cuda:0', dtype=torch.float64)
tensor([ -97.8107,  -91.4051,  -89.8675, -101.2656,  -96.7526],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0157, device='cuda:0', dtype=torch.float64)
tensor([-101.3469,  -93.9212,  -89.7774, -103.6584,  -98.8263],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0169, device='cuda:0', dtype=torch.float64)
tensor([-104.1701,  -96.1261,  -89.7890, -105.5107, -100.4004],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0177, device='cuda:0', dtype=torch.float64)
tensor([-105.2149,  -97.2699,  -89.5226, -106.2047, -101.0619],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0172, device='cuda:0', dtype=torch.float64)
tensor([-102.8624,  -96.0424,  -88.9125, -104.5859,  -99.7624],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0181, device='cuda:0', dtype=torch.float64)
tensor([ -98.9440,  -94.0677,  -88.3422, -102.1114,  -97.8255],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0195, device='cuda:0', dtype=torch.float64)
tensor([-93.8827, -91.5590, -88.2634, -99.0631, -95.4686], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.0175, device='cuda:0', dtype=torch.float64)
tensor([-89.9980, -89.4946, -88.9007, -96.7800, -93.7465], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.0221, device='cuda:0', dtype=torch.float64)
tensor([-87.0761, -87.4390, -89.8995, -94.9329, -92.4424], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.0218, device='cuda:0', dtype=torch.float64)
tensor([-85.0721, -85.6570, -90.9432, -93.6361, -91.6669], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.0189, device='cuda:0', dtype=torch.float64)
tensor([-84.3245, -84.8282, -91.4615, -93.2153, -91.4879], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.0191, device='cuda:0', dtype=torch.float64)
tensor([-85.0495, -84.8992, -90.8085, -93.6361, -91.7977], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.0206, device='cuda:0', dtype=torch.float64)
tensor([-87.8321, -86.3611, -89.5528, -95.3642, -93.1669], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.0217, device='cuda:0', dtype=torch.float64)
tensor([-92.6728, -89.3605, -88.8884, -98.4910, -95.6243], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.0184, device='cuda:0', dtype=torch.float64)
tensor([ -97.9208,  -92.7766,  -89.0240, -102.1051,  -98.5444],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0149, device='cuda:0', dtype=torch.float64)
tensor([-102.4912,  -95.7898,  -89.7061, -105.3013, -101.0492],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0166, device='cuda:0', dtype=torch.float64)
tensor([-104.9790,  -97.3872,  -90.4829, -107.0859, -102.2372],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0183, device='cuda:0', dtype=torch.float64)
tensor([-105.3434,  -97.9138,  -90.7342, -107.3225, -102.0864],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0208, device='cuda:0', dtype=torch.float64)
tensor([-102.3376,  -96.0936,  -90.2334, -105.1181, -100.0861],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0199, device='cuda:0', dtype=torch.float64)
tensor([ -96.4422,  -92.3608,  -89.3791, -100.9036,  -96.5479],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0180, device='cuda:0', dtype=torch.float64)
tensor([-91.4074, -89.5772, -88.9369, -97.4270, -93.7474], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.0169, device='cuda:0', dtype=torch.float64)
tensor([-87.7247, -87.9804, -89.1294, -94.9748, -91.8299], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.0200, device='cuda:0', dtype=torch.float64)
tensor([-85.8199, -87.7186, -89.6815, -94.0179, -91.1501], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.0219, device='cuda:0', dtype=torch.float64)
tensor([-86.5856, -89.3255, -89.9050, -94.8676, -91.8010], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.0218, device='cuda:0', dtype=torch.float64)
tensor([-88.5809, -91.6878, -89.7351, -96.7153, -93.1490], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.0168, device='cuda:0', dtype=torch.float64)
tensor([-90.7929, -93.7886, -89.3733, -98.5575, -94.4727], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.0171, device='cuda:0', dtype=torch.float64)
tensor([ -93.3528,  -95.8728,  -88.7656, -100.3967,  -95.8282],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0185, device='cuda:0', dtype=torch.float64)
tensor([ -97.5836,  -98.7998,  -88.2372, -103.3098,  -98.1351],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0176, device='cuda:0', dtype=torch.float64)
tensor([-101.3375, -101.0366,  -88.0915, -105.5800,  -99.9184],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0177, device='cuda:0', dtype=torch.float64)
tensor([-104.0710, -102.2290,  -88.1599, -107.2846, -101.2586],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0187, device='cuda:0', dtype=torch.float64)
tensor([-105.7212, -102.8830,  -88.3515, -108.0236, -101.6629],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0199, device='cuda:0', dtype=torch.float64)
tensor([-105.3223, -101.5479,  -88.3581, -107.4897, -101.1038],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0217, device='cuda:0', dtype=torch.float64)
tensor([-101.6904,  -97.8930,  -88.0836, -104.4910,  -98.4715],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0155, device='cuda:0', dtype=torch.float64)
tensor([ -97.6629,  -94.3148,  -87.8534, -101.4147,  -95.7731],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0149, device='cuda:0', dtype=torch.float64)
tensor([-93.3736, -90.7686, -87.7956, -98.3776, -93.1912], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.0179, device='cuda:0', dtype=torch.float64)
tensor([-89.4826, -87.8208, -87.8329, -95.7511, -91.1526], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.0197, device='cuda:0', dtype=torch.float64)
tensor([-86.7396, -85.8328, -88.0644, -93.8458, -89.7448], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.0213, device='cuda:0', dtype=torch.float64)
tensor([-85.5359, -84.7648, -88.2015, -93.1483, -89.3576], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.0207, device='cuda:0', dtype=torch.float64)
tensor([-84.9774, -84.0535, -88.5775, -92.9252, -89.2851], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.0176, device='cuda:0', dtype=torch.float64)
tensor([-85.1165, -83.9170, -88.4516, -93.1796, -89.5750], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.0232, device='cuda:0', dtype=torch.float64)
tensor([-86.2736, -84.9752, -87.3517, -94.0983, -90.3546], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.0213, device='cuda:0', dtype=torch.float64)
tensor([-89.1251, -87.5859, -86.3827, -96.1712, -91.8840], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.0193, device='cuda:0', dtype=torch.float64)
tensor([-93.1666, -91.3786, -85.9283, -99.1088, -94.0541], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.0185, device='cuda:0', dtype=torch.float64)
tensor([ -97.2276,  -95.2438,  -85.9890, -102.0023,  -96.2088],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0169, device='cuda:0', dtype=torch.float64)
tensor([-100.7350,  -98.6514,  -86.2613, -104.3314,  -97.8809],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0170, device='cuda:0', dtype=torch.float64)
tensor([-103.8728, -101.5597,  -86.5411, -106.3053,  -99.3677],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0169, device='cuda:0', dtype=torch.float64)
tensor([-105.3374, -102.6901,  -86.6525, -107.1619,  -99.9786],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0169, device='cuda:0', dtype=torch.float64)
tensor([-103.5130, -100.7807,  -86.2611, -105.3641,  -98.4457],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0164, device='cuda:0', dtype=torch.float64)
tensor([-100.0993,  -97.3631,  -85.6686, -102.5445,  -96.1140],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0179, device='cuda:0', dtype=torch.float64)
tensor([-96.9607, -94.3822, -85.2100, -99.8599, -93.8628], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.0181, device='cuda:0', dtype=torch.float64)
tensor([-94.1187, -91.5994, -84.9596, -97.6271, -92.0380], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.0164, device='cuda:0', dtype=torch.float64)
tensor([-93.0854, -90.3251, -85.0389, -96.6557, -91.1552], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.0170, device='cuda:0', dtype=torch.float64)
tensor([-91.4214, -88.9910, -85.0014, -95.4835, -90.2202], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.0189, device='cuda:0', dtype=torch.float64)
tensor([-90.2865, -88.2768, -84.8902, -94.7477, -89.6235], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.0203, device='cuda:0', dtype=torch.float64)
tensor([-89.0345, -87.6138, -84.5911, -94.3435, -89.4829], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.0171, device='cuda:0', dtype=torch.float64)
tensor([-87.6646, -86.6888, -84.4553, -93.9189, -89.3166], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.0170, device='cuda:0', dtype=torch.float64)
tensor([-85.9694, -85.1993, -84.5788, -93.3084, -89.0737], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.0209, device='cuda:0', dtype=torch.float64)
tensor([-84.6436, -83.9536, -84.7484, -92.9602, -88.9914], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.0173, device='cuda:0', dtype=torch.float64)
tensor([-83.5986, -83.2545, -84.9379, -93.0790, -89.2967], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.0201, device='cuda:0', dtype=torch.float64)
tensor([-83.8003, -83.7237, -84.8398, -94.1295, -90.1926], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.0161, device='cuda:0', dtype=torch.float64)
tensor([-84.0470, -84.1900, -84.7901, -95.0766, -90.9837], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.0180, device='cuda:0', dtype=torch.float64)
tensor([-85.4312, -85.9060, -84.4609, -96.8829, -92.2465], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.0177, device='cuda:0', dtype=torch.float64)
tensor([ -88.9494,  -89.5922,  -83.9561, -100.0203,  -94.3984],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0176, device='cuda:0', dtype=torch.float64)
tensor([ -93.7841,  -94.5065,  -83.9147, -103.7171,  -96.9906],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0147, device='cuda:0', dtype=torch.float64)
tensor([ -98.2242,  -98.5908,  -84.1617, -106.8126,  -99.2123],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0165, device='cuda:0', dtype=torch.float64)
tensor([-101.0746, -101.0729,  -84.4188, -108.4338, -100.2404],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0182, device='cuda:0', dtype=torch.float64)
tensor([-100.9968, -100.5986,  -84.3135, -107.6419,  -99.4016],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0181, device='cuda:0', dtype=torch.float64)
tensor([ -98.1948,  -98.1674,  -83.9288, -105.4384,  -97.5213],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0178, device='cuda:0', dtype=torch.float64)
tensor([ -94.4970,  -94.7758,  -83.5209, -102.5820,  -95.1759],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0159, device='cuda:0', dtype=torch.float64)
tensor([-90.5629, -91.0338, -83.2734, -99.5930, -92.8241], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.0184, device='cuda:0', dtype=torch.float64)
tensor([-89.4158, -89.7849, -83.2788, -98.5868, -91.9714], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.0166, device='cuda:0', dtype=torch.float64)
tensor([-88.3055, -88.5583, -83.2921, -97.8390, -91.3538], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.0167, device='cuda:0', dtype=torch.float64)
tensor([-86.9162, -87.2946, -83.3222, -96.9705, -90.6697], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.0148, device='cuda:0', dtype=torch.float64)
tensor([-85.3084, -85.4885, -83.4237, -95.7774, -89.8124], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.0177, device='cuda:0', dtype=torch.float64)
tensor([-84.9007, -84.8549, -83.4122, -95.5301, -89.6468], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.0181, device='cuda:0', dtype=torch.float64)
tensor([-84.7615, -84.4417, -83.3740, -95.4760, -89.6065], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.0196, device='cuda:0', dtype=torch.float64)
tensor([-86.3712, -86.0481, -83.1492, -96.8937, -90.5856], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.0231, device='cuda:0', dtype=torch.float64)
tensor([-88.3981, -88.7794, -83.0887, -99.2374, -92.2697], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.0198, device='cuda:0', dtype=torch.float64)
tensor([ -89.4364,  -90.1407,  -83.0921, -100.5812,  -93.2581],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0184, device='cuda:0', dtype=torch.float64)
tensor([ -90.8462,  -92.1154,  -83.1984, -102.5979,  -94.6991],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0190, device='cuda:0', dtype=torch.float64)
tensor([ -93.1496,  -95.0413,  -83.4138, -105.3339,  -96.7399],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0178, device='cuda:0', dtype=torch.float64)
tensor([ -95.3954,  -98.0507,  -83.8653, -107.9699,  -98.7027],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0184, device='cuda:0', dtype=torch.float64)
tensor([ -95.0145,  -97.8746,  -83.8104, -107.8767,  -98.7077],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0171, device='cuda:0', dtype=torch.float64)
tensor([ -92.5300,  -95.3097,  -83.4361, -105.8215,  -97.2536],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0173, device='cuda:0', dtype=torch.float64)
tensor([ -89.4233,  -91.8340,  -83.0556, -103.0823,  -95.3734],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0157, device='cuda:0', dtype=torch.float64)
tensor([ -86.2386,  -88.4044,  -82.8120, -100.0615,  -93.3158],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0167, device='cuda:0', dtype=torch.float64)
tensor([-84.3309, -86.3149, -82.6140, -98.0142, -91.9780], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.0181, device='cuda:0', dtype=torch.float64)
tensor([-83.2826, -84.9659, -82.1393, -95.9763, -90.6048], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.0197, device='cuda:0', dtype=torch.float64)
tensor([-83.1928, -84.2358, -81.7814, -94.3317, -89.3804], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.0184, device='cuda:0', dtype=torch.float64)
tensor([-86.3576, -86.6378, -81.7598, -95.5440, -90.2191], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.0183, device='cuda:0', dtype=torch.float64)
tensor([-89.4350, -89.4972, -81.8966, -97.4340, -91.6336], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.0186, device='cuda:0', dtype=torch.float64)
tensor([-90.9486, -91.2809, -81.8149, -98.5432, -92.5008], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.0178, device='cuda:0', dtype=torch.float64)
tensor([-90.5060, -91.4009, -81.5444, -98.1036, -92.1102], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.0167, device='cuda:0', dtype=torch.float64)
tensor([-89.7855, -91.4392, -81.2214, -97.4862, -91.5690], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.0181, device='cuda:0', dtype=torch.float64)
tensor([-88.0529, -90.8715, -80.8099, -96.5096, -90.7628], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.0166, device='cuda:0', dtype=torch.float64)
tensor([-85.1352, -88.9915, -80.6178, -94.5538, -89.1657], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.0183, device='cuda:0', dtype=torch.float64)
tensor([-82.7001, -87.2460, -80.9561, -93.1165, -87.9545], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.0187, device='cuda:0', dtype=torch.float64)
tensor([-82.0507, -86.8755, -81.3851, -93.0681, -87.8835], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.0190, device='cuda:0', dtype=torch.float64)
tensor([-82.9965, -88.2367, -81.7716, -94.4442, -88.8242], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.0170, device='cuda:0', dtype=torch.float64)
tensor([-85.3489, -91.2457, -82.0587, -97.1296, -90.7224], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.0210, device='cuda:0', dtype=torch.float64)
tensor([-87.8154, -94.1441, -82.1357, -99.3802, -92.3506], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.0195, device='cuda:0', dtype=torch.float64)
tensor([ -91.7027,  -98.1713,  -81.9615, -102.3505,  -94.6556],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0195, device='cuda:0', dtype=torch.float64)
tensor([ -94.9881, -100.7399,  -81.7463, -104.6162,  -96.5425],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0150, device='cuda:0', dtype=torch.float64)
tensor([ -96.3297, -100.9543,  -81.5586, -105.3996,  -97.3244],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0162, device='cuda:0', dtype=torch.float64)
tensor([ -96.3076, -100.2241,  -81.4951, -105.2653,  -97.3589],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0181, device='cuda:0', dtype=torch.float64)
tensor([ -94.7638,  -98.1498,  -81.3017, -103.6865,  -96.1998],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0192, device='cuda:0', dtype=torch.float64)
tensor([-90.0881, -93.2361, -80.8869, -99.4846, -93.0221], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.0169, device='cuda:0', dtype=torch.float64)
tensor([-85.7074, -88.1098, -80.6433, -95.1705, -89.8107], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.0152, device='cuda:0', dtype=torch.float64)
tensor([-82.1202, -83.8305, -80.8503, -91.6875, -87.1275], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.0167, device='cuda:0', dtype=torch.float64)
tensor([-80.5329, -81.7000, -81.1734, -89.8762, -85.6925], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.0207, device='cuda:0', dtype=torch.float64)
tensor([-79.7238, -80.4235, -81.4933, -88.4229, -84.4515], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.0205, device='cuda:0', dtype=torch.float64)
tensor([-79.9057, -80.6361, -81.5082, -88.1681, -84.1905], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.0218, device='cuda:0', dtype=torch.float64)
tensor([-79.6558, -80.7831, -81.2873, -88.3377, -84.3140], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.0183, device='cuda:0', dtype=torch.float64)
tensor([-80.7469, -82.4684, -80.9085, -89.3565, -85.0072], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.0169, device='cuda:0', dtype=torch.float64)
tensor([-82.8479, -85.3093, -80.6772, -91.4217, -86.5250], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.0147, device='cuda:0', dtype=torch.float64)
tensor([-85.8824, -89.3565, -80.8812, -94.5251, -88.7798], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.0170, device='cuda:0', dtype=torch.float64)
tensor([-89.9881, -94.9415, -81.6889, -98.5886, -91.6516], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.0169, device='cuda:0', dtype=torch.float64)
tensor([ -93.2548,  -99.3371,  -82.5893, -101.9194,  -94.0005],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0174, device='cuda:0', dtype=torch.float64)
tensor([ -92.9962,  -99.2342,  -82.6260, -102.1535,  -94.1283],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0176, device='cuda:0', dtype=torch.float64)
tensor([-89.5960, -95.3882, -81.9759, -99.5597, -92.1427], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.0167, device='cuda:0', dtype=torch.float64)
tensor([-87.2059, -92.1366, -81.3387, -97.6048, -90.7863], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.0163, device='cuda:0', dtype=torch.float64)
tensor([-83.9814, -88.1256, -80.9896, -95.2590, -89.0029], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.0160, device='cuda:0', dtype=torch.float64)
tensor([-82.7238, -85.9790, -80.7664, -94.4615, -88.4787], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.0206, device='cuda:0', dtype=torch.float64)
tensor([-80.4474, -83.1615, -80.9042, -93.3862, -87.7557], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.0185, device='cuda:0', dtype=torch.float64)
tensor([-79.5924, -81.5088, -80.9408, -92.7219, -87.3805], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.0169, device='cuda:0', dtype=torch.float64)
tensor([-78.3692, -79.3847, -81.1570, -91.6890, -86.7938], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.0172, device='cuda:0', dtype=torch.float64)
tensor([-78.9206, -78.6392, -81.1340, -91.3446, -86.7875], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.0198, device='cuda:0', dtype=torch.float64)
tensor([-81.0902, -79.8861, -81.0441, -92.4015, -87.7532], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.0170, device='cuda:0', dtype=torch.float64)
tensor([-83.3363, -81.6520, -81.0039, -93.8987, -89.0228], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.0170, device='cuda:0', dtype=torch.float64)
tensor([-85.2902, -83.7655, -80.8733, -95.4312, -90.1969], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.0155, device='cuda:0', dtype=torch.float64)
tensor([-87.5700, -86.7924, -80.7224, -97.6212, -91.8190], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.0181, device='cuda:0', dtype=torch.float64)
tensor([-89.0976, -90.4513, -80.5818, -99.9429, -93.2751], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.0166, device='cuda:0', dtype=torch.float64)
tensor([ -92.2667,  -96.2040,  -81.0134, -103.8213,  -95.7747],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0147, device='cuda:0', dtype=torch.float64)
tensor([ -95.2602, -101.7988,  -81.8493, -107.4012,  -97.9805],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0201, device='cuda:0', dtype=torch.float64)
tensor([ -94.0635, -103.2704,  -82.7989, -108.3147,  -98.0975],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0191, device='cuda:0', dtype=torch.float64)
tensor([ -90.4754, -101.2699,  -83.6436, -106.9650,  -96.5976],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0199, device='cuda:0', dtype=torch.float64)
tensor([ -86.2643,  -97.2455,  -83.7199, -103.3993,  -93.7523],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0180, device='cuda:0', dtype=torch.float64)
tensor([ -83.5944,  -93.9817,  -83.2985, -100.5146,  -91.6017],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0198, device='cuda:0', dtype=torch.float64)
tensor([-81.5618, -91.0521, -82.2335, -97.3636, -89.3805], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.0155, device='cuda:0', dtype=torch.float64)
tensor([-80.7585, -89.5087, -81.1475, -95.2047, -87.9537], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.0209, device='cuda:0', dtype=torch.float64)
tensor([-80.4641, -88.0571, -80.0869, -93.1484, -86.8005], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.0229, device='cuda:0', dtype=torch.float64)
tensor([-81.7650, -87.9428, -79.6602, -93.0390, -87.1478], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.0177, device='cuda:0', dtype=torch.float64)
tensor([-83.5184, -87.8667, -79.7062, -93.4888, -87.7951], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.0179, device='cuda:0', dtype=torch.float64)
tensor([-85.4206, -88.3482, -80.0633, -94.4327, -88.7324], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.0160, device='cuda:0', dtype=torch.float64)
tensor([-87.0602, -89.2643, -80.2863, -95.9694, -89.9970], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.0165, device='cuda:0', dtype=torch.float64)
tensor([-89.2111, -91.1288, -80.5270, -97.9327, -91.5245], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.0178, device='cuda:0', dtype=torch.float64)
tensor([-90.8355, -92.8051, -80.6797, -99.7126, -92.8843], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.0168, device='cuda:0', dtype=torch.float64)
tensor([ -91.6728,  -94.6057,  -80.7560, -101.6079,  -94.1536],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0187, device='cuda:0', dtype=torch.float64)
tensor([ -92.9590,  -98.1980,  -81.1663, -104.7888,  -96.1355],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0151, device='cuda:0', dtype=torch.float64)
tensor([ -93.9383, -101.8253,  -81.9219, -107.8240,  -97.8952],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0160, device='cuda:0', dtype=torch.float64)
tensor([ -93.5111, -103.9370,  -82.7281, -110.0521,  -99.1092],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0152, device='cuda:0', dtype=torch.float64)
tensor([ -91.6677, -104.7778,  -83.8042, -111.3295,  -99.5816],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0158, device='cuda:0', dtype=torch.float64)
tensor([ -90.2731, -105.0935,  -84.7508, -112.0808,  -99.8459],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0173, device='cuda:0', dtype=torch.float64)
tensor([ -87.7380, -102.7115,  -84.7174, -110.6367,  -98.7582],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0177, device='cuda:0', dtype=torch.float64)
tensor([ -86.2308, -100.3009,  -83.7381, -108.4129,  -97.3892],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0136, device='cuda:0', dtype=torch.float64)
tensor([ -84.1120,  -96.4278,  -82.4993, -105.0137,  -95.2417],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0185, device='cuda:0', dtype=torch.float64)
tensor([ -83.2635,  -93.4502,  -81.4757, -102.2340,  -93.6564],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0164, device='cuda:0', dtype=torch.float64)
tensor([ -84.0838,  -92.0578,  -80.9534, -101.0350,  -93.3217],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0173, device='cuda:0', dtype=torch.float64)
tensor([ -87.0197,  -93.5579,  -81.0234, -102.0942,  -94.5466],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0188, device='cuda:0', dtype=torch.float64)
tensor([ -89.3688,  -94.6710,  -81.2661, -103.0299,  -95.5936],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0147, device='cuda:0', dtype=torch.float64)
tensor([ -91.2448,  -95.7975,  -81.5841, -104.3426,  -96.7259],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0163, device='cuda:0', dtype=torch.float64)
tensor([ -89.8326,  -95.1997,  -81.6384, -104.3409,  -96.4725],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0153, device='cuda:0', dtype=torch.float64)
tensor([ -89.1195,  -95.4519,  -81.8692, -105.3691,  -96.9835],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0159, device='cuda:0', dtype=torch.float64)
tensor([ -88.2547,  -96.7412,  -82.4495, -107.3949,  -97.9326],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0115, device='cuda:0', dtype=torch.float64)
tensor([ -88.0012,  -97.7984,  -83.0380, -109.0325,  -98.7406],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0136, device='cuda:0', dtype=torch.float64)
tensor([ -87.7724,  -98.5052,  -83.6095, -110.3328,  -99.3973],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0149, device='cuda:0', dtype=torch.float64)
tensor([ -87.0284,  -98.5778,  -84.0855, -110.8888,  -99.5171],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0158, device='cuda:0', dtype=torch.float64)
tensor([ -85.8847,  -98.6486,  -84.5556, -110.6701,  -99.1159],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0164, device='cuda:0', dtype=torch.float64)
tensor([ -85.5410,  -98.5945,  -84.7749, -110.5754,  -98.9475],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0167, device='cuda:0', dtype=torch.float64)
tensor([ -84.4007,  -97.2868,  -84.4529, -108.7933,  -97.6235],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0141, device='cuda:0', dtype=torch.float64)
tensor([ -85.3001,  -98.5510,  -84.2668, -108.6699,  -97.6572],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0155, device='cuda:0', dtype=torch.float64)
tensor([ -86.1548, -100.0770,  -84.4730, -109.4059,  -98.1785],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0170, device='cuda:0', dtype=torch.float64)
tensor([ -85.7072,  -99.5935,  -84.1016, -108.2259,  -97.3805],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0150, device='cuda:0', dtype=torch.float64)
tensor([ -84.9436,  -99.3776,  -84.2471, -108.1776,  -97.2100],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0150, device='cuda:0', dtype=torch.float64)
tensor([ -85.2690, -100.6810,  -84.5756, -109.3434,  -97.9270],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0150, device='cuda:0', dtype=torch.float64)
tensor([ -84.1716,  -99.6721,  -84.5448, -108.9684,  -97.4592],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0146, device='cuda:0', dtype=torch.float64)
tensor([ -82.9908,  -98.0218,  -84.1358, -107.6472,  -96.4431],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0166, device='cuda:0', dtype=torch.float64)
tensor([ -80.6714,  -95.2855,  -83.9507, -105.8621,  -94.8643],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0173, device='cuda:0', dtype=torch.float64)
tensor([ -80.3609,  -95.0654,  -84.0597, -106.1571,  -94.8456],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0185, device='cuda:0', dtype=torch.float64)
tensor([ -83.7268,  -99.1347,  -84.3651, -109.0446,  -97.0161],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0145, device='cuda:0', dtype=torch.float64)
tensor([ -89.9648, -105.1605,  -84.5028, -112.1786,  -99.9118],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0162, device='cuda:0', dtype=torch.float64)
tensor([ -97.7265, -110.8667,  -84.7187, -115.0669, -102.8989],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0179, device='cuda:0', dtype=torch.float64)
tensor([-106.2687, -118.8661,  -86.0118, -120.1923, -107.2182],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0167, device='cuda:0', dtype=torch.float64)
tensor([-110.7850, -123.9743,  -87.0886, -123.9167, -110.0663],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0166, device='cuda:0', dtype=torch.float64)
tensor([-111.6838, -126.9265,  -88.0693, -126.8513, -111.8173],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0158, device='cuda:0', dtype=torch.float64)
tensor([-105.6484, -122.0039,  -87.7983, -125.0165, -109.5758],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0170, device='cuda:0', dtype=torch.float64)
tensor([ -95.2038, -111.5301,  -86.6569, -119.2035, -104.3617],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0120, device='cuda:0', dtype=torch.float64)
tensor([ -86.0485, -102.5982,  -86.3551, -114.4913,  -99.9228],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0159, device='cuda:0', dtype=torch.float64)
tensor([ -78.7489,  -94.4384,  -86.5800, -109.9623,  -96.0368],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0164, device='cuda:0', dtype=torch.float64)
tensor([ -75.0174,  -89.8699,  -87.3431, -107.5706,  -94.2707],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0166, device='cuda:0', dtype=torch.float64)
tensor([ -73.2611,  -87.2849,  -87.7971, -106.0691,  -93.4455],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0192, device='cuda:0', dtype=torch.float64)
tensor([ -72.7402,  -86.9692,  -87.7927, -105.6675,  -93.2830],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0186, device='cuda:0', dtype=torch.float64)
tensor([ -74.2313,  -90.8476,  -87.3026, -107.4236,  -94.3414],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0190, device='cuda:0', dtype=torch.float64)
tensor([ -79.4915,  -98.8376,  -86.7287, -111.4362,  -97.4636],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0202, device='cuda:0', dtype=torch.float64)
tensor([ -87.1906, -107.3320,  -86.8239, -115.6017, -101.2190],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0162, device='cuda:0', dtype=torch.float64)
tensor([ -97.9830, -118.3772,  -87.9586, -121.1109, -106.4486],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0215, device='cuda:0', dtype=torch.float64)
tensor([-102.9318, -124.2485,  -88.9994, -123.9269, -108.9406],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0182, device='cuda:0', dtype=torch.float64)
tensor([-103.9198, -127.3238,  -89.9455, -125.1577, -109.6217],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0153, device='cuda:0', dtype=torch.float64)
tensor([-102.4834, -127.3572,  -90.4442, -124.6574, -108.8602],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0167, device='cuda:0', dtype=torch.float64)
tensor([ -98.4634, -123.2043,  -89.8339, -121.2273, -106.1439],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0163, device='cuda:0', dtype=torch.float64)
tensor([ -90.7784, -114.2048,  -88.4961, -115.2819, -101.3005],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0139, device='cuda:0', dtype=torch.float64)
tensor([ -84.9989, -107.1540,  -87.7231, -110.4810,  -97.3293],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0125, device='cuda:0', dtype=torch.float64)
tensor([ -81.5156, -103.4111,  -87.7753, -108.0587,  -95.1440],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0159, device='cuda:0', dtype=torch.float64)
tensor([ -80.7707, -103.8200,  -88.5322, -108.4446,  -95.0420],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0168, device='cuda:0', dtype=torch.float64)
tensor([ -80.5457, -105.0614,  -89.3201, -109.1049,  -95.2629],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0192, device='cuda:0', dtype=torch.float64)
tensor([ -82.0340, -108.7819,  -90.2468, -110.8134,  -96.4208],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0144, device='cuda:0', dtype=torch.float64)
tensor([ -85.1203, -114.9752,  -91.7572, -114.1153,  -98.7748],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0179, device='cuda:0', dtype=torch.float64)
tensor([ -87.8342, -120.1233,  -93.3564, -117.8518, -101.4660],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0146, device='cuda:0', dtype=torch.float64)
tensor([ -89.8511, -123.7874,  -94.5082, -120.7137, -103.6379],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0160, device='cuda:0', dtype=torch.float64)
tensor([ -90.1267, -125.1730,  -95.3768, -122.6589, -104.9986],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0180, device='cuda:0', dtype=torch.float64)
tensor([ -90.6854, -125.6838,  -95.1752, -123.6272, -106.0354],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0160, device='cuda:0', dtype=torch.float64)
tensor([ -91.5242, -124.2741,  -93.6629, -122.8885, -106.1752],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0130, device='cuda:0', dtype=torch.float64)
tensor([ -93.5224, -123.8195,  -92.5674, -122.8897, -106.9325],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0152, device='cuda:0', dtype=torch.float64)
tensor([ -95.9945, -123.4483,  -91.7163, -122.7305, -107.7464],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0132, device='cuda:0', dtype=torch.float64)
tensor([ -97.2688, -121.1605,  -90.8132, -121.5709, -107.8024],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0148, device='cuda:0', dtype=torch.float64)
tensor([ -97.9491, -118.8767,  -90.3114, -120.7224, -107.8718],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0146, device='cuda:0', dtype=torch.float64)
tensor([ -97.9643, -117.7049,  -90.2269, -120.4531, -108.0184],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0175, device='cuda:0', dtype=torch.float64)
tensor([ -96.2825, -117.8251,  -90.7359, -121.3201, -108.1369],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0185, device='cuda:0', dtype=torch.float64)
tensor([ -94.4552, -120.4809,  -92.3018, -124.1404, -109.1291],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0126, device='cuda:0', dtype=torch.float64)
tensor([ -93.8457, -124.7689,  -94.5844, -127.8421, -111.0160],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0145, device='cuda:0', dtype=torch.float64)
tensor([ -91.7966, -127.8173,  -97.3982, -130.6854, -112.2546],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0138, device='cuda:0', dtype=torch.float64)
tensor([ -89.7744, -129.3186, -100.1385, -132.6810, -113.0312],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0167, device='cuda:0', dtype=torch.float64)
tensor([ -90.9333, -134.5970, -103.7956, -137.4360, -116.1221],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0156, device='cuda:0', dtype=torch.float64)
tensor([ -93.8354, -140.6325, -106.2860, -141.6397, -119.2943],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0126, device='cuda:0', dtype=torch.float64)
tensor([ -98.2619, -148.4878, -108.6683, -146.4816, -123.2526],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0136, device='cuda:0', dtype=torch.float64)
tensor([-102.3279, -154.4338, -109.2182, -148.9186, -125.5973],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0123, device='cuda:0', dtype=torch.float64)
tensor([-103.0941, -155.3994, -108.4929, -148.2196, -125.4202],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0122, device='cuda:0', dtype=torch.float64)
tensor([-101.0954, -151.9655, -106.6991, -144.2910, -122.7865],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0151, device='cuda:0', dtype=torch.float64)
tensor([-102.3144, -150.9613, -104.3461, -140.9919, -121.2275],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0133, device='cuda:0', dtype=torch.float64)
tensor([-104.2971, -150.5683, -102.6575, -138.8492, -120.5818],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0102, device='cuda:0', dtype=torch.float64)
tensor([-106.4941, -150.8990, -101.8538, -137.9069, -120.6347],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0118, device='cuda:0', dtype=torch.float64)
tensor([-106.7410, -149.2373, -101.0120, -136.2492, -119.9524],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0114, device='cuda:0', dtype=torch.float64)
tensor([-107.8625, -149.1806, -100.5848, -135.7409, -120.1758],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0140, device='cuda:0', dtype=torch.float64)
tensor([-109.1155, -150.3210, -100.7012, -136.6204, -121.1602],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0111, device='cuda:0', dtype=torch.float64)
tensor([-110.5134, -152.8350, -101.2921, -138.2097, -122.5324],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0107, device='cuda:0', dtype=torch.float64)
tensor([-111.2104, -155.5435, -102.1741, -139.7039, -123.6579],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0129, device='cuda:0', dtype=torch.float64)
tensor([-109.9455, -155.6934, -102.7232, -140.2279, -123.8381],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0130, device='cuda:0', dtype=torch.float64)
tensor([-107.2957, -153.0528, -102.5579, -139.0402, -122.6886],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0112, device='cuda:0', dtype=torch.float64)
tensor([-108.1256, -154.3230, -102.9091, -139.7223, -123.3942],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0137, device='cuda:0', dtype=torch.float64)
tensor([-109.2906, -155.4815, -103.1083, -140.3396, -124.1719],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0147, device='cuda:0', dtype=torch.float64)
tensor([-110.1754, -157.3912, -103.7880, -141.4248, -125.1878],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0133, device='cuda:0', dtype=torch.float64)
tensor([-109.1143, -159.0882, -105.2395, -142.7512, -125.7326],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0123, device='cuda:0', dtype=torch.float64)
tensor([-108.1361, -161.8213, -107.2762, -144.8825, -126.6829],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0141, device='cuda:0', dtype=torch.float64)
tensor([-108.7859, -165.3377, -109.1097, -146.6629, -127.9802],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0105, device='cuda:0', dtype=torch.float64)
tensor([-110.1972, -169.2704, -110.7384, -148.1213, -129.2854],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0118, device='cuda:0', dtype=torch.float64)
tensor([-110.3238, -171.1155, -112.1993, -149.0851, -129.9149],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0121, device='cuda:0', dtype=torch.float64)
tensor([-109.9171, -171.1652, -112.9295, -148.7337, -129.7769],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0104, device='cuda:0', dtype=torch.float64)
tensor([-106.9676, -166.8140, -112.4105, -145.7634, -127.6308],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0098, device='cuda:0', dtype=torch.float64)
tensor([-106.5446, -164.1009, -111.3861, -142.8845, -126.1114],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0087, device='cuda:0', dtype=torch.float64)
tensor([-105.1377, -160.8724, -110.5469, -140.0405, -124.3560],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0100, device='cuda:0', dtype=torch.float64)
tensor([-106.0923, -160.7170, -110.1529, -138.3669, -123.7799],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0135, device='cuda:0', dtype=torch.float64)
tensor([-108.9986, -163.4675, -110.4457, -138.5807, -124.7725],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0130, device='cuda:0', dtype=torch.float64)
tensor([-115.4199, -172.9309, -112.3570, -141.8669, -128.2722],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0089, device='cuda:0', dtype=torch.float64)
tensor([-122.6333, -182.9057, -114.4255, -145.8738, -132.3930],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0098, device='cuda:0', dtype=torch.float64)
tensor([-125.4730, -187.5316, -115.7327, -147.6974, -134.2468],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0099, device='cuda:0', dtype=torch.float64)
tensor([-126.1896, -189.4160, -116.6177, -148.2089, -134.9156],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0117, device='cuda:0', dtype=torch.float64)
tensor([-126.5551, -192.0707, -118.2178, -149.5456, -135.9194],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0091, device='cuda:0', dtype=torch.float64)
tensor([-126.3839, -192.9117, -118.8421, -149.6890, -136.3098],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0100, device='cuda:0', dtype=torch.float64)
tensor([-125.5834, -191.5809, -118.4677, -148.4642, -135.9175],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0104, device='cuda:0', dtype=torch.float64)
tensor([-122.0635, -186.6299, -117.3273, -145.6577, -134.0052],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0074, device='cuda:0', dtype=torch.float64)
tensor([-119.5258, -183.4169, -116.7344, -144.0492, -132.8755],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0093, device='cuda:0', dtype=torch.float64)
tensor([-118.1967, -182.5426, -116.9113, -143.4784, -132.5719],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0100, device='cuda:0', dtype=torch.float64)
tensor([-117.7185, -182.4820, -117.1713, -143.7185, -132.9190],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0162, device='cuda:0', dtype=torch.float64)
tensor([-120.7826, -189.8767, -119.4628, -147.4334, -135.8564],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0081, device='cuda:0', dtype=torch.float64)
tensor([-125.5537, -199.5520, -122.2845, -152.2676, -139.7350],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0114, device='cuda:0', dtype=torch.float64)
tensor([-127.7334, -205.4614, -124.6325, -156.1547, -142.4943],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0082, device='cuda:0', dtype=torch.float64)
tensor([-130.9572, -212.1295, -126.8460, -160.1942, -145.6289],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0083, device='cuda:0', dtype=torch.float64)
tensor([-132.9214, -216.8507, -128.8379, -163.5293, -147.9987],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0101, device='cuda:0', dtype=torch.float64)
tensor([-130.8471, -215.3677, -129.7565, -163.9725, -147.8755],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0093, device='cuda:0', dtype=torch.float64)
tensor([-133.6340, -218.1250, -130.0476, -164.5331, -149.0593],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0070, device='cuda:0', dtype=torch.float64)
tensor([-135.4970, -219.0446, -129.7515, -164.0155, -149.4516],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0080, device='cuda:0', dtype=torch.float64)
tensor([-134.5096, -214.4874, -128.0722, -160.6531, -147.7134],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0075, device='cuda:0', dtype=torch.float64)
tensor([-134.2203, -209.9956, -126.2529, -156.9345, -146.0965],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0074, device='cuda:0', dtype=torch.float64)
tensor([-133.6351, -205.6510, -124.9471, -153.4272, -144.4058],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0072, device='cuda:0', dtype=torch.float64)
tensor([-133.1746, -202.6078, -124.1898, -150.9578, -143.2418],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0078, device='cuda:0', dtype=torch.float64)
tensor([-131.8515, -199.5543, -123.9233, -149.0887, -142.0757],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0093, device='cuda:0', dtype=torch.float64)
tensor([-132.3893, -200.5373, -124.6357, -149.2292, -142.5565],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0089, device='cuda:0', dtype=torch.float64)
tensor([-133.4649, -203.4007, -125.9126, -150.7575, -143.9421],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0058, device='cuda:0', dtype=torch.float64)
tensor([-134.9834, -206.9682, -127.4510, -152.8210, -145.7193],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0069, device='cuda:0', dtype=torch.float64)
tensor([-137.4347, -212.0029, -129.3151, -155.5286, -148.0821],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0069, device='cuda:0', dtype=torch.float64)
tensor([-141.0187, -218.8374, -131.6655, -159.1041, -151.1874],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0067, device='cuda:0', dtype=torch.float64)
tensor([-144.5358, -225.1375, -133.7406, -162.2935, -154.0774],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0079, device='cuda:0', dtype=torch.float64)
tensor([-144.5807, -227.7764, -135.3666, -164.4324, -155.4559],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0065, device='cuda:0', dtype=torch.float64)
tensor([-143.0537, -229.4039, -137.4234, -166.8390, -156.3942],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0053, device='cuda:0', dtype=torch.float64)
tensor([-142.3425, -232.0702, -139.7410, -169.4161, -157.6576],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0068, device='cuda:0', dtype=torch.float64)
tensor([-141.8171, -234.7481, -141.9416, -171.8006, -158.8770],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0059, device='cuda:0', dtype=torch.float64)
tensor([-143.3504, -239.3784, -144.1567, -174.5608, -160.8369],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0064, device='cuda:0', dtype=torch.float64)
tensor([-144.3521, -242.7056, -145.9307, -176.5014, -162.2567],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0065, device='cuda:0', dtype=torch.float64)
tensor([-143.4000, -243.9124, -147.6760, -177.8257, -162.8201],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0082, device='cuda:0', dtype=torch.float64)
tensor([-144.1127, -245.7282, -148.9670, -178.2537, -163.2920],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0054, device='cuda:0', dtype=torch.float64)
tensor([-146.9867, -249.8221, -150.0765, -178.9459, -164.4369],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0073, device='cuda:0', dtype=torch.float64)
tensor([-148.7478, -253.0094, -151.0221, -179.7480, -165.5029],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0059, device='cuda:0', dtype=torch.float64)
tensor([-149.9472, -254.4952, -151.3684, -179.6527, -165.9578],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0063, device='cuda:0', dtype=torch.float64)
tensor([-149.8994, -254.7209, -151.5758, -179.6120, -166.1651],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0096, device='cuda:0', dtype=torch.float64)
tensor([-149.0925, -253.7506, -151.2787, -178.8811, -165.9802],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0059, device='cuda:0', dtype=torch.float64)
tensor([-148.8791, -253.1105, -151.1240, -178.4036, -165.9829],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0054, device='cuda:0', dtype=torch.float64)
tensor([-147.4466, -251.3749, -151.0410, -177.5692, -165.4117],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0068, device='cuda:0', dtype=torch.float64)
tensor([-145.2672, -249.1818, -151.1642, -177.0338, -164.7331],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0074, device='cuda:0', dtype=torch.float64)
tensor([-142.5219, -246.3103, -151.0512, -176.1184, -163.7496],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0057, device='cuda:0', dtype=torch.float64)
tensor([-141.1269, -245.4320, -151.1713, -176.0577, -163.6621],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0042, device='cuda:0', dtype=torch.float64)
tensor([-140.9421, -246.2313, -151.5205, -176.5957, -164.1912],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0047, device='cuda:0', dtype=torch.float64)
tensor([-141.6791, -248.6308, -152.1383, -177.7174, -165.3277],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0046, device='cuda:0', dtype=torch.float64)
tensor([-142.8911, -252.1589, -153.1535, -179.3889, -166.8549],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0063, device='cuda:0', dtype=torch.float64)
tensor([-143.6763, -255.2333, -154.7345, -181.4696, -168.2791],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0046, device='cuda:0', dtype=torch.float64)
tensor([-144.9117, -259.2365, -156.6014, -184.0683, -170.0715],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0040, device='cuda:0', dtype=torch.float64)
tensor([-146.8548, -263.5340, -158.0971, -186.2817, -171.8986],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0074, device='cuda:0', dtype=torch.float64)
tensor([-150.4772, -268.6816, -159.0450, -187.9950, -173.9463],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0059, device='cuda:0', dtype=torch.float64)
tensor([-156.4613, -275.8883, -160.0142, -189.9864, -176.6848],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0058, device='cuda:0', dtype=torch.float64)
tensor([-161.0859, -282.4582, -161.5278, -192.6448, -179.3641],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0046, device='cuda:0', dtype=torch.float64)
tensor([-164.7255, -287.3768, -162.9710, -194.8149, -181.4351],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0037, device='cuda:0', dtype=torch.float64)
tensor([-167.0031, -290.4213, -164.1545, -196.2932, -182.8030],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0040, device='cuda:0', dtype=torch.float64)
tensor([-166.2564, -289.9468, -164.8865, -196.6812, -182.9266],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0049, device='cuda:0', dtype=torch.float64)
tensor([-163.0017, -286.6765, -165.4375, -196.2248, -182.0456],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0052, device='cuda:0', dtype=torch.float64)
tensor([-159.6470, -283.6515, -166.1747, -195.9526, -181.3253],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0063, device='cuda:0', dtype=torch.float64)
tensor([-154.6953, -279.3797, -167.4582, -195.6927, -180.2170],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0051, device='cuda:0', dtype=torch.float64)
tensor([-150.8558, -277.0889, -169.0181, -196.2680, -179.9580],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0038, device='cuda:0', dtype=torch.float64)
tensor([-149.0928, -277.3477, -170.7013, -197.3753, -180.4928],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0059, device='cuda:0', dtype=torch.float64)
tensor([-147.8969, -279.4314, -172.8352, -199.1620, -181.6120],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0042, device='cuda:0', dtype=torch.float64)
tensor([-148.8331, -283.2266, -174.4728, -200.9248, -183.2051],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0047, device='cuda:0', dtype=torch.float64)
tensor([-153.0571, -290.5080, -175.7446, -202.8968, -185.5757],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0058, device='cuda:0', dtype=torch.float64)
tensor([-158.5126, -299.2499, -176.9721, -205.1746, -188.4118],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0042, device='cuda:0', dtype=torch.float64)
tensor([-164.5684, -307.9888, -178.1505, -207.3173, -191.2446],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0034, device='cuda:0', dtype=torch.float64)
tensor([-171.5731, -316.4462, -178.9383, -208.9187, -194.0356],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0047, device='cuda:0', dtype=torch.float64)
tensor([-176.6444, -322.6401, -179.4732, -209.6278, -196.0348],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0036, device='cuda:0', dtype=torch.float64)
tensor([-180.3043, -327.6018, -180.0420, -210.2882, -197.7436],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0053, device='cuda:0', dtype=torch.float64)
tensor([-181.0790, -328.7241, -180.4103, -209.9240, -198.1189],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0030, device='cuda:0', dtype=torch.float64)
tensor([-181.9685, -329.9212, -180.8745, -209.8194, -198.6208],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0035, device='cuda:0', dtype=torch.float64)
tensor([-180.7712, -328.8507, -181.1807, -209.1155, -198.3040],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0033, device='cuda:0', dtype=torch.float64)
tensor([-179.5676, -328.1192, -181.5463, -208.6542, -198.1763],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0028, device='cuda:0', dtype=torch.float64)
tensor([-177.6116, -326.3103, -181.9087, -207.9442, -197.6855],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0031, device='cuda:0', dtype=torch.float64)
tensor([-176.6985, -325.3572, -182.3017, -207.3325, -197.3943],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0038, device='cuda:0', dtype=torch.float64)
tensor([-174.7993, -322.9696, -182.5895, -206.4534, -196.7200],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0028, device='cuda:0', dtype=torch.float64)
tensor([-172.4579, -320.2684, -183.0412, -205.7532, -196.0098],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0054, device='cuda:0', dtype=torch.float64)
tensor([-174.3084, -322.6420, -183.8759, -206.5547, -197.1500],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0026, device='cuda:0', dtype=torch.float64)
tensor([-175.8418, -325.0487, -184.9345, -207.6454, -198.3468],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0030, device='cuda:0', dtype=torch.float64)
tensor([-175.7944, -326.5805, -186.2529, -208.9063, -199.2944],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0028, device='cuda:0', dtype=torch.float64)
tensor([-176.5640, -328.6821, -187.4956, -210.1066, -200.3455],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0044, device='cuda:0', dtype=torch.float64)
tensor([-179.5999, -334.0700, -189.2971, -212.5977, -202.5761],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0033, device='cuda:0', dtype=torch.float64)
tensor([-184.4267, -342.1834, -191.5587, -216.0353, -205.6724],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0034, device='cuda:0', dtype=torch.float64)
tensor([-188.7806, -349.5651, -193.7189, -219.2397, -208.5445],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0051, device='cuda:0', dtype=torch.float64)
tensor([-191.5154, -354.4816, -195.5504, -221.9087, -210.7796],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0033, device='cuda:0', dtype=torch.float64)
tensor([-193.4597, -359.4651, -197.4897, -224.7732, -213.0736],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0051, device='cuda:0', dtype=torch.float64)
tensor([-191.2298, -360.6391, -199.4433, -226.9406, -214.1040],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0031, device='cuda:0', dtype=torch.float64)
tensor([-186.7478, -358.4574, -200.7110, -227.7326, -214.0245],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0027, device='cuda:0', dtype=torch.float64)
tensor([-181.3317, -355.0440, -201.7755, -227.9266, -213.5092],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0040, device='cuda:0', dtype=torch.float64)
tensor([-175.3886, -350.0888, -202.3115, -227.3407, -212.6107],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0038, device='cuda:0', dtype=torch.float64)
tensor([-170.3041, -346.7961, -203.5549, -227.4732, -212.3300],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0050, device='cuda:0', dtype=torch.float64)
tensor([-167.1771, -345.6834, -205.1697, -228.0089, -212.5849],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0038, device='cuda:0', dtype=torch.float64)
tensor([-165.2741, -345.8279, -207.0302, -228.8531, -213.1263],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0044, device='cuda:0', dtype=torch.float64)
tensor([-166.9580, -349.9589, -208.7706, -230.5493, -214.6909],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0038, device='cuda:0', dtype=torch.float64)
tensor([-168.6398, -354.4963, -210.4592, -232.3029, -216.3639],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0040, device='cuda:0', dtype=torch.float64)
tensor([-168.8571, -357.3092, -212.2170, -233.7755, -217.6002],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0041, device='cuda:0', dtype=torch.float64)
tensor([-170.1897, -359.6845, -212.9560, -234.0587, -218.2575],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0027, device='cuda:0', dtype=torch.float64)
tensor([-170.2770, -360.4658, -213.5941, -233.8532, -218.4552],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0037, device='cuda:0', dtype=torch.float64)
tensor([-171.7196, -362.5865, -214.2155, -233.8137, -218.9358],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0032, device='cuda:0', dtype=torch.float64)
tensor([-173.5964, -364.9884, -214.6057, -233.8389, -219.5620],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0038, device='cuda:0', dtype=torch.float64)
tensor([-178.8853, -370.6999, -214.7952, -234.4625, -221.0197],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0035, device='cuda:0', dtype=torch.float64)
tensor([-184.4561, -377.2188, -215.1353, -235.5472, -222.8494],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0028, device='cuda:0', dtype=torch.float64)
tensor([-191.5042, -384.7542, -215.3558, -236.7108, -224.9486],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0023, device='cuda:0', dtype=torch.float64)
tensor([-199.2774, -392.8228, -215.6238, -238.0299, -227.3869],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0029, device='cuda:0', dtype=torch.float64)
tensor([-205.3525, -399.3978, -216.0661, -239.4063, -229.6303],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0028, device='cuda:0', dtype=torch.float64)
tensor([-210.4137, -404.8202, -216.4331, -240.4873, -231.6071],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0027, device='cuda:0', dtype=torch.float64)
tensor([-213.1001, -407.3390, -216.6603, -240.8208, -232.6068],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0029, device='cuda:0', dtype=torch.float64)
tensor([-213.0649, -407.2824, -216.8807, -240.5407, -232.6694],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0038, device='cuda:0', dtype=torch.float64)
tensor([-210.8910, -406.7500, -217.8289, -240.5740, -232.5102],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0038, device='cuda:0', dtype=torch.float64)
tensor([-208.4130, -406.1760, -219.0088, -240.7628, -232.3815],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0025, device='cuda:0', dtype=torch.float64)
tensor([-205.3896, -405.6269, -220.5488, -241.1632, -232.2889],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0025, device='cuda:0', dtype=torch.float64)
tensor([-201.6924, -404.6734, -222.3839, -241.5955, -232.1128],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0022, device='cuda:0', dtype=torch.float64)
tensor([-200.1029, -405.9626, -224.2934, -242.6012, -232.7220],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0029, device='cuda:0', dtype=torch.float64)
tensor([-198.8186, -408.0146, -226.3387, -244.1166, -233.7485],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0030, device='cuda:0', dtype=torch.float64)
tensor([-196.6124, -408.8140, -228.3046, -245.2953, -234.4322],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0025, device='cuda:0', dtype=torch.float64)
tensor([-194.4488, -409.9934, -230.5120, -246.7032, -235.3512],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0030, device='cuda:0', dtype=torch.float64)
tensor([-193.8660, -412.1562, -232.4057, -248.1190, -236.4782],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0036, device='cuda:0', dtype=torch.float64)
tensor([-195.9854, -416.6942, -234.1377, -250.0183, -238.2510],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0025, device='cuda:0', dtype=torch.float64)
tensor([-199.1539, -422.1168, -235.6003, -251.8997, -240.2244],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0028, device='cuda:0', dtype=torch.float64)
tensor([-202.1832, -426.4572, -236.5105, -253.1729, -241.7960],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0035, device='cuda:0', dtype=torch.float64)
tensor([-205.6013, -431.1994, -237.6041, -254.4934, -243.4534],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0026, device='cuda:0', dtype=torch.float64)
tensor([-209.8673, -436.2728, -238.7012, -255.7311, -245.1269],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0021, device='cuda:0', dtype=torch.float64)
tensor([-214.7281, -441.4179, -239.6536, -256.9236, -246.8616],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0029, device='cuda:0', dtype=torch.float64)
tensor([-219.1124, -447.1811, -240.9802, -258.6613, -249.0146],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0025, device='cuda:0', dtype=torch.float64)
tensor([-222.5322, -452.2037, -242.2357, -259.9414, -250.8095],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0043, device='cuda:0', dtype=torch.float64)
tensor([-223.0288, -454.9825, -243.9154, -260.9641, -251.9948],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0024, device='cuda:0', dtype=torch.float64)
tensor([-222.9294, -457.4836, -245.8223, -262.1430, -253.1410],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0026, device='cuda:0', dtype=torch.float64)
tensor([-222.0825, -459.0358, -247.5909, -263.2138, -254.1015],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0021, device='cuda:0', dtype=torch.float64)
tensor([-221.2337, -460.5694, -249.4103, -264.3961, -255.0924],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0023, device='cuda:0', dtype=torch.float64)
tensor([-220.6193, -462.1788, -251.1190, -265.6407, -256.1372],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0021, device='cuda:0', dtype=torch.float64)
tensor([-219.6033, -463.0608, -252.6018, -266.4108, -256.8409],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0019, device='cuda:0', dtype=torch.float64)
tensor([-218.7721, -464.7251, -254.4313, -267.5279, -257.8263],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0024, device='cuda:0', dtype=torch.float64)
tensor([-216.5750, -464.3944, -255.8369, -268.0092, -258.1430],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0020, device='cuda:0', dtype=torch.float64)
tensor([-215.7220, -465.8117, -257.4088, -268.9396, -259.0314],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0029, device='cuda:0', dtype=torch.float64)
tensor([-215.4055, -468.1546, -259.3642, -270.3125, -260.2819],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0018, device='cuda:0', dtype=torch.float64)
tensor([-215.3849, -470.6428, -261.1846, -271.7102, -261.5760],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0019, device='cuda:0', dtype=torch.float64)
tensor([-216.0562, -473.9185, -263.0950, -273.3321, -263.0986],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0026, device='cuda:0', dtype=torch.float64)
tensor([-216.9277, -476.9907, -264.7614, -274.5122, -264.3513],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0025, device='cuda:0', dtype=torch.float64)
tensor([-217.7800, -480.0038, -266.3881, -275.8408, -265.6951],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0022, device='cuda:0', dtype=torch.float64)
tensor([-219.6097, -483.8196, -267.8680, -277.2566, -267.2683],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0019, device='cuda:0', dtype=torch.float64)
tensor([-219.5626, -485.5139, -269.3021, -278.0110, -268.1009],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0016, device='cuda:0', dtype=torch.float64)
tensor([-219.9846, -487.3345, -270.4625, -278.6000, -268.9093],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0018, device='cuda:0', dtype=torch.float64)
tensor([-221.5814, -490.6347, -271.7920, -279.6276, -270.2058],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0012, device='cuda:0', dtype=torch.float64)
tensor([-223.1170, -493.9708, -273.1651, -280.6350, -271.4950],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0019, device='cuda:0', dtype=torch.float64)
tensor([-224.9652, -497.7438, -274.8223, -281.8445, -272.9686],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0019, device='cuda:0', dtype=torch.float64)
tensor([-227.9028, -502.2905, -276.4256, -283.1444, -274.7156],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0021, device='cuda:0', dtype=torch.float64)
tensor([-231.9621, -508.2842, -278.2163, -284.9341, -277.0233],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0020, device='cuda:0', dtype=torch.float64)
tensor([-235.5341, -513.7043, -279.9537, -286.6416, -279.1287],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0021, device='cuda:0', dtype=torch.float64)
tensor([-238.8994, -518.8091, -281.6536, -288.2487, -281.1636],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0021, device='cuda:0', dtype=torch.float64)
tensor([-242.3218, -523.6299, -283.2323, -289.7122, -283.1131],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0022, device='cuda:0', dtype=torch.float64)
tensor([-244.4480, -527.4610, -284.8688, -291.0851, -284.7646],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0015, device='cuda:0', dtype=torch.float64)
tensor([-245.5956, -530.1258, -286.3174, -292.0542, -285.9101],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0019, device='cuda:0', dtype=torch.float64)
tensor([-246.3032, -532.4192, -287.6875, -292.8721, -286.9048],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0022, device='cuda:0', dtype=torch.float64)
tensor([-245.9414, -534.1610, -289.2902, -293.6790, -287.7952],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0019, device='cuda:0', dtype=torch.float64)
tensor([-246.4803, -536.2203, -290.6765, -294.3729, -288.7440],
       device='cuda:0', dtype=torch.float64)
Saved results to /home/idrissm/projects/def-mh541-ab/idrissm/neighborVCA/runs/results/tsp/tsp64_/home/idrissm/projects/def-mh541-ab/idrissm/neighborVCA/scripts/VCA/tsp/configHVCA64.json_20250925_034210.csv
